(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    213873,       4892]
NotebookOptionsPosition[    208594,       4739]
NotebookOutlinePosition[    208987,       4756]
CellTagsIndexPosition[    208944,       4753]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 StyleBox[
  RowBox[{"Basic", " ", "functions"}], "Section"]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.504440664191521*^9, 3.5044406709509077`*^9}, {
   3.5044407029257364`*^9, 3.504440748713355*^9}, 3.5044411367505503`*^9, 
   3.504441176771839*^9, 3.504441219115261*^9}],

Cell[BoxData[
 RowBox[{"Basic", " ", "functions"}]], "Output",
 CellChangeTimes->{3.504444088202363*^9, 3.504549327642063*^9}],

Cell["\<\
This section contains some basic functions, that are used an reused by the \
higher level methods.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.5044411367505503`*^9, 3.504441176771839*^9, 
  3.504441219115261*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Distance  : computes the distance to the next p - good number for a given n.  \
If n is p - good then the distance is zero.\
\>", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.5044407842363873`*^9, 3.5044408144481153`*^9}, 
   3.5044408907214775`*^9, {3.504441176771839*^9, 3.504441219115261*^9}, 
   3.50444212859528*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Distance", "[", 
   RowBox[{"n_", ",", " ", "p_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "threshold", ",", " ", "digits", ",", " ", "position", ",", " ", "found",
       ",", " ", "nextPower", ",", " ", "result"}], "}"}], ",", "\n", "  ", 
    RowBox[{
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"n", " ", "==", " ", "0"}], ",", " ", 
       RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", "\n", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Initialize", " ", "some", " ", "precomputed", " ", "local", " ", 
       "varables"}], " ", "*)"}], "\n", "  ", 
     RowBox[{"threshold", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", " ", "-", " ", "1"}], ")"}], "/", "2"}]}], ";", "\n", 
     "  ", 
     RowBox[{"digits", " ", "=", " ", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n", ",", " ", "p"}], "]"}]}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "find", " ", "the", " ", "first", " ", "digit", " ", "above", " ", 
       "the", " ", "threshold"}], " ", "*)"}], "\n", "  ", 
     RowBox[{"found", " ", "=", " ", 
      RowBox[{"-", "1"}]}], ";", "\n", "  ", 
     RowBox[{"For", "[", " ", 
      RowBox[{
       RowBox[{"position", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"position", " ", "<=", " ", 
        RowBox[{"Length", "[", "digits", "]"}]}], ",", " ", 
       RowBox[{"position", "++"}], ",", "\n", "   ", 
       RowBox[{"If", " ", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"digits", " ", "[", 
           RowBox[{"[", "position", "]"}], "]"}], " ", ">", " ", 
          "threshold"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"found", " ", "=", " ", "position"}], ";", " ", 
          RowBox[{"Break", "[", "]"}]}]}], "\n", "    ", "]"}]}], "\n", "   ",
       "]"}], ";", "\n", "  ", "\n", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"if", " ", "we", " ", 
        RowBox[{"didn", "'"}], "t", " ", "find", " ", "a", " ", "digit"}], 
       ",", " ", 
       RowBox[{
       "then", " ", "the", " ", "distance", " ", "is", " ", "zero"}]}], " ", 
      "*)"}], "\n", "  ", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"found", " ", "==", " ", 
        RowBox[{"-", "1"}]}], ",", " ", 
       RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";", "\n", "  ", "\n", 
     "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"we", " ", "did", " ", "find", " ", "a", " ", "faulty", " ", 
        RowBox[{"digit", ".", "  ", "Now"}], " ", "we", " ", "need", " ", 
        "to", " ", "look", " ", "before", " ", "it", " ", "for", " ", 
        "digits", " ", "that", " ", "equal", " ", "the", " ", 
        RowBox[{"threshold", ".", "\n", "  ", "If"}], " ", "we", " ", "would",
         " ", "not", " ", "count", " ", "these", " ", "then", " ", "we", " ", 
        "would", " ", "end", " ", "up", " ", "with", " ", "a", " ", "new", 
        " ", "value", " ", "which", " ", "is", " ", "still", " ", "not", " ", 
        "p"}], "-", 
       RowBox[{"good", " ", 
        RowBox[{"(", 
         RowBox[{"due", "\n", "  ", "to", " ", "the", " ", "carrying"}], 
         ")"}]}]}], " ", "*)"}], "\n", "  ", 
     RowBox[{"While", "[", " ", 
      RowBox[{
       RowBox[{"found", " ", ">", " ", "1"}], ",", "\n", "   ", 
       RowBox[{"If", " ", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"digits", " ", "[", 
           RowBox[{"[", 
            RowBox[{"found", " ", "-", " ", "1"}], "]"}], "]"}], " ", "==", 
          " ", "threshold"}], ",", " ", 
         RowBox[{"found", " ", "--"}], ",", " ", 
         RowBox[{"Break", "[", "]"}]}], "]"}]}], "\n", "   ", "]"}], ";", 
     "\n", "  ", "\n", "  ", 
     RowBox[{"(*", " ", 
      RowBox[{
      "if", " ", "we", " ", "have", " ", "gone", " ", "all", " ", "the", " ", 
       "way", " ", "to", " ", "the", " ", "start"}], "*)"}], "\n", "  ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"found", " ", "==", " ", "1"}], ",", "\n", "   ", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", "\n", "    ", 
         RowBox[{
          RowBox[{"nextPower", " ", "=", " ", 
           RowBox[{"p", "^", 
            RowBox[{"(", 
             RowBox[{"Length", "[", "digits", "]"}], ")"}]}]}], ";", "\n", 
          "    ", 
          RowBox[{"Return", "[", 
           RowBox[{"nextPower", " ", "-", " ", "n"}], "]"}]}]}], "\n", "    ",
         "]"}]}], "\n", "   ", "]"}], ";", "\n", "  ", "\n", "  ", "\n", "  ", 
     RowBox[{"nextPower", " ", "=", " ", 
      RowBox[{"p", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Length", "[", "digits", "]"}], " ", "+", " ", "1", " ", "-",
          " ", "found"}], ")"}]}]}], ";", "\n", "  ", 
     RowBox[{"Return", "[", 
      RowBox[{"nextPower", " ", "-", " ", 
       RowBox[{"FromDigits", "[", 
        RowBox[{
         RowBox[{"Take", "[", 
          RowBox[{"digits", ",", " ", 
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "digits", "]"}], " ", "+", " ", "1", " ",
               "-", " ", "found"}], ")"}]}]}], "]"}], ",", " ", "p"}], 
        "]"}]}], "]"}]}]}], "\n", "  ", "]"}]}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{
  3.5044408907214775`*^9, {3.504441176771839*^9, 3.504441219115261*^9}, 
   3.50444212859528*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
IsGoodForTuple : determines whether the given number n is good for each prime \
in the tuple.  This is NOT done in perallel to be able to quit as quickly as \
possible.\
\>", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5044410097912884`*^9, 3.504441023666082*^9}, 
   3.5044411367505503`*^9, {3.504441176771839*^9, 3.5044411868114133`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IsGoodForTuple", "[", 
   RowBox[{"n_", ",", " ", "tuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"distance", ",", " ", "index", ",", " ", "result"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", " ", "=", " ", "True"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"index", "=", "1"}], ",", " ", 
       RowBox[{"index", " ", "<=", " ", 
        RowBox[{"Length", "[", "tuple", "]"}]}], ",", " ", 
       RowBox[{"index", " ", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"distance", " ", "=", " ", 
         RowBox[{"Distance", "[", 
          RowBox[{"n", ",", " ", 
           RowBox[{"tuple", "[", 
            RowBox[{"[", "index", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"distance", " ", "\[NotEqual]", " ", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"result", "=", " ", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{"index", "=", " ", 
            RowBox[{
             RowBox[{"Length", "[", "tuple", "]"}], "+", "2"}]}], ";", 
           "\[IndentingNewLine]", "Break", ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.504441023666082*^9, 3.5044411868114133`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
magicGraham : returns the Graham value for a given tuple of primes.  The sign \
of this value tells you whether the series is finite (-1) or infinite (1)\
\>", "Item",
 CellChangeTimes->{{3.504442983501178*^9, 3.504443026563641*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"magicGraham", "[", "primeList_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"p", " ", "+", " ", "1"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "p"}], ")"}]}], "]"}], "/", 
      RowBox[{"Log", "[", "p", "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"p", ",", " ", "primeList"}], "}"}]}], "]"}], " ", "+", " ", 
   "1"}]}]], "Code"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
MagicWvdd : returns the Wvdd value for a given tuple of primes.  The sign of \
this value tells you whether the series is finite (-1) or infinite (1).  This \
series is related Log-wise to the magicGraham value\
\>", "Item",
 CellChangeTimes->{{3.504442983501178*^9, 3.504443026563641*^9}, {
  3.5044432376207128`*^9, 3.5044432619541044`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"MagicWvdd", "[", "tuple_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"1", "/", "p"}]}], ")"}], "^", 
       RowBox[{"Log", "[", "p", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "tuple"}], "}"}]}], "]"}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{"2", " ", "^", 
      RowBox[{"(", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Log", "[", "p", "]"}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"p", ",", " ", "tuple"}], "}"}]}], "]"}], ")"}]}], ")"}]}], 
   "-", 
   RowBox[{"1", "/", "E"}]}]}]], "Code",
 CellChangeTimes->{{3.50249845162342*^9, 3.502498459719883*^9}, {
  3.5024985057135134`*^9, 3.502498584640028*^9}, {3.5024986636985497`*^9, 
  3.5024986656506615`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
SuccessiveTuple : returns a tuple of successive primes with a given start \
(the index, not the prime) and a length\
\>", "Item",
 CellChangeTimes->{{3.504442983501178*^9, 3.504443026563641*^9}, {
  3.5044432376207128`*^9, 3.504443302841443*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SuccessiveTuple", "[", 
   RowBox[{"start_", ",", " ", "length_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Prime", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"start", ",", " ", 
     RowBox[{"start", "+", "length", "-", "1"}]}], "]"}], "]"}]}]], "Code"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
MultiplyDigits : returns the product of the digits in the list\
\>", "Item",
 CellChangeTimes->{{3.504442983501178*^9, 3.504443026563641*^9}, {
   3.5044432376207128`*^9, 3.504443302841443*^9}, 3.5044437654779043`*^9, {
   3.5044437962316637`*^9, 3.5044438077223206`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SuccessiveTuple", "[", 
   RowBox[{"start_", ",", " ", "length_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Prime", "[", 
   RowBox[{"Range", "[", 
    RowBox[{"start", ",", " ", 
     RowBox[{"start", "+", "length", "-", "1"}]}], "]"}], "]"}]}]], "Code"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MultiplyDigits", "[", "l_", "]"}], " ", ":=", " ", 
  RowBox[{"Product", "[", 
   RowBox[{"value", ",", " ", 
    RowBox[{"{", 
     RowBox[{"value", ",", " ", "l"}], "}"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.5013384187239704`*^9, 3.501338495155342*^9}, {
  3.5013385576289153`*^9, 3.5013385910798283`*^9}, {3.50444381661683*^9, 
  3.504443826788411*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
RandomTuple : returns a random tuple within the givn range with the given \
length.\
\>", "Item",
 CellChangeTimes->{{3.504442983501178*^9, 3.504443026563641*^9}, {
   3.5044432376207128`*^9, 3.504443302841443*^9}, 3.5044437654779043`*^9, {
   3.5044437962316637`*^9, 3.5044438077223206`*^9}, {3.5044439068019876`*^9, 
   3.5044439320324306`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomTuple", "[", 
   RowBox[{"range_", ",", " ", "length_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", ",", " ", "i", ",", ",", " ", "candidate"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", "=", " ", 
      RowBox[{"Range", "[", "length", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<=", " ", "length"}], ",", " ", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"candidate", " ", "=", 
         RowBox[{"Prime", "[", " ", 
          RowBox[{"RandomInteger", "   ", "[", 
           RowBox[{"{", 
            RowBox[{"2", ",", " ", "range"}], "}"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Take", "[", 
             RowBox[{"result", ",", 
              RowBox[{"i", "-", "1"}]}], "]"}], ",", "candidate"}], "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"candidate", " ", "=", " ", 
            RowBox[{"Prime", "[", " ", 
             RowBox[{"RandomInteger", "   ", "[", 
              RowBox[{"{", 
               RowBox[{"2", ",", " ", "range"}], "}"}], "]"}], "]"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"result", "[", 
          RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", "candidate"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Sort", "[", "result", "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.502389001428395*^9, 3.502389301097535*^9}, {
  3.502389339710743*^9, 3.502389433680118*^9}, {3.502389975909132*^9, 
  3.5023901721773577`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
RandomSuccesiveTuple : returns a random successive tuple within the givn \
range with the given length.\
\>", "Item",
 CellChangeTimes->{{3.504442983501178*^9, 3.504443026563641*^9}, {
   3.5044432376207128`*^9, 3.504443302841443*^9}, 3.5044437654779043`*^9, {
   3.5044437962316637`*^9, 3.5044438077223206`*^9}, {3.5044439068019876`*^9, 
   3.5044439587379584`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RandomSuccesiveTuple", "[", 
   RowBox[{"range_", ",", " ", "length_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", ",", " ", "i", ",", ",", " ", "candidate"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", "=", " ", 
      RowBox[{"Range", "[", "length", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"candidate", " ", "=", " ", 
      RowBox[{"RandomInteger", "   ", "[", 
       RowBox[{"{", 
        RowBox[{"2", ",", " ", 
         RowBox[{"range", "-", "length"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", " ", "length"}], ",", " ", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"result", "[", 
         RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
        RowBox[{"Prime", "[", 
         RowBox[{"candidate", "+", "i", "-", "1"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"Sort", "[", "result", "]"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.5024827451640615`*^9, 3.5024828660609765`*^9}}]
}, Closed]],

Cell["\<\
InfiniteOnly will return those prime tuples in a given prime tuple list which \
are supposed to be infinite according to the Graham criterion.\
\>", "Item",
 CellChangeTimes->{{3.5044445597173324`*^9, 3.504444588589984*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InfiniteOnly", "[", "primeTupleList_", "]"}], " ", ":=", " ", 
  RowBox[{"Select", "[", 
   RowBox[{"primeTupleList", ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"magicGraham", "[", "#", "]"}], ">", "0"}], "&"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.504444526293421*^9, 3.5044445559581175`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"Calculating", " ", "good", " ", "numbers"}], "Section"]], "Input",
 CellChangeTimes->{{3.504440664191521*^9, 3.5044406709509077`*^9}, {
  3.5044407029257364`*^9, 3.504440748713355*^9}, {3.5044410561239386`*^9, 
  3.504441065272462*^9}}],

Cell[BoxData[
 RowBox[{"Calculating", " ", "good", " ", "numbers"}]], "Output",
 CellChangeTimes->{3.50444408831137*^9, 3.5045493277070665`*^9}]
}, Open  ]],

Cell["\<\
There are algorithms that focus on voted values etc.  This section focusses \
on good values and their calculation.  There are methods for getting uniform \
filenames, reading them and calculating more of them\
\>", "Text",
 CellChangeTimes->{{3.5044410731679134`*^9, 3.504441123762807*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "FileNameForTuple : returns the filename to be used for good values of a \
given tuple.  Creates the directory if needed.\n   example : ",
 StyleBox["FileNameForTuple[{3, 5, 7}] returns D : \\Triangle\\DataSrc \\3 \
\\5 \\7\\Solutions.txt", "DisplayFormula"]
}], "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.5044418414208546`*^9, 3.504441947708934*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNameForTuple", "[", "primes_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fileName", ",", " ", "temp", ",", " ", "sep", ",", " ", "pPos"}], "}"}],
     ",", "\n", "    ", 
    RowBox[{
     RowBox[{"sep", " ", "=", " ", "\"\<\\\\\>\""}], ";", "\n", "    ", 
     RowBox[{"temp", " ", "=", " ", "\"\<d:\\\\triangle\\\\DataSrc\>\""}], 
     ";", "\n", "    ", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pPos", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"pPos", " ", "<=", " ", 
        RowBox[{"Length", "[", "primes", "]"}]}], ",", " ", 
       RowBox[{"pPos", "++"}], ",", "\n", "      ", 
       RowBox[{
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"temp", ",", " ", "sep", ",", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"primes", "[", 
             RowBox[{"[", "pPos", "]"}], "]"}], "]"}]}], "]"}]}], ";"}]}], 
      "\n", "      ", "]"}], ";", "\n", "    ", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"DirectoryQ", "[", "temp", "]"}], "]"}], ",", "\n", "   ", 
       RowBox[{"CreateDirectory", "[", "temp", "]"}]}], "\n", "   ", "]"}], 
     ";", "\n", "    ", 
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"temp", ",", " ", "\"\<\\\\Solutions.txt\>\""}], "]"}]}], ";", 
     "\n", "    ", 
     RowBox[{"fileName", " ", "=", " ", "temp"}], ";", "\n", "    ", 
     RowBox[{"Return", "[", "fileName", "]"}]}]}], "\n", "   ", 
   "]"}]}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.4991686792777376`*^9, 3.4991687372450533`*^9}, {
   3.504440902229136*^9, 3.5044409580623293`*^9}, 3.5044409949874415`*^9, {
   3.5044412600876045`*^9, 3.5044412789716845`*^9}, 3.504441947708934*^9, {
   3.5044424642714796`*^9, 3.50444250378974*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
CalGoodForTuple : calculates the good values for a given tuple up to a given \
height.
   This method will loop forever if the number of good values cannot be \
reached (ex for finite series)
This method will first read any previous results before continuing.
  There is no principle limit on the height of the series.\
\>", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.5044419636638465`*^9, 3.504442075702255*^9}, 
   3.5044421740098777`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcGoodForTuple", "[", 
   RowBox[{"tuple_", ",", " ", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "sorted", ",", "fileName", ",", " ", "file", ",", " ", "current", ",", 
      " ", "index", ",", " ", "dummy", ",", " ", 
      RowBox[{"range", "=", "1000"}], ",", " ", "continue", ",", " ", 
      "distance"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "always", " ", "make", " ", "sure", " ", "the", " ", "tuple", " ", "is", 
      " ", "sorted"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sorted", " ", "=", " ", 
      RowBox[{"Sort", "[", "tuple", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForTuple", "[", "sorted", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"index", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"current", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "read", " ", "any", " ", "existing", " ", "good", " ", "values"}], " ",
        "-", " ", 
       RowBox[{
       "actually", " ", "read", " ", "the", " ", "last", " ", "one", " ", 
        "and", " ", "store", " ", "it", " ", "in", " ", "the", " ", "current",
         " ", 
        RowBox[{"variable", ".", "   ", "Also"}], " ", "increment", " ", 
        "the", " ", "index", " ", "variable"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "fileName", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"continue", " ", "=", " ", "True"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"file", " ", "=", " ", 
           RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{"continue", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"dummy", " ", "=", " ", 
              RowBox[{"ReadList", "[", 
               RowBox[{"file", ",", " ", "Number", ",", " ", "range"}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"index", " ", "+=", " ", 
              RowBox[{"Length", "[", "dummy", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", " ", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "dummy", "]"}], " ", "\[NotEqual]", 
                " ", "0"}], ",", " ", 
               RowBox[{"current", " ", "=", " ", 
                RowBox[{"Last", "[", "dummy", "]"}]}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "dummy", "]"}], " ", "\[NotEqual]", 
                " ", "range"}], ",", " ", 
               RowBox[{"continue", " ", "=", " ", "False"}]}], "]"}], ";"}]}],
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"current", " ", "+=", "1"}], ";"}], "\[IndentingNewLine]", 
         ",", "\[IndentingNewLine]", 
         RowBox[{
         "\"\<Reading existing \>\"", " ", "<>", " ", "fileName", " ", "<>", 
          " ", "\"\< value \>\"", " ", "<>", " ", 
          RowBox[{"ToString", "[", "index", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "now", " ", "calculate", " ", "good", " ", "values", " ", "and", " ", 
       "append", " ", "them", " ", "to", " ", "the", " ", "file", " ", "for", 
       " ", "as", " ", "long", " ", "as", " ", "the", " ", "bound", " ", "is",
        " ", "not", " ", "reached"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"If", " ", "the", " ", "process", " ", "is", " ", "aborted"}], 
       ",", " ", 
       RowBox[{"the", " ", "file", " ", "is", " ", "closed"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"file", " ", "=", " ", 
      RowBox[{"OpenAppend", "[", "fileName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"CheckAbort", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"index", " ", "<", " ", "count"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"distance", " ", "=", " ", 
              RowBox[{"Max", "[", 
               RowBox[{"ParallelTable", "[", 
                RowBox[{
                 RowBox[{"Distance", "[", 
                  RowBox[{"current", ",", " ", "p"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", " ", "sorted"}], "}"}]}], "]"}], "]"}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"If", " ", "[", 
              RowBox[{
               RowBox[{"distance", " ", "\[Equal]", " ", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Write", "[", 
                 RowBox[{"file", ",", "current"}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"index", " ", "+=", "1"}], ";", "\[IndentingNewLine]", 
                RowBox[{"distance", "=", "1"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"current", " ", "+=", " ", "distance"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
          "\"\<Calculating good values \>\"", " ", "<>", " ", "fileName", " ",
            "<>", " ", "\"\<. \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"index", " ", "/", " ", "count"}], ")"}], " ", "*", 
                " ", "100000"}], "]"}], "/", "1000"}], "]"}], "]"}], " ", "<>",
            " ", "\"\<%.\>\""}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "file", "]"}], ";"}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Aborted at value : \>\"", " ", "<>", " ", 
          RowBox[{"ToString", "[", "index", "]"}]}], " ", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Abort", "[", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.5042959296301775`*^9, 3.504296434506055*^9}, {
  3.5042965131065507`*^9, 3.5042967176502495`*^9}, {3.5042984043897257`*^9, 
  3.5042985099427633`*^9}, {3.5042991152843866`*^9, 3.5042991200246577`*^9}, {
  3.504299574782668*^9, 3.504299600790156*^9}, {3.504300663966966*^9, 
  3.504300690290472*^9}, {3.5043259035785894`*^9, 3.5043259092079115`*^9}, {
  3.5044421740098777`*^9, 3.5044422862932997`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
GoodForTuple : returns a list of previously calculated good values for a \
given tuple.  Returns an empty list of no good values have been calculated.\
\[LineSeparator]The returned list can potentially be enormous.   Not to be \
used for lists containing several millions of items.\
\>", "Item",
 CellChangeTimes->{{3.5044428915319176`*^9, 3.5044429194945173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GoodForTuple", "[", "primes_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fileName", ",", " ", "result", ",", " ", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForTuple", "[", "primes", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"FileExistsQ", "[", "fileName", "]"}], "]"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "=", 
         RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", "  ", 
         RowBox[{"ReadList", "[", 
          RowBox[{"f", ",", "Number"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", " ", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
       ",", " ", 
       RowBox[{
       "\"\<Reading \>\"", " ", "<>", " ", "fileName", " ", "<>", " ", 
        "\"\< ... \>\""}]}], " ", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.499168829426326*^9, 3.499168955246522*^9}, {
   3.499169006278441*^9, 3.4991690065324554`*^9}, {3.499171764561206*^9, 
   3.4991717844133415`*^9}, {3.4991718169422016`*^9, 3.499171819589353*^9}, {
   3.499172352096811*^9, 3.4991723527698493`*^9}, {3.499174104348034*^9, 
   3.4991741053550916`*^9}, {3.49917909337139*^9, 3.4991791160786886`*^9}, 
   3.499179166822591*^9, {3.4991792636131268`*^9, 3.4991792640251503`*^9}, {
   3.499180045486848*^9, 3.499180055470419*^9}, {3.499180118944049*^9, 
   3.4991801240673423`*^9}, {3.499197949072874*^9, 3.4991979499449244`*^9}, {
   3.4993710812556686`*^9, 3.499371114234555*^9}, {3.4993711637553873`*^9, 
   3.499371183085493*^9}, {3.4993722044169097`*^9, 3.499372209735214*^9}, {
   3.4993768555099373`*^9, 3.499376877651203*^9}, 3.4993988314048862`*^9, {
   3.4994031706040745`*^9, 3.4994031725081835`*^9}, {3.4994045465027714`*^9, 
   3.499404548736899*^9}, {3.499411145883234*^9, 3.4994111482833714`*^9}, {
   3.4997825879725065`*^9, 3.499782603108372*^9}, {3.5002114064575787`*^9, 
   3.500211407859659*^9}, {3.500211565955702*^9, 3.500211567370783*^9}, {
   3.501257608919545*^9, 3.501257688635685*^9}, 3.501257784029853*^9, {
   3.502142482324915*^9, 3.502142502047043*^9}, {3.502142542418352*^9, 
   3.502142542870378*^9}, {3.5021426135784225`*^9, 3.5021426304963903`*^9}, {
   3.5022719488397636`*^9, 3.5022719620217867`*^9}, 3.502493807776807*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"Calculating", " ", "votes"}], "Section"]}]], "Input",
 CellChangeTimes->{{3.5044423150259438`*^9, 3.504442330923853*^9}}],

Cell[BoxData[
 RowBox[{"Calculating", " ", "votes"}]], "Output",
 CellChangeTimes->{3.5044440883673725`*^9, 3.504549327741069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "FileNameForVotes : returns the filename to be used for votes values of a \
given tuple.  Creates the directory if needed.\n   example : FileNameForVotes",
 StyleBox["[{3, 5, 7}] returns D : \\Triangle\\Votes \\3 \\5 \\7\\Votes.txt\
\[LineSeparator]In a vote file, we store the votes of each prime next to the \
voted values.  It is therefore a very verbose file and might be very big very \
quick.", "DisplayFormula"]
}], "Item",
 CellChangeTimes->{{3.504442654373353*^9, 3.5044426865531936`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNameForVotes", "[", "primes_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fileName", ",", " ", "temp", ",", " ", "sep", ",", " ", "pPos"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sep", " ", "=", " ", "\"\<\\\\\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", "\"\<d:\\\\triangle\\\\Votes\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pPos", " ", "=", "1"}], ",", " ", 
       RowBox[{"pPos", " ", "<=", " ", 
        RowBox[{"Length", "[", "primes", "]"}]}], ",", " ", 
       RowBox[{"pPos", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"temp", ",", " ", "sep", ",", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"primes", "[", 
             RowBox[{"[", "pPos", "]"}], "]"}], "]"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"DirectoryQ", "[", "temp", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PrintTemporary", "[", 
         RowBox[{"\"\<Creating directory \>\"", " ", "<>", " ", "temp"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"CreateDirectory", "[", "temp", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"temp", ",", " ", "\"\<\\\\Votes.txt\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fileName", " ", "=", " ", "temp"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "fileName", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.500211414243024*^9, 3.5002114160271263`*^9}, {
   3.5002114680821037`*^9, 3.5002114694961843`*^9}, {3.500211603218833*^9, 
   3.5002116045069065`*^9}, {3.5003705189011455`*^9, 
   3.5003705750703583`*^9}, {3.500370610300373*^9, 3.5003706172327695`*^9}, {
   3.501348213318189*^9, 3.501348220113578*^9}, 3.504442382685813*^9, {
   3.504442713150715*^9, 3.504442713900758*^9}, {3.504442775517282*^9, 
   3.5044427782304373`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"Calculating", " ", "voted", " ", "values"}], 
   "Section"]}]], "Input",
 CellChangeTimes->{{3.5044423150259438`*^9, 3.504442330923853*^9}, {
  3.504442371382167*^9, 3.5044423730232606`*^9}}],

Cell[BoxData[
 RowBox[{"Calculating", " ", "values", " ", "voted"}]], "Output",
 CellChangeTimes->{3.504444088401375*^9, 3.50454932776807*^9}]
}, Open  ]],

Cell[TextData[{
 "FileNameForVotedValues : returns the filename to be used for votes values \
of a given tuple.  Creates the directory if needed.\n   example : \
FileNameForVotedValues",
 StyleBox["[{3, 5, 7}] returns D : \\Triangle\\Votes \\3 \\5 \
\\7\\VotedValues.txt\[LineSeparator]In a voted value file, we only store the \
voted values, not the votes", "DisplayFormula"]
}], "Item",
 CellChangeTimes->{{3.504442654373353*^9, 3.5044426865531936`*^9}, {
  3.5044427341019135`*^9, 3.504442761357472*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNameForVotedValues", "[", "primes_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fileName", ",", " ", "temp", ",", " ", "sep", ",", " ", "pPos"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sep", " ", "=", " ", "\"\<\\\\\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", "\"\<d:\\\\triangle\\Votes\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pPos", " ", "=", "1"}], ",", " ", 
       RowBox[{"pPos", " ", "<=", " ", 
        RowBox[{"Length", "[", "primes", "]"}]}], ",", " ", 
       RowBox[{"pPos", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"temp", ",", " ", "sep", ",", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"primes", "[", 
             RowBox[{"[", "pPos", "]"}], "]"}], "]"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"DirectoryQ", "[", "temp", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PrintTemporary", "[", 
         RowBox[{"\"\<Creating directory \>\"", " ", "<>", " ", "temp"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"CreateDirectory", "[", "temp", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"temp", ",", " ", "\"\<\\\\VotedValues.txt\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fileName", " ", "=", " ", "temp"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "fileName", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.501234185437208*^9, 3.5012341967738566`*^9}, {
  3.501348225414881*^9, 3.5013482304741707`*^9}, {3.504442717732977*^9, 
  3.50444271830501*^9}, {3.504442781237609*^9, 3.5044427844657936`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNameForVotesPositions", "[", "primes_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fileName", ",", " ", "temp", ",", " ", "sep", ",", " ", "p", ",", " ", 
      "pPos"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sep", " ", "=", " ", "\"\<\\\\\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", "\"\<d:\\\\triangle\\Votes\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pPos", " ", "=", "1"}], ",", " ", 
       RowBox[{"pPos", " ", "<=", " ", 
        RowBox[{"Length", "[", "primes", "]"}]}], ",", " ", 
       RowBox[{"pPos", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"temp", ",", " ", "sep", ",", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"primes", "[", 
             RowBox[{"[", "pPos", "]"}], "]"}], "]"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"DirectoryQ", "[", "temp", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"\"\<Creating directory \>\"", " ", "<>", " ", "temp"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"CreateDirectory", "[", "temp", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"temp", ",", " ", "\"\<\\\\VoteOffsets.txt\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"fileName", " ", "=", " ", "temp"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "fileName", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.50087976804764*^9, 3.5008797798253136`*^9}, {
  3.5013482352814455`*^9, 3.501348239924711*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VotesForTuple", "[", "primes_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fileName", ",", " ", "result", ",", " ", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PrintTemporary", "[", "primes", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForVotes", "[", "primes", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "fileName", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"FileExistsQ", "[", "fileName", "]"}], "]"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "=", " ", 
         RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"ReadList", "[", "f", "]"}], ",", "1"}], "]"}]}], " ", 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       " ", 
       RowBox[{"\"\<Reading \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "fileName", "]"}]}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.500211394473893*^9, 3.5002113957969694`*^9}, {
   3.5002115298926387`*^9, 3.5002115898860703`*^9}, {3.500211625738121*^9, 
   3.5002116656424036`*^9}, {3.501257703642912*^9, 3.501257740848977*^9}, 
   3.5012577805042467`*^9, {3.501801695359648*^9, 3.501801722651209*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VotedValuesForTuple", "[", 
   RowBox[{"primes_", ",", " ", "stopAt_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fileName", ",", " ", "result", ",", " ", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForVotedValues", "[", "primes", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"FileExistsQ", "[", "fileName", "]"}], "]"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "=", 
         RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"f", ",", "Expression", ",", "  ", "stopAt"}], "]"}]}], " ",
         ";", "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       " ", 
       RowBox[{"\"\<Reading \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "fileName", "]"}]}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", " ", "[", "result", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.501234158385661*^9, 3.5012341726264753`*^9}, {
  3.5012344724736257`*^9, 3.501234475409794*^9}, {3.5012575181585855`*^9, 
  3.501257548282239*^9}, {3.501938627813303*^9, 3.5019386371528373`*^9}, {
  3.502386696843388*^9, 3.5023867011177955`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"magicGraham2", "[", "tuple_", "]"}], " ", ":=", " ", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"magicGraham", "[", "tuple", "]"}], "/", 
    RowBox[{"Length", "[", "tuple", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.501705321283863*^9, 3.5017053564258733`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNameForVotedValuesSummary", "[", "range_", "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "result", " ", "=", " ", "\"\<d:\\\\Triangle\\\\Votes\\\\Summary\>\""}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"DirectoryQ", "[", "result", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"CreateDirectory", "[", "result", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{
      "result", " ", "<>", " ", "\"\<\\\\VotedValuesAtHeight-\>\"", " ", "<>",
        " ", 
       RowBox[{"ToString", "[", "range", "]"}], " ", "<>", " ", 
       "\"\<.txt\>\""}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.501236879907323*^9, 3.5012370187382636`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcVotedValuesSummaryForRange", "[", 
   RowBox[{"tupleList_", ",", " ", "range_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tuplePos", ",", " ", "tuple", ",", " ", "fileName", ",", " ", "values", 
      ",", " ", "found", ",", " ", "doneTuples", ",", " ", "votesVector", ",",
       "f", ",", " ", "result"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "first", " ", "read", " ", "whatever", " ", "has", " ", "been", " ", 
      "written", " ", "before"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForVotedValuesSummary", "[", "range", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "fileName", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", " ", "=", 
         RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"values", " ", "=", " ", 
         RowBox[{"ReadList", "[", 
          RowBox[{"f", ",", " ", "Expression"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       " ", 
       RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"values", " ", "=", 
        RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "retrieve", " ", "a", " ", "list", " ", "of", " ", "just", " ", "the", 
       " ", "tuples"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"doneTuples", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", " ", "values"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"now", " ", "loop", " ", "over", " ", "all", " ", "tuples"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"tuplePos", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"tuplePos", " ", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "tupleList", "]"}]}], ",", " ", 
         RowBox[{"tuplePos", " ", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tuple", " ", "=", " ", 
           RowBox[{"Sort", "[", 
            RowBox[{"tupleList", "[", 
             RowBox[{"[", "tuplePos", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"found", " ", "=", " ", "False"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ArrayDepth", "[", 
              RowBox[{"Position", "[", 
               RowBox[{"doneTuples", ",", " ", "tuple"}], "]"}], "]"}], 
             "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "found", " ", "*)"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"(*", "else", " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"votesVector", " ", "=", " ", 
              RowBox[{"DynamicVoteList", "[", 
               RowBox[{"tuple", ",", " ", "range"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"doneTuples", " ", "=", " ", 
              RowBox[{"Append", "[", 
               RowBox[{"doneTuples", ",", " ", "tuple"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", " ", "[", 
                RowBox[{"\"\<Writing : \>\"", " ", "<>", " ", "fileName"}], 
                "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"f", "=", " ", 
              RowBox[{"OpenAppend", "[", 
               RowBox[{"fileName", ",", " ", 
                RowBox[{"PageWidth", "\[Rule]", "40000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Write", "[", 
              RowBox[{"f", ",", " ", 
               RowBox[{"{", 
                RowBox[{"tuple", ",", " ", 
                 RowBox[{
                  RowBox[{"Last", "[", "votesVector", "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Close", "[", "f", "]"}], ";"}]}], "\[IndentingNewLine]",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ToString", "[", "tuplePos", "]"}], " ", "<>", " ", 
        "\"\< - \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
        "\"\< - \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"Length", "[", "tupleList", "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", " ", "=", " ", 
      RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", "=", " ", 
      RowBox[{"ReadList", "[", 
       RowBox[{"f", ",", " ", "Expression"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "f", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.501239329288267*^9, 3.501239338585884*^9}, {
  3.501249294655529*^9, 3.5012493014559183`*^9}, {3.501249704543974*^9, 
  3.5012497061260643`*^9}, {3.501257891966442*^9, 3.5012579170200863`*^9}, {
  3.5012579539921513`*^9, 3.5012580399951024`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcVotedValuesSummaryForRangePure", "[", 
   RowBox[{"tupleList_", ",", " ", "range_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tuplePos", ",", " ", "tuple", ",", " ", "fileName", ",", " ", "values", 
      ",", " ", "found", ",", " ", "doneTuples", ",", " ", "f", ",", " ", 
      "result", ",", " ", "key"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "first", " ", "read", " ", "whatever", " ", "has", " ", "been", " ", 
      "written", " ", "before"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForVotedValuesSummary", "[", "range", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "fileName", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", " ", "=", 
         RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"values", " ", "=", " ", 
         RowBox[{"ReadList", "[", 
          RowBox[{"f", ",", " ", "Expression"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       " ", 
       RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"values", " ", "=", 
        RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "retrieve", " ", "a", " ", "list", " ", "of", " ", "just", " ", "the", 
       " ", "tuples"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"doneTuples", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", " ", "values"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"doneTuples", " ", "=", " ", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"MultiplyDigits", "[", "#", "]"}], "&"}], ",", " ", 
        "doneTuples"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"now", " ", "loop", " ", "over", " ", "all", " ", "tuples"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"tuplePos", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"tuplePos", " ", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "tupleList", "]"}]}], ",", " ", 
         RowBox[{"tuplePos", " ", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tuple", " ", "=", " ", 
           RowBox[{"Sort", "[", 
            RowBox[{"tupleList", "[", 
             RowBox[{"[", "tuplePos", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"key", " ", "=", " ", 
           RowBox[{"MultiplyDigits", "[", "tuple", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"found", " ", "=", " ", "False"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"doneTuples", ",", " ", "key"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "found", " ", "*)"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"(*", "else", " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"result", " ", "=", " ", 
              RowBox[{"VotedValueAt", "[", 
               RowBox[{"tuple", ",", " ", "range"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"doneTuples", " ", "=", " ", 
              RowBox[{"Append", "[", 
               RowBox[{"doneTuples", ",", " ", "key"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", " ", "[", 
                RowBox[{"\"\<Writing : \>\"", " ", "<>", " ", "fileName"}], 
                "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"f", "=", " ", 
              RowBox[{"OpenAppend", "[", 
               RowBox[{"fileName", ",", " ", 
                RowBox[{"PageWidth", "\[Rule]", "40000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Write", "[", 
              RowBox[{"f", ",", " ", 
               RowBox[{"{", 
                RowBox[{"tuple", ",", " ", "result"}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Close", "[", "f", "]"}], ";"}]}], "\[IndentingNewLine]",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ToString", "[", "tuplePos", "]"}], " ", "<>", " ", 
        "\"\< - \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
        "\"\< - \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"Length", "[", "tupleList", "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", " ", "=", " ", 
      RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", "=", " ", 
      RowBox[{"ReadList", "[", 
       RowBox[{"f", ",", " ", "Expression"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "f", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.501271383319179*^9, 3.501271393108739*^9}, {
  3.5012714533021817`*^9, 3.501271467644002*^9}, {3.501338122434024*^9, 
  3.5013381426041775`*^9}, {3.5013386114649944`*^9, 3.5013386929466553`*^9}, {
  3.5014193567789516`*^9, 3.5014193807513227`*^9}, {3.5019384805758815`*^9, 
  3.501938542174405*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VoteVectorsForTuple", "[", 
   RowBox[{"primes_", ",", " ", "stopAt_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fileName", ",", " ", "result", ",", " ", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForVotes", "[", "primes", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"FileExistsQ", "[", "fileName", "]"}], "]"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"PrintTemporary", "[", 
        RowBox[{
        "\"\<Reading :\>\"", " ", "<>", " ", "fileName", " ", "<>", " ", 
         "\"\< ... (\>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "stopAt", "]"}], " ", "<>", " ", 
         "\"\< values )\>\""}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"f", " ", "=", 
      RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"ReadList", "[", 
       RowBox[{"f", ",", "Expression", ",", "  ", "stopAt"}], "]"}]}], " ", 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "f", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"PrintTemporary", "[", 
        RowBox[{"\"\<Done.  Largest Value \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", " ", 
          RowBox[{"N", "[", 
           RowBox[{"Log", "[", 
            RowBox[{"10", ",", 
             RowBox[{
              RowBox[{"Last", "[", "result", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "]"}], " ", "<>",
          " ", "\"\<  -  \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "result", "]"}], "]"}], " ", "<>", " ", 
         "\"\< values read.\>\""}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Return", " ", "[", "result", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5003660598911047`*^9, 3.5003661106940107`*^9}, {
   3.5003670527458925`*^9, 3.5003670783573575`*^9}, {3.5003671111962357`*^9, 
   3.5003671447061524`*^9}, {3.5003671811872387`*^9, 3.500367202796475*^9}, {
   3.5003673271255865`*^9, 3.5003673352240496`*^9}, 3.500368201085574*^9, {
   3.5003682793540506`*^9, 3.5003682825452332`*^9}, {3.500368458445294*^9, 
   3.500368466682765*^9}, {3.5003685096592236`*^9, 3.5003685127033978`*^9}, {
   3.500368559473072*^9, 3.5003685990513363`*^9}, {3.5003689519215193`*^9, 
   3.5003689579378633`*^9}, {3.500404589737674*^9, 3.500404663638901*^9}, {
   3.5005331967136292`*^9, 3.5005332466564856`*^9}, {3.500533278477306*^9, 
   3.500533287481821*^9}, {3.500626360633301*^9, 3.5006263863547716`*^9}, {
   3.501191132525938*^9, 3.5011911633671923`*^9}, {3.5011913600211377`*^9, 
   3.501191366167548*^9}, {3.50119759015016*^9, 3.5011976130978003`*^9}, {
   3.501234048166357*^9, 3.5012340545967245`*^9}, {3.50123849637978*^9, 
   3.501238508326463*^9}, {3.5012394720909185`*^9, 3.501239487878146*^9}, {
   3.501257769241027*^9, 3.5012578180847125`*^9}, {3.501258664718172*^9, 
   3.501258689303815*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphForNumber2", "[", 
   RowBox[{"n_", ",", "p_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "result", ",", " ", "pos", ",", " ", "digs", ",", "f", ",", "t", ",", 
      " ", "lbl"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"digs", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"n", ",", "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"pos", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"t", "=", " ", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{"FromDigits", "[", 
         RowBox[{
          RowBox[{"Take", "[", 
           RowBox[{"digs", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "pos"}], "}"}]}], "]"}], ",", "p"}], "]"}], 
        "]"}], " ", "<>", " ", "\"\<-\>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"Length", "[", "digs", "]"}], "-", "pos"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "digs", "]"}], "\[Equal]", "1"}], ",", " ", 
       RowBox[{"t", "=", "n"}]}], "]"}], ";", "\[IndentingNewLine]", " ", 
     RowBox[{"lbl", "=", 
      RowBox[{"ToString", "[", 
       RowBox[{"digs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\"\<Start\>\"", " ", "->", " ", "t"}], "  ", ",", "lbl"}], 
        "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pos", "=", "1"}], ",", " ", 
       RowBox[{"pos", " ", "<", " ", 
        RowBox[{"Length", "[", "digs", "]"}]}], " ", ",", " ", 
       RowBox[{"pos", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "=", " ", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"FromDigits", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"digs", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "pos"}], "}"}]}], "]"}], ",", "p"}], "]"}], 
           "]"}], " ", "<>", " ", "\"\<-\>\"", " ", "<>", " ", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"Length", "[", "digs", "]"}], "-", "pos"}], "]"}]}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"t", "=", " ", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{"FromDigits", "[", 
            RowBox[{
             RowBox[{"Take", "[", 
              RowBox[{"digs", ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{"pos", "+", "1"}]}], "}"}]}], "]"}], ",", "p"}], 
            "]"}], "]"}], " ", "<>", " ", "\"\<-\>\"", " ", "<>", " ", 
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"Length", "[", "digs", "]"}], "-", "pos", "-", "1"}], 
           "]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"pos", " ", "==", " ", 
           RowBox[{
            RowBox[{"Length", "[", "digs", "]"}], "-", "1"}]}], ",", " ", 
          RowBox[{"t", "=", "n"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"lbl", "=", 
         RowBox[{"ToString", "[", 
          RowBox[{"digs", "[", 
           RowBox[{"[", 
            RowBox[{"pos", "+", "1"}], "]"}], "]"}], " ", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"result", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"f", "\[Rule]", "t"}], " ", ",", "lbl"}], "}"}]}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQnZGz6M4r4VeOf/JjnoHoC3ebP4LoCQtv/gbRRkvY
OF4D6ZnrFERAtEZ9oASITnI6pAGi5/vFeoDobeZTwbTT7IAcEN3e3AWmX0kc
qgTRT1o/gOkoHrPjIJrlzPwTIDptyrKrIFqBo/EFiH62z+w3iL75W5zxDZCu
L1MXAdF5YeFger7HLQkQ7T9rrgyIPvRjxxIQ3RzMsgNEP5qpW6ss8srxSvij
HhAty8k+HUQ/kZcA04wiGcIGQPqvz0wZEL3rzNV5IPqJ0gMwrbAk4oIhkP60
6ukVEB3tkn4bRP9buwNMAwBEGZea
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"InternalCalculateVotes", "[", 
   RowBox[{"primes_", ",", " ", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "current", ",", "  ", "maxdist", ",", " ", "distanceTable", ",", " ", 
      "pos", ",", " ", "fileName", ",", " ", "previous", ",", " ", "result", 
      ",", "f"}], " ", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"previous", " ", "=", " ", 
      RowBox[{"VoteVectorsForTuple", "[", 
       RowBox[{"primes", ",", "count"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "previous", "]"}], "\[GreaterEqual]", " ", 
        "count"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Take", "[", 
         RowBox[{"previous", ",", "count"}], "]"}]}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "start", " ", "of", " ", "giant", " ", "else", " ", "clause"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "previous", "]"}], "==", "0"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pos", " ", "=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{"current", " ", "=", " ", "0"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pos", " ", "=", " ", 
            RowBox[{"Length", "[", "previous", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"current", " ", "=", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"previous", "[", 
               RowBox[{"[", "pos", "]"}], "]"}], " ", "[", 
              RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"previous", "[", 
                RowBox[{"[", "pos", "]"}], "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"fileName", " ", "=", " ", 
         RowBox[{"FileNameForVotes", "[", "primes", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"pos", "<=", " ", "count"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "current", "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"distanceTable", " ", "=", " ", 
            RowBox[{"ParallelTable", "[", 
             RowBox[{
              RowBox[{"Distance", "[", 
               RowBox[{"current", ",", " ", "p"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"p", ",", " ", "primes"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"f", " ", "=", " ", 
            RowBox[{"OpenAppend", "[", 
             RowBox[{"fileName", ",", " ", 
              RowBox[{"PageWidth", "\[Rule]", "40000"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Write", "[", 
            RowBox[{"f", ",", " ", 
             RowBox[{"{", 
              RowBox[{"current", ",", "distanceTable"}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Close", "[", "f", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"pos", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"If", " ", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{"pos", ",", "10000"}], "]"}], "\[Equal]", "0"}], ",",
                " ", 
               RowBox[{"PrintTemporary", "[", 
                RowBox[{"\"\< Calculating votes :\>\"", " ", "<>", " ", 
                 RowBox[{"ToString", "[", "pos", "]"}], " ", "<>", " ", 
                 "\"\< / \>\"", " ", "<>", " ", 
                 RowBox[{"ToString", "[", "count", "]"}], " ", "<>", " ", 
                 "\"\< - \>\"", " ", "<>", " ", 
                 RowBox[{"ToString", "[", 
                  RowBox[{"N", "[", 
                   RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "current"}], "]"}], "]"}], "]"}]}], 
                "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"maxdist", " ", "=", " ", 
            RowBox[{"Max", "[", "distanceTable", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"maxdist", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"current", " ", "+=", "1"}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"current", " ", "+=", " ", "maxdist"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"result", "=", 
         RowBox[{"VoteVectorsForTuple", "[", 
          RowBox[{"primes", ",", "count"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"end", " ", "of", " ", "giant", " ", "else", " ", "clause"}], 
       " ", "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5002493560641723`*^9, 3.5002494093442197`*^9}, {
   3.500249444695242*^9, 3.5002494628282785`*^9}, {3.5002496196362476`*^9, 
   3.5002496200722723`*^9}, {3.500304491016652*^9, 3.500304498587085*^9}, {
   3.500315183257213*^9, 3.5003152341641245`*^9}, {3.5003154392038527`*^9, 
   3.500315529305006*^9}, {3.5003659566071973`*^9, 3.500366029287354*^9}, {
   3.5003661233027315`*^9, 3.5003663514337797`*^9}, {3.500366385228713*^9, 
   3.5003663876398506`*^9}, 3.5003664323194065`*^9, {3.500366476942959*^9, 
   3.500366502984448*^9}, {3.500366561430791*^9, 3.500366805920775*^9}, {
   3.5003668503043137`*^9, 3.5003668566696777`*^9}, {3.5003669050974474`*^9, 
   3.5003669132449136`*^9}, {3.5003670014479585`*^9, 3.500367023834239*^9}, {
   3.5003672421987286`*^9, 3.5003672458859396`*^9}, {3.5003672842931366`*^9, 
   3.5003672891334133`*^9}, {3.500367350649932*^9, 3.5003673540651274`*^9}, {
   3.5003673885621004`*^9, 3.5003674016458483`*^9}, {3.500367449971613*^9, 
   3.5003674680476465`*^9}, 3.500367572113599*^9, {3.500368210950138*^9, 
   3.500368211929194*^9}, {3.5003682508684216`*^9, 3.500368254314618*^9}, {
   3.500368424218336*^9, 3.500368429738652*^9}, {3.5003684754252653`*^9, 
   3.5003684797185106`*^9}, {3.500368647952133*^9, 3.5003686816930633`*^9}, {
   3.500368896699361*^9, 3.500368903923774*^9}, {3.5003691702800083`*^9, 
   3.500369199904703*^9}, {3.500395605255241*^9, 3.500395605567241*^9}, {
   3.500448649806766*^9, 3.5004486709459753`*^9}, {3.500457020752557*^9, 
   3.500457068836307*^9}, {3.500493976932329*^9, 3.5004940005166783`*^9}, {
   3.5004941170363426`*^9, 3.5004941403026733`*^9}, {3.500732505069415*^9, 
   3.50073250778557*^9}, 3.500752896248724*^9, 3.5011945467595987`*^9, {
   3.5011954769548483`*^9, 3.5011955612573967`*^9}, 3.501196343848371*^9, {
   3.501231697465904*^9, 3.501231702580197*^9}, {3.5012492631107254`*^9, 
   3.5012492697401047`*^9}, {3.5012496896381207`*^9, 3.501249691629235*^9}, {
   3.5012587977084055`*^9, 3.501258798192006*^9}, {3.501260916428029*^9, 
   3.5012609638989124`*^9}, {3.5013200619154353`*^9, 3.5013200640705585`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DynamicVotedValues", "[", 
   RowBox[{"primes_", ",", " ", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "current", ",", "  ", "maxdist", ",", " ", "distanceTable", ",", " ", 
      "pos", ",", " ", "fileName", ",", " ", "previous", ",", " ", "result"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForVotedValues", "[", "primes", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"previous", " ", "=", " ", 
      RowBox[{"VotedValuesForTuple", "[", 
       RowBox[{"primes", ",", "count"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "previous", "]"}], "\[GreaterEqual]", " ", 
        "count"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Take", "[", 
         RowBox[{"previous", ",", "count"}], "]"}]}], "\[IndentingNewLine]", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "start", " ", "of", " ", "giant", " ", "else", " ", "clause"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "previous", "]"}], "==", "0"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pos", " ", "=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{"current", " ", "=", " ", "0"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pos", " ", "=", " ", 
            RowBox[{"Length", "[", "previous", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"current", " ", "=", " ", 
            RowBox[{"previous", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], " ", ";", 
           "\[IndentingNewLine]", 
           RowBox[{"current", " ", "+=", " ", 
            RowBox[{"Max", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Distance", "[", 
                RowBox[{"current", ",", " ", "p"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"p", ",", " ", "primes"}], "}"}]}], "]"}], "]"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"pos", "<=", " ", "count"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", "current", "]"}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"distanceTable", " ", "=", " ", 
               RowBox[{"ParallelTable", "[", 
                RowBox[{
                 RowBox[{"Distance", "[", 
                  RowBox[{"current", ",", " ", "p"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", " ", "primes"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"With", " ", "[", "\[IndentingNewLine]", " ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"file", " ", "=", " ", 
                  RowBox[{"OpenAppend", "[", 
                   RowBox[{"fileName", ",", " ", 
                    RowBox[{"PageWidth", "\[Rule]", "40000"}]}], "]"}]}], 
                 "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Write", "[", 
                  RowBox[{"file", ",", " ", "current"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Close", "[", "file", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"pos", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"If", " ", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{"pos", ",", "10000"}], "]"}], "\[Equal]", "0"}], 
                  ",", " ", 
                  RowBox[{"PrintTemporary", "[", 
                   RowBox[{"\"\< Calculating votes :\>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "pos", "]"}], " ", "<>", " ", 
                    "\"\< / \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "count", "]"}], " ", "<>", " ", 
                    "\"\< - \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "current"}], "]"}], "]"}], "]"}]}], 
                   "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"maxdist", " ", "=", " ", 
               RowBox[{"Max", "[", "distanceTable", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"maxdist", "\[Equal]", "0"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"current", " ", "+=", "1"}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"current", " ", "+=", " ", "maxdist"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}], "\[IndentingNewLine]", ",", " ", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"pos", "/", "count"}], " ", "*", " ", "10000"}], 
               "]"}], "/", "100"}], "]"}], "]"}], " ", "<>", " ", 
           "\"\< % --->\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", "current"}], "]"}], "]"}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"result", "=", 
         RowBox[{"VotedValuesForTuple", "[", 
          RowBox[{"primes", ",", "count"}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"end", " ", "of", " ", "giant", " ", "else", " ", "clause"}], 
       " ", "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5012341274368906`*^9, 3.5012341416297026`*^9}, {
   3.5012342114386954`*^9, 3.5012342461096783`*^9}, {3.501234280088622*^9, 
   3.5012343142215743`*^9}, {3.501234412143175*^9, 3.5012344312992706`*^9}, {
   3.5012345151790686`*^9, 3.5012345351152086`*^9}, {3.501234565799964*^9, 
   3.5012345753905125`*^9}, 3.5012347175596437`*^9, {3.5012739223874054`*^9, 
   3.5012739288577757`*^9}, {3.501273992594421*^9, 3.5012740484466157`*^9}, {
   3.5012740846406856`*^9, 3.501274089316953*^9}, {3.501302777775839*^9, 
   3.5013028108777323`*^9}, {3.5013029180358615`*^9, 
   3.5013029246822414`*^9}, {3.5013029608703117`*^9, 
   3.5013029712159033`*^9}, {3.501303117705282*^9, 3.5013031243066597`*^9}, {
   3.501303223990361*^9, 3.501303228667629*^9}, {3.501303448780218*^9, 
   3.5013034541285243`*^9}, 3.5013034974570026`*^9, 3.5013200818695765`*^9, {
   3.5013902055717597`*^9, 3.501390243838627*^9}, {3.501419401217493*^9, 
   3.5014194196635485`*^9}, {3.501514713453259*^9, 3.5015147254699464`*^9}, {
   3.5015147681473875`*^9, 3.5015147729216604`*^9}, {3.5018256689109187`*^9, 
   3.501825671358059*^9}, {3.501827858796173*^9, 3.5018278769372106`*^9}, {
   3.5018280887723265`*^9, 3.5018280931765785`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"VotedValueAt", "[", 
   RowBox[{"primes_", ",", " ", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "current", ",", "  ", "maxdist", ",", " ", "distanceTable", ",", " ", 
      "pos", ",", " ", "fileName", ",", " ", "previous", ",", " ", "result"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForVotedValues", "[", "primes", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"previous", " ", "=", " ", 
      RowBox[{"VotedValuesForTuple", "[", 
       RowBox[{"primes", ",", "count"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "previous", "]"}], "\[GreaterEqual]", " ", 
        "count"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Last", "[", 
         RowBox[{"Take", "[", 
          RowBox[{"previous", ",", "count"}], "]"}], "]"}]}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "start", " ", "of", " ", "giant", " ", "else", " ", "clause"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "previous", "]"}], "==", "0"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pos", " ", "=", "1"}], ";", "\[IndentingNewLine]", 
           RowBox[{"current", " ", "=", " ", "0"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pos", " ", "=", " ", 
            RowBox[{"Length", "[", "previous", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"current", " ", "=", " ", 
            RowBox[{"previous", "[", 
             RowBox[{"[", "pos", "]"}], "]"}]}], " ", ";", 
           "\[IndentingNewLine]", 
           RowBox[{"current", " ", "+=", " ", 
            RowBox[{"Max", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Distance", "[", 
                RowBox[{"current", ",", " ", "p"}], "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"p", ",", " ", "primes"}], "}"}]}], "]"}], "]"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"While", "[", 
            RowBox[{
             RowBox[{"pos", "<=", " ", "count"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", "current", "]"}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"distanceTable", " ", "=", " ", 
               RowBox[{"ParallelTable", "[", 
                RowBox[{
                 RowBox[{"Distance", "[", 
                  RowBox[{"current", ",", " ", "p"}], "]"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"p", ",", " ", "primes"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"With", " ", "[", "\[IndentingNewLine]", " ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"file", " ", "=", " ", 
                  RowBox[{"OpenAppend", "[", 
                   RowBox[{"fileName", ",", " ", 
                    RowBox[{"PageWidth", "\[Rule]", "40000"}]}], "]"}]}], 
                 "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Write", "[", 
                  RowBox[{"file", ",", " ", "current"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Close", "[", "file", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"pos", "++"}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"If", " ", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{"pos", ",", "10000"}], "]"}], "\[Equal]", "0"}], 
                  ",", " ", 
                  RowBox[{"PrintTemporary", "[", 
                   RowBox[{"\"\< Calculating votes :\>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "pos", "]"}], " ", "<>", " ", 
                    "\"\< / \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "count", "]"}], " ", "<>", " ", 
                    "\"\< - \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"Log", "[", 
                    RowBox[{"10", ",", "current"}], "]"}], "]"}], "]"}]}], 
                   "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"maxdist", " ", "=", " ", 
               RowBox[{"Max", "[", "distanceTable", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"maxdist", "\[Equal]", "0"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"current", " ", "+=", "1"}], ";"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"current", " ", "+=", " ", "maxdist"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"result", "=", " ", "current"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"IntegerPart", "[", 
               RowBox[{
                RowBox[{"pos", "/", "count"}], " ", "*", " ", "10000"}], 
               "]"}], "/", "100"}], "]"}], "]"}], " ", "<>", " ", 
           "\"\< % --->\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", "current"}], "]"}], "]"}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"end", " ", "of", " ", "giant", " ", "else", " ", "clause"}], 
       " ", "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5019383803171473`*^9, 3.501938430875039*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DynamicVoteList", "[", 
   RowBox[{"primes_", ",", " ", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"InternalCalculateVotes", "[", 
   RowBox[{"primes", ",", "count"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5002493560641723`*^9, 3.5002494093442197`*^9}, {
  3.500249444695242*^9, 3.5002494628282785`*^9}, {3.5002496196362476`*^9, 
  3.5002496200722723`*^9}, {3.500304491016652*^9, 3.500304498587085*^9}, {
  3.500315183257213*^9, 3.5003152341641245`*^9}, {3.5003154392038527`*^9, 
  3.500315529305006*^9}, {3.5003659566071973`*^9, 3.500366029287354*^9}, {
  3.5003661233027315`*^9, 3.5003661916486406`*^9}, {3.5003687367872143`*^9, 
  3.5003687684570255`*^9}, {3.500368828021433*^9, 3.5003688575581217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DynamicVoteList", "[", 
   RowBox[{"primes_", ",", "start_", ",", " ", "count_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
     "current", ",", "  ", "maxdist", ",", " ", "currentVector", ",", " ", 
      "pos", ",", " ", "posChunk", ",", " ", "fileName", ",", " ", "previous",
       ",", " ", "chunks", ",", " ", "lastValue", ",", " ", "result", ",", 
      " ", "prevLen", ",", "distanceTable", ",", " ", "temp", ",", " ", 
      "offsetFileName", ",", " ", "offsets"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForVotes", "[", "primes", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"offsetFileName", "=", 
      RowBox[{"FileNameForVotesPositions", "[", "primes", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pos", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"chunks", "=", 
      RowBox[{
       RowBox[{"IntegerPart", "[", 
        RowBox[{"start", " ", "/", " ", "count"}], "]"}], "+", "1"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{
      "\"\<Reading :\>\"", " ", "<>", " ", "fileName", " ", "<>", " ", 
       "\"\< ... (\>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", "chunks", "]"}], " ", "<>", " ", 
       "\"\< chunks )\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "fileName", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"With", " ", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"file", " ", "=", " ", 
            RowBox[{"OpenRead", "[", "fileName", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"offsets", " ", "=", " ", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", " ", "[", 
            RowBox[{
             RowBox[{"FileExistsQ", "[", "offsetFileName", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"With", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"f", " ", "=", " ", 
                  RowBox[{"OpenRead", "[", "offsetFileName", "]"}]}], "}"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"offsets", " ", "=", " ", 
                  RowBox[{"ReadList", "[", 
                   RowBox[{"f", ",", " ", "Expression"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Close", "[", "f", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", " ", "[", 
            RowBox[{
             RowBox[{"posChunk", "=", "1"}], ",", " ", 
             RowBox[{"posChunk", " ", "\[LessEqual]", " ", "chunks"}], ",", 
             " ", 
             RowBox[{"posChunk", " ", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"posChunk", " ", "<", " ", "chunks"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Print", "[", 
                  RowBox[{"\"\<  - Chunk :\>\"", " ", "<>", " ", 
                   RowBox[{"ToString", "[", "posChunk", "]"}], " ", "<>", 
                   " ", "\"\< ...  Searching offset for  : \>\"", " ", "<>", 
                   " ", 
                   RowBox[{"ToString", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"posChunk", "-", "1"}], ")"}], "*", "count"}], 
                    "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"With", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"offset", "=", 
                    RowBox[{"Select", "[", 
                    RowBox[{"offsets", ",", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "\[Equal]", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"posChunk", "-", "1"}], ")"}], "*", "count"}]}], 
                    "&"}]}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", "offset", "]"}], " ", ">", "0"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"offset", "=", " ", 
                    RowBox[{"offset", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Print", "[", 
                    RowBox[{"\"\<  - Chunk :\>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "posChunk", "]"}], " ", "<>", 
                    " ", "\"\< ...  Offset known, skipping : \>\"", " ", "<>",
                     " ", 
                    RowBox[{"ToString", "[", "offset", "]"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"SetStreamPosition", "[", 
                    RowBox[{"file", ",", " ", "offset"}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Continue", "[", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"temp", " ", "=", " ", 
               RowBox[{"ReadList", "[", 
                RowBox[{"file", ",", " ", "Expression", ",", " ", "count"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "temp", "]"}], "==", " ", "0"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"previous", "=", 
                  RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
               "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"previous", " ", "=", " ", "temp"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", " ", "[", 
               RowBox[{
                RowBox[{"previous", " ", "\[Equal]", " ", "$Failed"}], ",", 
                " ", 
                RowBox[{
                 RowBox[{"previous", " ", "=", " ", 
                  RowBox[{"{", "}"}]}], ";", 
                 RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"pos", " ", "+=", " ", 
               RowBox[{"Length", "[", "previous", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"currentVector", "=", " ", 
               RowBox[{"Last", "[", "previous", "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"lastValue", "=", 
               RowBox[{"N", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"1", "+", 
                   RowBox[{"currentVector", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}], " ", 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"current", " ", "=", " ", 
               RowBox[{
                RowBox[{"currentVector", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
                RowBox[{"Max", "[", 
                 RowBox[{"currentVector", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<  - Chunk :\>\"", " ", "<>", " ", 
                RowBox[{"ToString", "[", "posChunk", "]"}], " ", "<>", " ", 
                "\"\< ... (\>\"", " ", "<>", " ", 
                RowBox[{"ToString", "[", "lastValue", "]"}], " ", "<>", " ", 
                "\"\<)\>\""}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", " ", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "previous", "]"}], " ", "\[NotEqual]",
                  " ", "count"}], ",", " ", 
                RowBox[{"Break", "[", "]"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"posFile", " ", "=", " ", 
                  RowBox[{"OpenAppend", "[", 
                   RowBox[{"offsetFileName", ",", " ", 
                    RowBox[{"PageWidth", "\[Rule]", "2000"}]}], "]"}]}], 
                 "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Write", "[", 
                  RowBox[{"posFile", ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"posChunk", "*", "count"}], ",", " ", 
                    RowBox[{"StreamPosition", "[", "file", "]"}]}], "}"}]}], 
                  "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"Close", "[", "posFile", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Close", "[", "file", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"file", " ", "does", " ", "not", " ", "exist"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"previous", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"pos", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"current", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"lastValue", "=", "\"\<Not found\>\""}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Done.  Largest Value \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", " ", "lastValue", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Start pos \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", " ", "pos", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<Start value \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", " ", "current", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", "previous"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"prevLen", " ", "=", 
      RowBox[{"Length", "[", "previous", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<length previous \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", " ", "prevLen", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<count \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", " ", "count", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"\"\<count \>\"", " ", "<>", " ", 
       RowBox[{"ToString", "[", " ", 
        RowBox[{"prevLen", " ", "<", " ", "count"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"prevLen", " ", "<", " ", "count"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<Not enough values, calculating more...\>\"", " ", "<>", " ", 
          RowBox[{"ToString", "[", 
           RowBox[{"start", " ", "+", " ", "count", " ", "-", " ", "pos"}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", " ", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"pos", "<", " ", 
           RowBox[{"start", " ", "+", " ", "count"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Print", "[", "current", "]"}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"distanceTable", " ", "=", " ", 
            RowBox[{"ParallelTable", "[", 
             RowBox[{
              RowBox[{"Distance", "[", 
               RowBox[{"current", ",", " ", "p"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{"p", ",", " ", "primes"}], "}"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"With", " ", "[", "\[IndentingNewLine]", " ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"file", " ", "=", " ", 
               RowBox[{"OpenAppend", "[", 
                RowBox[{"fileName", ",", " ", 
                 RowBox[{"PageWidth", "\[Rule]", "40000"}]}], "]"}]}], "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Write", "[", 
               RowBox[{"file", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"current", ",", "distanceTable"}], "}"}]}], "]"}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"If", " ", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Mod", "[", 
                  RowBox[{
                   RowBox[{"pos", "+", "1"}], ",", "10000"}], "]"}], 
                 "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"posFile", " ", "=", " ", 
                    RowBox[{"OpenAppend", "[", 
                    RowBox[{"offsetFileName", ",", " ", 
                    RowBox[{"PageWidth", "\[Rule]", "2000"}]}], "]"}]}], 
                    "}"}], ",", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Write", "[", 
                    RowBox[{"posFile", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "+", "1"}], ",", " ", 
                    RowBox[{"StreamPosition", "[", "file", "]"}]}], "}"}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"Close", "[", "posFile", "]"}], ";"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"Close", "[", "file", "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"pos", "++"}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", " ", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{"pos", ",", "10000"}], "]"}], "\[Equal]", "0"}], ",", 
             " ", 
             RowBox[{"PrintTemporary", "[", 
              RowBox[{"\"\< Calculating votes :\>\"", " ", "<>", " ", 
               RowBox[{"ToString", "[", "pos", "]"}], " ", "<>", " ", 
               "\"\< / \>\"", " ", "<>", " ", 
               RowBox[{"ToString", "[", 
                RowBox[{"start", " ", "+", " ", "count"}], "]"}], " ", "<>", 
               " ", "\"\< - \>\"", " ", "<>", " ", 
               RowBox[{"ToString", "[", 
                RowBox[{"N", "[", 
                 RowBox[{"Log", "[", 
                  RowBox[{"10", ",", "current"}], "]"}], "]"}], "]"}]}], 
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"maxdist", " ", "=", " ", 
            RowBox[{"Max", "[", "distanceTable", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"maxdist", "\[Equal]", "0"}], ",", 
             RowBox[{"current", " ", "+=", "1"}], " ", ",", 
             RowBox[{"current", " ", "+=", " ", "maxdist"}]}], "]"}], ";"}]}],
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"result", " ", "=", " ", 
         RowBox[{"DynamicVoteList", "[", 
          RowBox[{"primes", ",", " ", "start", ",", " ", "count"}], "]"}]}], 
        ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "\"\<enough values\>\"", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.500368783163867*^9, 3.500368816590779*^9}, 
   3.500394389222503*^9, {3.500813892362502*^9, 3.5008138948866463`*^9}, 
   3.500813960909423*^9, 3.500872608124116*^9, {3.5008726777951007`*^9, 
   3.5008727838751683`*^9}, {3.5008728363441696`*^9, 
   3.5008729171377907`*^9}, {3.500872966094591*^9, 3.5008730413068924`*^9}, {
   3.500873079604083*^9, 3.5008731503551297`*^9}, {3.5008737617841015`*^9, 
   3.5008738223145638`*^9}, {3.50087386001872*^9, 3.5008740837205153`*^9}, {
   3.500874121291664*^9, 3.500874221026369*^9}, 3.50087425584836*^9, {
   3.500874679539594*^9, 3.500874697091598*^9}, {3.500874734098715*^9, 
   3.5008747347597523`*^9}, {3.5008747888728476`*^9, 
   3.5008747906269484`*^9}, {3.500874830769244*^9, 3.500874831098263*^9}, {
   3.5008748613759947`*^9, 3.500874861716014*^9}, {3.5008754559049997`*^9, 
   3.500875705613282*^9}, {3.500875919831535*^9, 3.5008759708614535`*^9}, {
   3.50087605122805*^9, 3.50087607114919*^9}, {3.5008761265613594`*^9, 
   3.5008761526118493`*^9}, {3.5008761935351896`*^9, 3.500876199255517*^9}, {
   3.500876306680661*^9, 3.500876349399105*^9}, 3.5008763846501207`*^9, {
   3.500876501521806*^9, 3.500876510461317*^9}, {3.5008765476944466`*^9, 
   3.500876562804311*^9}, {3.5008766316462483`*^9, 3.5008767777386045`*^9}, {
   3.5008768133376403`*^9, 3.500876835956934*^9}, {3.500877066220104*^9, 
   3.5008771844818687`*^9}, {3.500877250021617*^9, 3.5008772592061424`*^9}, 
   3.5008795537603836`*^9, {3.500879796557271*^9, 3.5008799962246914`*^9}, {
   3.500880063750553*^9, 3.5008800647556105`*^9}, {3.5008804797393465`*^9, 
   3.5008804801233683`*^9}, {3.500880786608898*^9, 3.5008808112893105`*^9}, {
   3.500880858684021*^9, 3.5008812505674353`*^9}, {3.5008813006983027`*^9, 
   3.5008813180372944`*^9}, {3.5008813856941643`*^9, 3.5008814201221333`*^9}, 
   3.501009123951053*^9, {3.5010100521621437`*^9, 3.501010094948591*^9}, {
   3.501010830916686*^9, 3.5010108346619005`*^9}, {3.501257834885942*^9, 
   3.501257872840809*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DrawTupleVotes", "[", 
    RowBox[{"tuple_", ",", " ", "range_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"result", " ", "=", " ", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", "=", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
             RowBox[{"DynamicVoteList", "[", 
              RowBox[{"tuple", ",", " ", 
               RowBox[{"range", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], " ", "]"}]}], " ", 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "g", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"With", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"threshold", "=", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p", "+", "1"}], ")"}], "/", "2"}]}], ",", 
                "\[IndentingNewLine]", " ", 
                RowBox[{"start", " ", "=", " ", 
                 RowBox[{"Max", "[", 
                  RowBox[{"1", ",", 
                   RowBox[{"range", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"end", "=", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{"Length", "[", "g", "]"}], ",", 
                   RowBox[{"range", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"TreePlot", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"GraphForNumber2", "[", 
                    RowBox[{"i", ",", "p"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"g", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"start", ",", " ", "end"}], "}"}]}], "]"}]}], 
                    "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
                "\[IndentingNewLine]", "Left", ",", "\[IndentingNewLine]", 
                RowBox[{"MultiedgeStyle", "\[Rule]", "None"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"DirectedEdges", "\[Rule]", "False"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"EdgeRenderingFunction", "\[Rule]", 
                 RowBox[{"Function", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"pos", ",", "edge", ",", "lbl"}], "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"If", " ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"FromDigits", "[", "lbl", "]"}], " ", "<", " ", 
                    "threshold"}], ",", "Blue", ",", " ", "Red"}], "]"}], ",",
                     " ", 
                    RowBox[{"Line", "[", "pos", "]"}], ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Inset", "[", 
                    RowBox[{"lbl", ",", 
                    RowBox[{"Mean", "[", "pos", "]"}], ",", "Automatic", ",", 
                    "Automatic", ",", 
                    RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",",
                     " ", 
                    RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "]"}]}], 
                    "}"}]}], "\[IndentingNewLine]", "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"VertexRenderingFunction", "\[Rule]", 
                 RowBox[{"Function", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"pos", ",", "vertex"}], "}"}], ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"NumericQ", "[", "vertex", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Distance", "[", 
                    RowBox[{"vertex", ",", "pl"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"pl", ",", " ", "tuple"}], "}"}]}], "]"}], "]"}], 
                    "\[Equal]", "0"}], ",", " ", "Green", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Distance", "[", 
                    RowBox[{"vertex", ",", "p"}], "]"}], "\[Equal]", "0"}], 
                    ",", " ", "Orange", ",", " ", "Red"}], "]"}]}], 
                    "\[IndentingNewLine]", "]"}]}], ",", 
                    RowBox[{"EdgeForm", "[", "Black", "]"}], ",", "Black", 
                    ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"vertex", ",", "pos"}], "]"}], ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",",
                     " ", 
                    RowBox[{"FontSize", "\[Rule]", "Tiny"}], ",", " ", 
                    RowBox[{"FontColor", "\[Rule]", "White"}]}], "]"}]}], 
                    "}"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.001", "]"}], ",", 
                    RowBox[{"Point", "[", "pos", "]"}]}], "}"}]}], 
                    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"PlotLabel", "\[Rule]", " ", 
                 RowBox[{
                  RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
                  "\"\<-voted values\\nin base \>\"", " ", "<>", " ", 
                  RowBox[{"ToString", " ", "[", "p", "]"}], "  ", "<>", 
                  "\"\<\\nfor vote \>\"", "  ", "<>", " ", 
                  RowBox[{"ToString", "[", "start", " ", "]"}], "<>", " ", 
                  "\"\< to \>\"", " ", "<>", " ", 
                  RowBox[{"ToString", "[", " ", "end", "]"}]}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",", 
                   " ", 
                   RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "}"}]}]}], 
               "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"p", ",", "tuple"}], "}"}]}], "\[IndentingNewLine]", 
           "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5002113426849313`*^9, 3.500211379746051*^9}, {
   3.500211702906535*^9, 3.5002118473007936`*^9}, {3.5002119393160563`*^9, 
   3.500211946397462*^9}, {3.5002120166884823`*^9, 3.500212067497388*^9}, {
   3.500212113032993*^9, 3.500212133950189*^9}, {3.500212181648917*^9, 
   3.500212315124552*^9}, {3.5002123660614653`*^9, 3.500212386889656*^9}, {
   3.5002124303881445`*^9, 3.5002125276767087`*^9}, {3.500212588410183*^9, 
   3.5002126718939576`*^9}, {3.5002127068049545`*^9, 
   3.5002127119402485`*^9}, {3.5002127586829214`*^9, 
   3.5002127665613728`*^9}, {3.5002128027204404`*^9, 
   3.5002128097878447`*^9}, {3.500212985542897*^9, 3.500213076901123*^9}, {
   3.500219504201743*^9, 3.500219505160798*^9}, {3.5002454511448236`*^9, 
   3.5002455820793123`*^9}, {3.500245648513112*^9, 3.5002457137498436`*^9}, {
   3.500245791272278*^9, 3.50024580337897*^9}, {3.500245893123103*^9, 
   3.500245952171481*^9}, {3.500246018297263*^9, 3.500246025223659*^9}, {
   3.500246083036966*^9, 3.500246103936161*^9}, {3.500246138902161*^9, 
   3.5002461543330436`*^9}, {3.500246210606262*^9, 3.5002462155055428`*^9}, {
   3.500247741842844*^9, 3.5002478112768154`*^9}, {3.500248385704671*^9, 
   3.500248390149925*^9}, {3.5002485279498067`*^9, 3.500248550770112*^9}, {
   3.5002486072013397`*^9, 3.5002486214061522`*^9}, {3.500248840700695*^9, 
   3.5002488551005187`*^9}, {3.500249483539463*^9, 3.500249505137699*^9}, {
   3.5002495802419944`*^9, 3.500249613919921*^9}, {3.5002496584084654`*^9, 
   3.500249666460926*^9}, {3.5002497307626038`*^9, 3.500249736593937*^9}, 
   3.50024981391636*^9, {3.5002498756488905`*^9, 3.5002498829373074`*^9}, 
   3.50024991672324*^9, {3.500250040520321*^9, 3.5002500519419737`*^9}, 
   3.5002504401331778`*^9, {3.500250539920885*^9, 3.500250599292281*^9}, {
   3.5002507070244427`*^9, 3.5002507153599195`*^9}, {3.500250823678115*^9, 
   3.500250832069595*^9}, 3.5002508963622723`*^9, {3.500250979038001*^9, 
   3.5002509828212175`*^9}, 3.500251076451573*^9, {3.5002511165728674`*^9, 
   3.500251133556839*^9}, {3.5002512207878284`*^9, 3.500251242995098*^9}, {
   3.5002512848834944`*^9, 3.500251285774545*^9}, {3.5002513378575244`*^9, 
   3.5002513380625362`*^9}, {3.5002525048652735`*^9, 3.5002525060553417`*^9}, 
   3.5002528191122475`*^9, {3.500407678214325*^9, 3.5004076787523556`*^9}, {
   3.5006209013880496`*^9, 3.5006209044612255`*^9}}],

Cell[CellGroupData[{

Cell["This notebook requires some definitions from DigitGraphs.nb", "Item",
 CellChangeTimes->{{3.5003656974733753`*^9, 3.500365716710476*^9}}],

Cell["\<\
MyPosition will calculate the first position of a \"bad digit\" starting from \
the left (most significant digit).
   It will return this position if something is found or zero if none is \
found.  The M built - in Position function was not really cooperative.\
\>", "Item",
 CellChangeTimes->{{3.500365286269856*^9, 3.500365390596823*^9}, {
  3.50036573620059*^9, 3.500365737321655*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyPosition", "[", 
   RowBox[{"l_", ",", " ", "threshold_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", ",", " ", "pos"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pos", "=", 
        RowBox[{"Length", "[", "l", "]"}]}], ",", " ", 
       RowBox[{"pos", "\[GreaterEqual]", "1"}], " ", ",", " ", 
       RowBox[{"pos", "--"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"l", "[", 
           RowBox[{"[", "pos", "]"}], "]"}], " ", "\[GreaterEqual]", " ", 
          "threshold"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"result", " ", "=", " ", "pos"}], ";", " ", 
          RowBox[{"Break", "[", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", " ", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.500279685747446*^9, 3.500279948997908*^9}, {
  3.500279981305565*^9, 3.500280025890443*^9}}],

Cell["\<\
Calculating bad positions takes time.  We need it both for graphing votes and \
voted values.  Therefore we write a simple function that does the calculation \
and gives feedback for large calculations.
It also allows us to change both graph types at once.\
\>", "Text",
 CellChangeTimes->{{3.5003651311959867`*^9, 3.500365220915118*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FirstBadPosition", "[", 
   RowBox[{"votes_", ",", " ", "tuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"vIndex", ",", "10000"}], "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{"PrintTemporary", "[", 
        RowBox[{"\"\<First bad \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "vIndex", "]"}], " ", "<>", " ", 
         "\"\< / \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
         "\"\< for prime \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "p", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"With", " ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"digs", "=", 
         RowBox[{"IntegerDigits", "[", 
          RowBox[{
           RowBox[{"votes", "[", 
            RowBox[{"[", "vIndex", "]"}], "]"}], ",", "p"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"MyPosition", "[", 
          RowBox[{"digs", ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"p", "+", "1"}], ")"}], "/", "2"}]}], "]"}], "  ", "/", 
         " ", 
         RowBox[{"Length", "[", "digs", "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"p", ",", "tuple"}], "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"vIndex", ",", "1", ",", 
      RowBox[{"Length", "[", "votes", "]"}]}], "}"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.500362109145235*^9, 3.500362289247552*^9}, {
  3.5003625343551826`*^9, 3.500362554104817*^9}, {3.5003626598886027`*^9, 
  3.5003626948170643`*^9}, {3.5003627804456143`*^9, 3.500362784844822*^9}, {
  3.5003628650445633`*^9, 3.5003628711129737`*^9}, {3.500363594787109*^9, 
  3.500363614408231*^9}, {3.5003654262658634`*^9, 3.5003654522333484`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FirstBadPositionGraphFor", "[", 
   RowBox[{"tuple_", ",", " ", "count_"}], "]"}], ":=", 
  RowBox[{"FirstBadPositionGraphFor", "[", 
   RowBox[{"tuple", ",", " ", "count", ",", " ", "tuple"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5006234618655005`*^9, 3.5006234686078863`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FirstBadPositionGraphFor", "[", 
   RowBox[{"tuple_", ",", " ", "count_", ",", " ", "plotTuple_"}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "votes", " ", "are", " ", "a", " ", "couple", " ", "in", " ", "which", 
       " ", "the", " ", "first", " ", "value", " ", "is", " ", "the", " ", 
       "voted", " ", "value", " ", "and", " ", "the", " ", "second", " ", 
       "is", " ", "a", " ", "tuple", " ", "containing", " ", "the", " ", 
       "votes", " ", "for", " ", "each", " ", 
       RowBox[{"prime", ".", "\[IndentingNewLine]", "Here"}], " ", "we", " ", 
       "are", " ", "interested", " ", "in", " ", "the", " ", "voted", " ", 
       "value", " ", "so", " ", "we", " ", "just", " ", "take", " ", "the", 
       " ", "first", " ", "element", " ", "using", " ", "a", " ", "Map", " ", 
       "call"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"votes", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
           RowBox[{"DynamicVoteList", "[", 
            RowBox[{"tuple", ",", " ", "count"}], "]"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FirstBadPosition", "[", 
          RowBox[{"votes", ",", " ", "plotTuple"}], "]"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0.6", "]"}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
          "\"\<First bad digit in voted value divided by length for \>\"", 
           " ", "<>", " ", 
           RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
           "\"\<\\n(\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
           "\"\< values)\\nLargest voted value (log10):\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", 
               RowBox[{"votes", "[", 
                RowBox[{"[", "count", "]"}], "]"}]}], "  ", "]"}], "]"}], 
            "]"}], "<>", " ", "\"\<\\nPlotted for :\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "plotTuple", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<N th vote\>\"", ",", "  ", 
            "\"\<Ratio position first bad / length representation\>\""}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5002805370159416`*^9, 3.500280620522888*^9}, {
   3.500292422304497*^9, 3.5002925230122566`*^9}, {3.5002928559122972`*^9, 
   3.500292858734459*^9}, {3.5003169348083963`*^9, 3.50031693610147*^9}, {
   3.5003191463068867`*^9, 3.500319151761198*^9}, {3.50036546519709*^9, 
   3.500365560114519*^9}, {3.5003690450868483`*^9, 3.5003690454838705`*^9}, {
   3.500617183842418*^9, 3.500617197394193*^9}, 3.5006172670711784`*^9, {
   3.500623480580571*^9, 3.5006235165526285`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FirstBadPositionGraphForPrimeVote", "[", 
   RowBox[{"tuple_", ",", " ", "count_", ",", " ", "primeVoteIndex_"}], "]"}],
   " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "votes", " ", "are", " ", "a", " ", "couple", " ", "in", " ", "which", 
       " ", "the", " ", "first", " ", "value", " ", "is", " ", "the", " ", 
       "voted", " ", "value", " ", "and", " ", "the", " ", "second", " ", 
       "is", " ", "a", " ", "tuple", " ", "containing", " ", "the", " ", 
       "votes", " ", "for", " ", "each", " ", 
       RowBox[{"prime", ".", "\[IndentingNewLine]", "Here"}], " ", "we", " ", 
       "are", " ", "interested", " ", "in", " ", "the", " ", "vote", " ", 
       "for", " ", "a", " ", "prime", " ", "so", " ", "we", " ", "take", " ", 
       "the", " ", "second", " ", "element", " ", "and", " ", "herein", " ", 
       "the", " ", "number", " ", "at", " ", "primeVoteIndex", " ", "using", 
       " ", "a", " ", "Map", " ", "call"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"votes", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "primeVoteIndex", " ", "]"}], "]"}], "&"}], ",", 
           RowBox[{"DynamicVoteList", "[", 
            RowBox[{"tuple", ",", " ", "count"}], "]"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"FirstBadPosition", "[", 
          RowBox[{"votes", ",", " ", "tuple"}], "]"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0.6", "]"}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
          "\"\<First bad digit in vote divided by length for \>\"", " ", "<>",
            " ", 
           RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
           "\"\<(\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
           "\"\< values) - vote for \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"tuple", "[", 
             RowBox[{"[", "primeVoteIndex", "]"}], "]"}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<N th vote\>\"", ",", "  ", 
            "\"\<Ratio position first bad / length representation\>\""}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5003166335631657`*^9, 3.500316665004964*^9}, {
   3.5003169466160717`*^9, 3.5003169818220854`*^9}, {3.500318294814184*^9, 
   3.500318299671462*^9}, 3.5003191633008585`*^9, 3.500365485372244*^9, {
   3.5003655688690195`*^9, 3.5003656099803715`*^9}, {3.500369039786545*^9, 
   3.500369040119564*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DigitsWithPositions", "[", 
   RowBox[{"vote_", ",", " ", "p_"}], "]"}], " ", ":=", " ", 
  RowBox[{"With", " ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"digits", " ", "=", 
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"vote", ",", "p"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "  ", "[", "digits", "]"}], "+", "1", " ", "-", 
         " ", "n"}], ",", " ", 
        RowBox[{"digits", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"Length", "  ", "[", "digits", "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.5006289700505505`*^9, 3.5006291016940804`*^9}, {
  3.50062918718297*^9, 3.50062919959768*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllBadPositions", "[", 
   RowBox[{"votes_", ",", " ", "tuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mod", "[", 
             RowBox[{"vIndex", ",", "100"}], "]"}], "\[Equal]", "0"}], ",", 
           " ", 
           RowBox[{"PrintTemporary", "[", 
            RowBox[{"\"\<All bad \>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", "vIndex", "]"}], " ", "<>", " ", 
             "\"\< / \>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
             "\"\< for prime \>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", "p", "]"}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Map", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"vIndex", ",", 
              RowBox[{"#", " ", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "}"}], 
            RowBox[{"(*", 
             RowBox[{"/", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"p", ",", 
                RowBox[{
                 RowBox[{"votes", "[", 
                  RowBox[{"[", "vIndex", "]"}], "]"}], "+", "p", "-", "1"}]}],
                "]"}]}], "*)"}], "&"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Select", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DigitsWithPositions", "[", 
              RowBox[{
               RowBox[{"votes", "[", 
                RowBox[{"[", "vIndex", "]"}], "]"}], ",", " ", "p"}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"p", "+", "1"}], ")"}], "/", "2"}]}], "&"}], "]"}],
               "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], " ", "==", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"p", "+", "1"}], ")"}], "/", "2"}]}], "&"}]}], 
            "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"vIndex", ",", "1", ",", 
          RowBox[{"Length", "[", "votes", "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"p", ",", "tuple"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
    ",", "\[IndentingNewLine]", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5006289330144324`*^9, 3.5006289371986713`*^9}, {
   3.5006292569659615`*^9, 3.5006293418048143`*^9}, {3.5006294239695134`*^9, 
   3.500629447794876*^9}, {3.500629480609753*^9, 3.500629566261652*^9}, {
   3.500629629185251*^9, 3.500629666203368*^9}, {3.5006297363113785`*^9, 
   3.5006297562445183`*^9}, {3.500629791783551*^9, 3.5006298212362356`*^9}, {
   3.5006298573663025`*^9, 3.500629954932883*^9}, {3.5006300127261887`*^9, 
   3.5006301938765497`*^9}, 3.500630280380497*^9, {3.5006313473375235`*^9, 
   3.5006313826775455`*^9}, 3.5006316186410418`*^9, {3.5006316943063693`*^9, 
   3.5006316963524866`*^9}, {3.5006321695365505`*^9, 
   3.5006321708536263`*^9}, {3.5006322952737427`*^9, 3.500632306682395*^9}, 
   3.5006382871984615`*^9, {3.5006439176985073`*^9, 3.5006439246169033`*^9}, {
   3.5006440685181336`*^9, 3.5006441034311304`*^9}, {3.500644146133573*^9, 
   3.5006441700219393`*^9}, {3.5006442161415772`*^9, 3.500644288967743*^9}, 
   3.500644339599639*^9, {3.500657029178441*^9, 3.500657029434456*^9}, {
   3.500657066875597*^9, 3.5006570904119434`*^9}, 3.500657442594087*^9, {
   3.500666521529372*^9, 3.500666535463169*^9}, {3.50066677272474*^9, 
   3.500666774871863*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllBadPositionGraphFor", "[", 
   RowBox[{"tuple_", ",", " ", "count_", ",", " ", "plotTuple_"}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"votes", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
           RowBox[{"DynamicVoteList", "[", 
            RowBox[{"tuple", ",", " ", "count"}], "]"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Show", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ListLinePlot", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Length", "[", 
                RowBox[{"IntegerDigits", "[", 
                 RowBox[{
                  RowBox[{"votes", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", " ", "p"}], "]"}], 
                "]"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"i", ",", " ", "1", ",", " ", 
                 RowBox[{"Length", "[", "votes", "]"}]}], "}"}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"Directive", "[", 
               RowBox[{
                RowBox[{"Opacity", "[", "0.4", "]"}], ",", "Red"}], "]"}]}]}],
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", " ", 
           RowBox[{"{", 
            RowBox[{"p", ",", " ", "plotTuple"}], "}"}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{"AllBadPositions", "[", 
              RowBox[{"votes", ",", "plotTuple"}], " ", "]"}], ",", "1"}], 
            "]"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"Opacity", "[", "0.2", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]",
           "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<N th voted value\>\"", ",", "  ", "\"\<Bad digit\>\""}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
          "\"\<All bad digits in voted value for tuple \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
           "\"\<\\n(\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
           "\"\< values)\\nLargest voted value (log10):\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", 
               RowBox[{"votes", "[", 
                RowBox[{"[", "count", "]"}], "]"}]}], "  ", "]"}], "]"}], 
            "]"}], " ", "<>", " ", "\"\<\\nPlotted for :\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "plotTuple", "]"}]}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.500629977465172*^9, 3.5006299895748644`*^9}, {
   3.500630311093254*^9, 3.5006303405439386`*^9}, {3.5006303939439926`*^9, 
   3.5006303996913214`*^9}, {3.500630495744816*^9, 3.5006305365501494`*^9}, 
   3.500630644508324*^9, {3.5006323951974583`*^9, 3.5006324024608736`*^9}, {
   3.5006324437972374`*^9, 3.500632460934218*^9}, {3.5006347882473326`*^9, 
   3.5006349099762955`*^9}, {3.5006349970922775`*^9, 
   3.5006350028666077`*^9}, {3.5006397252087107`*^9, 
   3.5006397333321753`*^9}, {3.500640992590201*^9, 3.500640995108345*^9}, {
   3.500641072722784*^9, 3.5006410752129264`*^9}, {3.5006439806701093`*^9, 
   3.500643985734399*^9}, {3.500658984779295*^9, 3.500659020971365*^9}, {
   3.500659110796503*^9, 3.500659117197869*^9}, 3.5006595932850995`*^9, {
   3.500660006533736*^9, 3.5006600188464403`*^9}, 3.5006601196572065`*^9, {
   3.50066049928692*^9, 3.5006605497208047`*^9}, 3.5006606183067274`*^9, {
   3.5006610775169926`*^9, 3.5006610873595552`*^9}, {3.5006611432157507`*^9, 
   3.500661169275241*^9}, {3.5006624684475493`*^9, 3.500662469713622*^9}, 
   3.5006625637470007`*^9, {3.500665604356913*^9, 3.5006656160655828`*^9}, {
   3.500666568273046*^9, 3.5006666205330353`*^9}, {3.5006666782803383`*^9, 
   3.5006666923071404`*^9}}],

Cell["\<\
Calculating bad positions takes time.  We need it both for graphing votes and \
voted values.  Therefore we write a simple function that does the calculation \
and gives feedback for large calculations.
It also allows us to change both graph types at once.\
\>", "Text",
 CellChangeTimes->{{3.5003651311959867`*^9, 3.500365220915118*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountBadPosition", "[", 
   RowBox[{"votes_", ",", " ", "tuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ParallelTable", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"With", " ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"digs", "=", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{
            RowBox[{"votes", "[", 
             RowBox[{"[", "vIndex", "]"}], "]"}], ",", "p"}], "]"}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"N", "[", 
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Select", "[", 
            RowBox[{"digs", ",", 
             RowBox[{
              RowBox[{"#", ">=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"p", "+", "1"}], ")"}], "/", "2"}]}], "&"}]}], "]"}],
            "]"}], " ", "/", " ", 
          RowBox[{"Length", "[", "digs", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"p", ",", "tuple"}], "}"}], ",", " ", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"vIndex", ",", "1", ",", 
        RowBox[{"Length", "[", "votes", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Count bad \>\"", " ", "<>", " ", 
     RowBox[{"ToString", "[", "vIndex", "]"}], " ", "<>", " ", "\"\< / \>\"", 
     " ", "<>", " ", 
     RowBox[{"ToString", "[", 
      RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
     "\"\< for prime \>\"", " ", "<>", " ", 
     RowBox[{"ToString", "[", "p", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.500362109145235*^9, 3.500362289247552*^9}, {
   3.5003625343551826`*^9, 3.500362554104817*^9}, {3.5003626598886027`*^9, 
   3.5003626948170643`*^9}, {3.5003627804456143`*^9, 3.500362784844822*^9}, {
   3.5003628650445633`*^9, 3.5003628711129737`*^9}, {3.500363594787109*^9, 
   3.500363614408231*^9}, {3.5005430911155567`*^9, 3.500543121575299*^9}, 
   3.5006100711235943`*^9, {3.501541119936017*^9, 3.501541153105914*^9}, 
   3.5015413250997515`*^9, {3.501594989362608*^9, 3.501594994853818*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountBadPositionGraphFor", "[", 
   RowBox[{"tuple_", ",", " ", "count_"}], "]"}], ":=", 
  RowBox[{"CountBadPositionGraphFor", "[", 
   RowBox[{"tuple", ",", " ", "count", ",", " ", "tuple"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5005435857458477`*^9, 3.500543605902001*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountBadPositionGraphFor", "[", 
   RowBox[{"tuple_", ",", " ", "count_", ",", " ", "plotTuple_"}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"votes", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
           RowBox[{"DynamicVoteList", "[", 
            RowBox[{"tuple", ",", " ", "count"}], "]"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"CountBadPosition", "[", 
          RowBox[{"votes", ",", "plotTuple"}], " ", "]"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0.6", "]"}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
          "\"\<count bad digits in voted value divided by length for \>\"", 
           " ", "<>", " ", 
           RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
           "\"\<\\n(\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
           "\"\< values)\\nLargest voted value (log10):\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"N", "[", 
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", 
               RowBox[{"votes", "[", 
                RowBox[{"[", "count", "]"}], "]"}]}], "  ", "]"}], "]"}], 
            "]"}], " ", "<>", " ", "\"\<\\nPlotted for :\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "plotTuple", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<N th vote\>\"", ",", "  ", 
            "\"\<Count bad / length representation\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQHXoy8qWjyCvHvR0nX4PoRVlTzd2BdN2OLGsQvfAB
o0YwkJbYpAGmQ9u4LUKA9Ac1NzD9hM19YxZIvWbAJhCd8jB6Yg6Q9m5MA9N3
+AzX1wLpNexLN4LoIzKLtoLoB88vbgPRe+LltBtB6oTddUF0qa1G40EgXWMw
twlEmxx80g6ifUzKe0F0xc09k0D0mjTHySDa7MnFlSC6rUl4NYh2cuXaAKJP
NWhvBNHTTy/bCaJr7QV3g+gY+6AjIDpsq9FREG1wSfMUiL7imQKmj03uvQii
C2SmXwbRJy73CT8F6eNXFwHRDW883z4D6fPQ+QyiAQ0xmTY=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountBadPositionGraphForPrimeVote", "[", 
   RowBox[{"tuple_", ",", " ", "count_", ",", " ", "primeVoteIndex_"}], "]"}],
   " ", ":=", " ", 
  RowBox[{"CountBadPositionGraphForPrimeVote", "[", 
   RowBox[{
   "tuple", ",", " ", "count", ",", " ", "primeVoteIndex", ",", " ", 
    "tuple"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5006258285168653`*^9, 3.5006258384304323`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CountBadPositionGraphForPrimeVote", "[", 
   RowBox[{
   "tuple_", ",", " ", "count_", ",", " ", "primeVoteIndex_", ",", " ", 
    "plotTuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"votes", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "[", 
             RowBox[{"[", "primeVoteIndex", " ", "]"}], "]"}], "&"}], ",", 
           RowBox[{"DynamicVoteList", "[", 
            RowBox[{"tuple", ",", " ", "count"}], "]"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"CountBadPosition", "[", 
          RowBox[{"votes", ",", " ", "plotTuple"}], "]"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0.6", "]"}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
          "\"\<count bad digits in vote divided by length for \>\"", " ", "<>",
            " ", 
           RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
           "\"\<\\n(\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
           "\"\< values)\\nvote for \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"tuple", "[", 
             RowBox[{"[", "primeVoteIndex", "]"}], "]"}], "]"}], "<>", " ", 
           "\"\<\\nPlotted for :\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "plotTuple", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<N th vote\>\"", ",", "  ", 
            "\"\<Count bad / length representation\>\""}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5002816748058267`*^9, 3.5002816942979417`*^9}, {
   3.5002925406692667`*^9, 3.500292571335021*^9}, {3.5003166939166183`*^9, 
   3.500316712202664*^9}, 3.5003170044773808`*^9, {3.500318305336786*^9, 
   3.5003183066758623`*^9}, {3.5003191748775206`*^9, 3.500319177091647*^9}, {
   3.500362466354663*^9, 3.5003624745134773`*^9}, {3.500369030135993*^9, 
   3.5003690304130087`*^9}, {3.5003980314005585`*^9, 3.500398043345242*^9}, {
   3.500625846594899*^9, 3.5006258878052564`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TotalBadPosition", "[", 
   RowBox[{"votes_", ",", " ", "tuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"vIndex", ",", "10000"}], "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{"PrintTemporary", "[", 
        RowBox[{"\"\<Total bad \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "vIndex", "]"}], " ", "<>", " ", 
         "\"\< / \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
         "\"\< for prime \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "p", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"With", " ", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"digs", "=", 
         RowBox[{"IntegerDigits", "[", 
          RowBox[{
           RowBox[{"votes", "[", 
            RowBox[{"[", "vIndex", "]"}], "]"}], ",", "p"}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"N", "[", 
        RowBox[{"Length", "[", 
         RowBox[{"Select", "[", 
          RowBox[{"digs", ",", 
           RowBox[{
            RowBox[{"#", "<=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"p", "+", "1"}], ")"}], "/", "2"}]}], "&"}]}], "]"}], 
         "]"}], " ", "]"}]}], "\[IndentingNewLine]", "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"p", ",", "tuple"}], "}"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"vIndex", ",", "1", ",", 
      RowBox[{"Length", "[", "votes", "]"}]}], "}"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.5003785004826655`*^9, 3.5003785235769863`*^9}, {
  3.50065658857624*^9, 3.500656588781252*^9}, {3.5006570163347063`*^9, 
  3.5006570167097282`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TotalBadPositionGraphFor", "[", 
   RowBox[{"tuple_", ",", " ", "count_"}], "]"}], " ", ":=", " ", 
  RowBox[{"TotalBadPositionGraphFor", "[", 
   RowBox[{"tuple", ",", " ", "count", ",", "  ", "tuple"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.500644888093011*^9, 3.5006448971785307`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TotalBadPositionGraphFor", "[", 
   RowBox[{"tuple_", ",", " ", "count_", ",", " ", "plotTuple_"}], "]"}], " ",
   ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"votes", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", 
           RowBox[{"DynamicVoteList", "[", 
            RowBox[{"tuple", ",", " ", "count"}], "]"}]}], "]"}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"TotalBadPosition", "[", 
          RowBox[{"votes", ",", " ", "plotTuple"}], "]"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0.6", "]"}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{
          "\"\<Total count bad digits length for \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
           "\"\<\\n(\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "[", "votes", "]"}], "]"}], "<>", " ", 
           "\"\< values)\\nPlotted for :\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "plotTuple", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<N th vote\>\"", ",", "  ", "\"\<Total bad\>\""}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5003785384668384`*^9, 3.500378579127164*^9}, {
  3.5006449037239046`*^9, 3.50064493983097*^9}, {3.5006449884477506`*^9, 
  3.500644988711766*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CumulativeVoteGraphFor", "[", 
   RowBox[{"tuple_", ",", " ", "count_", ",", " ", "primeIndex_"}], "]"}], 
  " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "\[IndentingNewLine]", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"votesForPrime", "=", 
         RowBox[{"Accumulate", "[", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "[", 
              RowBox[{"[", "primeIndex", "]"}], "]"}], "&"}], ",", 
            RowBox[{"DynamicVoteList", "[", 
             RowBox[{"tuple", ",", " ", "count"}], "]"}]}], "]"}], "]"}]}], 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListLogPlot", "[", "\[IndentingNewLine]", 
        RowBox[{"votesForPrime", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"Opacity", "[", "0.6", "]"}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<DarkRainbow\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"\"\<Logplot of cummulative votes \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
           "\"\<(\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "[", "votesForPrime", "]"}], "]"}], "<>", " ", 
           "\"\< values) - vote for prime\>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"tuple", "[", 
             RowBox[{"[", "primeIndex", "]"}], "]"}], " ", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AxesLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"\"\<N th vote\>\"", ",", "  ", "\"\<Total bad\>\""}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FontFamily", "\[Rule]", "\"\<Calibri\>\""}], ",", " ", 
            RowBox[{"FontSize", "\[Rule]", "Larger"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.500394442075396*^9, 3.5003945965156674`*^9}, {
  3.5003946632369843`*^9, 3.5003946637829857`*^9}, {3.5003947246854925`*^9, 
  3.5003947354495115`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNameForGoodBadSummary", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "result", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "result", " ", "=", " ", "\"\<d:\\\\Triangle\\\\Votes\\\\Summary\>\""}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"DirectoryQ", "[", "result", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"CreateDirectory", "[", "result", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{
      "result", " ", "<>", " ", 
       "\"\<\\\\Good-In-voted-values.txt\>\""}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5027881073784304`*^9, 3.5027881583783474`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FileNameForGoodBad", "[", "primes_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fileName", ",", " ", "temp", ",", " ", "sep", ",", " ", "p", ",", " ", 
      "pPos"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sep", " ", "=", " ", "\"\<\\\\\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", "\"\<d:\\\\triangle\\Votes\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pPos", " ", "=", "1"}], ",", " ", 
       RowBox[{"pPos", " ", "<=", " ", 
        RowBox[{"Length", "[", "primes", "]"}]}], ",", " ", 
       RowBox[{"pPos", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"temp", ",", " ", "sep", ",", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"primes", "[", 
             RowBox[{"[", "pPos", "]"}], "]"}], "]"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"DirectoryQ", "[", "temp", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"\"\<Creating directory \>\"", " ", "<>", " ", "temp"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"CreateDirectory", "[", "temp", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"temp", ",", " ", "\"\<\\\\GoodBadInVotedValues.txt\>\""}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fileName", " ", "=", " ", "temp"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "fileName", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.503219985931293*^9, 3.503219990229539*^9}, {
  3.503220035553131*^9, 3.5032200617176275`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SubFileNameForGoodBad", "[", 
   RowBox[{"primes_", ",", " ", "subTuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fileName", ",", " ", "temp", ",", " ", "sep", ",", " ", "p", ",", " ", 
      "pPos", ",", " ", "sub"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"sep", " ", "=", " ", "\"\<\\\\\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", "\"\<d:\\\\triangle\\Votes\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pPos", " ", "=", "1"}], ",", " ", 
       RowBox[{"pPos", " ", "<=", " ", 
        RowBox[{"Length", "[", "primes", "]"}]}], ",", " ", 
       RowBox[{"pPos", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"temp", " ", "=", " ", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"temp", ",", " ", "sep", ",", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"primes", "[", 
             RowBox[{"[", "pPos", "]"}], "]"}], "]"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"sub", " ", "=", " ", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"sep", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pPos", " ", "=", "1"}], ",", " ", 
       RowBox[{"pPos", " ", "<=", " ", 
        RowBox[{"Length", "[", "subTuple", "]"}]}], ",", " ", 
       RowBox[{"pPos", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sub", " ", "=", " ", 
         RowBox[{"StringJoin", "[", 
          RowBox[{"sub", ",", " ", "sep", ",", " ", 
           RowBox[{"ToString", "[", 
            RowBox[{"subTuple", "[", 
             RowBox[{"[", "pPos", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sep", "=", "\"\<-\>\""}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", " ", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"DirectoryQ", "[", "temp", "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"\"\<Creating directory \>\"", " ", "<>", " ", "temp"}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"CreateDirectory", "[", "temp", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"temp", " ", "=", " ", 
      RowBox[{"StringJoin", "[", 
       RowBox[{
       "temp", ",", " ", "\"\<\\\\GoodBadInVotedValues-\>\"", ",", " ", "sub",
         ",", " ", "\"\<.txt\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"fileName", " ", "=", " ", "temp"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "fileName", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5036421315573025`*^9, 3.5036421358075457`*^9}, {
   3.503642246990905*^9, 3.503642247503934*^9}, {3.503642292100485*^9, 
   3.503642366547743*^9}, 3.503642415916567*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcGoodBadSummary", "[", "tupleList_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "tuplePos", ",", " ", "tuple", ",", " ", "fileName", ",", " ", "values", 
      ",", " ", "found", ",", " ", "doneTuples", ",", " ", "votesVector", ",",
       "f", ",", " ", "result"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "first", " ", "read", " ", "whatever", " ", "has", " ", "been", " ", 
      "written", " ", "before"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForGoodBadSummary", "[", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FileExistsQ", "[", "fileName", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", " ", "=", 
         RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"values", " ", "=", " ", 
         RowBox[{"ReadList", "[", 
          RowBox[{"f", ",", " ", "Expression"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       " ", 
       RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"values", " ", "=", 
        RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"doneTuples", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], ",", " ", "values"}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"now", " ", "loop", " ", "over", " ", "all", " ", "tuples"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"tuplePos", " ", "=", " ", "1"}], ",", " ", 
         RowBox[{"tuplePos", " ", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "tupleList", "]"}]}], ",", " ", 
         RowBox[{"tuplePos", " ", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tuple", " ", "=", " ", 
           RowBox[{"Sort", "[", 
            RowBox[{"tupleList", "[", 
             RowBox[{"[", "tuplePos", "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"found", " ", "=", " ", "False"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"doneTuples", ",", " ", "tuple"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", "found", " ", "*)"}], "\[IndentingNewLine]", 
            ",", 
            RowBox[{"(*", "else", " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"votesVector", " ", "=", 
              RowBox[{"Accumulate", "[", " ", 
               RowBox[{"GoodAndBad", "[", "tuple", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"doneTuples", " ", "=", " ", 
              RowBox[{"Append", "[", 
               RowBox[{"doneTuples", ",", " ", "tuple"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", " ", "[", 
                RowBox[{"\"\<Writing : \>\"", " ", "<>", " ", "fileName"}], 
                "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"f", "=", " ", 
              RowBox[{"OpenAppend", "[", 
               RowBox[{"fileName", ",", " ", 
                RowBox[{"PageWidth", "\[Rule]", "40000"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Write", "[", 
              RowBox[{"f", ",", " ", 
               RowBox[{"{", 
                RowBox[{"tuple", ",", " ", 
                 RowBox[{"Last", "[", "votesVector", "]"}], ",", " ", 
                 RowBox[{"Length", "[", "votesVector", "]"}]}], "}"}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Close", "[", "f", "]"}], ";"}]}], "\[IndentingNewLine]",
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ToString", "[", "tuplePos", "]"}], " ", "<>", " ", 
        "\"\< - \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "tuple", "]"}], " ", "<>", " ", 
        "\"\< - \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", 
         RowBox[{"Length", "[", "tupleList", "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", " ", "=", " ", 
      RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"result", "=", " ", 
      RowBox[{"ReadList", "[", 
       RowBox[{"f", ",", " ", "Expression"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "f", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.502790062480256*^9, 3.5027901137141867`*^9}, {
   3.5027901482871637`*^9, 3.502790178450889*^9}, {3.502790231929948*^9, 
   3.502790268753054*^9}, {3.5027903059821835`*^9, 3.5027903464925003`*^9}, {
   3.5027933851803036`*^9, 3.502793396602957*^9}, {3.502793442926606*^9, 
   3.50279344893795*^9}, {3.502793502750028*^9, 3.5027935069992714`*^9}, {
   3.5027935751571693`*^9, 3.5027935771292825`*^9}, {3.5027936572658663`*^9, 
   3.5027936708926454`*^9}, {3.5027939027379065`*^9, 
   3.5027939175837555`*^9}, {3.502793988162792*^9, 3.5027940066348486`*^9}, 
   3.502794047317176*^9, {3.502794095698943*^9, 3.5027940979600725`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AllVotedValuesForTuple", "[", "primes_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"fileName", ",", " ", "result", ",", " ", "f"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"FileNameForVotedValues", "[", "primes", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"FileExistsQ", "[", "fileName", "]"}], "]"}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "=", 
         RowBox[{"OpenRead", "[", "fileName", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"result", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"f", ",", "Expression"}], "]"}]}], " ", ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Close", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       " ", 
       RowBox[{"\"\<Reading \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "fileName", "]"}]}]}], "\[IndentingNewLine]",
       "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", " ", "[", "result", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.501234158385661*^9, 3.5012341726264753`*^9}, {
  3.5012344724736257`*^9, 3.501234475409794*^9}, {3.5012575181585855`*^9, 
  3.501257548282239*^9}, {3.501938627813303*^9, 3.5019386371528373`*^9}, {
  3.502386696843388*^9, 3.5023867011177955`*^9}, {3.502544581067873*^9, 
  3.502544611192596*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"GoodAndBad", " ", "[", "tuple_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"values", " ", "=", " ", 
       RowBox[{"AllVotedValuesForTuple", "[", "tuple", "]"}]}], ",", " ", 
      "result", ",", " ", "index", ",", " ", "l"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"l", " ", "=", " ", 
      RowBox[{"Length", "[", "values", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"result", " ", "=", " ", 
      RowBox[{"Range", "[", "l", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"index", "=", "1"}], ",", " ", 
          RowBox[{"index", " ", "\[LessEqual]", " ", "l"}], ",", " ", 
          RowBox[{"index", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"IsGoodForTuple", "[", 
             RowBox[{
              RowBox[{"values", "[", 
               RowBox[{"[", "index", "]"}], "]"}], ",", " ", "tuple"}], "]"}],
             ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", "index", "]"}], "]"}], "=", "1"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", "index", "]"}], "]"}], "=", "0"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{
        RowBox[{"ToString", "[", "index", "]"}], " ", "<>", " ", 
        "\"\< / \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "l", "]"}], " ", "<>", " ", "\"\<  \>\"", 
        " ", "<>", " ", 
        RowBox[{"ToString", "[", "tuple", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.502544322168065*^9, 3.502544351678753*^9}, {
   3.502544620790145*^9, 3.502544808597887*^9}, {3.5025451847143993`*^9, 
   3.502545272228405*^9}, {3.502617071654747*^9, 3.5026171070687723`*^9}, 
   3.502631598689646*^9, {3.5026345733797884`*^9, 3.5026345824923096`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"magicGrahamk", "[", "primeList_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"Product", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p", " ", "+", " ", "1"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", "*", "p"}], ")"}]}], ")"}], "]"}], "^", "k"}], 
         ")"}], "/", 
        RowBox[{
         RowBox[{"Log", "[", "p", "]"}], "^", "k"}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"p", ",", " ", "primeList"}], "}"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], " ", "+", " ", 
   "1"}]}]], "Input",
 CellChangeTimes->{{3.502756369961154*^9, 3.5027564162728033`*^9}, {
  3.502756484847725*^9, 3.502756537253723*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcGoodAndBad", " ", "[", "tuple_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "inFile", ",", " ", "values", ",", "  ", "index", ",", " ", "l", ",", 
      " ", "file", ",", " ", 
      RowBox[{"range", "=", "1000"}], ",", " ", "continue", ",", " ", 
      "position", " ", ",", "inPosition", ",", " ", "inLength"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"values", "=", 
      RowBox[{"ReadList", "[", 
       RowBox[{"FileNameForGoodBad", "[", "tuple", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"position", " ", "=", " ", 
      RowBox[{"Length", "[", "values", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"file", " ", "=", " ", 
      RowBox[{"OpenAppend", "[", 
       RowBox[{"FileNameForGoodBad", "[", "tuple", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inLength", " ", "=", " ", 
      RowBox[{"FileByteCount", "[", 
       RowBox[{"FileNameForVotedValues", "[", "tuple", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inFile", " ", "=", " ", 
      RowBox[{"OpenRead", "[", 
       RowBox[{"FileNameForVotedValues", "[", "tuple", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Skip", "[", 
         RowBox[{"inFile", ",", " ", "Expression", ",", "position"}], "]"}], 
        ";"}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{"\"\<Skipping \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "position", "]"}], " ", "<>", " ", 
        "\"\< voted values (already calculated)\>\""}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inPosition", " ", "=", 
      RowBox[{"StreamPosition", "[", "inFile", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"values", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"inFile", ",", " ", "Expression", ",", " ", "range"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"inPosition", " ", "=", 
         RowBox[{"StreamPosition", "[", "inFile", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"continue", " ", "=", " ", 
         RowBox[{
          RowBox[{"Length", "[", "values", "]"}], ">", " ", "0"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{"continue", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"index", "=", "1"}], ",", " ", 
             RowBox[{"index", " ", "\[LessEqual]", " ", 
              RowBox[{"Length", "[", "values", "]"}]}], ",", " ", 
             RowBox[{"index", " ", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"IsGoodForTuple", "[", 
                 RowBox[{
                  RowBox[{"values", "[", 
                   RowBox[{"[", "index", "]"}], "]"}], ",", " ", "tuple"}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Write", "[", 
                 RowBox[{"file", ",", " ", "1"}], "]"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{"Write", "[", 
                 RowBox[{"file", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"position", " ", "+=", " ", 
            RowBox[{"Length", "[", "values", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"values", "=", 
            RowBox[{"ReadList", "[", 
             RowBox[{"inFile", ",", " ", "Expression", ",", " ", "range"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"inPosition", " ", "=", 
            RowBox[{"StreamPosition", "[", "inFile", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"continue", " ", "=", " ", 
            RowBox[{
             RowBox[{"Length", "[", "values", "]"}], ">", " ", "0"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
       "\[IndentingNewLine]", ",", " ", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"inPosition", "/", " ", "inLength"}], ")"}], " ", "*", 
           " ", "100"}], "]"}], "]"}], " ", "<>", " ", "\"\< - \>\"", " ", "<>",
         " ", 
        RowBox[{"ToString", "[", "position", "]"}]}]}], " ", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "inFile", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "position", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.503220097580679*^9, 3.503220456103185*^9}, {
   3.5032217307070885`*^9, 3.5032217978429284`*^9}, {3.503221840843388*^9, 
   3.5032218891321497`*^9}, {3.5032219359268265`*^9, 
   3.5032219735719795`*^9}, {3.5032221287178535`*^9, 3.503222170640251*^9}, {
   3.503222312771381*^9, 3.5032223572089224`*^9}, {3.5032239035563684`*^9, 
   3.5032239574424505`*^9}, 3.5032251172857895`*^9, {3.503314407888009*^9, 
   3.5033144193926673`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcGoodAndBadSub", " ", "[", 
   RowBox[{"tuple_", ",", " ", "subTuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "inFile", ",", " ", "values", ",", "  ", "index", ",", " ", "l", ",", 
      " ", "file", ",", " ", 
      RowBox[{"range", "=", "1000"}], ",", " ", "continue", ",", " ", 
      "position", " ", ",", "inPosition", ",", " ", "inLength", ",", " ", 
      "fileName"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"SubFileNameForGoodBad", "[", 
       RowBox[{"tuple", ",", " ", "subTuple"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"values", "=", 
         RowBox[{"ReadList", "[", "fileName", "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", " ", 
       RowBox[{"\"\<reading \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "fileName", "]"}], " ", "<>", " ", 
        "\"\< ...\>\""}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"position", " ", "=", " ", 
      RowBox[{"Length", "[", "values", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"file", " ", "=", " ", 
      RowBox[{"OpenAppend", "[", "fileName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inLength", " ", "=", " ", 
      RowBox[{"FileByteCount", "[", 
       RowBox[{"FileNameForVotedValues", "[", "tuple", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inFile", " ", "=", " ", 
      RowBox[{"OpenRead", "[", 
       RowBox[{"FileNameForVotedValues", "[", "tuple", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Skip", "[", 
         RowBox[{"inFile", ",", " ", "Expression", ",", "position"}], "]"}], 
        ";"}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{"\"\<Skipping \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "position", "]"}], " ", "<>", " ", 
        "\"\< voted values (already calculated)\>\""}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inPosition", " ", "=", 
      RowBox[{"StreamPosition", "[", "inFile", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"values", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"inFile", ",", " ", "Expression", ",", " ", "range"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"inPosition", " ", "=", 
         RowBox[{"StreamPosition", "[", "inFile", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"continue", " ", "=", " ", 
         RowBox[{
          RowBox[{"Length", "[", "values", "]"}], ">", " ", "0"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{"continue", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"index", "=", "1"}], ",", " ", 
             RowBox[{"index", " ", "\[LessEqual]", " ", 
              RowBox[{"Length", "[", "values", "]"}]}], ",", " ", 
             RowBox[{"index", " ", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"IsGoodForTuple", "[", 
                 RowBox[{
                  RowBox[{"values", "[", 
                   RowBox[{"[", "index", "]"}], "]"}], ",", " ", "subTuple"}],
                  "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Write", "[", 
                 RowBox[{"file", ",", " ", "1"}], "]"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{"Write", "[", 
                 RowBox[{"file", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"position", " ", "+=", " ", 
            RowBox[{"Length", "[", "values", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"values", "=", 
            RowBox[{"ReadList", "[", 
             RowBox[{"inFile", ",", " ", "Expression", ",", " ", "range"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"inPosition", " ", "=", 
            RowBox[{"StreamPosition", "[", "inFile", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"continue", " ", "=", " ", 
            RowBox[{
             RowBox[{"Length", "[", "values", "]"}], ">", " ", "0"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
       "\[IndentingNewLine]", ",", " ", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"inPosition", "/", " ", "inLength"}], ")"}], " ", "*", 
           " ", "100"}], "]"}], "]"}], " ", "<>", " ", "\"\< - \>\"", " ", "<>",
         " ", 
        RowBox[{"ToString", "[", "position", "]"}]}]}], " ", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "inFile", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "position", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.5036424419940586`*^9, 3.5036424755339766`*^9}, {
  3.5036425610638685`*^9, 3.5036425822030783`*^9}, {3.5036428001555443`*^9, 
  3.503642831479336*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CloseStreams", "[", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"Streams", "[", "]"}], "]"}], " ", ">", " ", "2"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Closing \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Close", "[", 
           RowBox[{
            RowBox[{"Streams", "[", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5032221813248625`*^9, 3.5032222562231464`*^9}, {
  3.503224933612284*^9, 3.503224939809639*^9}, {3.5042493777015595`*^9, 
  3.504249390719304*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RatioFor", "[", 
   RowBox[{"tuple_", ",", " ", "subTuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"RatioFor", "[", 
    RowBox[{"tuple", ",", "subTuple"}], "]"}], " ", "=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sorted", "=", 
        RowBox[{"Sort", "[", "tuple", "]"}]}], ",", " ", 
       RowBox[{"subSorted", "=", 
        RowBox[{"Sort", "[", "subTuple", "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Monitor", "[", 
       RowBox[{
        RowBox[{"CalcVotedValuesSummaryForRangePure", "[", 
         RowBox[{
          RowBox[{"{", "sorted", "}"}], ",", "1000000"}], "]"}], ",", " ", 
        RowBox[{"\"\<Calculating voted values for tuple \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "sorted", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Monitor", "[", 
       RowBox[{
        RowBox[{"CalcGoodAndBadSub", "[", 
         RowBox[{"sorted", ",", "subSorted"}], "]"}], ",", " ", 
        RowBox[{
        "\"\<Calculating good and bad for subtuple \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "subSorted", "]"}], " ", "<>", " ", 
         "\"\< in voted values of \>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", "sorted", "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"fileName", " ", "=", " ", 
          RowBox[{"SubFileNameForGoodBad", "[", 
           RowBox[{"sorted", ",", " ", "subSorted"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"With", " ", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"goodList", "=", 
            RowBox[{"Monitor", "[", 
             RowBox[{
              RowBox[{"Accumulate", "[", 
               RowBox[{"ReadList", "[", "fileName", "]"}], "]"}], ",", " ", 
              RowBox[{"\"\<Reading \>\"", " ", "<>", " ", "fileName"}]}], 
             "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Round", "[", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{"Mean", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"N", "[", 
                 RowBox[{
                  RowBox[{"goodList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "/", "i"}], "]"}], ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Max", "[", "tuple", "]"}], ",", 
                  RowBox[{"Length", "[", "goodList", "]"}]}], "}"}]}], "]"}], 
              "]"}], "]"}], ",", "0.000001"}], "]"}]}], "\[IndentingNewLine]",
          "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5039161485381727`*^9, 3.5039161992550735`*^9}, {
  3.5039358887282467`*^9, 3.5039359212611074`*^9}, {3.5040552418622427`*^9, 
  3.5040552423932734`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RatioFor", "[", "tuple_", "]"}], " ", ":=", " ", 
  RowBox[{"RatioFor", "[", 
   RowBox[{
    RowBox[{"Sort", "[", "tuple", "]"}], ",", 
    RowBox[{"Sort", "[", "tuple", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5039522281588087`*^9, 3.50395224076353*^9}, {
  3.5048856787342453`*^9, 3.504885689217845*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PlotLegends`\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrimeGoodPlotForTuple", "[", "tuple_", "]"}], " ", ":=", " ", 
  RowBox[{"PrimeGoodPlotForTuple", "[", 
   RowBox[{"tuple", ",", " ", "tuple"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5037229334366274`*^9, 3.503722969739704*^9}, {
  3.5037232318936987`*^9, 3.503723266047652*^9}, {3.503723360344045*^9, 
  3.5037233650233126`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrimeGoodPlotForTuple", "[", 
   RowBox[{"tuple_", ",", " ", "plotTuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"all", " ", "=", " ", 
          RowBox[{"Monitor", "[", 
           RowBox[{
            RowBox[{"Accumulate", "[", 
             RowBox[{"ReadList", "[", 
              RowBox[{"SubFileNameForGoodBad", "[", 
               RowBox[{"tuple", ",", "subTuple"}], "]"}], "]"}], "]"}], ",", 
            " ", 
            RowBox[{"\"\<Reading \>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", "subTuple", "]"}]}]}], "]"}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", 
         RowBox[{
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"all", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/", "i"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", " ", 
              RowBox[{"Length", "[", "all", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"\"\<Calculating \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "subTuple", "]"}], " ", "<>", " ", 
           "\"\< \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"subTuple", ",", " ", 
        RowBox[{"Subsets", "[", 
         RowBox[{"plotTuple", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"PlotLegend", "->", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"subTuple", ",", " ", 
       RowBox[{"{", 
        RowBox[{"subTuple", ",", " ", 
         RowBox[{"Subsets", "[", 
          RowBox[{"plotTuple", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"LegendPosition", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.1", ",", 
       RowBox[{"-", "0.4"}]}], "}"}]}], "\[IndentingNewLine]", ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "1000"}], "\[IndentingNewLine]", ",", " ", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.50372334853637*^9, 3.5037233813082447`*^9}, {
   3.5037263150110426`*^9, 3.5037263158010874`*^9}, {3.503726525692093*^9, 
   3.5037265449041915`*^9}, 3.5037376781429763`*^9, {3.503737723154551*^9, 
   3.503737733675153*^9}, {3.503740462392226*^9, 3.5037404676615276`*^9}, 
   3.5037410290906396`*^9, {3.503952920065384*^9, 3.5039529327491093`*^9}, 
   3.503953023786316*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SubFileNameForGoodBadInGood", "[", 
    RowBox[{"primes_", ",", " ", "subTuple_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fileName", ",", " ", "temp", ",", " ", "sep", ",", " ", "p", ",", " ", 
       "pPos", ",", " ", "sub"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"sep", " ", "=", " ", "\"\<\\\\\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", " ", "=", "\"\<d:\\\\triangle\\DataSrc\>\""}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"pPos", " ", "=", "1"}], ",", " ", 
        RowBox[{"pPos", " ", "<=", " ", 
         RowBox[{"Length", "[", "primes", "]"}]}], ",", " ", 
        RowBox[{"pPos", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"temp", " ", "=", " ", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"temp", ",", " ", "sep", ",", " ", 
            RowBox[{"ToString", "[", 
             RowBox[{"primes", "[", 
              RowBox[{"[", "pPos", "]"}], "]"}], "]"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"sub", " ", "=", " ", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"sep", "=", "\"\<\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"pPos", " ", "=", "1"}], ",", " ", 
        RowBox[{"pPos", " ", "<=", " ", 
         RowBox[{"Length", "[", "subTuple", "]"}]}], ",", " ", 
        RowBox[{"pPos", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sub", " ", "=", " ", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"sub", ",", " ", "sep", ",", " ", 
            RowBox[{"ToString", "[", 
             RowBox[{"subTuple", "[", 
              RowBox[{"[", "pPos", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"sep", "=", "\"\<-\>\""}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", " ", "[", 
       RowBox[{
        RowBox[{"Not", "[", 
         RowBox[{"DirectoryQ", "[", "temp", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"PrintTemporary", "[", 
           RowBox[{"\"\<Creating directory \>\"", " ", "<>", " ", "temp"}], 
           "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"CreateDirectory", "[", "temp", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp", " ", "=", " ", 
       RowBox[{"StringJoin", "[", 
        RowBox[{
        "temp", ",", " ", "\"\<\\\\SubGoodInSolutions-\>\"", ",", " ", "sub", 
         ",", " ", "\"\<.txt\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"fileName", " ", "=", " ", "temp"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "fileName", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5042970491962132`*^9, 3.50429709739697*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcGoodAndBadSubInGood", " ", "[", 
   RowBox[{"tuple_", ",", " ", "subTuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "inFile", ",", " ", "values", ",", "  ", "index", ",", " ", "l", ",", 
      " ", "file", ",", " ", 
      RowBox[{"range", "=", "1000"}], ",", " ", "continue", ",", " ", 
      "position", " ", ",", "inPosition", ",", " ", "inLength", ",", " ", 
      "fileName"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"fileName", " ", "=", " ", 
      RowBox[{"SubFileNameForGoodBadInGood", "[", 
       RowBox[{"tuple", ",", " ", "subTuple"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"values", "=", 
         RowBox[{"ReadList", "[", "fileName", "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", " ", 
       RowBox[{"\"\<reading \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "fileName", "]"}], " ", "<>", " ", 
        "\"\< ...\>\""}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"position", " ", "=", " ", 
      RowBox[{"Length", "[", "values", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"file", " ", "=", " ", 
      RowBox[{"OpenAppend", "[", "fileName", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inLength", " ", "=", " ", 
      RowBox[{"FileByteCount", "[", 
       RowBox[{"FileNameForTuple", "[", "tuple", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"inFile", " ", "=", " ", 
      RowBox[{"OpenRead", "[", 
       RowBox[{"FileNameForTuple", "[", "tuple", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"Skip", "[", 
         RowBox[{"inFile", ",", " ", "Expression", ",", "position"}], "]"}], 
        ";"}], "\[IndentingNewLine]", ",", " ", 
       RowBox[{"\"\<Skipping \>\"", " ", "<>", " ", 
        RowBox[{"ToString", "[", "position", "]"}], " ", "<>", " ", 
        "\"\< good values (already calculated)\>\""}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"inPosition", " ", "=", 
      RowBox[{"StreamPosition", "[", "inFile", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"values", "=", 
         RowBox[{"ReadList", "[", 
          RowBox[{"inFile", ",", " ", "Expression", ",", " ", "range"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"inPosition", " ", "=", 
         RowBox[{"StreamPosition", "[", "inFile", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"continue", " ", "=", " ", 
         RowBox[{
          RowBox[{"Length", "[", "values", "]"}], ">", " ", "0"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{"continue", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"index", "=", "1"}], ",", " ", 
             RowBox[{"index", " ", "\[LessEqual]", " ", 
              RowBox[{"Length", "[", "values", "]"}]}], ",", " ", 
             RowBox[{"index", " ", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"IsGoodForTuple", "[", 
                 RowBox[{
                  RowBox[{"values", "[", 
                   RowBox[{"[", "index", "]"}], "]"}], ",", " ", "subTuple"}],
                  "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Write", "[", 
                 RowBox[{"file", ",", " ", "1"}], "]"}], 
                "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                RowBox[{"Write", "[", 
                 RowBox[{"file", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"position", " ", "+=", " ", 
            RowBox[{"Length", "[", "values", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"values", "=", 
            RowBox[{"ReadList", "[", 
             RowBox[{"inFile", ",", " ", "Expression", ",", " ", "range"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"inPosition", " ", "=", 
            RowBox[{"StreamPosition", "[", "inFile", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"continue", " ", "=", " ", 
            RowBox[{
             RowBox[{"Length", "[", "values", "]"}], ">", " ", "0"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
       "\[IndentingNewLine]", ",", " ", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"inPosition", "/", " ", "inLength"}], ")"}], " ", "*", 
           " ", "100"}], "]"}], "]"}], " ", "<>", " ", "\"\< - \>\"", " ", "<>",
         " ", 
        RowBox[{"ToString", "[", "position", "]"}]}]}], " ", 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "inFile", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Close", "[", "file", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "position", "]"}], ";"}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 CellChangeTimes->{{3.5042970242217846`*^9, 3.5042970259818854`*^9}, {
  3.5042971105757236`*^9, 3.504297149184932*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrimeGoodPlotForTupleInGood", "[", 
   RowBox[{"tuple_", ",", " ", "plotTuple_"}], "]"}], " ", ":=", " ", 
  RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"With", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"all", " ", "=", " ", 
          RowBox[{"Monitor", "[", 
           RowBox[{
            RowBox[{"Accumulate", "[", 
             RowBox[{"ReadList", "[", 
              RowBox[{"SubFileNameForGoodBadInGood", "[", 
               RowBox[{"tuple", ",", "subTuple"}], "]"}], "]"}], "]"}], ",", 
            " ", 
            RowBox[{"\"\<Reading \>\"", " ", "<>", " ", 
             RowBox[{"ToString", "[", "subTuple", "]"}]}]}], "]"}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Monitor", "[", 
         RowBox[{
          RowBox[{"Table", "[", " ", 
           RowBox[{
            RowBox[{"N", "[", 
             RowBox[{
              RowBox[{"all", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/", "i"}], "]"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", " ", 
              RowBox[{"Length", "[", "all", "]"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"\"\<Calculating \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "subTuple", "]"}], " ", "<>", " ", 
           "\"\< \>\"", " ", "<>", " ", 
           RowBox[{"ToString", "[", "i", "]"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"subTuple", ",", " ", 
        RowBox[{"Subsets", "[", 
         RowBox[{"plotTuple", ",", 
          RowBox[{"{", "3", "}"}]}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
     "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"PlotLegend", "->", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"subTuple", ",", " ", 
       RowBox[{"{", 
        RowBox[{"subTuple", ",", " ", 
         RowBox[{"Subsets", "[", 
          RowBox[{"plotTuple", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"LegendPosition", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1.1", ",", 
       RowBox[{"-", "0.4"}]}], "}"}]}], "\[IndentingNewLine]", ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "1000"}], "\[IndentingNewLine]", ",", " ", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], "\[IndentingNewLine]", ",",
     " ", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"All", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.504297222040099*^9, 3.5042972362739134`*^9}, {
   3.50430016522044*^9, 3.504300173537915*^9}, 3.5045384880604596`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NthGoodForPrime", "[", 
   RowBox[{"n_", ",", " ", "p_"}], "]"}], " ", ":=", " ", 
  RowBox[{"FromDigits", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{"n", "-", "1"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", "+", "1"}], ")"}], "/", "2"}]}], "]"}], ",", "p"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.504447136885738*^9, 3.5044472471620455`*^9}, {
  3.5044473390062985`*^9, 3.50444733938232*^9}, {3.504447582973253*^9, 
  3.504447594852932*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"IndexOfGoodForPrime", "[", 
   RowBox[{"n_", ",", "p_"}], "]"}], " ", ":=", " ", 
  RowBox[{"FromDigits", "[", 
   RowBox[{
    RowBox[{"IntegerDigits", "[", 
     RowBox[{"n", ",", "p"}], "]"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"p", "+", "1"}], ")"}], "/", "2"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5044473932344007`*^9, 3.5044474303745246`*^9}, {
  3.504447483705575*^9, 3.5044474898879285`*^9}, {3.504447584257326*^9, 
  3.504447588950595*^9}}]
},
AutoGeneratedPackage->None,
CellGrouping->Manual,
WindowSize->{1912, 953},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (January 30, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 330, 6, 39, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[900, 30, 126, 2, 30, "Output"],
Cell[1029, 34, 266, 6, 29, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[1332, 45, 369, 7, 23, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[1704, 54, 5503, 131, 748, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[7244, 190, 389, 7, 23, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7636, 199, 1650, 39, 268, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[9323, 243, 243, 4, 23, "Item"],
Cell[9569, 249, 520, 16, 47, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[10126, 270, 353, 6, 23, "Item"],
Cell[10482, 278, 904, 27, 47, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[11423, 310, 256, 5, 23, "Item"],
Cell[11682, 317, 285, 7, 47, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[12004, 329, 282, 5, 23, "Item"],
Cell[12289, 336, 285, 7, 47, "Code"],
Cell[12577, 345, 397, 9, 41, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[13011, 359, 357, 7, 23, "Item"],
Cell[13371, 368, 2023, 48, 268, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[15431, 421, 377, 7, 23, "Item"],
Cell[15811, 430, 1346, 32, 208, "Code"]
}, Closed]],
Cell[17172, 465, 234, 4, 23, "Item"],
Cell[17409, 471, 347, 9, 47, "Code"],
Cell[CellGroupData[{
Cell[17781, 484, 272, 5, 39, "Input"],
Cell[18056, 491, 144, 2, 30, "Output"]
}, Open  ]],
Cell[18215, 496, 301, 5, 29, "Text"],
Cell[CellGroupData[{
Cell[18541, 505, 408, 7, 39, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[18952, 514, 1953, 44, 288, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[20942, 563, 491, 10, 71, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[21436, 575, 7540, 160, 1008, "Code",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[29013, 740, 375, 6, 39, "Item"],
Cell[29391, 748, 2850, 55, 268, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[32278, 808, 192, 4, 50, "Input"],
Cell[32473, 814, 130, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32640, 821, 515, 8, 55, "Item"],
Cell[33158, 831, 2396, 53, 328, "Code"]
}, Closed]],
Cell[CellGroupData[{
Cell[35591, 889, 262, 6, 50, "Input"],
Cell[35856, 897, 142, 2, 30, "Output"]
}, Open  ]],
Cell[36013, 902, 507, 9, 55, "Item"],
Cell[36523, 913, 2142, 48, 308, "Code"],
Cell[38668, 963, 2147, 50, 312, "Input"],
Cell[40818, 1015, 2078, 48, 292, "Input"],
Cell[42899, 1065, 1767, 40, 272, "Input"],
Cell[44669, 1107, 307, 7, 31, "Input"],
Cell[44979, 1116, 1013, 24, 172, "Input"],
Cell[45995, 1142, 5790, 128, 732, "Input"],
Cell[51788, 1272, 5980, 133, 772, "Input"],
Cell[57771, 1407, 3368, 69, 232, "Input"],
Cell[61142, 1478, 4464, 112, 372, "Input"],
Cell[65609, 1592, 7804, 155, 732, "Input"],
Cell[73416, 1749, 8022, 166, 852, "Input"],
Cell[81441, 1917, 6825, 149, 852, "Input"],
Cell[88269, 2068, 748, 12, 31, "Input"],
Cell[89020, 2082, 18775, 385, 1872, "Input"],
Cell[107798, 2469, 10532, 205, 752, "Input"],
Cell[CellGroupData[{
Cell[118355, 2678, 143, 1, 23, "Item"],
Cell[118501, 2681, 398, 7, 39, "Item"]
}, Open  ]],
Cell[118914, 2691, 1243, 29, 192, "Input"],
Cell[120160, 2722, 348, 6, 47, "Text"],
Cell[120511, 2730, 2122, 50, 172, "Input"],
Cell[122636, 2782, 317, 6, 31, "Input"],
Cell[122956, 2790, 4205, 85, 412, "Input"],
Cell[127164, 2877, 3966, 81, 392, "Input"],
Cell[131133, 2960, 927, 24, 72, "Input"],
Cell[132063, 2986, 4215, 90, 312, "Input"],
Cell[136281, 3078, 5559, 112, 592, "Input"],
Cell[141843, 3192, 348, 6, 47, "Text"],
Cell[142194, 3200, 2257, 50, 212, "Input"],
Cell[144454, 3252, 315, 6, 31, "Input"],
Cell[144772, 3260, 3345, 74, 372, "Input"],
Cell[148120, 3336, 414, 9, 31, "Input"],
Cell[148537, 3347, 3436, 73, 352, "Input"],
Cell[151976, 3422, 1945, 49, 172, "Input"],
Cell[153924, 3473, 326, 6, 31, "Input"],
Cell[154253, 3481, 2694, 59, 352, "Input"],
Cell[156950, 3542, 2822, 60, 352, "Input"],
Cell[159775, 3604, 901, 22, 172, "Input"],
Cell[160679, 3628, 2150, 50, 312, "Input"],
Cell[162832, 3680, 3174, 71, 432, "Input"],
Cell[166009, 3753, 5869, 125, 752, "Input"],
Cell[171881, 3880, 1763, 40, 272, "Input"],
Cell[173647, 3922, 2383, 52, 332, "Input"],
Cell[176033, 3976, 939, 27, 31, "Input"],
Cell[176975, 4005, 5447, 117, 692, "Input"],
Cell[182425, 4124, 5634, 123, 772, "Input"],
Cell[188062, 4249, 930, 24, 112, "Input"],
Cell[188995, 4275, 3066, 72, 232, "Input"],
Cell[192064, 4349, 351, 8, 31, "Input"],
Cell[192418, 4359, 77, 1, 31, "Input"],
Cell[192498, 4362, 368, 7, 31, "Input"],
Cell[192869, 4371, 2951, 67, 272, "Input"],
Cell[195823, 4440, 3253, 71, 532, "Input"],
Cell[199079, 4513, 5580, 122, 772, "Input"],
Cell[204662, 4637, 2869, 68, 292, "Input"],
Cell[207534, 4707, 544, 15, 31, "Input"],
Cell[208081, 4724, 509, 13, 31, "Input"]
}
]
*)

(* End of internal cache information *)
