(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1328569,      30264]
NotebookOptionsPosition[   1319055,      30106]
NotebookOutlinePosition[   1319398,      30121]
CellTagsIndexPosition[   1319355,      30118]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
A little formula to show what is always there, what sometimes and what is \
never\
\>", "Section",
 CellChangeTimes->{{3.778055307333727*^9, 
  3.7780553249685*^9}},ExpressionUUID->"27b253af-7c36-4c32-983d-c7ace8444423"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowAlwaysSometimesNever", "[", 
   RowBox[{"sols_", ",", "always_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "all", ",", "   ", "syms", ",", " ", "parts", ",", "alwaysparts", ",", 
      " ", 
      RowBox[{"byRank", "=", 
       RowBox[{"Association", "[", "]"}]}], ",", " ", 
      RowBox[{"alwaysbyRank", "=", 
       RowBox[{"Association", "[", "]"}]}], ",", " ", "level", ",", "pos", 
      ",", " ", "sym", ",", " ", "sympos", ",", " ", "sets", ",", " ", "type",
       ",", 
      RowBox[{"k", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"First", "  ", "[", "sols", "]"}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"byRank", "[", "rank", "]"}], "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"alwaysbyRank", "[", "rank", "]"}], "=", 
         RowBox[{"{", "}"}]}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"rank", ",", "k"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pos", "=", "1"}], ",", 
       RowBox[{"pos", "<=", 
        RowBox[{"Length", "[", "sols", "]"}]}], ",", 
       RowBox[{"pos", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sets", "=", 
         RowBox[{"sols", "[", 
          RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"level", "=", 
         RowBox[{"Length", "[", "sets", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"byRank", "[", "level", "]"}], "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"byRank", "[", "level", "]"}], ",", "sets"}], "]"}], 
          "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"pos", "=", "1"}], ",", 
       RowBox[{"pos", "<=", 
        RowBox[{"Length", "[", "always", "]"}]}], ",", 
       RowBox[{"pos", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sets", "=", 
         RowBox[{"always", "[", 
          RowBox[{"[", "pos", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"level", "=", 
         RowBox[{"Length", "[", "sets", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"alwaysbyRank", "[", "level", "]"}], "=", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"alwaysbyRank", "[", "level", "]"}], ",", "sets"}], "]"}],
           "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", "filter", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"parts", "=", 
           RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"syms", "=", 
           RowBox[{"byRank", "[", "rank", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", " ", "[", 
           RowBox[{
            RowBox[{"sympos", "=", "1"}], ",", 
            RowBox[{"sympos", "\[LessEqual]", " ", 
             RowBox[{"Length", "[", "syms", "]"}]}], ",", 
            RowBox[{"sympos", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"type", "=", 
              RowBox[{"syms", "[", 
               RowBox[{"[", "sympos", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"parts", "[", "type", "]"}], "=", "1"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"alwaysparts", "=", 
           RowBox[{"Association", "[", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"syms", "=", 
           RowBox[{"alwaysbyRank", "[", "rank", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", " ", "[", 
           RowBox[{
            RowBox[{"sympos", "=", "1"}], ",", 
            RowBox[{"sympos", "\[LessEqual]", " ", 
             RowBox[{"Length", "[", "syms", "]"}]}], ",", 
            RowBox[{"sympos", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"type", "=", 
              RowBox[{"syms", "[", 
               RowBox[{"[", "sympos", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"alwaysparts", "[", "type", "]"}], "=", "1"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"all", "=", 
           RowBox[{"IntegerPartitions", "[", 
            RowBox[{"k", ",", 
             RowBox[{"{", "rank", "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Grid", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"KeyExistsQ", "[", 
                   RowBox[{"parts", ",", "row"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{"alwaysparts", ",", "row"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"Darker", "[", "Green", "]"}], ",", "Bold"}], 
                    "]"}], "&"}], ",", "row"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "Blue"}], "]"}], "&"}], ",", "row"}], 
                    "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{"#", ",", "Red"}], "]"}], "&"}], ",", "row"}], 
                   "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"row", ",", "all"}], "}"}]}], "\[IndentingNewLine]", 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
             "]"}], ",", "\[IndentingNewLine]", "rank"}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"rank", ",", "k"}], "}"}]}], "\[IndentingNewLine]", "]"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"rank", ",", "k"}], "}"}]}], "\[IndentingNewLine]", "]"}]}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.778054557715975*^9, 3.7780547407310677`*^9}, {
   3.778054777876717*^9, 3.7780548914498215`*^9}, {3.7780549506245775`*^9, 
   3.778054952900777*^9}, {3.7780550214980245`*^9, 3.7780550577628593`*^9}, {
   3.7780550943021235`*^9, 3.7780551143965497`*^9}, {3.7780551553885336`*^9, 
   3.778055172841259*^9}, {3.7780552039838915`*^9, 3.778055204542349*^9}, {
   3.778055331309501*^9, 3.7780553402226257`*^9}, {3.7780555024976645`*^9, 
   3.7780555062771635`*^9}, 3.778055575058807*^9, {3.7780621190484285`*^9, 
   3.778062125022704*^9}},
 CellLabel->
  "In[551]:=",ExpressionUUID->"bd3b8f86-ec47-41e2-bc2e-5342ee9fad64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Calcalways", "[", "sols_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"max", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", "sols"}], "]"}], 
       "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", 
      RowBox[{"Select", "[", 
       RowBox[{"sols", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "max"}], "&"}]}], 
       "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.778055261912475*^9, 3.778055281353891*^9}, {
   3.778055462300008*^9, 3.7780554655617433`*^9}, 3.778055535274438*^9, 
   3.778055568562149*^9},
 CellLabel->
  "In[552]:=",ExpressionUUID->"049f1462-2966-455f-bfb6-c0c1aeb7604f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "countTable_", "]"}],
   ":=", 
  RowBox[{"ShowAlwaysSometimesNever", "[", 
   RowBox[{
    RowBox[{"Map", "[", 
     RowBox[{"First", ",", "countTable"}], "]"}], ",", 
    RowBox[{"Calcalways", "[", "countTable", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7780553929130807`*^9, 3.7780554157279835`*^9}},
 CellLabel->
  "In[553]:=",ExpressionUUID->"4cf3f82b-05ac-4d84-8d45-8922bc3d18fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalcNever", "[", "sols_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"size", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"First", "[", 
         RowBox[{"First", "[", "sols", "]"}], "]"}], "]"}]}], ",", "all", ",",
       " ", "never", ",", " ", "part"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"all", "=", 
      RowBox[{"IntegerPartitions", "[", "size", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"part", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"First", ",", "sols"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Select", "[", 
      RowBox[{"all", ",", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{"part", ",", "#"}], "]"}]}], "&"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7783365444345765`*^9, 3.778336716881847*^9}},
 CellLabel->
  "In[554]:=",ExpressionUUID->"c58460f5-a8cb-4100-96f2-2e623d21dd9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["This has been calculated in the cloud", "Section",
 CellChangeTimes->{{3.778055229416*^9, 
  3.778055242499445*^9}},ExpressionUUID->"61a6b79e-80fe-4ccf-b069-\
b667dc16ffb1"],

Cell["We define a set for each count", "Text",
 CellChangeTimes->{{3.778055244154231*^9, 
  3.7780552528284097`*^9}},ExpressionUUID->"9ff3fec3-5e4a-4e08-b39c-\
a4949ce62ec3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc14", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "4"}], "}"}], ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "4"}], "}"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "3"}], "}"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "6", ",", "2"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "3"}], "}"}], ",", "257660"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "2"}], "}"}], ",", "124697"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "3"}], "}"}], ",", "132751"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3", ",", "2"}], "}"}], ",", "187577"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "4", ",", "1"}], "}"}], ",", "14129"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "2", ",", "2"}], "}"}], ",", "10350"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "3", ",", "1"}], "}"}], ",", "4509"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "3", ",", "2"}], "}"}], ",", "16881"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "2", ",", "2"}], "}"}], ",", "6152"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "3", ",", "1"}], "}"}], ",", "2229"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "2", ",", "1"}], "}"}], ",", "216"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "6", ",", "1", ",", "1"}], "}"}], ",", "2"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "2", ",", "2"}], "}"}], ",", "136"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "3", ",", "1"}], "}"}], ",", "12"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "4", ",", "2", ",", "1"}], "}"}], ",", "6"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "2", ",", "2", ",", "2"}], "}"}], ",", "1"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "2"}], "}"}], ",", 
       "336922"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
       "337440"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
       "339099"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "337419"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
       "339700"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
       "195271"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "291369"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
       "294159"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "257273"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "234258"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "26195"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "49151"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "54836"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "35794"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "17582"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "387"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "884"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "668"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "4", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "31"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "337440"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "339721"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1"}], 
        "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "337440"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "339721"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "339701"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "339701"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "294198"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "294199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "294163"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "257650"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "26806"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "55080"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "54851"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "17918"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "940"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "694"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"8", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "337440"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "339721"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "339701"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "294199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "294199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "257650"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "55080"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "54851"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "940"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "8", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
         "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "339701"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "294199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "294199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "55080"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "940"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "294199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "55080"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "294199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "339722"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "339722"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "339722"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.77798174432911*^9, 3.7779817472888193`*^9}, 
   3.7780484216831193`*^9, {3.7780484730692577`*^9, 3.7780484766114244`*^9}, {
   3.7780543479654727`*^9, 3.778054351732253*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"ec54e9fb-26ac-4b27-b288-f366bbdaf3f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"always14", "=", 
   RowBox[{"Calcalways", "[", "doc14", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7780484371705832`*^9, 3.778048450373891*^9}, {
   3.778048489910328*^9, 3.7780485146757402`*^9}, {3.7780487108901353`*^9, 
   3.7780487136430597`*^9}, {3.7780543906011724`*^9, 
   3.7780544697910814`*^9}, {3.778055288338665*^9, 3.778055294242406*^9}, 
   3.7780553636962805`*^9},
 CellLabel->
  "In[556]:=",ExpressionUUID->"a26867e9-0b97-4b16-9926-484e7197cc99"],

Cell[BoxData[
 RowBox[{
  RowBox[{"never14", "=", 
   RowBox[{"CalcNever", "[", "doc14", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.782146306110742*^9, 3.7821463181394205`*^9}},
 CellLabel->
  "In[595]:=",ExpressionUUID->"53de919a-eaf5-498d-a3e2-28d045e4686b"],

Cell[CellGroupData[{

Cell[BoxData["never14"], "Input",
 CellChangeTimes->{{3.7821463220626335`*^9, 3.7821463239314537`*^9}},
 CellLabel->
  "In[596]:=",ExpressionUUID->"fcc684e3-8621-4e79-bfff-55bbbd64924e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "14", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7821463244005256`*^9},
 CellLabel->
  "Out[596]=",ExpressionUUID->"9829bbe4-b317-4f31-a3ad-9f52cc097f6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"PartitionTypeLattice", "[", "never14", "]"}], ",", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], ",",
    " ", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "\[Rule]", 
        RowBox[{"Rotate", "[", 
         RowBox[{
          RowBox[{"PartitionTypeLabel", "[", "#", "]"}], ",", 
          RowBox[{"Pi", "/", "6"}]}], "]"}]}], "&"}], ",", "never14"}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782146335960716*^9, 3.782146453245345*^9}},
 CellLabel->
  "In[603]:=",ExpressionUUID->"1baeca14-a4f7-431e-9791-d05db23bd681"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{13, 1}, {14}, {12, 2}, {11, 3}, {10, 4}, {9, 5}, {8, 6}, {7, 
       7}, {12, 1, 1}, {11, 2, 1}, {10, 3, 1}, {9, 4, 1}, {8, 5, 1}, {7, 6, 
       1}, {10, 2, 2}, {9, 3, 2}, {8, 4, 2}, {7, 5, 2}, {11, 1, 1, 1}, {10, 2,
        1, 1}, {9, 3, 1, 1}, {8, 4, 1, 1}, {7, 5, 1, 1}, {8, 3, 3}, {7, 4, 
       3}, {9, 2, 2, 1}, {8, 3, 2, 1}, {10, 1, 1, 1, 1}, {9, 2, 1, 1, 1}, {8, 
       3, 1, 1, 1}, {9, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6,
        2}, {7, 2}, {8, 2}, {9, 1}, {10, 1}, {11, 1}, {12, 1}, {13, 1}, {14, 
       1}, {9, 3}, {10, 3}, {15, 3}, {16, 3}, {17, 3}, {18, 3}, {19, 9}, {20, 
       9}, {21, 9}, {22, 9}, {23, 9}, {10, 4}, {11, 4}, {16, 4}, {24, 4}, {25,
        4}, {19, 10}, {20, 10}, {26, 10}, {27, 10}, {28, 19}, {29, 19}, {30, 
       19}, {11, 5}, {15, 5}, {12, 5}, {17, 5}, {25, 5}, {20, 11}, {21, 11}, {
       27, 11}, {20, 15}, {26, 15}, {28, 20}, {29, 20}, {31, 28}, {12, 6}, {
       16, 6}, {13, 6}, {18, 6}, {21, 12}, {26, 12}, {22, 12}, {21, 16}, {26, 
       16}, {27, 16}, {29, 21}, {30, 21}, {29, 26}, {31, 29}, {13, 7}, {17, 
       7}, {24, 7}, {14, 7}, {22, 13}, {27, 13}, {23, 13}, {22, 17}, {27, 
       17}, {30, 22}, {27, 24}, {30, 27}, {14, 8}, {18, 8}, {25, 8}, {23, 
       14}, {23, 18}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {{7, 4, 3} -> 
         Rotate["743", Rational[1, 6] Pi], {9, 2, 2, 1} -> 
         Rotate["9221", Rational[1, 6] Pi], {9, 3, 2} -> 
         Rotate["932", Rational[1, 6] Pi], {9, 2, 1, 1, 1} -> 
         Rotate["92111", Rational[1, 6] Pi], {8, 3, 1, 1, 1} -> 
         Rotate["83111", Rational[1, 6] Pi], {7, 5, 2} -> 
         Rotate["752", Rational[1, 6] Pi], {7, 6, 1} -> 
         Rotate["761", Rational[1, 6] Pi], {10, 2, 1, 1} -> 
         Rotate["10211", Rational[1, 6] Pi], {10, 2, 2} -> 
         Rotate["1022", Rational[1, 6] Pi], {8, 3, 3} -> 
         Rotate["833", Rational[1, 6] Pi], {8, 6} -> 
         Rotate["86", Rational[1, 6] Pi], {10, 1, 1, 1, 1} -> 
         Rotate["101111", Rational[1, 6] Pi], {8, 4, 2} -> 
         Rotate["842", Rational[1, 6] Pi], {11, 3} -> 
         Rotate["113", Rational[1, 6] Pi], {9, 4, 1} -> 
         Rotate["941", Rational[1, 6] Pi], {11, 1, 1, 1} -> 
         Rotate["11111", Rational[1, 6] Pi], {7, 5, 1, 1} -> 
         Rotate["7511", Rational[1, 6] Pi], {8, 4, 1, 1} -> 
         Rotate["8411", Rational[1, 6] Pi], {9, 5} -> 
         Rotate["95", Rational[1, 6] Pi], {10, 3, 1} -> 
         Rotate["1031", Rational[1, 6] Pi], {12, 1, 1} -> 
         Rotate["1211", Rational[1, 6] Pi], {13, 1} -> 
         Rotate["131", Rational[1, 6] Pi], {8, 5, 1} -> 
         Rotate["851", Rational[1, 6] Pi], {11, 2, 1} -> 
         Rotate["1121", Rational[1, 6] Pi], {10, 4} -> 
         Rotate["104", Rational[1, 6] Pi], {9, 3, 1, 1} -> 
         Rotate["9311", Rational[1, 6] Pi], {9, 1, 1, 1, 1, 1} -> 
         Rotate["911111", Rational[1, 6] Pi], {7, 7} -> 
         Rotate["77", Rational[1, 6] Pi], {8, 3, 2, 1} -> 
         Rotate["8321", Rational[1, 6] Pi], {12, 2} -> 
         Rotate["122", Rational[1, 6] Pi], {14} -> 
         Rotate["14", Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.015688259112475792`], 
        ArrowBox[{{0., 1.}, {0.9999999999388649, 0.}}, 0.06902834006574406], 
        ArrowBox[{{-0.9999999998152589, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.999999998547821, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.0000000000591456`, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.999999999365258, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.9999999984047747`, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{-2.815926487453112, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{-1.999999998331873, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{-1.999999998331873, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.4287950256839395`*^-10, 2.}, {0., 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.4287950256839395`*^-10, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.4287950256839395`*^-10, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.999999999042899, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{1.999999999042899, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.999999999042899, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.9999999999726867, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{0.9999999999726867, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.9999999999726867, 2.}, {1.999999999365258, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.9999999981329495`, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{3.9999999981329495`, 2.}, {1.999999999365258, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.9999999981329495`, 2.}, {3.9999999984047747`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.999999996575042, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{-3.999999996575042, 2.}, {3.9999999984047747`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.999999996575042, 2.}, {-2.815926487453112, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-2.9999999963155233`, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-2.9999999963155233`, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.999999998262126, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.999999998262126, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.999999998262126, 2.}, {1.999999999365258, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{4.999999998276252, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{4.999999998276252, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{4.999999998276252, 2.}, {3.9999999984047747`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-4.999999996668549, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-4.999999996668549, 2.}, {1.999999999365258, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-4.999999996668549, 2.}, {-2.815926487453112, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.4883594260783184, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.4883594260783184, 3.}, {3.4287950256839395`*^-10, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-1.4883594256354797`, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-1.4883594256354797`, 3.}, {3.4287950256839395`*^-10, 2.}},
          0.06902834006574406], 
        ArrowBox[{{-1.4883594256354797`, 3.}, {1.999999999042899, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-1.4883594256354797`, 3.}, {-2.9999999963155233`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.5116405743401629`, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.5116405743401629`, 3.}, {1.999999999042899, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.5116405743401629`, 3.}, {0.9999999999726867, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.5116405743401629`, 3.}, {2.999999998262126, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.5116405744122687`, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.5116405744122687`, 3.}, {0.9999999999726867, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.5116405744122687`, 3.}, {3.9999999981329495`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.5116405744122687`, 3.}, {4.999999998276252, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.160815638663081, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.160815638663081, 3.}, {3.9999999981329495`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.160815638663081, 3.}, {-3.999999996575042, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.160815638663081, 3.}, {-4.999999996668549, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{5.999999998686349, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{5.999999998686349, 2.}, {3.9999999984047747`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9999999984775911, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9999999984775911, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9999999984775911, 2.}, {-2.815926487453112, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.5116405743725068, 3.}, {3.4287950256839395`*^-10, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.5116405743725068, 3.}, {0.9999999999726867, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.5116405743725068, 3.}, {-2.9999999963155233`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.5116405743725068, 3.}, {2.999999998262126, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {3.4287950256839395`*^-10, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {1.999999999042899, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {3.9999999981329495`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {2.999999998262126, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {4.999999998276252, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {5.999999998686349, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9570967662338603, 4.}, {-0.4883594260783184, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9570967662338603, 4.}, {-1.4883594256354797`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.04290323352785208, 4.}, {-0.4883594260783184, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.04290323352785208, 4.}, {-1.4883594256354797`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.04290323352785208, 4.}, {1.5116405743401629`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.04290323352785208, 4.}, {0.5116405743725068, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.0117945879682395`, 4.}, {-0.4883594260783184, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.0117945879682395`, 4.}, {1.5116405743401629`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.0117945879682395`, 4.}, {2.5116405744122687`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.0117945879682395`, 4.}, {3.511640574494237, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.47092095124469324`, 5.}, {-0.9570967662338603, 4.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.47092095124469324`, 5.}, {0.04290323352785208, 4.}}, 
         0.06902834006574406]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"131\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06902834006574406, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999999388649, 0.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"14\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.069028340004609, 0.06902834006574406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9999999998152589, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"122\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9309716597495148, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.999999998547821, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"113\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.069028338613565, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0000000000591456, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"104\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0690283401248897, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.999999999365258, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"95\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.069028339431002, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9999999984047747, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"86\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.069028338470519, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.815926487453112, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"77\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.746898147387368, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.999999998331873, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"1211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.930971658266129, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4287950256839395*^-10, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"1121\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06902834040862356, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.999999999042899, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"1031\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.069028339108643, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999999726867, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"941\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0690283400384308, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9999999981329495, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"851\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.069028338198693, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.999999996575042, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"761\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.930971656509298, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.9999999963155233, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"1022\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.9309716562497794, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.999999998262126, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"932\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.06902833832787, 2.069028340065744}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.999999998276252, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"842\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.069028338341996, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.999999996668549, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"752\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.9309716566028055, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.4883594260783184, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"11111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.41933108601257435, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4883594256354797, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"10211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.4193310855697356, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5116405743401629, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"9311\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.580668914405907, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5116405744122687, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"8411\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.5806689144780126, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.160815638663081, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"7511\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.091787298597337, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.999999998686349, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"833\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.0690283387520925, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9999999984775911, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"743\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.930971658411847, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5116405743725068, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"9221\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.5806689144382509, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.511640574494237, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"8321\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.580668914559981, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9570967662338603, 4.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"101111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.8880684261681162, 4.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.04290323352785208, 4.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"92111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.11193157359359614, 4.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0117945879682395, 4.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"83111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0808229280339834, 4.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.47092095124469324, 5.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"911111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.4018926111789492, 5.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1056., Automatic}]], "Output",
 CellChangeTimes->{{3.78214634893498*^9, 3.78214645414753*^9}},
 CellLabel->"Out[603]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
7xYtXtzooeYQUTljX5IsfTmo+vKvUhGtwDK4oxU0G6ht7Et5rS9B+Z3URPQF
X8L64thzjsU4qCnYhY+bN2+Oi4v74MMbeDteWt7Yl2RLX/apvvwkrRxeBp2m
KAYmgaKYOsbepGi9IUnhoTDqHQtBOowh5Pjx4/ERzRHdKUa6y1no3qPo/qfU
eC1+QTdAYl0j3RU0ukkqFKxynUB4Q3qB3wTtydL6EcnCi+k0l7fQXKRo/k4i
kgYLWsxS30hzRRPNIkJBp/Fo1LYD7wRC6DeNuHCpvEZzRSPNKRaadyiav5V6
i6dAAkUn0FsWnTxgpLiSRjF/TwgdVG4wCm1FybtwgX3Uaa5kpLmChebtiua/
SjtIowkVhbDRREMjzZU1mqsIKqtoVFU2UlXRQtVWRdWfpaZRPAFNo3gCmoYX
NDLSVUWjq6qgq6pGVxUjXZUsdG1WdPHhkU9UwGhoYqSsqkZZNUFZNY2yqkbK
Klsoy1GUfSr1hbw6bnR79YeMdFXT6Kou6Kqu0VXNSFcVC13rFV23SsM8M/BF
npnpxCNGqqprVNUQVNXQqKpupKqqhao1iqobEvXkYUGV42EfNVJVQ6OqpqCq
pkZVDSNV1SxUrVRUvcdl6PaVuJd8JV7wmJGumhpdtQRdtTS6ahrpqm6ha5mi
611OF95m9HvNjXTV0uiqLeiqrdFVy0hXDQtdixVdfGwoIlnyayBN+bUnjHTV
1uiqI+iqo9FV20hXTQtdCxRdfJwX63ZcaJQcV+ApI1V1NKruE1Tdp1FVx0hV
LQtV8xRVZ0udqNKd32Ka2MJI1X0aVXUFVXU1qu4zUlXbQtVsRdUpqYlu/yOy
Wc8YqaqrUVVPUFVPo6qukao6FqpmKKr4yCIsX+X2P62MdNXT6Kov6Kqv0VXP
SNd9FrqmKrpKSh3/A8QL/6NSUYHnjJTV1yi7X1B2v0ZZfSNldS2UTVKU7S81
+x9Kcj5vpOt+ja4HBF0PaHTdb6SrnoWu8Yqu4lLhf1TGyPE/bY1UPaBR1UBQ
1UCj6gEjVfUtVI1RVBVJ1Lv9j8j9vGikqoFGVUNBVUONqgZGqu63UDVSUVVQ
6vgflcVR/uclI10NNboaCboaaXQ1NNL1gIWu4YqubaVh/gd3kf+hVEx7I12N
NLoaC7oaa3Q1MtLVwEJXhqKLx4Vm/4NHOxrpaqzR1UTQ1USjq7GRroYWugYr
unhU6MyyhPmfl41UNdGoelBQ9aBGVRMjVY0sVKUpqtaVmv0Pw3wXI1UPalQ9
JKh6SKPqQSNVjS1U9VdUreJUmWdTuhmpekij6mFB1cMaVQ8ZqWpioSpVUcVj
L9/5ku5Guh7W6HpE0PWIRtfDRroetNDVR9G1iLelMgke/9PDSNkjGmVNBWVN
NcoeMVL2kIWyXooyPilsnuPAo72MdDXV6HpU0PWoRldTF12QA9pgObWHLXS9
ouiaI1FvmLF41UjVoxpVjwmqHtOoonEKnsBzeFpQ9YiFqq6KKh7p+Mw9vGak
6jGNqmaCqmYaVY8ZqWpqoeplRdWUUoP/UbMIrxvpaqbR1VzQ1Vyjq5mRrkct
dHVQdE0oFf6HRv2a/+lrpKu5Rtfjgq7HNbqaG+l6zELXS4ouHk/4ZvL7G+l6
XKPrCUHXExpdjxvpamahq62ii0cUPtn4gUaqntCoelJQ9aRG1RNGqppbqGqt
qBomNdGQVR9kpOpJjaqnBFVPaVQ9aaTqcQtVrRRVQ0rN/oe1O9hI1VMaVU8L
qp7WqHrKSNUTFqpaKKq419Yz3cr/DDHS9bRGVwtBVwuNrqeNdD1poetJRVc/
iXhjJjvDSFcLja6Wgq6WGl0tjHQ9ZaGruaKL20zfbPUwI10tNbqeEXQ9o9HV
0kjX0xa6HlV09ZaYN2Sks4xUPaNR1UpQ1Uqj6hkjVS0sVD2sqOLe0eB9WMw1
0khVK42qZwVVz2pUtTJS1dJCVRNFVReJeS3nTN5nlJGuZzW6nhN0PafR9ayR
rmcsdDVUdPFxhCXnPMZI2XMaZa0FZa01yp4zUtbKQtn9irKXJOqNOedxRrpa
a3Q9L+h6XqOrtZGuZy101VV0cU/kk3OeYKTqeY2qNoKqNhpVzxupes5CVW1F
1XMS9Qb/M8lIVRuNqraCqrYaVW2MVLW2UFVDUcV1I9aYcw5MMVLVVqPqBUHV
CxpVbY1UPW+hqqqiilt834zzVCNdL2h0vSjoelGj6wUjXW0sdFVSdPH4xzfj
PN1I14saXS8Jul7S6HrRSFdbC10piq5HpCYak84zjXS9pNHVTtDVTqPrJSNd
L1joSlZ08VGlM+YP8z+zjVS106hqL6hqr1HVzkjVixaqEhRVDaUmGnLOc41U
tdeo6iCo6qBR1d5I1UsWqmIVVTxz6Jtznmekq4NGV0dBV0eNrg5GutpZ6Aop
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
dz+gYTrOiml9D3zFMmLavKO+npUz8RqmVW261a4KJn5VG8Mw/QrHdA8pvbDZ
yUh7OmmOjoYrbAz+6D1i2l4l4n4jXx7xkeDRt27B8BotchDWmlhFmZZ4NeOJ
n8qGY71+hD6fbl/V8WSpa6WxT0ZSrn5WNtxTodSNTPvp9XW0uxtqOLZnKvWc
D/cLtp3O7tUgYbK638qVaA3Dz2sYbuDDLe85WXwVP+0wFnOaJE9GQ8MIGK4o
JSnWjja5RwzHWTHcwIjhh1zSg9wy5hZhQI0ROx4WZ8d69nDo2dro67fupM3Y
0W9K/gFehsUHt/osOtWTpu+2VTi2bGV5cV1mn7xnalTR8GevkKLHHY01tPJ5
RXM+EzcRTuvy1/hhFCOMomPXJ608JPjPpZLo1/9SdcJAW43zfmdkek8Z5Jmi
AM/yeeYo1b5iH0QS90AXyUjY8rIj0l5Rr5ERkY1ELBCI23n0veV5bw6cVtA5
K+elIeu6j9osUHnCdUaEfsJiWPXx01c+wwupuIo7KzUrrCqJG5Xu2YsVBWfT
ZhZ6VjQyrq8qOO/ek1qx1MkjsH+9dZ0ra8hKseJQP8XyQQ2HFTxWs8+EbZv2
XiIcPuDx9jPWHnl1/NbuozdPWH4QSvqlaw+lbhN7jNly8OxNNK0jrokP4rxn
rPIdIuJcNcpY0lzi/RHQVs3VS3RMVIsoO9rsZ1k28Y1twnKacekzd746YSuh
jmwh+XO9gq95tpFWUPwqz15Az3oYcafPJ/qtfN+w6+KawvPcH+n72Gh3pDpl
Tf5b1YM9HU2VrNgrp939sIY9mmGZs+F4QclVrw3kPi4RnzcWX0qbvoOVAVxV
Yog0lT8etah45/HrxpXDDq/9zmL1nlXNz5+kCjViVhBky7Vwkap6u86Er3aP
2LNX+37IiL2apeasp7R85I+9tWwcvlQwYpDyqz+7zq/vasSgPqq3r4jVa0W2
8pGJzE5V0v6t4cGlXpvJOBvku8aoqYZLjuokFSuW+q854vaxvFsaNz77W4SR
EbdFiSpC9GOSJ5P6iA+XUjzI5Rl4ysN7ZhQjVQ1QZy+ItYUV7hG99tPVHzGi
t7IPeqV39pekfr6JeaURjaDvuk6S72REsZ7xt49/9MxWCx/5yDVHFbV/a3tQ
XEHDpb2OmX7GmV7pRq/abc9d1TdKxrjnw4Bp8rfOqMe+90ifK3/Uh3PlPcjm
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
YWYVenD7WUXbTCYfDyMAXD4ebkln8vFoujVC/9FfamEeBnIi+68//0VwV2h1
NQj0BucZem6gVdrBxhcXtfM4G4NoF/EJcQUgDFQxdABnmXOpEjuPZKL1mkQ8
wFwstE7xB7ksSc4azKvH3W/FyZqOjJJTOcSAKvoC+Abo97zFdJOuzc0BILSS
K5c7xEi8y79g7hdsmmcmqCe0A/UcXbW4NiwXtD4lj+bX80re9VbLiF7NbP0m
SqyZ0PM8SYDs0eI3kdCA08SA0XudMi1iuJPCWCLkvGlExa5Cs9Ozz2Wu4XFZ
mLmGu50mcw13GdHT0/v2GzflTkd0tust2moh66cK7S5P0poJ2e+S1dsm9q2p
oNa5OTS0ti9Mpmhavcx8wmx4eIGK2HAcjBse/2BWdV4i8YpYjcbcY9Qyj6at
EBQghVG1OZ+uiCjSK49u1S3ntf6bCKSbC6SbC2TZH4g+DCI19/cRz3kq8O7H
ny/fcmTozIcGjlk7ccmuhw+8+YcvDTKBPDUX9NCeNTVOU/LwIdwsmxSkVKFr
CCprGlDxxonzW7TpSCqSDqE+rIjkq4/Qh/E5SHMhce4O24y2axZR5Zykbhuh
OUtH55q9KOaTUsgxT+lf9L2+CnnNXUXU/Iqv6gmer7HfzZ5SuxyazEd9Ck1W
5OZvU7enRJ88eqzxCfVYdYRzC4Ezv5OKqf70FqjrWbB+kseTCSpKxZzVPKKP
RiuTX2TIbVumal8UvBPmF1H48XQvpOa/ffJ7WFbSO61MSNPpQpo6Chq2ENLT
Iam3pJyQt3iLqI+aHal560qLPW9lwbNzbB8ZMFIwOeLxaksNc/Ngx6x+ymT+
cHHcRj+1iJA9LY8+anJCfVQuEGwpEJTfzxEIip3VDOcyh0ic78dnzvH1tAww
d3bDiTNvPPrk2yjgYk7iuSXeGwvXj5SWfkJaaiOKtRTy4e4ezmilmDY8VQv3
7RU/6csjeLaVuWeLuYqZUU59nCK4t9LSgplfzF3CMb4f/+6PAKW14OJ+WR2T
sbyIdlLHoGFu5YT6pZVATH7nXXb4cuT1T+JJl3tkSUVCiFlfMYPnSAHuWX4b
5aXNlVOCOxQghNnvE96oZn5wEarUJ3XhLt+ZgvPbCWq0EhzcNqlLWgoq9Le6
JLODq5N6F1xjR82h4fX+Qm9PiTiTGpA2kuJBvaeWySI07PaHjHeXQ9Xx5xlZ
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
taLn4v0os61Hu1bIQq2QBe54+JnppCTaA0UrtQK/dgm0r3N91uHvwezcVmDQ
LECbY24n0G4rpKFtgDbnpVOSaJ8rWmon0GubRHuo6LloV96EHIy7rUXTrG3l
/pfc1+uTRPscgXZbgba8AUH19HrX5wXJNsW+dHzvRlB/a4uaWcm6u43MHnS/
JNZnC6zlHmXst6J6O1z0W6zYAqyT9z7I+mUG/8z8dFYS7bNEObkjLHcSVF9v
dL1eWMcZWt6eHnJWkJs0qLelwKuVRdnMSucmUe6XLOVRiKmrejki09+wvLxt
vb3gUD73K1qXud+g1SJCeWASZXkzU/rm7izKI12v70q1GpTuEOmDFkIK+N2v
YJm50+81X5REu49AK32ztER7lOi3L99clO8s0G4uZCB9u3I4Lw1Kot1b4NVc
4NUsgfYY1+tFFhtzzse3vTdFlwBtxlDLXKvpe339rHRlEu1TBFrNBFrxyafq
7VjX78WiVXlHZ/eIV2We9aYC7zjj6+Ak3nJPQd7gK08eVW9vFv0WrQZo9hCa
oYlojd+9v5W7D9XsNA9Non2SGLu8U7ZxEu3xrtdLBNryJsOeEdry7sPGosX4
/s7hSbTl/SvyJtRGCbRvEf32Z2l8259Cu+ilJcG9mvKmqaA1eY/kyCTaXcTY
G4mxN0yiPdH1+m7Rqrz/jU5VQGp9rtzdNaLFmqjFMUm0O4vxN0z2JIv2raLf
otVoN99rBnkDIb9725H+QT7j8oQk2nJtJMfeIIn2ZNfrpWKM8gatvpFeaCDQ
Tt6xlcn0OymJdnuBT4NkT7JoTxX9hswxnNq8zTyp6uMZAdqqdH2BtrwZrTpA
W81P05JoS3te3vRWnUR7muv1PclWPZZnWrRdeXknmLvD3aBdlUUbgMxIoi1v
PUjXm0X7NtFv0WqApvRdkDdWqe/KdqyyVGOSvYI5SZSlvShrc74OGZRnuN4u
EyjXEyjHniP1BBqVogdh5mkV0XtnEmN5R3C61izGt4te+xNieRfQeUFphV2l
RcXcfVspWjeecsGstDCJdlMxVlevQbsiifYs1+/lqXaDUQ+w5R2HyhtkykUP
KgK0lRWwJIm2tA1ku+UJtOeIXvs2y8Wozxf6QN5X4u7GMJZjmZVchoSpLdsk
2g1P0G7sbaV6O9f1e4UYtbxv9IJIH8h7MsqENIRZ9lVQ06ok2nI2k+1KDzrV
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
v/4vaUQV5A==\
\>"],ExpressionUUID->"01b8dda7-53e1-4bfe-a285-75012b3f8156"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPartitions", "[", 
  RowBox[{"14", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "7"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7821560482299385`*^9, 3.782156060715887*^9}},
 CellLabel->
  "In[608]:=",ExpressionUUID->"8f75bf03-d9fc-450b-9938-bf89dbf2a545"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "14", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "5", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "6", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "5", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "4", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "6", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "5", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "5", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "4", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.78215606179655*^9},
 CellLabel->
  "Out[608]=",ExpressionUUID->"455157e3-f775-4d60-833f-6203bbdba668"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"all", "=", 
      RowBox[{"IntegerPartitions", "[", 
       RowBox[{"14", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "6"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"never", "=", 
      RowBox[{"CalcNever", "[", "doc14", "]"}]}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"PartitionTypeLattice", "[", "all", "]"}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], 
     ",", " ", 
     RowBox[{"VertexLabels", "\[Rule]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"PartitionTypeLabel", "[", "#", "]"}], ",", 
            RowBox[{"Pi", "/", "6"}]}], "]"}]}], "&"}], ",", "all"}], "]"}]}],
      ",", 
     RowBox[{"GraphHighlight", "\[Rule]", 
      RowBox[{"PartitionTypeLattice", "[", "never", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7821560762387667`*^9, 3.782156121355364*^9}, {
  3.7821563571108856`*^9, 3.7821563577348166`*^9}},
 CellLabel->
  "In[616]:=",ExpressionUUID->"68e5fcb2-2d45-4d26-9d87-8c511f7eef46"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{13, 1}, {14}, {12, 2}, {11, 3}, {10, 4}, {9, 5}, {8, 6}, {7, 
       7}, {12, 1, 1}, {11, 2, 1}, {10, 3, 1}, {9, 4, 1}, {8, 5, 1}, {7, 6, 
       1}, {10, 2, 2}, {9, 3, 2}, {8, 4, 2}, {7, 5, 2}, {6, 6, 2}, {11, 1, 1, 
       1}, {10, 2, 1, 1}, {9, 3, 1, 1}, {8, 4, 1, 1}, {7, 5, 1, 1}, {6, 6, 1, 
       1}, {8, 3, 3}, {7, 4, 3}, {6, 5, 3}, {9, 2, 2, 1}, {8, 3, 2, 1}, {7, 4,
        2, 1}, {6, 5, 2, 1}, {10, 1, 1, 1, 1}, {9, 2, 1, 1, 1}, {8, 3, 1, 1, 
       1}, {7, 4, 1, 1, 1}, {6, 5, 1, 1, 1}, {6, 4, 4}, {5, 5, 4}, {7, 3, 3, 
       1}, {6, 4, 3, 1}, {5, 5, 3, 1}, {8, 2, 2, 2}, {7, 3, 2, 2}, {6, 4, 2, 
       2}, {5, 5, 2, 2}, {8, 2, 2, 1, 1}, {7, 3, 2, 1, 1}, {6, 4, 2, 1, 1}, {
       5, 5, 2, 1, 1}, {9, 1, 1, 1, 1, 1}, {8, 2, 1, 1, 1, 1}, {7, 3, 1, 1, 1,
        1}, {6, 4, 1, 1, 1, 1}, {5, 5, 1, 1, 1, 1}, {5, 4, 4, 1}, {6, 3, 3, 
       2}, {5, 4, 3, 2}, {6, 3, 3, 1, 1}, {5, 4, 3, 1, 1}, {7, 2, 2, 2, 1}, {
       6, 3, 2, 2, 1}, {5, 4, 2, 2, 1}, {7, 2, 2, 1, 1, 1}, {6, 3, 2, 1, 1, 
       1}, {5, 4, 2, 1, 1, 1}, {4, 4, 4, 2}, {4, 4, 4, 1, 1}, {5, 3, 3, 3}, {
       4, 4, 3, 3}, {5, 3, 3, 2, 1}, {4, 4, 3, 2, 1}, {5, 3, 3, 1, 1, 1}, {4, 
       4, 3, 1, 1, 1}, {6, 2, 2, 2, 2}, {5, 3, 2, 2, 2}, {4, 4, 2, 2, 2}, {6, 
       2, 2, 2, 1, 1}, {5, 3, 2, 2, 1, 1}, {4, 4, 2, 2, 1, 1}, {4, 3, 3, 3, 
       1}, {4, 3, 3, 2, 2}, {4, 3, 3, 2, 1, 1}, {5, 2, 2, 2, 2, 1}, {4, 3, 2, 
       2, 2, 1}, {3, 3, 3, 3, 2}, {3, 3, 3, 3, 1, 1}, {3, 3, 3, 2, 2, 1}, {4, 
       2, 2, 2, 2, 2}, {3, 3, 2, 2, 2, 2}}, {CompressedData["
1:eJwVxdWWogAAAFA7aFBCSQkVBQFXHQnBBlsxxvFxfmD//23P3pfb+v2b/uYy
mcwnm8n8P5vL5wq5Yq6UK+cquWoWyIJZKAtnkWw1D+TRPJbH80S+lq9XySpV
patMtVEFCmABKzQLbIEr1AES4AEBEAEJaNXlulJX61odLKJFqIgX2WK72CmS
IAUKYBfUwR5IojzaRw3URAdoi5RJi7RJhxySf1qj1rg1aX21oBJWgktEiSt1
ShTEQzQkQjo0hSiMxwTMwFzMw2RKoWzKpwJK5i1+xod8xP+RR/JcXshLGS7j
5WYZKdfKXLldpmEBZmAJ7sFTmMYFvI+LuIl7+ApXaItWaYcO6DUtNLtNt7lp
bpuKYAm2EAqxkAgjZawslJ2yV6z+rH/oH/un/siaW2frYl0tpEJU2AqDiEgX
aSASoiMMIRIGIREDwiNUxmY0ZsgEjMh2WYPVWY/dsqpoizPRESMxEcfqXJ2o
S3Wv2l2/G3dvXduYGaFxNFJjbM/thX2x7/Z8dp49Zs9ZoybVzJpb0xpOw29I
nM65XI/zuA2nSY4USkMpkmJpoi20L22p7TS9bban7VV723Z0Xw/1QE/0m+6Y
oXkwI/NkpubEWThnZ+lcnbvju6Ebu6n7chf+zr/73/4iPIeX8Bm+w/Phcfg5
fA69zqAz7XidYS/oxb3hIBocB1/D5fAyDKbRdD1NpoEXebF39BIv9ZbBLrgE
++AeLKNL9Iiu0TOKN7fNa7OLL/E9fseX4+P4PH6O61WyOq326+s62d626Xaf
XJN78kyup+fp53S/fd/et3v6TN/pJ/1+vV//AFpYdZU=
       "], Null}, {GraphHighlight -> {
         DirectedEdge[{7, 5, 1, 1}, {8, 5, 1}], 
         DirectedEdge[{7, 5, 2}, {9, 5}], 
         DirectedEdge[{8, 3, 1, 1, 1}, {9, 3, 1, 1}], 
         DirectedEdge[{9, 3, 1, 1}, {9, 3, 2}], 
         DirectedEdge[{12, 2}, {14}], 
         DirectedEdge[{9, 3, 2}, {11, 3}], 
         DirectedEdge[{8, 3, 2, 1}, {10, 3, 1}], 
         DirectedEdge[{10, 2, 2}, {12, 2}], 
         DirectedEdge[{9, 2, 2, 1}, {11, 2, 1}], 
         DirectedEdge[{9, 3, 1, 1}, {10, 3, 1}], 
         DirectedEdge[{10, 2, 1, 1}, {10, 2, 2}], 
         DirectedEdge[{10, 2, 1, 1}, {12, 1, 1}], 
         DirectedEdge[{9, 1, 1, 1, 1, 1}, {9, 2, 1, 1, 1}], 
         DirectedEdge[{8, 3, 2, 1}, {8, 4, 2}], 
         DirectedEdge[{9, 2, 1, 1, 1}, {9, 2, 2, 1}], 
         DirectedEdge[{11, 3}, {14}], 
         DirectedEdge[{9, 2, 1, 1, 1}, {10, 2, 1, 1}], 
         DirectedEdge[{10, 2, 1, 1}, {11, 2, 1}], 
         DirectedEdge[{11, 1, 1, 1}, {12, 1, 1}], 
         DirectedEdge[{10, 1, 1, 1, 1}, {10, 2, 1, 1}], 
         DirectedEdge[{11, 1, 1, 1}, {11, 2, 1}], 
         DirectedEdge[{7, 5, 1, 1}, {7, 5, 2}], 
         DirectedEdge[{11, 2, 1}, {12, 2}], 
         DirectedEdge[{11, 2, 1}, {11, 3}], 
         DirectedEdge[{7, 6, 1}, {7, 7}], 
         DirectedEdge[{10, 1, 1, 1, 1}, {11, 1, 1, 1}], 
         DirectedEdge[{10, 2, 2}, {10, 4}], 
         DirectedEdge[{9, 2, 2, 1}, {9, 4, 1}], 
         DirectedEdge[{9, 3, 1, 1}, {12, 1, 1}], 
         DirectedEdge[{8, 4, 2}, {10, 4}], 
         DirectedEdge[{10, 3, 1}, {13, 1}], 
         DirectedEdge[{9, 2, 1, 1, 1}, {11, 1, 1, 1}], 
         DirectedEdge[{8, 3, 2, 1}, {11, 2, 1}], 
         DirectedEdge[{8, 3, 1, 1, 1}, {8, 3, 2, 1}], 
         DirectedEdge[{9, 5}, {14}], 
         DirectedEdge[{8, 3, 3}, {8, 6}], 
         DirectedEdge[{7, 5, 2}, {7, 7}], 
         DirectedEdge[{8, 5, 1}, {13, 1}], 
         DirectedEdge[{7, 4, 3}, {7, 7}], 
         DirectedEdge[{7, 6, 1}, {8, 6}], 
         DirectedEdge[{10, 3, 1}, {10, 4}], 
         DirectedEdge[{9, 4, 1}, {10, 4}], 
         DirectedEdge[{8, 3, 1, 1, 1}, {8, 4, 1, 1}], 
         DirectedEdge[{8, 3, 3}, {11, 3}], 
         DirectedEdge[{9, 3, 2}, {12, 2}], 
         DirectedEdge[{9, 1, 1, 1, 1, 1}, {10, 1, 1, 1, 1}], 
         DirectedEdge[{7, 5, 2}, {12, 2}], 
         DirectedEdge[{10, 4}, {14}], 
         DirectedEdge[{9, 3, 2}, {9, 5}], 
         DirectedEdge[{8, 4, 1, 1}, {12, 1, 1}], 
         DirectedEdge[{8, 3, 1, 1, 1}, {11, 1, 1, 1}], 
         DirectedEdge[{11, 2, 1}, {13, 1}], 
         DirectedEdge[{8, 3, 2, 1}, {8, 3, 3}], 
         DirectedEdge[{7, 6, 1}, {13, 1}], 
         DirectedEdge[{9, 4, 1}, {9, 5}], 
         DirectedEdge[{8, 6}, {14}], 
         DirectedEdge[{9, 2, 1, 1, 1}, {9, 3, 1, 1}], 
         DirectedEdge[{8, 3, 2, 1}, {8, 5, 1}], 
         DirectedEdge[{8, 4, 1, 1}, {9, 4, 1}], 
         DirectedEdge[{8, 5, 1}, {9, 5}], 
         DirectedEdge[{8, 4, 1, 1}, {8, 5, 1}], 
         DirectedEdge[{12, 1, 1}, {13, 1}], 
         DirectedEdge[{12, 1, 1}, {12, 2}], 
         DirectedEdge[{9, 4, 1}, {13, 1}], 
         DirectedEdge[{9, 3, 1, 1}, {9, 4, 1}], 
         DirectedEdge[{9, 2, 2, 1}, {9, 3, 2}], 
         DirectedEdge[{7, 4, 3}, {10, 4}], 
         DirectedEdge[{13, 1}, {14}], 
         DirectedEdge[{7, 5, 1, 1}, {7, 6, 1}], 
         DirectedEdge[{10, 3, 1}, {11, 3}], 
         DirectedEdge[{8, 4, 2}, {8, 6}], 
         DirectedEdge[{7, 4, 3}, {11, 3}], 
         DirectedEdge[{8, 4, 1, 1}, {8, 4, 2}], 
         DirectedEdge[{10, 2, 1, 1}, {10, 3, 1}], 
         DirectedEdge[{8, 5, 1}, {8, 6}], 
         DirectedEdge[{9, 2, 2, 1}, {10, 2, 2}], 
         DirectedEdge[{7, 7}, {14}], 
         DirectedEdge[{8, 4, 2}, {12, 2}], 
         DirectedEdge[{8, 3, 2, 1}, {9, 3, 2}], 
         DirectedEdge[{7, 5, 1, 1}, {12, 1, 1}]}, GraphLayout -> 
       "LayeredDigraphEmbedding", 
       VertexLabels -> {{4, 4, 3, 3} -> 
         Rotate["4433", Rational[1, 6] Pi], {5, 4, 2, 2, 1} -> 
         Rotate["54221", Rational[1, 6] Pi], {6, 5, 1, 1, 1} -> 
         Rotate["65111", Rational[1, 6] Pi], {4, 4, 4, 2} -> 
         Rotate["4442", Rational[1, 6] Pi], {9, 3, 2} -> 
         Rotate["932", Rational[1, 6] Pi], {4, 4, 3, 1, 1, 1} -> 
         Rotate["443111", Rational[1, 6] Pi], {8, 2, 2, 2} -> 
         Rotate["8222", Rational[1, 6] Pi], {8, 4, 2} -> 
         Rotate["842", Rational[1, 6] Pi], {7, 4, 2, 1} -> 
         Rotate["7421", Rational[1, 6] Pi], {5, 3, 3, 3} -> 
         Rotate["5333", Rational[1, 6] Pi], {6, 4, 2, 1, 1} -> 
         Rotate["64211", Rational[1, 6] Pi], {8, 6} -> 
         Rotate["86", Rational[1, 6] Pi], {3, 3, 3, 3, 2} -> 
         Rotate["33332", Rational[1, 6] Pi], {12, 2} -> 
         Rotate["122", Rational[1, 6] Pi], {7, 3, 2, 1, 1} -> 
         Rotate["73211", Rational[1, 6] Pi], {8, 2, 2, 1, 1} -> 
         Rotate["82211", Rational[1, 6] Pi], {10, 4} -> 
         Rotate["104", Rational[1, 6] Pi], {5, 2, 2, 2, 2, 1} -> 
         Rotate["522221", Rational[1, 6] Pi], {5, 5, 2, 1, 1} -> 
         Rotate["55211", Rational[1, 6] Pi], {5, 4, 2, 1, 1, 1} -> 
         Rotate["542111", Rational[1, 6] Pi], {7, 6, 1} -> 
         Rotate["761", Rational[1, 6] Pi], {5, 5, 1, 1, 1, 1} -> 
         Rotate["551111", Rational[1, 6] Pi], {6, 4, 1, 1, 1, 1} -> 
         Rotate["641111", Rational[1, 6] Pi], {4, 4, 4, 1, 1} -> 
         Rotate["44411", Rational[1, 6] Pi], {5, 3, 3, 2, 1} -> 
         Rotate["53321", Rational[1, 6] Pi], {7, 4, 1, 1, 1} -> 
         Rotate["74111", Rational[1, 6] Pi], {13, 1} -> 
         Rotate["131", Rational[1, 6] Pi], {4, 4, 3, 2, 1} -> 
         Rotate["44321", Rational[1, 6] Pi], {7, 2, 2, 1, 1, 1} -> 
         Rotate["722111", Rational[1, 6] Pi], {11, 1, 1, 1} -> 
         Rotate["11111", Rational[1, 6] Pi], {7, 5, 2} -> 
         Rotate["752", Rational[1, 6] Pi], {6, 5, 2, 1} -> 
         Rotate["6521", Rational[1, 6] Pi], {9, 2, 2, 1} -> 
         Rotate["9221", Rational[1, 6] Pi], {4, 3, 2, 2, 2, 1} -> 
         Rotate["432221", Rational[1, 6] Pi], {12, 1, 1} -> 
         Rotate["1211", Rational[1, 6] Pi], {10, 2, 1, 1} -> 
         Rotate["10211", Rational[1, 6] Pi], {8, 3, 2, 1} -> 
         Rotate["8321", Rational[1, 6] Pi], {6, 2, 2, 2, 2} -> 
         Rotate["62222", Rational[1, 6] Pi], {7, 2, 2, 2, 1} -> 
         Rotate["72221", Rational[1, 6] Pi], {8, 2, 1, 1, 1, 1} -> 
         Rotate["821111", Rational[1, 6] Pi], {9, 1, 1, 1, 1, 1} -> 
         Rotate["911111", Rational[1, 6] Pi], {6, 4, 2, 2} -> 
         Rotate["6422", Rational[1, 6] Pi], {5, 5, 3, 1} -> 
         Rotate["5531", Rational[1, 6] Pi], {5, 5, 4} -> 
         Rotate["554", Rational[1, 6] Pi], {4, 3, 3, 2, 2} -> 
         Rotate["43322", Rational[1, 6] Pi], {5, 4, 3, 2} -> 
         Rotate["5432", Rational[1, 6] Pi], {10, 1, 1, 1, 1} -> 
         Rotate["101111", Rational[1, 6] Pi], {7, 3, 3, 1} -> 
         Rotate["7331", Rational[1, 6] Pi], {4, 4, 2, 2, 1, 1} -> 
         Rotate["442211", Rational[1, 6] Pi], {7, 7} -> 
         Rotate["77", Rational[1, 6] Pi], {6, 6, 2} -> 
         Rotate["662", Rational[1, 6] Pi], {5, 3, 2, 2, 2} -> 
         Rotate["53222", Rational[1, 6] Pi], {3, 3, 2, 2, 2, 2} -> 
         Rotate["332222", Rational[1, 6] Pi], {6, 3, 3, 1, 1} -> 
         Rotate["63311", Rational[1, 6] Pi], {4, 2, 2, 2, 2, 2} -> 
         Rotate["422222", Rational[1, 6] Pi], {11, 3} -> 
         Rotate["113", Rational[1, 6] Pi], {6, 3, 2, 1, 1, 1} -> 
         Rotate["632111", Rational[1, 6] Pi], {5, 3, 3, 1, 1, 1} -> 
         Rotate["533111", Rational[1, 6] Pi], {10, 2, 2} -> 
         Rotate["1022", Rational[1, 6] Pi], {6, 4, 4} -> 
         Rotate["644", Rational[1, 6] Pi], {9, 2, 1, 1, 1} -> 
         Rotate["92111", Rational[1, 6] Pi], {6, 6, 1, 1} -> 
         Rotate["6611", Rational[1, 6] Pi], {11, 2, 1} -> 
         Rotate["1121", Rational[1, 6] Pi], {3, 3, 3, 2, 2, 1} -> 
         Rotate["333221", Rational[1, 6] Pi], {5, 3, 2, 2, 1, 1} -> 
         Rotate["532211", Rational[1, 6] Pi], {10, 3, 1} -> 
         Rotate["1031", Rational[1, 6] Pi], {5, 5, 2, 2} -> 
         Rotate["5522", Rational[1, 6] Pi], {6, 4, 3, 1} -> 
         Rotate["6431", Rational[1, 6] Pi], {8, 5, 1} -> 
         Rotate["851", Rational[1, 6] Pi], {8, 4, 1, 1} -> 
         Rotate["8411", Rational[1, 6] Pi], {6, 2, 2, 2, 1, 1} -> 
         Rotate["622211", Rational[1, 6] Pi], {6, 5, 3} -> 
         Rotate["653", Rational[1, 6] Pi], {7, 3, 1, 1, 1, 1} -> 
         Rotate["731111", Rational[1, 6] Pi], {14} -> 
         Rotate["14", Rational[1, 6] Pi], {6, 3, 2, 2, 1} -> 
         Rotate["63221", Rational[1, 6] Pi], {9, 3, 1, 1} -> 
         Rotate["9311", Rational[1, 6] Pi], {8, 3, 1, 1, 1} -> 
         Rotate["83111", Rational[1, 6] Pi], {3, 3, 3, 3, 1, 1} -> 
         Rotate["333311", Rational[1, 6] Pi], {8, 3, 3} -> 
         Rotate["833", Rational[1, 6] Pi], {4, 3, 3, 3, 1} -> 
         Rotate["43331", Rational[1, 6] Pi], {7, 3, 2, 2} -> 
         Rotate["7322", Rational[1, 6] Pi], {5, 4, 4, 1} -> 
         Rotate["5441", Rational[1, 6] Pi], {4, 4, 2, 2, 2} -> 
         Rotate["44222", Rational[1, 6] Pi], {9, 4, 1} -> 
         Rotate["941", Rational[1, 6] Pi], {4, 3, 3, 2, 1, 1} -> 
         Rotate["433211", Rational[1, 6] Pi], {7, 5, 1, 1} -> 
         Rotate["7511", Rational[1, 6] Pi], {9, 5} -> 
         Rotate["95", Rational[1, 6] Pi], {7, 4, 3} -> 
         Rotate["743", Rational[1, 6] Pi], {6, 3, 3, 2} -> 
         Rotate["6332", Rational[1, 6] Pi], {5, 4, 3, 1, 1} -> 
         Rotate["54311", Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.010303881777544568`], 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{0., 1.}, {4.0000000003755645`, 0.}}, 0.09589853252974426]}
         , 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{2.0000000000989075`, 1.}, {4.0000000003755645`, 0.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{6.000000001202011, 1.}, {4.0000000003755645`, 0.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.000000000552575, 1.}, {4.0000000003755645`, 0.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{2.9999999994691393`, 1.}, {4.0000000003755645`, 0.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{7.545784237607336, 1.}, {4.0000000003755645`, 0.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{4.0000000003548735`, 1.}, {4.0000000003755645`, 0.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-3.526223887810545, 2.}, {0., 1.}}, 0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-3.526223887810545, 2.}, {2.0000000000989075`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.000000000056332, 2.}, {0., 1.}}, 0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.000000000056332, 2.}, {2.0000000000989075`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.000000000056332, 2.}, {6.000000001202011, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{4.000000000175078, 2.}, {0., 1.}}, 0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{4.000000000175078, 2.}, {6.000000001202011, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{4.000000000175078, 2.}, {5.000000000552575, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-0.9999999999477609, 2.}, {0., 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-0.9999999999477609, 2.}, {5.000000000552575, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-0.9999999999477609, 2.}, {2.9999999994691393`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.792344381916337*^-11, 2.}, {0., 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.792344381916337*^-11, 2.}, {2.9999999994691393`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.792344381916337*^-11, 2.}, {7.545784237607336, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{1.000000000088619, 2.}, {0., 1.}}, 0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{1.000000000088619, 2.}, {7.545784237607336, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{1.000000000088619, 2.}, {4.0000000003548735`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.000000000225043, 2.}, {2.0000000000989075`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.000000000225043, 2.}, {5.000000000552575, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{6.000000000205432, 2.}, {2.0000000000989075`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{6.000000000205432, 2.}, {6.000000001202011, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{6.000000000205432, 2.}, {2.9999999994691393`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{7.000000000246644, 2.}, {2.0000000000989075`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{7.000000000246644, 2.}, {5.000000000552575, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{7.000000000246644, 2.}, {7.545784237607336, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{2.000000000121986, 2.}, {2.0000000000989075`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{2.000000000121986, 2.}, {2.9999999994691393`, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{2.000000000121986, 2.}, {4.0000000003548735`, 1.}}, 
          0.09589853252974426]}, 
        ArrowBox[{{8.000000000273076, 2.}, {2.0000000000989075`, 1.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000000273076, 2.}, {7.545784237607336, 1.}}, 
         0.09589853252974426], 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-6.999999999879549, 3.}, {-3.526223887810545, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-6.999999999879549, 3.}, {-2.000000000056332, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-5.999999999777799, 3.}, {-3.526223887810545, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-5.999999999777799, 3.}, {-2.000000000056332, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-5.999999999777799, 3.}, {4.000000000175078, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-5.999999999777799, 3.}, {5.000000000225043, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-3.999999999713623, 3.}, {-3.526223887810545, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-3.999999999713623, 3.}, {4.000000000175078, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-3.999999999713623, 3.}, {-0.9999999999477609, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-3.999999999713623, 3.}, {6.000000000205432, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.9999999996958877`, 3.}, {-3.526223887810545, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.9999999996958877`, 3.}, {-0.9999999999477609, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.9999999996958877`, 3.}, {5.792344381916337*^-11, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.9999999996958877`, 3.}, {7.000000000246644, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-4.9999999997380655`, 3.}, {-3.526223887810545, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-4.9999999997380655`, 3.}, {5.792344381916337*^-11, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-4.9999999997380655`, 3.}, {1.000000000088619, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-4.9999999997380655`, 3.}, {2.000000000121986, 2.}}, 
          0.09589853252974426]}, 
        ArrowBox[{{-1.9999999996809947`, 3.}, {-3.526223887810545, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.9999999996809947`, 3.}, {1.000000000088619, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.9999999996809947`, 3.}, {8.000000000273076, 2.}}, 
         0.09589853252974426], 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{12.000000000849582`, 2.}, {6.000000001202011, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{12.000000000849582`, 2.}, {7.545784237607336, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{9.000000000300702, 2.}, {6.000000001202011, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{9.000000000300702, 2.}, {5.000000000552575, 1.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{9.000000000300702, 2.}, {4.0000000003548735`, 1.}}, 
          0.09589853252974426]}, 
        ArrowBox[{{10.000000000364594`, 2.}, {6.000000001202011, 1.}}, 
         0.09589853252974426], 
        ArrowBox[{{10.000000000364594`, 2.}, {2.9999999994691393`, 1.}}, 
         0.09589853252974426], 
        ArrowBox[{{10.000000000364594`, 2.}, {7.545784237607336, 1.}}, 
         0.09589853252974426], 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-0.9999999996670681, 3.}, {-2.000000000056332, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-0.9999999996670681, 3.}, {-0.9999999999477609, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-0.9999999996670681, 3.}, {5.000000000225043, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-0.9999999996670681, 3.}, {6.000000000205432, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.000000000403361, 3.}, {-2.000000000056332, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.000000000403361, 3.}, {4.000000000175078, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.000000000403361, 3.}, {5.792344381916337*^-11, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.000000000403361, 3.}, {6.000000000205432, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.000000000403361, 3.}, {7.000000000246644, 2.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{5.000000000403361, 3.}, {12.000000000849582`, 2.}}, 
          0.09589853252974426]}, 
        ArrowBox[{{3.4572167351143435`*^-10, 3.}, {-2.000000000056332, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.4572167351143435`*^-10, 3.}, {-0.9999999999477609, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.4572167351143435`*^-10, 3.}, {1.000000000088619, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.4572167351143435`*^-10, 3.}, {7.000000000246644, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.4572167351143435`*^-10, 3.}, {2.000000000121986, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.4572167351143435`*^-10, 3.}, {9.000000000300702, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000003571472`, 3.}, {-2.000000000056332, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000003571472`, 3.}, {5.792344381916337*^-11, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000003571472`, 3.}, {1.000000000088619, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000003571472`, 3.}, {2.000000000121986, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000003571472`, 3.}, {8.000000000273076, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000003571472`, 3.}, {10.000000000364594`, 2.}}, 
         0.09589853252974426], 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-7.99999999918677, 4.}, {-6.999999999879549, 3.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-7.99999999918677, 4.}, {-5.999999999777799, 3.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-6.999999999066347, 4.}, {-6.999999999879549, 3.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-6.999999999066347, 4.}, {-5.999999999777799, 3.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-6.999999999066347, 4.}, {-3.999999999713623, 3.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-6.999999999066347, 4.}, {-0.9999999996670681, 3.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.999999998935209, 4.}, {-6.999999999879549, 3.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.999999998935209, 4.}, {-3.999999999713623, 3.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.999999998935209, 4.}, {-2.9999999996958877`, 3.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-2.999999998935209, 4.}, {5.000000000403361, 3.}}, 
          0.09589853252974426]}, 
        ArrowBox[{{-5.999999999011209, 4.}, {-6.999999999879549, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-5.999999999011209, 4.}, {-2.9999999996958877`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-5.999999999011209, 4.}, {-4.9999999997380655`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-5.999999999011209, 4.}, {3.4572167351143435`*^-10, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-4.999999998980286, 4.}, {-6.999999999879549, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-4.999999998980286, 4.}, {-4.9999999997380655`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-4.999999998980286, 4.}, {-1.9999999996809947`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-4.999999998980286, 4.}, {1.0000000003571472`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{11.00000000047288, 2.}, {5.000000000552575, 1.}}, 
         0.09589853252974426], 
        ArrowBox[{{11.00000000047288, 2.}, {7.545784237607336, 1.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.0000000006235155`, 2.}, {5.000000000552575, 1.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.0000000006235155`, 2.}, {2.9999999994691393`, 1.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.000000000471687, 3.}, {4.000000000175078, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.000000000471687, 3.}, {1.000000000088619, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.000000000471687, 3.}, {12.000000000849582`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.000000000471687, 3.}, {9.000000000300702, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.0000000061368155`, 3.}, {4.000000000175078, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.0000000061368155`, 3.}, {-0.9999999999477609, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.0000000061368155`, 3.}, {1.000000000088619, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.0000000061368155`, 3.}, {9.000000000300702, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.0000000061368155`, 3.}, {10.000000000364594`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.0000000061368155`, 3.}, {11.00000000047288, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.000000000381249, 3.}, {4.000000000175078, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.000000000381249, 3.}, {5.792344381916337*^-11, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.000000000381249, 3.}, {10.000000000364594`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.000000000381249, 3.}, {3.0000000006235155`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{10.000000000455145`, 3.}, {5.000000000225043, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{10.000000000455145`, 3.}, {7.000000000246644, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999998051521, 3.}, {5.000000000225043, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999998051521, 3.}, {6.000000000205432, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999998051521, 3.}, {2.000000000121986, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999998051521, 3.}, {9.000000000300702, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000000493742`, 3.}, {5.000000000225043, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000000493742`, 3.}, {7.000000000246644, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000000493742`, 3.}, {8.000000000273076, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000000493742`, 3.}, {11.00000000047288, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000000391935, 3.}, {5.000000000225043, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000000391935, 3.}, {2.000000000121986, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000000391935, 3.}, {3.0000000006235155`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{-0.9999999988938271, 4.}, {-5.999999999777799, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-0.9999999988938271, 4.}, {-2.9999999996958877`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-0.9999999988938271, 4.}, {-0.9999999996670681, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-0.9999999988938271, 4.}, {5.000000000403361, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-0.9999999988938271, 4.}, {10.000000000455145`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.9999999989131538`, 4.}, {-5.999999999777799, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.9999999989131538`, 4.}, {-3.999999999713623, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.9999999989131538`, 4.}, {-4.9999999997380655`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.9999999989131538`, 4.}, {5.000000000403361, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.9999999989131538`, 4.}, {3.4572167351143435`*^-10, 3.}},
          0.09589853252974426], 
        ArrowBox[{{-1.9999999989131538`, 4.}, {9.000000000471687, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.9999999989131538`, 4.}, {5.999999998051521, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.124817572417669*^-9, 4.}, {-5.999999999777799, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.124817572417669*^-9, 4.}, {-2.9999999996958877`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.124817572417669*^-9, 4.}, {-1.9999999996809947`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.124817572417669*^-9, 4.}, {3.4572167351143435`*^-10, 
         3.}}, 0.09589853252974426], 
        ArrowBox[{{1.124817572417669*^-9, 4.}, {1.0000000003571472`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.124817572417669*^-9, 4.}, {7.0000000061368155`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.124817572417669*^-9, 4.}, {12.000000000493742`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.9999999989565254`, 4.}, {-5.999999999777799, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.9999999989565254`, 4.}, {-4.9999999997380655`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.9999999989565254`, 4.}, {1.0000000003571472`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.9999999989565254`, 4.}, {3.000000000381249, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.9999999989565254`, 4.}, {4.000000000391935, 3.}}, 
         0.09589853252974426], 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-8.267573958383139, 5.}, {-7.99999999918677, 4.}}, 
          0.09589853252974426]}, 
        {Hue[1, 1, 0.7], Opacity[1], 
         ArrowBox[{{-8.267573958383139, 5.}, {-6.999999999066347, 4.}}, 
          0.09589853252974426]}, 
        ArrowBox[{{-6.267573958082039, 5.}, {-7.99999999918677, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-6.267573958082039, 5.}, {-6.999999999066347, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-6.267573958082039, 5.}, {-2.999999998935209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-6.267573958082039, 5.}, {-0.9999999988938271, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-5.267573957981597, 5.}, {-7.99999999918677, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-5.267573957981597, 5.}, {-2.999999998935209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-5.267573957981597, 5.}, {-5.999999999011209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-5.267573957981597, 5.}, {-1.9999999989131538`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-4.267573957884224, 5.}, {-7.99999999918677, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-4.267573957884224, 5.}, {-5.999999999011209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-4.267573957884224, 5.}, {-4.999999998980286, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-4.267573957884224, 5.}, {1.124817572417669*^-9, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-7.267573958192628, 5.}, {-7.99999999918677, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-7.267573958192628, 5.}, {-4.999999998980286, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-7.267573958192628, 5.}, {-3.9999999989565254`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000004013145`, 3.}, {-0.9999999999477609, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000004013145`, 3.}, {5.792344381916337*^-11, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000004013145`, 3.}, {11.00000000047288, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000004013145`, 3.}, {3.0000000006235155`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.00000000051682, 3.}, {6.000000000205432, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.00000000051682, 3.}, {8.000000000273076, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.00000000051682, 3.}, {12.000000000849582`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.00000000051682, 3.}, {10.000000000364594`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000000513182, 3.}, {6.000000000205432, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000000513182, 3.}, {7.000000000246644, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000000513182, 3.}, {2.000000000121986, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000000513182, 3.}, {9.000000000300702, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000000513182, 3.}, {10.000000000364594`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000000513182, 3.}, {3.0000000006235155`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001215938, 4.}, {-3.999999999713623, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001215938, 4.}, {-1.9999999996809947`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001215938, 4.}, {9.000000000471687, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001215938, 4.}, {7.0000000061368155`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001215938, 4.}, {13.00000000051682, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000011447696`, 4.}, {-3.999999999713623, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000011447696`, 4.}, {-2.9999999996958877`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000011447696`, 4.}, {-4.9999999997380655`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000011447696`, 4.}, {7.0000000061368155`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000011447696`, 4.}, {3.000000000381249, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000011447696`, 4.}, {2.0000000004013145`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000011447696`, 4.}, {8.000000000513182, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.0000000011792167`, 4.}, {-0.9999999996670681, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.0000000011792167`, 4.}, {3.4572167351143435`*^-10, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.0000000011792167`, 4.}, {10.000000000455145`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.0000000011792167`, 4.}, {5.999999998051521, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999995438998, 4.}, {-0.9999999996670681, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999995438998, 4.}, {5.000000000403361, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999995438998, 4.}, {1.0000000003571472`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999995438998, 4.}, {7.0000000061368155`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999995438998, 4.}, {5.999999998051521, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999995438998, 4.}, {12.000000000493742`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.999999995438998, 4.}, {13.00000000051682, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001196781, 4.}, {-0.9999999996670681, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001196781, 4.}, {3.4572167351143435`*^-10, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001196781, 4.}, {1.0000000003571472`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001196781, 4.}, {12.000000000493742`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001196781, 4.}, {4.000000000391935, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001196781, 4.}, {2.0000000004013145`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001196781, 4.}, {8.000000000513182, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.2675739578542675`, 5.}, {-6.999999999066347, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.2675739578542675`, 5.}, {-5.999999999011209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.2675739578542675`, 5.}, {-0.9999999988938271, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.2675739578542675`, 5.}, {-1.9999999989131538`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-3.2675739578542675`, 5.}, {3.0000000011792167`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.2675739577236982`, 5.}, {-6.999999999066347, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.2675739577236982`, 5.}, {-2.999999998935209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.2675739577236982`, 5.}, {-4.999999998980286, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.2675739577236982`, 5.}, {-1.9999999989131538`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.2675739577236982`, 5.}, {1.124817572417669*^-9, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.2675739577236982`, 5.}, {5.000000001215938, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-1.2675739577236982`, 5.}, {5.999999995438998, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-2.267573957729894, 5.}, {-6.999999999066347, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-2.267573957729894, 5.}, {-5.999999999011209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-2.267573957729894, 5.}, {-4.999999998980286, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-2.267573957729894, 5.}, {1.124817572417669*^-9, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-2.267573957729894, 5.}, {-3.9999999989565254`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-2.267573957729894, 5.}, {1.0000000011447696`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{-2.267573957729894, 5.}, {4.000000001196781, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{11.000000000480156`, 3.}, {7.000000000246644, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{11.000000000480156`, 3.}, {11.00000000047288, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000011604584`, 4.}, {-2.9999999996958877`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000011604584`, 4.}, {2.0000000004013145`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000011604584`, 4.}, {11.000000000480156`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{15.00000000067024, 3.}, {12.000000000849582`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{15.00000000067024, 3.}, {10.000000000364594`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{14.000000000565592`, 3.}, {12.000000000849582`, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{14.000000000565592`, 3.}, {9.000000000300702, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{14.000000000565592`, 3.}, {11.00000000047288, 2.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000001229466, 4.}, {5.000000000403361, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000001229466, 4.}, {1.0000000003571472`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000001229466, 4.}, {9.000000000471687, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000001229466, 4.}, {3.000000000381249, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000001229466, 4.}, {13.00000000051682, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000001229466, 4.}, {8.000000000513182, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{8.000000001229466, 4.}, {15.00000000067024, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.999999998053056, 4.}, {5.000000000403361, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.999999998053056, 4.}, {3.4572167351143435`*^-10, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.999999998053056, 4.}, {7.0000000061368155`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.999999998053056, 4.}, {2.0000000004013145`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.999999998053056, 4.}, {8.000000000513182, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.999999998053056, 4.}, {11.000000000480156`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.999999998053056, 4.}, {14.000000000565592`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000007549374`, 5.}, {-2.999999998935209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000007549374`, 5.}, {-4.999999998980286, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000007549374`, 5.}, {5.000000001215938, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000007549374`, 5.}, {1.0000000011447696`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{1.0000000007549374`, 5.}, {8.000000001229466, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.428866410918999*^-10, 5.}, {-2.999999998935209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.428866410918999*^-10, 5.}, {-5.999999999011209, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.428866410918999*^-10, 5.}, {1.0000000011447696`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.428866410918999*^-10, 5.}, {2.0000000011604584`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.428866410918999*^-10, 5.}, {6.999999998053056, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{10.000000001319734`, 4.}, {10.000000000455145`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{10.000000001319734`, 4.}, {12.000000000493742`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.000000001283183, 4.}, {10.000000000455145`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.000000001283183, 4.}, {5.999999998051521, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.000000001283183, 4.}, {4.000000000391935, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.000000001283183, 4.}, {8.000000000513182, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{11.000000001399997`, 4.}, {10.000000000455145`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{11.000000001399997`, 4.}, {12.000000000493742`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{11.000000001399997`, 4.}, {11.000000000480156`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.000000001123226, 5.}, {-0.9999999988938271, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.000000001123226, 5.}, {1.124817572417669*^-9, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.000000001123226, 5.}, {3.0000000011792167`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.000000001123226, 5.}, {5.999999995438998, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{3.000000001123226, 5.}, {10.000000001319734`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000009390533`, 5.}, {-0.9999999988938271, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000009390533`, 5.}, {-1.9999999989131538`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000009390533`, 5.}, {-3.9999999989565254`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000009390533`, 5.}, {1.0000000011447696`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000009390533`, 5.}, {5.999999995438998, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000009390533`, 5.}, {4.000000001196781, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000009390533`, 5.}, {8.000000001229466, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{2.0000000009390533`, 5.}, {9.000000001283183, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001334058, 5.}, {-0.9999999988938271, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001334058, 5.}, {1.124817572417669*^-9, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001334058, 5.}, {4.000000001196781, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001334058, 5.}, {2.0000000011604584`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001334058, 5.}, {6.999999998053056, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{4.000000001334058, 5.}, {11.000000001399997`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.000000001547505`, 4.}, {9.000000000471687, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.000000001547505`, 4.}, {7.0000000061368155`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.000000001547505`, 4.}, {15.00000000067024, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.000000001547505`, 4.}, {14.000000000565592`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001435126`, 4.}, {5.999999998051521, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001435126`, 4.}, {12.000000000493742`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001435126`, 4.}, {13.00000000051682, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001435126`, 4.}, {8.000000000513182, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001435126`, 4.}, {14.000000000565592`, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001977696, 5.}, {-1.9999999989131538`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001977696, 5.}, {1.124817572417669*^-9, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001977696, 5.}, {5.000000001215938, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001977696, 5.}, {1.0000000011447696`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001977696, 5.}, {8.000000001229466, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001977696, 5.}, {6.999999998053056, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001977696, 5.}, {13.000000001547505`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{5.000000001977696, 5.}, {12.000000001435126`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.000000002356501, 5.}, {3.0000000011792167`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.000000002356501, 5.}, {4.000000001196781, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.000000002356501, 5.}, {10.000000001319734`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{6.000000002356501, 5.}, {9.000000001283183, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.000000002797208, 5.}, {3.0000000011792167`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.000000002797208, 5.}, {5.999999995438998, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.000000002797208, 5.}, {4.000000001196781, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.000000002797208, 5.}, {6.999999998053056, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.000000002797208, 5.}, {9.000000001283183, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.000000002797208, 5.}, {11.000000001399997`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{7.000000002797208, 5.}, {12.000000001435126`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{14.000000001769251`, 4.}, {13.00000000051682, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{14.000000001769251`, 4.}, {15.00000000067024, 3.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.000000002495938`, 5.}, {5.000000001215938, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.000000002495938`, 5.}, {13.000000001547505`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{13.000000002495938`, 5.}, {14.000000001769251`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001500268`, 5.}, {5.999999995438998, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001500268`, 5.}, {8.000000001229466, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001500268`, 5.}, {13.000000001547505`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001500268`, 5.}, {12.000000001435126`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{12.000000001500268`, 5.}, {14.000000001769251`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{11.000000000068667`, 5.}, {10.000000001319734`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{11.000000000068667`, 5.}, {11.000000001399997`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.999999999620456, 5.}, {10.000000001319734`, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.999999999620456, 5.}, {9.000000001283183, 4.}}, 
         0.09589853252974426], 
        ArrowBox[{{9.999999999620456, 5.}, {12.000000001435126`, 4.}}, 
         0.09589853252974426]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"131\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.09589853252974426, 1.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.0000000003755645, 0.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"14\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.095898532905308, 0.09589853252974426}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0000000000989075, 1.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"122\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.095898532628652, 1.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.000000001202011, 1.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"113\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.095898533731755, 1.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.000000000552575, 1.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"104\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.095898533082319, 1.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.9999999994691393, 1.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"95\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.0958985319988837, 1.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.545784237607336, 1.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"86\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.64168277013708, 1.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.0000000003548735, 1.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"77\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.095898532884617, 1.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.526223887810545, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"1211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.4303253552808006, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.000000000056332, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"1121\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.9041014675265875, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.000000000175078, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"1031\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.095898532704822, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9999999999477609, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"941\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9041014674180167, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.792344381916337*^-11, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"851\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.0958985325876677, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.000000000088619, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"761\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0958985326183632, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.000000000225043, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"1022\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.095898532754787, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.000000000205432, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"932\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.095898532735176, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.000000000246644, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"842\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.0958985327763875, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.000000000121986, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"752\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0958985326517303, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.000000000273076, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"662\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {8.09589853280282, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.999999999879549, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"11111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.904101467349805, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-5.999999999777799, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"10211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.904101467248055, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.999999999713623, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"9311\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.9041014671838785, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.9999999996958877, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"8411\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.9041014671661434, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.9999999997380655, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"7511\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.904101467208322, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.9999999996809947, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"6611\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.9041014671512504, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.000000000849582, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"833\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {12.095898533379327, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.000000000300702, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"743\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {9.095898532830446, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.000000000364594, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"653\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {10.095898532894338, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9999999996670681, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"9221\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9041014671373239, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.000000000403361, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"8321\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.095898532933105, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4572167351143435*^-10, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"7421\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.09589853287546593, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0000000003571472, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"6521\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0958985328868915, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.99999999918677, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"101111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-7.904101466657026, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.999999999066347, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"92111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.904101466536603, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.999999998935209, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"83111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.9041014664054647, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-5.999999999011209, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"74111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.904101466481465, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.999999998980286, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"65111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.904101466450542, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.00000000047288, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"644\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {11.095898533002625, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0000000006235155, 2.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"554\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.09589853315326, 2.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.000000000471687, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"7331\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {9.095898533001431, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.0000000061368155, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"6431\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.095898538666559, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.000000000381249, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"5531\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.095898532910993, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.000000000455145, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"8222\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {10.09589853298489, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.999999998051521, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"7322\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.095898530581265, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.000000000493742, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"6422\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {12.095898533023487, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.000000000391935, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"5522\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.095898532921679, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9999999988938271, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"82211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9041014663640828, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.9999999989131538, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"73211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.9041014663834095, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.124817572417669*^-9, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"64211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.09589853365456183, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.9999999989565254, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"55211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.904101466426781, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-8.267573958383139, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"911111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-8.171675425853394, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.267573958082039, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"821111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.171675425552295, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-5.267573957981597, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"731111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.171675425451853, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.267573957884224, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"641111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.17167542535448, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.267573958192628, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"551111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-7.171675425662884, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0000000004013145, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"5441\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.095898532931059, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.00000000051682, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"6332\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {13.095898533046565, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.000000000513182, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"5432\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {8.095898533042927, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.000000001215938, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"63311\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.0958985337456815, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0000000011447696, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"54311\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.095898533674514, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0000000011792167, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"72221\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.095898533708961, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.999999995438998, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"63221\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.095898527968742, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.000000001196781, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"54221\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.095898533726525, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.2675739578542675, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"722111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.171675425324523, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.2675739577236982, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"632111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.1716754251939538, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.267573957729894, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"542111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.17167542520015, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.000000000480156, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"4442\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {11.095898533009901, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0000000011604584, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"44411\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0958985336902027, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{15.00000000067024, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"5333\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {15.095898533199986, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{14.000000000565592, 3.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"4433\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {14.095898533095337, 3.0958985325297443}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.000000001229466, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"53321\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {8.095898533759211, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.999999998053056, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"44321\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.0958985305828, 4.095898532529744}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0000000007549374, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"533111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0958985332846818, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.428866410918999*^-10, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"443111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.0958985332726309, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.000000001319734, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"62222\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {10.095898533849478, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.000000001283183, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"53222\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {9.095898533812928, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.000000001399997, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"44222\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {11.095898533929741, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.000000001123226, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"622211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.0958985336529703, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0000000009390533, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"532211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0958985334687976, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.000000001334058, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"442211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.095898533863802, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.000000001547505, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"43331\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {13.09589853407725, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.000000001435126, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"43322\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {12.09589853396487, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.000000001977696, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"433211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.09589853450744, 5.095898532529744}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.000000002356501, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"522221\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.095898534886245, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.000000002797208, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"432221\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.095898535326952, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{14.000000001769251, 4.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"33332\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {14.095898534298996, 4.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{13.000000002495938, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"333311\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {13.095898535025682, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{12.000000001500268, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"333221\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {12.095898534030013, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.000000000068667, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"422222\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {11.095898532598412, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.999999999620456, 5.}, 0.09589853252974426], InsetBox[
          RotationBox["\<\"332222\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {10.095898532150201, 5.095898532529744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1120., Automatic}]], "Output",
 CellChangeTimes->{3.7821561236868815`*^9, 3.7821563598927164`*^9},
 CellLabel->"Out[616]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXlYVUfWLn7kMMsgoDjPRo1xnmcFxQkVFZRJQCYBAUFARBRRHBBFQRTn
ecB5BAERUTGKmjjGsU00ielO27Fj50u6k/6+ey/3rVr7FPvss8+Rfn5//Z7n
5iHnOZ69d9Wqtda7hqpVtaeEpkRHxoemxISHthufFJoYHROe3G5cQhJ+0jbQ
aMznaDQN2jXT4HutRkP/K/+LwP+GP/+/X///9esk9i+Le/fuLV22fH5iMv7K
ysrE1SZ6905k/9LmbswPDIvNzN2nMVuz5ZhGGxmfHj0v/rfffhP3ueg9NYE/
de3atdCYlEMlX2rM2Yd22bo9K7JWs0u6+5xVnprmPWv7sSr2gAV/alZgxIsX
L+RPOek9NZ4/9e7duynTfdkDlvwpUIhBGX9qOH/qjx9/fH/1Kv40ZuxD+98f
PtBljfb/W6sVzZoVA0BW7MP8orX187Q0Ly9vjIva8fYLqdm06dbo0Rob9qH9
89GjUr+6liz02h1B1JSVoT3WpAX/uN6nzz1f3zsTJlzcsyc4MpH4ZbFo5ZbV
WasezplT4+FR2aYN0aBFN//799/lPVjq9TCM/csSTHiZmYl7LzdvjscuSD3Z
X+3a9Z9v3vx49uyedbmQR9rqrVADqMOc6OS01MWvNm/+nw8f7vn5SX1dtLT8
dts28FK0bqXX1yD2LyvRF57BJ74/jo2lFhzx779dvvz54MEYHG6G/HPWb4iN
jILCVldX45dv8vLAYhD0NDFRY8Z7LeGsYV/5vy2utG9f7uiINl5lZ//y4IHo
3VyPln5GaGHqwO/UVjRpIrWr5e1+MW3alzNn4ivE+uvz56QpNuC3rslaMBoM
o6aeJiURD23LHBxIvX6uqYE6XO/dGyPAY5C9UDs5Zb1MUMb5qUU/d6dNwzgl
ym4OHw6aiFjGF6K/vFEjDJ99NeMyBtOKday6PW7cRSsr4l+prW25kxN0l56z
wrfv9+2DVNEAiAXJIJxT97/06PzMBJ027JoF6IS8rrRrB6Je5+eTfCzBD0EH
OIGbCHN4Dr/gAaLDDiog7itr2LDUxgZfIIE/rVlDTYJQrstWGCZkDYmDYtAN
6tloGI1/6FHcxQTFDdk1aznFaAO/vc7LKzYz45LUomFJWJyjWjyK36EXEsdB
h1xjrFO12ofh4aQY8ma5FK0gfKgAFAFMID4zOljz/9SjuqMJqu0N+MxGLtmw
ixcfhoaCJUSNFn1I1PPr5tQWruNxkvzj6GjB8aUWFqNbtHiVk0N3G/RhI+M8
WoL+gQ9AP8wFp/wXvTG0NTEGR9X2OY8soDVXOnUiihiWOZ0W4JygU+DVEk8R
Cs7b27ezt3/z5o2lasu2nBb8CkBgxLgA0OLaO8kX/qxHeUsTlDuptm/Nf4Wu
QLSkEfii4XbdQo5BNEK/WhWnpODfCydPnufpSfbkAcbKdczmxx9//KCzEsqe
7PjTsEX4lXkDa2t84juzTuz+v+mNpKmJkbgYl7EljYTagIxxgcYi1xbmzPiv
DUeNHLm+Q4d2bdv+/vvveLLS17dZs2YTJkx4/vz5tGnTzp49K8lQ2Ze9Dn8Q
A36CSHANXYBj5L9q/6I3GhcTo2liXO5aMRoJw1LjDBB8tLhfjAoM1WFDe/To
UWsrK3xK1hTtuLVpU1NT07t370aNGv0o2SKDXrl2WwEVwAa4ZyCjt3qjcjQx
qqaq7TdUjMpG1x8N4UqHDnCG+MK0m0YCUgcPHizsgMXUQYPwLIaRnZ3N4kFr
1X64rlsJ4chdGKf+jd44GpoYR3PV9u0U47DV9UcRBW7EmNAf7pAkCaXK9PcP
7NaNnjVokceYet5MPyb4Wo9iKxMUtzSusTKKHfi/iVAOBa5UUPquXbvey8/H
XerWujHvWREcyHzYCz06tSbobK3avoOCTkc1Oi38/Pzy8vLwlW6kpwzaaiLj
qdxz6SKEp4LW/2OCzrbGkSKjs5EanZYwhr/rIEv3qvsPsnbGI4NHgtL/NkFp
e9W2GykodVJQqryuTmGzWpUoQOaH7gsK/2WCwo7G0SqjwFlBofJ6I9VWWuh4
KPyLvo+/Kyj8LxMUfmIcnTIKXBQUKq+r+1qOTGtVXy4Z9luCxp9N0NhFtXUX
BQ2NFTQqrzurtsJRacJL3xAU/s0EhZ8atx0yCpooKFReV/fzHI9Wqo6X03VV
UPgXExR+ZtxiyChwVVCovN5YtZV2tUovin5ltrxSUPi9CQp7qLbtqqCgqYJC
5XX16KKDrl/DFI/TVS4ofG2Cwl7GbZmMgmYKCpXXXVVboTzCuD+8KCj8kwkK
+xi3ZTIKmisoVF5Xj2W4pajzhAY2+7yg8JkJCvuptt1cQUELBYXK681UW+lc
q2KzZf7vjKDwsQkKB6i23UJBQUsFhcrr6nFU11oVvyez2ScEhfdNUDhIte2W
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
v3+Nu7s6Qvn8so1AqCE0DXaYiApsQzuNOFWA7cagQbTnk3I56lQ4QI0uWqWq
PcPqL5rgkp86RJXPyt3dVOsrRa+yzNJJzUKaiFi1BhjS6jCtOImC7hGYNlEz
5/wfYNpMgWlrA3rEW+/kmNaYgVcalyfx8WA/HQimegZ7ZvaRZQnrN3vP3dB1
MNLPG3PnyefbrKm67IdTpxXRK5/FMLWfzK4+2KYzEp5+/Re9+nLKuEDtucOl
yxZvjQjKBLx3Dxp7WmupmBJqJPNuhqc0fRDIpre2/qF6dgvv7SOnrFgZRzXr
/VFU1OXmzcsdHeV4bqrAs+l5VG6pWxJ+H4aHIzs0hl+xeFfLdxwgV0Koy04h
tWAnxlW2aaOHYl67bvnu4sVyBwc5eG0V2KU49b3sVHiKNdmanZa9D6eydeuy
Ro3g5b7ftUs6CVnklPak/N/wcmkTdWDSOTmq5zCoIFVZ6S+q7+RIZbiq6toV
wTH6oDliRaSrqw36CCZdTGMye6z/ud2nJEzaGGCQVw7bPomL+yo2VtWv6k7B
1XsTApLKhJgcf6+Uuf1nJAydtS14wcn1u7764ok438CWTEEt/88wh2xqAoW0
H6eeJ0HIC74BR+7tWKWRqDhbmX34+Mb91YuXG10BoZUFY5VozKL8TeBR8SZq
vbNXGtfT09qqYrKpQbx7pUOHqo4d/3LiBB5qqcCklUlMcsvr+FGfetfLC7En
YVJaL5JXndHBJ7SHE/72ZUYGw2UX/Xj3ardul5yd0QBHCDtL9NmiRQh5FTXS
wl2KGmlSC+gaHPrt8eMVYRnHg93x3WcP59ZNwoqwWLwjDe00UkWmnRFk2iiQ
2VCHB8CwiscRqjtILF/n5bEXTsl8Zn12ljSWIbNwjPfeTUXGvaVhjSm9BxDN
0Hl2JCFbExGwrvKcIfVBVc3+pXm5M6Li+k4NGxkc4J22OCl/XeF5YKz42mPg
TSBVZc61mQl0cs0zWs1G6Cyt/ir/YJU4ZJj8jZNhldrH1/1pDkrUsCnW9v8i
cNle30/q7a/m9tGWoGDMT6qfo8JjdVvVHPTPp06RCrVWIJNLqYkhMp+lpiLL
Mx3hCg9J2mCP7PE2P41Bno3WuLnBbwJ35S4uUnV3V8KAfqCrMeOwpiBYRLmO
ijIyQUdF8+aX+RqNfOuSlIcZzAspV10eBAezI0GysuTH8m0cOb1gaqiYl5X2
yCiR6mQEqRYKpNqqR7Mm4l86Z+e9rFJN+Z4BI7XmhlmsjYhi8Z+qp7VSPQvK
oIaHzqElGkVMXB9MS9lJmW/w/vbd1vUfnzd7QejszOj0vaoTuyrnIzU3gWkb
I3FvQvbJqOVH/FL2LMk/D0xDXNSKvKIbd8rPJazvacdGzz9icvlO4LqNEX/L
RsQtf0O0Q9JDH2I3lZ6/VT9fwcXA3xrUecu0j9PhQrpE2H4cE3OtWzfErqwm
u18/xJem8Eyr9Kp7Ia/16IGgGWN6V1KiWCvtqu9r9U8AZq39cPQovC+pLjlI
0h3iN00FCYDYGmCZYuD3uhoectjF9O4WV9eyhg1pJeh1QQGTCouaXVUxzH+1
NcQwfhYsNIw8xRsY5fi1EPiVVkvka59y8NrVA7u0HlWXgVoZj5QtCb+IlE+4
e14dPQZPkGWvq35zqAdWObWNCas3ps044+CEeyoj4z7ftv/suRuG88QIb3YH
zNvXomPlNB8CagsTOG2oj9PsXeX+C/e6h+YHLz6Qs7tCHhmL+FqlXs68njil
XVPv9evqRHnCNwKjLUz4Xked71XscSYp0R5n9b2Tivo5BT6V3oHHx9Lqw5uC
gvuBgZVt27KzYxs0YCWkTk7ApxKTNgYRr/p8kjj1G14OLlIfnU516OzZ83Fs
7Lc7digc61We4yGLJbV8L3Zj1eWw3As4CmQi6X2vVg8nigdYG4ZnqsErIA+j
+NlZFact9X1tRdOmSDA+3LljODND60Hy81HNMHROs1QtYQyXDvXApZUCl/Qu
ZAUu5yUXBo2PSfIIRdgs3CrNvtdV07nUA5N0Rjha/Kryc9WFGMX0UlJSQcD0
1Mg+XilTYg5kFVZcuUdO1ZQHtSNL+o/fDp6vwYX0POSjVcbSVsoUlTV3khet
7zsDrHVe1OgJRC8EQskaqJ9bYmfci8r3JGvUd1g5mkSptQKljWUopSlVqbqm
adMLfB0GjqdEq4VHrXF3r/rkE7HfqB4otdBZIbkPpdfQaTpz8w0qv9+16+aw
YWy1x87uCj91RdVfKveHKOeLKTonrXuanIy+Ljdvfr1HD8Oj8JjfpPrkU0WX
kJAZWQU0QGpbncRujxv39fr1cqeqMq9LazkIBqroHB/VSFgFq43qgVXlLK6Y
bbpzohg5Le2rMpLT0ow1dOELfnSjtJqgvpYaGXswIVOHVqO1fmIm6uaeokK/
2MwuwwHSxLjcuUsPqLz9y9RcL/duTopTet+9/+Wjk060am0patFFRZ9tPZFL
Z4cZq/xj1QtPBHI5t43sRm5YD9+qvk/E3iRqlZW3/G5nFdRyv0QLj48iI6k+
ATGx/L04pD112bFFPdFsbI+UcvVIXsEhL0SHLSnhLxsA0GvGjHmSkGD2Xtp9
oqxPchStGRYvILxHA5dbtXocFUVFezyLZZGwaT21VEV1OwVnqQ153HzPx4de
KgdCyGoL3tXKzitXX+tRQbizcYSjhVc5OX9IZ3lYC3vyQ8WVj9f1ko6AZory
pfxIIPtQ/1GXO32i8MO1xl9VKr3NQqStpdN86U2Tpl/v52IC39Kpqopzeeu/
wsM9m5HT/+zqiXR6h7uoF1Spp3ggkN5I30frnS5irY8aoz66rSraTVf5Ks8o
4ZrrahrtNEtE0zr/+vZb4+tC9qRVH8d7QyN4V0bKVHlq+qj5x/x11AhXr332
GeXLjgrc0xkApK1om5XKt2wpP5GHgoE/rVyJ5JxSZe67GO5pXCZewqqH+PYK
7lroMI2UAAEI+xN+3VXNVn6sIlEF841lmKfjpIysGRnOptVzZZdOiMGIpXee
8pnqhgAH8GQiFteY8Y3d6haAj6ax4cRVrZHlX0Nr0MiENaCVOiOn9NbLHtAu
K/XzfB3raQ84j02eOPSFsAdiV5eK56c33KnuvZY7f01HVXtg+gRQHrM5kcb+
8vBhPa2AsOGm14n1PD9CBRVLYGxHt/JMX/7vJn/IKvU/ugVNpRKE+0c7JNxI
QRRVi/hyc/jw6t69ZSf16M2etZQsgq0sEqj2DVje3S1sZPDekITvjhT9Ib3l
QFnLb3iWiMoMuLKuRnW+zFbYg1q1KW7ykCJ6lwcCGkOr0MiANhMzZpJVqKx+
fKhL7w/fviVt09ad4MdH2syEPQDbjW3dMLJ7x76epkA6ecTEOeAGp/3a1tsS
2OpHBnqnCBpWWpo4rUzvRCIaK81a1wgrIN6FrRoY0Eq76f3eXVRtgJVJG8Dt
mTJPv9azJ63lqqPf9Iq0eNuPiTjgTWEh2jW2y9VRgX+q+/jongCxT068q0hh
Ari9aaReU9mtW6mNjbymsla3VdfcwBq0llsDO3kc8POTp6pq3kphGQzzemP1
JY0UlkH1zBYb+Uy6cuWLWqjL6sWbk03MBNgb0NdQ3zoUpuQsnp1mJGaglS+y
IVxVeJxpzDp8s2EDqYmCZ4Z2QbHf/SN2wdaEXTDXjUbv/GCHetsFOv/a8KxB
tmOBx2SNP2oXMB5jxyFVC5tAMaT6WS1mxiMDvd3q3VStQj12NajN3hnEBM/S
0uA6kRl8pHbso29nl8/tyfTdzoiN4FrtIGIC9gL79u1vGd+zYGvEJtBI61PB
WSvOSTVX2CczAwvRVrIQVBeszBQsZFGEod4r958Y7gMyVvGiPN/KSc1WWJOt
QF8KQ2GvsBP1WTE3XKkXZ31hSGRF65dn0Gx/3TmBnJrGqjbjUWTko/DwO5Mm
yRlHQ5RbC/v/yFp89N0DBicMO9XbWhCKDc8iZuPmmeBH9hW/PXhQtXa0ituJ
Xzh1L168KCoqylq1Bp9v374l6Tmr7s+v5ZMzJuIIXvlmUVZWtm37jvxNBefP
n//3v/8t2UylHTH9Zm06772eMwwvzp49sHXr0mXLMYTHjx/XylaUOY5cjNmW
j1sVqsOrrq7enJYW07vvqVOnfvvtN6MzjwxfbA5R42Qi2sCt6AJjREtoL2f9
hr379qEH6S0xhpaG3uT1h64KVV4+o1KFSntKIFWwJKJNO5KqiEkMLU47ncwS
FmVFJy7Rk5nS/jQ0aX9oxuvdu3foU1UYter1Lo5GrJKNKu8bq9kmK3x7tmjR
/cBAvQiGrCjxOaFPX7TD+OxYD/tkZWCfKDaUo6UqIgIUix0c9bBVdPobflq5
fivwgT/wHex20GFOYbNuDBx4e/z4z4cOvdS4MXH6aXLyPV9fgzNBLCBjOdel
N8XW14bR3Sb2seidl2ylkwv0FpyQ5GKsPsjQqpnpx0B6Jz7ayiRWhwxahzFm
654lJwMTD/lrx5RVQg6qNq6I279/cDp27t4zKzBi3sLVS3N24XNmQOjpM2cJ
RY0UZwB9s3EjNB0CMhYy8dX+pkBA9Lz4yPj0BRkbF64oiEpcFhI2Fz/W8txa
8Tp0YwZQmn+s/xwrGy3NJV+7ds1vdhjGkpm7D59+wVEr5sXL5xadDO3h06Qk
KnA3aglphRKSWbgofU508vzF68Cw6KQVvgEhUDhj50RTxvdPI+86oDMI5NEW
rXtBs096eaFltJ+2eiv6Qo/ol+mZuRErSdkjKCUdMawGFu8PpXV4Q7lvi5xL
cZncPNJ6jIMJmSqMpJNJG8n5YWtCQu+NnKSgYh/NTUqkqZqdZOdA3HJzu9Sk
iTCS1AoeUGW3ibWhl3pn4xvOVimR5TXW8+TxExIi62cvpTdnvHsXMXdeZEKG
xgys12ghBWI+zcw1UtpNK6uqzp2vfvoplcfDgN4aNarcweEL/Te+AuWQuVwG
uRvzydK0qKfdxL2qNlNs+aFjp81Myonzo17vtDSsjRY14Ubl56DLUgwtJ7Kv
mjFjbgwadMnFRV4wLb0NxxAf5eUVmiPccvK9R9qLpaXhsYsOlXyp0bIPq33n
aoIjE6HbtfwUCYofpXmGOxMnwjnf0j/EiYJGTQ/eGtxgZHTcmi3HNOastZab
9pf6+Qc9jI8XB0EZ2kn5xruPW0fSJvgCjGv3qRvUj0v8wpU7tm0nqOnZRb6h
ARyq8fBQt4gUiazIWp2+Zrvggs32Y1XevkHQTkNjqLIP6ZbJt0JQZvXzzz9P
95yGdoliawgEwq01mKvmtdwNDYNE+btWGRW0o/7Y8RMAkqDbEtILnD33HK8j
IdPXXk0ulpALNK2o5LaweE1NWjwzNa5bgOv5aenCYFDVmY1qdSgxmJ7TCu7S
CTT28uqzy+i4S5cyR8cbgweTbQPnZvoHC85pBeek89wM7Jqxc3K0e9Zky7ml
Fbqu+cjOKsP9G0qOasFR/9lzWNTtqvPOwp7BgJVYWFChbbmz85X27ctsbUEk
WbJ79+4FhsWCFqml+WnZgK2IqZt+1I5V3Hx6tPRLYb5Olt/bdZIZLpgvGDEj
nOcjbmzCYpXfeHKi/MsdJ6pFaPfjTyzZFOJQSkOcZ6awUpVt21Z17FjZqhW+
V/fvT6fiiPN+FBrMZAJugCeaw9xK/czvghGcPM2H8ciC3WWH7qe4j7s6YECJ
uXllmzbgqOEhWPydfNqz587FJGVydWUfzgmLczIGDro7ZUqZvT2VnyEU/2LG
DNNmh6xEaETUxj0XRFt2XtN8KwIC8ACouNy8OQgxNDC8EkpLMhZPOsFdRfbu
W8Ffu/U6L88wqLplsI2KdlVoEf+C5aIlh9khMZubN7/SqdP94OAnCQlf6L+p
VR4xNdXZIS9vP8FJphETBwz56e5daVVHwS9tQvq6hUuzWd5Iz1MGy78asRiz
p/uAS5b8aU+3CY9PnOBqzB8hoyje4mwhbMX2Fi38AyM09BS4gySo7inCkoin
rYW9gLGAGEttbOZ+0hVcoacBaemNrVRXg7vJBhmuiVkQj+8tXz5h2Gg9nnjP
CmBYplrIxy9+uP/0O/U6crILx0+cAteo/8Ql63fv2Sv6dwDGhGMik0CTV8Va
LfSm1MrqooWFR48+6JSenzYzkJJ9krgj4R+oVuAfX1ZuK52/5njQon3xa074
xa71mR2lzkEH2K33H341hHrG5gtLCs5HLT8St/pYYESCCg85B/TO66GX2JU5
ONART0DQ3eTkqdNm6vFvmjd/bdYhGYbRIJrl7oer1+Qxk4527SqOCdHwI/20
IBvEC/2zX7f99PQ2zAFWffKJApd/v3GDisHAUmkGEdo9aaq36MN+Ttj8tY6O
QITAI8sMfpJq/yjoY9kwPX34yJG41DWib1uMaGgno36dVlZoPUlUmWsnTZkG
B1lHP1KNOCvrW/oHwiHsBAWICUEB8vGii1/QjKcFMZkwLyoIlZzTevuFvH79
mkOBaPif/0WBrIQXBQ+14CHyHnHd+qfKyuIGDaiSBpbjYUgIICxq+IDoRxs2
jBvlobHiTyM8rKysrHv6VU5OMX8rrOIcT7LnezdtiktdXdc3eOgxnr/SQVTK
YegPnr/F0EV2wGby6YzyMicnWINnKSkUVlJ6TXh37zsAnCUOgKvbtu8QrZoT
RsDQWw+/oZnfzy9UrWzRY23TLkUDRpZO832pezOLMAJ7Bg+eHRwtjbGOo1RJ
Co5mFFyYMX/H7EX7gbP9Z2uAc40ZDIHGQtiBsVNmr9x0WJIJIoH5icmCS+zE
cUAMz5KbpvgfA5ZqiZOSzvfu7TFwuDqP7XN2X0LnCWtPZO8qg2+/dPM5KQt1
DLAOmTQ3NnW11HcdjwntoB7YFq8zgqaj7x/++rPA/6odZX2HuKtws6mqFlLd
AtmAr2Jjq/v2zW/UKMAv3Ephrw7K0F5dXY38pU5nETgifGSX+HlCWlpq4bkF
+tJYU2/0RysHCCvAXksRXc3y5/OO7G4t7YJiRw2Zs3OPtd/wN9UJ+WkhTIhU
9G6JVH/n3kPyGMqCvRFaCzbR7nIpr6BFYUCVf2XpO48vcQ0MApv4iM3HTZqK
gIQUk99jSQ6c/vC07txlc4qA6I9iUJo+ZoPgc8zaMe7jID6BFyskx6lLVu47
c2tL0dV5WUcjMg5Njd2mMfOIKNCYj56zcWjg+uGzc4+Vfmmv88YUL2jYUSUa
K1EaR2vZJZs2QQikY+YzA8PLr9yEDgAj/H0FVtuPV4MZ5AzADnyy+giyhcR9
QZcFJDA7OIyYzOb4tLzAAlhAS/QHvdKd76alQwMZSezEB405BVslM2bMmBVE
1EAi58+fr+UvgqS2EKuKtiAmKDy1BdlKbdEYS3QMvdyiBdLfteEREAyN0dpj
wtSHT19DycGh7F3lkDOwMitpl3b6/B0abcSyQ5KdJGnDdcmptGDmsF27R5GR
7iPdmTcjPwWJrFyzjiwW4mKNGRhG2kMzq6wp6fz0X/81e3Li9P7+Gi37sPLt
4x3TZUxyh6EbR07f6xNemJxeJw2BBzxE44cfkvPy9dufaPzF1x5D6vjTaNmH
1ZiwfGiDT+JOqAdImRkwB+GWRCu+IUitr5TAZYyDDcWcfViQxcAdR85UAj6a
/1RSb/78flTIxjpKoa+gNDB1L9/3cm1RxhohqToMsdMJeatk4egPqQt+p1ZB
vUQl5zrLxw6cv42bxo73FFLSQkr5mwrqfOB/gAyZbSILxo2ZlspNuHHiNufe
tm1eM/zrLJoYgWTR6CRe3hnv9nKrVjlzo9iI+f3maau3pixeXr276PSE6WY7
7V012nNm2mLZ+9W1l5o0+ZXoEOflkUGUbAWQMGHCZJZ/k1XzC567/3gJsrS0
jWcRBM5JP0hynLv8yLrdFdBYvRruOo4Qfdd69twxfTqSL4k+6I6fX9DJqJTd
jVsTfScsrOXI0z7nL/2tww+IktNvfVpriefo79iwscV5u4NCoxB8WOr06Ojx
kzuO35gSu9WK6Yc5lKP63iuahqMW7/v66tkNhMng/Ys7d6COJKtxE6fuPn4V
o9VYjINNtHAPzSN0+CbtZvUXZL3IWtdFIeD90uWrYe80Nhy5wJo0EgtdzEMT
OpJ/gWWA6YY8iFcWSNzvBwWBgxTeSRoA/i/feCBu1TGNGSNICwFImqpVeBeq
+CHfTzEr78eC5rso6yuxtKTezJHQPImPv1BUBOEI2QTNidx69LpX3DYrAljA
+g0HrogIyJrysve6Ymla3Kju04cL3PzGoEHvr19HECiXxpkzZ+EKkElYcWrX
77tMqYoUdVLFFa/mlfnc1BG+Gktm3Sy8hwRHzlx08kDJ4yfPhLXQjhk3OX7l
EeauzEaHbNSYk7XCHwRlximfFLVFOvmeVjpo1oUmXoSHztpWOiIYyGFPMBmn
rD997Ys/kVgl7kOmCxZlwqZrLLkmwC+SJqTknhHv67CiNxOKeD/vQGXokoMk
H6uwjEOQG/6AH6Co9Nojt7ETpXH4BUcdOslyLI21QpbSCT48hJe8wuWHk+cV
mqNrs0F+ORqLIQHrZszfvvnI1bX5u/Xw5RsYum7vZRBA+gLnrqcv8C6SVkpn
kbz9iaJadOCbvAvNcrtqDSOLEeNv+vztyP8Onq+JmDtPJ1ktJLth825mUs14
+QIxu86qQAsJZpJlPGDrRJDd375bRWrm/n2nZ/gF10WWANz1L16QJ9GS+2TN
7JFZSnZULJ+k1FhytNDBaVDElelL2dwTYXDRyi3LV+WwB+gVI38tLqYDoQjr
7N0VTxISWM30u3fevkHommZK8WVmQOi5SzehE7MX7QtZsD3AO23GwEDuY23n
fjouYeisrN4eohZYhK66sxkZfTQpIuHrkqvrF9OnH8jfFLdwJafNmqJ3qD+y
MYgCEpoyb+uIoA1cYx1GhmwcG7EJqUDWtovQTbhJMQMHbYUCCFNLOdDrjRvl
ltYcYPzt3buQsLkIonh/lqExKYePn8vdfzlk4S6fmUsxGnM2GvPwbhNie0/e
tGbvP396T5UElF9iQE8TE1d4zPYeHmrB7rT0m7wgPLEQWgkIP378GOpKI0Hu
7RsQQo4JCnuu6uHsRXuhMEw7NU6TogvnLDmIwCEyk6k+pSfkTcsPnLm5p+jO
EqkISqqkGjiQpGMFBn5zqEhMRCalpLHch2JWSHbV2lzEDYcu3I5ffWzyvK3A
oob3aAlAxKw4Rl2Qpad5LCFkaUaapEyJBCIXmGru7a0jFu6MTS6sOXz66bJM
sUBwrVs3yWM2bgxCy52dJQ96tVs3KMHt8eOJam11//5/PnWKdUi57bHjJyBz
DkcDufsm76YAG6bVbMjM1RrzYTNXjZqx3M9/OYI3it5JrOzYOv5va4on8Pen
rKyXGRnIpG+PGwdyiGeXW7ZEqEE57L///W9SAIln0ABaZEHnAPDMBbugZRQ3
uQz1zxkya01sUmHg7Ky4kMw0v5Tssf55Y33hmAFWjJlNrnfoAJFU8pKgYn6o
WkmDBlI2hGgbSBJ7LbSkH2LUVqQjRSW3IBPEcveffod4i2JAFyjVwrQdcfF5
QQGZaeHLF02MQMdb+rrBPiAcgFc/5D51s/fc3JjlS8IzYxILwuZvTgzJ9BoQ
SDGvtb9XSsbCgprbTyl8gtYmL0iBqpDeQ1M25m+CRUpYc3xo4Lqe01eZ9/Ba
qbHEl57TVnnFbT988Q4pGIuyNQ0JavNWHYWmwtIhJ4/JOhq9/Ag7DH71MWgz
ccwcCo6AeNuxaiQwZqb1Cyg9eP7O5JhC7lu08Ez3nn73z9//TdbSitwE+IH+
lxeWUFrEY35un2GJY1cdJ91mdnha/HYYC5ATnnFo44HKwu27E9PX0ljFjAD+
A0h1OadlZObhootfglDhQng2ZosucnZXwJ/B1Aen7UebsHbIWwCnIQHrOZ+s
e89Y7TZno2/Kbv+FexfnnTtw9qbCqkCnIFGwDVkjQMjpbEg+eN2eil9+/V34
FMoFWKd7KjRmnDJ8o/ifRDAyaCP5mxHBuTCHoInMDcYjszjmpE0f/vEL2GPJ
kwlwjPJK3CzfA0v7NgnCwNAhp2YRY8I13J5ZzfKYN2fuejwOJAISlH5KuSdY
CsYWHK6KXHYYVFAeYE7GC7eDj9v1vREgIryRI6uzmT79ateuf3v6NDI6Likj
FwxDu/DHsAUpqYv/8ref0RZMFESh+ZRHDWRyYQmlw8k7dCi1s5Nsyv3AQJoS
IHR1BMuhWZm5+xAYQstANvKJE7nsZd3gCLRjbEQBXMm48HxPv5Weo6OBFYw4
YmwERVu0xU0sJIqSMIUnY7EpdykNyx0daQZ+6bLlkXFptCJReLgCAwsOjbxx
57E0XwPmE3ygcEiBRfwFvZF8OO3EorkzCr5gdtfkHImKXhc4a0nsuAhkr6uG
eq3tPmpLo1YwAIjvQQHl3+Cnbsaw2evXr6EBwDZUAbQgEgkMi83ZWEinB8Hb
AG3DAtaNmpbhNjJ6/JDQKYNmgwN+oyPOu0+knJuWNs0QEvAsh1ih4WdJW9Ay
Bn59VVoxe0ykxozpSyO4TIQBkYt2Y4AQHR3EhA7Xb9qGzoE9EAJylubsmukf
DAIpzgc581cfHz93s4bzomnc6uMYO3vz06pdsGczpy8KmBDrP9Av/LNJMeMj
oybHwfyGROSkpG1fv70E3RRtOryxcftCx5YFzT8p9IvdlM9m+Ag97RAQQBO/
ePgSUjBUMth/MBoAwr2QxsSoLSNDNgzyXzvYfx0oQWiXd+DKoeLbsC9ijl+4
ZvKbtPcMPn3PoVOGCrd1/eYfKq7UZTBlvsHpHsFAFfHLxmdE2PxB3vMH+/gO
nxMxxC+5w9A1zbodHTiqerQbf4JlmFSV8yw1lXKwSy4uuCDeawqLlZiyWK5x
CxavnTnKvdLbmyC9e8w03/6zxg0NHzRmgcZswMR0jcvAyUsHemXODshcuCA/
KnHLqqy9p8vuIvl6cUkyBkgqaOkczoycKYZQ7uQkZZxoVTr/g9PWseTyLUNN
W70y501ZhUh9aubGwF1OnpA41D2h39iU/uNSh05MS/IIDfVJDfdOmT8lNnlG
QvqImXFDfRFtzRwdGTk+Kn3O0i0Jq6AGD6pqICW2GkH9X+veXTq/S7yvfsvy
LEMFe3D69I9XqtYt2YJMMCBT03rupHnJ40Kjhgd6DQiYNiAAYgBJbJEsNXN3
XOaGVXsSU7cjkJ0UDS1gsXwAnyOBChy9ePfxix9YNVJgFOQ20z0qxHfJurDF
pdN8WQkGj3LYDDksws8//zwnfK5C0+bNT75Sw6Z7K24+y9xS7B6W33P66m5T
sjTaTyev0DTtNmUFsrJJMYWw534pe5JzTkPP0vKYUpI5pXgWz9NLWKBtwC4c
CSjFPXAbdSvgwu5pzJibZWtOUn0JnRz3/sOvaHNsWH7/WWv7zczu470G3muQ
b84w5GkB65G6BC9GQF266+TnNY/eoEc290iz+Scv3adMbmx4vhl61jhQlu8V
vy1h7QlQ9v2ff0pIXqwwflROJL3L6B+/IaFjsDRjM3+NwGI4Qc95hW5z8mCL
ETjMXLAzZPGB0KUsDIbPheclrFEoz+2ay4SozfC6Paav6uOTDV+PFuAJQQoI
h9thxTxqhm/v/oPS207BKzQamLpnQuTmgb6MCX19GBP6+mS7h7K2psRuRfcw
yGBC5S22kAj3zLlri+9HS78ErRj3+MjNiAmilh+BPUd8wubheJKIngxV8fyl
zykCQlMUwJC/tALJhm6YzmCuW5+ilTUKWY9v3M9thyXZWkTiaAcksPljLmFV
DYxPXPj67TsW4q09geiISTGiANEIRsAybzPF/Ms27rn5OXAWolKzxNKyWBfN
Noa/KbWxobCbFvB+/+WXTUszZgeHjXL3CI2I2rMmW2wfpplsEEnunFe/2Cm8
eXXfvjeHDbveo8dFS0uYnedpaQjaCe/4Qns9pJNfEC/Cy06aMs1jvCdCkhcv
XsBdI+IGm4AF9OSdsJPlOtybmA/2WTVoUjq49fCr1+INPobOvdjMjN7WeEE3
k01LjLq9p3YVly9jWKNGjZnpN3vn7j1wHYAlxEcFGJSt8BkDc2ji1NitKbmn
dblnT3b2zb591B0FEhg32yB0rgwqVV5WU+gfl9hpBDy7bx9vSBc2ENbvePFt
eRqL9BFh+jTvWWBw9Lz4e/fuQeegTFC+Ry9/AHcDU1lOiTxl4NRl/cemDBiT
PHFMfMle9sbhh2FhsJql1tZmJebmGotyB4drPXogMYJvFyv4LpBUTO8p04eH
BQVlzV16AGOBZ0TgSiaHCpUxTnSMEHrkaA+QkrVqDfSNLESX9/xgy9KFmfO9
k8ZMTPEYGVUse5EkGIBY4eljFuNCD6gyBi2u2sHeW7P79OfB/hkT3GNHe68Y
HczwRfPUiLMRqly49giOHLEmuA7eCyVD5ki0t4BtIf88d/kRGJdhgbn9Z2XD
ysLMLS8sRgQF/qAJiAz8hDEHXGihWdWr074AKN2VQ+fmJ22pXrz8+oIFUYOG
jOr62dBPuvm5uG7XaE726B/iFr532ARknaNGacwpy0UqCEGa+Y6P09gjHaO6
l2cXyoEtxJ20qgOZIZWhBUA2J0bzkHc9PW97eABLwDmfWe5EJoGtfvkGwFMh
9APYVpqbe7ZoM+iTruO79Vg2YuSTpUuBlupevd4eOICHPrz/QJMlIm8ePnt9
0a7T3xwqQqp+esL0jf08EGVEjwkL8kpGbLU/72B16Q2osHj/wN2JEyE12B22
xsj9a3f8eudE8dKlO4+lrn6Ynr5ozNgxn/YABdNatM7XaMqat4gZF7l5zMyv
FqXRND5Iebxuw5b4LN9ZGe4TFw4dlwKusD22bh7n5qfvSVqNiCN+yR5wHnKB
Pa24+bSs+imJAzIKDl0T3HvaopkLDuw6J9wet22t/379+qPIyIomTZ4lJ5+Z
OzewV98Bn3zq3qlLiKPTUd0OM5CeF5MJhx8am+8XlecbtwUGD/5hiP86BHRz
lx1BL+gXLUMHXsrOyu8N80iLKJSCQfndxyW5uc+f1WdmZqs+65t0onSbxUUj
RwFzFKCfu3x/XvKKER5ePfsNG+w2dYJ/ElTNO2EH0qIjxSxpKyq5G5NVBD/V
23v1Z15Zn05Z0X1qFpydd+IO+DJyeQnZJ+JXn6ClHsK87v1Q5n/69q9IOTcf
Yedr89mnNrB/6UszR7qPx19wZML+k5WKzJh/v4hm4ang4gb55aB9qB9SSVCV
lncua9vFjM3FhqpIfnrB2lOj5+SBWZTH24N0JHjsOP93HwAgiAi3wRzODokY
PNxt0tSZiWmrwAXKx5tQeoO74b1xa/L6U54xhWgC6hi0eD+urt97OXff5TU7
y7O2Xkxce5LoBXWAiDgjxvy7P/99iP/6ntNXDfBdy6nQQorANlAqneNA5nDi
5BlDRrj7BIRu2nlCkTk3hwARp3hGb8FowIaBvjn4TiEUuEuzxDRzSKqIf0IV
Kdgnm1Bw+NrC3DNhGYckD4nRS7Px3BM1NzSFGAQGTWuQYChMeNj8zcihoY/+
XinTx8/PbtPrlJ2joWuX9n6wZ0LnzxoRGhKWDRss9QvipH7pBC5DM4ifyby9
+eHvGA1cEFSe5KdFbDcldltR6ZcaXk6g+UaX/RvuQ4P5KXN0lNZXKMhnEwt8
x7u05w52AUCjYISdvsFnqLTCudMpYw4K787G6+v7pY/PzaFDYcTIwaM/Zuu4
vGHBWBDQr997aa+5FQiiDOTzC1XQEUrZyadbIlTNWleUsf4E9BdSg9rQXp26
rdYjR15u0YIic7sSmUe/9tlnihweD7KqAh4ZwBZQMgh1pOSV8nUuBVtkAoWb
TyIPzwpehLSKXitBjlxXaaO3T+N6z57lzs6chrbg8JOyKnlKb2LOGlEnQajq
7suU7ONz4grGzcqCUx8wcTH8ul8fH7iCWP/FhSk5CCDEu4bYKYJUJEIzxZda
tzk3dPS2CX65kUv3Ll4XlXmYtMlKZObojdwfq6Oh/ADfxPHJ1Jh85lnuzNH1
sbM3mP+inUU0cUbOfdkqxJQAvMYJLnzG/B0zEnf4JOxYnH8uo+CCV9y2CXM3
p+aeEekNeV6yxmzPFB8NW4ECZ2gpJiLjEDIeFnTP3Xz7kXT2TjNAGeQqfDtR
TwUVp4ouwdUkLSwE+uDsVnvPyxvre2zY2KNWDfc2dIkb5gc3vXJSqBkCIY35
l97eFUER+waNwSC5zMxXjQ3ADWnhy+H/zXR7L7Q0D86sDEes3Z9/+BuihINb
jq5ILQgNzEyck7lixjy4wxPunhdsG1KEzOelrQjxhxIyo2M3wCrAp4pdhewE
BJozBi7wHTgsztsdEZTpNylh4pg4txFRUWPC53gtWDU3s3TXsZ8ePeG02NM6
Gsw3jDigQKb0xOlrIOhqVPyz1FRadJTmxUEI3FdKn0kYFTSIjmeBtvJog53H
RAuu8PKz/TKQgB/sNUSU3uLmByvX7N1UFJO2S+SE/5ey9w6r8trWR9k2UJqi
YFdU7Fgw2BUFlSKKKFJEadJ7U3qTIor0KkWQXhSQIqggKootRmNNjMk2yU5O
dsk5Oed3zr77/v64j/edc6z1+bkKydlPHvZyra/MMuZ4xzvmGGMuVahGW6s6
75ZdfFxUAV6NzhZYHQPP99t6BHaty2qbgBXmCXPXZW/Zj18xrtABV6ouo0M0
afQ0Mg+PnLiAGQdJtPIthkkHiwaUsOvmlxSVN5l2KId6h2v0V5zXnpk2a1Xs
/PWwoJ3XHLQyC7DyKTxyshqmYwY3L3tuv+Ce5Pks5pILKqQFDwU+4BpIGGQT
6LIvoATUH3xw05EswBQptesjXwlihkEGEhc33SlqvI3eCoANoXz3498lZwTI
7G7KgDNHyfFQMPgJaCHh2FQBAt0HIqK/wafbqF48ngUlS9iNm4Gapc3D5W3D
ZEkGZbTAtMBApZb1eibWkXacDe5zIOg8OCxQH93HwGEQqbW05tBldAdAh5EB
I8dfdIpAj3pEK7K+5yFegHUkqXgkI224Go3FqHkmNsTkdlr4SLSzGpDHIbwS
78+vGxI7tEn7iP3ZFIAnnJc+Sdjrowirw+EVFFKLyZLagOOIg0NNQ6+MQd9U
1NBIQm/mNexnDgb8E7PM9dI00mgCyT7hwYA4bo8rUBgLotlsn9eBcOgHYHRs
QmVD5wjF2qNlaIxQtwoTRfXWiwvbMFxjpLvPxI4o8oJlk9MIXrv7Cu3GyMBm
IQweD/iCyHxEyVKOxN/wm2VyIelUaSgBfGDViz/7DJSYe80nCBF17zIz8YU0
N2881bUjTEbLVbjHn53aS9qQ8uK15TEZGPtVQsKrkBB6uRiWJfEG3+XmSnx9
QnUHggIWauoZGHqqnvj21qPnzI7nk5ECeWYVGiEiwF6OztToX+UKobCeZGRw
j4I2ZW4r5Obo/10eLUxI29c9TEg2BzPAJurZszflVYkuMdBrSXPWECj3pmSX
5jRgwCELlNf/gQebyyQOMTPtt9+IlqPv0rz2GWL/e0ntDcCI9/H07QcSt1lF
bzULs9niYW0ZbmuXYO2Uts0xc4tz1qN7z5mI/ef/4BY5mdXCB0pkPJtRc+Ns
8Zc8PweGVttk3YuGG++FRKIl77/5gdV7ZP3SwhN+uTkk4G/UHvfzc5bJ4C+F
ZPK4qrnXRl67xNZixR3iO1N2YRU73HKJQENjCMhKqCgoWMJ+wuDqzvvQJ1hO
eMjxhHqIK2gC8b+5QhwO9DUUetKhQBcL/0Azd+jx4slzri83FPIioNPbwhJr
orMi7CNsHZPXW8Vtt4raud0/ce46wCH4H66pDE4BjPD4KfLG8JhcwnloBRIh
KQce9+pigxDAqXC3V5NQdSQ2ub+gGiiMmQpKbRLzmudvf2KiKFjSEh8X+UsB
tFAKbG+a+5om31ywAA98mpCcmVLpdbKC6kqQqYRBg7jnnqm9VtvxKl0Sz8Pb
oAGgBzfMWrYlcY8LyLD7kUSYG5XxucBhmEk9A0+Z3mfv13429IB84pRGJj49
Et+c8EqFYYD3kl9JUtUEQyKJchkjbbM4Bmg+xQDhIbBrMCG5JgcBuDAWgtyS
YS80FTTA0njf1o5rcAHaWbjJsqL5FtYOmVVs6XrkQd0CFiB4dV2PBGLMdD9F
wUAgqjvuM65Mdq58fBDtxhLGsFQM+ne7d1iPhqYQjTbjeVAI7iem3dL3BCZ1
yOlW56gaHjdTbuFdBKYJVAEehfIcCve4WoFPke/UPa7uxLn2MfyodLSPcJm0
qtggBLnMu3gTSJla2hd+5hJoNrD+YMh5rBCXmIvp5f1EOsUgTLkDeMLlG88E
CZkiIHDkuXYb2K6+RSDW0bkd8QVs2xvKfaVN6qoDaZ8dztx27ByMW4AW+bc1
T5X0gk/eevyWDH7cjJUlBliy9iX16D9G8XDNy/JWodtwrf+ppsTCrqTC7sis
y84nL6w9xLYOODM+u+t4QUTWZVkspXNKhZ3Gd9//jXIR6rsfYsbRRMx1SslV
cSWVSWJL7sjJC5gUAVKlXsxpMo5qaKUSvYVUpwT/hHIAhkJ8sfxwI15JnnZi
0uS7x9OoHqyAsESTBXjFX3wmacdDhG1Eyrqbgp9JUaQU9yYXMwuEiC4UcHPf
4w+8sI2MTKgUcaR9wxFaIeelVcVOOaGDdPEzuZt/unRJEgWFC2lucDflWEh2
Ljlu8Bxw/gxICbWPHJFYFYwfUY0zhegLPf6XujqWfSQHwLxil4YQZ43/GmfM
D/E5TZFQfqeaCWOELGhC3Zj4imDHqMwV23tNLcRnxVIO+a0VK0ZMTCgqBy0h
g0HCQICi+P51eLgAvmDQniss7ba42W12hfEesP7QFUvbrxITof/wYqqggxG+
UH/DxzsTFlXRks8+9w1gaptGB0+R+O0lvg1R1JSwkzyVBuJmWrZzQMHRyEos
H5gTe7wKdnsWwJAFjln6FEIRlLfdpRXz6OX7/uHXMDhVxjifrFYZi09YskKt
jckYh46Gqz9dbh9x9UjZfODQhqOHNrmgE/gAmjCybRsh6J8vVPuGFdddusPr
wKlSLAhE5kL7CEYYL/RLaSTMUD+eWB+U3tJ187nYbU12P2lKmv3JAsK2Nlzz
CS/Z5Xxm28Fky8PJVjbRFpYRQbs8wFFypy1oWL0RSMjyYpn2nkseoAfZReBB
UNfgfOBmmbuPQJO3j50wvNMUXBJfwkTF2nLyyytpvi32XAOyj5680FLaCiVP
YAmIhoWrwn3QYx2NHc5MXyqg5TghNopFu/L4ZRICTrn5Ksf4YQnWdN4Hf8IE
YHVBcTpGVH3xmq1LwkuFe8Q3Fy7kGDr+9ooV70tKINRtEcl5x8LpzeqE21hf
9WY2p/Yc83ROQG870/J/unFT4gEbJ2U8GMWu1oGYuHKzw6c2HUiGDbFrd6jb
qv0dhusIJyl9kuVfUsUB3CCsO9/IMpgB39U3fRIhy0825XIveIklv9OhIOxZ
XGoXkCYsq+73sY823+JpvtVr7yZ3iy2ejt45Z6tukFYc/uLdseiacxduEPqR
31qQi8aexxnn+x0jKrnGryOfB8A15HTbJ9hILh+ew8SEaCHZqB94QSE66+UL
R0eC7Ma4LPn3CNvCEDmx4xpvwMRh/Vj4FAGI4vO7nr7+4dff/psqHnBZnUmj
/OLrnwobbwEe0UAoFUg5415JDZS/aB9RAbzIqh64fP3prUcSFBOzXnJTU0bk
VHHsLQgyHge5sQksdYioIG3oHFUN25S36bx7bO3h8MrdXgVb2T7deoczKhM3
HjmL/3ePvwjiTfAI4o1WMBuEI/MMIUrq0rUvTpVeheRb+5fuD2C7tUQq67of
nq267plY75vS6BZ7EXoE/eKu9U9czPxpLBcMEAIyJy4xAeUiY8BLqtSjd188
/w7L7FRUIVajn20YFF76/HVV0+be2rmLFsAPjU1QKaCQkrPPMFqCVOJ5GJoP
3GXKIt6ptgS6gzaDPwPGIFAlTbcI/cjuo0BAgXtpiC1l9NAnuQHTg4GNyumA
yYQOSPfIJ8jDYD5HwZd8tYirGgt8UxKfJNBOLBOIIZYl7Qn899df3zcxGZw3
j1aRKh0pgf9BIQjJ0RIvBhYoARb0Oj1VwG20k0LJuK6ZogwTgUV4rkJYpGrX
TGuR+qH2aGGZ+G09guEng4LO/Gbu8P4bAuf8PLe488pdzksnYmzfdF8TqiQQ
OyUOSHpwHiHv8Lp14m3btqO+Rx0TXN3SoY6POsRDxSZ8trdtvJo4NOyX9vZv
0tMFknm7sYtKMQlEdBQ0/BhXJcmt5pKwXCxJmHm+cV8FkYR8dg09B1JhCScU
9XgnNezyzN91PB9aB1diCUCumGBXt8P+F3y5V3Wmnp6xAhzOaR/zfLi4prkc
O5V2PJ7cvBT4BSYHuIk9d4mqQagJ+EhmKixkMAenExfI+0+iLTCUlT98/gxw
BOZBEamAI28L33AzVwEA8apsq2N4eUdkClALDYyMr4Q0JyZVMQLnxuAOt4DH
RC3YhLuqdtmCQD6KZ8gFRgWoxJC4x9da+5fYBJTY++S6BxXC+jzhkfw6KZnr
djak2p3qWvs2uJhv88rafYQ5IW3D8NxYz2Qbt7M2x3MAph7xbJsbEsEUMFVf
wAQJKVieYSVHPLNsHVIC9/qFbnE4vM7Bb9fxU4cCLvjEDCRlvq+5KM7ruG1o
SLGId1atehMZiWWkIouwfC3NJC5JEnGz5zYAUMwHBc/0MafEY8dSnXzzDvsX
QTMI/l3osaHWPkivbBZI9OZDFFem5rAnAA/wOhAOBH4rPfcKEMc9YtNl/Kxh
p1tcXFID11iHGWzHUGfMXJ6CabLxFPt0S5vv2IWWA8MEukcYphmQ3gz1C9WO
34A1W45mQaN7JNTBKgvJaIVOg4J998M/SIuyE5ru5Jfnrdpe4hR4pqAdehZv
djU6CKUqjnEif5oe/g35xbMBJObehRQiZOVXDOSAageRO3KCbSJnVvQTkbv3
9Lu2a0/O1QwIWo8iYhTuE/z7b/+k7QrFmCZwMhosfvoe77G+4EUFjfFNYfYX
Fh/eCywlAMdf0D7wMhC3iLPMQbrdNRckca1dxk63XEjs4bAK2+DzqWV94nCA
7JpBDGR1532qejlKRLBq2vk+6FFwyaNRNcBBvIyxPoobFes+old4Nv4pRI7J
7xcIuKgmtaXEdZdg9r6VVu2eJPZvtfY8xEoUhy3xqCVNYWsT6xq6r2fgqViQ
IA6U2vPRt0GYJvEz4Fq0RIiKUJchh2grAFNMICWZhUQWeWwZD66CLEJGHjx/
T10maZ0k5IYqpIo5HCO/5IglX/CbPK0yLJEQj50CDwTAKgZ2kUks5MjjUrI7
BQ4p2cMlKkn/YbRodsj73d53B8BPB/jS1TqjICWBsEKw5NXHxwpvIqycVDVZ
J/NIiFA18qmff86yTdC2ZbG5f//ue7JdoF7ydjv6m3uDUAo+3F95XV/JCUri
mCbaYb06YQIBF7V5joBa1i7RNh4JCfkdmEqWsN7e/tjaenDOHNzQr6kpH1n9
YOixoCCH7z2HghRgUjFKcr22ENJJsuSdWIv3OQVnB2W0vvueVZIjByx+gkEY
ld1xr6UHgzIcm9J9zLtkl13isu3Oaw+Co23fFwu+FhyYDRCqbLoZndMJEgR5
9UlqpM0bKdueRHutpUHJ0LOgx1cMJNUKqUEk253S/XPSZ+PEGEpel6a+Jyey
LnudrADWegTmA5zAiWgxYRol2TPcOcirozBdv4SV1ui78XnXDUGBO7ifOuoa
7XEsOdM3mYASN9ZOmgILFVSyK5JBAG4BIo88/gombGlOAxQugSwgEcCYuMfV
Y40N2M6OHYEmVlEbrWK37YtL8krGvSBS5ImF+UuziW7Q2sRqqu95CD28x6tw
i+Oplbv99nicC8lsI5XBtCj3fEwnzgiLImGv5+EdXiyC1tTH3szX29xnxHrf
3Q0b0L9Gbd0CnflpK03QGmeLwDCXBHSmISkfjf7l5tDj/fslWTT1y5bhWR+k
3rmF5JsW4yd4c+KmA7Bu0jwTLsVkQHj+49Vr0omAcyEaozI4hVBzcPkKECwY
RAk7nSDvFBeFib1xoQ2LAJYMpl3iA42tKmsaYP3iK0BLBkcJGGSii379+h2r
V893OHomqF5qvkFJGMBNiNYer4L1jmeM7E7bR1QCRcAvocwJSEifz3z27Fl/
f/93P/yMJxIaoSsdA18CboEkBwLL/FObAQYJhd1oJtSqk8cZjy3O0fbhDY03
BDyVnFnJV4m+wt3JpKIeE7dcsEZzr0Jj62BTp3g8rvvWi6GHX4sxiIIjxF1E
Y289fivWolw2VBVirgr32moRwuTWspIZsOHQg7QyVnkvvbxfANf00isZxW0c
dZn6Xvzw+XtBJeCFQgQfBVJgiTInRWRVds2A4FfFUMbkdR6NqgbYkjMJxLPv
zitKvSQ3R0Bas6l73taj52BVR2ZdTijoZgZF5XVCEQ2ilUFR6YJ/9cXbv5BX
lo6uwDeECzK4SxpwLDmmPvrYRsHfkWffCbB7trLvfF03rlQjq+nTUIxLerOy
5q7CysbaLQpIflJZJ/Gf0Imq5L8AtcWq3O6afeJcu9iTy2sl8L4dDS+AQKMb
aM4HJV5Yyj2Q99ryyltqVNGElAL07WH/zPCzlyExFMGFu0jUpWOkgJVmccR9
IsdKP1bUpzvROxlWSvYIxgTfCIebAasp5hh/cTFFD1OqgIC7LBNJjIba9Dva
dsgt3N7RmYnGzaHyqLMn7COufLZZBmsle1bK8NaQ25v4nt5wa+nS1StW3K6s
lNn2lBGWX6WVm8cRExXtn2oK2KsshPgf169z7x7vK1kDAg9Tp9hrTMySNSaW
tsccONmXr5uoLey6vvT3Zyn2Ojp4XJ+GRvHU+TFLtjtvd0uy9W8NS4QuFU70
noq2u54snT7H4LOdduaWe6tqGqoLmiIiCsHBqpwDrpnuAVJDF0NOE218AbXC
liW1bQrZklBZ0AKpZVfruh5lVPQzM9+VZYyDC8oERaUUS/bwJt26NiKOcxIy
ld60ty9dvFjA2qhTtUC6rzu6iSMJsCqpi5C0Yd9hy2CnvaEeR9nuIblhMbEM
V3i0D8u/kcYCaXvq63ssXAwMqwxIzI04mxiYCRgBhLKwokMBXha+buZ+JXoL
xTuTuoKvFZYwcOxabQeM4bKWu2AxFJu7P7A05HQrVA80V2B6c1HjrbTyfrI1
WJwjZfhAB2GcJ0+btWm3w6o1RsVVTaMELks80X/r7aXE11tLllDaHZ0p3jtu
XLeKyrnFGxwsg4lhAuGlEUAinsqfspxUpBC2HHfq4oklJgDKqqlzGqz3rV27
Vh58xZuZ5KT9uaVF2DTCy9L2egCawVRzpy1oHzvB18zT3iL4yIETfq4pYO4f
fbF83U+X15feSQ1Q504nLrjH1R12OFJTU/O7KEwVosbJ7VWOo0tT/NM6ppGN
rtrr7k+l40hZfuBBlZJMsmsjrxXEOvXet95vGx+faGtr++NPv4jrh2HeMJWg
aMDpwLTmjPP9WdEFnpuPhNmFe0dXkQcXY0t71NIM2T8SO6Qus22JDzB4Z+mv
WLnR0u6IWzKrjcJxQ+HIwMaIy78CY8MltgZoKUTTLSbr4vrIV2erruNn4CkY
P6gqzBQsUtxf1Hgb7A1QjTHBmoXksgjZqkv6Cw38/AN37tyZX3oRT8RzcXtc
wRW8SSagqGvoOfVb2PWce2PkDeQfNB84fabqOmDLPb7O0qfI8cQFGJabj2Tt
5nUqMJiFDbfPVLHiQccT6oTt/aqLTQ6OjsJWqQDKkkqGsqjMPTwzwa3QkaD0
VtoRtg+rxBXVbYNLlq1wdT+Omazhqmr08EexLpsgH/dBsUdCAKOM8MTmXcGL
N1h6aU2daWJ5ZMeOHd3XR2Swd5IS7KXzb8WTbrnvECZ9ghzqjleCupkcdR9x
1FV84iWNHtYhAZeE65JPBJ+odJ/kLDUKocVdgL1xMihEPEiSYCPwz3dnz745
d26GhkbnypUsJNfEJMPcfKSwIimtFlM6OsLyKhVqtFd5TUcndu3a3WPGjGzb
RsAqzPqVqssgtJm7j7zvvyGpaIJ7viitKveMgpHvYWidvXnfTRdPCV8lG06o
nEOMXHJaJObTJ64G3Bh8eKvO7GtHjwq4qdiHO1lgpz9WVv61p4f2U+vNbBI+
2+toZBez3QEk7UViihCBrC618v7S3rFx3W7DFTsizT1MdwZqq2qAnA7aHpaX
OBYpCOHCrELW+MzrkwwmFHaB4pa13PFKaoDUvP/5V3HMMZYkwSsL6Y+9KIZX
EBUSeP+FCz34QcYk6n+prUUfMPhUEY5QtHL7XpfVNlELNnUbriVyyn+dJIDo
Bx45DXGjOlF06JQcqo4bMTFhhoyb2xM7Ox6FO4GeP3/SpAZVVVHsrAa+fxTP
4ovqMyuA6jHxlVY+Rdb+xVQKnLgWn685kHeIPzpOgPHux78LYU8FDbegtaBU
VtmmrbPL2OGWe7riGsiUECBFEXw0bhGp5XvMLT7woDGOj5oDCRn1LgH55kdC
NhxyX28PHuu/dFe0wdbTy7bWL11708H5ZWCg4PVlNivt9WCp+vEMeh63OgXr
B7yyZse+pDlrgo1tp2pO27dwa+wm26Jd9l3Onl94+wC58SDaYh1t53IioeX9
a/cwzgdDyqFyodm9kxtY7Uz+Li0KXLHyYzE+Ww7HTJw80+x4vk9KY2z+lVxm
XT2p72bJzUqjd2R2KNnJEpBXNOK3x48xNVANwr4tq9Ms7FGwyhXk5YLCevTy
fU3nA+AGkMTSt2jJ5sObrP3AX/NqB/FuNFHwXmqyiJHUEhDYEqdACCTREtwP
KpdVdSO5uAdCC8WpMoYlN6gBJtAX6PHSltsNPY8FQCTN6RlxZsEyY3yJKdi1
x/KZ5CwmhnN4HDsppKwv8lw7jLHNzqzmxaYjWVa+LBoY4wh4QNMIzfuHXysM
Mcdf2BWN3fcnT52+/WCoiWvOMotIremLYJuklvY19z2RRPfIsyHeVz15Dy/k
Di3A/WCrGCshrAdDBJgsbbkDLASLtfAuyq4ZxO3kQyILoLH30YrPdhpb+WNQ
YG3UdNynjB7F7JRb8EpOVqKZAAcaudC0ar6B1VoTKEy79U6TJ6hn7XasP3AM
xvJHbaShBP8mKJQJOjERV58r7xg7dvxen9zdXvlLtruu23EQ6wP9xA3aSnBv
snRWlxqZCLP61VdfqcqN7wQluJfOcW9kFLY5Qco20UGsNiw9XCQ9CWYsAAna
iuWhExICFsW4xiITJRE1XBPpCjwQ/7VzE/zoypXJR44QPr5//37y5MmbNm3q
LCouC08P2+vbqK37yU7nZxzrMNAjHh796upd+vpzpk593daG9Yc2sXka8xum
gBkEv0qPiMC80UzXVl55U14lzxeZYfORX44V+CXN+3hh71ayo0uePoqbdZqv
P0V9yuKp01rPnt20eceZuLO/t3vJkW3Ove4hqGwvl2TKm+lfuFjs8n0RGPhN
Wtqr0FCxpdVlZpVl42lp6btgyUZg+fCdB3oz55Ir5datW88kp5l8goK0o45r
IARQ+hgFmJSEPfiVskRJFeM/sAevpHrCxcLi9vTUav+wQhfnZJDXtQsMPYx2
Zm/ZT+U1GjW0L4wd2zdxIuM1O3a0hSVGRBaVFbTgRVwqWB4zmB3leg7vNPUy
96EKgrdWrBjU18cttw0Nx6C3cpGrquJYHDxlHmlT8lKgi5Jaz8QCX7z7GT0F
KwZiycQg3Xr8VtjgYc7BQcnJ58vRROqtc1TN/oCSyHOXwTOdw867BRV6hhRZ
WHprTZ7hahdzas8xD2PzeVPmlmjPbpyie05Ts4Zndg/OmTNsbAxUhr32X19+
KaCoPPfsG2bePIrag6XOdvD4/MxQSBAH583D2PTzsPYUff1dU6e2ztIv0Jkf
N3v1+vmG03VmmxtbZfom14SkPGhgBRyk+5ZqeBlagDnHyyx9i4X9dDrpVobt
UAgL26bL7jgee+HIyQvTZy84Hpm9yzP/QND5XUeTZy5aO11/tVNIHmClvO3u
yDNJzCtV+CKYI9sWggnTiI/pPEiQFy9Q5xBRidEknkc2A17qG5Y0Z96CZctX
ZuUWRcXEnckpQXtSCtrsfVMizzSVNDMC1ZRefGbNLgBcYRlLxAAHAdEJSG0h
TirmdmNYCLAGcUFi4UQE8VeGO5Leevrirf5iduTH//nv/5mrv7i9Z4DsbwW7
mOMFRysxZZWPntZ//+2fMAwwKE6RVUG8HrmYUnNr4QnGK6O8H0QMrYcpCZbo
ldS41cpVTV07MLEMF1wfuLVh0xY8s6hh0C+uhEhgdcf98tbhgLRmDv43xXua
6jJZIX3DrzIrrn0iUXz8Z1GEJSjjsejq4NOtlBWDWbgy+CXVKER75y9cMvL4
hYz3gihj351XMHlAvwgIOdbMkcdBtuugiP0Vbt6spaZWzF1n//btd9N09cg3
4R6WeSwsV7yXqqkEF4k3CHpIYm3xbyeTC3bD1t0TNXVOn+/BZzffsF37j8mn
qZKkaipBSv79RBlpuPOAbWySWlGR54qqSjDzFMdMfvopi5DFOqYzRD5yRdVP
uSJGTDjpZhxxRcqroH1todrmq4gI4YAIST6fbH0nXtL++tSpV2fO3LRhA/By
7dq1/+IAize8SkvTV1cvV1XdOHny3uXLR2pb00p6KO6YnzGhLc42yXZ1zUtI
CPb2zsxk5BcATBiKz+7u7kXR0aSRJ4KwCU5WaPHCTZb+dpElJ1glG0nlSsJO
CJOQecpVO8P/KdDs/8/335OH9bqeXpKR0dZ584aCIm9s22Y8fvyycePOmR3e
tdL4YWoq2jbQ08NmgnskZt1u7CpKrwRCJjuEVmyx6NKaQvqXKumxUViw8Iqh
UZml03l7n7jjAXNnzV5puGrnzp0zZswoKj2PKXQ/7uXk5OTn54f+qMph4xip
HsCVUi/hGPZhMYln1Kna6oKmL1uvAMYoU9nRIshhT0DtpCmCR48yPIZjU4yW
LCtOL2it6sSzQZJ0dGev3mylv2iF9QHfg47Jxy38cxasBR+6Z2sH7PgzLITI
SHzAMEHrk6U0odDAKHaFKcSodxxzGbRoTP796FTKR4IU7KSTVMleqampsbS0
jImJgSH1LyGbknI00TGK5oB8Q2+5x9ellFwlrZdZ0d918znxPim/G9sSlYHO
O9vFUOysbt6spWhc8/wlYOExJo6rDIyXzV2xXG/B/vmG08ap2a0x22sdOW+2
wco1OxYv+8zJ66RsHivF8RNulrfePcaLypCOKW0dvtx0HWrm89TTz1xdMTgD
s2axecaE6+gAIVmVWz5WegLr26Cvf93Vde706W/a27GwMErWhobJPHLAcu++
8zWtygpMUDQ2oacwclpoYdfQc5gT9hGVaJp3cj2YB2ikd1ID4A0q2iWWVWEN
Od3GEWNqVknTbssD4XGZu82t8Nyf/vZbfHbD4iVLMCPvvv124SIDZWElkmhw
AVEl72cngPBjB8Qe030BpVRHdX9AKdoy9PgteA6/fjpU17Jly6DMcMv2HWaL
Fi9r7b2fU9UNw3DnXueZ85dbHYx02H5834FYu8Bi8MTEom6g7a1HbzH1mPFe
0ckGM4XDJpTBan1zx9y589Zv3Lx8heGs2XMs99v7xFdus3Q6W9kH1bj7cHBo
2kVZ5BwrxO+S9ltESApODkPBN4XperA6oKpHfB1kkdliJ6t5mF6tlW+RXVj5
ZN25LsEZCxavcHLzmzt/YXZpY0l9/+x5izbt3Ke/7DPjPW57vAp3uuUeCC7D
Q8LOXEL3rt5hu8LSeHvubmCxM8J6l7SH8rgEbyShDkZ/6NHb2PwrzJseX4dW
YQ6mz5xN+6NYTGFhYb/wHL229u7ojPNAXMiG/6kmGfEizThZQNHjIUWpcaWV
wSy4YhTXKWWEQGk1NzdjYiHIWMI1fDOO1JiPj++Ro25KpYpzC1V5hGU7Jzwq
ccb7n38VtjQLa68tWbYi/Uy2ra0t+oVX9Qw+tHcN+IrvHT598Tq3uEoZzqor
wVnabwUf0dfX37xlG9AJHxITk3BvUuoZUkvoh4o8Q1VTgrZJHG35GcKqUEsY
K6x7DCB0AIxotv+opoShTpJhqFzO5+MfP5SW4qIhAwOFgUNUOAlLEV967Ngx
b+bMUhcXsdfVdseOkTt3cCWxEUw3hgXDzXw2q3n/FWZ1QnpoOP4lPS1bnUD3
alSUgZoaoA3NuaCiUmBgINBSiUaX9VWQPU64m5Tb7mFonTZrVb2aFteO6n1q
atCc/RoaGCVPff3wrVvpYTP09Do7O39h1VYXGixTGQvgR4OgQ2hkFo7u37+W
fR6MNTStkTjGux/+QembOfHFA6V1X8bEYbg26eh08bOlVqirA+FZFFxWLojk
X14yiQJIQbRotgQkfjQwgguU7UhO7DZcC6QJtvI1s2NpIwfdzngEF3qGlQjV
GWahF79xqwWPf8+5CcYXo9zX1dWRmOXkeHLutNnZux3PrDGLXGMpriaFz4nz
jU8bbKxcsaH7qFd9QFxhcqkswtL5kRijZh5hgxcw6SXcxZqhb0madwkIe/fW
F+jTiyv9FAp71yegzcw6b7dj9BJWzspuqzuF8Xo6J9o4JB88lu7sxkD2nE+i
OIFEX0tr8GRCaliC1V6HY6Hn8FgwDCw1aNCf//ordLCytFUx5HbnV2eGnnnk
dGRk2zYw72q9+bnTFqTPM0IzXFbbHN5+PMzEOc36OBTTjahkTII462NsXl4e
xhHjK9nRgSLavWwZxeWVlZXhn3wGZitkFdBRL77+KSavM/viwNmqG9E5nVCU
LGjVqxB/mU8PSj+hziGy6lBoefiZSyCCuP6t+OQ6KCS8/xdpdWBjw1WrvSMz
SYPjN5ppzMAoESQv7z/F0A9cvSegqcBLiVeRq5WGzyWm5mgUC23LrhkU9hlt
XcKWGpnQM5etWr/P7qjARb8oraqZPXvr7NnQFbRTKVP7ISa3Ez0D7gKVMG10
9qbAPBt6HtOWm09K44LVpkZWgTvdcxesMrH2OAWm6Rlxdub8JbPm6JdXVEl0
Bte5iyjLVBzpI95RBLDX9zyEsAj6E3CYXTMAawYcPTSzDaDrGlcLNrXl2Ll1
NlFrLQM22icfCCybt3iNg1tw980XgHOYD4LXU4PepzAomDQ1hp/ro+mCZ9P5
RJVDRCWQOSCthfYesUIhTTBUMN56M2YRRU0vaYfFAkkOCIudPntBXmU7023k
CVYmU3jWSEt3Q3ZNvGey88EorCIs4ApNPXkspfO8SSlAhgBJX0klWwvfEop/
+L3434nEwqSIaulTZBNURn4OiLFzVLWwN4nXALgJFfAyImWLl65YtNQQmAfk
g+6VzyuVR9aJSpCV6xwN6JxbPCAGmE04jVfjdkqKwYvwFjU5bJ2oBFvjObYO
fMpkibCCbTBv5USFTJZLIjtviKIaoC75dRMFtjrIaSx+fRUUBFbLUJrOZv6h
shJK8YGpafyf/rRRS+vTikdjoVJi+NEdkn3Ux09fQlQwGegkr3c8QR5ZyReI
4UDPhYCgq6tW4f2r/vSnSmNjAj88GsQQl2GelOyEC1VnqBsPzcxaps1Km7MG
8OppbJdlbNFnsf9X6aFPkB9IEeZijLvknPvxmOOOG082bTNTU1NjPJYqM/7R
XXP+dhYjyKJXI6ssvAujsjuujbyW5pePYYpYC52cN2vWz9ev495t+vpZRsYh
Gw41q6obTJxIgPsmNhb88seLF8V7k3SoQJbuYvNdwZHmHr1WtoS2wt4kjTfL
ly1sGALO2IWW+51qzCjvL+C1OKkaToqr6ywNjZPr15tpazfOmYOeeP3pT5pj
xtosNQNzzZgyba26+v0dO0Bs3yYm0o4fOy2Zykb0dQ9j1ab7JLta+O/a4X/Y
xDNkfyAWMTh2V98joaAjt0TGY3Cxltg+QGfnTuZJ5yMJExiwQ6sWg07rYKmB
QXpg4K+i40Q+Vvap0tSzNvE5buFXb2bzaWUfnf9P8JlcbOg/mXzUKsRn+1Fb
46N7LCIcD5wALDcVNNzsuU2qC1YSxPI3iX0++9sf/jpj5uyUog5ogIS8Dv1F
S2kDTKhB8DIw8I7r8XrD9SUrNqYvMI5asOnY6gN7THwPbXE7buIaYeF52jHk
YlLBtdoOVvpAGqGkPYo3+a30BGiseYixYEHOwhhhsMhBAOGGoYLfTpyI2rBp
S1DoCYg3JfOBuoJYmXrkGztmGtqmrzt8ertLtkN4Bdd2A09f/0ijP15qm8lk
ZzHpGIMhoPhbyDZeRZ6TN2+/IygWtm7wq8Bhu24+B5T5pzZbHc/dYRVl7pF7
PKEe31y6/vTxi/eclTGgmSsE9qSyFMZKkC9eDqsdhC7yXLsAuN//9Dessf7+
fmCJ4Pdip7fPnYvFda25mRQwFgo+MLthHK1Arm8pQHi3J6vbV9R4W9C3/ytP
sElXVw/EEE0wWLykf5AhUlFN554DLgcDCzS0p02bPielgFUVBFVNST+L5TQ6
WguRBh94JQeZvU/03swjn1Vecs46GHIeq1Fc0gArADoNC6SkvAYPOZGcr6qm
vmKHy2f2p7c4pk/S0MY4R6fkrTPeeOXqoLRewSQBzVPLroJeh55pE6f4kA66
/fk3ycW9iUU9QPD8+qHSltt8t5uzJywCyAG4KYaAJh6z+PztT0tWGlv7Fcxc
tFZTWye/vBntI8wl01zQgXXOfpCCg5tdt+wM3mEZZbcvMvp4cmNayaO2nn/+
41fK6RyH+cM7cDNWO9U9w6wT18L/hImX+G1p/3R0FJfo1l/+A/aoT3LjBscz
1n5FIafb8upuSpAGfUGPMKAPJLXix0OEMG0WNk6gIRhlYpm/g92qSrCbPNx4
ASYNfzF8zBahqB4YRUUNg8BvrClSafgNH+QZ8iQlKM4BU6V/FIbM8Xo8NBNt
OBE9lpyNhcvxFQ/PoB4qyaoZWroUj+KtmqgwEunbc+fueHtLGCvmkPwW6Axm
TBKzDJnAP/AXE0WEefFoqD5VwPOeLVvILY53ls+du2vKlLq0tH2mpoLLGsIA
IcGwYSJZtB/vi46A8M0dd9/33xC2ZtlRLFpaQ0uWgHT3aWo+trH5a0/PTX39
Pz97Ld0FniDsAkOz4YlS620yqZY58xbkJuU+Li8XgN1DTa1AEbDzWZshVDtC
t4UIeHlFiy9BaPC614ODuP3JxYtr58wB6Qo0+mz1nGUmU6hyovZ1HZ1ube09
/PQitiW5Zg1A901U1Lu+G1klXSSjgqNb2Zle0yAloH+VG3efnbUCfNhlzYHk
pdvIvX1l3jw7LS28qsrCAixaZ+oM6Bfj9RvQMggv1gjtyEKWJQyYz+9Uim/6
wJO8nta1glOCvMNAj1pvc2K/v5cLy59NLejMkTuOSDJfeDDmD5DOmnn9+kJd
3SPGxv7GxqEGBos1NDr5XrHGmDEu8+bhn7XOziJEn/I/v/0fPBf9FWj48KX+
UWr3M57LzzOxF1dpFPaRDzj7Y47rCi9ANV2IjLQ2NMQ0hK1eN2vKTKsZC2xn
GRrPNfJea5NksNlu4uR23Rlg1184ODz39v5Lbe3ng/eJF33gVVXfKioxRZ5V
IqGEboSa8hZA4cWrwK4bI69buwe37thN0bqJJlaztKe6x9fu981ba3oUdMTQ
xGnpBmtgLcxGqmEHPl11eYQc3Ar5FMX1SnLXFAoj1LdgaywidkF92rjDOjox
nZ34dePJ9FnzTqRfmGuwZrnRNrBH6hMwob/7Div42HEbZkBmZT+YLrDdzIPV
tUd7wXpzagfFMUp4siQOlrdoCpYZgB5q5F/ctVc0cyZW2n5zc9rjecadddAz
0KlQKvjwL2mkgJaA6czPnd9t7l1oF1ph5Vu83TUbhgUYfjj3FONXWS81RbFA
DiHpDF0kbPSXX/CWz598MWe+QWZRY2vfo9MV11Qnqi/fYKWtp7/aPICVb4iv
Y7vmrXcbuh+MPPtWJk2V7+iqCTu6JU13ALFeSfWZFf2sSj1bAqtl1PoH7t9A
v2BwQIuioUYbTY/5xy9cZIDGrfvM2Cc0EW/cdiBw7uJ1M/WXL11ndiyiRBzl
3Tf8qqjxFlUdUsjhYYRdu/tKHCSMX6V2gB4UHzAJSkBQo1t3WHzz7fulS5c1
55adiz0b7HxCW1Nn68K189Q0fCbPydvtiFXu4pycHJHbUtr6+gXV1Zg4muzx
fVltzDE6SRBPu1nQsph7fEkmHSyBj75jjsSzlCH+g+fvr4+8EQcOn6sekK9h
QcKNgQSjllr2k/AOIu1JWVUYcjQLGo7mAa35IxYAx63p8hbABx6kQ0JFcAWZ
QlfXrFkzV3/xNhNTvAI/QZBxDZrxL+ku8icWgLoSC+AktwB6uQADM6HgZHk8
WQBQy8Bq/AAtyMM3pTweGhLXSncgJiqzAZgtITm3ggdX8Y/cilEWm0x1qfEB
6EpucAwk7ThjgKHsJcwTs5AnLeQIeRFYv74S+4DeqiwBiEfV8hhZfMCYArMw
3OItbnxDpqkUy7Rl4pav6kzNXrjO28I33yPqadKp1+HhI9u2yeQITUCnKBzm
wycZSpPJdhAzf5Np0w6qqnqpqGCRFNp4kIHwtLl5/rx5mGqKWpC3EegMAqHW
IKWLZNgFuFj4x5o6U7oI7UQHLFmSYm39eXR0rJNTalBIRkatwCt1yJ4muktP
Gfb0BfJfmj6b7IchA4PqdSZ+W5xitjvUT55Oactj2DEuetf19Aaloeq4pWm9
ydfx8ZQ7y2oziRZUe9+d6Gwmj3rTpwtG7C+SmRpLPnmBk40VLAXS9QvFdZob
Z8yvX7q2/IBbZXBK7pnazNy2gEiWpHrCKzXek1VPwhiC0VdNm4vu1+vq4pbc
1asPrlr1Ij4+48iRRG9v2A5E8MlNQIrsvcRLyzyaGJ8nlXWCaQCjB+MZYhuC
4SXTgKJBMI+tVZ0im2kmxR93G66t0NSLnrE8cbNtyKbDc/UWHTLad3SFmamm
3rF5K7zMjvtu3LTdwGC94WovV98lK4zEkbJP3/wo2ZHkluFc2ncluIC+4hki
rH4E21dMbQb9BWs9kd1x5GTV4bDyA0Fl7JS1w4na0xcB1UyOpmlNnXNgj1vc
8STB5//V1++gQCTj/HGHe4JIF1NYkB+vs00B6UwX8ztWytgBf/tV0jxnd3/3
wEQsTFNbvzkLVwLBy9pY6YLPNm5LzmL7hHGny/HQw8ejvBNrA+JrIvZ4nClo
l8nL+TCqvxWclLWDokqEgk/bOc2EPAmeIA1WuK+5w+agPZ7tHRQFW03I5RFI
O7fttGADoY0xuSwi/qe//TaK5uZvXUitoxOu0UDDdVt1Z+of9k3DhIB/V3fc
N7OwSTxTVtnYb7xpR0R6dUzuFZgWtsHn7SOqYATsDyj1iK8DcQdpru96SJ2W
t6yIj8rr8bfSqgzjN2za8onfmvd7DlTW5i3bWP7AiYyVxjtPZF3GxcVNdzLK
r7HSxmfa5JOtf/j535uvPoYM2QSW2YdXQrYKG27RxkdUdrv0XI+p6HdxekFE
RGFRQPKI23FBXRGfgSFffao4Iua82ZHEGfqG9mGVsF4whWzHc+LvypWGiBGi
R/gAOJfs8Qg2JSGU+j//9X8hCzBhIekQMVZRrHpAIh2lV4VdCQVRZOQHwIIH
gMJuIAWDhYCVT6YDIEbzDyD4WCUcnqoZ4uHEa/HAhoZG8rxLMBFUiJBNRd4D
r6EEuSM4cl/hzwYCQc9QKQ1AGfQNw1tNKXeH6sGCAMqy8zL5XpI6cfd3Z88q
RWuyWTCF0K7KMJpfo0XIR1iG8cNiA0aSQ0Lwt5DvhTRL3aUB6HvWe14tcLLC
PW9lAP2r5GyAcUKQ9q9US17wMuoJaI0pvdzQIMZm0PdKTU2ZwGq88NuSUvBN
942OwAjQffLnCxgthuNeUwvQUg9Da39oURsPCt/ftWHDmlWreCuY7mANpG0F
ks1JhM9Rp2oTEio6Spuo8tLolSl0yMMOJirWACdORJGj9ANPEgOWpqdWv7rY
MBIZOXvy5Af29tx20WOluFXVA1ZaXDPdg5F7YGY2bGR0e9Wq67q616dNK548
B6Q9zGB7g95cAPj9HTtgo/w5L48GXpTtxuK/S5pvW/uzYgDVnffRDRjVkOIx
nZIKLmMh1ZJ9l7GK0HmO/Jnddzdtum1oSKFqvWPG9KmpoUldJnu6j3o1xmXB
+gdwZ1ddE05zAG+ZPVc/Ib1AoPzk00cTIGziCorXlxv6L911ZavZp0ydSwua
npfdiOEfKKzm47tYyAdCO1glLZODbPj372cH3FpYPD16lMXY8V8hByQx4PH7
duy80dRBjDyl5OryrQ4OPknx2Q0TJqhu2mry4usfqFQD8Gh/YCn0jpDj8r+r
9KuXWXntVOlVQByQ3D6swtK3iE7Rc4ioxDfmB93nLVw2Y/b8gJOZ4JNUfMTa
3is2o9TEzCoo9AQmjvbFypoGbtzl9Xe5HlmA5mGKxNq2vO1uffdDaHra6IbZ
ADvB1CPPLqw88tzluJxLK9duXLR09fxFy2OyW48n1oMGp5f327mFOrr6CgAN
AV69YsUZQ0MWkcbf9IlfFfjmEV8r9qtSZjUh9R03z+cjTx99+e2mbWZRSVnm
tq4ATzEmT9Wd0XHjiYLIMCEvBr99jEoTkF5GV1PEOJ1wS1v0Y9jBt5MTi7oz
K/uzawbQfZ1pM9ZuNIWt4pvSCNoPNe4RcsrywBGx/5x254Sot/z6m2Dw5l4F
uN4/laUEi4PJJXqU10F7QpU18CaWNyryVfO1tFkIQ/nAS+zIixFMEvy9dO0L
YChWpNnxPFgNAggNPnjTN8wOakc39ngVhmay4oBYT8NVTU8TmOoa3mkKYuKy
2iZz95HbtnbEJKC6li1bLo7Yru+4haZjeUF9yhyYgAdKsJtboBPlpekjdqtK
URrdeiY5/WqM1NFCHmuyAAyUlSyWk6A6sQR94N4keW6ON86YMYM26dG47bus
8RkACxEFjvN83zmj4/gHfniGGMTvjTwUfMT4K2ycExGEDgQDVZdDbk0lyB3K
kbv9g4RzQzMCBIBMUFuYEIbRhNxizs0qK3PkZgz7bWrq4OzZVFfiE8zmbWCM
+lVISL+Wlgxak9eeaj0KkaNqZCyS1GHGyR3eKcnQGA/cRucx75LK0bw+mJYM
Yv9jcFAZVk+Qw2qqS0vuQWLOHjt2tOzdiwFImjQJtqMYnT8fHl4rjWifLX/e
gMw+vMBS8SvDFV1dhRvmAuVW4ZxbDfyk/cpVGoH+/v4LLddPZZVhpgnhBA5N
uKzW7+iK9eO12wsYemb60k9zdkX74lz+dcS+czEJd9tgNX/CRJ8x46jid/CS
5ScPBu9ZYXjGxORtYiKdodO/czeoEIAcveBZvm/pDFuq+AFBSkypzkmrGo5N
oZKJdORNuJlru+VB8m/jYhZqIa2UpcKj1DVozcAEc/YIdnHzoGAQyAD6jr8U
MkRodWfo89KcBjF6i08NwPtox3yssEVOe/fzhSg4mUOUhDxomgja32/svAnF
v2uvPai1h1e6+S63YCtfvw0HJ4+bAFBusfcAh3jb3nMquogq5CmuRKwDSe8y
s0o6FHjCgw3zjxcvwqR5ExuLi8H6szfvEyM5NQFLhrgExB3dFry2E6pqGg65
RSSkZFrZOCRlVeVITpKYBEzEQgY2s0Ir6S3iqg7SyO7JQpbv0MOv+4ZfQR8r
q/YksmamyXB5un7F+t1h7sk7N1nrzphrZe8DLh+U0eKVWA+4Mdq0OywmnTb3
uS6eLRP+nVl5nYKNDgaX7w8sM3HN4fUZyg+HVwCKGa7F19lHVISfuXTxygMA
CxoAw47SHx48fsr8ALT3uMHIqNbY2OvoUQp9otrxU3HVyLNvb4y8Lm+9G5l1
GQ/b5ZhuaRpgfSDGIbg0/OxlSYLTjSeBEYkwSD5//hZ9ZRYx2SVCFAbpuvli
DP+v//6XmEnjSS4xNRhlx4gqOvxuj1cBegLqzLn1NWE3ZOMWk5HHLwBP0C4D
gzfx/odPv2b6g+OMrsJ9it8NXicYF/i11lvpWQ6k0r1CEg87uZBFju4RIgDb
gQiU7SnEkROkF9TfBDWF2GBqYCqwYiq0P/5WmnGHFZcaV+rlwqLUdlud8Ftn
E26wPdLcI2BfkLdLioPHmf0e2fHZlx+/kET8E4wZ77QLiMkhDKPWAGOF/Q6J
r1QZnKv/LppTHTLaZaNQGsERrTKGDfFYcj1zkSFOqgjVJdHteAHaocyZ8+bP
vwiwHhCZkpx6miTR0y/kTEkrxbiztcqxaPooWM4yyjmKR6SWe/gENza3kqJ7
+epVUcPgmrWfoTNoO0v71ZRDby0l6B3E0btVEe+GGmSaX1sh71aXoreYcd9e
vRooJYlz05Cit5hrDy1Z8nVSEhQqzzJn1SepWLTEC4JZgOZimy006pgbLC1S
vmg4Rpbx7KlkEUtR+66x8TNX1xfe3vJ4PVEht1ZSm2MCPrkaGdX4+v5YWXnS
wCDE35/LmS7Gdbi3V/5wIDFAwxrNWbYJ1ujpHYdvWVoTfgzMmPHb48cSj46Q
HRaf0QA79tK5fBCwubozonfZfVJ7iphzr5VtUUAyqFBsRP6Vqsvf3rxDtofc
7rWkKgbz1EtTiDmKTZXJIL6akl169uLRw5HpPqwQ5LZpunZjx0+fqA1OTbnW
oPFg3+DgkoqUcjliekC0Bw3t1F88wn2jY9SCTX1bTCj7SwBowY6NOdNSXdA0
VNO0fOZMa0PDNFNTAW9zpy2IW2OuGG9FUedc9paLYbdfQ+OGri5lLQzOm9cC
oTM0LDYycjYwuHbE/ap3iJaqGosw33zIZ5n5dpMAW/PgQHMvWCMYzcrglKGa
S4/aev7x/BWeSRJAj2033hpmsN1vk0O9mQ0BKpui2l5aSQugCv7jt/9DVLeo
qnWfnZvmZN2EnBZapMeiq/f6F8fmXwlIbQZWgNFCvQPbws5cyijvDznd4nSi
CjgXmdWOxYu/rNISq1l0S6BhLOqS93UeJUd8/9PfLngGLp45R8CMw+GVO53i
ps2Yj3ccT6h3jb3oxAscg++CQQG5eu+85FFmveSJdY6qwTV0WhPadzyhjjK1
BD80g9Y7L2XUY9XlkWxeIhnTHnoyITUtHZMZkli0a/ceiS2BcfNfuLAgPZ10
5r8kuZuK8oin4DlgbrAsCD1rU0vOrjHrPObT03m759ZLxZk7tD4poorICHCc
VtAnPumsC9dhtYC9b3bOsgksAwj5pjRhSIChsBVyROnCj16+v3rn5SjsCMgN
KkUsaJquHuVLy6Mrb8N0McDiUSBy5l6FVGFfDLAyitbmoD1xYeKhkqpaApbK
1KjCZyyg3DO1/sF5MP9yHIMgld06sua/b1jR4G02m9Wd90NOt+72zN/nX+KT
zArGWfoUb3LOQssCUlsqL93Di4SI8nGUIknbCJNGxVGuByaPgqPEtMSuYGDZ
aHjJx3AsIdIHqZdNceXLup6HkO24vCsCG4YNApmct2AJP/1mskKkRGfzam9i
jeHLgvKGgMAgPDw49pyXX9AUOUzUVoKJ/hwTm0ZhtISJ+PQJo50oxSWFXuh/
Hx7Gl9CVuI2P+yRlfmi8E/fyOppj8YGysSSVqgCPz6QltMg6w1/JjiJ5kumc
RCK4HPVZJNuTw4f7tbXZFueSJTIYSecTEkaObNsGmvF7lTvGSDUVjCQI0fpV
q9o3bcIPv3Hnc5Gn5249vWtTpz6ytgbxE5M5dFIGK2QoL/moFTJV2YyoKR2G
66DoA/b6z9Sds2X52pKUMqhsKi8l3kAeHH4BTPtVdCaaMsSUzzAeJ9TBlqlO
RTU6iAHDwD3gEIYWlVxshwlMrJTJuKS6K5+DWWI0JekTV3zGSLBTcc6efbBr
F8yZgVmzrvJTHXvHjOlVUWnT0cs3MvXf4bJswao502Y8zCkmnBx5/JXEOz1d
Kk9o+XNPz3sbNlDKMEsT19O7oafXr0U5cXP7VFXbp07doKFRsnt3srn5Zzzi
EXhIIWN4zDdPWIWDxrgsoGXcHtcwE2dHI7vDJp5A0dhjMUBRjPK9bnZa8bsf
/iEkUnOtL1Ry/SM+4VkltT0TJqi6+UZiFGDaCtvBH6RHwFHYUHp5P247FFLu
GlcLYrqP5f6eB3MFxFJZTHJIc5twMjg/ZBIkIfPAAUl+VtMABhqQeqmzr2/4
ZVrZ1ciz7QCMnW65a+0yxqw5mK4ycfXBdPz/Tvc8PDwss6248dbgo7cSfydf
HdNkdGBoZltQRutCw60LlqxetHhZYFwB5pBymB9cvWrLLVoBEP9ANLUq1SXD
R2Gz95/S7AwNhdrR0dU3MCy6/cpV9AzkgaIO6cruWy+gBePzWQERkEpApH1E
FbFlGCd4ex2v65Vdw0os19C5feofFPuYc6v7Vq1dX3WxKS+/cMHilZiUMUrQ
kUcsm4m16+hstKX/SVHDLRvnoGVGJrEZpaa7LAhD8ApwyqFHb3FN6MmysozK
G1EKMkaGY1NaM0oAkaFpjTK1t9DsX379LwgfupdQ2J1Z0U+DXtx0B+OCZp+u
uOaZWIfhgDhBlo5G1UScbTXasD0zuzgmNh6zpzUqKnKLUF0eFdPy69Zv2l7f
3EFeVcmpb4pxUEsGB9UUzbRvSiNg3SO+dqet3/jxE/Ir29D4hYpmCibW8biq
6fOWOfkl77Gy3e/ghZbryOHdZCV458Pxro63VzgF7xMOyLFzPHQxVCR+kHDA
CYo4oIIYKdwHg52dDqCmiBMKuEd6H0+issvE82Q5oprg3sX/IDOgiLDeMjMz
KReVWCKrckf78ez81+joO6tXk0IdmDPnC0dHSU6xJo0654IvAgMHeSoPpQvL
QB7Hay3mI7hzB02/PnXqmgkTqsePn/6nP9UpgjXqJxDsl5tDHaVNoHHJS7fd
2m87yg6pbA6SBgYk2T/4/Jnyk+H5Bx1THJxSPA5EQAuX7LJr0dIZFbdkqvXK
1lYUe1+p8gqQ2zcwHNIQkN4MshKY0fLT336jLAR12vO83dh1wivV0j7Z0S72
1J5jYI2/4zXV/PXOHYEd44LoadMDdOYFmrn77A2IOp58KjybhopsKVXKGfom
NfWJnd39HTtuTJvWN2kS1U4Zi4m5vXr1o7175U5lI98x8cPPo6Md58yxnjCh
E4i32ihijwdI3W2e/ybvKFURTn95KyqBmSMtDQXVuS+gZIdrzqGQCtjk0B6/
cz6baBePIm8BQ199+9PQ47cu0Rdhk5+rHiCPqTzx47OtLsReUx1KK9/iXZ75
dqHl0GD13Q+ZX43PxnzoiKevfwDfS/RK2WXht2CVySZrH915q0zYWYhF4Hto
enHTreqO+7SV+eLtz+RHhe5LLOrmHSvd6Z5r5pEHnhCS2ZZW1gcdB5LEGAJH
O21Bt3lElZi6ntnukr3GInSJ/poTqQ3ou9YUXcUoJhs9PC45Ird+6VoCM8JR
QcN5BMYtWrlh95FY19haj7i6o1HVh0LLLXyK6JQBsDmQ6MzKa2j0EIdi6F2q
JSS7O6ol0of1Hbe2mO5fvck8PLPRPrzCL6XJK6keFgIhlLz9T3V4ZUDK3itu
toHRetNju51P73NI3r4/wcEiKMJwj8LcWlUpFgjnGUScvWTikrPreP5+/1JA
D/HMT2oug67z8s91hjuc5q+xsPDMcYurxSw0933+xesfWJ80R8Uf6jHNUVZJ
k7mtq8WRiNTSqzCUwIjRYwFmpsigDEX9CHMQnVFhuNFyjyc7TdM+orLv7msM
hQExBul4mu53XW3iABaPHsXmXnnKGyg/klOUIIsnRxauzFXlTzJnq3+KlElB
rWKZ4mdmp9M5M9AJuEoxspA3DFMgcKrxo2ILeSlwGV7CKlPpyrArilQSl6ZQ
lbIpjCedSzdGiii0PUit6h0/fmDGjCf29r+0t9P60ZDxLgqgAj32gqdoShFF
U+xBpMJQVI4dVvrtFSv8J0+eq6eXFhcn8Y7+DiNSExDldVJy9sJ1Ib6Z1QVN
P9waHifBAJVx5Eaj0B+KCyajCoPVZWaVufuIn21YoGvyMecUh+NZMfEVsPV/
/unvlM1FGpq2zmi3ShZLdIhJ/uf/hGZewhIGlgjmoSReRD5+Rub8T/yrapdt
oEuitX2Kp2cmDLwXV3i9SzphHm1oLWkMdk8JdzzpbeGbYmhaO2mKGH7BojAP
Ut+oJr4fXreOuBCIVB+vXQj0vm1oCJB5m5b2l9pahiPcVpgq4xOUVBrT17+5
eduJfX5dppb4pl9TU2bbj8docP0nc/7ZAoHxcNv3KjQRL+dTfCCoDN9DyxMe
5EgPm6ZNBHkKJGy34eLEoh7fFNzbBkgQqrUy9ICKP1t1HTYjld1zPlmNe4T6
xWQHsA9a/cOvoVZPlfYCC5wiq6huLEABcHA4vMLtWPKC6XNmzJz9/PU3fMzZ
mblsY6xtGDrKNfYiGr/DjR0eD+uZCvU29z2BvgGCQDuI+Y6mmO9k5F6y3uKg
O3+tqUeeqds5VbVJVZdHxLkP44j6RNuHPx95SqfNUiYoAADtBRgAEiBV5lTn
1qfIIaIKitM7qRF9hj0vE5GjpRAtuK2hQewF4glAdI25GJXdKe8X1JDTcYRg
Miu2c9r0c7oG/nu8bPadMDuU4nQ809w1yym8AsMvv+vG15EGwTwMgsP82HET
15zonA6ZEsJ0SjfgALdj2D2TGjBBZsfz0G2MQkZ5H0CE8F2Inx7di6ch8BDf
U03odlb1AFog487TlsELHSleYG4jzl6GVBGNRM+EcRbwAt/QaU+4xjOxHiRO
GEstubHUUYIX7hwvKj9lIp+cx805gbbARKDfKaiRsAJXU4o//uKzBCuo/hFW
q4SFjJ6pQT5Ksv7ZR0IKXH2PO6VJV4ylgEgBOVgFo6G88lDnWKgv5nhZsGDI
wODqxIlQGRKkowoSCneePgaJ/Dkvb2TbNtqqIitquozEiT1pbyIjnx45wg5l
0dOjXSmCiMGkJJ2xY59FRsogxCicY6wUI1Qx6GjTlyGhVc4BVCcfQq4ieL3G
ke4jK4iqmb//5geZfA2yriEADT3MCx+bdAFgciEiYyRWAh2k8Kl8HREHMupV
ZkrtuaySrnd9N/Bfgm9aY1jymWORLhb+cXtc82YtbR87gZ2cp4h1aBDzEfvW
SOLE/jcu53q4hpXq5Y7BR/HsZOxgK19PU4/Eteaw9dgZN+rqFNfZp6YmYY8z
Z97buBGjTsGYfEbnK0MNGcbxgVcFP1t1gwx/wopLtT3lIacu2rrWLVzZqTbp
0hTd5nVb8c/LWRW9vfeVsQselTtTXMcQy3zo4dcXLo9AWXjzHYCd7nlbjp6z
C6uEmk4u7smuGewbfkXHdIu38DE4TC9yGZ9CROF0Zb9XYj3U9NZj5/AIo0MZ
xvaZ211zth3NtvQtcom5eKr0KhTy9ZGvhNrs4vqBPtu28actFBxg7GCQ831Q
tFZ+xeyBdqc3O5/b5pIDO9kxohK6La/2Jq659/Q7IkRCMcD0zLPzFy2fp7/Q
2SfaJbYmML0lIuuyd3KDWGdRLWGx24zmW1xFoK77IU/2uwzdBe1kH1EFqmQb
fB7wFZ/fhVd333pBqnTCpxaywi0qdYXIQlxCYUyGEF/3BzLm5Ouurhtl/T9N
SL58Kj89tfpEZivsBMyw4EIVdKt/alN2zUB56115H1xpy53TFezUFI/4OqAB
zIegjBZyxFP64wdp5KZ8kXu+hrRxJR2YEpN35WhUzSHuU7MPqwQw48kYPiGk
luGU6qg4RftGQrvx00d/GfGB0SI6JslgF5dBDVxe2jp8Y+TNiazL7nG1gWns
PDyZ+VzAsZYmqW/4ZcWle17MpmD2GUwEmUlSkY+LnKoEy1w4lp1Xwn2Yf5ff
qSnmPt+kpsqjGL5hGpq8VdBvVC8btylDMC0ZrkOnoFLug4BYYwU/mvQ0BkUp
Co88vNL2eoSusrxta4dfhfo8f/CEatpxlIu/kLWiFO4O/fvduzDlXwYFDerr
92loUJVCqffsI9cZcnHBBT9euEBAJvV3KeA6Y4nr8Jr87N8TMSL46lVoKHr2
y82hK1WXY89dktRAoir98pmI8iwoff66tFmr0LBeU4sKv/gw9+To6FIiTjTy
yljP2BYtHf+lu9rnLqD2THpwMjbeM/nLghLyt128fFesSUg/iJGNIl4Fmf/A
CykIKDdOareI976WC3GGudMWRC3YJBSQZePk6ckKX7keLze1Dd3i4LzmYNpO
hyv2rm/50avfV1Qom69v0tNht7xNTR0FAf/+6HPFLGksuAysRl92Oq8iz5oG
KdHRQy+phmkNqyF+lzgT+NbBkPMwWSPPtcs43D5Ia8xQtR38ivdCO4CZUegA
O0i461Fs3hVwLKl9zdsym9pO5QtSintdomscIytZOVyepgh4AUxBwwBqws9c
Ohpd7ZPckFDYDVVI510JZfkxi1DK/PwxPku//fbbC55OKtkh/1/V4lETgryp
ZkJq2VXocYeIyjHgCirL0Dzv6KpDliEJZ5opLqKs8bp33Hly+QmIBW1c1X6v
seexWLk2XX3clF5cZLi1xCmwprYfP2GEdrrnAjxZ/TweYGIfXklnbWdduC5W
9wJ7GAVL1RRiqbLqS+QFEeBU4idXhqogrRj1nI+nqoxmSYud9/Inhn3g+1KS
bFXeimky+r5r6Dkb+dKrkISg9FZYXLH5VyASGCuXmBo6hRyDEJTe8ubPEk+V
MmTlrHsKISuemV83xA6bT2zA0EVmXaYq0TSMsvg6Tsr0ZPC159bLjoGnYmzS
/F08HS+Dp3rcFyDkQ5HDAT+fyO7Iqx3EylM4v3N5X8SV+bDySKMmFHZVXR5p
7nui0BhSkDk4TQnOOnOcLeG/yhNGbgdMwocHe/b0a2kNGxndMTKSgVbuQ2He
xqHFix9aWMgDKjFhESckRKU4DYETTh8lyQ8NY5W5Jk+G1sI1z5+9xWCRyfzH
kJTqwrAUunXrbq9erTCw4mVg4Ovw8G/PngVDkcvIm9g3aRJYzODcuawuXfLH
My251S5lfoSYn9vYoBEgoqwpozC/sZR+INgQY4UcQ9JrujLhHRC4i6WXTsSc
P+GVCr41YLV/FCrIxp3pOPIcytfWnzQqtsrsTqkKPJFd2ncju+oaC9MQzsCg
cA3qxSR5zSNGXcqvJZkU0JVCQUAgwVAvrTJWeCbXcurXzZ7b4J2jF+RRqILE
RBNScHMhO1G0X1MTk4S5Zb1dvKRvtVGvu39HcGxZTE5BQZtMzIWqgK0UTgz9
yOoiUQw8IexQdHKz2b7TBhuT1lme2O/v55pyPKTIJ6EOC1uMoWLySdKvL2hI
Mbiml/eDjAaktqAZMbksliujvB8kFboJn6Ev8b1PUiM+g9olFnYDNvEBStT3
VGPOp6XhJkgtMrHWrO68D9XbMfBlUEYrbpTBWJZqwaNA/ld4KmLb3JJeRMja
fmkoYo9HdEYj2BLuSi7uRT+Si7sPhVWEnmGPiuBaDAMFJgSCaRdaHpje7BJ7
8YDLaSvTgF02cSbHzjHiGcKqFzhFsmyGzMr+TzT4vD+AmVwzq8tgprzISvxU
H9GSa1RtquzvHV56yDP7iHNygEMUJDZzxfYKTb2hzdtkkFBSrUxeGmm1f8RE
zuxmkWcTQgWjiJtGVZQbKKMFxBtuNkFlMXmdCnMUxoyKkuT3FlASKIfGAYyA
vIUNt2EGFjcxs06F50Rqy4MlHjH8xTuYSvYRFa5xtS4xFz9mA3JtryDCQ0BH
WvwqM/gofMwRHiPlxOLRGiUzgMUXzZSZJarBIsM73v3491EcByryngNdJVjp
yLGygHNS8SlnHznpNCkWfpebO2Ji0qeq2quiAlz8yEM5a2Xe02/S0oYWLuwd
M+bOmjUCVJK3FLggOf9vpgz3pDo4oyClJAJYBjBVxvDiPaT/noaEn9pzzH/t
/ha9OQpxUkts6eHh5L27OX/+XWPj+zt2PLK2fmBmdm/LFmWxGBPQVSAplOw1
HZ3HNjboKf9+HAUiEQX5GAcoxsUfKyvxwn9+/z3tWOkIiCgmjl1WBwPMvbeZ
BltvdM3ZcfCa6R4Z4GNrl+kjivkUsC/xXBuI5ZvuazI1Xn8vg00UDzJeBvEm
yPxbsL1PlV7d5Zl/PKzkUkXbd/VNlC0osEfwVmgMAeD4ryw+CLQ1ObNRUm+P
avuLc9rLjEyIdH6S087bsEiAt6cJyeW7DoWZOIOBJqwxr9tqfs3JDah2Oaui
OLU8R1rghPbVShKLLqcX4df+Q06Dm7b06eoptOk/cI8YBTkSx5qmbIeN2OLA
1XsjF1imMToINDy7xkzMN4UsfAEEJ8hoRI4kemK+GJPbCZ4LsEss6o7J6QzL
vBSY1uJ8sho4sft4wZaj5yx9WWGCyHOXKSQD/AUP4lI0VdCCoJgAFUK9GyNf
0ZnLHvzAkM22ydsOJkOhCsdU8pxQGUTjOmuB4GIlrG6++jiv7iaoBVXzXnso
A8TZ6WS1S/RF76R6UHPXmIvWfsUbDqYaWiV8ti/R0jPP/1QT3lzUdKeocai6
4z76Z+5VeCLr8kcGYfAHsIyiCR8+fx+d07nbMx/of+vxW+npVSKtSBmz4lXd
ZmYdtM4GYtiydTfN9ZcFJZC+zit3lcX5KzsJWjRrHO9GO/tyAuFGVHYHa+7Z
y/eefstnfrrgMB09A09ier37WSGoEfKME6PaGDRWRRcfum4+7xt+efvzb/B9
WcsdGDvW/iU73HLd4+tgRhG04a7nb39SkN8+VY7v7ZGZLT0ZLBsnZaHydujo
UyrZL/s4d3yMpyis+zm6Q1ziPRTjmp4SXDvMcS2Xz57iU6t1pLgm9q/e0NWF
5QyY+7eODkK+T3YFbxsaXp8+/ZmHBx5AOCbUhiFcm8QY4KpVP1RUKIQySS1x
KZIBdt5ER39z+jRdLLPzx6LfXn+H0cHASk7WFOQd2hLPvTZFcvLXwMyZUPX8
rEhF6DWeqN37khIinvTtuC8cHYeWLGE+0DFj/hinU5Wy3Pu8/gz52KfKeED7
1NR6+XHMlLFc6BMf5JYcH1t2peryz//290/qymtKGRtADP99ytjUCMPa5i7K
2+3ob+4d5pJQGZzyeW6xwpNIRIhF3uxvb96h2jHUW220rGqX7XETV+BNs6p6
7TZLmAzuB8LTfZLbIpJ/6L5Km6U5ojqbEqQiHhe9+RCFlhBS9VW2VFR0kSx/
jBN5HZ8IzLmxwpCFl8yY1bX6s3pzu4u2rqm+KVH+mZQBBpXqGHkBurW++6Gc
NlaT02tE6dvHTgg3c+21spXBsNEx62MuGX+uLr4CaVHmNn3/DTsnF0oAUCLg
FDvxiR1I1egn9cfOw+TRwY74r67rEd7GipYmNY5SvFvsWIV6UBbmougESpXp
uA6A5hJb4x5X55FQByKxP7DUK7E+obAbLQVrxfDRcd+9n1aqFWgfG2S+3g1l
aomfKWgPNff0jq4SWoQvoViBf2gaYKywYehAUKlDZKV9OKNn9uEV+46edtnq
EmUf3tZ6s67rYdr5vmO8aipAHESHJuBgyHlMdHp5H5oICoIWJxV1C6qV46CW
WGkGpbeAAQJoQ063Xrzy4Kvv/iamcjKRYU/92K539UJDwa5Bz5NCz0HaofKJ
5X2s5HW64hrah6ejTZC5G/zYBJJuAeU+cF+xAoQbL0VsYdX+7df/ktG0xPwE
tCMdMUUAPQIXKtkLXYbPEBnYFvgckN78CdZNlbIlkujcizcx27bB5YA1WAOY
j19/+++3nybOE5ubiE/lbcPgeDm1zKoKTG+RQTrmncGkK6NvOjJYN2E0lvs7
FswUGbSjWDklFSxHq7gGwab9D2EzR0UZizvI0S5LjsV9PKuat0pDPibmSw+P
p0eODM6fj89Q+FCq5KVXuJP4dXw8PuNxs3gfhdqlZCvIcrjrurp3N2yQcDg6
o+Wnhgb2yIkThxYtAkZd09aWj6ynzJWfW1renT37+OixM9ttAzfZN2qzXMd+
DY1evl1HqQgPTE2ZlefmdmvFiiEDg1dhYR+xTTEvw8uBuYP6+v3a2mBxf87L
YyjGR3WGuAaq/J6eQp/kwIwZ70Y+l5lXshhlPBz4jo0TIZeC8ziEWEdAXYVf
/NuP1btlIvcV+T0p95DwD6gn3t2TrSLC5hLk8uTBYChMwF7EyZLSnIYfPqc6
IUtknEbQZ+TSHMU3ef/aPWGDkQXQVPZ+2dzxMDH1mldQz9r1XYvYoZid02bU
LVxZtNmqcLd9WUwOOJvgdpTFvzFKVh5FFxBju9F89W7dZdgC545FROzxcNnk
fND4SIiZW7SVF768fCr/UVvP37/7nnsxOYLMIwVHQTYAwKL0ynjP5EBzL7vN
rodNPAP2B9k5JTv75xdWX2/u+/xUSe/Qo7ejH0xBrZNGsk0lVLl84xk4Vlx+
F69pVgn6Q3lWB4LLQJcApBgoYAuekF0zAOxkOo8sQnmfFmyOF4kpZPUprML+
CbZR9Qr5czIUn5gMJttstq+/+468JjUQ+8UevXx/rnoAbxeCaZ6PPJWpwo4J
CspohYWAZl8beZ1U1AOEEZd5wa/M+RfDnH/7Axhsp5f3w/L54vUPvILxfLHM
gUhB64k1K0QwuZglPjX0PCYp+d09u19uDhVXXSWbQkVWg0r2ZT6VL3R0FNaB
J9HEyaIj5R/InpVEM6rgRCmOkFyOtSjLhDa9aShh2vidaiQfqV9KY1HjLRA7
aVTNRJmngWMKdFCF88GpQulSUjYyxVrxDmCiW1wtPwq7BrZMTN6Vmo7733z/
VxXZGM+xcsxQdidQSwYt1ZSsWcF6GAUtZXn9RCVoOV4JWuICrDZKGJ2hBB1t
ODpmjsIFtaVMT2GszRiegkVVUPAN8E9AU4XRNviRjrKGPM6RYYn8zoX4GSpV
IUUkpKA4nQ+ivcDH+/fj9b1/+tPV8ePR/Jf+/gJiClkAX3p6Pj16FCSVHXIp
ye9V65s48bqODvARyNd31DPiaGx9TBawVYyTaEDvuHGjcEA1wkX5CmUcO7Vl
8PKusXEPZ5SK9/DGieb4so7e2YwakUWkLr9/N7zTtGSXnavRwYS567pmz/td
j6a0Tqm6ErxUGAejJtSv9l+6C/zwU0+mKMOMTsWBrrMJKittHUa71aTSQFwx
ba/Hjj3hnistK7fvve/oLHg1WS0stnw0B6/e682v7giOBTHMXmN6YKvHwfXO
FTMXtS5bA7bYecwHvw7UdcpxQ20l64zrodliJgituS+gFDpFngmOokFlz10T
MgRUxV5LaPBDIeUCG9QhKCcgwpyiuUCJ3pI6QDGo1e6d/kYWsQf3RSb4psHS
6Bl4SsyQPAkf403JW0oFn7h/j+G2KhFGRfty/AThoYdfE1yIuSU6Tmc3KeKW
H5HWyyX5hEeyQD74r/PwK7AA0JxW1hd+9rIjT4bY6c4Kk/qmNEVkXc6rvdkr
qpRJdgWpJKg3sElni8CA+Br53SXKTnpxvipkw6E7bp4w0ilTTIjRwWzidUZ2
p+1Cy0+VsnNN3tK54LSHJNRPA3sC0/Tm8f9bjp6jstrJxT2wPITDUiQ8QUl1
bc2/3Rt50NBeE5KSciTykGXolj0Rhz47krHjcKPlYViFH/f6qM0YQMASrJe3
0nOWlEigRDujIdDIuzzzjR0yj0VVg3+S31pNIVrKnL+I27Cm8BTeA00BJ8vb
7oIa24WVb3fNBpdF94ub7vQPv34rOjtdgeYXMrY+9Z6OE6PlWBEbxwgC5zPK
+4CTFt5F211yjpysjsruqJEmT0r7IZup/QciUT/i5eijqAwv6Rwy2T1cdSV4
KZ4R8iXAEIXGInci9USZ79Sa42Uax0s6NUuWTVKlTmV4+R9CnUFoEfwbcCWw
SwFpR8n3/ngu9RwZnklRSoSeFPSKB+DxUNMSnsmf8PGkyrtGRjcNDFg8hLo6
85BOmDC4cOETe/tXPAoRtw2vW4f7OVJOongY8qgOzp5938QEHPHx3r1vIiOl
EaMThYhRgFLWbsfw/QFD0Qwo30RHq4y5w+rE/bWnR6KvifnLYybFc/1Bjolr
fnv0SOJvVZXqMMx2zJmWhISKK1WX+yZPeRUa+kdrV47/f//7fz5ZgeoStBS8
TISKI7GsOlbAXn9/c+8sY4t6NS2hbUL8yji0713fjcycVggaSaIQF/Pux7+T
O5ZqwygkkY/tHe6Hnnh6sSk4uvxUyVVoXGvP3OOemeG2gVk77WuXrr20aDmu
7J4yFVSy/5ATLq7Pqy0puiSOauW+iMnCagpIa8m+OAAlpNAhOnif9fyrP//C
JXg5W/JdNy7nX0RXTzuGgEx6Gx0AmXS0CDqx3x8c8XxSEaswfO85roTmxRM+
8H3Dt6OeXIjViua9efz8XPL5SNeEejMbQUwx32IrSIPaHZt3BQpfQDFqNFXn
ZTqL4d1YAjIhG3gpZVj8cffq+59/bQ5PTvVJDj9z6XBYBWAGWtT5ZDWlTwht
J52FxwqsE2QVTQHmO0RWqYwFSKlMEBjS3cFHbWbW//ntdzT7AlH8y8uvaPbp
hAPmn2sdPlXa68QPLlAZg5fyb8VneNKIaD/96i8A4IzyfqCIpABpeOXh8Iow
Duoyx4JJdKk80lF9uj8S3/mP736AtLjH1WJc2LHUolOcpdI7QdhxIpcp/qoq
0eEcDabLeFPLW+9iiH/5lZ13ofDgZqEe9Ccrkyo0ok0wNsX6me80aWMMQKOF
ycRMAqtSivm24sCXJc23ycNKt5Dt+DtISPty//zX/+0bfplTOwiLZ39ACR7q
EFF1PKFO3qb5IJxKpvW7GCjU4pBgoIaS8Zv4KQaelztZW8oFRRio7IwgehYM
OjwdgE6hWDLDriyG1JJjYApX4zLnP0s4o8bvYiBVmP6vZ8/E1JHGSikCks1F
9JHOj+YRs2PpJYK9MUkhBgrKhSrEi+NI727Y0K+h0a+uPqivj0cPzJvHKkkR
51PRuDF7Ntbt4Ny5aCalRN/Q1WXHJ65dO7RkCdtpJDb5+zuEFKsD9ZGS8v+z
9h5gWV3bujCbbu9dozGmmagxdmPvFVFAioL0rlQB6VKk9ya9CoiAICAWFHvB
bqKG1J2d7Jude3J3Tu7Z9+7//P9/H+8751jfZLG+7wOzn5OHh+BX1lpzzDHH
+44xxxyjFPgIlOTuoxYkHKbJexwkA5S8LUj11sqVwFrxzS4X74RN1i5b3Zzn
7Uyc9H7TjLelMx6jRgEeNfmJQzQyUm5R1PsbKSOpylxO5iG+PHehsfYiVd3W
a1d1yZQy+vv2J/kd3pJnkBI6gnz7b3NpfJ9t7Jz/eEHbhu3wBQsCEnISyqGX
PkfzY9yiSw75wGt0X3eo+JNV7GMTJhav2h5v4w93Ji225GJdu6pPizILrV/1
Tq71IzTuHcaePB+Y0gTbC+8R3s6jFz9Imbx92TKGKr/QQO4X4uI81kj9HRRe
4WtZk5H7hxyBGdmz5sVOnWe71dNml5+tTZSbe3JcTFlZfbfYOyQuKMufYf8e
LzJsLrd23yqo6PA5lrHJMm7mp/4rzI/uPezhEOt4JOcob/4TxxEEppDgD1NL
eQh9JxP5+pxLPgZeAsnPOdXtHcdaUmx1zYHPt9kpa7NztoV1tJ1NNAAptbwr
pewS7g3/UmxcUc8CIQXyVdNUVbBhueH94CFE6DY4/hQrRHPmKsmGstrlpxWV
2sLXyNi0/md6CO3wECVNrFdjmpa22HzmZgu7HFPQwUvZ1AannQWs4Cs05+od
N289/kYAKpTqh3Mdgx6S4CMZI7JQ8VQQTbuqsaJzZDWYAyTbevUZbRQqMhy1
+UPDNO5MvlY7fzFU3kvRK64e5MbCrygqt/0xP+JKcVSxS6lu8HWIR1J8AHqw
P6AYjuYmpyz7sKqA5Cb5BqZgSap47iC4SmcVxSmMhOKLDmGVIRktcI2TSy+K
2LuhevrvqEFxVVex1kdqkSXXopHaul0SrsonZZQWTBV1a4gP3X7yjXoDSwGu
OtpO9W/m6Bou8zA19mUeEF2Jgf0f3gAVbwCkyMPUWGVa4OsQhYc5k/+7r+oL
18VZA6MrPvJbT893GRnP3NxwbSAq3EZgaefIke3wVuA/vvXW7VWrGJxOncpa
AA1j5UzaeU9i1rXCwIAQhJ1eXLkSaCp5UxR5o+AbzaM4J9lYeIa6QhtoQVLD
fwFJhX86QAWWi+PGYV5a12yiNJ5gryR4nPD5hAcjO+HB/dp+O58/dN8YaDdS
L33NXpjvfhgqRVmp04cidvvyu5/JKHItnAK9qs6tdXNLOmZ9tG75hnMzWDdG
uIwlCz5LX2cW5hBm45aekFLLjs77R1xw9r66dkPXwkViqxUjxU1jI4vgAkrV
xRV+RHdPL+sqYaiGn8O046eG3BsupxGKNQnjCBlRYV/NGGqgwFB6jqmDep8p
8RXp0X3dt+VFEkV4986dz3GvZ70/yeOseDCAPium6VMYmtlKcdahD7ruAGgf
Hu23Fm5FJwCu//Hb/+QxJIOsmm74bPRMqnOcfN/RQOFa8pg2xWggvUtBUeVH
omnP1DOmDvZ2vUPmGru05VZJq21Tt7pkA4zTKi4/fvkXDJqv3NFQtQvrN7MI
s/btUDmaKrOblafCKatR3X/s1dRvup+3Sh6mum3Oqb1G/aZSk085emdtNIva
Zhq2Y5uf4zJLj/c3xq7bn7X9YHNAdHdS9vedl7D4+I7QBPnpDagG27stucSK
ePe31bygd9vlu6+UeavUN1FzFo+SSZENF+u0uPHWtQdfabXhJLG+/B7R50th
07kmTFa8fvH2K8XGNl4hXqCeGCTH1RFvgKt65OWonW48f/2LIydOU+xD1gfL
UN2DHeDUIxzo1PLLtF+nAU+pcppGPKU5whXHaMFQ9e7FumoMRn0itNXq3MCx
9JgmT1XqcDxkUCzlc2wAu0tlPvFV9qrotqS9Kg7rkCw8VY6lo6k6pzqC3t+x
45mLyzdJSV+Ghb0MDr67YcOVOXMuT5lCsVeg4/nhwy9Pnnx94cLrCxbcXr36
xuLFePcyEFRPj84rdgBihw27+u6793fufHLw4MWxY39uapL2qvj5S/W6AlPl
HZPVUfP1G6f6EGQK9H2TE4bKyCurX0TKcCIos+69+V2Xe/qyVftQlNab5t1J
iLFFVw/erfMmZzi7NyxtlLipqgbDs95mYvT15x/Coh9NbYKZvf3kW0KbxsyK
Io8wOJKV738S/85i2/km/kv2FK/YwkrxJxdcKjz1tK75flzSi7AI3BeSqDMa
5v2pCQwvYSZuJ+IbMltKfIJOiuCe/Xed1LtHvDF+Gqv8zZFyrIzMOWfuW7Rk
f+JW11zHcFbVUQ6WZOMGxUqps6yBJDVOWMUmJF6ozz99IrwgzCnKZV+gyTbf
jes83T/YFLTZPtvEgfWOyCi839D2608/q5/+IJ9ErILWDds9P9p68cOP5TyS
dsSE/ynDTh0jPOcujzyvuDo19KQaQ2LbUbidcKJZwFrWfOnlNz9TFK2q9b5f
EjtDufYQK0QJaUHW9Z0P2/tXmBNnQGhmZRVIw7KPLN1nszcIzmu/vCPladkh
2jRCga7ccs8ZAGNByb5sPkdRnZjNB6xX2q5e47luW6DN9sOJ7tF10SzF64eX
3/SqtZTS6M1iRikODeQhnoHFILKvmBWHkwhrfyCobJlV0g73XMJhWQRYC7Ia
KZBVc0aQun+qbt0NFCirbUdTGwoYqtiIxmMkr3nZHkXKkUbcHfYGuEs70gJ3
LfyK4c+KhNvXmrKPdLQhsKIzk39yI9S+n4erLethVH8EBl6b+RY6RVTJPVpt
XqyhGgK/yRxp65i0liPw0QG8WeNBEXh4f28Whh5vANiGDIjBlIlFvY7ZVfhp
YbY/+m1a2mMbm44hQwCeF8ePh0N6Zfbsa3PnSn5X55gxlyZM6Bw+XIfFgHXG
4GHx78vTp58fMuQc394E7uJFQrSu6dOvzJzJqtcZGeHu32VmMsQlje3LbJqo
hsC0nwCJ1ERmeq6zq5o6++ayZU8PHRrcMx2wNugfPds4RH3++06wUGRacSbz
j8R8f5XVnVZb+UavZZlI76j3QaAwJQyOn1NMhJV/kImn7VoH++VWsVPn1S5Y
fm23aYlrsI93WlZ4ztOsPCIo0jklmQdLaPyaH55Kk5+AUdjhISJKpOFsuAKR
4XzACQSIa8whepMI8Ai59/r1D/9GsWMNJ+50/xBSa80Tgl0/EFQu3zal98YT
wvU8/16cdfhV1u5a3UHuyS1OT6yMyTqryh9hlZUT0k5/W11LdLZ6zOSa+csq
LRxL/ePLsmpTSy4M6O3KI87UT1wduzU2TuQyjorifJDFJWs7enB966OlzhHV
NE7PmHqX4BKfLU6JWU2KbCcu1bFyT/i1quiBNs/5/uffy6IrMu0ZcI91suIM
Zs57i6C9fhvsrHb4bDaP3mQZ63AkJzWf5Wfi0gOEMumcu8Y+kdpAnXRnqtyO
K6ogqOsbZAOqeP7GF/hAHC9CiOW3xTnbI6Yur/Y6ZDBUgemGGlc21VAdGC8I
zYdqQQ1tr1Otb21ITrGkNwRz4mPqaG4gR3OOzmwpGaofE6VMTXU414bmtDeJ
AWXVdGub5xFa8Jx6C/DpuXb+xufagtRad3vVax4YvwGmD9cyC6s4pvtz4yk6
PvXzqg0HxfRRGr3qgTtejFZ51XgLX8CNOK4aixxfLLTPvbxurVwJTO/L8R06
lOU4GRldnz//Mu+cDGe67U9/4u+OYwdEZ8y4Pm/e7c8+I25xme/h3Fy8WL6H
A2MhL7Ag0FGWf8X3DSfKMV7uQb8MCLj20UfMnP7pT+zUx7xFME3JLuHPI6IF
tL/mScQaz8H8AVwfrkUHpOokKnTXiOYdBgaDovlIjWveUOUlvmlHownws9sj
ky84e7eu3+q93JzSinFDSOqbpCRKsbLacQSOzYEFe8tmf6TAdMmf6sN1I4Vl
VmZVyHtY5NZeh9PHMmh8Cy0DiuMLL8hR/Nbjb4Q3zr85MJqrxaLpSfr2hOUo
3nX3JZypg8Hluzzz2ZGPyGoliutrQ/E0teQnHZH9BJ/tDPxjpc/FZfSWAtNP
TZ7pO2e11xbnWhMbwnQ4jDduPaPJgg2wDChxiaoh0wRwz47KL3IPy9toVjJ+
BsBd7qXTs8rq2fKRviGG86dj2sWt1nhh1Y9EVuDhsgpaWq8+a+v+vF2WvHXI
OclruUWwhV99/WU5oit8crqvY0Q1S+os7FT65H06wrnnHELp1gCpbHLgwh3p
499W1PfpufVUjvBA7AFC4M+//qs2C091mTQiuW1wOUglhJ9R2SVH8l9+/T21
vAuOOThcxdm7vaozTSzLu/XKM3ztYHAZwQAea4A9TGWs20DjSh6nCRmwVLJr
rgpk0IbP+lpeHz8gbhv9Idym3uqKWkZYTVG5bQK3tVXNNfqDmK3cQdbt75Fr
2HMepgXByRtV1OjQHCMX86Utf1lfDc2HvQGaa5uzFRzNj3A019zT2GBQNB+j
xUM3HBDPx8k8dFatnmQ0SN+OaRfGjr0wahTLxNLVbTcwYJvGPDH5HHfGCWFZ
LvOsWbdWrOgxNb2/deszR0dcAjhN54nu8A6+lBTNInpSzbz+NZTw9MNVz/eU
d1WmPVy2j/xdRsaV2bPZHZYuFd76zUWLrr73HpgH6MX9nTvxmf/95z8TOhtj
+A3+UYctg+o27BJf0FaVXYblohKJxrq62veOWeUmRS4yPg/2g+FOoZn+//7/
zhsvvOPrQfjbrj2Xx1cZUu87UmgVUEL/niKvg/e0ueP7qhpFrjIkdt3OMcQm
6JbHYYUbfsrhiPehqLzE8nstlxhYKfO/RAXXNHmFJcUe5EwugYfBaWcHsA3X
HnwlMn/wYYxOIIFPQsNGx8ztbrnReR34pxKvud6NhURgPgNTm6ta72vzsh+/
+IHWNdhDRuUVUPE3QmfJI1NFPJTVj7gMxili3bhGSFjRZpuENXujDu0N9N/s
cGzueniPwOHmPVZ1flFR/uk/Xboiok3jNeZlXA6Pj4gsSS+7ODAUj5GQmLpv
Uqz7q4efK6z1hdSTnbPfxWJ4ee9p7xvXraCTa1//5b9j1urOP1R3r/2TGy/d
fkGjmAh+Ck0dOKFKjsXV51gbZrnnzXn52AHi55jBC7dfaEfnyb2yDB4B03m1
3b6JZ4Azaw6lHwgqC0k/eyyjxe5YRVRue37djRNFF0TwW+RBUyUJbTYeYkqv
7BJ1lNRwmOdcDYWiXbnfq82mG6tQRNh0CAMikdv3aQNi79A/hL3kR2Kw5ISq
fOZhwmf+9bf/0Ai8UpxEC/IaEPJiReHSIpI1IM4O0YKzwxU4a/gGOKvtXK2e
Gs6OfAOcNdaCs0s5znr195r79UnWGxRnOY8ywPqkTsqS1zxwL68Jal7zQP2x
RBzc8OL48Szvedo04ByQo8PIiL8+EbALl/rS1Kk3Pv305pIl9zZtYo2ehg8H
KAN2Hpmb39u6FS+eHzZMG+AaacFbjq+yfDPR0UXjJjSAH19+bMN8mJ9qa7+K
ifniyBHAMuAXg6C7KrxmQ0LaL7LzkuLK89Nq/vHb/5ymkt3zls6i2JPAqkCH
qJPbrS+s36w6+6T0hY2EL4zv9kXLSap9e9WiX7Ymb9hYeMMpZZePnDhtc7Qs
PPscgJgqp1OEs53nWSuOBoFm3N2wAQTj8YEDd1avJiVpmvE2AOKmq6c85C1P
opbOFWupC6ysaDgCb1N+jdweeMXVOYRV9bMH2j1jneFYkvi4uW+RX+KZkqZb
wFZyp9VyxUarWwWsKs+YerhCYpkShJJLzHF1uBxzIUcYZ+ujZTZB5TDLsE70
+dGvZZUhZYjLV5rG3eUBYtWsJIN8G/u1LFp+yc4FE6DedR6e9YMHr4R0DoeV
2rum7LeMdN7qGjfz04KFa1os7L6Ik7zpSRIKkw3r23Gm07nw0zPmrY7a7wP/
WG7B+dhmDXrWCdALydz//Hspzq/ylW2P5AWGnLS1ifKyPoYhJC3YAOe3dska
WrMig5lO11Gc2z6M1UqwPVaec+oaYS7X9THaMBeECoSs7OwdhR1nqE8Ms1eV
vq2xhB5guPjMLUywqffJnR556+0zQE9dI0+JuDe84Iicc+dvfCFOzUrRlsLT
Nx3Dq45ltgiLDy1rufq0D2XpFGXf3vKbZBvJq1hABBAExAGhkJ2fNSDejngz
vMUrmKq+HvX9Y9RDCW+f9f7U8/x7LT2XR8hXVWhmi31YleZdo8G7xWg7zzVU
gbVD3wBrtVV8Uq9eOOYNZkJbJsAijrVuA/i0uoNiLc+aYtUBYXph1QFAzMoP
3A2Nahz/uagIbmBvbGwfsuLGAlkNgKyXJ0+GH8t6tajqEjI4xZq7u3HjQzOz
26tWwdq3Gxpenj799urV93ftAq7eXrOGNcccMYI6u9xZuxZ/4EZyjL02b95X
sbEwGsO0YCz3KCdSHtrA6V1fHD789NChb5KSenbt6po58/LUqRKm8vqFunCx
dfTxIgGwhopM8g7TTDsI3RWe6wjhuVYOHRM+41PnTc5eW5yLzJ3vh0WJXW8W
dSab2Ie2yvxqg4HQVhl7HqAfMfW+IC4eGFYMSvA4vA98U5ZsS121B5IH07m+
YIHGzWZFffx+PWiGaEFh8lmef/1X8pHkVsHMp5B27Mhgwirk1V2DJyzgVnsc
mqKiGrtsyUFYdR5dMzfvqwYOBxsP0PP5nz1i6mDS38zn1VYTXVV/SleGxHXn
H4Ar4PcgSEzdJuVQzCU9DbegLp6gdjGh+c62UTZ7g4BpAR9vhuNcstEUjvPz
iOissOwLlc10LG/gwww8/iL2mWWITDOrdjJJq9Xn8z5FjtExCTVmLukHbaIO
7A/z2eJ0ZOm+yOkL9m9wy9pocSko6n5SOphD05mrA1e10rbvrOH1sdq94qya
bnBPVlvZt8g2uBzPXdhwM+dUNx2BwnTxNWLYrpbiRfvoYle5po0l7pO3XNhw
g7UliK7Vtj3NvztSXmWRqkkllVw082UHdr3j6+W4MVWB05R9oI4OBfXXc2q6
6RwaYYGoRKzAiLcHnDGqRy7HabBR77h6jX4xEZf+GD2EqhCD0p9qv6/0hrkf
OYriym+a3TF47NlAy1ozVuD0yDfAadF1R70OMZv5tP6Vw8a+KWvSMA+8JYyO
M/cEqPObwi8eAKSn9PeH8RXuzw6I0WM1er/wqQBv3e+9R2isz/KpR40CRgOg
xYkkQLQ4kTRcnEj6raenz4YYGQGRry9cePuzz/AFXZZGxvxgqrVBW8vaItDK
DjnaPOQZ2nD72ocf4vsAZJAIeIc9JiagDHIvmB1WHj0aD0jA/sLPj6XDT5pE
Cd8UxWdsE4qKmVOdzlNi9mCZX4ZPT7eUZdUGHa8UWsPjFkPlVSRJ+y5Mn3H5
7JV/DanpTKW8dsbVOXPYOGe/k7V0i+Oqg7FLdjQYGBNAF9j5FR+OlnaOlVX8
ddVwmq+Q8XKcBuDdftIXmhWMPa6w0y6k4mQDC0TW8+gm7ERgciNHLyN80j+5
0S+psR8ucznPEDYaeA736Nbjb3Nrr1sHlsJuOkfWUGmbvNputrN78TF+w5go
IDep5BJcXiq90Ye4o7VYASPNPi/AXCAtHESYbNxIJW+qNET7ubgP3BzQEXg6
hAKwavh2d0+vtJ/LtWUi+cSpHtHVB9y1HbHqt2TUYHeUhLrGCtTVVUNd4wFt
OP/8bBFRppJyIih1Yf3mMKeoR8npj5s6nt1+DDuFwUTltmmMZkNg4D6QDAEy
K/zAi/+L2IaxFtzlEhyN70IPPHkxvqDU5v3+xXuPFG5zy8F024dW7PYqgFh3
eeYfOXEaE62y2O8q8rVey46gaksF80logP5UnWO4cffZ91BK3E6UWR3Y5Eu1
6PswlrOe4WSxU8ouHwqtDEhpxH3Ubbs2jJ09OMaOE3s9bxKE/v6vvyqqOxpn
Vl2lBjaxJ8/LQXaYyv+Q9m5pf+EN0XawXDwN68tQgbJj3wBlqTapOsr2aqjO
OeENMFbbPMzjGLuPv/vll18e8Q1Yu2EzfvAH/km9jtQ7iP9QXDzIjm/96QYL
q4O40I7dpumZWf/4B/GGEXKveYDWq+TVTZDnbwGZAMXXPv64a/p03LNOR8d+
3MTlb81ePH3m1qkzYvX1u3lslzUbGD++Z88e3u3mVw3d1fr2w+BMw1m9OHFi
9/vvUxr3eaD09On4++LYsQw3581TADLFFR49euTg7EaSclu24nFJibbINde1
iRpwmfvK8PyvzJ6Nx4DXeG3+fNZix9j4jI6O+9hxaz/4aNm7H+xa/lm8mfnX
OTl8JEMhGZFG9nNTk+JcFjF5eS+15gBWiwr+DTmpJ3V0rD/8GJdd/sHHDhs2
X/D2Fm60vLqkXN/4bI7WmIOdG1NYNfsj72MlJnZHV67fufC9j1as2uTmG9bR
/USJyHw2xwtEvrt+PUUnqAkDTShmTfjLf+04D7yV14Hm3uPIv//97zFxJzZv
3Qm5H7RzvHT5ssDq1/3D2jzSpaFirENYlU1gKSsv7F0ARDue3w6clnxlnWHU
Zq3s7J2soobd+6w/WbJq9fqt4ZHRP/74I5kLWrvTNcalbbjp3+qajUsEpTV7
HK/bd0RKBhdecOOFHkhow5adK1Zv2GdhXVRS+u+/swHgQSerrEdzF4tCOoRX
AXThbGnweE9Wt1nauujoLlq+RseAVmpfBJs/4bTewTKtYKNwcRGvFjUl1Rcu
JXERho8fOAv86xMneiMiCE7V0XuYhN6a5lFgOT4jx3GKWAKpn7d0VvtExdgF
2271cF++P3zGp+VL1nev26jOlmcKncAyxdUXL1+7fvN2msXXmlor2IZUAGJZ
U/bg8uMn2aYtYCO1/DKQTYN/ra2rKp0lhrwgNcgOI4McMcH/+Z//Sc81UcQw
RbIA9CKjsiuhqBMcAMoCxbE7VgEOQNTQgzfEDc9u7b8LPVSB/gJYyH7r4s46
04VWpJRfxu+r93vhP1v4FblE1pAuaPS9B8akkTLL/umyNdt27iEF0RZrpRPr
A+OSluqThuoaMnFAxjBUZZcVE05dhQYmEPDEz9/4AhxddL+LyGkD3yPi1Oeb
E6ckQ6CYZwiF32naoCzi4u1XvAeIBv7wWmNvJZEDIJ9kHT7LejTLHKS5zzNo
pRKFgWc7CUo2oasFv0f/l84mr8+lwzsw6F24cGn/AecTufU6utXtD3X08Bf+
jVelGhDyru/wWx9bW8OH1bYHPhHrLTDomPfR2LyaS7hcSePN4Njcg/bOv/zy
y2t+WlNEBHBR7dXE5HEAUA8dPaA02/WePp1823Hnhw5t19enspZdIEZz5+IT
z5yc2jw89mzZGZ5UXN5yF/fPqjjv4h0SdzyWdYHfto3t5nMLMlZUs6Yy0tTV
oUNfv8PAoHP06AsjWeXIK3Pm4KJyE0fR7tz8ggOOXuml5ySJRaWWW9g4PHjw
QGvGmnqlE4CwaOnHcHjqVGAyBtLOX4HvrzmffMzPf/kLpBkckwPJ4uaQsn9E
qou7N1SEuMmtlStf+PnJiYmUy/VHowU/nOvIT6tJzTzT3NJOCqLUDz0trEVk
NP4rMf8hP926Y79wsUYNIs9nFDGZlwEBt5YupUQkyPriuHHsjzFjbi5d2i8f
nfJSFVk8GcUNO0wt5Wri7B2yz9YbTy/nMcaaeIx3XD2Awf34KfiNwWln4RwG
Jjc6hler4v2GxY2sn51HTK1v4hl456oOcUNwQUunAKgOboeb4tbQnD0WtsfT
K4mjzVYwG0CTQ1ilfWgl7hSY3IQVD+vofrzONfqU4DS5tdfxEE4RVRB/8Zmb
MAm0ewBxMUWJzZUryubd1r3f/XWM5oiDiukYk2kubAAKd2F0eA0wqfKwlPZC
H3/ts3bwjchUnUx54zxzkV8s9gu++/GXneYOirnfvseq42oPSWisNgZE+3P3
d+5kq8rISMF96E6tTk5qtiHYe+EiLGw56SGkGa8tPiF3SdRz8WQnnjTPt9xS
TFbwGHH4XZEsEJ3fEcZ79WKmQUtZaeuMFjkt0ra7QP2rNaoC2QwiRdCzuo4e
gkRcWexAtMtqsYyQ71HwjmDFYDP2YVV7jxRC//NP35Ci3bQTK2dJv//HP6Ee
UBKVDTEWOvO//vmf8mVJTO1NztPdeswCP2cuPNK+mz0EWOTpdUSzJdHmkXMt
G6kNZ9k+yqOv5Z+n0T5//tzC2k6BOicSk6cMyJoolk9ooq4i5LVp406YMtBk
6jRy+EQDnCnP2Dr8PhRaCeJMlInyw7F2sILksw+JAKMZM+bIMGkA1pRV051R
dUV+Y+JLcg4tPxOrDyPQf65leMEZwtQBWNLzr/8qoKT63D34gxSEGmAix/+X
zhfPOtEx5XYO9BUTgQ/o6LNxjMRf1nYu37x6RdGYS7x94fX580W2df/dD72K
ymrf0ERuItmvccknmxz3W7HOZ1Om3Nu6FQRAQXyI8nyTlATC88jS8trHH8Pm
XJowQcJnqsXG/tQFT9DRv7l4MT4IyqO1jz3EZn3QHjLTMWBPMN7ZPbAyIIA+
gpv9pbT0sY3N5RkzcGXQHvxu19UlRnJ52jSWkhEcLJgP7c6A4UNXxZimnay/
amPn9GV1tYLvvFadsHsVGoqHBE5fmT2b+BqlB9LfQGvcBqRSe6Y9nZwC04Ya
ifsahZ446TV3HpV57eM5/9KuiOwEHZ1cu3rr0bY91mLejWner995pCkL9b8g
s8FIaMuxBDFCPWiLu+dhMZcjabMNsrz20UcXx49v543FWDHV4cOvzZ8vOlvh
Y6NVHgtuFpLetH2PpdAAfUfPoAPeMcRt+HXHCftCG8sO4VXwhA/ylj7OEdXm
tPPM16HG03RGipyJS1duQEHobnqkHfA+dBRncmG2E4o7j2W26Fr4FesYWR8t
g+NtE1RuFVgKdgP7pS1LX1btDh6iV1ydiYU9YyJ0P2hFYlKKkOkfzCOkTDqF
C3j97hMyAjQr+MPK1uW7776T8jHflOnQCVliOjbuoT7HEgwUszxWe3zn2ty5
3e+9x3wDAwM4CQ/27ZNXdRSLnGbYyT0wZdo0IjJ6qujNoDyGsR7KEtOGVbTy
+T2MaV6v3/9CwTb4FSapR3jceJMogJNDWJVb9CnW/TmW7bi0XnmGL7ZefSa/
jtdhPzGjQzGju609wDbAuQ8ElYNk40KCmPCISF92Y3Reh0tUtYlXAXR3l0ce
1De1/HLL1ae9qhP2h4+XgW2LlW2Av/ZZOXhFFjXIOruOG4B9AG4zKq+A20fk
tOGJFKkQUl3TopJS0Ks+W4U5dnH3UlZu1YZbBfU3sk/15Un0PP9ONrt6QCl4
7zzU8aazJVuFY7UwCkjKP+kMfAyvuHqs+D2HT5r5Flv4FmOULV1PqTwOWWC6
IoaHQXLhc36pkT+4Ha8VcTSbo2WgiIrsFba0rO3FbOiRnWVri8diNdd9hTuF
34EpTbgeXBMLx0A8jHItTdYq2345KFplO1XGAgpOFvpFpHN14boPzmA/dgLt
T9xYuFBgPq9io7d5605iFNKn9++1ydLVxaLt/vDD6/PmYSVfnjwZCKjPM/kp
0xDIBM8Flv1VeLgSx+nkXWdnp8vhUHHVEZjRzfM/vTByZPuf/tT2pz+185Pr
rC/uO+/gMl+dOCGtaOIhEApEI7492vVI2Im3376zdu3ttWuvzplzeepU6ntF
v2vHTq56/5OTSzeCGnwZFqYhf5DyBTFPZlaH2AUNufTWzF90fefO3oiIP4y6
4zTJ2RBy3mbmDBKIBfyv4eoYTTOib2PrWrVqFcbdOWwYnacAC8MswHP83MuL
EJTk1tbe4SST+hiQxN37rIvP3Iop6MBa2R9Qstk5e493wRbnbFg0KCOUtOzs
nX4YycemTxi5cYdFeuk5Lq0xbr6R4fHZIPDw6nGt7W6521xzdnnm73DPBQzC
yQerp66LffhHcsL6Ti1q3rbHSseIP9rmbSZPX3z3phhHz0MYZ+18FBLnzzMC
0vYJCB0cx6jzHSX8q06K6+it37xdLmM9mB4YIA4GKgT6Pi9PABsr6z90KKls
Gy/1lPr++87eIaRJIyDn/bv2DI5XogufJB8DVTRKWMT1281VEtd39YnwPJog
2/sfKcepxNJLmD2QEcwBfmNKDwaXAXBsfLIgapL0wuUbdrhkkkfLVI1bmaFk
+GCWYOxg5qAS+PKBoLId+z2OHs+mtQHphkUe566tyjLdfvItUC08+1xYJtto
C0huArABHsG8rAJLrAJK/JIaVq7dzO+sZ37Q7Xh6JUMNqhiJZ6ZEc5ZFx5rV
GwlD5xlT7x5Tu83mqKOXJE89yPOgnaOYDeah0aaDqJWiRWZ60NLW1ta+eey6
+6VbNGu8AgSEJT+exxjY3sMn+eG7tDWH0peZhQvN1Nu4ZQe4Sd+34Yth1AIl
gNaWAcWAG6D1DrccM5/C5dvsIDIdIbOYuBPsi9NV8QQ5GgBdnMIqFixZY6TQ
OPq03PZjfXmoRELXxgAdnN2Ulr7PxzBQyc1iyw4WQZytyeKNcPU+FjVsGGw4
a1y/di1s+Mvg4CcZOfcb2l48/5r0SuiJzL7xbxus/uiTy4sWAT7+1tYmcmj0
SCefqLqIy6wZ1xy9HbtNyYunZxwSEp/vOmESw5dVa1utHGpcj9Zln4qLKYvN
a4PhhxXQgxj6XaGrq8vJK7jPbluYHaxeskSTXZ6hSSpDIZW1W0yFO9B27fml
2y/O3/iCWgGRTU4qvUSpoxRfYPXVhIOnsT+wumwPhybMmfP4wIE/FxVhBoiy
ECUjCwU0ZzaN6uqQ6yWMJSbfQJPMjT5dscE5vALmG0a848bn1PSVJK0vUrhU
dRf1f/n193JuzjV0/NXThC0jMBuf7ThEuS64xY1HX+MW1x58JbgWBMN2sSdr
mgmDfdZOgXHFGuy1MS5HoS96k8wxRqmnaYYMMUMbtpvJzTZ1zsCUEJHVVriL
JkFavcq1H3QkbdsKx32LrNwX74vYbJdl63cpKOrp6RYy7IDOkPkLIGwJldYt
Wfk0NLTPVnOLOwSWg26voTob6cGGzTv6IQkkmpSSxqeDzzQhj/C2ody0Q13R
chdmGys9JKMFki9rvtPLOy32qhocmzpGHHI/Ko1tv63r8+fPxVX1SL1ETRc9
OgIv9HeENvm/5jm3rd3PCNp1lNaF5hmCplHT+TsjXCqlnDX7qmm7X3XuflBC
xVYTKy1Sxw3X2WcAVEAM4Jeb+xXB9uXVXadQ648//z00OlFIXW/LDpN//OMf
fd8Wd5bvo5PIaX2SuKXn7pM1fRvjWmGTvNgiYZl10rpD6Vtcsq1YZsXZ1PKu
5q6nRQ03PYJT7NwDVTI94CzthRLG4Qb2oVUbHNjDw7/H1CSXXypvvtN9r5dQ
AJC5Zss+gTV9UqO7Y05IT9P6H1wnVcXvKzd6TMwPapabMZYbbZDQCQlJXFIN
Xza//eS2dsNmab6nyPAgPDI6KrW8TxexyDwdXXgiEH7R3ELcELpYw4b2bgFH
wjLgT9mFVADKNzpm6q2zT9fRX22buswqabl18pmLj+ibjY2N7v7H+66Oedi0
dSdf99yGUryVKYw+t+MYiPSMfIR6gHQKGUvfx2gCQuPgY+voQlF0jIHJkDz9
4DFWHkjBb4iF7n737l07F98+FDDdb5de3Ayd1NHFL33cnN22jjjJ894fJ2uS
CNv5cfU4Ah3F5435U9JJUvZh2imFFyDFLLnHY0BJv/h5mZkJwZH8mdTcgtMc
Qqt2e+bvdMvbxKR2CFJbdZBJbY1d2sXbL0eoVirtiOgY8F+UCgrZFJZUQpw0
Gn1A5Katu/Lrr8NJNMYYdPTgR5DiSHuh0M5DxyogFB1d9ksfsiFR7fTI04Wu
YraLLuwwMYOnJc0s5OvhHxkAkhdUDrq/yyNPD0SPfxNXwJNWtd7VLNt9lnan
mtnK49ZFn82uPhliDEV1KlCP9J0NypBPehA/SeQbeAwSN1Tpn4OLl+o6OnpU
gJpdTnB+Vp+jn/yhT/Kr6uGOV+5+vmW7JHk9SD63uE5c04C8d/phSqCr4BAk
vVff/bx8W9CiTYE6BvzXynVHVq31Nt/sFXI4RMwCNPYm6EqfHcQKlJ7FiF8V
N9xtai4kzDQ4MSUTc8nHQ5+h2EPfnTGJ8JXYlBnwX2RfLANKY9LLbF18JPQB
ijV2XKNRsLImNHagj/xajAfXtj/AYjHzKTJkWsIWWmr5ZVevACHz2Kwab59A
Bv6M6FM9ZjwTbGhC0QXTwyfBYHX4d/V8ExtKTl/ZvnufSrLuAacaWvmGNucO
fZhC9Q2Jzz5+8cM2txwjroPQIefI6oj4TIhQKUFi7kA/WE3W1NC/mJ7YIawS
RHznHqaoQoqgPezj41VPS4jZ1v35Z7iN4bw9sToGC/bGfbIvfu2hdL/oPCir
9My791pSmoZ0xvJEUec801h8AT/4ho4evqNj8KnFiaVWSeZ+xQedD0NQOkJS
R4ND+2Yb89hP8yD9ps57/eRz48aNPnuGsZHXKek/NBXKmJlbrEEactauiI3o
HwlJOFlQBK4J59KYRx5APftZTjsbO4CNiM+xKKC5tf3N+0+cIqoW70/QMWIS
0ltxIPnrP/fJQg+EwcrOTdzHAKvRw9u3sOEG/D54bDp6MAo6BvAAMS/0c/fJ
t8RPDShvlH7YHoc+Y9oGFCEB846LjA49cVKyM/Bkbty8Aw8gNKMF5nC1bRrX
dKP19ulu0ac0+fRUF5qSk+mHNYLTMSTKiZ/Wrke7TM0xTHpyqAoUJrPqyibH
rEUWJ3T0Flkk6BgusUyEraUfIJd0IlqP6y75bEorAVZUXn0awpf4KyRfVFL+
mp9hZPF7Po8GPoln+kUQ6MQeJALiyMMvHBduLV8OFom3wAEYkyImi0e2sHG4
+/C5V2z9Mqvk+XvjuPbqrzyQXNPWAz4gsskxerCiPlyA9tAmx517D6zsXKUn
hLYGhYTD4waXWWWbRiM3XmopDXvJ/kSP43WCktKVL9z8HPLvsziA8+P5HT//
+ntiUoqYNQPM2pnWi4GpzVtds1dYJ+voLmZXXry/T6YbnTJbrzyjJPaJKu5A
06Ij5mXXHnOKVLP4lrCScrthIM8QCUprlqQMeVMi6enGs2JG2Fqoqq6hLX4j
lf2Xn9MzpqtR5j55y3GFnYB8LkVD2E5Ig4CTJsZAtWIwL99//2eoIEv1N1Iw
FNqpAe+nAp1wFBoOuJ3YZLNt82EdQ44Ya3aFhoYWQIq0rPrmxycghGLuQDc+
eB0Dkhn9iJjTEHn0JrPqKsCKjujANAJysRYNDwSVe8bWYTy44PG4BEyWfK5o
nBa+xTq6bOUaAgTEyg3NbIW55vMv7SGdufDIObJmhY2kBYawnAHJTSBGv/37
7zt2m8nXlqnZfloD4CaS7XOJqoGHLPrS9M1hUslFXEnHkGvWVtcc25AKzMLp
hkYP/6i+OSwtq8SrmDrOsQww5teqPFrhs+gLNoAJ4aitj/unlF028y2GQupz
G4J7Uet1OvltYXWwb2eQ5rTnyQtcgrgcdBBS4HW2eRKIsAJY/oJx6AOyeFHn
ul2eeSSbTU5ZnjG13T29rHAXn16y35hdEEgmgNEqi99vBMIDB3U1VF3JMqAE
goYW0nIzVER7qBOhwDiIRl6DhAL/rpFs9ykghQVaXSJrHMOr1h5K+3hPrD6z
JUaANNjYY5ktuIiYTIlTQzqQEbsF98ONSBcu3X4JjhyR0+YaWbOAASK7jiGA
EuqB2+ETZ1taMIH0rLQG2de5D2xAdhoLp+78Q/vQSrJXhpA1JpCW5l4La7En
QbPy448/SpXqxX5jfGGnoSrKi4mBqOWWThY9I6ykTE+sYYm/6/HdieSTTYcc
XZ+++gGrJ+NkW4Gd38lRU5r0DPVV5yql9UxRCPlxT7z35f374FkAZdolx4Ar
KqsxCOhWQslFE+8CYAuEosekM+TjPTEQulVgKaAlpqADH6Ok1b64NuY3IDKj
79mwkmjkUECYcowVXuQm52yuycafHUzFP9XTw+lk2lN7e8nrIHSh6kp///vf
beyc4DQR7g+BOh2PiYdqhfHG0CdP3/RPOgPzgXWoo8fXy27PAjxp8+WnV+99
qSHCbiRH45arT/EaI2WGqhml2qtQBlsXP0wkjQsCs7R1vXOXHdP3iKnb6Jj1
qXnCx6akjQZQSxOvfOr/qepzrqOHZ5RzKWbt6VgGTag0HvlsiuhKSeNtViyA
xwLHROW2awvx3+55db+h7cucfDr7x9rOGxuzBFQDrgtgKVS7qF+8DmPRkc8+
qcuz3p+wzJbbpGBp8dkfi1Ftc82Jym0LyWiJzG0XdQkokwtiuiorVESTejy/
nfu9rB5T4embsL+UHQ61IU2hMTMtsbbDzEJLys7egd0HxwVBncfYKr/3/H3x
3nH12pr14MYUnwOEgMEDBA6yhjPpXMuYgwc3sG9nV6FBxngMaBAZY6g9yB98
1YVm8Xwuh4ECsIBU+lmYCs0nx8kOCgXRUdcQPGvF2bsZlVfcjp/i8hh+KLQS
z9quKqj6WlPjEl4fQl9EP+DT8PkfgkcoOnOLBkziwIPIdUiPdIhlhumqfDaa
EopCjPFLasQIYAEv3X4hZw14TvJniReyRHu+vh+//IsUhyZGxvL49TVpkJFc
gyh3hbdwYd8dCzsZkXMOd7rZdf/luQugFCDQ5w66VG8wSVqwwefdNQ4rbXZs
89toEmqyP2qzVZyNe6bJvlA9xjT0F28N3mUVU1RxQdXBR6Olsbb78usfwrPP
2YdV7TlcANPiGFHNLfMYLI/Xmk6taCysmFB8YY1dOlmPIbAjPJ+FLVwqJzCI
/jhHVOPmq+1SufaN3eSU6ZPQQDehibza00tnnata72KNQCyAczOfQiwum6By
kIcVNsnSvV1yQA4bLz3BF3Fl3P5MU7Ncy/RIywCjUiwbw6NwIc3XcMqzwChp
qWKIV+/3YtbvPvtem55Z+BXzuxsAUPFgjuHVdFhd0iUomhSn5k9gJHQN74JJ
QXYHgsqIjenj61v4Ttp2txyKQZCkRV6QPtF0ghDKtr14+xUxdTjSbB+V4wOe
nsf4ZT6cBp3D3ICg8aTWEokPbnfLpSeAi0+rl8flhkOUQP/c2ut5tdexsCgx
QW5JncKrKaYETwFXyj99Q7XPptQ8PWG9pJr1f6C2uIHYF/79P/65zj6D4lhD
YbpMD58Ew8PMtKsOJwu146PWD4hM9w0MlbElfTlb4tJ+i6SdVHIpv/4axhpb
cD6zmnFsnuheBc7HO07Xwr5ZBZTgGzs88j9WhQmWWibu9MzFVzSqn9A+zATm
g+JUo4hZYdHDRwKqwpGy4se4SbkhRii3a9QpAOZy6ySy7PqAlw0OmclllyBf
PU0aJrNm/HzOcMG9yP7RdgQxCAA7bg2iTpYSD13X0QM7h0fHxyCOBw8ey3VH
T+gOXXvYwJlgUBayZcaFDTdx2XZVfWw8jAzPZBoxrS/GoQ/XuCc29mhwKIiv
rufReFhE9wB3z8Otl1gqEWRHKuIccNJyq7ftfJOA2StPTJ5bNGJi55Sp3R98
AMr217q6/+fnn2lfC07ZtxkZ4EQgcZSHwg7G/O1vQP7O6mrc3s03kt/FwNTi
AOX54D8oC0UDxwMkl1gmwhmfaxLzEX72xO70yIM++Cc1OkVUwQtzjT7lFn3K
KaIGNIBQXpC94Sq+Xtt+D+Pef8CZ30kfPqulzaG2C91sr43zZOg3JoEoFdYi
6ffIrS7ZijJ52grx6KriDHRSieLPepAG9X/o4zHQECevYB3+HCz6EhYe9TIu
DmwHolWth5FAhD3eBdvccjc6ZoJ77g8ohlXBwAj38Bt/4xUMTFfmKQjOCAYA
NaYxGFCsGU5OcNrZtmvPybti29bwE8wsbd39j+NRMAeYiWvXrhEcYpRY1Bud
sj81P/GxSezc3cdJ+JgFGE08pk/CGc/YeuiBvEsKZZbi0ST2qKfy6+RdAfR+
+eUXUi1JBqRbFAgk3eLfMwCTCUptPhhcQccP6NvjKLYFx+CC7zHgccLc1cHv
rfbf7OBgEWxrGxMXU5Zb0sG41q1n0Ef4FqCVL3x92Z4gnfPCEEnl6O56QueI
J0zHYrEJKvvsQCpGjmUPK7PVJQvaFpDcCO8eQoGSuUbX2B1jWAjbZ+FfAnPh
EF4FfSB+iRVo7lsIasgsY3gVtJPPqSGkRoFtGAiZLuqRLrI8NKrmD1mGZrbA
GGH2llgmwMIxO7cvDlwI5g2z3vP8e1yorPkOptk+tEp3i0u2znDWEdg6GZbZ
3Jc1dC9tur3LIxf4jIvgUlk13aJePLNHl++QGtIT4FHwQIKFTYUCAH/x0MC0
dQ4ZTBI8LHsgqFyuhvGFFzIquwobbpQ33xmghALHmuFQDyhmUUm5NpXD2Lic
xsJ/BrLjoXm8u8T2WPmZi49h3iF7KDFGiOUJIIBHCpYuKvTTucnQjBZwILtj
FcBWr7h60kDmG9FGkVA9GrfQPJp71q0PjAO6tpdPHsAYMAA83svP6oJfgTEd
y2ytPncPPF7K+cUDUK4mRa6k7OpBtGz8v3/zbUtJo5dnqq0Nq01mss038tOt
LnO3Waxx3Lg9cOmu8GV7ordYx+1ySN3pnOUSVQ3lgpMmP3vjstUNfHPFrvAD
bhldd1+K7ohCuejOk0i7rtzowbRjDgAuWMCA7WXWSSsPpK46mAaPcL1Dxt7D
J714USuNpbul/k4///o7PGLCfLAtabcGY++lGu0abZxSu94S2oWJNvcrWnMo
HToK3Q1MbSTrFZLWDE3bxJ8L7tWS/YmYdAvfouCMszVtrPoOmeSyptsURF3L
C3Hjany2h+Li0HVoaXlFlbqy8ZFM//nfficnH6sT5uUiR8i8WpYsaulfQoqH
9U25cfn118FFH734AVyUAg6bnLPwzBscMuC+4wpp/EQ/1YLruP55XnXngUMu
No4+hJ2W9oc37rK08smlCAIJOCa/wy26di/fWsED4PlBcnBlXB8ahYniq2aY
yJTae+Qk33iSGrIIuiX11Psfv/0vPGVead0OU0vnI+EkeYN1W/fZuAaTMRYZ
jGPhduA6uDVtHsD/B4Z68KOF6uxSBNLp9AEkb+5XDMnA+Lezg1b/20CFsA0X
emRWzVDoHSCnt69a7xtWyKfT9XQ4EhPlHV+/gtsxLG7SOv30yiuPX/wgY5V6
URm167aZH3AJkEa/YaeVqY1XMu88B52ge0yHh8gK+Fx9BvolNRfktAzjhu+N
v/E7KreNZSlH1ghfRJ7EAMsOn3u5dcoWlyzIT8XhBtE7Lqfpgne282acuAv8
a1zQOrCE5sTCtxg3hW+SX3edH4i8DE2hCcHTQhorbVJgjMF5TbwLcAVckKw6
bG1T522YMxg14jhyzkadfgfmo5Q+xrJIyZZiTjE8rFAPdhi0kfikIXex/omx
nmnpkHE3mYWjurtvelKB7oWhUgIkFBs4J9ltQkw13ZIhJp2fMuHWm6qKXZo8
GcwTL8DVrC4pKUtNpW0/ykaCrr387mex0zzCwSPdfI3T3sXW+IE1/uHBEzCL
R1ZWuIqcyEpWHe9JcT4epTKiZGw6D0R+T2srrlxbW8tPc0nRTL5Cp2PEtBCh
L7u98hdbJIBafLjruGN4Za+qbS5MCR4NCphQ3BmZ0+YQVgkYC8tuhQ06fKKB
oh1ydstlNwZ/0OYnYdyXX36JB0jLKujs7KTsHNqVxuIiMfC1wOULRAWV/uxg
SnbNVQhaW/8kfNbfPzvYwu/EeyvSx78NXiXlWFNHc4Fqw2Dju7q6avl/FDDH
nICAgft//uALZoGI2cEQUhoDcB7KRLxnBO1zayS54pAMfEB6dgMQH/y/7vwD
tTzkYym1h7yjHO0OR8Rnt1zu4XyXz8FofM6dFVItwq0X7ov/aHfMh7uiP9x9
3Dv+NC5U3/mQFTI7XgtahTnAuqO6UnKGS2fPj2W2wDgQu4U+U1hM6omAcZMA
oHai8zMl10j10N2iahyP5Oy1PbFpX9SZDTtE6BNKROdsoHD6/ddQXmK596cm
LvYxruGVGtYQVTEn9cPE4+Ysgs919i28j7EB0VbYpIBEwtzgYWBxYD42c34D
tQpOa4KCkH5BO649+AogC4GDcsDjBcIutUwCTOPzsPz4LtwuECBauQp1Iym8
S2pmF1IBvgCmscj8BFy4fb5FWOG7PPPgm2x0yjI9XADYw2forlBAoLJorlpx
9i6M3FKrJGho7Mnz8vQ98F88LqVXkMpJa44SwoQ+DqEwF/FYDARrbr19ejsv
tEurcoZGneu686UIwGvjtfSQLL3l3pdELBsbG7NyCzEDzJvmMzKG2mgCs2DY
AV6bnbIhy/l7Yz/ZFx+U1tyuqsRCvTLa5bXM5DqHS339518s/CC8MgMV45J2
Vek+pHPV1TWnGloHiJIWn7kFRwY2Pbn04htU+yY2RwaY/cn3EucILSvPynre
0ECxUTo9Vv3+J7mjpyct2HB888GjFn6790ct2xe7wiLeyicffB082juuPqHo
Ih4jp6YbECfXOZp93AEGxdouLuhEHQZCPUlIw/BfefXppy++o/p8Zr5F8A+h
SMDDZdbJLFFEl+2u60NpwCWTSi+qzlYzZARZgAqAvdOaxf2kfGHSYVIizB5u
grtJniBhNdws25ByuAJr7dIWWZyAAwx3aJ9PEZaB+3G22ytnB5AUxcUpg5M0
aoN9BjRvl1eefWglx9Ch3T29tMFKfrFCeej8pXqUHZaJ9AiWqV3Wm4ys509/
+zuuGZ51DlpCLQVhIX1OnLYMLNnsnIVv4e5pFZeJA46CkuFtnn+Wn1TC9ieS
sisPB8UfjUyiLCLoJMElWyv8DlNxQ5HPS9PF93tu4UU5cVU/Inbv2fd3n7Aa
F0RxwDOzqq/w5xiGS4EAb3DMhDuBF/JPXYbRPhqRlJCae/3uk155hzuyhCWN
t+GAr7ZNgwnH7OM2UKeMyiu4OoBVnNQTnRfxATwW8cmRhJRQAzw4q6BV3YZb
mdkfdQlI8Euow7NAGiDaoH9KPsr3xUZi0TVffgxOBj4KcWIgGVVX4Ku7RtZA
QVYdTN3qkkO9oPno3iIvihbyF1/9WFFzJj27oKKy+sKV2zQaBQEl0w6vFh4m
fOq8uuuKkLhQNNFvFwYc7g8EC+5ADG22Nu0qq6x98LSX2B9uk1J2GS4HjBPL
Hj1WAamCe+JykGRB/XVSMDBlEZOUk1CVt2MAw7Tfv8T6aKlUQVyc7yCOT/Fg
ICG3z2PVmdib0FHakwRDlLxObgON8Al8E0LDH4NwrzfmokNVWmMTVMY8DboT
Pv6890cFxZLuJDiWxER3cakAwAHmRBW/zciQdjx+PnsW/xBPJUUO8HOqjfmU
kl8DdmBrG3NosfmDmBPUX+I/Xr3SSEqJXcAAS5xUjxPTZy4u1z/5hA47MebK
pWcMBaQNJPyA9WHlAA+rWu9QpVZBQPEu1AIrCtpHoXSvuHrMSGLJxbTKrpiC
Dir6iU9WnbsHjgSGCu3B0tdTMR15f0RjkWMKQRNgESLTbvbXP/zSdb8Xt+Hd
qm4RASX+MFJUNOoyNb+eWXimqiPo7eUe72+0WOcSGFYsj7tShssLX18a8q3o
BCmZGLODp4WXxx+Fx6Bw9ws3XxzP77DwL8GqsQ+rguXAcgYHEXtm8pPcJRtN
lexyBrT0yInTZGE/O5i6GJBgGrvRMUt+qvjGo6/hZop+HClll0qbbuNWuMBm
tsWUCxen/vxDr7g6SA8PyXZgaMeAoptf5uQH2IVbbvU2+8x+39ID+MNzfxD0
gbghz/EbQ04O/TeofsOiMZ6tr4Xd43EOBpVtcsrKq+sWNnfaAFpBOlDecick
owXqhFFQJhQECUQk2qHYck+v7KK5nSAHSf+kMxscMmDOAarmvkXe8XWwv2sP
peGigPDqtp6C+hu4H65FoU+BRqz2GQg70SNBGvFp+BYUUQrPaVOe+eBaYCTi
T/SQNW097Rr6ERLmDeCTyA8hR+Scg0bgpltdsgVLxCBBeNT2yYcw05jaDCC0
4glkMNyukaegHcx+Un6RWg15tmMmFIZzmNF4FEypIplO27Y4Hpei3/gbAxAr
YvAq8pNFVp2geVdmzbL/aOfJucsyNlmesDwS5hTl5p5s65UVHHfKL/EMQNE/
uRHjAj2D1iSVXCxpuqVC5KHEavBQcj2qartHfILfcdqge99VrfdBcnCL7FNX
c2u78RaFNGkr9sGLH5Rn36lioaJa0U+//CbilxLD5TKZAKShk1/y8+qByY3g
zscyWgD98EigsUB8t+hThZyAwFkXLTwo/sFszZX7vZAGOAFUHM+2iblPeVRa
G/oNWYuYGu6hUU8UXWhf851jpif8m5MAS81dT1MrLrMyp0HlXrF1volnwA6l
7bmIasyBpX/JGrs0gDTQHdyEZV5VdYVntfICCafYXjW7li4EQogu4hQYvYgv
Smc4ITtMC3Wnw3sweRi1uW/hcuuUdYfS93gXOEXUxBZIfb9GEKFhFVHDqqg2
Oe0HgFQIxsNWpYLhDYDR3//0PyhnQBX7MJLbKEH+pA5sit3tkZlVV+GGrLNn
c0EdxWiJ1J1nfj+ZiNd8C0pX4dmTDNSy/tiqhLmDumPouvzcjV1oJf5JXgF9
BvfH2ob6POv9iT/zFDIcCgJo4lXgJhsvluAjXvEI96JcIo00UDqTTLgrdtxm
4rM1bfe945mv5x59SrixPokNmKfDJ05DDgAxVnA0pIKZ2pJLCk0jXqaR+Eln
sPFpqSs66Q1EJTb+VFqlFnGEAYPwISmwzVPc7vbKzq3rCd2T4kQVLXfJiyIq
KV3zTdkcVRDCYDBNfdc8ltkCi08WhSH7HM7bdvDPAn2/TkgAi9DRVWQkki8M
lvHA1LRvzOJ8YWBqc2BKk8Tg4Id4RFXVZtWo2MRQjQzut54e2NNrc+dK1ZaM
jG4uXsyrLfF/E1XkgM01HVKikeLHI6YWCnXtwVdksSYpVgE4D9aY3MjCEIdl
t8JrhekCA4G/RZ+kYGLDhYdBqU2SLywmEV/jkULeJo8AU/QIGo4XoSty7vZj
U7OiJhP/5CjgR4cx63vMqM1gm+iS/wBuQ2UWWTfnjz8JO1ZAKxKqCovGqhNz
uY7W2CSOIBtmds/hk9B/OWQTBv7+5AmuKzo1ziKuRyc6sQxB6j4xi4eawsOj
hEsQXdhx+ATUUPjVd3/Lqr56ILhsL++NjBu0dD2lHAt83cy3OCC5SR6/4Xcd
I/atFQmPUIZXJxKS4spdQ8spOgzSIO3t8NOBo4S+l529A1cezhZuDJuKwe07
UqjYHOzLrpLn3Y/SqCE5Nd1mvoVYjUBNaAXIPFRKxMbmkP0kKAxKa6b0MsAM
GBbwFreG1BOLOwF/pY1gt10AwX0+hbhQdH4H4bl6tTtcE2/RJpqc1OmrLDaF
aGkljaQEPiI42jIqyW7TqMm7YJ0npbqoav21DFUMQ8HqYKJhFg/ybHyMMr/u
RkIxM+xQCYx7yf5EkHbWzyO1Ge6COFfxmhchZ2BN+ol1KfnBI1Q87tHLH6Cy
W1yydZdYJukMXWqZtMMtD+Lz4POg4Gi8pss0fL/7wu2yrNoo/3RbmyhfM7/j
mw9mzFtdNGJi9fufVG8wybPySvWIxrueAXnOQcWQOKwBcPd4fjtUAWRSuaq4
JRxDZr269X5C8QWniGrwAcwk2OfBYI4BGvd9+QoZI7cJ4dnn8B2oKds5OJAC
siRaSsjnWkeXES8DRcEmCUmhmrgShq2KXk3UWHVwl0eeQ3gVVl8k349zUxUh
VUTc6Ki0thk3Uq0Hgh+aqdFwVJwja0wPn1xvn4EFv8sjH3Nvd6wC843ph28M
T0KOh/JqCYJRDCedTCjqBO+BOwiat9MjH1cBFpBXgceknlkkI/oPV1Fdcfiv
v/0HnCrrwNLddHzWKUs+ROga1jzZRMIavvtbV9fRA3nyZxiXVX0FkBad12Hu
VwQlxWo28ykEvEJsMAp4jIqzdzHh+JY8SNcXWcNcEKeC5tscLQNfHxhWjRX2
hXZqcUkYlMLTN8EpYJ3oADbJeqjY5eV8/hrYL+tswx1f1codicGCkAh6hU8y
5uyaA5K9zTUHs4LJp5VKXXPhMmRUXcFnwHnByCEo+NyqOpysKjeeZoAQW7vs
iHZkzrnqc/cG4Vmcn0yg3H1q2kL5mhv4NhYI9hq7dP+kxoDkRup2a3+sAu8q
lEjq3DUQtxIrFc+Dp6X6Y0ThBoiQiV67epR+yi5CjIoqwB050SDpPRQjNLNV
zDbkNvBsT1HxMr7lJWV8GMJUAuOEB41ZJBa1/bUU56IaOhSR0qMEuD4WhTdB
EwSLkp1EpmrA4NBYQ5zl/7NdVvie804WDfsqLu7K22+36+ldmjLl/s6drCih
Yd8ZEmlHkltgY7H3hmHK6/7yqNEUde/h8u0XMNdmPkU73HOxnAGMUMszlx5B
GeDt4DfMxJpD7GSkYE+PX/wADZTYJaRBOV5Y5AxJDYi7NTXXHXAP+mjjod0+
qSGZd++9EN3e9cB1qIE0IbWG6Izcml+JTSWpGjfpGQZsd3EJLsGAiP/jc8wq
8EWppSvNaLI9giVpDGzgXfj6uAkmUqx26aysLqSgM4cyVPFpin4AA4CNq+3S
2BFfu3TYKDgUMFwwB/GFnSHpLEQUkdPGyqP2/igCG3iyo8mNID4V4RkdPse6
1m/SuBNKNWvJvVHXCX7GaaJCZrA+MIMwQHz5P8QjD+os8J2it/E3iICJdwGQ
Bz4cTMHBoLKo3La27s8FlcZA0iphza7BwOIVmIFNTlnZNVfrOx6UNt2KO9kZ
mNwE/SHbBSwBZSAzAIbY8/x70ojR6szoNe8GoCBHV+/3nj7/CJ8RZxokj5TP
5oiByRG+DMPWV6lKHRu5Br4tdprgCB8IKl1tm7bIIuETsxMs39kxE0S6tOn2
1XtfUggAN6CKf72aCvgy1u1dAGpYfvYuxN7XWZR6Q6if/kwovgjcwm1gmFLK
LoFdApMB9wBFeexLcGl+1nu6xpgUq58/a1bDhp0NB9yKD0fHHs30Cszb55lD
FbIAioAmn4SG0MwWapcmVISUgFveCYPGnsD9zt/4HI9X2HBDff9SyhPpO1su
WbRjFXQ6oPPmF1TUlQpA0lq99+x7MDcTr/zdXvnH8zvwTz5f419997PGTnPg
G+DcqeVd0FVoqdvxU2sPpcOeywHLSOX7Spm32jSA4vTEjuAkAjWh3FgAEM5G
x0xd2D+dqZCeBxfUue7nRQ03saoPHatcbp0MYIYXgrFBjBTSEoKC6PgJqmsY
j28iJFGXW9tNTJ/HuVlVOSkngmv2SMrxeP7lT5AshoXbr7BOhjYc5PFRXMLc
lyVtQDd1WRWMIcAIfAxkBasTuAT+K0pRSv0A5duT+D5/rive8afxddo9ZMsz
oIRKgkoRg1Ga4kYDZawNhS5gLmAKBILUtffA4mE6YAT4yY4RfkmNaarTDvgY
WQwqcUt0G6I6FFqpo8sO8xlQqX04YlIHIl22naFHTXlEL+FRGmNI2hiO5LPT
uATR0ag3vIbhO/IsNVrekDHWERY2nFPY93U8MRO05zMechUaIqiOsBSv+e6E
Vr4zrn+UCBqzyzOfcoOgA7huft31viiRkYqFy/kCO6kjxW/5/I0WOA8LVHv+
oan3SVwKPF8+7XLbz70uY3kXBswvHAQ4/JgMsryU5cGFw5nOVlpfv/0G29OX
7U/BIcF09GGnKIjx+5MnhPZ9VSp4t2Z2btxI+E9yYCMLb4wrwMDBrsHYveZF
tHtMTNr+9Cc6JflLZ6d0P6rbie9h2Hw3g99fzng4wk3HiIFPmEpIgiYUCgDH
HdoujxexhlmHC0qbb99+8g3LA+K2Giud5hq+ynaHBEtflpejOgszQr0HiXqM
iLEequAqR+zUkgsWG9xs55t4vL8xePKH/mOmO8/fdcIpjIgcPgl+AX/Vn3Nr
qfY7v8oQBYnx2eJ0bOaSGpdAduqP64r+XV7LjbbYuEzehijA8KDGMAryZrZ4
PaumG3oemtUC03KqrYdM4sHgsj3e+bsdUjfuj92/P+LwFpeweZvyJr+Ttcki
184v2j3W52hBQFytHKQkPX3y5AmPnJyV9nuVM0w9ywaNiVFEBI9KOZydXbc6
uu4OHv3k+jZVrtW0FOEzWQaUgq9hxWKmfRMbQGbpqAW8F+prhoW9yjbV+mgp
HagR8MbHMR4jvHrzwfnuR4SR6rt9VChDPSag6sE8BFc4f/OFVWAJKDbYNLQN
PhXwg1UY4Wt4PL7ffvHGoGEffPbHn/8OC+wVW4/vQ7VZ1h4LyIyhXTYL32Kx
y0bxC1BQuc5Y8Gxm0FSmM3zNsc6Qp5s7WrufwU7EFHRAB/B9C/8imCUsCoew
6oAUVjxTvst2/voXoFpwFWS4zipqSb4YZYZr3NXrHyXU++23316RN0A9Swdg
Ovj73EGX1oCoypi8/LSaxKwmuS7Us+bxDyGZksbbpFbQdyyh8OxztD136FgF
NRoV2TK48W+8EDDde9QbnkGVfFvunWne3xP6QxEHUSPKJaLS3CPBMqAYTIJq
39BBXNqRhlNFcSNdps6TMR9YA5asUCmzA/KeXiJhpujMLY0e/I1HX9Pk4/rG
qrUpWU7uCY4RWmTpX7LTI4+d6OFnGsH29/sVL7dK3sJL4u3yzKOIBM+mZ2Z8
LEkDfBLfgXChAM1dT3EtqA0dscXzesXWWfnk2AbmZ1R2EQui+uwYGCgPJUZx
rqBHUQVYWrr6OMLz6LyOXfyhihpuAdSII+F1nrybCqO83DJ2/o5ALFsI7dbj
b0TVEs27algjWNjr7dOXW4NRpeIqlAWkyrjTxID8Ywo1MiB9kSPFzqLxED5p
jKTnLFoz9DDficLjLd6fCK9iyf7EDQ6ZECfdk+fn8l0GejzRfXASruQYXs3q
tbpmLjYJAIyDcLZf//ynX377A+yHzvYo2M/ASkKnRKeq8yB6QtwN05tzqht8
BcKEBwMz4hBWSep+4Gg5pmS/f4nc7KgiXSz6w/JHPPJAopVsiO/E/iydm9Sa
rQ/+7xhRvZdDN6voQSyorxoOn0NjeS1GrDL8psPRlFPZq6WTMx4NzICuDZ4n
XbtXdIvjXKlfh2yydR4xtTCjgs/Lap8RM7nLizm8VsWldLbxV0Fn4Op3GBlJ
e17w/qklpGQxRW7TtxkZtN+LAYg8JjxfQe3li7dfSTtXSnwVHEwwKOJgeIU6
qUoZU9S5si/Xn57457/9d/n+Zj8uxXfk3sazQJ0gMdqIAZ0CdIpNaHzkqz//
jfwASEduDO8++z6QQwhQb9q7i1ebesN9wrsxofnJloeT3lnSvMfqZWEJ26Gi
6KpmJsUlOQq8q85oWObwCe8ajVgx7q25b3+03zsbyAdzD7+Mx8876dw4W1e8
qgvLMiofOzVlwpzjn+1Vj//885//tLe317WystIZGpeQBGsl77hW3Hg7PLuV
3HrK53n07Fvgj6tLQqxTOMuYmjoDEm3dsL3VyTvPNz44tNAxpBQmEyYSxhW8
mhVsKeoE5MYWnPdJ4Ha0TmeIvMgEkOiTTz7BA+B3S0eXlvnVdlZBuftB9cpo
Ixk/qt6d+sCAdevW+fL/+B3e1bazHJrZgueGk9565emtx9+2q/J7KdcTMwJ7
D7cYr2BSveNOg4eAV2FGw7LPbXMDXuQ6hldpiBbQ2sE4z/JaZFLelXzfTZ1f
NV9+Wnf+AQQojxxh1jAjDuGVVnwnAdYlMLW5L2OKKkt1d3eTVJcvX/69qnvq
eCjp+Rtf4D7HMlrsOCdgeax8ujCM43kd8LDBluEjUMSAYgr4sOpcq6xiGB/P
THwCw2Xn2kLK5dp19X7v1XusR+mmbXsWLln58aefrdpqQTCLoaVXXIEUQ7Na
bQJLrQNLabowRhhawCqdEnj04gdVNQ9Rp1FLxtRs4laPbjz8vvPSo8zMaaNH
H5g7d+bQoYVTpwr+BMNwKSjqQurJ+vzTxeXn1en0BZb/+gIi16Zc1G8UwqZT
otRCVmRRUUHggND4D+bOX7Zm2wfzlnger9HKoPja/FAbg4LRCEprdjhWMnXW
3I+Xb3v3w09OZJaS30KbbAnFF8FWDwaXs/NjRZ1ygoQBpFd1BaY0AqmOJDRQ
EqeGXQ46wSJirYIZApI++OAD/ib7NVmem55cepFOsYFqY5a2umRvdMzae7gQ
1H69QwbsYmRue3RuOxk808Mn6bwjKIwKESfhamTTCTQUUVBcf/Muyznvf/zh
/KXrdti4y8qTQHSUrDdIzbAhxAuA1EdOsJI7dPQRmvdYpU+zIG8aMzn6Iofd
M65uo0PGuoNxw0dPenve+lHjpu5zjZdLDupBchjYHeMjHcYqsJVeop6//Hxz
Ie3JXXvwFR7ljSJO+im5FSvXbMTHtVfT0Cf9omfknxlDWiayyCBjvCyHLnmb
G3IUpeoLlNArTmJCB9fZZ6y1TRw75d1Z89ZPeusDC7dobdSLrw5l3Emj6qlr
HkWMiYH5BkU3X3qIi4OFHgrMFHoNQwibUXue+TkF9SxZnvt+hlBICBkOLm4h
37/9+od/gxGCs0ssZQi0UB6ZSiq5ZOLNmvmwT1D8AEAIa7lt27aoqCj9AVmZ
YktOlfP9b79j1H1Mqi+CT1k9tBNudTh1/OSZ73y8Yubs97q6b/X1P1RHI7gC
rCBKRDU8HsnTF3vqgCbMPG4m8tckG8n5pCFWcTmPIuG/zs5O/HOYGpsj6/rq
u59JPSQ218f/qCIt3EQgp7u7O2QD6JI4Hd/9M/j9yZNr8+cTbXsVEiLZlAem
pvQSrC7FosWKwxJYsmwlCCJxHYHyTWeu3j/kSMSNrPwI2Ovbq1bhKkQUtSXG
SxlqxCL4zdQYHGfB72LAcYWdtJVJ0pLvCEJ/KD4Gyb9Wlb0iwwxApFDYsFHj
06Lyrtg6dYwdB9bWlJB/5txtWrvqxzVpXrWwOR7RGkNyAiO+uGylj1eglfNR
n8Qz8Bqh4AKCYEpZ3D2kghJrSfrjwANJwvghEi2PjsEDeP/jJUQf5i5Y6h6a
J2JfUh4AhBKb15aeWHkvLVc9RantWDw4ns/xapHKwb81AU8O00KZ7vApo3JZ
O/Wy5jvS7k5Rpz0/3sw2VN2yRoyZvMnM40TRhfKGi4uXLBeIM4LmHOPCMAcA
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
Y3Q+604v6wTZPO4BksN6PcDexyCkGAd+PtfrqhJsGcjqBNHVwrWWOxDvgtIa
SFaPJkqhk+f29iOcWDMQCAWbAentR7LAaU/xSxacUHxSIVmTFJKF32FTwKTx
Zz9Fne49//7/p+w9oKq8trVhhlQ1iRpjizXGRE1iLIklxoK9V0SKCogUEVBE
VATBRhGkV+nSERFFUbFiCRpLbIkakpzjSTnXk3tKvnPP9335/jvGHfzPWs+7
Fy97b9CT4SAb9lvWmmuuOZ9Z1px5x7/A9oPFIpFXz437RQEJ5efAc57/8new
Y0j8ccdg4TtjBmd7VYmFZtsXn41/+GCcCS416DA9pmF2mIc8kgEhrLAL6JBZ
cU3Pd0aoRU2uY+X2nok+sjHBMTKW8Zpes+AyXHyk7Jh+TfEu+nw61lmdZNKi
WSBD23uI2ZVSMQrl4vji/g8vTX8wC23eMKzDOfmfYR3a6E695un/b6GFeRL1
DJP3XL161dHFzc07aNP26DWe/k6u7jerq4l69JDHQmKezpjrwbhDDs7uXgGh
PlsiVq/x2r4z7NbateIKq3YwT6dXxjzStujKWdRfuOHu6ePs5otxYXQY4/ET
pxJ1NZzMoJ1XrZ3LMwjGNaCINKuOVjs4rfPw3bYxeB/evnFTIBhIw1emCOhV
K3TYGmxrhYVaZHWv89fvg4Ago29Q5Ab/ncsd1+TmF9A30dfUWoJAgSysOHuv
tO42dC3mvXJj+iKXqMVLdi6Y5jtn9maHlbu2bklOy6vX+16YUcS8y1NlZUar
DSbRYu/Kx3Jhx550B5/gOesdPvfwGTE3aLJjwFyv9Y47AYyOJ+ZnJZaFHqwC
JcmRiiO8A8MwCXIE/miKxeWsBjLMEZt73iO8eNHGjAlOByfLY/iL/bMW+2W5
7hCVhvdmipq4sL4hS9ZsL4AypqjCV86BiRPsly5c6YYJOKz1m7fEMSopD1M1
yVy0NVgukNEwcIGKPGQv3ClrE2T6iKi4AZF4/8mP7M+JJQEaE+cgD4u+RTA3
ASshMFVp//kuwZNnLnXyCPQJ2rt4lcfy1e4HMo7LftrNZvLxe/ytTQ3v+lVB
uXjtIr/MOV7pk9bEi/K5vunzpQccyIWlMjX7xST+0T0668SsxU4LHdy9g/Y4
e279fNay1Ru2M+Hy2IWv4vLPY6iwme4/0eejt555Lzn1JZSk6Pjrmzl7Q4q9
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
gNkdhLaQYV92pcSBxHDYkrPIL4sLSjNJs4mlNOj9iggI8hycIUPnWnUlfAWb
CddITPsm9YKSRMFxxxZtyoTugQ0OYT/JRaQtfibDtXQiJpdcxohljpYlcRXQ
LinV+4v7P+zLOrPEPwtqELzReKf52R9fGJUOK6+/XXvxARnRbVfxTM8UYB66
RRtufEOfDi5mdFfbI1w5JTMMlTmNK7N0NsI3UTnnYOLvSDieCjmjoi16HGWc
GUY9pXYGA2edDLJacUhmxbW2vUdeU3le+CNEKZQyDWLF4Ab7SegMfKX8u91M
cU9LW/8AALfsd1iZXn619UyWPmbUVYEQmOOABM4hopu04nKFs7txKwOfwmaB
NbwtXlQ2pmYrOnEz5+iNyPTTCipomSv6KIwqTK9vvYjRQ91hY6jqPN3a02u4
whTqtMmPoCD6t7pTdcM9sEiZPQpED3QXKKshmJ4AlSeuJUe106fPkpUz3Xcd
sbAUjruewFu3Hj0vO30HOJ2ZbMBLsq5V1rKA7ClrEz12lwZEVamoQisaYmzD
FA1JDu+O19L5+YowiN5JlVip9UvT1yBNK71SVHtTzzLO2/Kh3ploClDzSpWI
VLxef5b2NdCQ1lxL+64rOd+XxOwgUDZElEAkaftanWDlRaLuR4e4SJ6gfEnv
MtcdhenljSoDrEvHWIj8qqJvJXW3wciQvI7BeUz6h1GdUnLFNDtLOzEs3vOO
4XfNx8M92npGXsxJnImT3QvsmK+IS7MqhUzH8njtKdu0v4rWdOuJWlmygXnv
VkAtLN8CaGRloIGiHMjzz3/9rpR39fmvoDQ0n7ulYYfgnUzx4KZrkW48KjFW
EC7OO1kxZe7JTpaaJ4gpW1KsSh2unPZ4hTi3L31gNuQGfSBKdlXohSfjjVx+
TQzebiZbgPwcK37ic93lR+AJz4hSpeCkXpXOsuOXHgRLVQCG4EzwtThpk1mP
S/E4zBtv2i2TWBJk5izlMnA22N1C3ylRD338o6pULA57m7vpNdVyATNg83NQ
Bj9jchuAchh3YlzJCP9p0czO7WMdGyOsI7SvmGGX+mtiVNRpeDyLYmBu9fJo
ELN48HeOXMss5h4l4lHWwciXIh2lwLBU17/6PizlJChJCcK4LNP3v//xr0ZV
hymlyCvALlDvizdlAZ5yzYRNJjVbVwwYF6mdRq8NIA+MMKgcwTPs4IexkOvw
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
ZCWpk9ZsTc7eFpO20V2durux838oaToOCeTyw7BcISoYaceh9/EDVou+Pnos
WXYAbyvXJWBfcs42QENw3GaZ3YYVuJRrhNf5SetQ5VbCm6o2kwcyUfn4VJ1t
dZO/O/2+C/KEAIgT5lQluPutWWWwhFKLWrJEFolN4DAG26s0ROoWuZ5RxujN
7hkWKyspc5fSZhgGtDis0cVFLbptxsJPi8zEyvjzgytfxYjK14f0g8n8uiNp
xS2MG+b68WwAz5c0HoeUjMuoz6s9DMs6x+vtdnXmpQe2KBVLicocdm3yaJMm
J+/s0SBVcd/Oei63+jB0F2Sgujd0LyUK5TpQAfTBa1MKiaXV8SMePHDq8tqG
46Le3vQSht4BVCu5iSdBICxKmxle5XHWeWubGS3tI++vRbRJn9OG0YkVQO5j
EsvBC5MW15L7jEgn5gexezFXrt8HfoaCaj5wQd1Y7EbfOggwcVHNnNWbISqB
IpiRf2r6RnmmiilVY1C83buqfD+4Lb24hWVI8SSloqTaQzypLNl04tj533g7
zaSpaxiMUmYBlgHGwLyIWlANzp6YWgvOAiyjaoNYXl15wJtqk1m/ulvODi9I
RQ38gZ2N5xfm7whPqhybVIENk5jVDLSBd82shB5eSWb50p1Ycl636B4vjGG+
vDTHsAlgD12PxS6pD08UV9hGzV0vYNvbl6kRbm7TK4Rb/Io8695x5H3MNcdM
QiSh7G6sBuAIw+ch7aHHth1834sPUS69RYDf5FOXBXZAl/3Soss6W2wU/w7i
R2YKUbqtdudZcC4IFb2oRp3YYr0wPUwSa2fVZ9a4Y6s+62zRZ6GO+szMm69O
RQx9NlPTZ/vCwv4u7xka9tfl+Pj3wsP/+4cfjChmd0yHfD6UKT/oxdOr+6ld
FsqoYmgbS5YU5ZEM+taz3CB+kDi4K+dzzax+LIPyDpJHdKcdNUyY8toxtpZo
F7IVSmppyW4ltXmhGg8rz7+4F/XdnwnX8CugXn7tEYhyD5uQHgl1cVvlUmHt
9e/NKsk5tqLQlKn3O0YiU1XjM0U2GoVRtKJsL+QLCCll9w9gfLA/DEMyKJ4R
OZQPvg+ll5S9lcJYT2RCmrp9srpViC9vNPd0cvZWNIGGUvJ3Qjb0Gp8NwRqd
UgM1Nn7+hpQ84c7bsO00iH7ho9/bl07afTdwI1MF6qG/DCvlCR5kL7YwDDWX
nwAbwdjnkLfgcD3VmnGzxJsCk7+KnGsQZ9g8eAAaGRagH8Sw66eQ65Bxs1eK
BcevIFdSVjMzl+hxKxi+HhGCjqDBtpj1L9Vm4y7zdtJiyjKpwKifWo5dgk0J
y3LIjBJYmaPi1wMalUu4gD7wmgrJRdOgBgbqvnnKqlSYIsyCmcubsqsOwWy2
G2v0+BgWF5ZlccEuqMLe0Xn9YwonpdaxfnNcRmNCZjMkS//JBa9MyMEDC/N3
Vpnps+R+vlOPp8EXkL7A/cyM22+ySFcYaaZ+gXDHMsJUxsBB6ilp9WgQNvlL
Udn4Fz2ubTyOtUSDQhrIAwhRQRILgOmLFOCFu7DvdGsKjeI1six9g/aTNPft
A6WbXDKTnb/7bIW1jPFwdpVI7gaOxb8wWcHDA2UVq1Xle3U7yq+9tbyZHkNx
CrewBnqffKwS9/HoQ5kcIBW6BC+DSaemiQyVLl0TBTvKXt++woAO6KKeFl1k
vesi19daF8Kui9o8o030s0gMGGiuqP6Ysrqwj0BOTBXmd7LJFdwgzA1mrQZs
jUKx0eEnBs1VzjpDB82SOuhOWiaqTi/tuP+6du10796iIu9N5lsYvNg9UgeJ
UxFsGsDUOau2AIgbtYMZ3TFjedPI+PXuXBWsNKdybhv3NVjJBYSDnB08rRgq
g2VrWdvA0cNmxqSI/A7qDFvWPwmgKOFNUKIqtIY9M2FhzdFzVzg6xqBiGpC9
lAaqHmSwbr65Y1sDTS6mBy1H3rn9q1EvOPSal2q+Klok9C8//E06MnZhJBAc
4+dXrarYBymp+hX194objr4xvQQPXTHvHnZWd2KlBmjqGZ75wrgssAdUB6Ek
faJu+80jclX+drO6NyEqZs+r/NXoVZBPDHaBMNuy/wIjYFjGA0v2hixphlb2
n/rI5Brp+8UiYF5mpEgowC72JDbnuOQNEC0AoAZKbjnn8oNgk7e3yc32C60u
FYviqHNU3B3WDNtCFVOlUNrYcg7DLqg7sqp8HwTwS5E5z0dkgXQsPZJatEt3
m/3dqOLn9r7DpiSEUAjBQT4x3t1iBEH0oA8yAN0hV2QgIEYMwA17U1yMnpQP
xA8gcejMJ2Zsh7ezLscbZ66+v/ndH/ac+BDaasayRjLMgJjCmPSNC/J2YOqq
kAUeq2w+NX1ZI2Rvr/E5+FC59RS+9JHYyVKISz2WkNXM4jugtIIGV7/+Fiqq
avsZGGf46bmIrCeHr3g5KheWGRAaWRBCjX4JnudCjeXWHGKglPTyu72vUMoQ
Z9hxfSfmgY5QTx7nVdbaWEE+dBRvwO0/9TEsHvwPH/w1S51WEdoHO4PTwc6Y
XWnTCV0rOUcJ+eSFWxUvbJG1PfpPKng2PDM8qYKPoQmVFgwbChsCPz05fHm/
SfnUVjSfXEJLdXVc+zCfWsq/A1rqJYuWCrXQ9AabxQQk93ps8ZDpJSmy6JKe
09f/S7PEvcOJl3S9i8UERwyOK54uNNdRjxOvBy0aKtSioZw19Y2GhlJ5Og0N
NVvTUO7Kp8QqzIn57dGjrltM7GJkSrjD1CCqchVQLM+lxO1B+SvrTuoREutk
zVNmFbX601Q0nyXo8aPPrxm5D1idlHJt1fp9kQurIKGmZtQDGdL73WpeNwwy
bQXdQ6b8Z36mfLRESTIvF7MZWvxoHnU30RZNKvwgcJvUsj9VVVPTinZFLqgW
xSXSN+IDT77FVvzuz5bMUyyE2ibvc4rUVJ98ZfF/kjvwZab0loAy2JAzljWl
F7fkVh9WgV/KgSW4g7d+nOMrOX7uNhWGTw9dCMQT8AGTbH742dcqn6m6o6HW
sqRRZDSYu3oLONs5PlKuZXf0w5NvH6W1dh79AOwNbKquRtDb2rEcmbKf+8gR
pU3H45Y0SoGwDdYdgR7MsehFtRAaB059dOriZ+owhMPGYzALJiysLm44furi
b/GMD4BJSw7vQhZ5ORtxkG8qFtLi8FMgXNd1LlX97wbHS4/ffPu9o0uR63qv
XRO2ab6jht3nACJbncpUtpolnMCiysOYVtQC8yM2ox5sDK6AysT3Lj/gGlcw
YRwd2nQkKA37KLoFhSq2noT1Bery9BDiDOsAA6y4/mj97nMryvYA3ExO25hR
shujSMzaCj0CSw8aBy3uPv6hYwCl7m6EMQyMR82oTthMfeLWjPrRV4rMQgjN
BR4B4odc8WJrOGpGZV9A+wFvNux+F5o2Jq0uY+1unnOBoKzzBZC0ed+73//5
h86e2Mju+fLGL7c58kty9lboRhotqYU7YVKDwpgRm45OqYViBMFpxhVJOovz
z+6O2sB3bKJfBzRiP4tGDLHQUmLb7rpN1pG4RapFVjDB58bd52hdY85A9pgt
M5s5hoLcadGLIRa96IwLTWs5xKIX52h68ezAgd/s3ava8P9daSksN5FRsYel
jx6mHaZccirGOfjat9+LEtVpG2et3KzqE7rUebURzSg1rYNHjuc7jL7TL+W7
cwUzoEICOClD1HkBxkJ68yCsofVc1bbTliTIRCaBVq8bR44+IPQhKONXb1bK
3PDeqiw/hq/rr56VNZVVSW+FSqJIL7m5Y0NZDaFG1hzHT2sbj8HMqdt5VvpJ
hPXZRQkAbkaqb0ohbIuZyzddukKrP5h+Vxh72I/YFhXNp9w3M1UeAK7XFe3W
O3VMAN1TjFST8sE4zS/b/HZC5paI5Cq0CmmFPbbIs/zBR59d4zkgF93IZHDt
T1xz2PCWNf+pWvM2L+mPLHGTXE+mWh0xp4xXBSynZRK3BdkzFvjI0Hi3Rau2
mQ7AVs/K3zkyeW1q4S6QYUyiyO0HAD5ufjUoYan4eEHCRN2r1YGzBCJj91mA
r/rkjP379Pf/BiaJy6iHLoFY5LVUB63K2Fhx17niwFyRc8UjjUCwiWQdVSt7
2i2TZ4+MXz90Zmn/mAJIIuhFe/lDSofHLFI1v/YItlvdTne4CjgICE5dPiBW
gyUYkbwhNqNhqrhv2MiCUNgQMG6gT/dJ0FFUf0xGjpTzUHLS4jrIRWHGTsgd
PK1kRPx6aGkR9yZpHmpXoiPiy1jogZk8gpVxqatQg7rtZh0EYkJjLuu9AGsW
PPl397/88Ldth97HoxjtwKnihgOISGcwuRwKFTheFMdZ0qDwS/f2eOAnPngA
KhAbBYADlAWzwsyGMQaqSa+mK5TGJF6IERV0HeqI2GodWjWHnNmNPu7q+Vag
rtctGjTYyaa056922EsAsmPnbQCn+NpLN+p0xFhAHJDOdzyKgbNvttAj2KL1
Ah3pY56Fq1uVhmaVBiZrO4l8fvvCwv7brLUUgE+X4uLwP3y4zaSPET0iNWOA
itszo+ys994b95xPyd/BUD+DEm6aSv3c2eJt/PSLf6fhTb2n0ExntHbywmcq
tQ1+VucXxvmA3PFd9Hv1KgEv9JGex1bVgKJ2ZGVqvLK0dDeT6LpvARhe4BuI
Ghz9j/rNVF6P571BSjOMjNYDTU114ChHK7KJKblAtsQDeP43v/sDZp9Xc2jL
/vf0yE4gZXqVyzafqNx6SiEP+oDRGvGF6e+/g1qGuCPHlkaQcsUxLH7Lvveq
d5xhenSVm/nMB1cZydOVSav5n+OaM/Wfbc25RlgOSCAISHQnjnsic5h8ecLC
msgFVUffuQL6hHnRnhLZ3IW2j4gzzVMMLBsYW/RSVDbsm4mLaiBGlpXuLmk8
AeDCKZNRMDTsymnLGkuajhc3HNVdsR9/fk3ta1ZL960jYVZcMbKNhGFI0AlQ
Z9Akr8YUAgwMn13Gu3UYeeOed7GxMSRlVSgNaLEp1zYcx/Akn4WBPvqNezQ4
OqEcf2IYmCxATFblgZkrmjy9rL4j6m7Br5AyyWu2YfAwvCD1Qa6hs0ohr/Jq
DmdW7M8oboXGGzxt7aiECnxvicw0LZEwdZN99srNYI+l61plPfD65WV77f5X
1TuohF+ho+xG5Me//YaHBsC0sE2hF0fOXc9shrrrlLvMEoli8onGYYEmtr3i
ENcfDBMRVsvkxbWrKkRGyzmrN8u7qbLUhjLYsWJ0YgkNLCXd3d5WWZyn14s8
nhgwVBowyZszSsfLCwvQc0CoWDW8SNnvbdENS8YSC2+T4ToCtq+ybwU31KLf
gixU62rTb2ofHJFnE6VNJ5z2QYt5GnmrIzLgpK90/AZBVwslgizazTmD3W2G
dlN0NLTbXE27uasP0lZiZjpYj8bv7ryu3U18Ti+lEdOnagExUsR+n1urTWje
FZH36sWpCAT5yLnlr8eK+Kj9pz7W722QaNhMr8cWMeUbnjdvl4vb6BVbT0al
1ABTzljWRDH87Xd/tqRANbO1eeRdNaoNKT+xnNctjt5IAiRmZi2UFxwAElW4
CZ1L7Bs9yZHdQitxw/bTI+LLIZ34AL6h73na0gbs5cmpdXiAZ11t8rKZ7mbm
iPWb23pOyuYDFyClpy8VR0MwbrDpsK1EeNmmt41ISmbKQn/ZVYcgNYZMX0v3
PjeDfZl4O/rvWkZBc51ct+r53nO0+EpMRRljMCplbF6r17vo3bzoLN4VdYyw
TCsWIUlQhWgUrUMIAxYTQMOkgAyJXlRD3cFx/PG7v+TICwLM2opeoUkh0sA9
EEfqZFGixLt0LQapHp5UofJcQuwnS6PVYqQ5Jplps8VX+qr8Z0bwSy6/V4/g
d/R1Xrj8xZ4THyZmbQXDYOIANio40+JF/f7PPzjnjJWccPcVz7xsw0TJkwao
qLzaw3h/ceFOlRkXyi96US3svoY97249cMHuQmUomZ76jVLjIRXbwvAjdfro
LX4SDwOyEYLVtgikCd07IKZwQEwBdAUsYKiU1mOXDpz+2G78Od/1VnYYtLNF
xbmkjgvN8Yzyv/r1t24PAD0hIvtK2V4MYMiMEsCBkxdkLJ2fKUFUvKaUxs4e
UMCPRTLNL3iJkdpQiJgY9ilvlwNsYGUxEHllsQi8Jy5/dIRvFPbWIw9tMl/d
S7WzxLlLV33ZeqMsutCKUe3Vl2VMyA3KJdqm1RQXO2tueaQswGqPx/SV8e0f
uVtnrW6kaUZ/RyrdYaWpoRkTlGYUVfcCTA1pZGNjnKY7e6mU+F2UP3KzLKjS
Jl12m7Xqd+bdlYC/yjpry2VWNmtcqaRlj7/aKtph5BaHJJaRwW3KcCFbkyDU
G2GmxlD382juX7ryNbRCeGJF7+g8bHUoDRXp75F/lKPj3W01uhvsd7cPnfno
2PnfFNQdgRJ6ZULO5LSNaNLgJ87oirxrTl2Kvg6c+mhJiYhrHxRbjCZa5YVb
tGLJPav7lplUjVnleS+7+cBFXXYq399mLQm5n6nVFZZQpjEL+J398Crv/GGF
uGywnLBxsff7Ty6YtXITk+EFm3iDFwFPnP8NG+QmwLbGFtcToQSZqAmDV/Kx
A/lamOGB1rK6Ywe5D8NvYf6O+SI4VlSrTshsjtNSRLs9iJKTb9W9pxChEOux
coOpJG+Mo2MeGq93FiRf32iXb5gt5NvSkt1YcFmjcN/iohZv94m62fc4ettx
5P3k7G0il7+8Lg3QZ56ldMMDVdtO+1aKXNsAk1b6nra7R4+cvYJX8usOAye+
MiEXVnTRxqNAK0bWYYtenJpWj3+XlLRiZpgr7DZoSshsS9wMrT1v2Vqa918A
ZkFP6A+9om8ePHKH2TKqdf30d9/ADMqvPQL4NHbehqGz1j0xbHl/qSuSc7ah
qT0nfi3q0fDE1fHIEYYS+Bj2FOwsqE/oTkBEwRFEynaLb+IiUTg+x3bnzX4L
Qfba3X5m6+300XanwXpDTuSEmV8FHoLlBH4GisUcolNqLTcKeLvuvctfQFaN
kalugPmgOH3xj7rlYI06scn+IHMFLRpy0573dh295E09jrNoxwCLdrRXFpY3
w7Q4Gq44JX77Zw2+8hmFdlhPQjiD2qp3a/5MG23utFLS0IuJmsVIZajaEBE5
sCBF5jHWdmMEjVSNpuxTTkYAyPP2imnKys4xq3Up77bhZ5QntcGWW9tGPBhP
gvWTxLSiXTC9sJnGJW8AygXeMnOudTUlG72FvP9nV9fUVZZqb+6sWnq+TT+T
L3QPcDeK1rLNb8dmNMDCBQbkfWMM+cR7n7LECeNnJG69n9NS4RCt5k1tPKDi
1VjKjZu+Yff5ul3vQG6oONVLn34tsnEuacDWAnZdUbYvNqN+3HwRNl7ccJyi
07xZ6bqfjTbuPgfjCHh3bFJlwpqtrM4VubAKBhdX5u9OyVgZgaGXP49OqYG1
OzV94xYJWpkrxFi5ENPaBrlU3M0dPvQhGj518betZglxSKvJqRshKWCfATKP
X1AF8AAdPWru+syK/cyqInjoBhM/0QykIsTIMUHe9rFHofpQgQGmvO1ITAy3
NOXKQx2JIKDFyAtbb8pcGRDiwCOWQAtHExEMBeGka0NnKUc/N6VcfetZUO+t
WetGzFkfOb86q3I/Xj505hMYgVhtaIyErOZ5a7ZCNOMDWADfoCHIXIeqKOpW
7g3Yy5v3vZuUtVUw0LzKyAXV8vj1REnjCSgua+SNHM8j0pvyLvglcc1WFdZr
T1+F3mGeXenAHXNYkWBvGI/gcxZaKao/hm+Ac9Csx5mhusHr6AG16EOmFTPO
WHSpbje/1e3HG+168dq33+888kFcRr2sIbs7KauZboxpMrR/uszfA/3ncYsh
REOCOeZdPXzuINe4TFnnb9GGzjGXKg5D14ZYP6wi0+85WIoTLbrQGr0bbNOF
t1t0obVydEezQfg6cads17Vibs0h4U3QtCK2ARQCWfmbb7/3oMTdVroZui9J
6j55Ktfpb3/72+YtW2bHJ86eFT/p9p9+8omouMG0X5fj4+8zrTwRKfnRlcw1
OX541OVfUbnhP//zP+WPshUVLXlIItR1nkWbpEboonssyXNCC504MW9+Ctpc
nJbx3nvvsW4oNZXKtqL8Upe1clr6maDK1h1k8W2aWTnEurx/+XOM2sXx5xcU
/ulPf3KPX6WOPHT6kzMfXCXDK3XOkxx1Xz3DM483z0N17ybFMEh29tx5zMvo
c68MZmoz/Q4h9M/SPUJJzYBXP5NzDpu16NGwOF7aeVa/1migPvf6xScuXb6S
64eh4s3NMsO65X45M7kQdzMLZ0TyhpjUuvCkSnDWK1E5QKL4MyV/x6KilunL
mhhui+cJyEx/ZNCXX34JbmC/GACGoeQz76LgYWA1MgO4FaYV+LSi+ZTaBvge
2hXCZNPe9zZsP50gE3PBiocwgCxlfjSV+amLnlnOG/eoPGT4SZ3l/kQFwgJE
xaRtfFUkRizoNT77xXFrXorMeXVKYdySxhVleze2nHPndSY32f27tJ3tNFda
us3zRhQxqWMEUHddd1/96o+txz9cVb5XXmishaKaLTO621VzoEb9QcMjY+Jm
kfrS2r6Npziwk/HuwNhipqRKyd+pohTQCExS2FYwBdEL6DFy7no8BvyBVand
edYdV+NnSA/JaBZKO5/OsG6Wt3MrWqdYcoisobNKXhyf9cqEPNjzb0wr6Tsx
7+UJOePnVy0p2Y2hUppxphAz2LZjIqfgf9y1jLb6q3PNjpvtdiyw44LcHWDl
YbPKYtI3Ts2on7NqM6CkUtKF9UdhUhQ1HHNHm2OKmGj/IRHTZsaLeglyLHer
LDHgFTQMOI6BRyRXLS3dTQ2OEe2WlVWI6BfkCh8HngTkG5VQHpMm7laC5HoI
jjJWDW1O3sKyYnHJWwGmpiFXufyEEybQqq9DbNbpwvwdYKWXo3KeH5fVJzp3
dELFa1OKXo7MgSEh4mdbzbvu9p0sKdxF19drG48DndtduapOiq69eBTuocED
LbwUn5AM4rbLS910XhKRRnk7QGuAebsKj5VSWGlwOxlddm+AjDMNVTrcvqmM
k9h2tbij+mYVFMtk0Rkw6trGY3imoO6wrAydjy24tGS33RUsY3FCwfJgfH0H
uDX5PKnJaZd/8803EyZNnZ601OW3srjJFbg4s3z0uJiqvHwjJ9oDtJfrmwcN
i1iwooRPdY1ftGZ8dAzepdqgd7Vg41FICRWbIxhO9tFFj+QEfSImzoyamrCs
YCOaSs+uGjdpRnZuvqRzGA0tFXODty58/KVy1tPXQxJSzDNrDj7ridUMVHX0
xMl+g0ZipBxzt3lLCkeNjTp//nybjM9kWYrVlQeqt5+xBOnKczoRuXHaVgyM
ekRPi5m4cOnoqDjMQ/biP2VWStz0WZA/Ro2Sv8oaWGqdaQsYJxqdTAzQat7L
x79pMrkHuE0EHfg7rVEA16i0vBqPy30doMKsTOxyp9IeJJ2ePBryunHPeZ7Y
T02rh7kLzQnRFr96i8wvsisxayvW79TFz5hXAU3t23dgVMRE9/pjLBgR11/Z
6Vh/NO2x/nI/3q+fntKnC/E3XhoAjOWAgqclJy+yH6WkU7F5fzcT7qFFEHZY
+CQL+6zOyiXqIkXvUCepGA5em5xaN3RW6ai55eGydhroAFmgjCc82b5X2ptm
d1wff6zPqHGTp81fY7s3LpGquG1z6ZOvIO2gcrGXAV0AKbCjpbdze1pRS0Ht
odUVByy2OD3qlpXwVytBfvup420UnocIT8ymt6HFQffB00peGLcGugjLsKx0
z+qK/ZkV+xlxBXsU44KJpgQxo0yb950bGTE5Oi7RsnPbPLOeuGS12J9alDkE
w7aDF6Cl8dCUdHF/VFh8wlwtg4LjfUso+Ybd7+bVHKLnWqaRb5221B1jSmpj
B4+JmKD2tb/a177red5xzbNeNciMIYA3ZGBZNVAkzHGAGxAkrbhVGex41ZKw
AFPGxDF9l3XHq1zulhikNrPWHFZg5+EPMCuAGcx8uHSsvzGjZFDc2sgF1S4/
8KgrGJh6wkKMpBaEgfluWO1BTpzWlZIAPKEjSCyFVc8TZSs9X75F+CGB9jAI
TByDeHNGKe/0Qslj0BjltkPvA31TLGJZsBrrzIKl3nmQ97UVBpi5YhPEGc+t
Pc5yWWtLV4CS6/bbua6h9fSocTEd5Lou5Dqs3/j51dOXNc5cvok3DnWdL+/5
i1O+Net3jgyfgMHLWYQ40hLjvcdEANjQI8dGY9rWWTMqz4e+x5iwASyaXq7o
XeAbICjL/KJi5zFqRwc3bdcZLBVm7hbsDuwRQ3fg0/DR4xOWlIIZkjUcABbO
Wre1rvVdV4D4x3/MqKi3t26V4lv+/vnnn4+NmlK14wx/D82t3DVxyrSaHadi
MxqSc7YlZ29bbpbHon/ciDYdEzMvITU7ULwTNi0hvWnTZj0eFO+UbX67cuup
HDNPtlopM4tmyN89c8399otr2P5rNx7gOCqa3x4ZHtnUcgraa37O9hSZOsOI
DJY+6E5fmnW6lFlx9etv0dCUpCyQXY6sS1pW5ZKlK2hofytzd/OYk1dbuV7S
H9FZdwXHpNVDPE1IqcEEIF9JQpdsMXDk+NjcsiZLfFgXlcTax4ktMTnXGdRY
kLfdUJXx6yGwGDwIuRCbUjpi7EQsiKTDjegZ61G59e0Zyxsh4tV6qESPKoA3
w1KxItC0d/XKXhwWulldsQ920JzVm+n8Z7TI2JjExLQ8ztR/6pzU/OJy5RW5
gaIO/F5Qd2T60kbItIFTiyBl3pi2lrZp1fbTnKzgFemt6u5bA1+QBNf1Lkkt
+w8YPnbikryNy931LBxObB391W1mMQmLjd0FGAWmPS8owBRTGhgvqG0gqf4I
BjElbiYwbZstfLOk8TiYDBrP9xlum2ewiBIcUBIMwxor8wqBcjOXN1Ew5uYX
KOrfjD01Ly0bkztw6qMPrnxFnQvLMTGreV72NpitUQuqX48tFnpm2lr8u0gm
iHP7sUNMq00dGkuubgSfrak6CJb492+/0/bbLdhvkCf/99o3Fh3LeegK1ptT
23LjDZMWt5QSKsbKo35oRvAH6HHiPXEfPC1z/cS4RM41gLtUi3sKoX714su+
WZnLx87/5sCpy0fOXtGd6HNE9sjt2CtT0xtGJayH+gM+BIWwdntPXFbeQatk
vAXQDvw2Z9VmwCVdyZLrgOqgXUFArNirMYXg+wExhdCuPOMFINW926G6pxwa
dvaKTUsLGseMj1Fytgs57N//+P+Y8DlqoaiVJyCTpk67e9rTzMYkOGaFA8fc
AI5JWJSlOAbUnpu5dficsrGyPm1CZrOHj1ueePpPnTZTp0EAacA9d5+pH0aP
m6zG7a92BuNfunlh8hYyOTPvcWeS6hyy6jFwyuyUlOVFbktfekOvM0aKt1ug
ccHQ65qOGCMFR0MjwkB2UR8yfwIscGgH2bV8qqB6z/ioSW59OG9+CjS2+j0w
etr8vqMS8muPGNGn95h4bdDQUeqpTqBPz14DxiVVYBHBQVPlzTEea2CMrLPF
O5EjJ82bkbwySL4Knf3CoOi0ol2GfpUeiCA970GvvoMwIfl0MOTh8kIh7hbJ
7DZG1QnGGlP3wvSLTql9eWRSxKQ58p2umF2f14czbaT95r/71LS7adOS2QDa
IJ5ejyt+OTLnF72GgSAu2V6XyKlJr4xIAC9BfeAhlf5AiXSVt1tJYIrJ6Uub
8CRgODgial5p34HD2OINoFz/gUN2Hb5QuPEY9Dx+xr7qOykPewymK6QGdt0+
me5RUF/O1jnaKKf6YGrhrmEx6eOnzGXb3cCrIyMmdkRlSM9AF4vWwFpSQ0N4
wJx7Y2QUkBZbnjR9fkzCqsmptdiNMLIhb2BbO+oB2bL15Af6fuKiWmjQAZML
+kaufKn/EGPEoMazvQZEL6h8PbZo4NTiATEFfaIFKYbNXgfRk111sGnPu+R7
mW0vWMl3KJGRc8t7DooBcxltgbv6DZuCd2Ac+pbccsXcEQZZlfthPkG5QL/H
pG/s+fJAkweDhoyMmpCYj6Xa2HLOd4ZpuY+7WTJpZ5TshjQamyRut2Bir0Tl
vDqlYOjENNj9asWefmUorAWoamkkNkJ1YP69o3PBFjxSBENA3PqZNAhUsva5
fiMEFOZuiYpNevGtuRB/aMxtn3C3KCYfOXf9G1OyX+r/ZpC5i3/1Qr+JKVWY
+KBYEcYOUiiROd9RfmDEYyNj3PIDoB+DcP8+ecb8Q4fkqeFt3jlBpr8rm55R
9ergERy/P8by4isDzNvxrrCOS8TSdeUwotkKeCC/oFA0ME+TgRuqqmYvzJIL
Kp/q9+ogQh0XZf5bI0Zjxd1zgGm0YlWW+/czZ85ETYlX7we8MSKqqGo7FgGD
vNdJivrDqoiMnuJu4Yvff/X6m6PcI5g8c2Hhuhqxw/l7TsFafYSBz/bqW1x/
uNW8XMRIVSFRz3xw9eV+gxV/Yr7Dxs/SswlLmyVQ3aaek1owLibeFSx55LWh
4wZPXglElVdzGGaxoU1+Jt9QMmZ83AIMxeAqrMpzL72aVbHP43bzHaZ/wrDC
m0+CjaB++A7G9NqouNzqw7pY4DuBihtik7MjJs/huIJefTNi0MQVzJXIZJOM
zMV7k2PnKGkcDKr2GzTKspkNK427eW3t3j6vvcXZTpqxYEriKus5w22mHOE+
bdzzLvp9YXCMmnMI5vzEM71Hxa/D9mOAN2fBMQ0a8hZm6l5pzHb+4mWCjlzJ
+s07o6bO1XklMqtkMztfbOHGQJPzBw4eKhDG/d56MHj6bisN1yga+o8InwDo
Il1n0tq0758+g8JNeS52MeDgv2CfZK7J8bpP/EePi+GJrPG7wy6ZGBPr/h0o
Y8iwMe73p8xK4bGx8fv1js9Nufssssw6vif+yZVpr/1/9fz/1eNL/VHad/Pk
fY66wpkL3VxkpRJHsTgtIz27yv27lUqg4ogxkQLBO89iY339zOSV7vcBz0tK
17nbt3KRdRbXOz63RrSusnV8v3Bs300lR8R+He3/OPP/140v7UdpHywLxnW/
X1G5AXjBaf76eSJ41ejF3xxleFTspUuXjJPEL7/8clTERLRtsxP5e3VN3cx5
y6QKkL/TZ+geBa23tRsPGL/jU0TUZGG98f1jx44ZVODv85cVr85cI3564F8y
Potdqo3vSW/tU1z80+3/aPP/F40v/UdpH4LxwMGDHZm/5s0OAS+D9yHh6FUX
R0QRE/ftO/CQSaNRY6PmpuYa5xex8WmGJ1/mawzBaEAzHvLgAahrnjnwbWxq
jACiwHgbn/A3vnXJ30MaGjdhxniJ7nxMYNHidDT5YPsjC+HI8CV+wgNqYGpc
aAoNWsb11I/W8v/WGS/5EVrGFDCR9mYsrTui4UCoT4Y3QZuDr10Pi2+DwIul
68oYGbNz5050JL83ooPwJbAfPhtPg5+hWPg0PuBPPo0dw/gavAN84HrEd4/4
G9/iN71HvOfR4zP/gjb+50e9/J9sQ8geb6NeIFezzfJfzHV/u01yzXeybIX4
GG75W39jjHxDSruABQsWPPnkkwMHDrx69SppdfHiRXzz1ltvRUdH//DDD6Rg
QF5e3nPPPRceHg4yMOs5/vyYde/5BLT/Pffc07t371WrVvGJuLi4xsZG9YSX
lvFIjx490FpVVRX5A82qgWNYPt/GuB5++GF8i7f5HF7FMPklPpPygXjjorwr
49Fmx3oSLfhdu3aNfmFOWnxcavaH5/ACevVog0/hPTEKjhak4cBALD6Hn0F8
UA1tiLdna2vDoeFbPPGIOQt2n56ejrYMrkJfIB+701ZSjBS9KfoH4QesEP7F
X+ju6NGjrKGCL9mVS/XChzx62b59O1rDg/gZs8WHX8mn0SP+LC0tBWdgHl7a
4Lf46gf5H1rCzI21AT2wjPiIEYGIRn/4IywsDDyEl/C4mMx19Mc28Am8ha84
dTwk93IAVwdfgm58EqPBk2gb/WA8mKziEI4YT7rXkYuAAWC4XDGJYIPIe9wD
nKWaCwbMFQKjYtPJ70PZGb/HB7IjlkbQhnoAuyOeWZZFz354iFyIL429JVvy
x1x6M3sIfweDYdqCex/wMgLpPfLHE5g3WjPewzRJHNfTcv4YDEaFx10uFxpw
+ZyPoDdXAf9hOPgsewkFOUNCQjAr/IXmWHsb4xctSm0YxPGCohgN3hTE0/oH
F+j9h6J/zp79R8tqqnyf7QXiWzwEtkK/YnarTU439q4cVwh3IoajtgAbecSk
BYds1BoCYbC64uMs95oHoHPMn6/6oSt/k67G+sinOuMpTAtNgyboDwRBf2A3
9GHsfPlcCHc7B02xQs72wwhd/lxS8aDEoqGgN3cO/sMPeAcv6O0JGUC57fJD
ny5/kBdzwqSN9aZ4Ui2KaH8QW/GRkM5gYnSOD/KJYPtM3K2pXeiS3tXO+BGt
YQBcC24HvEohKNZT2iyBICAGir/ROJ5zOUlbtsjtpfeuJCh6EvxOemNSGDSl
B+dg7VnOJgRjA1HxHEaIZkBQYyXRuMsfX+q9B6MxPIoe0QzGiQ/gCRsl5Qg6
cU54inPCd7r0v99pNvSGkCsoijjKTvgBDE1WJQ9wKngf32cIyYCvXcGkArui
ChNrIyVAJzxLyY3fOC+9I/lMKBoDD+FJ7lC9E+6rUDSPnvAtiGrVfNM0Sag2
lBiAy4Wf/Y1R8ndKRzyCBjFqrKOfJlmpCPgkXqGswUDRKV7k7QS+LkTPww+L
dZfnnYGKX/CDkAb+WqtYIXQlW+2CDkEHNIDm0RU6pAbAA1hSagC55kJDc8+B
CILIzGNBeYvf8DKeJn90sc8KX+Mbri24IN64m9SFcgZdsX81QBINZAXdpFep
M94iA1MWYdSgra7S2LegKIluoSjFOTpDo5QJlNiYskvoE1cwG7Z0znUMJLDA
G1x447YyGscfaBkdCd1wv8lheJeLZden8pkAfTZ+5opRw+JhoWF9ziYQ3eJ9
MqYQaJTBGC85HkPyM1fNYzapJs/g//EDPsj5e47A0PGUhBgOF8xYcWvPXHE0
jz657hTqdlKSkmiPnE0V69JXh0hE2z+BxGdoF0QVEtHflDHGmiuPHvoVe4+R
p9wQ3ADUJOI5PwGI/LmDpBKQPYOwlDdo9F5TCoOE6BZTFc8x4pM0Ex/vMUdM
fQuykTJKiwKvCeTC1sAzVBvoRXBOgNmaoVP9BKn9KU7F33daZsS6QxgyBTyE
CGlF2HC3HAvHyskyYzfWi7NCw4LKj7cZKArcKDWLOTZM0I0OSE2ureg72NQ9
BoDjWSGWAg8L6gc79sUxYSEJczFu5sDCRClPSWwFze4xKcJfObYQCzXbTExy
j2UmXB03RrnHMgfmAEdTxCzoD+MwMBefpQQR2MBOO6F7UuR8KBG5n4NMmUAO
5+IZrWHcaE387e+j57u1vcRdIyjH246qf9I7gNsRawxiWHkx1r1XAnTUrWsR
yp1Ak27Gm/KUrTP3ITiesh1DQ9tgC7ZlbhjJA5iI4s9QiiMyndIM6AVbwpiF
kgLG+SalJIiH1v1NGYgGwNNojL3gBeoK9hLA4ZCTyLG69lZ6zZ9qS/UVRH2E
vrhDTRkbinlWyQrN3CpYJzRPG8XoUacH7/ZSXqE5SgPyocuKizhH/EJpb77d
Cb1wu6gNj62GdzFlTPZRc/SG7uY73lAOARtP0vGNGqe/uSJeEQnnhkf5BDr0
78DoGN2ElceEsAnJOiYtQ6jTOH0dHUvOFhYGiWPMybJubZ6o6y6TDoYE4IyI
wjiRNgsKu8vc5aSCIc+U0WVoBz9zVZ6U/4GkfA+/0Q5z+aYDvhGqxHN3mfzb
yYIS0QgWXzHUXSa/KstErATHiee4Yzy4iRtMPHCHuV7cZmiQFEELIIcaJ1kE
bCHauMvcZbQC8IHv4Gn8jG9oP3sgYvrMfmb2RniGR9UOplVOaRWibkAT8bHV
dDMrGZWqklqBYFXOnH4LQ+9Rl4i1YZt4herMAkn4NMcuPlqxSIC5joasZWuY
E8cAupGatLyon61IWVIsWM2qTeIUspSBdaz4jpgM6869QItGITj6nPANvUu0
lkOUY61NGgFkRq/4zEJpC1iyYyX5fCh5oU0CVMvQXM5j4xqhAfIhRiV2ldpF
Hpiee8btQ/WzrIUzLpRv3cDdxAERIKJPbwDRQA6cPfmRcpvsyob0NRH6/y6T
Amo7dYwCMpYlyI5b+TRBt5tXpCwMpNePxBdblqPDQLyOjujYPijyOuUVtiR+
vc/kUbVlvCPzyXLf0uOFtyGsBHpQe8JAPveZf0PcCOoGmbuaXGUgbO6QNilf
hR+RrRAzuJ+iREHfFF1uVGBI2gfMt4z9yFZAP2P/3mf+TZng8sNHO/6+39z1
6EXMyN+kuo4bDd4FdSjRDF8JW4PUoe8CLzEawYLuOoCu3N6xe2w9iV1CXKf3
1Ka8bneb1CJH6JaGP73FcvYWzH+3hXrXgRy5MEY1AStylXtDWEPcz5Su+IEa
XKcrSUC0Qc2lPK4dmHWK55gMNMs3MAXSgnP1NTIT5V3nyDh3NTI8KnYOZYkN
tWuWwiRtF2EWhn9Zl7FoEHzqiGc7ERdhdvyWRxIUWniZ/G/Bs6EYIwaEJ7jx
iZ+4IQ3UbEGyHqijfUzPXnTMwTG5fSRKC1vRPMEiutPRvJDu1tnfaa41sbWx
J5VOMM7CHPG8P4bFIx6XnxyMOtnBoljnT9+zBakFWpCa0Y+DreGBgqRX0F95
BY3R4hVDErQ/OkoXHbMSHeNXLAUGo+xvR0tDB4YuX8iQy8RvrwMZtoNg1Vjx
CnrgyLwheR4D4MNdvqmCb/3NPaaoIrFykD4+rSfBqfTLGLsMVgXG6zhG39aG
5xgD1BiV3UU/Gu0xUo+jxGKhiztte4tYmZIFX9Ldp8wuIWUmSGnxc3PGwhMh
18oR1wpUyXXkwYOBlJR9r2vFAJ5hUWhace195nrTye+AzSUFQhQyURsXP6NV
Ps3xtrU5YXOBdtUceM5ioFCF+JTiIky0YnO2ic64u/AfiG5D6PIs3I3THJCq
v2UUOiJy+ypV7waSYO9YY4/effgqAwk220zjwHiWw+wY4vOFR2kj2BFfOzhc
bXkPHE63n+5b95ipPAyT32LcHjMV6NbPhEXcVMaTPI+0jkCpW30E/moELj+M
gTNTaIhHOiaasI1A+YWpUPgtaalgP+kY5d5ZQkJAcOFfY6+4caiyAAnN3Txr
aDb+jqYNXybfdyNQ/u4dLRPBgg5cDON39z67TrSsjpbc+M891vvMleQRL35w
7xj3iGVMtw19OvbogXOsu5m9kUPdvfmbY9AxpuHhdcLpjHlpc/vJvaG3QAt6
c8sHO570wOscp8KLHcTOd3qfnRcEneK5kvhW7C6JE4TDM7BNQ7cKSV43pue4
iBLRPTpWtrJ1XCBHez5hZSW5IrXdwhVoU/pUB5RWPHWnyf88mHJ1FE0qvNzW
QTR5XVhaIVYVKKSAtCGfnJE0WnNE0mIlnZG0jtQ66B3vxE2Odzg/y/Sts5eI
NVTHIh0bWUcwvgKThofbMjJz7/kr/Ojdb29H+tyazn57b4jMCet3DE0rDGP1
2uOJ68bSRI1ERjZqtOtnna/xEvmcG5LrpnRmgA07/tNjZVCePlbldWiTRnJH
kX+g8gnrvgNtFWWgjktGJv+TSJNP+EKXShfZ0bGuiwIoFUE6tOQLE+MlPPqP
jhSCDsvhPNInrrcXJVGpLsTHe839obQd8UyApS875nYjB6uWtiLB9tGuwICO
Yw+kb7PNjnPt8SJBnCdbpKbTIxzwJ40Yek29oG1HBOhlFNSb7YxCYUs06zEK
bxibvI/ujFbHunn/R0SG95t80QHk6qE1/4eQ6y862j7McY/2DQ2sYjotaM/f
0o8FIRu4yhkhO6M8Rhx7x6wKIRMzGl5lzIky1xOtKq/j9aHVxY49t4vb/Mn9
HqP4R3yfXtAzzxrb5EG04DElYwyqktNlrOr/TsQm+M/gTwtWBWv8o1jVjYoU
VlX6/n9o5oxxsc7ckPyP/ktHhe3q1RttQWmWgVnHpWNoxS0dQ6qOGJqb2BGp
drJgM0UAimjr/BUSVPELBKpW/2GAExX+AaxKf6U3/NgeJmOuAgumdnXU10kZ
Yx8tNZ/TaLlu12NhjBD/uHrKEfzvRW5uTNU+cvunRmqgqCf+R3q5PnrgIQeM
aaGH2mWe6NLq6TMqiiocRG0KDiTfesGWPBG/Hgx2PR5G1TtNJFvvFl+4A7VG
Sl6WKuR/IxozZvvjoEU3MnryR27f6/wNzNUeWrzf/JuRcC5H28wLSnTjGWUN
KZTojvZzj1VGM18nksJesvn9XAEKayg/JPv+QZ6wO/XdHp00bvWJGR4w2/GK
jh40Ke4VDfFOgi+cwV584YoHf+SREiP88kfrhQ2yF86FC2WhhyERO0oPZb16
G6lPFKXuL1pQkz5WKVQ6gAV4bwADU73R49ymfFUd6a19ysiqq65eJtWVdpNY
1kOb8Q6grs35jK5X+Y2uRx+5zpapF5/9h96yjAeD9DYeXnaxt0xNZG95hZQR
SrwYOo139YC+PLwjj5jrwuBcx3GNllR/qc1TNj9qkTGPmZxv6B7+7dYFfN4t
+x/raHuGLO95nc/zd7esf+yf7J9Upf/JLXlJVatF/mg7YxmjUdQtK9SdbcNL
/qhFDvB3JZ/cIzYo/Jhje2o/2drreZ3P83cldf7p/lfYZAJ5T7d4nMeAF4wx
kDfbLP9d/9181//5/8pZLEI=\
\>"],ExpressionUUID->"5c66f035-a0f8-4953-865a-2961cf1315b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Total", ",", 
    RowBox[{"CalcNever", "[", "doc14", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7821563142089243`*^9, 3.7821563469055643`*^9}, {
  3.782156470692006*^9, 3.7821564714610195`*^9}},
 CellLabel->
  "In[617]:=",ExpressionUUID->"ea24dc15-816c-49cf-8373-cb0a4aef01ac"],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{{3.7821563241198874`*^9, 3.782156347301566*^9}, 
   3.782156472302227*^9},
 CellLabel->
  "Out[617]=",ExpressionUUID->"56429d43-ff72-45bb-ac7b-8c722934f962"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"14", ",", "2"}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[626]:=",ExpressionUUID->"ed1bfcf0-a9dc-41e7-8ec2-647288dfd594"],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"1110\"\>", "\<\"2\"\>"],
   14,
   Editable->False],
  BaseForm[#, 2]& ]], "Output",
 CellChangeTimes->{3.7821566480200033`*^9},
 CellLabel->
  "Out[626]//BaseForm=",ExpressionUUID->"96ad268e-f9d5-45d6-801d-\
e596ff5dab1d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"PrettyLattic", "[", "doc_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"coll", "=", "doc"}], ",", " ", "height", ",", " ", "never", 
      ",", "size", ",", "all", ",", " ", "neverLattice", ",", " ", "roots", 
      ",", " ", "neverGraph"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"never", " ", "=", " ", 
      RowBox[{"CalcNever", "[", "coll", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"height", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Length", ",", "never"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"size", "=", 
      RowBox[{"Max", "[", 
       RowBox[{"Map", "[", 
        RowBox[{"Total", ",", "never"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"all", "=", 
      RowBox[{"IntegerPartitions", "[", 
       RowBox[{"size", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "height"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"neverLattice", "=", 
      RowBox[{"PartitionTypeLattice", "[", "never", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"neverGraph", "=", 
      RowBox[{"Graph", "[", "neverLattice", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"roots", "=", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"VertexList", "[", "neverGraph", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"VertexInDegree", "[", 
           RowBox[{"neverGraph", ",", "#"}], "]"}], "\[Equal]", "0"}], 
         "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Rotate", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Graph", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PartitionTypeLattice", "[", "all", "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
         "GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"VertexLabels", "\[Rule]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[Rule]", 
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Framed", "[", 
                 RowBox[{
                  RowBox[{"PartitionTypeLabel", "[", "#", "]"}], ",", " ", 
                  RowBox[{"Background", "\[Rule]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{"roots", ",", "#"}], "]"}], ",", "LightYellow", 
                    ",", "White"}], "]"}]}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"-", "Pi"}], "/", "2"}]}], "]"}]}], "&"}], ",", 
            "all"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"GraphHighlight", "\[Rule]", 
          RowBox[{"Join", "[", 
           RowBox[{"never", ",", "neverLattice"}], "]"}]}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
         " ", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"500", ",", "Automatic"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", "GoldenRatio"}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "\[Rule]", 
              RowBox[{"Darker", "[", "Green", "]"}]}], "&"}], ",", 
            RowBox[{"Select", "[", 
             RowBox[{"all", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "4"}], "&"}]}],
              "]"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"Pi", "/", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7821566358419886`*^9, 3.7821566525711603`*^9}, {
  3.782156712151623*^9, 3.7821567536786404`*^9}, {3.7821569463815465`*^9, 
  3.78215698985345*^9}, {3.7821586542055426`*^9, 3.782158671372794*^9}, {
  3.782158766890856*^9, 3.782158770091616*^9}, {3.7822233001718564`*^9, 
  3.7822234877400627`*^9}},
 CellLabel->
  "In[647]:=",ExpressionUUID->"dde13837-0b62-4da4-9514-6c2745bdcff8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"PrettyLattic", "[", "d", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", 
     RowBox[{"{", 
      RowBox[{"doc6", ",", "doc7", ",", "doc8", ",", "doc9"}], "}"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7821561594159613`*^9, 3.7821562226418643`*^9}, {
  3.782156263950635*^9, 3.7821562859733014`*^9}, {3.782156399542254*^9, 
  3.782156504549631*^9}, {3.7821566601012683`*^9, 3.7821566894621315`*^9}},
 CellLabel->
  "In[648]:=",ExpressionUUID->"9bd35e7b-0eb7-46d2-84b9-e8ebebe76197"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RotationBox[
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{{5, 1}, {6}, {4, 2}, {3, 3}, {4, 1, 1}, {3, 2, 1}, {2, 2, 2}, {
          3, 1, 1, 1}, {2, 2, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 1}, {6, 
          1}, {5, 3}, {6, 3}, {7, 3}, {8, 5}, {9, 5}, {6, 4}, {8, 6}, {9, 
          6}, {9, 7}}, Null}, {AspectRatio -> GoldenRatio, GraphHighlight -> {
            DirectedEdge[{3, 1, 1, 1}, {4, 1, 1}], 
            DirectedEdge[{3, 3}, {6}], {3, 2, 1}, 
            DirectedEdge[{3, 1, 1, 1}, {3, 2, 1}], 
            DirectedEdge[{3, 2, 1}, {4, 2}], {3, 1, 1, 1}, 
            DirectedEdge[{5, 1}, {6}], 
            DirectedEdge[{3, 2, 1}, {3, 3}], 
            DirectedEdge[{4, 2}, {6}], {4, 2}, 
            DirectedEdge[{4, 1, 1}, {5, 1}], 
            DirectedEdge[{3, 2, 1}, {5, 1}], {3, 3}, 
            DirectedEdge[{4, 1, 1}, {4, 2}], {5, 1}, {6}, {4, 1, 1}}, 
          GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
          "LayeredDigraphEmbedding", ImageSize -> {500, Automatic}, 
          VertexLabels -> {{3, 1, 1, 1} -> Rotate[
              Framed["3111", Background -> RGBColor[1, 1, 0.85]], 
              Rational[-1, 2] Pi], {4, 1, 1} -> Rotate[
              Framed["411", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {5, 1} -> Rotate[
              Framed["51", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             4, 2} -> Rotate[
              Framed["42", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             2, 2, 1, 1} -> Rotate[
              Framed["2211", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {3, 3} -> Rotate[
              Framed["33", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             3, 2, 1} -> Rotate[
              Framed["321", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {2, 2, 2} -> Rotate[
              Framed["222", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {6} -> Rotate[
              Framed["6", Background -> GrayLevel[1]], Rational[-1, 2] Pi]}, 
          VertexStyle -> {{3, 1, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {2, 2, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0]}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 1.0786893258332633`}, {1., 0.}}, 
             0.0319088348808545]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 1.0786893258332633`}, {1., 0.}}, 
             0.0319088348808545]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 1.0786893258332633`}, {1., 0.}}, 
             0.0319088348808545]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 2.1573786516665265`}, {0., 1.0786893258332633`}}, 
             0.0319088348808545]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 2.1573786516665265`}, {1., 1.0786893258332633`}}, 
             0.0319088348808545]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 2.1573786516665265`}, {0., 1.0786893258332633`}}, 
             0.0319088348808545]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 2.1573786516665265`}, {1., 1.0786893258332633`}}, 
             0.0319088348808545]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 2.1573786516665265`}, {2., 1.0786893258332633`}}, 
             0.0319088348808545]}, 
           ArrowBox[{{2., 2.1573786516665265`}, {1., 1.0786893258332633`}}, 
            0.0319088348808545], 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 3.23606797749979}, {0., 2.1573786516665265`}}, 
             0.0319088348808545]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 3.23606797749979}, {1., 2.1573786516665265`}}, 
             0.0319088348808545]}, 
           ArrowBox[{{1., 3.23606797749979}, {0., 2.1573786516665265`}}, 
            0.0319088348808545], 
           ArrowBox[{{1., 3.23606797749979}, {1., 2.1573786516665265`}}, 
            0.0319088348808545], 
           ArrowBox[{{1., 3.23606797749979}, {2., 2.1573786516665265`}}, 
            0.0319088348808545]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 1.0786893258332633}, 0.0319088348808545]}, InsetBox[
             RotationBox[
              FrameBox["\<\"51\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.0319088348808545, 1.1105981607141178}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], DiskBox[{1., 0.}, 0.0319088348808545]}, 
            InsetBox[
             RotationBox[
              FrameBox["\<\"6\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0319088348808545, 0.0319088348808545}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{1., 1.0786893258332633}, 0.0319088348808545]}, InsetBox[
             RotationBox[
              FrameBox["\<\"42\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0319088348808545, 1.1105981607141178}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{2., 1.0786893258332633}, 0.0319088348808545]}, InsetBox[
             RotationBox[
              FrameBox["\<\"33\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.0319088348808547, 1.1105981607141178}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 2.1573786516665265}, 0.0319088348808545]}, InsetBox[
             RotationBox[
              FrameBox["\<\"411\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.0319088348808545, 2.1892874865473813}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{1., 2.1573786516665265}, 0.0319088348808545]}, InsetBox[
             RotationBox[
              FrameBox["\<\"321\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0319088348808545, 2.1892874865473813}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 2.1573786516665265}, 0.0319088348808545], InsetBox[
             RotationBox[
              FrameBox["\<\"222\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.0319088348808547, 2.1892874865473813}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 3.23606797749979}, 0.0319088348808545]}, InsetBox[
             RotationBox[
              FrameBox["\<\"3111\"\>",
               Background->RGBColor[1, 1, 0.85],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.0319088348808545, 3.2679768123806445}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{1., 3.23606797749979}, 0.0319088348808545]}, InsetBox[
             RotationBox[
              FrameBox["\<\"2211\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0319088348808545, 3.2679768123806445}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageSize->{500, Automatic}],
    BoxRotation->1.5707963267948966`], ",", 
   RotationBox[
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{{6, 1}, {7}, {5, 2}, {4, 3}, {5, 1, 1}, {4, 2, 1}, {3, 3, 1}, {
          3, 2, 2}, {4, 1, 1, 1}, {3, 2, 1, 1}, {2, 2, 2, 1}}, {{{1, 2}, {3, 
          2}, {4, 2}, {5, 1}, {6, 1}, {7, 1}, {5, 3}, {6, 3}, {8, 3}, {9, 
          5}, {10, 5}, {6, 4}, {7, 4}, {8, 4}, {9, 6}, {10, 6}, {11, 6}, {10, 
          7}, {10, 8}, {11, 8}}, Null}, {
         AspectRatio -> GoldenRatio, GraphHighlight -> {{4, 2, 1}, 
            DirectedEdge[{3, 2, 2}, {4, 3}], {4, 3}, {4, 1, 1, 1}, 
            DirectedEdge[{3, 3, 1}, {4, 3}], 
            DirectedEdge[{5, 1, 1}, {5, 2}], 
            DirectedEdge[{4, 1, 1, 1}, {4, 2, 1}], 
            DirectedEdge[{4, 2, 1}, {5, 2}], {6, 1}, 
            DirectedEdge[{4, 3}, {7}], {3, 2, 2}, 
            DirectedEdge[{3, 3, 1}, {6, 1}], 
            DirectedEdge[{4, 2, 1}, {4, 3}], 
            DirectedEdge[{5, 2}, {7}], 
            DirectedEdge[{6, 1}, {7}], 
            DirectedEdge[{4, 1, 1, 1}, {5, 1, 1}], {7}, {5, 2}, {5, 1, 1}, 
            DirectedEdge[{3, 2, 2}, {5, 2}], 
            DirectedEdge[{5, 1, 1}, {6, 1}], {3, 3, 1}, 
            DirectedEdge[{4, 2, 1}, {6, 1}]}, 
          GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
          "LayeredDigraphEmbedding", ImageSize -> {500, Automatic}, 
          VertexLabels -> {{3, 2, 2} -> Rotate[
              Framed["322", Background -> RGBColor[1, 1, 0.85]], 
              Rational[-1, 2] Pi], {5, 2} -> Rotate[
              Framed["52", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             4, 3} -> Rotate[
              Framed["43", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             5, 1, 1} -> Rotate[
              Framed["511", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {7} -> Rotate[
              Framed["7", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             6, 1} -> Rotate[
              Framed["61", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             3, 2, 1, 1} -> Rotate[
              Framed["3211", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {4, 1, 1, 1} -> Rotate[
              Framed["4111", Background -> RGBColor[1, 1, 0.85]], 
              Rational[-1, 2] Pi], {3, 3, 1} -> Rotate[
              Framed["331", Background -> RGBColor[1, 1, 0.85]], 
              Rational[-1, 2] Pi], {4, 2, 1} -> Rotate[
              Framed["421", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {2, 2, 2, 1} -> Rotate[
              Framed["2221", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi]}, VertexStyle -> {{3, 2, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {4, 1, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {2, 2, 2, 1} -> RGBColor[0, 
              Rational[2, 3], 0]}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 1.618033988749895}, {1., 0.}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 1.618033988749895}, {1., 0.}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 1.618033988749895}, {1., 0.}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 3.23606797749979}, {0., 1.618033988749895}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 3.23606797749979}, {1., 1.618033988749895}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 3.23606797749979}, {0., 1.618033988749895}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 3.23606797749979}, {1., 1.618033988749895}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 3.23606797749979}, {2., 1.618033988749895}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 3.23606797749979}, {0., 1.618033988749895}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 3.23606797749979}, {2., 1.618033988749895}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{3., 3.23606797749979}, {1., 1.618033988749895}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{3., 3.23606797749979}, {2., 1.618033988749895}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.854101966249685}, {0., 3.23606797749979}}, 
             0.042207124675824034`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.854101966249685}, {1., 3.23606797749979}}, 
             0.042207124675824034`]}, 
           ArrowBox[{{2., 4.854101966249685}, {0., 3.23606797749979}}, 
            0.042207124675824034`], 
           ArrowBox[{{2., 4.854101966249685}, {1., 3.23606797749979}}, 
            0.042207124675824034`], 
           ArrowBox[{{2., 4.854101966249685}, {2., 3.23606797749979}}, 
            0.042207124675824034`], 
           ArrowBox[{{2., 4.854101966249685}, {3., 3.23606797749979}}, 
            0.042207124675824034`], 
           ArrowBox[{{3., 4.854101966249685}, {1., 3.23606797749979}}, 
            0.042207124675824034`], 
           ArrowBox[{{3., 4.854101966249685}, {3., 3.23606797749979}}, 
            0.042207124675824034`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 1.618033988749895}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"61\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.042207124675824034, 1.660241113425719}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], DiskBox[{1., 0.}, 0.042207124675824034]}, 
            InsetBox[
             RotationBox[
              FrameBox["\<\"7\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.042207124675824, 0.042207124675824034}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{1., 1.618033988749895}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"52\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.042207124675824, 1.660241113425719}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{2., 1.618033988749895}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"43\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.042207124675824, 1.660241113425719}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 3.23606797749979}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"511\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.042207124675824034, 3.278275102175614}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{1., 3.23606797749979}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"421\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.042207124675824, 3.278275102175614}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{2., 3.23606797749979}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"331\"\>",
               Background->RGBColor[1, 1, 0.85],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.042207124675824, 3.278275102175614}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{3., 3.23606797749979}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"322\"\>",
               Background->RGBColor[1, 1, 0.85],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {3.042207124675824, 3.278275102175614}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{1., 4.854101966249685}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"4111\"\>",
               Background->RGBColor[1, 1, 0.85],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.042207124675824, 4.8963090909255085}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{2., 4.854101966249685}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"3211\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.042207124675824, 4.8963090909255085}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{3., 4.854101966249685}, 0.042207124675824034]}, InsetBox[
             RotationBox[
              FrameBox["\<\"2221\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {3.042207124675824, 4.8963090909255085}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageSize->{500, Automatic}],
    BoxRotation->1.5707963267948966`], ",", 
   RotationBox[
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{{7, 1}, {8}, {6, 2}, {5, 3}, {4, 4}, {6, 1, 1}, {5, 2, 1}, {4, 
          3, 1}, {4, 2, 2}, {3, 3, 2}, {5, 1, 1, 1}, {4, 2, 1, 1}, {3, 3, 1, 
          1}, {3, 2, 2, 1}, {2, 2, 2, 2}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 2}, {
          6, 1}, {7, 1}, {8, 1}, {6, 3}, {7, 3}, {9, 3}, {10, 3}, {11, 6}, {
          12, 6}, {13, 6}, {7, 4}, {8, 4}, {10, 4}, {11, 7}, {12, 7}, {14, 
          7}, {8, 5}, {9, 5}, {12, 8}, {13, 8}, {14, 8}, {12, 9}, {14, 9}, {
          15, 9}, {13, 10}, {14, 10}}, Null}, {
         AspectRatio -> GoldenRatio, GraphHighlight -> {
            DirectedEdge[{4, 2, 1, 1}, {6, 1, 1}], 
            DirectedEdge[{4, 4}, {8}], 
            DirectedEdge[{4, 3, 1}, {4, 4}], 
            DirectedEdge[{5, 2, 1}, {6, 2}], 
            DirectedEdge[{5, 2, 1}, {7, 1}], 
            DirectedEdge[{6, 1, 1}, {6, 2}], {7, 1}, {4, 4}, 
            DirectedEdge[{7, 1}, {8}], {4, 3, 1}, {8}, {5, 2, 1}, 
            DirectedEdge[{5, 2, 1}, {5, 3}], 
            DirectedEdge[{5, 1, 1, 1}, {6, 1, 1}], 
            DirectedEdge[{4, 2, 1, 1}, {4, 3, 1}], 
            DirectedEdge[{4, 2, 1, 1}, {4, 2, 2}], {6, 2}, 
            DirectedEdge[{6, 1, 1}, {7, 1}], {4, 2, 1, 1}, 
            DirectedEdge[{6, 2}, {8}], {6, 1, 1}, 
            DirectedEdge[{4, 2, 2}, {4, 4}], 
            DirectedEdge[{5, 3}, {8}], 
            DirectedEdge[{4, 3, 1}, {7, 1}], 
            DirectedEdge[{4, 2, 1, 1}, {5, 2, 1}], {4, 2, 2}, 
            DirectedEdge[{4, 2, 2}, {6, 2}], 
            DirectedEdge[{5, 1, 1, 1}, {5, 2, 1}], {5, 1, 1, 1}, 
            DirectedEdge[{4, 3, 1}, {5, 3}], {5, 3}}, 
          GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
          "LayeredDigraphEmbedding", ImageSize -> {500, Automatic}, 
          VertexLabels -> {{6, 1, 1} -> Rotate[
              Framed["611", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {8} -> Rotate[
              Framed["8", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             5, 3} -> Rotate[
              Framed["53", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             6, 2} -> Rotate[
              Framed["62", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             5, 2, 1} -> Rotate[
              Framed["521", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {3, 3, 2} -> Rotate[
              Framed["332", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {2, 2, 2, 2} -> Rotate[
              Framed["2222", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {4, 4} -> Rotate[
              Framed["44", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             3, 2, 2, 1} -> Rotate[
              Framed["3221", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {3, 3, 1, 1} -> Rotate[
              Framed["3311", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {4, 2, 1, 1} -> Rotate[
              Framed["4211", Background -> RGBColor[1, 1, 0.85]], 
              Rational[-1, 2] Pi], {7, 1} -> Rotate[
              Framed["71", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             4, 2, 2} -> Rotate[
              Framed["422", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {4, 3, 1} -> Rotate[
              Framed["431", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {5, 1, 1, 1} -> Rotate[
              Framed["5111", Background -> RGBColor[1, 1, 0.85]], 
              Rational[-1, 2] Pi]}, 
          VertexStyle -> {{3, 3, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {4, 2, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {3, 2, 2, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {5, 1, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {2, 2, 2, 2} -> RGBColor[0, 
              Rational[2, 3], 0]}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 2.1573786516665265`}, {1., 0.}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 2.1573786516665265`}, {1., 0.}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 2.1573786516665265`}, {1., 0.}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{3., 2.1573786516665265`}, {1., 0.}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.314757303333053}, {0., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.314757303333053}, {1., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.314757303333053}, {0., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.314757303333053}, {1., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.314757303333053}, {2., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{3., 4.314757303333053}, {0., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{3., 4.314757303333053}, {2., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{3., 4.314757303333053}, {3., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{4., 4.314757303333053}, {1., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{4., 4.314757303333053}, {3., 2.1573786516665265`}}, 
             0.050853335290737586`]}, 
           ArrowBox[{{2., 4.314757303333053}, {1., 2.1573786516665265`}}, 
            0.050853335290737586`], 
           ArrowBox[{{2., 4.314757303333053}, {2., 2.1573786516665265`}}, 
            0.050853335290737586`], 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 6.47213595499958}, {0., 4.314757303333053}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 6.47213595499958}, {1., 4.314757303333053}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 6.47213595499958}, {0., 4.314757303333053}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 6.47213595499958}, {1., 4.314757303333053}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 6.47213595499958}, {3., 4.314757303333053}}, 
             0.050853335290737586`]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 6.47213595499958}, {4., 4.314757303333053}}, 
             0.050853335290737586`]}, 
           ArrowBox[{{1., 6.47213595499958}, {0., 4.314757303333053}}, 
            0.050853335290737586`], 
           ArrowBox[{{1., 6.47213595499958}, {3., 4.314757303333053}}, 
            0.050853335290737586`], 
           ArrowBox[{{1., 6.47213595499958}, {2., 4.314757303333053}}, 
            0.050853335290737586`], 
           ArrowBox[{{3., 6.47213595499958}, {1., 4.314757303333053}}, 
            0.050853335290737586`], 
           ArrowBox[{{3., 6.47213595499958}, {3., 4.314757303333053}}, 
            0.050853335290737586`], 
           ArrowBox[{{3., 6.47213595499958}, {4., 4.314757303333053}}, 
            0.050853335290737586`], 
           ArrowBox[{{3., 6.47213595499958}, {2., 4.314757303333053}}, 
            0.050853335290737586`], 
           ArrowBox[{{4., 6.47213595499958}, {4., 4.314757303333053}}, 
            0.050853335290737586`]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 2.1573786516665265}, 0.050853335290737586]}, 
            InsetBox[
             RotationBox[
              FrameBox["\<\"71\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.050853335290737586, 2.208231986957264}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], DiskBox[{1., 0.}, 0.050853335290737586]}, 
            InsetBox[
             RotationBox[
              FrameBox["\<\"8\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0508533352907377, 0.050853335290737586}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{1., 2.1573786516665265}, 0.050853335290737586]}, 
            InsetBox[
             RotationBox[
              FrameBox["\<\"62\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0508533352907377, 2.208231986957264}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{2., 2.1573786516665265}, 0.050853335290737586]}, 
            InsetBox[
             RotationBox[
              FrameBox["\<\"53\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.0508533352907374, 2.208231986957264}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{3., 2.1573786516665265}, 0.050853335290737586]}, 
            InsetBox[
             RotationBox[
              FrameBox["\<\"44\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {3.0508533352907374, 2.208231986957264}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 4.314757303333053}, 0.050853335290737586]}, InsetBox[
             RotationBox[
              FrameBox["\<\"611\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.050853335290737586, 4.3656106386237905}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{1., 4.314757303333053}, 0.050853335290737586]}, InsetBox[
             RotationBox[
              FrameBox["\<\"521\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0508533352907377, 4.3656106386237905}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{3., 4.314757303333053}, 0.050853335290737586]}, InsetBox[
             RotationBox[
              FrameBox["\<\"431\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {3.0508533352907374, 4.3656106386237905}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{4., 4.314757303333053}, 0.050853335290737586]}, InsetBox[
             RotationBox[
              FrameBox["\<\"422\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {4.050853335290737, 4.3656106386237905}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 4.314757303333053}, 0.050853335290737586], InsetBox[
             RotationBox[
              FrameBox["\<\"332\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.0508533352907374, 4.3656106386237905}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 6.47213595499958}, 0.050853335290737586]}, InsetBox[
             RotationBox[
              FrameBox["\<\"5111\"\>",
               Background->RGBColor[1, 1, 0.85],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.050853335290737586, 6.522989290290317}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{2., 6.47213595499958}, 0.050853335290737586]}, InsetBox[
             RotationBox[
              FrameBox["\<\"4211\"\>",
               Background->RGBColor[1, 1, 0.85],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.0508533352907374, 6.522989290290317}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{1., 6.47213595499958}, 0.050853335290737586]}, InsetBox[
             RotationBox[
              FrameBox["\<\"3311\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0508533352907377, 6.522989290290317}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{3., 6.47213595499958}, 0.050853335290737586]}, InsetBox[
             RotationBox[
              FrameBox["\<\"3221\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {3.0508533352907374, 6.522989290290317}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{4., 6.47213595499958}, 0.050853335290737586]}, InsetBox[
             RotationBox[
              FrameBox["\<\"2222\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {4.050853335290737, 6.522989290290317}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageSize->{500, Automatic}],
    BoxRotation->1.5707963267948966`], ",", 
   RotationBox[
    GraphicsBox[
     NamespaceBox["NetworkGraphics",
      DynamicModuleBox[{Typeset`graph = HoldComplete[
        Graph[{{8, 1}, {9}, {7, 2}, {6, 3}, {5, 4}, {7, 1, 1}, {6, 2, 1}, {5, 
          3, 1}, {4, 4, 1}, {5, 2, 2}, {4, 3, 2}, {6, 1, 1, 1}, {5, 2, 1, 
          1}, {4, 3, 1, 1}, {3, 3, 3}, {4, 2, 2, 1}, {3, 3, 2, 1}, {5, 1, 1, 
          1, 1}, {4, 2, 1, 1, 1}, {3, 3, 1, 1, 1}, {3, 2, 2, 2}, {3, 2, 2, 1, 
          1}, {2, 2, 2, 2, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6, 1}, {7, 
          1}, {8, 1}, {9, 1}, {6, 3}, {7, 3}, {10, 3}, {11, 3}, {12, 6}, {13, 
          6}, {14, 6}, {7, 4}, {8, 4}, {11, 4}, {15, 4}, {12, 7}, {13, 7}, {
          16, 7}, {17, 7}, {18, 12}, {19, 12}, {20, 12}, {8, 5}, {10, 5}, {9, 
          5}, {11, 5}, {13, 8}, {14, 8}, {17, 8}, {13, 10}, {16, 10}, {21, 
          10}, {18, 13}, {19, 13}, {22, 13}, {14, 9}, {16, 9}, {14, 11}, {16, 
          11}, {17, 11}, {21, 11}, {19, 14}, {20, 14}, {22, 14}, {19, 16}, {
          22, 16}, {23, 16}, {17, 15}, {20, 17}, {22, 17}, {22, 21}, {23, 
          21}}, Null}, {AspectRatio -> GoldenRatio, GraphHighlight -> {
            DirectedEdge[{4, 3, 2}, {6, 3}], 
            DirectedEdge[{5, 2, 1, 1}, {6, 2, 1}], {6, 3}, 
            DirectedEdge[{5, 1, 1, 1, 1}, {5, 2, 1, 1}], {4, 3, 2}, 
            DirectedEdge[{6, 2, 1}, {8, 1}], 
            DirectedEdge[{4, 4, 1}, {8, 1}], 
            DirectedEdge[{4, 4, 1}, {5, 4}], 
            DirectedEdge[{6, 1, 1, 1}, {7, 1, 1}], 
            DirectedEdge[{4, 3, 2}, {5, 4}], 
            DirectedEdge[{6, 1, 1, 1}, {6, 2, 1}], 
            DirectedEdge[{6, 2, 1}, {7, 2}], {5, 2, 2}, 
            DirectedEdge[{5, 2, 2}, {7, 2}], 
            DirectedEdge[{7, 1, 1}, {8, 1}], {6, 2, 1}, 
            DirectedEdge[{6, 2, 1}, {6, 3}], {7, 1, 1}, {5, 1, 1, 1, 1}, 
            DirectedEdge[{5, 3, 1}, {8, 1}], 
            DirectedEdge[{5, 2, 1, 1}, {5, 2, 2}], 
            DirectedEdge[{6, 3}, {9}], {9}, 
            DirectedEdge[{4, 3, 2}, {7, 2}], 
            DirectedEdge[{5, 1, 1, 1, 1}, {6, 1, 1, 1}], 
            DirectedEdge[{7, 1, 1}, {7, 2}], {4, 4, 1}, 
            DirectedEdge[{7, 2}, {9}], 
            DirectedEdge[{5, 2, 2}, {5, 4}], {8, 1}, {5, 2, 1, 1}, {7, 2}, {6,
             1, 1, 1}, 
            DirectedEdge[{8, 1}, {9}], {5, 3, 1}, 
            DirectedEdge[{5, 3, 1}, {6, 3}], 
            DirectedEdge[{5, 2, 1, 1}, {7, 1, 1}], 
            DirectedEdge[{5, 4}, {9}], 
            DirectedEdge[{5, 2, 1, 1}, {5, 3, 1}], 
            DirectedEdge[{5, 3, 1}, {5, 4}], {5, 4}}, 
          GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
          "LayeredDigraphEmbedding", ImageSize -> {500, Automatic}, 
          VertexLabels -> {{4, 2, 2, 1} -> Rotate[
              Framed["4221", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {5, 1, 1, 1, 1} -> Rotate[
              Framed["51111", Background -> RGBColor[1, 1, 0.85]], 
              Rational[-1, 2] Pi], {4, 2, 1, 1, 1} -> Rotate[
              Framed["42111", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {4, 3, 2} -> Rotate[
              Framed["432", Background -> RGBColor[1, 1, 0.85]], 
              Rational[-1, 2] Pi], {5, 3, 1} -> Rotate[
              Framed["531", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {6, 1, 1, 1} -> Rotate[
              Framed["6111", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {9} -> Rotate[
              Framed["9", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             5, 2, 2} -> Rotate[
              Framed["522", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {3, 3, 1, 1, 1} -> Rotate[
              Framed["33111", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {5, 4} -> Rotate[
              Framed["54", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             3, 3, 2, 1} -> Rotate[
              Framed["3321", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {5, 2, 1, 1} -> Rotate[
              Framed["5211", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {7, 1, 1} -> Rotate[
              Framed["711", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {7, 2} -> Rotate[
              Framed["72", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             3, 3, 3} -> Rotate[
              Framed["333", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {2, 2, 2, 2, 1} -> Rotate[
              Framed["22221", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {6, 2, 1} -> Rotate[
              Framed["621", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {6, 3} -> Rotate[
              Framed["63", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             4, 3, 1, 1} -> Rotate[
              Framed["4311", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {8, 1} -> Rotate[
              Framed["81", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
             3, 2, 2, 2} -> Rotate[
              Framed["3222", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {3, 2, 2, 1, 1} -> Rotate[
              Framed["32211", Background -> GrayLevel[1]], Rational[-1, 2] 
              Pi], {4, 4, 1} -> Rotate[
              Framed["441", Background -> RGBColor[1, 1, 0.85]], 
              Rational[-1, 2] Pi]}, 
          VertexStyle -> {{4, 2, 2, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {3, 3, 2, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {6, 1, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {3, 2, 2, 2} -> RGBColor[0, 
              Rational[2, 3], 0], {4, 3, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0], {5, 2, 1, 1} -> RGBColor[0, 
              Rational[2, 3], 0]}}]]}, 
       TagBox[GraphicsGroupBox[{
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
           0.026899945602987762`], 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 2.4270509831248424`}, {1., 0.}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 2.4270509831248424`}, {1., 0.}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 2.4270509831248424`}, {1., 0.}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{3., 2.4270509831248424`}, {1., 0.}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-2., 4.854101966249685}, {0., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-2., 4.854101966249685}, {1., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-1., 4.854101966249685}, {0., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-1., 4.854101966249685}, {1., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-1., 4.854101966249685}, {2., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.854101966249685}, {0., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.854101966249685}, {2., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.854101966249685}, {3., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.854101966249685}, {0., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.854101966249685}, {3., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{3., 4.854101966249685}, {1., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{3., 4.854101966249685}, {3., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{4., 4.854101966249685}, {1., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{4., 4.854101966249685}, {2., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{4., 4.854101966249685}, {3., 2.4270509831248424`}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-2., 7.281152949374527}, {-2., 4.854101966249685}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-2., 7.281152949374527}, {-1., 4.854101966249685}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-1., 7.281152949374527}, {-2., 4.854101966249685}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-1., 7.281152949374527}, {-1., 4.854101966249685}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-1., 7.281152949374527}, {0., 4.854101966249685}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-1., 7.281152949374527}, {3., 4.854101966249685}}, 
             0.06455986944717063]}, 
           ArrowBox[{{0., 7.281152949374527}, {-2., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{0., 7.281152949374527}, {0., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{0., 7.281152949374527}, {1., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{0., 7.281152949374527}, {4., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{2., 4.854101966249685}, {2., 2.4270509831248424`}}, 
            0.06455986944717063], 
           ArrowBox[{{2., 7.281152949374527}, {-1., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{2., 7.281152949374527}, {1., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{2., 7.281152949374527}, {3., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{2., 7.281152949374527}, {4., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{1., 7.281152949374527}, {-1., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{1., 7.281152949374527}, {0., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{1., 7.281152949374527}, {4., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{1., 7.281152949374527}, {2., 4.854101966249685}}, 
            0.06455986944717063], 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-2., 9.70820393249937}, {-2., 7.281152949374527}}, 
             0.06455986944717063]}, 
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{-2., 9.70820393249937}, {-1., 7.281152949374527}}, 
             0.06455986944717063]}, 
           ArrowBox[{{-1., 9.70820393249937}, {-2., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{-1., 9.70820393249937}, {-1., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{-1., 9.70820393249937}, {0., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{-1., 9.70820393249937}, {2., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{0., 9.70820393249937}, {-2., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{0., 9.70820393249937}, {0., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{0., 9.70820393249937}, {1., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{3., 7.281152949374527}, {3., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{3., 7.281152949374527}, {4., 4.854101966249685}}, 
            0.06455986944717063], 
           ArrowBox[{{1., 9.70820393249937}, {-1., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{1., 9.70820393249937}, {0., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{1., 9.70820393249937}, {2., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{1., 9.70820393249937}, {1., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{1., 9.70820393249937}, {3., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{2., 9.70820393249937}, {2., 7.281152949374527}}, 
            0.06455986944717063], 
           ArrowBox[{{2., 9.70820393249937}, {3., 7.281152949374527}}, 
            0.06455986944717063]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 2.4270509831248424}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"81\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.06455986944717063, 2.491610852572013}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], DiskBox[{1., 0.}, 0.06455986944717063]}, 
            InsetBox[
             RotationBox[
              FrameBox["\<\"9\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0645598694471707, 0.06455986944717063}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{1., 2.4270509831248424}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"72\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0645598694471707, 2.491610852572013}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{2., 2.4270509831248424}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"63\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.0645598694471707, 2.491610852572013}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{3., 2.4270509831248424}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"54\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {3.0645598694471707, 2.491610852572013}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{-2., 4.854101966249685}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"711\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {-1.9354401305528293, 4.918661835696855}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{-1., 4.854101966249685}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"621\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {-0.9354401305528294, 4.918661835696855}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{0., 4.854101966249685}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"531\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.06455986944717063, 4.918661835696855}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{1., 4.854101966249685}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"441\"\>",
               Background->RGBColor[1, 1, 0.85],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0645598694471707, 4.918661835696855}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{3., 4.854101966249685}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"522\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {3.0645598694471707, 4.918661835696855}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{4., 4.854101966249685}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"432\"\>",
               Background->RGBColor[1, 1, 0.85],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {4.06455986944717, 4.918661835696855}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{-2., 7.281152949374527}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"6111\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {-1.9354401305528293, 7.345712818821697}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{-1., 7.281152949374527}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"5211\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {-0.9354401305528294, 7.345712818821697}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{0., 7.281152949374527}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"4311\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.06455986944717063, 7.345712818821697}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 4.854101966249685}, 0.06455986944717063], InsetBox[
             RotationBox[
              FrameBox["\<\"333\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.0645598694471707, 4.918661835696855}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{2., 7.281152949374527}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"4221\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.0645598694471707, 7.345712818821697}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{1., 7.281152949374527}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"3321\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {1.0645598694471707, 7.345712818821697}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
             Thickness[Large]}], 
             DiskBox[{-2., 9.70820393249937}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"51111\"\>",
               Background->RGBColor[1, 1, 0.85],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {-1.9354401305528293, 9.77276380194654}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{-1., 9.70820393249937}, 0.06455986944717063], InsetBox[
             RotationBox[
              FrameBox["\<\"42111\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {-0.9354401305528294, 9.77276380194654}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{0., 9.70820393249937}, 0.06455986944717063], InsetBox[
             RotationBox[
              FrameBox["\<\"33111\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {0.06455986944717063, 9.77276380194654}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            {RGBColor[0, 
              Rational[2, 3], 0], 
             DiskBox[{3., 7.281152949374527}, 0.06455986944717063]}, InsetBox[
             RotationBox[
              FrameBox["\<\"3222\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {3.0645598694471707, 7.345712818821697}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{1., 9.70820393249937}, 0.06455986944717063], InsetBox[
             RotationBox[
              FrameBox["\<\"32211\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], Offset[{2, 2}, 
             {1.0645598694471707, 9.77276380194654}], ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}, {
            DiskBox[{2., 9.70820393249937}, 0.06455986944717063], InsetBox[
             RotationBox[
              FrameBox["\<\"22221\"\>",
               Background->GrayLevel[1],
               StripOnInput->False],
              BoxRotation->-1.5707963267948966`], 
             Offset[{2, 2}, {2.0645598694471707, 9.77276380194654}], 
             ImageScaled[{0, 0}],
             BaseStyle->"Graphics"]}}}],
        MouseAppearanceTag["NetworkGraphics"]],
       AllowKernelInitialization->False]],
     DefaultBaseStyle->{
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
     FormatType->TraditionalForm,
     FrameTicks->None,
     ImageSize->{500, Automatic}],
    BoxRotation->1.5707963267948966`]}], "}"}]], "Output",
 CellChangeTimes->{{3.782156167743208*^9, 3.782156192954482*^9}, 
   3.7821562236298923`*^9, 3.7821565057647777`*^9, {3.7821566669007506`*^9, 
   3.7821567566713204`*^9}, {3.782156982486738*^9, 3.782156993854271*^9}, 
   3.782158675835272*^9, {3.782223471680962*^9, 3.78222349190425*^9}},
 CellLabel->
  "Out[648]=",ExpressionUUID->"2ba94035-4910-4ff6-96ea-64dde8dbbb83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"coll", "=", "doc7"}], ",", " ", "height", ",", " ", "never", 
     ",", "size", ",", "all"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"never", " ", "=", " ", 
     RowBox[{"CalcNever", "[", "coll", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"height", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Length", ",", "never"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"size", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Total", ",", "never"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"all", "=", 
     RowBox[{"IntegerPartitions", "[", 
      RowBox[{"size", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "height"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Rotate", "[", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"PartitionTypeLattice", "[", "all", "]"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}],
         ",", " ", 
        RowBox[{"VertexLabels", "\[Rule]", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Rule]", 
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Framed", "[", 
                RowBox[{
                 RowBox[{"PartitionTypeLabel", "[", "#", "]"}], ",", " ", 
                 RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}]}], "]"}]}], "&"}], ",", 
           "all"}], "]"}]}], ",", 
        RowBox[{"GraphHighlight", "\[Rule]", 
         RowBox[{"Join", "[", 
          RowBox[{"never", ",", 
           RowBox[{"PartitionTypeLattice", "[", "never", "]"}]}], "]"}]}], 
        " ", ",", 
        RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}]}], "]"}], 
      ",", 
      RowBox[{"Pi", "/", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7821565205652742`*^9, 3.782156599383335*^9}},
 CellLabel->
  "In[624]:=",ExpressionUUID->"e8d7ce28-0e0e-4f97-8fa3-520b05863200"],

Cell[BoxData[
 RotationBox[
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{{6, 1}, {7}, {5, 2}, {4, 3}, {5, 1, 1}, {4, 2, 1}, {3, 3, 1}, {3,
         2, 2}, {4, 1, 1, 1}, {3, 2, 1, 1}, {2, 2, 2, 1}}, {{{1, 2}, {3, 2}, {
        4, 2}, {5, 1}, {6, 1}, {7, 1}, {5, 3}, {6, 3}, {8, 3}, {9, 5}, {10, 
        5}, {6, 4}, {7, 4}, {8, 4}, {9, 6}, {10, 6}, {11, 6}, {10, 7}, {10, 
        8}, {11, 8}}, Null}, {GraphHighlight -> {{4, 2, 1}, 
          DirectedEdge[{3, 2, 2}, {4, 3}], {4, 3}, {4, 1, 1, 1}, 
          DirectedEdge[{3, 3, 1}, {4, 3}], 
          DirectedEdge[{5, 1, 1}, {5, 2}], 
          DirectedEdge[{4, 1, 1, 1}, {4, 2, 1}], 
          DirectedEdge[{4, 2, 1}, {5, 2}], {6, 1}, 
          DirectedEdge[{4, 3}, {7}], {3, 2, 2}, 
          DirectedEdge[{3, 3, 1}, {6, 1}], 
          DirectedEdge[{4, 2, 1}, {4, 3}], 
          DirectedEdge[{5, 2}, {7}], 
          DirectedEdge[{6, 1}, {7}], 
          DirectedEdge[{4, 1, 1, 1}, {5, 1, 1}], {7}, {5, 2}, {5, 1, 1}, 
          DirectedEdge[{3, 2, 2}, {5, 2}], 
          DirectedEdge[{5, 1, 1}, {6, 1}], {3, 3, 1}, 
          DirectedEdge[{4, 2, 1}, {6, 1}]}, GraphHighlightStyle -> {"Thick"}, 
        GraphLayout -> "LayeredDigraphEmbedding", 
        VertexLabels -> {{3, 2, 2} -> Rotate[
            Framed["322", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           5, 2} -> Rotate[
            Framed["52", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {4,
            3} -> Rotate[
            Framed["43", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {5,
            1, 1} -> Rotate[
            Framed["511", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           7} -> Rotate[
            Framed["7", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {6, 
           1} -> Rotate[
            Framed["61", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {3,
            2, 1, 1} -> Rotate[
            Framed["3211", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           4, 1, 1, 1} -> Rotate[
            Framed["4111", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           3, 3, 1} -> Rotate[
            Framed["331", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           4, 2, 1} -> Rotate[
            Framed["421", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           2, 2, 2, 1} -> Rotate[
            Framed["2221", Background -> GrayLevel[1]], Rational[-1, 2] 
            Pi]}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 1.}, {1., 0.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 1.}, {1., 0.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{3., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{3., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
         ArrowBox[{{2., 3.}, {0., 2.}}, 0.030239520958083826`], 
         ArrowBox[{{2., 3.}, {1., 2.}}, 0.030239520958083826`], 
         ArrowBox[{{2., 3.}, {2., 2.}}, 0.030239520958083826`], 
         ArrowBox[{{2., 3.}, {3., 2.}}, 0.030239520958083826`], 
         ArrowBox[{{3., 3.}, {1., 2.}}, 0.030239520958083826`], 
         ArrowBox[{{3., 3.}, {3., 2.}}, 0.030239520958083826`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{0., 1.}, 0.030239520958083826]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"61\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {0.030239520958083826, 1.030239520958084}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{1., 0.}, 0.030239520958083826]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"7\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {1.030239520958084, 0.030239520958083826}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{1., 1.}, 0.030239520958083826]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"52\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{2., 1.}, 0.030239520958083826]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"43\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {2.0302395209580837, 1.030239520958084}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{0., 2.}, 0.030239520958083826]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"511\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {0.030239520958083826, 2.0302395209580837}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{1., 2.}, 0.030239520958083826]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"421\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {1.030239520958084, 2.0302395209580837}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{2., 2.}, 0.030239520958083826]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"331\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], Offset[{2, 2}, 
           {2.0302395209580837, 2.0302395209580837}], ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{3., 2.}, 0.030239520958083826]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"322\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {3.0302395209580837, 2.0302395209580837}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{1., 3.}, 0.030239520958083826]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"4111\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {1.030239520958084, 3.0302395209580837}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.030239520958083826], 
          InsetBox[
           RotationBox[
            FrameBox["\<\"3211\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {2.0302395209580837, 3.0302395209580837}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.030239520958083826], 
          InsetBox[
           RotationBox[
            FrameBox["\<\"2221\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {3.0302395209580837, 3.0302395209580837}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None],
  BoxRotation->1.5707963267948966`]], "Output",
 CellChangeTimes->{{3.782156522113509*^9, 3.7821566002235456`*^9}},
 CellLabel->
  "Out[624]=",ExpressionUUID->"b12896a4-e100-4e9b-a45c-0419f9995833"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"coll", "=", "doc8"}], ",", " ", "height", ",", " ", "never", 
     ",", "size", ",", "all"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"never", " ", "=", " ", 
     RowBox[{"CalcNever", "[", "coll", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"height", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Length", ",", "never"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"size", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Map", "[", 
       RowBox[{"Total", ",", "never"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"all", "=", 
     RowBox[{"IntegerPartitions", "[", 
      RowBox[{"size", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "height"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Rotate", "[", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{
        RowBox[{"PartitionTypeLattice", "[", "all", "]"}], ",", 
        RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}],
         ",", " ", 
        RowBox[{"VertexLabels", "\[Rule]", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "\[Rule]", 
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Framed", "[", 
                RowBox[{
                 RowBox[{"PartitionTypeLabel", "[", "#", "]"}], ",", " ", 
                 RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"-", "Pi"}], "/", "2"}]}], "]"}]}], "&"}], ",", 
           "all"}], "]"}]}], ",", 
        RowBox[{"GraphHighlight", "\[Rule]", 
         RowBox[{"Join", "[", 
          RowBox[{"never", ",", 
           RowBox[{"PartitionTypeLattice", "[", "never", "]"}]}], "]"}]}], 
        " ", ",", 
        RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}]}], "]"}], 
      ",", 
      RowBox[{"Pi", "/", "2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.782156624121558*^9, 3.782156624673587*^9}},
 CellLabel->
  "In[625]:=",ExpressionUUID->"cc57fe2a-0382-423f-8eea-44e9eae07bdc"],

Cell[BoxData[
 RotationBox[
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{{7, 1}, {8}, {6, 2}, {5, 3}, {4, 4}, {6, 1, 1}, {5, 2, 1}, {4, 3,
         1}, {4, 2, 2}, {3, 3, 2}, {5, 1, 1, 1}, {4, 2, 1, 1}, {3, 3, 1, 1}, {
        3, 2, 2, 1}, {2, 2, 2, 2}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6, 
        1}, {7, 1}, {8, 1}, {6, 3}, {7, 3}, {9, 3}, {10, 3}, {11, 6}, {12, 
        6}, {13, 6}, {7, 4}, {8, 4}, {10, 4}, {11, 7}, {12, 7}, {14, 7}, {8, 
        5}, {9, 5}, {12, 8}, {13, 8}, {14, 8}, {12, 9}, {14, 9}, {15, 9}, {13,
         10}, {14, 10}}, Null}, {GraphHighlight -> {
          DirectedEdge[{4, 2, 1, 1}, {6, 1, 1}], 
          DirectedEdge[{4, 4}, {8}], 
          DirectedEdge[{4, 3, 1}, {4, 4}], 
          DirectedEdge[{5, 2, 1}, {6, 2}], 
          DirectedEdge[{5, 2, 1}, {7, 1}], 
          DirectedEdge[{6, 1, 1}, {6, 2}], {7, 1}, {4, 4}, 
          DirectedEdge[{7, 1}, {8}], {4, 3, 1}, {8}, {5, 2, 1}, 
          DirectedEdge[{5, 2, 1}, {5, 3}], 
          DirectedEdge[{5, 1, 1, 1}, {6, 1, 1}], 
          DirectedEdge[{4, 2, 1, 1}, {4, 3, 1}], 
          DirectedEdge[{4, 2, 1, 1}, {4, 2, 2}], {6, 2}, 
          DirectedEdge[{6, 1, 1}, {7, 1}], {4, 2, 1, 1}, 
          DirectedEdge[{6, 2}, {8}], {6, 1, 1}, 
          DirectedEdge[{4, 2, 2}, {4, 4}], 
          DirectedEdge[{5, 3}, {8}], 
          DirectedEdge[{4, 3, 1}, {7, 1}], 
          DirectedEdge[{4, 2, 1, 1}, {5, 2, 1}], {4, 2, 2}, 
          DirectedEdge[{4, 2, 2}, {6, 2}], 
          DirectedEdge[{5, 1, 1, 1}, {5, 2, 1}], {5, 1, 1, 1}, 
          DirectedEdge[{4, 3, 1}, {5, 3}], {5, 3}}, 
        GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
        "LayeredDigraphEmbedding", VertexLabels -> {{6, 1, 1} -> Rotate[
            Framed["611", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           8} -> Rotate[
            Framed["8", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {5, 
           3} -> Rotate[
            Framed["53", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {6,
            2} -> Rotate[
            Framed["62", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {5,
            2, 1} -> Rotate[
            Framed["521", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           3, 3, 2} -> Rotate[
            Framed["332", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           2, 2, 2, 2} -> Rotate[
            Framed["2222", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           4, 4} -> Rotate[
            Framed["44", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {3,
            2, 2, 1} -> Rotate[
            Framed["3221", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           3, 3, 1, 1} -> Rotate[
            Framed["3311", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           4, 2, 1, 1} -> Rotate[
            Framed["4211", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           7, 1} -> Rotate[
            Framed["71", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {4,
            2, 2} -> Rotate[
            Framed["422", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           4, 3, 1} -> Rotate[
            Framed["431", Background -> GrayLevel[1]], Rational[-1, 2] Pi], {
           5, 1, 1, 1} -> Rotate[
            Framed["5111", Background -> GrayLevel[1]], Rational[-1, 2] 
            Pi]}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 1.}, {1., 0.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 1.}, {1., 0.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 1.}, {1., 0.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{3., 1.}, {1., 0.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 2.}, {0., 1.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 2.}, {1., 1.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 2.}, {0., 1.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 2.}, {1., 1.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 2.}, {2., 1.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{3., 2.}, {0., 1.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{3., 2.}, {2., 1.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{3., 2.}, {3., 1.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{4., 2.}, {1., 1.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{4., 2.}, {3., 1.}}, 0.03700564971751412]}, 
         ArrowBox[{{2., 2.}, {1., 1.}}, 0.03700564971751412], 
         ArrowBox[{{2., 2.}, {2., 1.}}, 0.03700564971751412], 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 3.}, {0., 2.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 3.}, {1., 2.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 3.}, {0., 2.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 3.}, {1., 2.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 3.}, {3., 2.}}, 0.03700564971751412]}, 
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 3.}, {4., 2.}}, 0.03700564971751412]}, 
         ArrowBox[{{1., 3.}, {0., 2.}}, 0.03700564971751412], 
         ArrowBox[{{1., 3.}, {3., 2.}}, 0.03700564971751412], 
         ArrowBox[{{1., 3.}, {2., 2.}}, 0.03700564971751412], 
         ArrowBox[{{3., 3.}, {1., 2.}}, 0.03700564971751412], 
         ArrowBox[{{3., 3.}, {3., 2.}}, 0.03700564971751412], 
         ArrowBox[{{3., 3.}, {4., 2.}}, 0.03700564971751412], 
         ArrowBox[{{3., 3.}, {2., 2.}}, 0.03700564971751412], 
         ArrowBox[{{4., 3.}, {4., 2.}}, 0.03700564971751412]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{0., 1.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"71\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {0.03700564971751412, 1.0370056497175142}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{1., 0.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"8\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {1.0370056497175142, 0.03700564971751412}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{1., 1.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"62\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {1.0370056497175142, 1.0370056497175142}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{2., 1.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"53\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {2.037005649717514, 1.0370056497175142}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{3., 1.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"44\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {3.037005649717514, 1.0370056497175142}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{0., 2.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"611\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {0.03700564971751412, 2.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{1., 2.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"521\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {1.0370056497175142, 2.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{3., 2.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"431\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {3.037005649717514, 2.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{4., 2.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"422\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {4.037005649717514, 2.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.03700564971751412], 
          InsetBox[
           RotationBox[
            FrameBox["\<\"332\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {2.037005649717514, 2.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{0., 3.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"5111\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {0.03700564971751412, 3.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          {RGBColor[0.85, 0.5, 0.5], EdgeForm[{Hue[1, 1, 0.7], Opacity[1], 
           Thickness[Large]}], DiskBox[{2., 3.}, 0.03700564971751412]}, 
          InsetBox[
           RotationBox[
            FrameBox["\<\"4211\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {2.037005649717514, 3.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.03700564971751412], 
          InsetBox[
           RotationBox[
            FrameBox["\<\"3311\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {1.0370056497175142, 3.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.03700564971751412], 
          InsetBox[
           RotationBox[
            FrameBox["\<\"3221\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {3.037005649717514, 3.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {DiskBox[{4., 3.}, 0.03700564971751412], 
          InsetBox[
           RotationBox[
            FrameBox["\<\"2222\"\>",
             Background->GrayLevel[1],
             StripOnInput->False],
            BoxRotation->-1.5707963267948966`], 
           Offset[{2, 2}, {4.037005649717514, 3.037005649717514}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None],
  BoxRotation->1.5707963267948966`]], "Output",
 CellChangeTimes->{3.782156625639755*^9},
 CellLabel->
  "Out[625]=",ExpressionUUID->"e54e2e11-a766-44e2-93d1-622088e59f13"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"never", "=", 
     RowBox[{"CalcNever", "[", "doc14", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"PartitionTypeLattice", "[", "never", "]"}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], 
     ",", " ", 
     RowBox[{"VertexLabels", "\[Rule]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", "\[Rule]", 
          RowBox[{"Rotate", "[", 
           RowBox[{
            RowBox[{"PartitionTypeLabel", "[", "#", "]"}], ",", 
            RowBox[{"Pi", "/", "6"}]}], "]"}]}], "&"}], ",", "never"}], 
       "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7821464917952166`*^9, 3.7821465216257505`*^9}, {
  3.7821465952436094`*^9, 3.7821466134596467`*^9}},
 CellLabel->
  "In[607]:=",ExpressionUUID->"233fecf6-126b-4dc0-aaa4-08211a87cfb6"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{13, 1}, {14}, {12, 2}, {11, 3}, {10, 4}, {9, 5}, {8, 6}, {7, 
       7}, {12, 1, 1}, {11, 2, 1}, {10, 3, 1}, {9, 4, 1}, {8, 5, 1}, {7, 6, 
       1}, {10, 2, 2}, {9, 3, 2}, {8, 4, 2}, {7, 5, 2}, {11, 1, 1, 1}, {10, 2,
        1, 1}, {9, 3, 1, 1}, {8, 4, 1, 1}, {7, 5, 1, 1}, {8, 3, 3}, {7, 4, 
       3}, {9, 2, 2, 1}, {8, 3, 2, 1}, {10, 1, 1, 1, 1}, {9, 2, 1, 1, 1}, {8, 
       3, 1, 1, 1}, {9, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6,
        2}, {7, 2}, {8, 2}, {9, 1}, {10, 1}, {11, 1}, {12, 1}, {13, 1}, {14, 
       1}, {9, 3}, {10, 3}, {15, 3}, {16, 3}, {17, 3}, {18, 3}, {19, 9}, {20, 
       9}, {21, 9}, {22, 9}, {23, 9}, {10, 4}, {11, 4}, {16, 4}, {24, 4}, {25,
        4}, {19, 10}, {20, 10}, {26, 10}, {27, 10}, {28, 19}, {29, 19}, {30, 
       19}, {11, 5}, {15, 5}, {12, 5}, {17, 5}, {25, 5}, {20, 11}, {21, 11}, {
       27, 11}, {20, 15}, {26, 15}, {28, 20}, {29, 20}, {31, 28}, {12, 6}, {
       16, 6}, {13, 6}, {18, 6}, {21, 12}, {26, 12}, {22, 12}, {21, 16}, {26, 
       16}, {27, 16}, {29, 21}, {30, 21}, {29, 26}, {31, 29}, {13, 7}, {17, 
       7}, {24, 7}, {14, 7}, {22, 13}, {27, 13}, {23, 13}, {22, 17}, {27, 
       17}, {30, 22}, {27, 24}, {30, 27}, {14, 8}, {18, 8}, {25, 8}, {23, 
       14}, {23, 18}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {{7, 4, 3} -> 
         Rotate["743", Rational[1, 6] Pi], {9, 2, 2, 1} -> 
         Rotate["9221", Rational[1, 6] Pi], {9, 3, 2} -> 
         Rotate["932", Rational[1, 6] Pi], {9, 2, 1, 1, 1} -> 
         Rotate["92111", Rational[1, 6] Pi], {8, 3, 1, 1, 1} -> 
         Rotate["83111", Rational[1, 6] Pi], {7, 5, 2} -> 
         Rotate["752", Rational[1, 6] Pi], {7, 6, 1} -> 
         Rotate["761", Rational[1, 6] Pi], {10, 2, 1, 1} -> 
         Rotate["10211", Rational[1, 6] Pi], {10, 2, 2} -> 
         Rotate["1022", Rational[1, 6] Pi], {8, 3, 3} -> 
         Rotate["833", Rational[1, 6] Pi], {8, 6} -> 
         Rotate["86", Rational[1, 6] Pi], {10, 1, 1, 1, 1} -> 
         Rotate["101111", Rational[1, 6] Pi], {8, 4, 2} -> 
         Rotate["842", Rational[1, 6] Pi], {11, 3} -> 
         Rotate["113", Rational[1, 6] Pi], {9, 4, 1} -> 
         Rotate["941", Rational[1, 6] Pi], {11, 1, 1, 1} -> 
         Rotate["11111", Rational[1, 6] Pi], {7, 5, 1, 1} -> 
         Rotate["7511", Rational[1, 6] Pi], {8, 4, 1, 1} -> 
         Rotate["8411", Rational[1, 6] Pi], {9, 5} -> 
         Rotate["95", Rational[1, 6] Pi], {10, 3, 1} -> 
         Rotate["1031", Rational[1, 6] Pi], {12, 1, 1} -> 
         Rotate["1211", Rational[1, 6] Pi], {13, 1} -> 
         Rotate["131", Rational[1, 6] Pi], {8, 5, 1} -> 
         Rotate["851", Rational[1, 6] Pi], {11, 2, 1} -> 
         Rotate["1121", Rational[1, 6] Pi], {10, 4} -> 
         Rotate["104", Rational[1, 6] Pi], {9, 3, 1, 1} -> 
         Rotate["9311", Rational[1, 6] Pi], {9, 1, 1, 1, 1, 1} -> 
         Rotate["911111", Rational[1, 6] Pi], {7, 7} -> 
         Rotate["77", Rational[1, 6] Pi], {8, 3, 2, 1} -> 
         Rotate["8321", Rational[1, 6] Pi], {12, 2} -> 
         Rotate["122", Rational[1, 6] Pi], {14} -> 
         Rotate["14", Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.015688259112475792`], 
        ArrowBox[{{0., 1.}, {0.9999999999388649, 0.}}, 0.06902834006574406], 
        ArrowBox[{{-0.9999999998152589, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.999999998547821, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.0000000000591456`, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.999999999365258, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.9999999984047747`, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{-2.815926487453112, 1.}, {0.9999999999388649, 0.}}, 
         0.06902834006574406], 
        ArrowBox[{{-1.999999998331873, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{-1.999999998331873, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.4287950256839395`*^-10, 2.}, {0., 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.4287950256839395`*^-10, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.4287950256839395`*^-10, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.999999999042899, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{1.999999999042899, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.999999999042899, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.9999999999726867, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{0.9999999999726867, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.9999999999726867, 2.}, {1.999999999365258, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.9999999981329495`, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{3.9999999981329495`, 2.}, {1.999999999365258, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.9999999981329495`, 2.}, {3.9999999984047747`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.999999996575042, 2.}, {0., 1.}}, 0.06902834006574406], 
        ArrowBox[{{-3.999999996575042, 2.}, {3.9999999984047747`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.999999996575042, 2.}, {-2.815926487453112, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-2.9999999963155233`, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-2.9999999963155233`, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.999999998262126, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.999999998262126, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.999999998262126, 2.}, {1.999999999365258, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{4.999999998276252, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{4.999999998276252, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{4.999999998276252, 2.}, {3.9999999984047747`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-4.999999996668549, 2.}, {-0.9999999998152589, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-4.999999996668549, 2.}, {1.999999999365258, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-4.999999996668549, 2.}, {-2.815926487453112, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.4883594260783184, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.4883594260783184, 3.}, {3.4287950256839395`*^-10, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-1.4883594256354797`, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-1.4883594256354797`, 3.}, {3.4287950256839395`*^-10, 2.}},
          0.06902834006574406], 
        ArrowBox[{{-1.4883594256354797`, 3.}, {1.999999999042899, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-1.4883594256354797`, 3.}, {-2.9999999963155233`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.5116405743401629`, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.5116405743401629`, 3.}, {1.999999999042899, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.5116405743401629`, 3.}, {0.9999999999726867, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{1.5116405743401629`, 3.}, {2.999999998262126, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.5116405744122687`, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.5116405744122687`, 3.}, {0.9999999999726867, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.5116405744122687`, 3.}, {3.9999999981329495`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.5116405744122687`, 3.}, {4.999999998276252, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.160815638663081, 3.}, {-1.999999998331873, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.160815638663081, 3.}, {3.9999999981329495`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.160815638663081, 3.}, {-3.999999996575042, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-3.160815638663081, 3.}, {-4.999999996668549, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{5.999999998686349, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{5.999999998686349, 2.}, {3.9999999984047747`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9999999984775911, 2.}, {2.999999998547821, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9999999984775911, 2.}, {1.0000000000591456`, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9999999984775911, 2.}, {-2.815926487453112, 1.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.5116405743725068, 3.}, {3.4287950256839395`*^-10, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.5116405743725068, 3.}, {0.9999999999726867, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.5116405743725068, 3.}, {-2.9999999963155233`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.5116405743725068, 3.}, {2.999999998262126, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {3.4287950256839395`*^-10, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {1.999999999042899, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {3.9999999981329495`, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {2.999999998262126, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {4.999999998276252, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{3.511640574494237, 3.}, {5.999999998686349, 2.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9570967662338603, 4.}, {-0.4883594260783184, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.9570967662338603, 4.}, {-1.4883594256354797`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.04290323352785208, 4.}, {-0.4883594260783184, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.04290323352785208, 4.}, {-1.4883594256354797`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.04290323352785208, 4.}, {1.5116405743401629`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{0.04290323352785208, 4.}, {0.5116405743725068, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.0117945879682395`, 4.}, {-0.4883594260783184, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.0117945879682395`, 4.}, {1.5116405743401629`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.0117945879682395`, 4.}, {2.5116405744122687`, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{2.0117945879682395`, 4.}, {3.511640574494237, 3.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.47092095124469324`, 5.}, {-0.9570967662338603, 4.}}, 
         0.06902834006574406], 
        ArrowBox[{{-0.47092095124469324`, 5.}, {0.04290323352785208, 4.}}, 
         0.06902834006574406]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"131\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06902834006574406, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999999388649, 0.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"14\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.069028340004609, 0.06902834006574406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9999999998152589, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"122\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9309716597495148, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.999999998547821, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"113\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.069028338613565, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.0000000000591456, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"104\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0690283401248897, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.999999999365258, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"95\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.069028339431002, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9999999984047747, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"86\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.069028338470519, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.815926487453112, 1.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"77\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.746898147387368, 1.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.999999998331873, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"1211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.930971658266129, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4287950256839395*^-10, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"1121\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.06902834040862356, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.999999999042899, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"1031\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.069028339108643, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999999726867, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"941\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0690283400384308, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.9999999981329495, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"851\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.069028338198693, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.999999996575042, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"761\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.930971656509298, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.9999999963155233, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"1022\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.9309716562497794, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.999999998262126, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"932\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.06902833832787, 2.069028340065744}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.999999998276252, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"842\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.069028338341996, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.999999996668549, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"752\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.9309716566028055, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.4883594260783184, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"11111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.41933108601257435, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.4883594256354797, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"10211\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.4193310855697356, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5116405743401629, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"9311\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.580668914405907, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.5116405744122687, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"8411\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.5806689144780126, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.160815638663081, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"7511\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.091787298597337, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.999999998686349, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"833\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.0690283387520925, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9999999984775911, 2.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"743\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.930971658411847, 2.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5116405743725068, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"9221\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.5806689144382509, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.511640574494237, 3.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"8321\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.580668914559981, 3.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9570967662338603, 4.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"101111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.8880684261681162, 4.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.04290323352785208, 4.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"92111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.11193157359359614, 4.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0117945879682395, 4.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"83111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.0808229280339834, 4.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.47092095124469324, 5.}, 0.06902834006574406], InsetBox[
          RotationBox["\<\"911111\"\>",
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.4018926111789492, 5.069028340065744}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{895., Automatic}]], "Output",
 CellChangeTimes->{{3.782146514700582*^9, 3.7821465223542695`*^9}, {
  3.782146598573189*^9, 3.7821466153903484`*^9}},
 CellLabel->"Out[607]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXd4lkX6Nvy8POkJSehdUFGwYcGGq4IdC01AOgRIIPTQe++9EwIhIRAI
TRJ6L6KAIkVxUVl3ZXdxP9afrqyrq5++73HkO2fOuee+n7lL0D/evz4PzPEk
z33PXHNd51XmmplrWvQckZkxqOeIfr171ntlWM+szH69h9d7ecgw/Cn8v0Kh
8ORQ6H8dqh7C59JQiP87/5uG/yP/9P//RXz6SnwKf/3117/88ov4KP62Rn/7
N/EpFl+tyV3Xuu1bLdp0eOHl13qm971w4YL8Pkc/+VfxKQrt9OjVZ9jEBau3
HC+3ce/5UHjRut1deg1YsGiJfGq1fv6a7BctDxg8dN7qt0Mx8umBI6evL9ho
0bHKeLq4pKTfsMniQT6dX3K2feee169f93x6wqQpkxfkiwdj5dMZg8YdOHDA
anul8XT7jl1XFh62nx46cVH26hz30x/Lp2988/3Va//Ev1CM+BH+8vo3ZGyo
nPx+cNbwWSu22K31zZq0a9cuv9bw9qCZWzOnbg4liB/hTXvPrV2XP3DUrFCc
fLt1+y6bdp5YvfVUKLz35Ceh6FPnv2Dv+Pftv3+ULS3UbV6WbR5671O0JZqL
ET9ie03YOG7Jrg27Pli4/uixs5926pqG4ZKPMaOnr5i7YHHBrvcnLt/deVRe
t9H58ZIO9KhGJX7Mjuyhwo1vvx+3uISdpE/c2HlkXpvBOS+nL3s5fWnX0Xn4
I8Z05qO/4Nk9B0907NpLSDlK9JcEfPTK6P/3f3zz6//+P7k73sPLr2Qsf6rL
/Bd7L23Rf1WH4bk9x28ISwpGLSzGAC0K5mgKLopPcd//8NOHf/wbuDV+6a4B
04t6TdzwSp/lTXssKoe2QknP9ljUbuga0jd07vYrf/5/wOe56w6DJsA0s/+g
11q2Ldexe99QQtPnXwK+gUXwZufRSz/9/CvaxFsdhq99pvuCsGgt+umuCzC2
1gNX7zh0Ef1KKuZqes6JTwkYzqXPrm87eGHG6v2gHEODpEA//th+6FpJVRjt
tBqU3WfSplA5McJokP7ZlzfwKH7Da6GwlN53331XVHzo4qWP+Hvc9X/exPdo
Ew1SsmRalEXbKxnLFhUcxdBAvCGts1KHARVgB8OHVCDXY+9/jjZD0VJrl2w8
jiZe7bui18SN5Pu0VfuK9p/Ho6QyjGcj8A2soEH5UfyIJ7/wDx3sPHKRaCb7
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
adEh46nnWoC1DHxhdeimQuXElC4GMbYxQXNnM6sqPSO60JeeN9m7XbmorLUr
HshkqFYqozWEVYxtRB6E6ICrgf5x1uO3qlDRQo3uzrSxjEmoYvioZJPsqV9L
pH7J6vHRaJxXHakohqjnXjWhF1JnoiAYwBcqBsvAe1C4jgPggN+1A/SqrouL
KYZceaY/cEWgPOIYcI7oxiSI0z78SqUndcJSl3dpl6wAnOrULgj/1b4rxi3e
tWTj8Wmr9sKqMs/oyuAnwTJScAg4EF6h1+9/+JnR3ZNPP485mJW3SJ2WvW9m
zn5qEow7IIYPi9Yfw1/6Ttmct/PM199+7xSBpCpJ6xD+Lq6QGZ47L//wyIXF
u09c5vTLiloTNSVQkhebtwJv8ReKA6iBsqtKqzZX5Xu3e2rLv27+d987nyzf
dKKPyNzn9hhXMHjW1nR5AMo5O4KxeL1F6yeeeALs/VWe5Yfr8cgcxrskXEnp
CdfCufkfz+88cnHyij1onMLhe4AruAv0Q8SMBxnpiY81fbSB++KZysNXc3MP
b9xzDr9yDyLvOOH8Bf+BOWRyiqcuLJK6sFx+B3Zz+xFsq94pLfws2KKr74cZ
VkuDJkfAveNUl6oBmnC7i0+phsyC9w7IcSVAGJA73BzkDq4xP4FvYWdAVbIL
/zzJd+bSX/J3noG9f67nkic6zs2YvGlV0am9Jy5LqyHmLAOHjBiQNXrCjKWV
q9bg1r/mfZaDsSOnLn/goce0K5BW1s7XL9lwtOWA7Ifbzmw1MHtB3lF7r5f0
pnEnP/wTWY+vB87cgg9Hz356+Yt/ENNQWbAS8RRcwc2bN/EylArf4C+IuMTP
egZ/jDUh+Kghs7dDeZ/oMKdRm+nPdBOnzqat3o+/GydX4mA2VqxcCeJytp1q
OWAVdJ7gdd/plKqwm2whgl6Vj9i3wSgbz0wbGA8Xb+egaYLxn8rM3+aDY95v
wg1V+E+XH4FQ8TBjI0YUtkVP9UTxAolieedGFPc3AY/4wDsz8CriCWHdZY5a
7D7gDibQkBqA2Dtd3KngJRFfxEoexoMDYBCXtDCag4eOiDzE1b9CN1WtEyde
Ja8qea6sAjx5xWecUdKSDccBa5hLYzaQgE9d+4zonNZv+57jIPs/P/y4aOlK
/LFRowcBBcnZVCcPYdcL95wbMKMIBjt7yzueMxFpjcT5yQ8+uUZhmDMK3nvH
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
\
\>"],ExpressionUUID->"e64cc66a-20cd-40a9-bee5-1cedeef1e093"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"always14", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Variance", "[", "#1", "]"}], "<", 
     RowBox[{"Variance", "[", "#2", "]"}]}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.782143176693857*^9, 3.7821432029292755`*^9}, {
  3.7821433494114957`*^9, 3.782143353715725*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"fe083ca0-8f91-4882-a82f-331243c21fe1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
     "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}],
     "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.782143190727131*^9, 3.7821433548127117`*^9},
 CellLabel->
  "Out[585]=",ExpressionUUID->"5197cf18-a10f-4f33-82dc-a3bb6aa9ea1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Variance", ",", 
   RowBox[{"Sort", "[", 
    RowBox[{
     RowBox[{"IntegerPartitions", "[", 
      RowBox[{"15", ",", 
       RowBox[{"{", "6", "}"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Variance", "[", "#1", "]"}], "<", 
       RowBox[{"Variance", "[", "#2", "]"}]}], "&"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.782143424818863*^9, 3.7821435221060195`*^9}, {
  3.7821435837843943`*^9, 3.782143584015888*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"72eeee8e-11b7-4aa5-b970-bee70013d5f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["3", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["11", "10"], ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["3", "2"], ",", 
   FractionBox["19", "10"], ",", 
   FractionBox["19", "10"], ",", 
   FractionBox["23", "10"], ",", 
   FractionBox["27", "10"], ",", 
   FractionBox["27", "10"], ",", 
   FractionBox["31", "10"], ",", 
   FractionBox["31", "10"], ",", 
   FractionBox["7", "2"], ",", 
   FractionBox["39", "10"], ",", 
   FractionBox["39", "10"], ",", 
   FractionBox["43", "10"], ",", 
   FractionBox["51", "10"], ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["11", "2"], ",", 
   FractionBox["63", "10"], ",", 
   FractionBox["15", "2"], ",", 
   FractionBox["79", "10"], ",", 
   FractionBox["103", "10"], ",", 
   FractionBox["27", "2"]}], "}"}]], "Output",
 CellChangeTimes->{{3.782143436687311*^9, 3.7821434459770427`*^9}, {
   3.7821434820500674`*^9, 3.782143522909964*^9}, 3.7821435849605684`*^9},
 CellLabel->
  "Out[594]=",ExpressionUUID->"59d409b9-e16d-44c7-b9d0-ea4e9880a4cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc14", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7821433920657687`*^9, 3.782143392433256*^9}},
 CellLabel->
  "In[586]:=",ExpressionUUID->"a489b20f-8cf3-4d60-8600-73d2b9fea7df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["14", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["13", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"9"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"10"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"11"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"12"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"13"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"14"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.782143394377179*^9},
 CellLabel->
  "Out[586]=",ExpressionUUID->"54c0f297-d819-4902-b749-6852967e5549"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc13", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "4"}], "}"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "3"}], "}"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "3"}], "}"}], ",", "32276"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "2"}], "}"}], ",", "35754"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "1"}], "}"}], ",", "1935"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "2"}], "}"}], ",", "15918"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "2", ",", "2"}], "}"}], ",", "6269"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3", ",", "1"}], "}"}], ",", "2953"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "2", ",", "1"}], "}"}], ",", "128"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "2", ",", "2"}], "}"}], ",", "520"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "3", ",", "1"}], "}"}], ",", "82"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "2", ",", "1"}], "}"}], ",", "39"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "1", ",", "1"}], "}"}], ",", "1"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "2", ",", "2", ",", "2"}], "}"}], ",", "2"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
       "48833"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
       "49074"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "48833"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
       "49565"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "46633"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "43603"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "28662"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "30044"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "24835"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "12300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "232"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "2005"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "1673"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "111"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "48833"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "49565"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "49565"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "46635"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "30063"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "30045"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "12398"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2065"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1695"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "49565"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "46635"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "30063"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "30045"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2065"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "30063"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "2065"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "30063"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "49566"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "49566"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "49566"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "49566"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "49566"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7780621779882193`*^9, 3.7780622031816683`*^9}},
 CellLabel->
  "In[557]:=",ExpressionUUID->"0c6d4c8d-d57a-4a22-a8dc-858397b35fab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc13", 
  "]"}]], "Input",
 CellChangeTimes->{3.7780622162390294`*^9},
 CellLabel->
  "In[558]:=",ExpressionUUID->"01b86f9e-7939-4463-9289-32f584885e7c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["13", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"9"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"10"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"11"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"12"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"13"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.7780622173815465`*^9, 3.7781631875414686`*^9, 
  3.7782532149109435`*^9, 3.778324657699964*^9, 3.77838113607699*^9, 
  3.778515629668629*^9, 3.778785949399358*^9, 3.77953898960505*^9, 
  3.781875887338855*^9, 3.782143148380273*^9},
 CellLabel->
  "Out[558]=",ExpressionUUID->"26f6515f-fc94-4e0d-a0cb-5f5189c7c2f8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc12", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3"}], "}"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "2"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "3"}], "}"}], ",", "3111"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "2"}], "}"}], ",", "6439"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2", ",", "2"}], "}"}], ",", "2000"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "1"}], "}"}], ",", "947"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2", ",", "2"}], "}"}], ",", "963"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "1"}], "}"}], ",", "213"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "2", ",", "1"}], "}"}], ",", "105"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "1", ",", "1"}], "}"}], ",", "2"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "2", ",", "2"}], "}"}], ",", "10"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "2", ",", "1"}], "}"}], ",", "2"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "7367"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
       "7594"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "7275"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "7502"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "7342"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "3757"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "2216"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "1991"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "169"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "45"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "7367"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "7594"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "7503"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "7503"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3785"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2221"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1997"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "45"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "7503"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "7503"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2221"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "45"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "7503"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "2221"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "7503"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "7595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "7595"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "7595"}], 
      "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.778062086440485*^9, 3.7780620908282623`*^9}},
 CellLabel->
  "In[559]:=",ExpressionUUID->"df0b2c61-b610-4c51-8fad-f2424268438e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc12", 
  "]"}]], "Input",
 CellChangeTimes->{3.7780621007343187`*^9},
 CellLabel->
  "In[560]:=",ExpressionUUID->"11914834-e5f8-43ff-8fae-5e04c331f81c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"9"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"10"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"11"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"12"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.778062102005269*^9, 3.7780621311075087`*^9}, 
   3.7781631880434685`*^9, 3.7782532157849135`*^9, 3.7783246607079983`*^9, 
   3.7783811370910087`*^9, 3.778515631157621*^9, 3.7787859502599945`*^9, 
   3.779538991704192*^9, 3.7818758883045163`*^9, 3.782143149194936*^9},
 CellLabel->
  "Out[560]=",ExpressionUUID->"d2d7467a-e8c3-49fd-8b8a-29b42d5d1583"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc14", 
  "]"}]], "Input",
 CellChangeTimes->{
  3.778054489634141*^9, {3.778054898975244*^9, 3.7780549342318497`*^9}, {
   3.7780549922064085`*^9, 3.7780549967484055`*^9}, {3.7780550615953746`*^9, 
   3.778055073128211*^9}, {3.7780553721611633`*^9, 3.778055380481058*^9}, {
   3.7780554232585974`*^9, 3.778055428448593*^9}},
 CellLabel->
  "In[561]:=",ExpressionUUID->"0f9330e7-22a0-4280-a909-bd997f98b8f0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["14", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["13", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"9"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"10"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"11"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"12"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"13"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"14"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7780544936609364`*^9, 3.778054899720177*^9, {3.7780549352251415`*^9, 
   3.7780549556045074`*^9}, 3.778054999604781*^9, {3.7780550627654457`*^9, 
   3.778055128640813*^9}, {3.7780551604005136`*^9, 3.7780551771723714`*^9}, 
   3.778055207851166*^9, 3.7780553737559605`*^9, 3.7780554295631003`*^9, 
   3.7780555401435566`*^9, 3.7780621322661157`*^9, 3.7781631886004725`*^9, 
   3.7782532165039153`*^9, 3.778324662582081*^9, 3.778381137844022*^9, 
   3.778515632495612*^9, 3.77878595091986*^9, 3.7795389938842735`*^9, 
   3.7818758889675283`*^9, 3.7821431498693075`*^9},
 CellLabel->
  "Out[561]=",ExpressionUUID->"666d9d7d-af2e-4209-874f-611d7e41270f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc11", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3"}], "}"}], ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "2"}], "}"}], ",", "883"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "2"}], "}"}], ",", "785"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "1"}], "}"}], ",", "258"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2", ",", "1"}], "}"}], ",", "61"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "2"}], "}"}], ",", "31"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2", ",", "1"}], "}"}], ",", "16"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "1", ",", "1"}], "}"}], ",", "1"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "1167"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "1248"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "1185"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "1076"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "1040"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "99"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "110"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "39"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "1248"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1077"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1040"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "110"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1077"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "110"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "1077"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "1249"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "1249"}], "}"}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7780486291655083`*^9, 3.7780486334950585`*^9}},
 CellLabel->
  "In[562]:=",ExpressionUUID->"6784165e-5d39-4882-bd4f-db49708d8a17"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc11", 
  "]"}]], "Input",
 CellChangeTimes->{3.7780554441836004`*^9},
 CellLabel->
  "In[563]:=",ExpressionUUID->"41d73613-80a6-452e-817c-e9ba9c142e36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"9"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"10"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"11"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.778055445089515*^9, 3.7780554720939765`*^9}, {
   3.778055515680505*^9, 3.7780555455641823`*^9}, 3.778062132829211*^9, 
   3.778163189091468*^9, 3.7782532172079186`*^9, 3.7783246655597515`*^9, 
   3.7783811386180396`*^9, 3.7785156335596066`*^9, 3.778785951730901*^9, 
   3.7795389959113145`*^9, 3.7818758897885404`*^9, 3.7821431505615406`*^9},
 CellLabel->
  "Out[563]=",ExpressionUUID->"06774b48-0105-4f63-9fd2-f83461ef4ddc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"First", ",", 
    RowBox[{"Select", "[", 
     RowBox[{"doc11", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "1249"}], "&"}]}], 
     "]"}]}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7780486451193657`*^9, 3.7780486509474497`*^9}},
 CellLabel->
  "In[564]:=",ExpressionUUID->"8a433669-35a6-43b8-968e-3c59a24fd4d9"],

Cell[BoxData["11"], "Output",
 CellChangeTimes->{{3.7780486469428873`*^9, 3.7780486517395277`*^9}, 
   3.7780621329664836`*^9, 3.7781631892914686`*^9, 3.7782532174149265`*^9, 
   3.7783246667727647`*^9, 3.7783811387990437`*^9, 3.778515633714604*^9, 
   3.778785951873433*^9, 3.779538996632377*^9, 3.781875889963541*^9, 
   3.782143150766608*^9},
 CellLabel->
  "Out[564]=",ExpressionUUID->"b2ba59c2-1396-45f7-94cb-aa8ec8042957"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc10", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2", ",", "2"}], "}"}], ",", "194"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "1"}], "}"}], ",", "50"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "2", ",", "2"}], "}"}], ",", "62"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", "42"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "1", ",", "1"}], "}"}], ",", "2"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "1"}], "}"}], ",", "1"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "206"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "232"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "232"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "125"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "59"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "233"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "233"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "232"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "125"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "233"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "233"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "125"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "233"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "233"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "233"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "233"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7780486664835877`*^9, 3.778048686934499*^9}},
 CellLabel->
  "In[565]:=",ExpressionUUID->"25fef4c4-12ef-41c4-bea5-2aee96ec2cb4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc10", 
  "]"}]], "Input",
 CellChangeTimes->{3.778055592384562*^9},
 CellLabel->
  "In[566]:=",ExpressionUUID->"b73aba5c-d9d6-4031-ad6b-46e7029cc1b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"9"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"10"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.778055593424488*^9, 3.778062133423522*^9, 
  3.7781631898255944`*^9, 3.778253217955928*^9, 3.7783246697318134`*^9, 
  3.778381139315053*^9, 3.7785156345015993`*^9, 3.778785952617877*^9, 
  3.779538998840084*^9, 3.781875890521583*^9, 3.7821431513168173`*^9},
 CellLabel->
  "Out[566]=",ExpressionUUID->"74a5e30e-aa5f-430a-b453-5f040b4e163c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"First", ",", 
    RowBox[{"Select", "[", 
     RowBox[{"doc10", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "233"}], "&"}]}], 
     "]"}]}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7780486964550023`*^9, 3.7780487022874727`*^9}},
 CellLabel->
  "In[567]:=",ExpressionUUID->"33daa664-d710-44ed-85f5-14353b35bddb"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{{3.7780486973335094`*^9, 3.778048702956745*^9}, 
   3.778062133702634*^9, 3.7781631899744687`*^9, 3.7782532182289248`*^9, 
   3.7783246709868236`*^9, 3.7783811395670595`*^9, 3.778515634686598*^9, 
   3.7787859527450185`*^9, 3.779538999637102*^9, 3.781875890635552*^9, 
   3.7821431515789113`*^9},
 CellLabel->
  "Out[567]=",ExpressionUUID->"3362a235-c230-429d-94e2-41eda1589b31"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc9", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2", ",", "2"}], "}"}], ",", "38"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2", ",", "1"}], "}"}], ",", "24"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "2", ",", "1"}], "}"}], ",", "4"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "1", ",", "1"}], "}"}], ",", "1"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "32"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "10"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "50"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7780487301715584`*^9, 3.77804874694344*^9}},
 CellLabel->
  "In[568]:=",ExpressionUUID->"bc0847d1-f2fc-43c5-9163-21735d9bc281"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Map", "[", 
   RowBox[{"First", ",", 
    RowBox[{"Select", "[", 
     RowBox[{"doc9", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "50"}], "&"}]}], "]"}]}],
    "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7780487563097925`*^9, 3.778048759295961*^9}},
 CellLabel->
  "In[569]:=",ExpressionUUID->"fd12849b-e98d-4900-a1dd-470cebd2f762"],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.778048759906568*^9, 3.7780621339947395`*^9, 
  3.778163190139468*^9, 3.778253218457012*^9, 3.7783246732767997`*^9, 
  3.778381139752062*^9, 3.7785156351125975`*^9, 3.7787859529620275`*^9, 
  3.779539000909647*^9, 3.7818758907756987`*^9, 3.7821431517629557`*^9},
 CellLabel->
  "Out[569]=",ExpressionUUID->"eb877fb6-c090-49fa-a3d1-aa006bed8710"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc9", 
  "]"}]], "Input",
 CellChangeTimes->{3.778055638343407*^9},
 CellLabel->
  "In[570]:=",ExpressionUUID->"89118b45-ed74-4a3a-9b7b-fcfcb3e94611"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"9"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.778055639437208*^9, 3.778062134422924*^9, 
  3.7781631906714687`*^9, 3.778253219079932*^9, 3.7783246751518936`*^9, 
  3.778381140256071*^9, 3.7785156356195946`*^9, 3.7787859534695334`*^9, 
  3.778850416323079*^9, 3.779539002143647*^9, 3.7818758910906057`*^9, 
  3.782143152186379*^9},
 CellLabel->
  "Out[570]=",ExpressionUUID->"c23bf300-8424-4e0e-9a87-9a865d5beabd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc8", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "2"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", "10"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", "8"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", "2"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "11"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "14"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "14"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.77805568470266*^9, 3.7780557031403217`*^9}},
 CellLabel->
  "In[571]:=",ExpressionUUID->"940f25aa-b193-4095-8024-f86a62ff785a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc8", 
  "]"}]], "Input",
 CellChangeTimes->{3.7780557128246946`*^9},
 CellLabel->
  "In[572]:=",ExpressionUUID->"5c5d7310-c8e0-4ad1-9c96-d9ed2f35e28f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.7780557138728*^9, 3.778062135105542*^9, 
  3.77816319112247*^9, 3.778253219718916*^9, 3.7783246782921433`*^9, 
  3.7783811408582287`*^9, 3.77851563614624*^9, 3.7787859542168803`*^9, 
  3.779539003708969*^9, 3.781875891656563*^9, 3.782143152758562*^9},
 CellLabel->
  "Out[572]=",ExpressionUUID->"87506fa4-2040-4846-b39e-914b5a25c201"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc7", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}], ",", "4"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}], ",", "1"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "5"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.778253197941021*^9, 3.7782532114229555`*^9}, 
   3.778253255982155*^9},
 CellLabel->
  "In[573]:=",ExpressionUUID->"86ac5fab-da98-46cf-99fb-cac9a457946b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc7", 
  "]"}]], "Input",
 CellChangeTimes->{3.778253251601123*^9},
 CellLabel->
  "In[574]:=",ExpressionUUID->"ad617b3a-5957-4492-b982-2ea891468fba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.778253259605175*^9, 3.77832468150708*^9, 
  3.778381141338093*^9, 3.7785156369375987`*^9, 3.7787859546073112`*^9, 
  3.7795390060968103`*^9, 3.7818758921095695`*^9, 3.782143153202944*^9},
 CellLabel->
  "Out[574]=",ExpressionUUID->"09ea7ead-0109-4074-82cd-3fee86e33684"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc6", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "2"}], "}"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", "2"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.778253197941021*^9, 3.7782532114229555`*^9}, 
   3.778253255982155*^9, {3.7782534556511016`*^9, 3.7782534849235687`*^9}},
 CellLabel->
  "In[575]:=",ExpressionUUID->"2502712d-8a30-411d-912f-5fb45045c4f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc6", 
  "]"}]], "Input",
 CellChangeTimes->{3.778253251601123*^9, 3.778253492124423*^9},
 CellLabel->
  "In[576]:=",ExpressionUUID->"c003954d-a575-4346-bd2c-fd9d7a09a35e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.778253259605175*^9, 3.7782534938594327`*^9, 
  3.7783246844994307`*^9, 3.778381141898104*^9, 3.778515637388584*^9, 
  3.7787859552813344`*^9, 3.7795390077914395`*^9, 3.781875892515605*^9, 
  3.782143153591264*^9},
 CellLabel->
  "Out[576]=",ExpressionUUID->"003bac09-6b82-42b5-9604-955fe492a927"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc5", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "1"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "1"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7782535135225697`*^9, 3.7782535440141263`*^9}},
 CellLabel->
  "In[577]:=",ExpressionUUID->"2cbc8b5b-6a57-47e2-9852-2396901409f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc5", 
  "]"}]], "Input",
 CellChangeTimes->{3.778253251601123*^9, 3.778253492124423*^9, 
  3.778253524951646*^9},
 CellLabel->
  "In[578]:=",ExpressionUUID->"bf838764-961c-450d-a363-f20d518b1a2f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.778253259605175*^9, 3.7782534938594327`*^9, 
  3.778253547637434*^9, 3.7783246872724705`*^9, 3.7783811423831134`*^9, 
  3.778515637943578*^9, 3.778785955695516*^9, 3.7795390095871058`*^9, 
  3.78187589281658*^9, 3.782143154030488*^9},
 CellLabel->
  "Out[578]=",ExpressionUUID->"61714f88-dec8-4f9e-874a-53efd834dcb1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The following is not based on complete data", "Section",
 CellChangeTimes->{{3.7780723422638254`*^9, 
  3.7780723545805244`*^9}},ExpressionUUID->"63a2bdb8-f72e-4314-98c2-\
f972d739c2e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"doc15", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "3"}], "}"}], ",", "1346"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3", ",", "3"}], "}"}], ",", "1545"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "4", ",", "2"}], "}"}], ",", "888"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "3", ",", "2"}], "}"}], ",", "456"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "4", ",", "1"}], "}"}], ",", "56"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "3", ",", "3"}], "}"}], ",", "187"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "3", ",", "2"}], "}"}], ",", "318"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "4", ",", "1"}], "}"}], ",", "15"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "2", ",", "2"}], "}"}], ",", "28"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "3", ",", "1"}], "}"}], ",", "15"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "3", ",", "2"}], "}"}], ",", "8"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "4", ",", "2", ",", "2"}], "}"}], ",", "3"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3"}], "}"}], ",", 
       "1856"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "3", ",", "2"}], "}"}], ",", 
       "1994"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
       "1994"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
       "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
       "1992"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
       "1959"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
       "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "1951"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
       "1957"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
       "1199"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "879"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "717"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "783"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
       "797"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "634"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "505"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "65"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "38"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "26"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "4", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "5", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "1994"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "2", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "1994"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1992"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "1959"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "1957"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1957"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "893"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "799"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "799"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "797"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "637"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "66"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "1994"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1957"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "893"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "799"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "799"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "637"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
         "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
         "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "1957"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "799"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "799"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "799"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "49"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "1965"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "799"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "1965"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "2000"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "2000"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
          "1"}], "}"}], ",", "2000"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7780700929933453`*^9, 3.7780700995984898`*^9}, 
   3.778162763086213*^9, 3.7781632133302517`*^9},
 CellLabel->
  "In[579]:=",ExpressionUUID->"667a7b46-e08f-4db2-a2c9-202d8d0f6c28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "doc15", 
  "]"}]], "Input",
 CellChangeTimes->{3.778070113608228*^9, 3.7818759320657854`*^9},
 CellLabel->
  "In[580]:=",ExpressionUUID->"a547c68f-e633-4bba-8e8a-93a0350df4e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["15", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["14", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["13", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["13", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"9"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"10"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"11"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"12"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"13"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"14"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"15"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.7780701161957045`*^9, 3.778162768159072*^9, 
  3.7781631916804914`*^9, 3.778253221102913*^9, 3.778324691038516*^9, 
  3.778381143514925*^9, 3.7785156387795725`*^9, 3.778785956809636*^9, 
  3.781875893757592*^9, 3.7818759333067975`*^9, 3.782143154811815*^9},
 CellLabel->
  "Out[580]=",ExpressionUUID->"c9d91793-3ed9-41f3-bf31-b228f53f45bc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"docs15b", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "3"}], "}"}], ",", "2606"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3", ",", "3"}], "}"}], ",", "2929"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "4", ",", "2"}], "}"}], ",", "1706"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "3", ",", "2"}], "}"}], ",", "808"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "4", ",", "1"}], "}"}], ",", "107"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "3", ",", "3"}], "}"}], ",", "373"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "3", ",", "2"}], "}"}], ",", "583"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "4", ",", "1"}], "}"}], ",", "32"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "2", ",", "2"}], "}"}], ",", "47"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "3", ",", "1"}], "}"}], ",", "26"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "3", ",", "2"}], "}"}], ",", "10"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "4", ",", "2", ",", "2"}], "}"}], ",", "3"}], "}"}],
      ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3"}], "}"}], ",", 
       "3539"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "3", ",", "2"}], "}"}], ",", 
       "3812"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
       "3812"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
       "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "2", ",", "1"}], "}"}], ",", 
       "3808"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "2", ",", "2"}], "}"}], ",", 
       "3737"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "3", ",", "1"}], "}"}], ",", 
       "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "3725"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
       "3737"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "4", ",", "1", ",", "1"}], "}"}], ",", 
       "2316"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "1671"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "1330"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "1505"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
       "1521"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "1209"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "961"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "114"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
       "63"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "2", ",", "2", ",", "1"}], "}"}], ",", 
       "80"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "3", ",", "1", ",", "1"}], "}"}], ",", 
       "39"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "4", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
       "22"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "5", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "3812"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "2", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "3812"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "3", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4", ",", "4", ",", "4", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3808"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "3737"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "3737"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "4", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3737"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "5", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1698"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "1532"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "1532"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1521"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1214"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"6", ",", "5", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "116"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "80"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "80"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"7", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "23"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2"}], 
        "}"}], ",", "3812"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
        "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3737"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1698"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1532"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1532"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "1214"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "80"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "80"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", 
         "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
         "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "3737"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "1532"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "1532"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1"}], "}"}], ",", "80"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "1532"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "7", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1"}], "}"}], ",", "80"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "3749"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "6", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1"}], "}"}], ",", "1532"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "5", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "3749"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", "3824"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
       "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
        "}"}], ",", "3824"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
          "1"}], "}"}], ",", "3824"}], "}"}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7782428358932133`*^9, 3.7782428471407223`*^9}},
 CellLabel->
  "In[581]:=",ExpressionUUID->"841c5875-9a89-4904-aadd-836625a0e4df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowAlwaysSometimesNeverFromCountTable", "[", "docs15b", 
  "]"}]], "Input",
 CellChangeTimes->{{3.778242854008278*^9, 3.778242861211605*^9}, {
  3.7782434086412854`*^9, 3.778243411703223*^9}},
 CellLabel->
  "In[582]:=",ExpressionUUID->"875320aa-1272-4928-8fe2-4b8320f59e2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["15", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"1"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["14", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["13", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["13", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"3"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["12", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"4"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["11", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["6", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"5"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["10", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"6"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["9", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False]}}, AutoDelete -> False, 
       GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"7"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["8", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[1, 0, 0], StripOnInput -> False]}, {
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"8"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["7", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"9"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["6", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"10"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["5", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 0, 1], StripOnInput -> False]}, {
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"11"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["4", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"12"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["3", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}, {
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"13"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["2", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"14"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{TagBox[
      GridBox[{{
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False], 
         StyleBox["1", 
          RGBColor[0, 
           Rational[2, 3], 0], Bold, StripOnInput -> False]}}, AutoDelete -> 
       False, GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],"15"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{3.7782434130192833`*^9, 3.778253222139924*^9, 
  3.7783246943705606`*^9, 3.7783811445620923`*^9, 3.7785156397907324`*^9, 
  3.778785957756546*^9, 3.781875894895775*^9, 3.782143156068564*^9},
 CellLabel->
  "Out[582]=",ExpressionUUID->"6ddfbda1-fa82-40d9-8786-d7c562eb614f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"First", ",", "docs15"}], "]"}], ",", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{"First", ",", "docs15b"}], "]"}], ",", "#"}], "]"}]}], 
    "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.778243347128307*^9, 3.7782433934769387`*^9}},
 CellLabel->
  "In[583]:=",ExpressionUUID->"c030a75f-1bb5-42cb-9be7-9fc26cd1d949"],

Cell[BoxData[
 TemplateBox[{
  "Select","normal",
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Select\\\", \
\\\"[\\\", RowBox[{\\\"docs15\\\", \\\",\\\", RowBox[{RowBox[{\\\"!\\\", \
RowBox[{\\\"MemberQ\\\", \\\"[\\\", RowBox[{RowBox[{\\\"First\\\", \
\\\"/@\\\", \\\"docs15b\\\"}], \\\",\\\", \\\"#1\\\"}], \\\"]\\\"}]}], \
\\\"&\\\"}]}], \\\"]\\\"}]\\).\"",2,583,29,27949541384315056190,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7782532224349213`*^9, 3.7783246957615805`*^9, 
  3.7783811449084415`*^9, 3.778515640126602*^9, 3.778785957927891*^9, 
  3.781875895269782*^9, 3.7821431565039663`*^9},
 CellLabel->
  "During evaluation of \
In[583]:=",ExpressionUUID->"82afb6c8-380c-48ac-8947-ce4a705bd6e6"],

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"docs15", ",", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"First", "/@", "docs15b"}], ",", "#1"}], "]"}]}], "&"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.778243386023197*^9, 3.778243394356637*^9}, 
   3.7782532224779196`*^9, 3.778324695809578*^9, 3.778381144949444*^9, 
   3.7785156401615653`*^9, 3.7787859579568133`*^9, 3.7818758953037815`*^9, 
   3.7821431565749702`*^9},
 CellLabel->
  "Out[583]=",ExpressionUUID->"b1c0f08e-253b-4647-b592-5d0f22bef528"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 230, 5, 67, "Section",ExpressionUUID->"27b253af-7c36-4c32-983d-c7ace8444423"],
Cell[813, 29, 8006, 180, 1036, "Input",ExpressionUUID->"bd3b8f86-ec47-41e2-bc2e-5342ee9fad64"],
Cell[8822, 211, 989, 27, 86, "Input",ExpressionUUID->"049f1462-2966-455f-bfb6-c0c1aeb7604f"],
Cell[9814, 240, 475, 11, 28, "Input",ExpressionUUID->"4cf3f82b-05ac-4d84-8d45-8922bc3d18fa"],
Cell[10292, 253, 1120, 30, 124, "Input",ExpressionUUID->"c58460f5-a8cb-4100-96f2-2e623d21dd9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11449, 288, 179, 3, 67, "Section",ExpressionUUID->"61a6b79e-80fe-4ccf-b069-b667dc16ffb1"],
Cell[11631, 293, 174, 3, 34, "Text",ExpressionUUID->"9ff3fec3-5e4a-4e08-b39c-a4949ce62ec3"],
Cell[11808, 298, 19325, 577, 333, "Input",ExpressionUUID->"ec54e9fb-26ac-4b27-b288-f366bbdaf3f6"],
Cell[31136, 877, 501, 10, 28, "Input",ExpressionUUID->"a26867e9-0b97-4b16-9926-484e7197cc99"],
Cell[31640, 889, 265, 6, 28, "Input",ExpressionUUID->"53de919a-eaf5-498d-a3e2-28d045e4686b"],
Cell[CellGroupData[{
Cell[31930, 899, 186, 3, 28, "Input",ExpressionUUID->"fcc684e3-8621-4e79-bfff-55bbbd64924e"],
Cell[32119, 904, 2390, 67, 52, "Output",ExpressionUUID->"9829bbe4-b317-4f31-a3ad-9f52cc097f6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34546, 976, 694, 18, 28, "Input",ExpressionUUID->"1baeca14-a4f7-431e-9791-d05db23bd681"],
Cell[35243, 996, 88952, 1515, 534, 21090, 402, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"01b8dda7-53e1-4bfe-a285-75012b3f8156"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124232, 2516, 294, 7, 28, "Input",ExpressionUUID->"8f75bf03-d9fc-450b-9938-bf89dbf2a545"],
Cell[124529, 2525, 9374, 249, 185, "Output",ExpressionUUID->"455157e3-f775-4d60-833f-6203bbdba668"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133940, 2779, 1272, 34, 67, "Input",ExpressionUUID->"68e5fcb2-2d45-4d26-9d87-8c511f7eef46"],
Cell[135215, 2815, 281763, 4860, 305, 78404, 1526, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5c66f035-a0f8-4953-865a-2961cf1315b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417015, 7680, 360, 8, 28, "Input",ExpressionUUID->"ea24dc15-816c-49cf-8373-cb0a4aef01ac"],
Cell[417378, 7690, 206, 4, 32, "Output",ExpressionUUID->"56429d43-ff72-45bb-ac7b-8c722934f962"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417621, 7699, 189, 5, 28, "Input",ExpressionUUID->"ed1bfcf0-a9dc-41e7-8ec2-647288dfd594"],
Cell[417813, 7706, 288, 10, 46, "Output",ExpressionUUID->"96ad268e-f9d5-45d6-801d-e596ff5dab1d"]
}, Open  ]],
Cell[418116, 7719, 4360, 104, 371, "Input",ExpressionUUID->"dde13837-0b62-4da4-9514-6c2745bdcff8"],
Cell[CellGroupData[{
Cell[422501, 7827, 563, 13, 28, "Input",ExpressionUUID->"9bd35e7b-0eb7-46d2-84b9-e8ebebe76197"],
Cell[423067, 7842, 64224, 1256, 2144, "Output",ExpressionUUID->"2ba94035-4910-4ff6-96ea-64dde8dbbb83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487328, 9103, 2236, 58, 162, "Input",ExpressionUUID->"e8d7ce28-0e0e-4f97-8fa3-520b05863200"],
Cell[489567, 9163, 10422, 210, 379, "Output",ExpressionUUID->"b12896a4-e100-4e9b-a45c-0419f9995833"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500026, 9378, 2234, 58, 162, "Input",ExpressionUUID->"cc57fe2a-0382-423f-8eea-44e9eae07bdc"],
Cell[502263, 9438, 13980, 283, 412, "Output",ExpressionUUID->"e54e2e11-a766-44e2-93d1-622088e59f13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516280, 9726, 976, 25, 67, "Input",ExpressionUUID->"233fecf6-126b-4dc0-aaa4-08211a87cfb6"],
Cell[517259, 9753, 80698, 1380, 458, 21089, 402, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e64cc66a-20cd-40a9-bee5-1cedeef1e093"]
}, Open  ]],
Cell[CellGroupData[{
Cell[597994, 11138, 411, 10, 28, "Input",ExpressionUUID->"fe083ca0-8f91-4882-a82f-331243c21fe1"],
Cell[598408, 11150, 4252, 115, 90, "Output",ExpressionUUID->"5197cf18-a10f-4f33-82dc-a3bb6aa9ea1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[602697, 11270, 581, 16, 28, "Input",ExpressionUUID->"72eeee8e-11b7-4aa5-b970-bee70013d5f4"],
Cell[603281, 11288, 1150, 32, 49, "Output",ExpressionUUID->"59d409b9-e16d-44c7-b9d0-ea4e9880a4cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[604468, 11325, 249, 5, 28, "Input",ExpressionUUID->"a489b20f-8cf3-4d60-8600-73d2b9fea7df"],
Cell[604720, 11332, 82313, 2123, 594, "Output",ExpressionUUID->"54c0f297-d819-4902-b749-6852967e5549"]
}, Open  ]],
Cell[687048, 13458, 13373, 404, 238, "Input",ExpressionUUID->"0c6d4c8d-d57a-4a22-a8dc-858397b35fab"],
Cell[CellGroupData[{
Cell[700446, 13866, 225, 5, 28, "Input",ExpressionUUID->"01b86f9e-7939-4463-9289-32f584885e7c"],
Cell[700674, 13873, 62264, 1599, 504, "Output",ExpressionUUID->"26f6515f-fc94-4e0d-a0cb-5f5189c7c2f8"]
}, Open  ]],
Cell[762953, 15475, 9523, 290, 162, "Input",ExpressionUUID->"df0b2c61-b610-4c51-8fad-f2424268438e"],
Cell[CellGroupData[{
Cell[772501, 15769, 225, 5, 28, "Input",ExpressionUUID->"11914834-e5f8-43ff-8fae-5e04c331f81c"],
Cell[772729, 15776, 46359, 1176, 450, "Output",ExpressionUUID->"d2d7467a-e8c3-49fd-8b8a-29b42d5d1583"]
}, Open  ]],
Cell[CellGroupData[{
Cell[819125, 16957, 480, 9, 28, "Input",ExpressionUUID->"0f9330e7-22a0-4280-a909-bd997f98b8f0"],
Cell[819608, 16968, 82863, 2131, 594, "Output",ExpressionUUID->"666d9d7d-af2e-4209-874f-611d7e41270f"]
}, Open  ]],
Cell[902486, 19102, 6504, 199, 124, "Input",ExpressionUUID->"6784165e-5d39-4882-bd4f-db49708d8a17"],
Cell[CellGroupData[{
Cell[909015, 19305, 225, 5, 28, "Input",ExpressionUUID->"41d73613-80a6-452e-817c-e9ba9c142e36"],
Cell[909243, 19312, 34872, 878, 238, "Output",ExpressionUUID->"06774b48-0105-4f63-9fd2-f83461ef4ddc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[944152, 20195, 461, 13, 28, "Input",ExpressionUUID->"8a433669-35a6-43b8-968e-3c59a24fd4d9"],
Cell[944616, 20210, 428, 7, 32, "Output",ExpressionUUID->"b2ba59c2-1396-45f7-94cb-aa8ec8042957"]
}, Open  ]],
Cell[945059, 20220, 4613, 143, 86, "Input",ExpressionUUID->"25fef4c4-12ef-41c4-bea5-2aee96ec2cb4"],
Cell[CellGroupData[{
Cell[949697, 20367, 223, 5, 28, "Input",ExpressionUUID->"b73aba5c-d9d6-4031-ad6b-46e7029cc1b9"],
Cell[949923, 20374, 26528, 663, 202, "Output",ExpressionUUID->"74a5e30e-aa5f-430a-b453-5f040b4e163c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[976488, 21042, 460, 13, 28, "Input",ExpressionUUID->"33daa664-d710-44ed-85f5-14353b35bddb"],
Cell[976951, 21057, 427, 7, 32, "Output",ExpressionUUID->"3362a235-c230-429d-94e2-41eda1589b31"]
}, Open  ]],
Cell[977393, 21067, 2904, 91, 48, "Input",ExpressionUUID->"bc0847d1-f2fc-43c5-9163-21735d9bc281"],
Cell[CellGroupData[{
Cell[980322, 21162, 454, 13, 28, "Input",ExpressionUUID->"fd12849b-e98d-4900-a1dd-470cebd2f762"],
Cell[980779, 21177, 394, 6, 32, "Output",ExpressionUUID->"eb877fb6-c090-49fa-a3d1-aa006bed8710"]
}, Open  ]],
Cell[CellGroupData[{
Cell[981210, 21188, 222, 5, 28, "Input",ExpressionUUID->"89118b45-ed74-4a3a-9b7b-fcfcb3e94611"],
Cell[981435, 21195, 20218, 502, 166, "Output",ExpressionUUID->"c23bf300-8424-4e0e-9a87-9a865d5beabd"]
}, Open  ]],
Cell[1001668, 21700, 2024, 63, 48, "Input",ExpressionUUID->"940f25aa-b193-4095-8024-f86a62ff785a"],
Cell[CellGroupData[{
Cell[1003717, 21767, 224, 5, 28, "Input",ExpressionUUID->"5c5d7310-c8e0-4ad1-9c96-d9ed2f35e28f"],
Cell[1003944, 21774, 15295, 374, 130, "Output",ExpressionUUID->"87506fa4-2040-4846-b39e-914b5a25c201"]
}, Open  ]],
Cell[1019254, 22151, 1241, 39, 28, "Input",ExpressionUUID->"86ac5fab-da98-46cf-99fb-cac9a457946b"],
Cell[CellGroupData[{
Cell[1020520, 22194, 222, 5, 28, "Input",ExpressionUUID->"ad617b3a-5957-4492-b982-2ea891468fba"],
Cell[1020745, 22201, 11557, 280, 112, "Output",ExpressionUUID->"09ea7ead-0109-4074-82cd-3fee86e33684"]
}, Open  ]],
Cell[1032317, 22484, 929, 27, 28, "Input",ExpressionUUID->"2502712d-8a30-411d-912f-5fb45045c4f3"],
Cell[CellGroupData[{
Cell[1033271, 22515, 244, 5, 28, "Input",ExpressionUUID->"c003954d-a575-4346-bd2c-fd9d7a09a35e"],
Cell[1033518, 22522, 9084, 219, 94, "Output",ExpressionUUID->"003bac09-6b82-42b5-9604-955fe492a927"]
}, Open  ]],
Cell[1042617, 22744, 556, 17, 28, "Input",ExpressionUUID->"2cbc8b5b-6a57-47e2-9852-2396901409f3"],
Cell[CellGroupData[{
Cell[1043198, 22765, 269, 6, 28, "Input",ExpressionUUID->"bf838764-961c-450d-a363-f20d518b1a2f"],
Cell[1043470, 22773, 6825, 162, 76, "Output",ExpressionUUID->"61714f88-dec8-4f9e-874a-53efd834dcb1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050344, 22941, 192, 3, 67, "Section",ExpressionUUID->"63a2bdb8-f72e-4314-98c2-f972d739c2e1"],
Cell[1050539, 22946, 22714, 678, 390, "Input",ExpressionUUID->"667a7b46-e08f-4db2-a2c9-202d8d0f6c28"],
Cell[CellGroupData[{
Cell[1073278, 23628, 247, 5, 28, "Input",ExpressionUUID->"a547c68f-e633-4bba-8e8a-93a0350df4e1"],
Cell[1073528, 23635, 110329, 2862, 720, "Output",ExpressionUUID->"c9d91793-3ed9-41f3-bf31-b228f53f45bc"]
}, Open  ]],
Cell[1183872, 26500, 22690, 677, 390, "Input",ExpressionUUID->"841c5875-9a89-4904-aadd-836625a0e4df"],
Cell[CellGroupData[{
Cell[1206587, 27181, 300, 6, 28, "Input",ExpressionUUID->"875320aa-1272-4928-8fe2-4b8320f59e2d"],
Cell[1206890, 27189, 110260, 2861, 720, "Output",ExpressionUUID->"6ddfbda1-fa82-40d9-8786-d7c562eb614f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1317187, 30055, 480, 14, 28, "Input",ExpressionUUID->"c030a75f-1bb5-42cb-9be7-9fc26cd1d949"],
Cell[1317670, 30071, 795, 15, 23, "Message",ExpressionUUID->"82afb6c8-380c-48ac-8947-ce4a705bd6e6"],
Cell[1318468, 30088, 559, 14, 32, "Output",ExpressionUUID->"b1c0f08e-253b-4647-b592-5d0f22bef528"]
}, Open  ]]
}, Open  ]]
}
]
*)

