(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    546620,      10373]
NotebookOptionsPosition[    541759,      10206]
NotebookOutlinePosition[    542101,      10221]
CellTagsIndexPosition[    542058,      10218]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Length", "[", "deps2", "]"}]], "Input",
 CellChangeTimes->{{3.655973300430564*^9, 3.6559733061677327`*^9}}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.655973307113364*^9, 3.655980135965392*^9, 
  3.6560764075022926`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deps3bis", "=", 
  RowBox[{"ReadList", "[", 
   RowBox[{
   "\"\<d:\\\\grofs\\\\dependencies-more3.txt\>\"", ",", "Expression", ",", 
    "500000"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6559810782299943`*^9, 3.6559810869173775`*^9}, 
   3.6559811617187853`*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,3<->4,3<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,1<->5,3<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,2<->5,2<->4}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,2<->5,4<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,2<->5,1<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,4<->5,3<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,1<->5,2<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,3<->5,3<->4}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,3<->5,4<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,3<->5,1<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{3,4<->5,2<->5}\"\>"}], "}"}], 
           ",", 
           TemplateBox[{"499978"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"5891", ",", "48261", ",", "\<\"{3,2<->7,1<->7}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5891", ",", "48261", ",", "\<\"{3,2<->12,2<->5}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5891", ",", "48261", ",", "\<\"{3,7<->12,5<->7}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5891", ",", "48261", ",", "\<\"{3,5<->12,2<->5}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5891", ",", "48261", ",", "\<\"{3,7<->12,2<->7}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5891", ",", "48261", ",", "\<\"{3,5<->7,3<->7}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5891", ",", "48261", ",", "\<\"{3,5<->7,3<->5}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5892", ",", "48267", ",", "\<\"{3,2<->5,5<->7}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5892", ",", "48267", ",", "\<\"{3,2<->6,2<->9}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5892", ",", "48267", ",", "\<\"{3,2<->6,6<->9}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"5892", ",", "48267", ",", "\<\"{3,5<->6,5<->10}\"\>"}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 59, 29985357946733071426, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 59, 29985357946733071426, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 59, 29985357946733071426, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[59]]], "Output",
 CellChangeTimes->{3.655981089923662*^9, 3.6559811691129327`*^9, 
  3.6560764059932885`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deps2bis", "=", 
  RowBox[{"ReadList", "[", 
   RowBox[{
   "\"\<d:\\\\grofs\\\\dependencies-more2.txt\>\"", ",", "Expression", ",", 
    "100000"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.655980006508305*^9, 3.6559800681784735`*^9}, 
   3.655980107060566*^9}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", "3", ",", "\<\"{2,3<->4,1<->2}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4", ",", "\<\"{2,1<->5,2<->3}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "4", ",", "\<\"{2,2<->5,1<->4}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "5", ",", "\<\"{2,3<->5,1<->4}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "8", ",", "\<\"{2,4<->5,3<->6}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "8", ",", "\<\"{2,2<->6,3<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "9", ",", "\<\"{2,4<->6,3<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "9", ",", "\<\"{2,5<->6,2<->4}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "10", ",", "\<\"{2,3<->4,2<->5}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "10", ",", "\<\"{2,1<->5,3<->6}\"\>"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"4", ",", "10", ",", "\<\"{2,3<->5,1<->4}\"\>"}], "}"}], 
           ",", 
           TemplateBox[{"99978"},
            "OutputSizeLimit`Skeleton",
            DisplayFunction->(FrameBox[
              RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}],
               Background -> GrayLevel[0.75], 
              BaseStyle -> {
               "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
                ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
              ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
              GrayLevel[0.75], RoundingRadius -> 7]& )], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,5<->10,7<->8}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,8<->10,3<->5}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,5<->11,6<->7}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,6<->11,5<->9}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,9<->11,6<->12}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,2<->11,7<->12}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,7<->11,2<->5}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,2<->12,9<->11}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,9<->12,2<->11}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4363", ",", "40071", ",", "\<\"{2,11<->12,2<->9}\"\>"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"4364", ",", "40073", ",", "\<\"{2,4<->6,5<->8}\"\>"}], 
            "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 58, 29985357946733071426, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 58, 29985357946733071426, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 58, 29985357946733071426, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[58]]], "Output",
 CellChangeTimes->{{3.655980051215798*^9, 3.6559800699607697`*^9}, 
   3.6559801094212756`*^9, 3.6560763974822917`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gg", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"Sort", "[", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{
           "deps2", ",", "deps1", ",", "deps3", ",", " ", "deps2bis", ",", 
            " ", "deps3bis"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "<", "1556"}], "&"}]}], "]"}]}], 
       "]"}], "]"}], "]"}], ",", " ", 
    RowBox[{"DirectedEdges", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.65597333621977*^9, 3.6559734097498736`*^9}, {
   3.6559784855462103`*^9, 3.6559785194045963`*^9}, {3.655978557984829*^9, 
   3.6559786289489613`*^9}, {3.6559798521060343`*^9, 3.655979867087798*^9}, {
   3.6559799003547325`*^9, 3.655979952008075*^9}, {3.6559800797258654`*^9, 
   3.6559800896191063`*^9}, {3.6559801859018435`*^9, 
   3.6559802343801966`*^9}, {3.655980265492193*^9, 3.6559802680947375`*^9}, {
   3.65598050015369*^9, 3.6559805003880496`*^9}, {3.6559810949408903`*^9, 
   3.655981135587265*^9}, {3.6559812094684286`*^9, 3.655981210066434*^9}, 
   3.655990573450949*^9}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[CompressedData["
1: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
ZtRM/BfoOt4K
      "], {Null, CompressedData["
1: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

       "]}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
gH1DqbKvSBxSZZTzLywUUadd/iy5RwZ0kbR9HjdVkWbiarInWhap5gsL+7zV
0ai2SvPqQinEeh9KW2euBW+f0S3SvyVg7id59v5PLWCARHI5K4IKjIVH7tBC
03pqd1mGECRv6g7w+HTQ538/Qk5NEF8OvvnZEkSCVFdihp6FIILHg2QrvcmI
qK690UTomGPSb9Oa91FQYOsv9m9unudQI7fpx3sKIjJNrzzbPs977pu5tWaI
itMZflGpNmLgqtt2+mrSUJScaHazXgwu1t94EU4UONc9dL0cLYV8ZVlSGoOM
F9tfv3j8VA7h1vc/9twhQeluro1HrBwC6F43rDJ1Ef9J8SF9mzxipqrsWrZp
Iq55q0idmDJyFaV1E9Yrw2KtKivPWAW/tFdrdVEV0bDFXPrFOxV0lqUuirqu
CMdLg/JBxSpoYvhmLq9WwjNH2ReqDmrYsc3qTiBZA4Yfl3/be08d0if+8g30
auHUi6Zz+89qQy/rAVXhqCZurVkUH3afhJiTUqrORzWg+frAB6kJghfjn0zl
MzRx6Uph62wfCf/u+pV0y2si1q2DslufjEKGjlgx8b7L/KmR5Ald+C33nn86
oomGK/nKrC4SbqhPz90KUIO3IvlM8owunjks49whqeLj6Z2jP6RIiLtXsGBI
Uw1/zklJSt3UgZxcWP6zw+q4te510vohHaSEb+RfUqGGLapnnbzVdLE3m2Sy
5qkmxPKuj0+/IOEI+cjXAF11/AijDtcF6GIN2eEZX4YqQj9vYF4n8KFI2b/5
2IAqlJbpzr4wJUFg/h2/WIgq+voetTTM6kDkSpnT6GdVqCXQz53vICG6LlhU
mE8Lwf/5fHwbpws+qXU9HR6aiLGUzHrhRIK7bNKetm7C/xh85C26pQP6khU6
B76q47/S5hndCh1EBGUOxCmro+jOLsM1JAqsPAK/KStpwtKqJPXKax38J/uy
X8tFDZ2r13VOEb4iJMRHTH+1BoTWjogauJDw+MC0rKyaFlzGDTb/e6OD+Nmz
G6ruED7YZfC8ZzkZ5z8q9C9dqozvuo/WC9hT0LRiWzTtjBwizvxmuWvT0N92
Q2nBJSnsevj4+HAaDZS7saRdo1I49tZ7ziGdhhSZyNNOf+UxcXSp05KbFLi2
jL80PiqLmWi9n4GE7693qOk9TcwhX/KorLg1DQpLS9rk26XRt2dv56VDNIz6
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
7KdMuQ==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{4, 6}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{4, 7}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{4, 8}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{4, 9}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{4, 10}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{4, 11}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{5, 11}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 11}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 12}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 13}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 14}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 15}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 16}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 17}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 18}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 19}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 20}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{6, 21}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{7, 21}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{7, 22}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{8, 22}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{8, 23}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{9, 23}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{9, 24}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{10, 24}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{10, 25}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 25}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 26}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 27}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 28}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 29}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 30}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 31}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 32}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 33}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 34}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 35}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 36}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 37}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{11, 38}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 38}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 39}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 40}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 41}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 42}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 43}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 44}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 45}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 46}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 47}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{12, 48}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{13, 48}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{13, 49}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{13, 50}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{13, 51}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{13, 52}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{13, 53}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{13, 54}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{13, 55}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{14, 55}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{14, 56}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{14, 57}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{14, 58}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{14, 59}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{14, 60}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{14, 61}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{14, 62}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{14, 63}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{15, 63}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{15, 64}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{15, 65}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{15, 66}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{16, 66}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{16, 67}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{16, 68}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{16, 69}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{17, 69}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{17, 70}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{17, 71}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{17, 72}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{17, 73}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{18, 73}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{19, 73}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{20, 73}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{21, 73}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{22, 73}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{22, 74}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{23, 74}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{23, 75}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{24, 75}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 75}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 76}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 77}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 78}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 79}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 80}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 81}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 82}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 83}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 84}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 85}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 86}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 87}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 88}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 89}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 90}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 91}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 92}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 93}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 94}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{25, 95}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 95}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 96}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 97}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 98}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 99}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 100}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 101}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 102}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 103}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 104}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 105}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 106}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 107}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 108}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 109}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 110}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{26, 111}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 111}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 112}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 113}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 114}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 115}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 116}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 117}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 118}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 119}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 120}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 121}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 122}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 123}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 124}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{27, 125}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 125}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 126}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 127}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 128}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 129}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 130}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 131}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 132}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 133}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 134}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 135}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{28, 136}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 136}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 137}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 138}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 139}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 140}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 141}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 142}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 143}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 144}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 145}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 146}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 147}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{29, 148}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 148}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 149}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 150}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 151}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 152}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 153}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 154}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 155}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 156}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 157}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 158}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 159}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 160}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{30, 161}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 161}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 162}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 163}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 164}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 165}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 166}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 167}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 168}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 169}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 170}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 171}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 172}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{31, 173}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{32, 173}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{32, 174}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{32, 175}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{32, 176}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{32, 177}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{32, 178}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{32, 179}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{33, 179}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{33, 180}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{33, 181}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{33, 182}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{33, 183}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{33, 184}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{33, 185}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{33, 186}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{34, 186}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{34, 187}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{34, 188}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{34, 189}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{34, 190}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{34, 191}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{35, 191}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{35, 192}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{35, 193}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{36, 193}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{36, 194}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{37, 194}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{37, 195}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 195}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 196}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 197}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 198}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 199}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 200}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 201}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 202}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 203}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{38, 204}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{39, 204}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{39, 205}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{39, 206}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{39, 207}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{39, 208}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{39, 209}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{39, 210}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{40, 210}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{40, 211}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{40, 212}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{41, 212}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{41, 213}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{42, 213}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{43, 213}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{43, 214}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{44, 214}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{44, 215}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{45, 215}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{46, 215}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{47, 215}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{48, 215}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{48, 216}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{48, 217}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{48, 218}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{48, 219}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{48, 220}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{48, 221}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{49, 221}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{49, 222}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{49, 223}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{49, 224}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{50, 224}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{50, 225}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{50, 226}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{50, 227}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{51, 227}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{51, 228}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{51, 229}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{51, 230}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{52, 230}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{52, 231}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{52, 232}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{52, 233}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{53, 233}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{53, 234}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{53, 235}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{54, 235}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{54, 236}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{55, 236}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{55, 237}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{55, 238}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{55, 239}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{55, 240}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{55, 241}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{56, 241}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{56, 242}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{56, 243}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{57, 243}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{57, 244}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{57, 245}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{58, 245}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{58, 246}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{59, 246}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{59, 247}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{60, 247}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{60, 248}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{61, 248}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{61, 249}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{61, 250}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{62, 250}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{63, 250}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{64, 250}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{64, 251}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{65, 251}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{65, 252}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{66, 252}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{66, 253}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{67, 253}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{67, 254}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{68, 254}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{68, 255}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{69, 255}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{69, 256}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{70, 256}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{70, 257}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{71, 257}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{72, 257}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{73, 257}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{73, 258}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{74, 258}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{74, 259}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 259}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 260}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 261}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 262}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 263}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 264}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 265}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 266}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 267}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 268}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 269}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 270}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 271}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 272}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 273}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 274}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 275}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 276}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 277}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 278}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 279}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 280}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 281}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 282}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 283}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 284}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 285}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{75, 286}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 286}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 287}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 288}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 289}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 290}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 291}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 292}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 293}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 294}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 295}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 296}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 297}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 298}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 299}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 300}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 301}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 302}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 303}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 304}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 305}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 306}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 307}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{76, 308}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 308}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 309}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 310}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 311}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 312}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 313}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 314}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 315}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 316}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 317}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 318}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 319}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 320}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 321}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 322}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 323}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 324}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 325}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 326}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 327}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 328}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{77, 329}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 329}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 330}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 331}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 332}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 333}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 334}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 335}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 336}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 337}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 338}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 339}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 340}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 341}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 342}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 343}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 344}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 345}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{78, 346}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 346}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 347}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 348}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 349}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 350}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 351}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 352}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 353}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 354}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 355}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 356}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 357}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 358}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{79, 359}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 359}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 360}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 361}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 362}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 363}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 364}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 365}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 366}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 367}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 368}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{80, 369}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{81, 369}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{81, 370}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{81, 371}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{81, 372}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{81, 373}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{81, 374}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{82, 374}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{82, 375}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{82, 376}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{82, 377}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{82, 378}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{82, 379}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{82, 380}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{83, 380}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{83, 381}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{83, 382}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{83, 383}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{83, 384}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{83, 385}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{83, 386}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 386}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 387}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 388}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 389}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 390}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 391}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 392}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 393}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 394}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{84, 395}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{85, 395}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{85, 396}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{85, 397}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{85, 398}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{85, 399}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{85, 400}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{85, 401}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{85, 402}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 402}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 403}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 404}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 405}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 406}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 407}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 408}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 409}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 410}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 411}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{86, 412}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 412}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 413}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 414}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 415}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 416}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 417}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 418}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 419}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 420}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{87, 421}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 421}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 422}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 423}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 424}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 425}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 426}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 427}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 428}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 429}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 430}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{88, 431}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 431}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 432}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 433}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 434}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 435}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 436}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 437}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 438}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 439}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 440}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 441}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 442}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{89, 443}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{90, 443}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{90, 444}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{90, 445}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{90, 446}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{90, 447}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{90, 448}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{90, 449}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{90, 450}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{91, 450}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{91, 451}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{91, 452}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{91, 453}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{91, 454}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{91, 455}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{91, 456}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{92, 456}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{92, 457}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{92, 458}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{92, 459}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{92, 460}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{92, 461}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{93, 461}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{93, 462}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{93, 463}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{93, 464}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{93, 465}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{94, 465}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{94, 466}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{94, 467}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{94, 468}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{94, 469}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{94, 470}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{95, 470}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{95, 471}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{95, 472}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{95, 473}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{95, 474}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{95, 475}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{95, 476}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{95, 477}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{96, 477}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{96, 478}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{96, 479}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{96, 480}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{96, 481}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{96, 482}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{96, 483}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{97, 483}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{97, 484}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{97, 485}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{97, 486}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{97, 487}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{97, 488}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{97, 489}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{97, 490}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{97, 491}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{98, 491}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{98, 492}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{98, 493}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{98, 494}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{98, 495}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{98, 496}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{98, 497}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{99, 497}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{99, 498}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{99, 499}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{99, 500}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{99, 501}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{100, 501}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{100, 502}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{100, 503}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{100, 504}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{101, 504}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{101, 505}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{101, 506}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{101, 507}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{101, 508}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{101, 509}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{101, 510}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{102, 510}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{102, 511}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{102, 512}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{102, 513}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{102, 514}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{103, 514}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{103, 515}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{103, 516}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{103, 517}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{104, 517}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{104, 518}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{104, 519}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{104, 520}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{104, 521}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{105, 521}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{105, 522}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{105, 523}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{105, 524}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{105, 525}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{106, 525}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{106, 526}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{106, 527}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{106, 528}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{106, 529}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{106, 530}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{107, 530}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{107, 531}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{107, 532}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{107, 533}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{107, 534}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{108, 534}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{108, 535}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{108, 536}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{108, 537}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{108, 538}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{108, 539}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{109, 539}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{109, 540}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{110, 540}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{110, 541}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{111, 541}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{111, 542}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{111, 543}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{111, 544}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{111, 545}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{111, 546}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{111, 547}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{111, 548}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{111, 549}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{112, 549}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{112, 550}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{112, 551}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{112, 552}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{112, 553}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{112, 554}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{113, 554}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{113, 555}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{113, 556}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{113, 557}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{113, 558}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{114, 558}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{114, 559}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{114, 560}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{114, 561}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{114, 562}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{114, 563}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{115, 563}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{115, 564}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{115, 565}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{115, 566}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{115, 567}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{115, 568}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{116, 568}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{116, 569}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{116, 570}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{116, 571}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{117, 571}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{117, 572}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{117, 573}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{117, 574}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{117, 575}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{118, 575}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{118, 576}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{118, 577}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{118, 578}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{118, 579}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{118, 580}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{119, 580}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{119, 581}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{119, 582}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{119, 583}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{119, 584}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{119, 585}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{120, 585}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{120, 586}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{120, 587}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{120, 588}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{120, 589}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{121, 589}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{121, 590}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{121, 591}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{121, 592}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{122, 592}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{122, 593}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{122, 594}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{123, 594}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{123, 595}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{123, 596}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{124, 596}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{124, 597}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 597}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 598}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 599}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 600}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 601}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 602}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 603}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 604}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 605}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 606}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 607}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{125, 608}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{126, 608}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{126, 609}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{126, 610}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{126, 611}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{126, 612}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{127, 612}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{127, 613}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{127, 614}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{127, 615}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{127, 616}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{127, 617}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{128, 617}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{128, 618}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{128, 619}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{129, 619}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{129, 620}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{129, 621}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{129, 622}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{129, 623}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{129, 624}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{129, 625}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{130, 625}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{130, 626}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{130, 627}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{130, 628}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{130, 629}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{130, 630}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{130, 631}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{130, 632}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{131, 632}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{131, 633}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{131, 634}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{131, 635}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{132, 635}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{132, 636}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{132, 637}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{132, 638}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{133, 638}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{133, 639}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{134, 639}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{134, 640}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{135, 640}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{135, 641}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{136, 641}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{136, 642}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{136, 643}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{136, 644}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{136, 645}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{136, 646}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{137, 646}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{137, 647}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{137, 648}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{137, 649}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{138, 649}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{138, 650}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{138, 651}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{139, 651}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{139, 652}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{139, 653}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{139, 654}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{140, 654}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{140, 655}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{140, 656}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{140, 657}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{140, 658}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{141, 658}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{141, 659}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{141, 660}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{141, 661}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{142, 661}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{142, 662}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{142, 663}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{143, 663}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{143, 664}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{143, 665}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{144, 665}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{144, 666}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{144, 667}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{144, 668}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{145, 668}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{145, 669}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{145, 670}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{146, 670}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{147, 670}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{148, 670}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{148, 671}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{148, 672}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{148, 673}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{148, 674}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{148, 675}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{148, 676}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{148, 677}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{149, 677}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{149, 678}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{149, 679}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{149, 680}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{149, 681}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{149, 682}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{149, 683}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{149, 684}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{150, 684}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{150, 685}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{150, 686}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{151, 686}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{151, 687}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{152, 687}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{152, 688}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{152, 689}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{153, 689}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{153, 690}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{153, 691}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{153, 692}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{153, 693}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{153, 694}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{154, 694}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{154, 695}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{154, 696}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{154, 697}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{154, 698}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{154, 699}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{155, 699}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{155, 700}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{155, 701}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{155, 702}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{155, 703}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{156, 703}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{156, 704}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{156, 705}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{157, 705}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{157, 706}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{157, 707}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{157, 708}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{158, 708}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{158, 709}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{158, 710}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{158, 711}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{159, 711}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{160, 711}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{160, 712}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{161, 712}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{161, 713}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{161, 714}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{161, 715}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{162, 715}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{162, 716}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{163, 716}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{163, 717}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{163, 718}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{163, 719}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{163, 720}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{163, 721}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{164, 721}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{164, 722}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{164, 723}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{164, 724}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{165, 724}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{165, 725}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{165, 726}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{166, 726}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{166, 727}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{167, 727}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{168, 727}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{168, 728}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{168, 729}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{168, 730}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{169, 730}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{169, 731}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{169, 732}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{169, 733}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{170, 733}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{170, 734}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{171, 734}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{172, 734}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{173, 734}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{173, 735}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{173, 736}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{174, 736}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{174, 737}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{174, 738}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{175, 738}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{175, 739}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{175, 740}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{176, 740}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{176, 741}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{176, 742}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{177, 742}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{178, 742}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{178, 743}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{179, 743}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{179, 744}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{179, 745}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{179, 746}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{179, 747}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{179, 748}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{180, 748}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{180, 749}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{180, 750}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{180, 751}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{181, 751}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{181, 752}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{182, 775}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{183, 775}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{184, 775}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{184, 776}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{185, 776}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{185, 777}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{186, 777}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{186, 778}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{186, 779}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{186, 780}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{186, 781}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{187, 781}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{187, 782}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{187, 783}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{187, 784}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{188, 791}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{189, 791}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{189, 793}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{190, 793}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{191, 793}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{191, 794}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{191, 795}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{191, 796}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{192, 796}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{192, 797}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{192, 798}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{193, 798}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{193, 800}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{193, 801}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{194, 801}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 801}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 802}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 803}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 804}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 805}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 806}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 807}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 808}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 809}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 810}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{195, 811}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{196, 811}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{196, 812}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{196, 813}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{196, 814}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{196, 815}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{196, 816}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{197, 816}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{197, 817}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{197, 818}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{197, 819}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{198, 819}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{198, 820}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{198, 821}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{198, 822}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{198, 823}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{198, 824}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{198, 825}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{198, 826}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{198, 827}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{199, 827}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{199, 828}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{200, 828}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{200, 829}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{201, 829}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{201, 830}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{201, 831}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{202, 838}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{202, 840}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{203, 840}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{204, 840}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{205, 840}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{205, 841}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{205, 842}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{206, 842}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{206, 843}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{207, 843}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{207, 844}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{208, 844}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{208, 845}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{209, 845}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{210, 845}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{210, 849}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{210, 850}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{211, 850}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{211, 851}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{211, 852}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{212, 863}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{213, 863}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{213, 865}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{214, 867}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{215, 867}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{215, 869}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{215, 870}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{215, 871}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{215, 872}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{215, 873}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{215, 874}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{215, 875}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{216, 875}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{216, 876}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{216, 877}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{216, 878}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{216, 879}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{216, 880}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{216, 881}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{217, 881}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{217, 882}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{217, 883}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{218, 883}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{218, 884}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{219, 884}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{219, 885}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{219, 886}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{220, 890}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{220, 891}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{221, 891}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{221, 892}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{221, 893}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{222, 893}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{222, 894}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{222, 895}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{222, 896}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{223, 896}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{223, 897}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{223, 898}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{224, 900}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{224, 901}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{224, 902}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{225, 902}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{225, 903}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{225, 904}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{226, 904}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{226, 905}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{226, 906}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{226, 907}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{227, 911}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{227, 914}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{227, 915}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{227, 916}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{228, 916}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{228, 917}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{229, 917}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{229, 918}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{229, 919}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{229, 920}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{230, 927}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{230, 928}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{230, 929}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{230, 930}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{231, 930}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{231, 931}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{231, 932}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{232, 932}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{232, 933}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{232, 934}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{233, 936}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{234, 936}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{234, 937}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{235, 937}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{235, 938}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{235, 939}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{236, 939}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{236, 941}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{236, 942}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{236, 943}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{236, 944}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{236, 945}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{237, 945}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{237, 946}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{237, 947}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{237, 948}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{238, 948}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{238, 949}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{238, 950}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{238, 951}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{239, 951}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{239, 952}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{240, 952}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{240, 953}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{241, 958}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{241, 960}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{241, 961}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{242, 961}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{242, 962}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{243, 964}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{243, 965}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{244, 965}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{244, 966}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{245, 968}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{245, 969}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{246, 973}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{246, 975}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{247, 977}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{247, 978}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{247, 979}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{248, 981}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{248, 983}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{249, 983}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{250, 983}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{251, 983}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{252, 983}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{252, 984}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{253, 988}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{254, 988}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{255, 988}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{256, 988}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{256, 990}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{257, 990}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{257, 991}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{258, 991}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{752, 753}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{753, 754}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{753, 755}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{753, 756}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{756, 757}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{757, 758}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{757, 759}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{757, 760}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{757, 761}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{757, 762}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{762, 763}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{763, 764}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{763, 765}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{763, 766}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{766, 767}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{767, 768}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{767, 769}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{767, 770}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{767, 771}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{771, 772}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{772, 773}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{772, 774}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{772, 775}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{784, 785}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{785, 786}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{785, 787}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{785, 788}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{788, 789}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{789, 790}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{789, 791}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{791, 792}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{798, 799}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{831, 832}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{832, 833}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{833, 834}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{834, 835}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{834, 836}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{836, 837}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{837, 838}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{838, 839}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{845, 846}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{845, 847}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{845, 848}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{852, 853}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{853, 854}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{853, 855}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{855, 856}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{856, 857}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{857, 858}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{858, 859}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{859, 860}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{860, 861}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{861, 862}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{862, 863}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{863, 864}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{865, 866}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{866, 867}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{867, 868}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{886, 887}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{887, 888}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{887, 889}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{887, 890}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{898, 899}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{899, 900}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{907, 908}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{908, 909}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{909, 910}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{910, 911}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{911, 912}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{911, 913}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{920, 921}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{921, 922}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{921, 923}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{923, 924}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{924, 925}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{925, 926}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{926, 927}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{934, 935}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{935, 936}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{939, 940}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{953, 954}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{954, 955}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{955, 956}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{956, 957}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{956, 958}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{958, 959}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{962, 963}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{963, 964}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{966, 967}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{967, 968}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{969, 970}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{970, 971}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{971, 972}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{972, 973}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{973, 974}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{975, 976}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{976, 977}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{979, 980}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{980, 981}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{981, 982}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{984, 985}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{985, 986}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{986, 987}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{987, 988}, 0.09845248962525818]}, 
         {Arrowheads[0.], ArrowBox[{988, 989}, 0.09845248962525818]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.09845248962525818], DiskBox[2, 0.09845248962525818], 
         DiskBox[3, 0.09845248962525818], DiskBox[4, 0.09845248962525818], 
         DiskBox[5, 0.09845248962525818], DiskBox[6, 0.09845248962525818], 
         DiskBox[7, 0.09845248962525818], DiskBox[8, 0.09845248962525818], 
         DiskBox[9, 0.09845248962525818], DiskBox[10, 0.09845248962525818], 
         DiskBox[11, 0.09845248962525818], DiskBox[12, 0.09845248962525818], 
         DiskBox[13, 0.09845248962525818], DiskBox[14, 0.09845248962525818], 
         DiskBox[15, 0.09845248962525818], DiskBox[16, 0.09845248962525818], 
         DiskBox[17, 0.09845248962525818], DiskBox[18, 0.09845248962525818], 
         DiskBox[19, 0.09845248962525818], DiskBox[20, 0.09845248962525818], 
         DiskBox[21, 0.09845248962525818], DiskBox[22, 0.09845248962525818], 
         DiskBox[23, 0.09845248962525818], DiskBox[24, 0.09845248962525818], 
         DiskBox[25, 0.09845248962525818], DiskBox[26, 0.09845248962525818], 
         DiskBox[27, 0.09845248962525818], DiskBox[28, 0.09845248962525818], 
         DiskBox[29, 0.09845248962525818], DiskBox[30, 0.09845248962525818], 
         DiskBox[31, 0.09845248962525818], DiskBox[32, 0.09845248962525818], 
         DiskBox[33, 0.09845248962525818], DiskBox[34, 0.09845248962525818], 
         DiskBox[35, 0.09845248962525818], DiskBox[36, 0.09845248962525818], 
         DiskBox[37, 0.09845248962525818], DiskBox[38, 0.09845248962525818], 
         DiskBox[39, 0.09845248962525818], DiskBox[40, 0.09845248962525818], 
         DiskBox[41, 0.09845248962525818], DiskBox[42, 0.09845248962525818], 
         DiskBox[43, 0.09845248962525818], DiskBox[44, 0.09845248962525818], 
         DiskBox[45, 0.09845248962525818], DiskBox[46, 0.09845248962525818], 
         DiskBox[47, 0.09845248962525818], DiskBox[48, 0.09845248962525818], 
         DiskBox[49, 0.09845248962525818], DiskBox[50, 0.09845248962525818], 
         DiskBox[51, 0.09845248962525818], DiskBox[52, 0.09845248962525818], 
         DiskBox[53, 0.09845248962525818], DiskBox[54, 0.09845248962525818], 
         DiskBox[55, 0.09845248962525818], DiskBox[56, 0.09845248962525818], 
         DiskBox[57, 0.09845248962525818], DiskBox[58, 0.09845248962525818], 
         DiskBox[59, 0.09845248962525818], DiskBox[60, 0.09845248962525818], 
         DiskBox[61, 0.09845248962525818], DiskBox[62, 0.09845248962525818], 
         DiskBox[63, 0.09845248962525818], DiskBox[64, 0.09845248962525818], 
         DiskBox[65, 0.09845248962525818], DiskBox[66, 0.09845248962525818], 
         DiskBox[67, 0.09845248962525818], DiskBox[68, 0.09845248962525818], 
         DiskBox[69, 0.09845248962525818], DiskBox[70, 0.09845248962525818], 
         DiskBox[71, 0.09845248962525818], DiskBox[72, 0.09845248962525818], 
         DiskBox[73, 0.09845248962525818], DiskBox[74, 0.09845248962525818], 
         DiskBox[75, 0.09845248962525818], DiskBox[76, 0.09845248962525818], 
         DiskBox[77, 0.09845248962525818], DiskBox[78, 0.09845248962525818], 
         DiskBox[79, 0.09845248962525818], DiskBox[80, 0.09845248962525818], 
         DiskBox[81, 0.09845248962525818], DiskBox[82, 0.09845248962525818], 
         DiskBox[83, 0.09845248962525818], DiskBox[84, 0.09845248962525818], 
         DiskBox[85, 0.09845248962525818], DiskBox[86, 0.09845248962525818], 
         DiskBox[87, 0.09845248962525818], DiskBox[88, 0.09845248962525818], 
         DiskBox[89, 0.09845248962525818], DiskBox[90, 0.09845248962525818], 
         DiskBox[91, 0.09845248962525818], DiskBox[92, 0.09845248962525818], 
         DiskBox[93, 0.09845248962525818], DiskBox[94, 0.09845248962525818], 
         DiskBox[95, 0.09845248962525818], DiskBox[96, 0.09845248962525818], 
         DiskBox[97, 0.09845248962525818], DiskBox[98, 0.09845248962525818], 
         DiskBox[99, 0.09845248962525818], DiskBox[100, 0.09845248962525818], 
         DiskBox[101, 0.09845248962525818], DiskBox[102, 0.09845248962525818],
          DiskBox[103, 0.09845248962525818], 
         DiskBox[104, 0.09845248962525818], DiskBox[105, 0.09845248962525818],
          DiskBox[106, 0.09845248962525818], 
         DiskBox[107, 0.09845248962525818], DiskBox[108, 0.09845248962525818],
          DiskBox[109, 0.09845248962525818], 
         DiskBox[110, 0.09845248962525818], DiskBox[111, 0.09845248962525818],
          DiskBox[112, 0.09845248962525818], 
         DiskBox[113, 0.09845248962525818], DiskBox[114, 0.09845248962525818],
          DiskBox[115, 0.09845248962525818], 
         DiskBox[116, 0.09845248962525818], DiskBox[117, 0.09845248962525818],
          DiskBox[118, 0.09845248962525818], 
         DiskBox[119, 0.09845248962525818], DiskBox[120, 0.09845248962525818],
          DiskBox[121, 0.09845248962525818], 
         DiskBox[122, 0.09845248962525818], DiskBox[123, 0.09845248962525818],
          DiskBox[124, 0.09845248962525818], 
         DiskBox[125, 0.09845248962525818], DiskBox[126, 0.09845248962525818],
          DiskBox[127, 0.09845248962525818], 
         DiskBox[128, 0.09845248962525818], DiskBox[129, 0.09845248962525818],
          DiskBox[130, 0.09845248962525818], 
         DiskBox[131, 0.09845248962525818], DiskBox[132, 0.09845248962525818],
          DiskBox[133, 0.09845248962525818], 
         DiskBox[134, 0.09845248962525818], DiskBox[135, 0.09845248962525818],
          DiskBox[136, 0.09845248962525818], 
         DiskBox[137, 0.09845248962525818], DiskBox[138, 0.09845248962525818],
          DiskBox[139, 0.09845248962525818], 
         DiskBox[140, 0.09845248962525818], DiskBox[141, 0.09845248962525818],
          DiskBox[142, 0.09845248962525818], 
         DiskBox[143, 0.09845248962525818], DiskBox[144, 0.09845248962525818],
          DiskBox[145, 0.09845248962525818], 
         DiskBox[146, 0.09845248962525818], DiskBox[147, 0.09845248962525818],
          DiskBox[148, 0.09845248962525818], 
         DiskBox[149, 0.09845248962525818], DiskBox[150, 0.09845248962525818],
          DiskBox[151, 0.09845248962525818], 
         DiskBox[152, 0.09845248962525818], DiskBox[153, 0.09845248962525818],
          DiskBox[154, 0.09845248962525818], 
         DiskBox[155, 0.09845248962525818], DiskBox[156, 0.09845248962525818],
          DiskBox[157, 0.09845248962525818], 
         DiskBox[158, 0.09845248962525818], DiskBox[159, 0.09845248962525818],
          DiskBox[160, 0.09845248962525818], 
         DiskBox[161, 0.09845248962525818], DiskBox[162, 0.09845248962525818],
          DiskBox[163, 0.09845248962525818], 
         DiskBox[164, 0.09845248962525818], DiskBox[165, 0.09845248962525818],
          DiskBox[166, 0.09845248962525818], 
         DiskBox[167, 0.09845248962525818], DiskBox[168, 0.09845248962525818],
          DiskBox[169, 0.09845248962525818], 
         DiskBox[170, 0.09845248962525818], DiskBox[171, 0.09845248962525818],
          DiskBox[172, 0.09845248962525818], 
         DiskBox[173, 0.09845248962525818], DiskBox[174, 0.09845248962525818],
          DiskBox[175, 0.09845248962525818], 
         DiskBox[176, 0.09845248962525818], DiskBox[177, 0.09845248962525818],
          DiskBox[178, 0.09845248962525818], 
         DiskBox[179, 0.09845248962525818], DiskBox[180, 0.09845248962525818],
          DiskBox[181, 0.09845248962525818], 
         DiskBox[182, 0.09845248962525818], DiskBox[183, 0.09845248962525818],
          DiskBox[184, 0.09845248962525818], 
         DiskBox[185, 0.09845248962525818], DiskBox[186, 0.09845248962525818],
          DiskBox[187, 0.09845248962525818], 
         DiskBox[188, 0.09845248962525818], DiskBox[189, 0.09845248962525818],
          DiskBox[190, 0.09845248962525818], 
         DiskBox[191, 0.09845248962525818], DiskBox[192, 0.09845248962525818],
          DiskBox[193, 0.09845248962525818], 
         DiskBox[194, 0.09845248962525818], DiskBox[195, 0.09845248962525818],
          DiskBox[196, 0.09845248962525818], 
         DiskBox[197, 0.09845248962525818], DiskBox[198, 0.09845248962525818],
          DiskBox[199, 0.09845248962525818], 
         DiskBox[200, 0.09845248962525818], DiskBox[201, 0.09845248962525818],
          DiskBox[202, 0.09845248962525818], 
         DiskBox[203, 0.09845248962525818], DiskBox[204, 0.09845248962525818],
          DiskBox[205, 0.09845248962525818], 
         DiskBox[206, 0.09845248962525818], DiskBox[207, 0.09845248962525818],
          DiskBox[208, 0.09845248962525818], 
         DiskBox[209, 0.09845248962525818], DiskBox[210, 0.09845248962525818],
          DiskBox[211, 0.09845248962525818], 
         DiskBox[212, 0.09845248962525818], DiskBox[213, 0.09845248962525818],
          DiskBox[214, 0.09845248962525818], 
         DiskBox[215, 0.09845248962525818], DiskBox[216, 0.09845248962525818],
          DiskBox[217, 0.09845248962525818], 
         DiskBox[218, 0.09845248962525818], DiskBox[219, 0.09845248962525818],
          DiskBox[220, 0.09845248962525818], 
         DiskBox[221, 0.09845248962525818], DiskBox[222, 0.09845248962525818],
          DiskBox[223, 0.09845248962525818], 
         DiskBox[224, 0.09845248962525818], DiskBox[225, 0.09845248962525818],
          DiskBox[226, 0.09845248962525818], 
         DiskBox[227, 0.09845248962525818], DiskBox[228, 0.09845248962525818],
          DiskBox[229, 0.09845248962525818], 
         DiskBox[230, 0.09845248962525818], DiskBox[231, 0.09845248962525818],
          DiskBox[232, 0.09845248962525818], 
         DiskBox[233, 0.09845248962525818], DiskBox[234, 0.09845248962525818],
          DiskBox[235, 0.09845248962525818], 
         DiskBox[236, 0.09845248962525818], DiskBox[237, 0.09845248962525818],
          DiskBox[238, 0.09845248962525818], 
         DiskBox[239, 0.09845248962525818], DiskBox[240, 0.09845248962525818],
          DiskBox[241, 0.09845248962525818], 
         DiskBox[242, 0.09845248962525818], DiskBox[243, 0.09845248962525818],
          DiskBox[244, 0.09845248962525818], 
         DiskBox[245, 0.09845248962525818], DiskBox[246, 0.09845248962525818],
          DiskBox[247, 0.09845248962525818], 
         DiskBox[248, 0.09845248962525818], DiskBox[249, 0.09845248962525818],
          DiskBox[250, 0.09845248962525818], 
         DiskBox[251, 0.09845248962525818], DiskBox[252, 0.09845248962525818],
          DiskBox[253, 0.09845248962525818], 
         DiskBox[254, 0.09845248962525818], DiskBox[255, 0.09845248962525818],
          DiskBox[256, 0.09845248962525818], 
         DiskBox[257, 0.09845248962525818], DiskBox[258, 0.09845248962525818],
          DiskBox[259, 0.09845248962525818], 
         DiskBox[260, 0.09845248962525818], DiskBox[261, 0.09845248962525818],
          DiskBox[262, 0.09845248962525818], 
         DiskBox[263, 0.09845248962525818], DiskBox[264, 0.09845248962525818],
          DiskBox[265, 0.09845248962525818], 
         DiskBox[266, 0.09845248962525818], DiskBox[267, 0.09845248962525818],
          DiskBox[268, 0.09845248962525818], 
         DiskBox[269, 0.09845248962525818], DiskBox[270, 0.09845248962525818],
          DiskBox[271, 0.09845248962525818], 
         DiskBox[272, 0.09845248962525818], DiskBox[273, 0.09845248962525818],
          DiskBox[274, 0.09845248962525818], 
         DiskBox[275, 0.09845248962525818], DiskBox[276, 0.09845248962525818],
          DiskBox[277, 0.09845248962525818], 
         DiskBox[278, 0.09845248962525818], DiskBox[279, 0.09845248962525818],
          DiskBox[280, 0.09845248962525818], 
         DiskBox[281, 0.09845248962525818], DiskBox[282, 0.09845248962525818],
          DiskBox[283, 0.09845248962525818], 
         DiskBox[284, 0.09845248962525818], DiskBox[285, 0.09845248962525818],
          DiskBox[286, 0.09845248962525818], 
         DiskBox[287, 0.09845248962525818], DiskBox[288, 0.09845248962525818],
          DiskBox[289, 0.09845248962525818], 
         DiskBox[290, 0.09845248962525818], DiskBox[291, 0.09845248962525818],
          DiskBox[292, 0.09845248962525818], 
         DiskBox[293, 0.09845248962525818], DiskBox[294, 0.09845248962525818],
          DiskBox[295, 0.09845248962525818], 
         DiskBox[296, 0.09845248962525818], DiskBox[297, 0.09845248962525818],
          DiskBox[298, 0.09845248962525818], 
         DiskBox[299, 0.09845248962525818], DiskBox[300, 0.09845248962525818],
          DiskBox[301, 0.09845248962525818], 
         DiskBox[302, 0.09845248962525818], DiskBox[303, 0.09845248962525818],
          DiskBox[304, 0.09845248962525818], 
         DiskBox[305, 0.09845248962525818], DiskBox[306, 0.09845248962525818],
          DiskBox[307, 0.09845248962525818], 
         DiskBox[308, 0.09845248962525818], DiskBox[309, 0.09845248962525818],
          DiskBox[310, 0.09845248962525818], 
         DiskBox[311, 0.09845248962525818], DiskBox[312, 0.09845248962525818],
          DiskBox[313, 0.09845248962525818], 
         DiskBox[314, 0.09845248962525818], DiskBox[315, 0.09845248962525818],
          DiskBox[316, 0.09845248962525818], 
         DiskBox[317, 0.09845248962525818], DiskBox[318, 0.09845248962525818],
          DiskBox[319, 0.09845248962525818], 
         DiskBox[320, 0.09845248962525818], DiskBox[321, 0.09845248962525818],
          DiskBox[322, 0.09845248962525818], 
         DiskBox[323, 0.09845248962525818], DiskBox[324, 0.09845248962525818],
          DiskBox[325, 0.09845248962525818], 
         DiskBox[326, 0.09845248962525818], DiskBox[327, 0.09845248962525818],
          DiskBox[328, 0.09845248962525818], 
         DiskBox[329, 0.09845248962525818], DiskBox[330, 0.09845248962525818],
          DiskBox[331, 0.09845248962525818], 
         DiskBox[332, 0.09845248962525818], DiskBox[333, 0.09845248962525818],
          DiskBox[334, 0.09845248962525818], 
         DiskBox[335, 0.09845248962525818], DiskBox[336, 0.09845248962525818],
          DiskBox[337, 0.09845248962525818], 
         DiskBox[338, 0.09845248962525818], DiskBox[339, 0.09845248962525818],
          DiskBox[340, 0.09845248962525818], 
         DiskBox[341, 0.09845248962525818], DiskBox[342, 0.09845248962525818],
          DiskBox[343, 0.09845248962525818], 
         DiskBox[344, 0.09845248962525818], DiskBox[345, 0.09845248962525818],
          DiskBox[346, 0.09845248962525818], 
         DiskBox[347, 0.09845248962525818], DiskBox[348, 0.09845248962525818],
          DiskBox[349, 0.09845248962525818], 
         DiskBox[350, 0.09845248962525818], DiskBox[351, 0.09845248962525818],
          DiskBox[352, 0.09845248962525818], 
         DiskBox[353, 0.09845248962525818], DiskBox[354, 0.09845248962525818],
          DiskBox[355, 0.09845248962525818], 
         DiskBox[356, 0.09845248962525818], DiskBox[357, 0.09845248962525818],
          DiskBox[358, 0.09845248962525818], 
         DiskBox[359, 0.09845248962525818], DiskBox[360, 0.09845248962525818],
          DiskBox[361, 0.09845248962525818], 
         DiskBox[362, 0.09845248962525818], DiskBox[363, 0.09845248962525818],
          DiskBox[364, 0.09845248962525818], 
         DiskBox[365, 0.09845248962525818], DiskBox[366, 0.09845248962525818],
          DiskBox[367, 0.09845248962525818], 
         DiskBox[368, 0.09845248962525818], DiskBox[369, 0.09845248962525818],
          DiskBox[370, 0.09845248962525818], 
         DiskBox[371, 0.09845248962525818], DiskBox[372, 0.09845248962525818],
          DiskBox[373, 0.09845248962525818], 
         DiskBox[374, 0.09845248962525818], DiskBox[375, 0.09845248962525818],
          DiskBox[376, 0.09845248962525818], 
         DiskBox[377, 0.09845248962525818], DiskBox[378, 0.09845248962525818],
          DiskBox[379, 0.09845248962525818], 
         DiskBox[380, 0.09845248962525818], DiskBox[381, 0.09845248962525818],
          DiskBox[382, 0.09845248962525818], 
         DiskBox[383, 0.09845248962525818], DiskBox[384, 0.09845248962525818],
          DiskBox[385, 0.09845248962525818], 
         DiskBox[386, 0.09845248962525818], DiskBox[387, 0.09845248962525818],
          DiskBox[388, 0.09845248962525818], 
         DiskBox[389, 0.09845248962525818], DiskBox[390, 0.09845248962525818],
          DiskBox[391, 0.09845248962525818], 
         DiskBox[392, 0.09845248962525818], DiskBox[393, 0.09845248962525818],
          DiskBox[394, 0.09845248962525818], 
         DiskBox[395, 0.09845248962525818], DiskBox[396, 0.09845248962525818],
          DiskBox[397, 0.09845248962525818], 
         DiskBox[398, 0.09845248962525818], DiskBox[399, 0.09845248962525818],
          DiskBox[400, 0.09845248962525818], 
         DiskBox[401, 0.09845248962525818], DiskBox[402, 0.09845248962525818],
          DiskBox[403, 0.09845248962525818], 
         DiskBox[404, 0.09845248962525818], DiskBox[405, 0.09845248962525818],
          DiskBox[406, 0.09845248962525818], 
         DiskBox[407, 0.09845248962525818], DiskBox[408, 0.09845248962525818],
          DiskBox[409, 0.09845248962525818], 
         DiskBox[410, 0.09845248962525818], DiskBox[411, 0.09845248962525818],
          DiskBox[412, 0.09845248962525818], 
         DiskBox[413, 0.09845248962525818], DiskBox[414, 0.09845248962525818],
          DiskBox[415, 0.09845248962525818], 
         DiskBox[416, 0.09845248962525818], DiskBox[417, 0.09845248962525818],
          DiskBox[418, 0.09845248962525818], 
         DiskBox[419, 0.09845248962525818], DiskBox[420, 0.09845248962525818],
          DiskBox[421, 0.09845248962525818], 
         DiskBox[422, 0.09845248962525818], DiskBox[423, 0.09845248962525818],
          DiskBox[424, 0.09845248962525818], 
         DiskBox[425, 0.09845248962525818], DiskBox[426, 0.09845248962525818],
          DiskBox[427, 0.09845248962525818], 
         DiskBox[428, 0.09845248962525818], DiskBox[429, 0.09845248962525818],
          DiskBox[430, 0.09845248962525818], 
         DiskBox[431, 0.09845248962525818], DiskBox[432, 0.09845248962525818],
          DiskBox[433, 0.09845248962525818], 
         DiskBox[434, 0.09845248962525818], DiskBox[435, 0.09845248962525818],
          DiskBox[436, 0.09845248962525818], 
         DiskBox[437, 0.09845248962525818], DiskBox[438, 0.09845248962525818],
          DiskBox[439, 0.09845248962525818], 
         DiskBox[440, 0.09845248962525818], DiskBox[441, 0.09845248962525818],
          DiskBox[442, 0.09845248962525818], 
         DiskBox[443, 0.09845248962525818], DiskBox[444, 0.09845248962525818],
          DiskBox[445, 0.09845248962525818], 
         DiskBox[446, 0.09845248962525818], DiskBox[447, 0.09845248962525818],
          DiskBox[448, 0.09845248962525818], 
         DiskBox[449, 0.09845248962525818], DiskBox[450, 0.09845248962525818],
          DiskBox[451, 0.09845248962525818], 
         DiskBox[452, 0.09845248962525818], DiskBox[453, 0.09845248962525818],
          DiskBox[454, 0.09845248962525818], 
         DiskBox[455, 0.09845248962525818], DiskBox[456, 0.09845248962525818],
          DiskBox[457, 0.09845248962525818], 
         DiskBox[458, 0.09845248962525818], DiskBox[459, 0.09845248962525818],
          DiskBox[460, 0.09845248962525818], 
         DiskBox[461, 0.09845248962525818], DiskBox[462, 0.09845248962525818],
          DiskBox[463, 0.09845248962525818], 
         DiskBox[464, 0.09845248962525818], DiskBox[465, 0.09845248962525818],
          DiskBox[466, 0.09845248962525818], 
         DiskBox[467, 0.09845248962525818], DiskBox[468, 0.09845248962525818],
          DiskBox[469, 0.09845248962525818], 
         DiskBox[470, 0.09845248962525818], DiskBox[471, 0.09845248962525818],
          DiskBox[472, 0.09845248962525818], 
         DiskBox[473, 0.09845248962525818], DiskBox[474, 0.09845248962525818],
          DiskBox[475, 0.09845248962525818], 
         DiskBox[476, 0.09845248962525818], DiskBox[477, 0.09845248962525818],
          DiskBox[478, 0.09845248962525818], 
         DiskBox[479, 0.09845248962525818], DiskBox[480, 0.09845248962525818],
          DiskBox[481, 0.09845248962525818], 
         DiskBox[482, 0.09845248962525818], DiskBox[483, 0.09845248962525818],
          DiskBox[484, 0.09845248962525818], 
         DiskBox[485, 0.09845248962525818], DiskBox[486, 0.09845248962525818],
          DiskBox[487, 0.09845248962525818], 
         DiskBox[488, 0.09845248962525818], DiskBox[489, 0.09845248962525818],
          DiskBox[490, 0.09845248962525818], 
         DiskBox[491, 0.09845248962525818], DiskBox[492, 0.09845248962525818],
          DiskBox[493, 0.09845248962525818], 
         DiskBox[494, 0.09845248962525818], DiskBox[495, 0.09845248962525818],
          DiskBox[496, 0.09845248962525818], 
         DiskBox[497, 0.09845248962525818], DiskBox[498, 0.09845248962525818],
          DiskBox[499, 0.09845248962525818], 
         DiskBox[500, 0.09845248962525818], DiskBox[501, 0.09845248962525818],
          DiskBox[502, 0.09845248962525818], 
         DiskBox[503, 0.09845248962525818], DiskBox[504, 0.09845248962525818],
          DiskBox[505, 0.09845248962525818], 
         DiskBox[506, 0.09845248962525818], DiskBox[507, 0.09845248962525818],
          DiskBox[508, 0.09845248962525818], 
         DiskBox[509, 0.09845248962525818], DiskBox[510, 0.09845248962525818],
          DiskBox[511, 0.09845248962525818], 
         DiskBox[512, 0.09845248962525818], DiskBox[513, 0.09845248962525818],
          DiskBox[514, 0.09845248962525818], 
         DiskBox[515, 0.09845248962525818], DiskBox[516, 0.09845248962525818],
          DiskBox[517, 0.09845248962525818], 
         DiskBox[518, 0.09845248962525818], DiskBox[519, 0.09845248962525818],
          DiskBox[520, 0.09845248962525818], 
         DiskBox[521, 0.09845248962525818], DiskBox[522, 0.09845248962525818],
          DiskBox[523, 0.09845248962525818], 
         DiskBox[524, 0.09845248962525818], DiskBox[525, 0.09845248962525818],
          DiskBox[526, 0.09845248962525818], 
         DiskBox[527, 0.09845248962525818], DiskBox[528, 0.09845248962525818],
          DiskBox[529, 0.09845248962525818], 
         DiskBox[530, 0.09845248962525818], DiskBox[531, 0.09845248962525818],
          DiskBox[532, 0.09845248962525818], 
         DiskBox[533, 0.09845248962525818], DiskBox[534, 0.09845248962525818],
          DiskBox[535, 0.09845248962525818], 
         DiskBox[536, 0.09845248962525818], DiskBox[537, 0.09845248962525818],
          DiskBox[538, 0.09845248962525818], 
         DiskBox[539, 0.09845248962525818], DiskBox[540, 0.09845248962525818],
          DiskBox[541, 0.09845248962525818], 
         DiskBox[542, 0.09845248962525818], DiskBox[543, 0.09845248962525818],
          DiskBox[544, 0.09845248962525818], 
         DiskBox[545, 0.09845248962525818], DiskBox[546, 0.09845248962525818],
          DiskBox[547, 0.09845248962525818], 
         DiskBox[548, 0.09845248962525818], DiskBox[549, 0.09845248962525818],
          DiskBox[550, 0.09845248962525818], 
         DiskBox[551, 0.09845248962525818], DiskBox[552, 0.09845248962525818],
          DiskBox[553, 0.09845248962525818], 
         DiskBox[554, 0.09845248962525818], DiskBox[555, 0.09845248962525818],
          DiskBox[556, 0.09845248962525818], 
         DiskBox[557, 0.09845248962525818], DiskBox[558, 0.09845248962525818],
          DiskBox[559, 0.09845248962525818], 
         DiskBox[560, 0.09845248962525818], DiskBox[561, 0.09845248962525818],
          DiskBox[562, 0.09845248962525818], 
         DiskBox[563, 0.09845248962525818], DiskBox[564, 0.09845248962525818],
          DiskBox[565, 0.09845248962525818], 
         DiskBox[566, 0.09845248962525818], DiskBox[567, 0.09845248962525818],
          DiskBox[568, 0.09845248962525818], 
         DiskBox[569, 0.09845248962525818], DiskBox[570, 0.09845248962525818],
          DiskBox[571, 0.09845248962525818], 
         DiskBox[572, 0.09845248962525818], DiskBox[573, 0.09845248962525818],
          DiskBox[574, 0.09845248962525818], 
         DiskBox[575, 0.09845248962525818], DiskBox[576, 0.09845248962525818],
          DiskBox[577, 0.09845248962525818], 
         DiskBox[578, 0.09845248962525818], DiskBox[579, 0.09845248962525818],
          DiskBox[580, 0.09845248962525818], 
         DiskBox[581, 0.09845248962525818], DiskBox[582, 0.09845248962525818],
          DiskBox[583, 0.09845248962525818], 
         DiskBox[584, 0.09845248962525818], DiskBox[585, 0.09845248962525818],
          DiskBox[586, 0.09845248962525818], 
         DiskBox[587, 0.09845248962525818], DiskBox[588, 0.09845248962525818],
          DiskBox[589, 0.09845248962525818], 
         DiskBox[590, 0.09845248962525818], DiskBox[591, 0.09845248962525818],
          DiskBox[592, 0.09845248962525818], 
         DiskBox[593, 0.09845248962525818], DiskBox[594, 0.09845248962525818],
          DiskBox[595, 0.09845248962525818], 
         DiskBox[596, 0.09845248962525818], DiskBox[597, 0.09845248962525818],
          DiskBox[598, 0.09845248962525818], 
         DiskBox[599, 0.09845248962525818], DiskBox[600, 0.09845248962525818],
          DiskBox[601, 0.09845248962525818], 
         DiskBox[602, 0.09845248962525818], DiskBox[603, 0.09845248962525818],
          DiskBox[604, 0.09845248962525818], 
         DiskBox[605, 0.09845248962525818], DiskBox[606, 0.09845248962525818],
          DiskBox[607, 0.09845248962525818], 
         DiskBox[608, 0.09845248962525818], DiskBox[609, 0.09845248962525818],
          DiskBox[610, 0.09845248962525818], 
         DiskBox[611, 0.09845248962525818], DiskBox[612, 0.09845248962525818],
          DiskBox[613, 0.09845248962525818], 
         DiskBox[614, 0.09845248962525818], DiskBox[615, 0.09845248962525818],
          DiskBox[616, 0.09845248962525818], 
         DiskBox[617, 0.09845248962525818], DiskBox[618, 0.09845248962525818],
          DiskBox[619, 0.09845248962525818], 
         DiskBox[620, 0.09845248962525818], DiskBox[621, 0.09845248962525818],
          DiskBox[622, 0.09845248962525818], 
         DiskBox[623, 0.09845248962525818], DiskBox[624, 0.09845248962525818],
          DiskBox[625, 0.09845248962525818], 
         DiskBox[626, 0.09845248962525818], DiskBox[627, 0.09845248962525818],
          DiskBox[628, 0.09845248962525818], 
         DiskBox[629, 0.09845248962525818], DiskBox[630, 0.09845248962525818],
          DiskBox[631, 0.09845248962525818], 
         DiskBox[632, 0.09845248962525818], DiskBox[633, 0.09845248962525818],
          DiskBox[634, 0.09845248962525818], 
         DiskBox[635, 0.09845248962525818], DiskBox[636, 0.09845248962525818],
          DiskBox[637, 0.09845248962525818], 
         DiskBox[638, 0.09845248962525818], DiskBox[639, 0.09845248962525818],
          DiskBox[640, 0.09845248962525818], 
         DiskBox[641, 0.09845248962525818], DiskBox[642, 0.09845248962525818],
          DiskBox[643, 0.09845248962525818], 
         DiskBox[644, 0.09845248962525818], DiskBox[645, 0.09845248962525818],
          DiskBox[646, 0.09845248962525818], 
         DiskBox[647, 0.09845248962525818], DiskBox[648, 0.09845248962525818],
          DiskBox[649, 0.09845248962525818], 
         DiskBox[650, 0.09845248962525818], DiskBox[651, 0.09845248962525818],
          DiskBox[652, 0.09845248962525818], 
         DiskBox[653, 0.09845248962525818], DiskBox[654, 0.09845248962525818],
          DiskBox[655, 0.09845248962525818], 
         DiskBox[656, 0.09845248962525818], DiskBox[657, 0.09845248962525818],
          DiskBox[658, 0.09845248962525818], 
         DiskBox[659, 0.09845248962525818], DiskBox[660, 0.09845248962525818],
          DiskBox[661, 0.09845248962525818], 
         DiskBox[662, 0.09845248962525818], DiskBox[663, 0.09845248962525818],
          DiskBox[664, 0.09845248962525818], 
         DiskBox[665, 0.09845248962525818], DiskBox[666, 0.09845248962525818],
          DiskBox[667, 0.09845248962525818], 
         DiskBox[668, 0.09845248962525818], DiskBox[669, 0.09845248962525818],
          DiskBox[670, 0.09845248962525818], 
         DiskBox[671, 0.09845248962525818], DiskBox[672, 0.09845248962525818],
          DiskBox[673, 0.09845248962525818], 
         DiskBox[674, 0.09845248962525818], DiskBox[675, 0.09845248962525818],
          DiskBox[676, 0.09845248962525818], 
         DiskBox[677, 0.09845248962525818], DiskBox[678, 0.09845248962525818],
          DiskBox[679, 0.09845248962525818], 
         DiskBox[680, 0.09845248962525818], DiskBox[681, 0.09845248962525818],
          DiskBox[682, 0.09845248962525818], 
         DiskBox[683, 0.09845248962525818], DiskBox[684, 0.09845248962525818],
          DiskBox[685, 0.09845248962525818], 
         DiskBox[686, 0.09845248962525818], DiskBox[687, 0.09845248962525818],
          DiskBox[688, 0.09845248962525818], 
         DiskBox[689, 0.09845248962525818], DiskBox[690, 0.09845248962525818],
          DiskBox[691, 0.09845248962525818], 
         DiskBox[692, 0.09845248962525818], DiskBox[693, 0.09845248962525818],
          DiskBox[694, 0.09845248962525818], 
         DiskBox[695, 0.09845248962525818], DiskBox[696, 0.09845248962525818],
          DiskBox[697, 0.09845248962525818], 
         DiskBox[698, 0.09845248962525818], DiskBox[699, 0.09845248962525818],
          DiskBox[700, 0.09845248962525818], 
         DiskBox[701, 0.09845248962525818], DiskBox[702, 0.09845248962525818],
          DiskBox[703, 0.09845248962525818], 
         DiskBox[704, 0.09845248962525818], DiskBox[705, 0.09845248962525818],
          DiskBox[706, 0.09845248962525818], 
         DiskBox[707, 0.09845248962525818], DiskBox[708, 0.09845248962525818],
          DiskBox[709, 0.09845248962525818], 
         DiskBox[710, 0.09845248962525818], DiskBox[711, 0.09845248962525818],
          DiskBox[712, 0.09845248962525818], 
         DiskBox[713, 0.09845248962525818], DiskBox[714, 0.09845248962525818],
          DiskBox[715, 0.09845248962525818], 
         DiskBox[716, 0.09845248962525818], DiskBox[717, 0.09845248962525818],
          DiskBox[718, 0.09845248962525818], 
         DiskBox[719, 0.09845248962525818], DiskBox[720, 0.09845248962525818],
          DiskBox[721, 0.09845248962525818], 
         DiskBox[722, 0.09845248962525818], DiskBox[723, 0.09845248962525818],
          DiskBox[724, 0.09845248962525818], 
         DiskBox[725, 0.09845248962525818], DiskBox[726, 0.09845248962525818],
          DiskBox[727, 0.09845248962525818], 
         DiskBox[728, 0.09845248962525818], DiskBox[729, 0.09845248962525818],
          DiskBox[730, 0.09845248962525818], 
         DiskBox[731, 0.09845248962525818], DiskBox[732, 0.09845248962525818],
          DiskBox[733, 0.09845248962525818], 
         DiskBox[734, 0.09845248962525818], DiskBox[735, 0.09845248962525818],
          DiskBox[736, 0.09845248962525818], 
         DiskBox[737, 0.09845248962525818], DiskBox[738, 0.09845248962525818],
          DiskBox[739, 0.09845248962525818], 
         DiskBox[740, 0.09845248962525818], DiskBox[741, 0.09845248962525818],
          DiskBox[742, 0.09845248962525818], 
         DiskBox[743, 0.09845248962525818], DiskBox[744, 0.09845248962525818],
          DiskBox[745, 0.09845248962525818], 
         DiskBox[746, 0.09845248962525818], DiskBox[747, 0.09845248962525818],
          DiskBox[748, 0.09845248962525818], 
         DiskBox[749, 0.09845248962525818], DiskBox[750, 0.09845248962525818],
          DiskBox[751, 0.09845248962525818], 
         DiskBox[752, 0.09845248962525818], DiskBox[753, 0.09845248962525818],
          DiskBox[754, 0.09845248962525818], 
         DiskBox[755, 0.09845248962525818], DiskBox[756, 0.09845248962525818],
          DiskBox[757, 0.09845248962525818], 
         DiskBox[758, 0.09845248962525818], DiskBox[759, 0.09845248962525818],
          DiskBox[760, 0.09845248962525818], 
         DiskBox[761, 0.09845248962525818], DiskBox[762, 0.09845248962525818],
          DiskBox[763, 0.09845248962525818], 
         DiskBox[764, 0.09845248962525818], DiskBox[765, 0.09845248962525818],
          DiskBox[766, 0.09845248962525818], 
         DiskBox[767, 0.09845248962525818], DiskBox[768, 0.09845248962525818],
          DiskBox[769, 0.09845248962525818], 
         DiskBox[770, 0.09845248962525818], DiskBox[771, 0.09845248962525818],
          DiskBox[772, 0.09845248962525818], 
         DiskBox[773, 0.09845248962525818], DiskBox[774, 0.09845248962525818],
          DiskBox[775, 0.09845248962525818], 
         DiskBox[776, 0.09845248962525818], DiskBox[777, 0.09845248962525818],
          DiskBox[778, 0.09845248962525818], 
         DiskBox[779, 0.09845248962525818], DiskBox[780, 0.09845248962525818],
          DiskBox[781, 0.09845248962525818], 
         DiskBox[782, 0.09845248962525818], DiskBox[783, 0.09845248962525818],
          DiskBox[784, 0.09845248962525818], 
         DiskBox[785, 0.09845248962525818], DiskBox[786, 0.09845248962525818],
          DiskBox[787, 0.09845248962525818], 
         DiskBox[788, 0.09845248962525818], DiskBox[789, 0.09845248962525818],
          DiskBox[790, 0.09845248962525818], 
         DiskBox[791, 0.09845248962525818], DiskBox[792, 0.09845248962525818],
          DiskBox[793, 0.09845248962525818], 
         DiskBox[794, 0.09845248962525818], DiskBox[795, 0.09845248962525818],
          DiskBox[796, 0.09845248962525818], 
         DiskBox[797, 0.09845248962525818], DiskBox[798, 0.09845248962525818],
          DiskBox[799, 0.09845248962525818], 
         DiskBox[800, 0.09845248962525818], DiskBox[801, 0.09845248962525818],
          DiskBox[802, 0.09845248962525818], 
         DiskBox[803, 0.09845248962525818], DiskBox[804, 0.09845248962525818],
          DiskBox[805, 0.09845248962525818], 
         DiskBox[806, 0.09845248962525818], DiskBox[807, 0.09845248962525818],
          DiskBox[808, 0.09845248962525818], 
         DiskBox[809, 0.09845248962525818], DiskBox[810, 0.09845248962525818],
          DiskBox[811, 0.09845248962525818], 
         DiskBox[812, 0.09845248962525818], DiskBox[813, 0.09845248962525818],
          DiskBox[814, 0.09845248962525818], 
         DiskBox[815, 0.09845248962525818], DiskBox[816, 0.09845248962525818],
          DiskBox[817, 0.09845248962525818], 
         DiskBox[818, 0.09845248962525818], DiskBox[819, 0.09845248962525818],
          DiskBox[820, 0.09845248962525818], 
         DiskBox[821, 0.09845248962525818], DiskBox[822, 0.09845248962525818],
          DiskBox[823, 0.09845248962525818], 
         DiskBox[824, 0.09845248962525818], DiskBox[825, 0.09845248962525818],
          DiskBox[826, 0.09845248962525818], 
         DiskBox[827, 0.09845248962525818], DiskBox[828, 0.09845248962525818],
          DiskBox[829, 0.09845248962525818], 
         DiskBox[830, 0.09845248962525818], DiskBox[831, 0.09845248962525818],
          DiskBox[832, 0.09845248962525818], 
         DiskBox[833, 0.09845248962525818], DiskBox[834, 0.09845248962525818],
          DiskBox[835, 0.09845248962525818], 
         DiskBox[836, 0.09845248962525818], DiskBox[837, 0.09845248962525818],
          DiskBox[838, 0.09845248962525818], 
         DiskBox[839, 0.09845248962525818], DiskBox[840, 0.09845248962525818],
          DiskBox[841, 0.09845248962525818], 
         DiskBox[842, 0.09845248962525818], DiskBox[843, 0.09845248962525818],
          DiskBox[844, 0.09845248962525818], 
         DiskBox[845, 0.09845248962525818], DiskBox[846, 0.09845248962525818],
          DiskBox[847, 0.09845248962525818], 
         DiskBox[848, 0.09845248962525818], DiskBox[849, 0.09845248962525818],
          DiskBox[850, 0.09845248962525818], 
         DiskBox[851, 0.09845248962525818], DiskBox[852, 0.09845248962525818],
          DiskBox[853, 0.09845248962525818], 
         DiskBox[854, 0.09845248962525818], DiskBox[855, 0.09845248962525818],
          DiskBox[856, 0.09845248962525818], 
         DiskBox[857, 0.09845248962525818], DiskBox[858, 0.09845248962525818],
          DiskBox[859, 0.09845248962525818], 
         DiskBox[860, 0.09845248962525818], DiskBox[861, 0.09845248962525818],
          DiskBox[862, 0.09845248962525818], 
         DiskBox[863, 0.09845248962525818], DiskBox[864, 0.09845248962525818],
          DiskBox[865, 0.09845248962525818], 
         DiskBox[866, 0.09845248962525818], DiskBox[867, 0.09845248962525818],
          DiskBox[868, 0.09845248962525818], 
         DiskBox[869, 0.09845248962525818], DiskBox[870, 0.09845248962525818],
          DiskBox[871, 0.09845248962525818], 
         DiskBox[872, 0.09845248962525818], DiskBox[873, 0.09845248962525818],
          DiskBox[874, 0.09845248962525818], 
         DiskBox[875, 0.09845248962525818], DiskBox[876, 0.09845248962525818],
          DiskBox[877, 0.09845248962525818], 
         DiskBox[878, 0.09845248962525818], DiskBox[879, 0.09845248962525818],
          DiskBox[880, 0.09845248962525818], 
         DiskBox[881, 0.09845248962525818], DiskBox[882, 0.09845248962525818],
          DiskBox[883, 0.09845248962525818], 
         DiskBox[884, 0.09845248962525818], DiskBox[885, 0.09845248962525818],
          DiskBox[886, 0.09845248962525818], 
         DiskBox[887, 0.09845248962525818], DiskBox[888, 0.09845248962525818],
          DiskBox[889, 0.09845248962525818], 
         DiskBox[890, 0.09845248962525818], DiskBox[891, 0.09845248962525818],
          DiskBox[892, 0.09845248962525818], 
         DiskBox[893, 0.09845248962525818], DiskBox[894, 0.09845248962525818],
          DiskBox[895, 0.09845248962525818], 
         DiskBox[896, 0.09845248962525818], DiskBox[897, 0.09845248962525818],
          DiskBox[898, 0.09845248962525818], 
         DiskBox[899, 0.09845248962525818], DiskBox[900, 0.09845248962525818],
          DiskBox[901, 0.09845248962525818], 
         DiskBox[902, 0.09845248962525818], DiskBox[903, 0.09845248962525818],
          DiskBox[904, 0.09845248962525818], 
         DiskBox[905, 0.09845248962525818], DiskBox[906, 0.09845248962525818],
          DiskBox[907, 0.09845248962525818], 
         DiskBox[908, 0.09845248962525818], DiskBox[909, 0.09845248962525818],
          DiskBox[910, 0.09845248962525818], 
         DiskBox[911, 0.09845248962525818], DiskBox[912, 0.09845248962525818],
          DiskBox[913, 0.09845248962525818], 
         DiskBox[914, 0.09845248962525818], DiskBox[915, 0.09845248962525818],
          DiskBox[916, 0.09845248962525818], 
         DiskBox[917, 0.09845248962525818], DiskBox[918, 0.09845248962525818],
          DiskBox[919, 0.09845248962525818], 
         DiskBox[920, 0.09845248962525818], DiskBox[921, 0.09845248962525818],
          DiskBox[922, 0.09845248962525818], 
         DiskBox[923, 0.09845248962525818], DiskBox[924, 0.09845248962525818],
          DiskBox[925, 0.09845248962525818], 
         DiskBox[926, 0.09845248962525818], DiskBox[927, 0.09845248962525818],
          DiskBox[928, 0.09845248962525818], 
         DiskBox[929, 0.09845248962525818], DiskBox[930, 0.09845248962525818],
          DiskBox[931, 0.09845248962525818], 
         DiskBox[932, 0.09845248962525818], DiskBox[933, 0.09845248962525818],
          DiskBox[934, 0.09845248962525818], 
         DiskBox[935, 0.09845248962525818], DiskBox[936, 0.09845248962525818],
          DiskBox[937, 0.09845248962525818], 
         DiskBox[938, 0.09845248962525818], DiskBox[939, 0.09845248962525818],
          DiskBox[940, 0.09845248962525818], 
         DiskBox[941, 0.09845248962525818], DiskBox[942, 0.09845248962525818],
          DiskBox[943, 0.09845248962525818], 
         DiskBox[944, 0.09845248962525818], DiskBox[945, 0.09845248962525818],
          DiskBox[946, 0.09845248962525818], 
         DiskBox[947, 0.09845248962525818], DiskBox[948, 0.09845248962525818],
          DiskBox[949, 0.09845248962525818], 
         DiskBox[950, 0.09845248962525818], DiskBox[951, 0.09845248962525818],
          DiskBox[952, 0.09845248962525818], 
         DiskBox[953, 0.09845248962525818], DiskBox[954, 0.09845248962525818],
          DiskBox[955, 0.09845248962525818], 
         DiskBox[956, 0.09845248962525818], DiskBox[957, 0.09845248962525818],
          DiskBox[958, 0.09845248962525818], 
         DiskBox[959, 0.09845248962525818], DiskBox[960, 0.09845248962525818],
          DiskBox[961, 0.09845248962525818], 
         DiskBox[962, 0.09845248962525818], DiskBox[963, 0.09845248962525818],
          DiskBox[964, 0.09845248962525818], 
         DiskBox[965, 0.09845248962525818], DiskBox[966, 0.09845248962525818],
          DiskBox[967, 0.09845248962525818], 
         DiskBox[968, 0.09845248962525818], DiskBox[969, 0.09845248962525818],
          DiskBox[970, 0.09845248962525818], 
         DiskBox[971, 0.09845248962525818], DiskBox[972, 0.09845248962525818],
          DiskBox[973, 0.09845248962525818], 
         DiskBox[974, 0.09845248962525818], DiskBox[975, 0.09845248962525818],
          DiskBox[976, 0.09845248962525818], 
         DiskBox[977, 0.09845248962525818], DiskBox[978, 0.09845248962525818],
          DiskBox[979, 0.09845248962525818], 
         DiskBox[980, 0.09845248962525818], DiskBox[981, 0.09845248962525818],
          DiskBox[982, 0.09845248962525818], 
         DiskBox[983, 0.09845248962525818], DiskBox[984, 0.09845248962525818],
          DiskBox[985, 0.09845248962525818], 
         DiskBox[986, 0.09845248962525818], DiskBox[987, 0.09845248962525818],
          DiskBox[988, 0.09845248962525818], 
         DiskBox[989, 0.09845248962525818], DiskBox[990, 0.09845248962525818],
          DiskBox[991, 0.09845248962525818]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1115., Automatic}]], "Output",
 CellChangeTimes->{{3.6559733805880785`*^9, 3.6559734014205217`*^9}, 
   3.6559734977896166`*^9, {3.6559784988151574`*^9, 3.655978522107852*^9}, {
   3.655978579168352*^9, 3.6559786305745583`*^9}, 3.6559798715401707`*^9, {
   3.655979904063751*^9, 3.655979954138728*^9}, {3.6559800935106792`*^9, 
   3.655980117306367*^9}, {3.655980194260026*^9, 3.6559802366583104`*^9}, 
   3.6559802724067893`*^9, 3.655980505171397*^9, {3.6559811079639854`*^9, 
   3.655981140067152*^9}, 3.6559811773071766`*^9, 3.6559812153259163`*^9, 
   3.65599057601569*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
ENeaHjVt6bWtS2HxhaCQiDp12WeulkUb37NkFve2+IfGWuJT8i1B7RPveXr5
eZ08eZI2WyNTcDbFCQWd/6ZtuI92j2Q7m5LJdk2KmUHzpZ9++okebFm69X2L
l18o10NdLTHJ2ZaqETNve/kEWsbNfpv9HZ/1HzNHfMn3MnMKBHIzVbuW9ek7
ABt1+TOs4ldpz3BxwdUlYro9oVUrDvlVx4C+GB4Vd79r1Sh+uPUsYTGdjKID
sGEwsL7kw3b+YZbinsMt3QZMcDY1HJyJq30dGBxxLiIujemGbn+G29yV9g9E
hn+XebFczah2bC0o6N+mh8C4jSUmKYudHb6s523JLu7tzNHCumW2df7nG96+
gY+ae7YV6UXah+Bt31Q2fBkdiSDidPFPoLQudTUyNtn3+PHjdTwVp1nPjMnt
1cBVpf1dcte7mvGE0bWkwX+ZnltDi09gJOMHBLKCysGW9PxuIgkwmCVlFAOF
OJZd7tS5y49e7fxN3WR15ZP81cu//ZW07OKLsQkp+zOycl87f/48sRCJrypY
1OPQ6OQLcYmpRoktwfA19lkjM8x5+erVq4558m4J/kBToCuDtakTcVQt+cEr
CoThQLNEJWQQrPnmnS2Dxy+0WPm2pWVrX0v7DunAW1oX9x/MyM4DwPgarkbN
UIEPTnjGA08v/+35BcXYNDceRTbPvuw5ZQOjiK8NdZqh5K22fiGPeg2ZYi4q
NDlXp6+2juTCdDNjmyNryZdeMRfkT5pZ5SY2r72WZtan5JT9mlnQXThXJ5KB
Bv8BYjRGfVmBFk6MQ4XHptKetWNwhuC5llfam2ECqK1yQLWorjDrppZUboaN
TNILu5MwtKEZW1otHQc4NchCPA57Lj7CHN0lHuGieOhLpurH3x9Ydbjdmdn5
Kgl9KDO/69ixE6cY//ZrUeXAbXn5haB/rGwWtfkqvEM2QsaOFGrGKodPWc6A
pp2xC9496sDh45sLuo8Caf3+j3+9Zpm4YLMgTfrMmj0X51FHJW3/WcPjOGem
M5Ow2b226uZK7Qz7KcjHzSZa9LCeeIY16rxOtXiJuqaqq/yZhoT/MNPCNpZV
9p4ydv7u3DVvb4IMuegfGEpuKyAfNpC5Yeuuo6mZXX57o0Xb281a+f7i5Rtq
562wqjbvdM4uvOgfFE7362Gxuqa424jxRes74RDwvrTfX2I75d5tFxD+W3MP
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
xoJYCF9NURwp+8/im6TvLRq9CrkHqjXgSHpgXZ2MkWtuiY2maoAlAvy3RZPK
Y/gXSpGcy+i1qOfGfW/gVcC/jnUasdoXXD+/aOz8vdv6PrUVw4HQrD1/4sJ9
+D7cKeGZ6DXyDWc9tfQgCa2SFMj2qy069Qd1HdXzRdHGF4qIszRt4db/JKS0
vBHZMA48S/zAyDNViuqDzJ+S2TITKN6FMPN9SmaNiD/YCWD1PAxVuuVpedyS
T+pO6vly8gTCFyGfWuYlwulg4mWINs16MYzsBO9TaLju8u7uxnVOts7v/02n
ogFCRtG7nZTe5r+PV6/zecOYuJ6rVq8jXh6oeHw3/k+uV/mAZtUNwbXlrT9q
kpIZ9/rZjwjUeKenjJvok4ecFSN1BjvNaHNvW9iOXbQh1i64G00zO7hieuuq
AmGyu9uYlddr62Jq6FcZbfI39x6zGA2RVCDASquykgEVUQbR4MGTmdC/lQW/
b3PwxHuADcLg0Yb0Wbv3Nbj206etOFSw/cWzGP47ac66o4fzR6yZPGvtEUp2
Ea4CBwjfKzrg5WLiVsbO33iMAAl+cCG3atRp8H21WlHf1Y1q9Ptww6S6GJ5C
jQcscWqdMpdRZrokpHxvq21ZTe9pMmG8NIPfo/Fdo4KVNOIzzV5+8yJxMqs2
NPI8sEoQUiqAkBUVrsJY7/NlKbiHQ2njeoINS1nXzxrGJl5q1KQ1AnpeIcL3
U2II97G2z+Cxv+R1H8RZvkoDtSQygMqDtvwzggpKTEDiw2T/ONkXlq8IpuSn
K+FoIy0wzIjiSYD+4kKrhitTD5yn6grzdqTQ76cdqXDvh0R7+tYeoxd+Wyc2
1cntBZMfRn6WapUxsBtKXg2g6EOeHsZfcFBPtevYeWePcatfzh26EhMeheL0
beXEOeuPob8T6B68jhb/rIOvvI8kNbJQGPNKpSOSVz5DBqdRWRScPIS/JLMu
qMQvientLsSmdvQE5zNQgS5WsW9tJAXJ6vFV8PO7OhbRU2UjCxgklMAgJJZk
rhXVKNYMD4jgQJdoZBolggqmekCz71X8TcODaMD4aM/DU8HdIkDD6Gm6JRte
gVNPFGTMfV08fPTE29XrNChp3iaf9/ySZSwNmqpmWMYyY4MKjvOmE3qquxsH
A/Bbwd3EWBgmzFi8jWB+YsHuLIe7rVQf1h6PiVXAnqhh82hW/7FmZGNPdcbg
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
wPgPkzM7IQUHMy4UmWK3WzZq7u5LMa0Hflc7tvmNarUaflO3UfPDvtj43Yzi
hWKTHPnS7p2SLyOVEmGROae4If+p3QjVJmJkTdmheLi0d6MZVdUqeTWwxDkO
C44E65EJJf+P6j1mh4YNgCzGMwOI4g71YFxwYnGKcElcmtVZPmiamvHnsIkL
uHv4VUxcsqjHcKEa5SksphuqhApeq6u7K4TUg+G2hTlqiPwXl3toL+OpM8HR
gwR3w+aTEQuz2CYGl9LVhHCL+9bDeZ9u85L2L1zQLqS27ODODAtwFxJh6Vn5
mhqldmQDjEBiOxPCzb6LRzqEhzwDFi5e8t8adRpq2VXgMXatcL7LQxau2ITh
Tzcfr9ngQkJqm1ljn5rDni8CQStGvn/SpOucn2u1mvJxky5zLscXzEInDBj/
gPeHvVY1RwMmq7wTow4ZYVk2ZX/5Y/BiCUM66RK0E5j+b+njoAN0ZbFsLZk0
I8AAzbIIVPDv+TSVw/xdTjoGqxVBXQiQIKGVK5bTuRPCVNOwUGXCZtXkuPjT
5y5tGPzM9otNi+bu6dx/CvNNQrgu0N5WqHOS8NQWrWT8Tuc7KzheISSDhIg8
S7HFSlIMhfiQxbOpYDkuPSzaWEpUhF5nnsOFJJFHqPIe1GRdrWY9N1UHGXdK
r4SUPojiW1Dt8606aTzFQsyuFALM14YBU0V6UUQmeCBZK6t4JH/EGp+YbPg0
sfOsa7EdZ5xqN2jF543znwXOp965i1+cad13ycLx84U2UljuIJ6SJ8CxYX6U
UNgYA9z1CXIRKjqX1so00LI3/+t4LeTnEaG/OieeFirK0QK6idlVIcJXA5pN
Mas/ImUlj5TwePDq1asOgUMYOvmfPP/ee2RhLXwaNmEMoV0vTYj3pCFsZfZd
ygW9EwsDlMar2YOWv53Za9EE1UCE35bSGVPmbbzZvqD35uLe/SC02iFScSQH
oON3Sva4TOnEvkr94KtwCRwFqoPj3ziK2JNwZ9t1efx/HU9Cpz7UihmBmhI/
A9b+D4tdp7ZRCnGT09viiZlbd/vRJ2oyFyCYXAA61Er0wMiJQgttNREbBjIH
EdNtvZwJqf8qd9n2wlvHOw5beSxvxOpLiZ1nv9u85wKIxOWEzrOO5I9cg7Vp
8spbn4BCj4IH8ooNlO1dFv1jQ1SpU8y9cb2QtpK5bbSeZBcL4bN2dKEnrLQl
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
EgdP43KVhKBjFWKP1dveIKLDO+fuOPRepco8Ca0SSiVTlqOdYX31naXjufjk
nNYHj58jotXiws5M5vdHrecbXvF4xr8/W6cB+J2iHbZs+J91G7W4Ub9RM4Y0
Wll33eiav55v0Pz3Rs0imU6Gzq7fJNwYGYmQB/Mfw8FYxxZibblM2fkZeFyB
vpPJCnFcmtfA8XeCtPuV8/p8VN95G6glavtI5KuOtWpqpbx24qNVg6dvMwQ6
ZGqFJwXvI0pdNGL29s/ColqZcFQpDHUzqnXm501is2+l5PTQsWj7jX4jq2O3
vO2vnuGF7lWxQm/a01sVTTeDXSY4WXi4oEb8iWAfKVsuQpDuAORYPkFNrNsw
ejTtKKSQFsng5x1ol7ea11jPYHdyDBfZc0SN0cxqC7SWhmdTJMW5cpBVhl2L
iEur+8H5y8ThQL6BopXqxoZFwYw80T2n+UX1XApb/uoVEWmnLt56+7l6TQKF
dUwwlsBxySnsS9FRfZwYC6DK+V8V/swC5t80bRF1MTQ88pt6DZs6hmLCDWf0
H4MV9KCBJ4XW0lqf/Qw6+yGDLDBh99BGGtCR8FyAc9jDjZL++XUhuD/1LuDA
NLoq5+AKl4UoNSZlODfcS/fAO6jVaE5jhy9GtozHnr7Ua+jMQ1l5hT/Wqtfs
7aS0XAzWVrCnKlWZN2bezq+aRqfeGTxOc/o/bp2a/W5c67ZONTtdDbKz2KD5
eZ+jMGsCqcuEAi3QRrJFRwBaGU00rr2rEraGOn8E97PnJ0wBOBOoqThNzcOt
Z6CE6pZUqTD41JaiVr1ep3I0ohKiStwv9B2eulKaI2VMMNXAAPUcH6ETouBy
+65+EBOXaLkxgVoIFtojvWNPmlpG6h23/a1xaBR9rnyMp3kDmQ83nMeTztpX
q20IMZyROF+tFvVhqesD5W+ms1TwzWzAHjX0OVlWl60qKVT7Ahz2ZdOwlibD
RFjkZHNR54ICT2BLtQeiM6R01py54J1tXUcsoyScMv/V8bh/wXATp3BQsUHe
dXE2/6RzzJucyFK0O8IauGYDA+uL0bdknFACSe3TkPFCf8MSReuXptvKNaxS
vV1Y4Cep+UpZyxNsEYJMZAmRbwhGBxEh4FH4wYHjvuSUmJg0hX+mdYPWc3yE
Lk3/5kgVZmhpj9RHMFjVGlfCImO/R17F+qwqPcOXLSXYU3NYBXtq5vRDhs/s
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
E7NbKuEae80WKPK1TkNW0VRoFVdW64wRzQHUPEmWML/tQxQrAf9gU0zuXnlh
yfDyrILeel/mwLHSoRH6WsVcx2OUMUkqX+AsmBQRFUiUnAAv4XOxYBLHHXcc
PIvJbrw2v4oMkZVbnplWgsGnY+g1rzzdfxd5AybfBndfUTpz28WYwjmolUel
4MJR81lVCXkIPGdtRn8TkzA0r05wuFbj4jwIhB37/rzO3RWGYKVfWCKqEzAr
TqmpZBLhbEp63pbuo1dK9C8R4mdJucahLZWUpx98q8w9h94bN3Plq7/UbhBm
8hYVIMkDOcWDPdqd5kVVaDAiqgt21tJOag9oJYraqoKpV3iUKYVIYsLPmZs1
wDAaalixmIR1ph7OyO9j7jLDNXq/tVZJfE9Fk12a+/frf/v9P0/XZiMxPJrb
C1hG8CBbrzDiH+NmrzmoKTQhLbWSfAU7BrRJ1Ux+uhLCiTBb3GOmYde5dAlh
4pnKIsJjkt5pldDWrp0JyJ2cLKPVWsUyHJjPDOhqqZikKdLo3PmrKBvptn4v
Q1CwnafGMB0sNSndJo4qdA+5mlSnyOxJ1TEp5+WGLFg4ah7DqUBdOqJgeBwZ
hDwcEuAELVrLsILHLftQthwIj/z/A542eu66Q8B4+bOktEypnsboHyaQhINA
Pi67dV+PhMgrHkAseKf7oPFHUvP6kP+sl60YUQnOxSWm2iPC6gptFow/KQTD
2KDqxmGa3fqPWdt3wGDY7NhIvCl2jUZLkfChZ9K4Fmd2DqYwEcbKO5aA2MCu
HdE2GVu3UtiaCcg61rftaXt76T/ZZ5UtgUwFibKcQdRDa6003NT2w16AZik+
6m9Z4HQ0FI77tnGLWKRbmRS18bI9SiR4j7aParbE4AUKX9r7GpXqEd2MyTMw
44OWIpXBXb4JNbWsrLAGkaNCJ3Ldjy9dp+oTdPpQvEUS2l1mLcoMm2cM67Ah
Z2ftOHAS3xODBMHXagIFyu3rhs2jTMrNzzJ/hy9Y/8Yn0a3aKtPPkCfBNDAu
vrh1vbH3xPVXmkfEMmo3mEEw3n5p2DSi9vvvv0+aJ3XXnn3fdu7xgqOvV8WR
+PxoueSEiwny4ISzCenFnyYkpVXgBNE3oCqmU8ntO5yJz+qH4nBlsgzAVX6q
0zC8ksHgt+Hj6bM0xYrB4+cS0zr4GsvlM+3LGCtW1bWsuAiuDckcMZZUcwjI
2Ic489zuQlhkjNX2YI31YUyzduC0LUjs4BOJrs7vqVWpB+qMBLmD34Xek2ck
Hlk+f+0BeiOD3WTWk36WJKBxl1aoVZYq46tbe47fwOjeFJ4SB6P5iyaFeb+1
oYSF772gIgT/Hjd79Wv7Ow9fg09we9TNAYufyrWkbLtHV6AUz8ff8Pj/GFbE
bd4KJX3XYlqnAR6UkY4JuparpJqUI6VpX/YcKcWv1RqMN9OzOzqW+4mdBION
m7XqVaSs1Qlgm7oNW6AIgQdwKleaR7clOtQMKFFXqt6f3Io5I8ZNsavLn7sP
kH6Ts8/rR7ej+jlbUdUt77VgfhQU2N597HpgtStnf7VZVJKyMQF40oNfffUV
Nv3Rz69co4iSAvIp++sru2Tve1waR0wMCJS3t3Qa+alRWNyVrI7FmqTjxlk1
1atgP8s2HynPLR6AGbV34pOzvw5vmYDvtN/z+tvgliqWUsQETmIoyoeHWBQr
Q2d8v6tRPQ0ZNczo9KzwUvMWUeXNI+LLk9ILyiNapTBq8LypCICoo+pMyluc
En6leDkuEzEkAtvHn6FUN/Yt22QF5HSYdcWKkgUVrQ2cJMKLWsjlHmsVhGhs
ST6TnKhGX8f4gLRXjn1MNjdSyOihJ9+cbG3hFoEf8AT8GbKXafrHpT3iHPPS
aZuzy/1OhcEIaqtSgmpx7ZVaNERUrdRyXf0hKm+pVgcvSXPNJKxpVEyCLVvt
T5uJWp3XsrqPvVHUq1REy+5SVYv6LNpEsrFU/f5Jy9bpR9PyX8DfnJfur95O
xkOCXTIxaUBRgpyx980PoB/UQryB85etu5nbpb9yj6CbJaUTD2Tl5KnHg1kQ
KCuy8OQCNbni+eR0YlJK+Ygpy5iCpbbGmPgktHwxy1NMfKQyURblUJoqvGLt
qnLmpEtq47LGX7o8k+Zt9HB5Xvng8QvU6zFJQMUJAmWAYcG49JkJO09zXUXb
DY2Sx/vsLSzu4fFpFqjZVKZrPNSCYwPmVwVDI8CS/qT58RwlNk3SHUyyZPic
ncosRK3+TBCVFgCJM2txTULXNLzxXZYmoQBkJcUHsQkZPwKaTHntxEdn2/Zc
KD4GscCXBwGwwih+By22JgD+CIxfNUuovdLU9u6TFcQSsHEotTjZLrsA/qYy
1vtaRFzajPHzt5Fwof4dvCDfExb7/TK/m1Z3rTYaKr2aWDyOIn3bzt3/yyzo
S+7/rd5DJs8YNWE6Dh5N0iTeOaveRVkdVAJiOiVKo9lT84r6lKdkdWEz3BPb
dbzdNCz2s9Dw6CfPnz/faf22V1DVh31RhuRioh5TFNw8DnGKb+8o7tGXrIcJ
U5fsYLo12KX658uuSUYulo6UDokE1q+dXjCgggnVrd/oqy0iYuys+05aZkdU
Q1BpHdvJ2asPTB07YdIfdeo3tStr8VVUmaC3jvmpYtA01Zsy+RLIpQxN3nbM
XhukjE/KEuEmyPazMXGt7/QYNF7cu6o93ArSko295Tz4BcEs6nu0lB4NVQJq
gWhdUaO4t5qFt/okpm0eULDJJgmwaBzkRwWBXFwF0BmBTFBdsrJ0xjbFqTBB
A2qftXIpdWsYviu6/tQGMnC8SYSIqAjpOhjuHoPjmEiOQqoQfJRaNEeuzcMV
zRVZYiCwpbW6MOeJv4HoVkY2jrqR8GjE0/9QIsLaAfNwVsD0MdOWYdjhb08+
1/hkSnoeOi8tJf93PBpxVHg+WP3Z+MyedplyJ79H6fd1G4X2fnH9K6v7DBpx
PTymjV1OYwdWe5bm+dlKQK+Q2U9eunrjRLuM7NuDx85ToUk97NPsh7i2OSg0
oHsoXi31u0HiCYFB1sqVJqFRn4e2TFnXY+BYgEJejm2dgtXciGyVvKOomI2I
knMzfJVe8+OtoQ5L21M8ai1KvVWOoGejlhMD1M63iEn7re+wKcq+v5meW8Ss
IaWc4GhmhyJ7GJFUrjDWdIZ3m9tXox0nXcrGWo7XyVQs2BMRDqr0wjck4whF
rGUCvcwR/LpJ88gn//v5dYWB/dQCX8hSnv3S8CkIlg+fCb9By7sFWHJIBgNa
uRSNQhRoFa+iaZTyeArGgUkOyCFXtS5cufFBYvf5SmVHEBv/PXX5q9gh1Ygg
s/sRSx1XKE142NmWAHEgz6bSMDqJk/YfPKYWlrgc3huozrqFmwXlLA9ZwPFg
vMqgeSu2rhhUthbrg/dxom1q+9thLduoMQrYsL89V7+ZkkNkifPz8clZb2T3
X4DRnmpWjmmcQcMn4ZhU9cEU6Rq9HN/PMhgp9UTVBmDVaZOW7v0sMj7jz6Fk
Nuly320Xj5AAqq1KM+xqf/oZs1ORDW18+vQZGEaEW0e7rfTeDpu/jmehnVtV
/NWX/a3fsKkoRxSS2l0fvMg7nHAp3541XEf77ln9tbjENJTrkmcLrrPAuUy4
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexCount", "[", "gg", "]"}]], "Input",
 CellChangeTimes->{{3.655981215862447*^9, 3.6559812205963354`*^9}}],

Cell[BoxData["5766"], "Output",
 CellChangeTimes->{3.6559812214213085`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"VertexOutDegree", "[", "gg", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655981314523801*^9, 3.6559813275678463`*^9}}],

Cell[BoxData["31"], "Output",
 CellChangeTimes->{3.6559813284594827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Tally", "[", 
   RowBox[{"VertexOutDegree", "[", "gg", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6559827483569646`*^9, 3.655982750677598*^9}, {
  3.6559827929328165`*^9, 3.6559827975416193`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "506"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "218"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "79"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "55"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "41"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "17"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"13", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"24", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6559827517985816`*^9, 3.6559827984939365`*^9, 
  3.6559905848064976`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"Tally", "[", 
   RowBox[{"VertexOutDegree", "[", "gg", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655982766841555*^9, 3.6559827788331966`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQDQEf7KXe5y2YrKjgAOFzOGQsEldtF5WA8gUcFjXy
bFoSKAblKzi8vqPeot8kAOUzOFxk+O/8t0YGytdyEAvduntjNhOUb+jApKD1
i3v1H3sIX8Nh47r8KXrRHFB5JYduo9Q7sxNg5qk4KHtNuxa1ggvKF3G4ztZ+
XfaTCJQv4bC9YFmknqgwlG/u8N7y1z8nvW9Q840cuJnXVr2a/BHKN0Bzjw4a
X8+heLW1/aZFDFC+jMOV1G+cGjsFoXx7mD+hwAJq3zOo+cZo9qk5HP3MHxxV
yAPVZ4em3wqNb4PGt0TjW6PxzRyMe99+dzzwE2qfKdz/ADszYAk=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.5854049584317649},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 31.}, {-0.44808774596011625`, 8.065579427282092}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {6.907755278982137, 
       FormBox["1000", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.396929655216146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.551080335043404, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.684611727667927, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.802394763324311, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.006367567650246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.294049640102028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.699514748210191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.85366542803745, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {8.987196820661973, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.104979856318357, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.210340371976184, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {9.903487552536127, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {10.308952660644293`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.6559827718487277`*^9, 3.6559827796152077`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chrom", "[", "74", "]"}], "/", "24"}]], "Input",
 CellChangeTimes->{{3.655981806657242*^9, 3.655981822230976*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.6559818075300717`*^9, 3.6559818227518377`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Chrom", "[", "k", "]"}], "/", "24"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"EdgeList", "[", 
          RowBox[{"gg", ",", 
           RowBox[{"77", "<->", "_"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "77"}], "&"}]}], 
        "]"}]}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.655981621392521*^9, 3.6559817515917377`*^9}, 
   3.655981791699479*^9, 3.6559819789982023`*^9, {3.655990604156931*^9, 
   3.6559906082445173`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "4", ",", "1", ",", "1", ",", "4", ",", "4", ",", "1", ",", "4", 
   ",", "1", ",", "3", ",", "5", ",", "5", ",", "1", ",", "5", ",", "9", ",", 
   "4", ",", "5", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{{3.655981641480281*^9, 3.655981721975789*^9}, 
   3.6559817528324556`*^9, 3.6559817923869505`*^9, 3.655981980016841*^9, 
   3.6559906089666634`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"ReadGrof", "[", 
       RowBox[{"#", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
      RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}]}], "]"}], 
    "&"}], ",", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"EdgeList", "[", 
      RowBox[{"gg", ",", 
       RowBox[{"74", "<->", "_"}]}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "74"}], "&"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.655981773975523*^9, 3.655981784579715*^9}, {
  3.655981960001542*^9, 3.6559820041657543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"VertexList", "[", "gg", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"VertexOutDegree", "[", 
      RowBox[{"gg", ",", "#"}], "]"}], "\[Equal]", "19"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.655982924177847*^9, 3.6559829244078646`*^9}, {
  3.6559905975743465`*^9, 3.6559905979360404`*^9}}],

Cell[BoxData[
 RowBox[{"{", "77", "}"}]], "Output",
 CellChangeTimes->{3.655982924939331*^9, 3.655990598554228*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chrom", "[", "77", "]"}], "/", "24"}]], "Input",
 CellChangeTimes->{{3.6559829342490063`*^9, 3.655982960991926*^9}, {
  3.6559906130721655`*^9, 3.6559906148096433`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.655982935197157*^9, 3.6559829616935596`*^9}, 
   3.655990615539363*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Chrom", "[", "k", "]"}], "/", "24"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"EdgeList", "[", 
          RowBox[{"gg", ",", 
           RowBox[{"312", "<->", "_"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "312"}], "&"}]}], 
        "]"}]}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.65598294865079*^9, 3.6559829528992996`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "3", ",", "4", ",", "4", ",", "4", ",", "16", ",", "3", ",", "4", 
   ",", "5", ",", "3", ",", "5", ",", "5", ",", "4", ",", "20", ",", "20", 
   ",", "4", ",", "7", ",", "5", ",", "2", ",", "3", ",", "6", ",", "3", ",", 
   "4", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.6559829545532904`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"VertexList", "[", "gg", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"VertexOutDegree", "[", 
      RowBox[{"gg", ",", "#"}], "]"}], "\[Equal]", "30"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.655982820392389*^9, 3.65598282107771*^9}}],

Cell[BoxData[
 RowBox[{"{", "307", "}"}]], "Output",
 CellChangeTimes->{3.655982821813692*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"ReadGrof", "[", "312", "]"}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}]}], "]"}], 
   ",", 
   RowBox[{"ReadGraphDiamondHighLights", "[", "312", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.65598283589859*^9, {3.655982973608624*^9, 3.6559830009099073`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 7, 5, 9, 6, 8, 11, 4, 10}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {2, 6}, {3, 5}, {
       3, 7}, {3, 4}, {3, 8}, {3, 6}, {3, 9}, {10, 7}, {10, 8}, {10, 11}, {5, 
       7}, {5, 4}, {5, 6}, {5, 11}, {5, 9}, {7, 8}, {7, 6}, {7, 11}, {8, 
       11}, {8, 9}, {11, 9}}}, {
      GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 0.}, {10., 0.}, {1., 1.}, {0., 10.}, {2., 
       7.}, {7., 1.}, {6., 2.}, {3., 3.}, {2., 4.}, {4., 3.}, {3., 5.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{3, 8}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{3, 9}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{5, 6}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{5, 7}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{5, 9}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{5, 11}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{6, 7}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{7, 11}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{8, 10}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{8, 11}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{9, 11}, 0.06561181434599156]}, 
         {Arrowheads[0.], ArrowBox[{10, 11}, 0.06561181434599156]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.06561181434599156], DiskBox[2, 0.06561181434599156], 
         DiskBox[3, 0.06561181434599156], DiskBox[4, 0.06561181434599156], 
         DiskBox[5, 0.06561181434599156], DiskBox[6, 0.06561181434599156], 
         DiskBox[7, 0.06561181434599156], DiskBox[8, 0.06561181434599156], 
         DiskBox[9, 0.06561181434599156], DiskBox[10, 0.06561181434599156], 
         DiskBox[11, 0.06561181434599156]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output",
 CellChangeTimes->{
  3.655982836957167*^9, {3.655982974623667*^9, 3.655983001962429*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Chrom", "[", "k", "]"}], "/", "24"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"EdgeList", "[", 
          RowBox[{"gg", ",", 
           RowBox[{"307", "<->", "_"}]}], "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "307"}], "&"}]}], 
        "]"}]}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6559828602498803`*^9, 3.6559828667112637`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "4", ",", "1", ",", "12", ",", "1", ",", "4", ",", "4", ",", "5", 
   ",", "1", ",", "1", ",", "1", ",", "4", ",", "5", ",", "1", ",", "4", ",", 
   "4", ",", "1", ",", "5", ",", "1", ",", "5", ",", "9", ",", "1", ",", "5", 
   ",", "3", ",", "5", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.655982869023814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chrom", "[", "307", "]"}]], "Input",
 CellChangeTimes->{{3.6559828803421793`*^9, 3.655982885364993*^9}}],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.6559828864289017`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"VertexList", "[", "gg", "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"VertexOutDegree", "[", 
      RowBox[{"gg", ",", "#"}], "]"}], "\[Equal]", "31"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.655981343016456*^9, 3.655981374960306*^9}}],

Cell[BoxData[
 RowBox[{"{", "74", "}"}]], "Output",
 CellChangeTimes->{3.6559813759815435`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeCount", "[", 
  RowBox[{"ReadGrof", "[", "74", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.655981877170162*^9, 3.6559818831747165`*^9}}],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.655981884032922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"ReadGrof", "[", "74", "]"}], ",", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6559813817442603`*^9, 3.655981387252941*^9}, {
  3.6559818301401186`*^9, 3.65598184435038*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 7, 5, 9, 6, 8, 4, 10}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {2, 6}, {3, 5}, {
       3, 7}, {3, 4}, {3, 8}, {3, 6}, {9, 7}, {9, 8}, {9, 10}, {5, 7}, {5, 
       4}, {5, 8}, {5, 6}, {5, 10}, {7, 8}, {7, 6}, {7, 10}, {8, 10}}}, {
      GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 0.}, {9., 0.}, {1., 1.}, {0., 9.}, {2., 6.}, {
       6., 1.}, {5., 2.}, {2., 3.}, {3., 3.}, {3., 4.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{1, 4}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{2, 4}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{2, 6}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{3, 5}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{3, 6}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{3, 7}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{3, 8}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{4, 5}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{5, 6}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{5, 7}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{5, 8}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{5, 10}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{6, 7}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{7, 9}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{8, 10}, 0.061894273127753294`]}, 
         {Arrowheads[0.], ArrowBox[{9, 10}, 0.061894273127753294`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.061894273127753294`], DiskBox[2, 0.061894273127753294`],
          DiskBox[3, 0.061894273127753294`], 
         DiskBox[4, 0.061894273127753294`], DiskBox[5, 0.061894273127753294`],
          DiskBox[6, 0.061894273127753294`], 
         DiskBox[7, 0.061894273127753294`], DiskBox[8, 0.061894273127753294`],
          DiskBox[9, 0.061894273127753294`], 
         DiskBox[10, 0.061894273127753294`]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output",
 CellChangeTimes->{3.655981388515483*^9, 3.6559818450804033`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"VertexOutDegree", "[", 
       RowBox[{"gg", ",", "v"}], "]"}], ",", "v"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"v", ",", 
      RowBox[{"VertexList", "[", "gg", "]"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.655981227956542*^9, 3.6559812913095784`*^9}}],

Cell[BoxData["9150"], "Output",
 CellChangeTimes->{{3.6559812769807215`*^9, 3.6559812924532075`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"ReadGrof", "[", "2", "]"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<RadialDrawing\>\""}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
         RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
         RowBox[{"2", "\[UndirectedEdge]", "5"}]}], "}"}], ",", "Red"}], 
      "]"}], ",", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
         RowBox[{"4", "\[UndirectedEdge]", "5"}]}], "}"}], ",", "Green"}], 
      "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.655978738895891*^9, 3.655978752504468*^9}, {
  3.6559788451115737`*^9, 3.655978888340682*^9}, {3.655978919390356*^9, 
  3.655978972570227*^9}, {3.655979006350602*^9, 3.65597903913177*^9}, {
  3.6559791078332353`*^9, 3.6559791408927183`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 5, 4}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {3, 5}, {3, 4}, {
       5, 4}}}, {GraphHighlight -> {
         UndirectedEdge[1, 5], 
         UndirectedEdge[3, 5], 
         UndirectedEdge[4, 5], 
         UndirectedEdge[3, 4], 
         UndirectedEdge[2, 5]}, 
       GraphHighlightStyle -> {UndirectedEdge[3, 5] -> {EdgeStyle -> Directive[
             RGBColor[0, 1, 0]]}, 
         UndirectedEdge[1, 5] -> {EdgeStyle -> Directive[
             RGBColor[1, 0, 0]]}, 
         UndirectedEdge[2, 5] -> {EdgeStyle -> Directive[
             RGBColor[1, 0, 0]]}, 
         UndirectedEdge[3, 4] -> {EdgeStyle -> Directive[
             RGBColor[1, 0, 0]]}, 
         UndirectedEdge[4, 5] -> {EdgeStyle -> Directive[
             RGBColor[0, 1, 0]]}}, 
       GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0.9999999999999999, 0.5773502691896258}, {
          0.49999999999999994`, 0.8660254037844389}}, 0.01842105263157895]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9999999999999999, 0.5773502691896258}, {
          0.9999999999999998, 0.}}, 0.01842105263157895]}, 
        {RGBColor[1, 0, 0], 
         {Arrowheads[0.], 
          ArrowBox[{{0.9999999999999999, 0.5773502691896258}, {1.5, 
           0.8660254037844384}}, 0.01842105263157895]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.49999999999999994`, 0.8660254037844389}, {
          0.9999999999999998, 0.}}, 0.01842105263157895]}, 
        {RGBColor[1, 0, 0], 
         {Arrowheads[0.], 
          ArrowBox[{{0.49999999999999994`, 0.8660254037844389}, {1.5, 
           0.8660254037844384}}, 0.01842105263157895]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.49999999999999994`, 0.8660254037844389}, {0., 
          1.154700538379252}}, 0.01842105263157895]}, 
        {RGBColor[0, 1, 0], 
         {Arrowheads[0.], 
          ArrowBox[{{0.9999999999999998, 0.}, {1.5, 0.8660254037844384}}, 
           0.01842105263157895]}}, 
        {RGBColor[1, 0, 0], 
         {Arrowheads[0.], 
          ArrowBox[{{0.9999999999999998, 0.}, {0., 1.154700538379252}}, 
           0.01842105263157895]}}, 
        {RGBColor[0, 1, 0], 
         {Arrowheads[0.], 
          ArrowBox[{{1.5, 0.8660254037844384}, {0., 1.154700538379252}}, 
           0.01842105263157895]}}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{0.9999999999999999, 0.5773502691896258}, 
          0.01842105263157895], 
         InsetBox["1", 
          Offset[{2, 2}, {1.018421052631579, 0.5957713218212048}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.49999999999999994`, 0.8660254037844389}, 
          0.01842105263157895], 
         InsetBox["2", 
          Offset[{2, 2}, {0.5184210526315789, 0.8844464564160179}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9999999999999998, 0.}, 0.01842105263157895], 
         InsetBox["3", 
          Offset[{2, 2}, {1.0184210526315787`, 0.01842105263157895}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.5, 0.8660254037844384}, 0.01842105263157895], 
         InsetBox["5", 
          Offset[{2, 2}, {1.518421052631579, 0.8844464564160173}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.154700538379252}, 0.01842105263157895], 
         InsetBox["4", 
          Offset[{2, 2}, {0.01842105263157895, 1.1731215910108308`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]]]], "Output",
 CellChangeTimes->{
  3.6559787449352093`*^9, 3.6559788507297187`*^9, 3.65597888902966*^9, 
   3.6559789415213614`*^9, 3.655978973505098*^9, {3.6559790224663663`*^9, 
   3.655979040003274*^9}, {3.6559791220598116`*^9, 3.655979141957638*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"VertexCount", "[", 
      RowBox[{"ReadGrof", "[", "k", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"1554", "-", "10"}], ",", 
     RowBox[{"1554", "+", "10"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.655979768363842*^9, 3.6559798364762306`*^9}, {
  3.6559905527179537`*^9, 3.6559905587644506`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1544", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1545", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1546", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1547", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1548", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1549", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1550", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1551", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1552", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1553", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1554", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1555", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1556", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1557", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1558", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1559", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1560", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1561", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1562", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1563", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1564", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6559798000334244`*^9, 3.655979837431963*^9}, 
   3.6559905596745367`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6559797735062895`*^9, 3.6559797746715126`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"312", ",", "1758", ",", "\"\<{3,2<->7,2<->5}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1759", ",", "\"\<{3,2<->7,1<->7}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1759", ",", "\"\<{3,2<->5,2<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1759", ",", "\"\<{3,2<->5,5<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1760", ",", "\"\<{3,5<->7,3<->5}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1760", ",", "\"\<{3,1<->7,2<->7}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1760", ",", "\"\<{3,3<->7,5<->7}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1760", ",", "\"\<{3,3<->7,3<->5}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1760", ",", "\"\<{3,3<->7,1<->7}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1760", ",", "\"\<{3,5<->7,2<->7}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1760", ",", "\"\<{3,5<->7,2<->5}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1761", ",", "\"\<{3,3<->5,5<->11}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1762", ",", "\"\<{3,3<->6,6<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1762", ",", "\"\<{3,3<->8,3<->11}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1762", ",", "\"\<{3,3<->8,8<->11}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1762", ",", "\"\<{3,6<->8,4<->6}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1763", ",", "\"\<{3,6<->8,3<->6}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1764", ",", "\"\<{3,4<->6,6<->10}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1764", ",", "\"\<{3,4<->8,8<->10}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1764", ",", "\"\<{3,2<->9,2<->5}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1764", ",", "\"\<{3,2<->9,5<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1764", ",", "\"\<{3,3<->9,3<->6}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1764", ",", "\"\<{3,3<->9,6<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1764", ",", "\"\<{3,3<->9,2<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1764", ",", "\"\<{3,3<->6,3<->8}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1765", ",", "\"\<{3,6<->9,5<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1765", ",", "\"\<{3,6<->9,5<->6}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1765", ",", "\"\<{3,2<->9,3<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1765", ",", "\"\<{3,2<->5,2<->7}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1765", ",", "\"\<{3,2<->5,5<->7}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1765", ",", "\"\<{3,5<->9,6<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1765", ",", "\"\<{3,5<->9,5<->6}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1766", ",", "\"\<{3,5<->9,2<->5}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1766", ",", "\"\<{3,6<->9,3<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1766", ",", "\"\<{3,6<->9,3<->6}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1766", ",", "\"\<{3,5<->6,6<->10}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1766", ",", "\"\<{3,5<->6,5<->10}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1767", ",", "\"\<{3,4<->10,8<->10}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1767", ",", "\"\<{3,6<->10,5<->6}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1767", ",", "\"\<{3,6<->10,5<->10}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1767", ",", "\"\<{3,6<->10,4<->6}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1767", ",", "\"\<{3,6<->10,4<->10}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1767", ",", "\"\<{3,5<->6,5<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1767", ",", "\"\<{3,5<->6,6<->9}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1767", ",", "\"\<{3,5<->10,5<->11}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,4<->8,6<->8}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,4<->10,6<->10}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,8<->10,8<->11}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,8<->10,10<->11}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,3<->5,3<->7}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,3<->5,5<->7}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,3<->11,3<->8}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,3<->11,8<->11}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,5<->11,5<->10}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,5<->11,10<->11}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,3<->11,3<->5}\>\""}], "}"}], ",",
    "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,3<->11,5<->11}\>\""}], "}"}], 
   ",", "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,3<->8,3<->6}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1768", ",", "\"\<{3,3<->8,6<->8}\>\""}], "}"}], ",", 
   "\n", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,8<->11,8<->10}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,8<->11,10<->11}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,5<->11,3<->5}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,5<->11,3<->11}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,5<->10,6<->10}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,5<->10,5<->6}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,10<->11,8<->11}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,10<->11,8<->10}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,8<->11,3<->11}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,8<->11,3<->8}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,8<->10,4<->8}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,8<->10,4<->10}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,10<->11,5<->11}\>\""}], "}"}], 
    "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1768", ",", "\"\<{3,10<->11,5<->10}\>\""}], "}"}], 
    "\n"}]}]}]], "Input",
 CellChangeTimes->{{3.6559923458093405`*^9, 3.6559924320944223`*^9}}],

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"312", ",", "1733", ",", "\"\<{2,1<->7,2<->3}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1734", ",", "\"\<{2,3<->8,6<->11}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1735", ",", "\"\<{2,4<->6,8<->10}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1736", ",", "\"\<{2,4<->8,6<->10}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1737", ",", "\"\<{2,2<->9,3<->5}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1738", ",", "\"\<{2,3<->9,2<->6}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1739", ",", "\"\<{2,6<->9,3<->5}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1740", ",", "\"\<{2,4<->10,6<->8}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1741", ",", "\"\<{2,6<->10,4<->5}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1742", ",", "\"\<{2,8<->10,4<->11}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1743", ",", "\"\<{2,3<->11,5<->8}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1744", ",", "\"\<{2,5<->11,3<->10}\>\""}], "}"}], "\n", 
 RowBox[{"{", 
  RowBox[{"312", ",", "1745", ",", "\"\<{2,8<->11,3<->10}\>\""}], 
  "}"}], "\n"}], "Input",
 CellChangeTimes->{{3.655997082540451*^9, 3.655997082551469*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,2<->7,1<->5}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,2<->5,7<->9}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,5<->7,2<->3}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->7,1<->5}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->5,7<->11}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->6,8<->9}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1734", ",", "\"\<{2,6<->8,3<->4}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1739", ",", "\"\<{2,5<->9,2<->6}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1739", ",", "\"\<{2,5<->6,9<->10}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1741", ",", "\"\<{2,5<->10,6<->11}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1745", ",", "\"\<{2,10<->11,5<->8}\>\""}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,1<->7,2<->3}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1734", ",", "\"\<{2,3<->8,6<->11}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1735", ",", "\"\<{2,4<->6,8<->10}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1736", ",", "\"\<{2,4<->8,6<->10}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1737", ",", "\"\<{2,2<->9,3<->5}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1738", ",", "\"\<{2,3<->9,2<->6}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1739", ",", "\"\<{2,6<->9,3<->5}\>\""}], "}"}], ",",
     "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1740", ",", "\"\<{2,4<->10,6<->8}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1741", ",", "\"\<{2,6<->10,4<->5}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1742", ",", "\"\<{2,8<->10,4<->11}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1743", ",", "\"\<{2,3<->11,5<->8}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1744", ",", "\"\<{2,5<->11,3<->10}\>\""}], "}"}], 
    ",", "\n", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1745", ",", "\"\<{2,8<->11,3<->10}\>\""}], "}"}], 
    ","}], "\n", "}"}]}]], "Input",
 CellChangeTimes->{{3.6559924562109175`*^9, 3.655992480721377*^9}, {
  3.6559970917544713`*^9, 3.655997106903756*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,2<->7,1<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,2<->5,7<->9}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,5<->7,2<->3}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,3<->7,1<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,3<->5,7<->11}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,3<->6,8<->9}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1734", ",", "\<\"{2,6<->8,3<->4}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1739", ",", "\<\"{2,5<->9,2<->6}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1739", ",", "\<\"{2,5<->6,9<->10}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1741", ",", "\<\"{2,5<->10,6<->11}\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1745", ",", "\<\"{2,10<->11,5<->8}\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,1<->7,2<->3}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1734", ",", "\<\"{2,3<->8,6<->11}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1735", ",", "\<\"{2,4<->6,8<->10}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1736", ",", "\<\"{2,4<->8,6<->10}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1737", ",", "\<\"{2,2<->9,3<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1738", ",", "\<\"{2,3<->9,2<->6}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1739", ",", "\<\"{2,6<->9,3<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1740", ",", "\<\"{2,4<->10,6<->8}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1741", ",", "\<\"{2,6<->10,4<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1742", ",", "\<\"{2,8<->10,4<->11}\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1743", ",", "\<\"{2,3<->11,5<->8}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1744", ",", "\<\"{2,5<->11,3<->10}\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1745", ",", "\<\"{2,8<->11,3<->10}\"\>"}], "}"}], 
   ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.65599247475184*^9, 3.6559924814934387`*^9}, 
   3.6559971096443253`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Transf", "[", "list_", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", " ", "result", ",", " ", "chunk", ",", " ", 
      RowBox[{"colors", " ", "=", 
       RowBox[{"{", 
        RowBox[{
        "Red", ",", "Yellow", ",", "Black", ",", "Blue", ",", "Purple", ",", 
         "Green", ",", "Orange", ",", " ", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", " ", 
         RowBox[{"Darker", "[", "Blue", "]"}], ",", " ", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", " ", "i"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"result", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Read", "[", 
             RowBox[{"Rest", "[", 
              RowBox[{"StringToStream", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
            ",", "Thick", ",", 
            RowBox[{"colors", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Rest", "[", 
           RowBox[{"Read", "[", 
            RowBox[{"StringToStream", "[", 
             RowBox[{"list", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
          ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Chrom", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "/", "24"}], 
             "<", "4"}], ",", "Dashed", ",", "Automatic"}], "]"}], ",", 
          "Thick", ",", 
          RowBox[{"colors", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
               RowBox[{"Length", "[", "colors", "]"}]}], "]"}], "+", "1"}], 
            "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6559925264161158`*^9, 3.655992616205278*^9}, {
   3.655992673127184*^9, 3.6559926736352177`*^9}, {3.6559927161868863`*^9, 
   3.6559927835541925`*^9}, {3.6559928175001855`*^9, 
   3.6559928918054276`*^9}, {3.6559931315100718`*^9, 
   3.6559931494915924`*^9}, {3.6559932500512457`*^9, 3.65599329173326*^9}, 
   3.6559933252521935`*^9, {3.6559933623997035`*^9, 3.655993403177156*^9}, {
   3.655993435581609*^9, 3.65599366895245*^9}, {3.6559936991518993`*^9, 
   3.655993728605219*^9}, {3.6559938473224945`*^9, 3.655993848066642*^9}, {
   3.6559942406125145`*^9, 3.655994257918149*^9}, {3.655994340912106*^9, 
   3.655994341541526*^9}, {3.6559943853764915`*^9, 3.6559943872431135`*^9}, {
   3.655994449147723*^9, 3.655994455256429*^9}, {3.655994603889142*^9, 
   3.6559946044920006`*^9}, 3.6559956631866016`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Title", "[", "list_", "]"}], ":=", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"l", ",", " ", "result", ",", " ", "chunk", ",", " ", 
      RowBox[{"colors", " ", "=", 
       RowBox[{"{", 
        RowBox[{
        "Red", ",", "Yellow", ",", "Black", ",", "Blue", ",", "Purple", ",", 
         "Green", ",", "Orange", ",", " ", 
         RowBox[{"Darker", "[", "Green", "]"}], ",", " ", 
         RowBox[{"Darker", "[", "Blue", "]"}], ",", " ", 
         RowBox[{"Darker", "[", "Red", "]"}]}], "}"}]}], ",", " ", "i"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"result", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Read", "[", 
             RowBox[{"Rest", "[", 
              RowBox[{"StringToStream", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], "]"}], "]"}], 
            ",", "Thick", ",", 
            RowBox[{"colors", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"result", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"list", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "->", 
             RowBox[{
              RowBox[{"Chrom", "[", 
               RowBox[{"list", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "/", "24"}]}], 
            "}"}], ",", 
           RowBox[{"colors", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"list", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                RowBox[{"Length", "[", "colors", "]"}]}], "]"}], "+", "1"}], 
             "]"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "list", "]"}]}], "}"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.655994521825828*^9, 3.655994534639705*^9}, {
  3.655995551481667*^9, 3.6559955636769533`*^9}, {3.655995651630255*^9, 
  3.6559956573797083`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ColorData", "[", 
  RowBox[{"109", ",", "\"\<ColorList\>\""}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.4, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.2666666666666667, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 0.4, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1., 0.4, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.4, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.655728, 0.8, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.437152, 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.655728, 0.8, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.655728, 0.8, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.655728, 0.8, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.742291, 0.873126], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.4948606666666667, 0.582084],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.742291, 0.873126]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.742291, 0.873126]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.742291, 0.873126],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.656408, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.43760533333333335`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 0.656408, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.656408, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.656408, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.893126, 0.4, 0.767184], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.5954173333333334, 0.2666666666666667, 0.511456],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.893126, 0.4, 0.767184]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.893126, 0.4, 0.767184]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.893126, 0.4, 0.767184],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.295048, 0.8, 0.286932], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.19669866666666666`, 0.5333333333333334, 0.191288],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.295048, 0.8, 0.286932]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.295048, 0.8, 0.286932]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.295048, 0.8, 0.286932],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.238758, 0.610466, 1.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.159172, 0.4069773333333333, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.238758, 0.610466, 1.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.238758, 0.610466, 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.238758, 0.610466, 1.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.325204, 0.406504], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666667, 0.21680266666666667`, 0.27100266666666667`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 0.325204, 0.406504]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.325204, 0.406504]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.325204, 0.406504],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0., 0.786874, 0.739379], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.5245826666666666, 0.4929193333333334],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0., 0.786874, 0.739379]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0., 0.786874, 0.739379]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0., 0.786874, 0.739379],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.520437, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.34695800000000004`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 0.520437, 0.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.520437, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.520437, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.7529330319872088, 0.4176501130047967, 1.], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.5019553546581392, 0.2784334086698645, 0.6666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.7529330319872088, 0.4176501130047967, 1.]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.7529330319872088, 0.4176501130047967, 1.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7529330319872088, 0.4176501130047967, 1.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.5572809000084149, 0.8, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.37152060000560994`, 0.5333333333333334, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0.5572809000084149, 0.8, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.5572809000084149, 0.8, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5572809000084149, 0.8, 0],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.06811595600706821, 0.0851449450088353], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[
        0.6666666666666667, 0.04541063733804548, 0.05676329667255686],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 0.06811595600706821, 0.0851449450088353]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.06811595600706821, 0.0851449450088353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.06811595600706821, 0.0851449450088353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0.7226017980018511, 0.9321946059944466], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0., 0.48173453200123406`, 0.6214630706629645],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[0, 0.7226017980018511, 0.9321946059944466]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0, 0.7226017980018511, 0.9321946059944466]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0.7226017980018511, 0.9321946059944466],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.7154761789941944, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.47698411932946294`, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      "RGBColor[1., 0.7154761789941944, 0]"],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.7154761789941944, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.7154761789941944, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.655993426320197*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", 
  RowBox[{"Title", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,2<->7,1<->5}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,2<->5,7<->9}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,5<->7,2<->3}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->7,1<->5}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->5,7<->11}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->6,8<->9}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1734", ",", "\"\<{2,6<->8,3<->4}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1739", ",", "\"\<{2,5<->9,2<->6}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1739", ",", "\"\<{2,5<->6,9<->10}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1741", ",", "\"\<{2,5<->10,6<->11}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1745", ",", "\"\<{2,10<->11,5<->8}\>\""}], "}"}]}],
     "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6559926226271544`*^9, 3.655992637511603*^9}, {
  3.655992779437522*^9, 3.6559927879614396`*^9}, {3.6559943140774546`*^9, 
  3.6559943212777586`*^9}, {3.65599454319263*^9, 3.6559945451047583`*^9}}],

Cell["\<\
{Style[{1733 -> 3}, RGBColor[0, 0, 1]], Style[{1733 -> 3}, RGBColor[0, 0, \
1]], Style[{1733 -> 3}, RGBColor[0, 0, 1]], Style[{1733 -> 3}, RGBColor[0, 0, \
1]], 
 Style[{1733 -> 3}, RGBColor[0, 0, 1]], Style[{1733 -> 3}, RGBColor[0, 0, \
1]], Style[{1734 -> 3}, RGBColor[0.5, 0, 0.5]], Style[{1739 -> 3}, \
RGBColor[2/3, 0, 0]], 
 Style[{1739 -> 3}, RGBColor[2/3, 0, 0]], Style[{1741 -> 5}, GrayLevel[0]], \
Style[{1745 -> 4}, RGBColor[0, 1, 0]]}\
\>", "Output",
 CellChangeTimes->{
  3.655992655496726*^9, 3.6559926877709017`*^9, 3.6559927357936897`*^9, {
   3.6559927693900456`*^9, 3.655992789179747*^9}, {3.6559928451322255`*^9, 
   3.655992895786685*^9}, 3.6559931614810925`*^9, 3.655993266255721*^9, 
   3.6559932963310895`*^9, 3.6559933291050477`*^9, {3.655993379122879*^9, 
   3.655993407693341*^9}, 3.655993440567518*^9, {3.655993496274781*^9, 
   3.6559935198608427`*^9}, 3.655993553402336*^9, 3.655993587837866*^9, {
   3.655993620658579*^9, 3.6559936728922696`*^9}, 3.655993720275859*^9, 
   3.6559942620299883`*^9, 3.6559943224709015`*^9, 3.6559943911174617`*^9, 
   3.6559944603324957`*^9, 3.6559945460947914`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"values", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,2<->7,1<->5}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,2<->5,7<->9}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,5<->7,2<->3}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->7,1<->5}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->5,7<->11}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->6,8<->9}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1734", ",", "\"\<{2,6<->8,3<->4}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1739", ",", "\"\<{2,5<->9,2<->6}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1739", ",", "\"\<{2,5<->6,9<->10}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1741", ",", "\"\<{2,5<->10,6<->11}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1745", ",", "\"\<{2,10<->11,5<->8}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1733", ",", "\"\<{2,1<->7,2<->3}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1734", ",", "\"\<{2,3<->8,6<->11}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1735", ",", "\"\<{2,4<->6,8<->10}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1736", ",", "\"\<{2,4<->8,6<->10}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1737", ",", "\"\<{2,2<->9,3<->5}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1738", ",", "\"\<{2,3<->9,2<->6}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1739", ",", "\"\<{2,6<->9,3<->5}\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1740", ",", "\"\<{2,4<->10,6<->8}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1741", ",", "\"\<{2,6<->10,4<->5}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1742", ",", "\"\<{2,8<->10,4<->11}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1743", ",", "\"\<{2,3<->11,5<->8}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1744", ",", "\"\<{2,5<->11,3<->10}\>\""}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"312", ",", "1745", ",", "\"\<{2,8<->11,3<->10}\>\""}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.655994566156145*^9, 3.6559945699992743`*^9}, {
  3.655997135568655*^9, 3.6559971401797895`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,2<->7,1<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,2<->5,7<->9}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,5<->7,2<->3}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,3<->7,1<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,3<->5,7<->11}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,3<->6,8<->9}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1734", ",", "\<\"{2,6<->8,3<->4}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1739", ",", "\<\"{2,5<->9,2<->6}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1739", ",", "\<\"{2,5<->6,9<->10}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1741", ",", "\<\"{2,5<->10,6<->11}\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1745", ",", "\<\"{2,10<->11,5<->8}\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1733", ",", "\<\"{2,1<->7,2<->3}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1734", ",", "\<\"{2,3<->8,6<->11}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1735", ",", "\<\"{2,4<->6,8<->10}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1736", ",", "\<\"{2,4<->8,6<->10}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1737", ",", "\<\"{2,2<->9,3<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1738", ",", "\<\"{2,3<->9,2<->6}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1739", ",", "\<\"{2,6<->9,3<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1740", ",", "\<\"{2,4<->10,6<->8}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1741", ",", "\<\"{2,6<->10,4<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1742", ",", "\<\"{2,8<->10,4<->11}\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1743", ",", "\<\"{2,3<->11,5<->8}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1744", ",", "\<\"{2,5<->11,3<->10}\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"312", ",", "1745", ",", "\<\"{2,8<->11,3<->10}\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6559945715593*^9, 3.6559971413636203`*^9, 
  3.6559984645159335`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.656079806538127*^9, 3.656079832342924*^9}, 
   3.656079915645404*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"383", ",", "3044", ",", "\<\"{2,3<->7,1<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3045", ",", "\<\"{2,5<->7,3<->11}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3045", ",", "\<\"{2,3<->8,5<->6}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3047", ",", "\<\"{2,4<->8,5<->6}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3047", ",", "\<\"{2,3<->6,8<->9}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3048", ",", "\<\"{2,4<->6,8<->10}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3048", ",", "\<\"{2,2<->9,3<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3048", ",", "\<\"{2,3<->9,2<->6}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3049", ",", "\<\"{2,2<->5,9<->11}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3051", ",", "\<\"{2,5<->10,4<->9}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3052", ",", "\<\"{2,9<->10,5<->6}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3052", ",", "\<\"{2,1<->11,2<->7}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3052", ",", "\<\"{2,2<->11,1<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3052", ",", "\<\"{2,7<->11,1<->5}\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"383", ",", "3052", ",", "\<\"{2,5<->11,2<->7}\"\>"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6560798331286507`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ChromaticPolynomial", "[", 
   RowBox[{
    RowBox[{"ReadGrof", "[", "312", "]"}], ",", "4"}], "]"}], "/", 
  "24"}]], "Input",
 CellChangeTimes->{{3.656079859775713*^9, 3.6560798862068224`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.6560798868098216`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"gn", "=", "312"}], ",", " ", 
     RowBox[{"val", "=", "values2"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"HighlightGraph", "[", 
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"ReadGrof", "[", "gn", "]"}], ",", 
       RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
       RowBox[{"EdgeLabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Red", ",", "Italic", ",", "12"}], "]"}]}], ",", 
       RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"\"\<Graph \>\"", "<>", 
         RowBox[{"ToString", "[", "gn", "]"}], "<>", " ", 
         "\"\< * Colofour=\>\"", " ", "<>", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"Chrom", "[", "gn", "]"}], "/", "24"}], "]"}]}]}], ",", 
       " ", 
       RowBox[{"PlotLabel", "\[Rule]", 
        RowBox[{"Title", "[", "val", "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
       RowBox[{"EdgeLabels", "\[Rule]", 
        RowBox[{"Edges", "[", "val", "]"}]}]}], "]"}], ",", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transf", "[", "val", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ReadGraphDiamondHighLights", "[", "gn", "]"}]}], 
      "\[IndentingNewLine]", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.6560831560250006`*^9, 3.656083168621002*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 7, 5, 9, 6, 8, 11, 4, 10}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {2, 6}, {3, 5}, {
       3, 7}, {3, 4}, {3, 8}, {3, 6}, {3, 9}, {10, 7}, {10, 8}, {10, 11}, {5, 
       7}, {5, 4}, {5, 6}, {5, 11}, {5, 9}, {7, 8}, {7, 6}, {7, 11}, {8, 
       11}, {8, 9}, {11, 9}}}, {
      EdgeLabels -> {
        UndirectedEdge[1, 7] -> 25, UndirectedEdge[7, 11] -> 20, 
         UndirectedEdge[3, 6] -> 12, UndirectedEdge[2, 9] -> 36, 
         UndirectedEdge[3, 7] -> 25, UndirectedEdge[9, 10] -> 20, 
         UndirectedEdge[4, 6] -> 36, UndirectedEdge[6, 8] -> 36, 
         UndirectedEdge[5, 7] -> 48, UndirectedEdge[3, 8] -> 48, 
         UndirectedEdge[5, 9] -> 24, UndirectedEdge[3, 9] -> 36, 
         UndirectedEdge[2, 11] -> 20, UndirectedEdge[4, 10] -> 12, 
         UndirectedEdge[5, 10] -> 12, UndirectedEdge[5, 8] -> 12, 
         UndirectedEdge[4, 8] -> 12, UndirectedEdge[4, 5] -> 12, 
         UndirectedEdge[1, 11] -> 20, UndirectedEdge[3, 5] -> 48, 
         UndirectedEdge[5, 11] -> 20, UndirectedEdge[2, 5] -> 15, 
         UndirectedEdge[6, 9] -> 15, UndirectedEdge[6, 10] -> 20}, 
       EdgeLabelStyle -> {
         Directive[
          RGBColor[1, 0, 0], Italic, 12]}, Frame -> True, FrameLabel -> 
       "Graph 312 * Colofour=4", GraphHighlight -> {
         UndirectedEdge[2, 9], 
         UndirectedEdge[3, 11], 
         UndirectedEdge[3, 8], 
         UndirectedEdge[4, 8], 
         UndirectedEdge[5, 9], 
         UndirectedEdge[5, 11], 
         UndirectedEdge[3, 5], 
         UndirectedEdge[4, 10], 
         UndirectedEdge[5, 6], 
         UndirectedEdge[1, 7], 
         UndirectedEdge[4, 6], 
         UndirectedEdge[3, 7], 
         UndirectedEdge[2, 7], 
         UndirectedEdge[2, 5], 
         UndirectedEdge[3, 9], 
         UndirectedEdge[6, 8], 
         UndirectedEdge[6, 10], 
         UndirectedEdge[5, 10], 
         UndirectedEdge[8, 10], 
         UndirectedEdge[6, 9], 
         UndirectedEdge[3, 6], 
         UndirectedEdge[5, 7]}, 
       GraphHighlightStyle -> {UndirectedEdge[6, 8] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24, 0.6, 0.33692049419863584`]]}, 
         UndirectedEdge[2, 9] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24, 0.6, 0.33692049419863584`]]}, 
         UndirectedEdge[5, 6] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.42664098839727194`, 0.24]]}, 
         UndirectedEdge[3, 9] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24, 0.6, 0.33692049419863584`]]}, 
         UndirectedEdge[8, 10] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.5470136627990908, 0.24]]}, 
         UndirectedEdge[4, 6] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24, 0.6, 0.33692049419863584`]]}, 
         UndirectedEdge[3, 11] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.6, 0.24, 0.2941043604063603]]}, 
         UndirectedEdge[2, 7] -> {EdgeStyle -> Directive[
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.2634521802031821, 0.6, 0.24]]}, 
         UndirectedEdge[5, 9] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.6, 0.24, 0.5632658430022722]]}, 
         UndirectedEdge[6, 10] -> {EdgeStyle -> Directive[
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.2634521802031821, 0.6, 0.24]]}, 
         UndirectedEdge[4, 10] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.42664098839727194`, 0.24]]}, 
         UndirectedEdge[3, 7] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.6, 0.24, 0.2941043604063603]]}, 
         UndirectedEdge[5, 7] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24720000000000014`, 0.24, 0.6]]}, 
         UndirectedEdge[3, 8] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24720000000000014`, 0.24, 0.6]]}, 
         UndirectedEdge[2, 5] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.24, 0.3531726744018182, 0.6]]}, 
         UndirectedEdge[3, 6] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.5470136627990908, 0.24]]}, 
         UndirectedEdge[4, 8] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.5470136627990908, 0.24]]}, 
         UndirectedEdge[3, 5] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24720000000000014`, 0.24, 0.6]]}, 
         UndirectedEdge[6, 9] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.24, 0.3531726744018182, 0.6]]}, 
         UndirectedEdge[5, 11] -> {EdgeStyle -> Directive[
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.2634521802031821, 0.6, 0.24]]}, 
         UndirectedEdge[1, 7] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.6, 0.24, 0.2941043604063603]]}, 
         UndirectedEdge[5, 10] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.42664098839727194`, 0.24]]}}, 
       GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"},
        ImageSize -> 800, PlotLabel -> {
         Style[{3044 -> 25}, 
          RGBColor[0.6, 0.24, 0.2941043604063603]], 
         Style[{3045 -> 48}, 
          RGBColor[0.24720000000000014`, 0.24, 0.6]], 
         Style[{3047 -> 12}, 
          RGBColor[0.6, 0.5470136627990908, 0.24]], 
         Style[{3048 -> 36}, 
          RGBColor[0.24, 0.6, 0.33692049419863584`]], 
         Style[{3049 -> 15}, 
          RGBColor[0.24, 0.3531726744018182, 0.6]], 
         Style[{3051 -> 12}, 
          RGBColor[0.6, 0.42664098839727194`, 0.24]], 
         Style[{3052 -> 20}, 
          RGBColor[0.2634521802031821, 0.6, 0.24]], 
         Style[{3046 -> 12}, 
          RGBColor[0.6, 0.24, 0.4428931686004542]], 
         Style[{3050 -> 24}, 
          RGBColor[0.6, 0.24, 0.5632658430022722]]}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {10., 0.}}, 0.06561181434599156]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {1., 1.}}, 0.06561181434599156]}, {
         {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.}, {0., 10.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["25",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {0., 5.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{10., 0.}, {1., 1.}}, 0.06561181434599156]}, 
        {RGBColor[0.2634521802031821, 0.6, 0.24], Thickness[Large], 
         Dashing[{Small, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{10., 0.}, {0., 10.}}, 0.06561181434599156]}}, {
         {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[Large], 
          Dashing[{0, Small}], 
          {Arrowheads[0.], 
           ArrowBox[{{10., 0.}, {2., 7.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["15",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {6., 3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{10., 0.}, {7., 1.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["36",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {8.5, 0.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 1.}, {0., 10.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["25",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {0.5, 5.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 1.}, {2., 7.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["48",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {1.5, 4.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 1.}, {7., 1.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["36",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {4., 1.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[Large], 
          Dashing[{0, Small}], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 1.}, {6., 2.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["12",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {3.5, 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{1., 1.}, {3., 3.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["48",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {2., 2.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {2., 4.}}, 0.06561181434599156]}}, {
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 10.}, {2., 7.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["48",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {1., 8.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.6, 0.24, 0.5632658430022722], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{2., 7.}, {7., 1.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["24",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {4.5, 4.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {RGBColor[0.6, 0.42664098839727194`, 0.24], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{2., 7.}, {6., 2.}}, 0.06561181434599156]}}, {
         {RGBColor[0.2634521802031821, 0.6, 0.24], Thickness[Large], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[{{2., 7.}, {2., 4.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["20",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {2., 5.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.6, 0.42664098839727194`, 0.24], Thickness[Large], 
          Dashing[{0, Small}], 
          {Arrowheads[0.], 
           ArrowBox[{{2., 7.}, {3., 5.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["12",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {2.5, 6.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[Large], 
          Dashing[{0, Small}], 
          {Arrowheads[0.], 
           ArrowBox[{{7., 1.}, {6., 2.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["15",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {6.5, 1.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{6., 2.}, {3., 3.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["36",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {4.5, 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[Large], 
          {Arrowheads[0.], 
           ArrowBox[{{6., 2.}, {4., 3.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["36",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {5., 2.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0.2634521802031821, 0.6, 0.24], Thickness[Large], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[{{6., 2.}, {3., 5.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["20",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {4.5, 3.5}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {Arrowheads[0.], 
         ArrowBox[{{3., 3.}, {2., 4.}}, 0.06561181434599156]}, {
         {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[Large], 
          Dashing[{0, Small}], 
          {Arrowheads[0.], 
           ArrowBox[{{3., 3.}, {4., 3.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["12",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {3.5, 3.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}, 
        {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{3., 3.}, {3., 5.}}, 0.06561181434599156]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{2., 4.}, {3., 5.}}, 0.06561181434599156]}, {
         {RGBColor[0.6, 0.42664098839727194`, 0.24], Thickness[Large], 
          Dashing[{0, Small}], 
          {Arrowheads[0.], 
           ArrowBox[{{4., 3.}, {3., 5.}}, 0.06561181434599156]}}, InsetBox[
          StyleBox["12",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->12,
           FontSlant->Italic,
           FontColor->RGBColor[1, 0, 0]], {3.5, 4.}, ImageScaled[{0.5, 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.06561181434599156], 
         InsetBox["1", 
          Offset[{2, 2}, {0.06561181434599156, 0.06561181434599156}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{10., 0.}, 0.06561181434599156], 
         InsetBox["2", 
          Offset[{2, 2}, {10.065611814345992`, 0.06561181434599156}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.06561181434599156], 
         InsetBox["3", 
          Offset[{2, 2}, {1.0656118143459916`, 1.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 10.}, 0.06561181434599156], 
         InsetBox["7", 
          Offset[{2, 2}, {0.06561181434599156, 10.065611814345992`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 7.}, 0.06561181434599156], 
         InsetBox["5", 
          Offset[{2, 2}, {2.0656118143459916`, 7.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7., 1.}, 0.06561181434599156], 
         InsetBox["9", 
          Offset[{2, 2}, {7.065611814345991, 1.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6., 2.}, 0.06561181434599156], 
         InsetBox["6", 
          Offset[{2, 2}, {6.065611814345991, 2.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.06561181434599156], 
         InsetBox["8", 
          Offset[{2, 2}, {3.0656118143459916`, 3.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 4.}, 0.06561181434599156], 
         InsetBox["11", 
          Offset[{2, 2}, {2.0656118143459916`, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 3.}, 0.06561181434599156], 
         InsetBox["4", 
          Offset[{2, 2}, {4.065611814345991, 3.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 5.}, 0.06561181434599156], 
         InsetBox["10", 
          Offset[{2, 2}, {3.0656118143459916`, 5.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  Frame->True,
  FrameLabel->FormBox["\"Graph 312 * Colofour=4\"", TraditionalForm],
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->800,
  PlotLabel->FormBox[
    RowBox[{"{", 
      RowBox[{
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3044", "\[Rule]", "25"}], "}"}], 
         RGBColor[0.6, 0.24, 0.2941043604063603], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3045", "\[Rule]", "48"}], "}"}], 
         RGBColor[0.24720000000000014`, 0.24, 0.6], StripOnInput -> False], 
        ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3047", "\[Rule]", "12"}], "}"}], 
         RGBColor[0.6, 0.5470136627990908, 0.24], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3048", "\[Rule]", "36"}], "}"}], 
         RGBColor[0.24, 0.6, 0.33692049419863584`], StripOnInput -> False], 
        ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3049", "\[Rule]", "15"}], "}"}], 
         RGBColor[0.24, 0.3531726744018182, 0.6], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3051", "\[Rule]", "12"}], "}"}], 
         RGBColor[0.6, 0.42664098839727194`, 0.24], StripOnInput -> False], 
        ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3052", "\[Rule]", "20"}], "}"}], 
         RGBColor[0.2634521802031821, 0.6, 0.24], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3046", "\[Rule]", "12"}], "}"}], 
         RGBColor[0.6, 0.24, 0.4428931686004542], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3050", "\[Rule]", "24"}], "}"}], 
         RGBColor[0.6, 0.24, 0.5632658430022722], StripOnInput -> False]}], 
      "}"}], TraditionalForm]]], "Output",
 CellChangeTimes->{3.656083169776001*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"ReadGrof", "[", "312", "]"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Title", "[", "values2", "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], ",", 
   RowBox[{"Join", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transf", "[", "values2", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ReadGraphDiamondHighLights", "[", "312", "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6559929112137156`*^9, 3.655992929285101*^9}, {
  3.6559937517239356`*^9, 3.6559937724006023`*^9}, {3.655994560099407*^9, 
  3.655994625156064*^9}, {3.655994882337241*^9, 3.6559949475052614`*^9}, {
  3.65599504500443*^9, 3.655995079112564*^9}, {3.6560798416433287`*^9, 
  3.6560798443433104`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 7, 5, 9, 6, 8, 11, 4, 10}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {2, 4}, {2, 6}, {3, 5}, {
       3, 7}, {3, 4}, {3, 8}, {3, 6}, {3, 9}, {10, 7}, {10, 8}, {10, 11}, {5, 
       7}, {5, 4}, {5, 6}, {5, 11}, {5, 9}, {7, 8}, {7, 6}, {7, 11}, {8, 
       11}, {8, 9}, {11, 9}}}, {GraphHighlight -> {
         UndirectedEdge[2, 9], 
         UndirectedEdge[3, 11], 
         UndirectedEdge[3, 8], 
         UndirectedEdge[4, 8], 
         UndirectedEdge[5, 11], 
         UndirectedEdge[3, 5], 
         UndirectedEdge[5, 9], 
         UndirectedEdge[4, 10], 
         UndirectedEdge[5, 6], 
         UndirectedEdge[1, 7], 
         UndirectedEdge[3, 7], 
         UndirectedEdge[4, 6], 
         UndirectedEdge[2, 5], 
         UndirectedEdge[2, 7], 
         UndirectedEdge[3, 9], 
         UndirectedEdge[6, 8], 
         UndirectedEdge[6, 10], 
         UndirectedEdge[5, 10], 
         UndirectedEdge[8, 10], 
         UndirectedEdge[6, 9], 
         UndirectedEdge[3, 6], 
         UndirectedEdge[5, 7]}, 
       GraphHighlightStyle -> {UndirectedEdge[6, 8] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24, 0.6, 0.33692049419863584`]]}, 
         UndirectedEdge[2, 9] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24, 0.6, 0.33692049419863584`]]}, 
         UndirectedEdge[5, 6] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.42664098839727194`, 0.24]]}, 
         UndirectedEdge[3, 9] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24, 0.6, 0.33692049419863584`]]}, 
         UndirectedEdge[8, 10] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.5470136627990908, 0.24]]}, 
         UndirectedEdge[4, 6] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24, 0.6, 0.33692049419863584`]]}, 
         UndirectedEdge[3, 11] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.6, 0.24, 0.2941043604063603]]}, 
         UndirectedEdge[2, 7] -> {EdgeStyle -> Directive[
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.2634521802031821, 0.6, 0.24]]}, 
         UndirectedEdge[5, 9] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.6, 0.24, 0.5632658430022722]]}, 
         UndirectedEdge[6, 10] -> {EdgeStyle -> Directive[
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.2634521802031821, 0.6, 0.24]]}, 
         UndirectedEdge[4, 10] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.42664098839727194`, 0.24]]}, 
         UndirectedEdge[3, 7] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.6, 0.24, 0.2941043604063603]]}, 
         UndirectedEdge[5, 7] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24720000000000014`, 0.24, 0.6]]}, 
         UndirectedEdge[3, 8] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24720000000000014`, 0.24, 0.6]]}, 
         UndirectedEdge[2, 5] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.24, 0.3531726744018182, 0.6]]}, 
         UndirectedEdge[4, 8] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.5470136627990908, 0.24]]}, 
         UndirectedEdge[3, 6] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.5470136627990908, 0.24]]}, 
         UndirectedEdge[3, 5] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.24720000000000014`, 0.24, 0.6]]}, 
         UndirectedEdge[6, 9] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.24, 0.3531726744018182, 0.6]]}, 
         UndirectedEdge[5, 11] -> {EdgeStyle -> Directive[
             Dashing[{Small, Small}], 
             Thickness[Large], 
             RGBColor[0.2634521802031821, 0.6, 0.24]]}, 
         UndirectedEdge[1, 7] -> {EdgeStyle -> Directive[
             Thickness[Large], 
             RGBColor[0.6, 0.24, 0.2941043604063603]]}, 
         UndirectedEdge[5, 10] -> {EdgeStyle -> Directive[
             Dashing[{0, Small}], 
             Thickness[Large], 
             RGBColor[0.6, 0.42664098839727194`, 0.24]]}}, 
       GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"},
        ImageSize -> 800, PlotLabel -> {
         Style[{3044 -> 25}, 
          RGBColor[0.6, 0.24, 0.2941043604063603]], 
         Style[{3045 -> 48}, 
          RGBColor[0.24720000000000014`, 0.24, 0.6]], 
         Style[{3047 -> 12}, 
          RGBColor[0.6, 0.5470136627990908, 0.24]], 
         Style[{3048 -> 36}, 
          RGBColor[0.24, 0.6, 0.33692049419863584`]], 
         Style[{3049 -> 15}, 
          RGBColor[0.24, 0.3531726744018182, 0.6]], 
         Style[{3051 -> 12}, 
          RGBColor[0.6, 0.42664098839727194`, 0.24]], 
         Style[{3052 -> 20}, 
          RGBColor[0.2634521802031821, 0.6, 0.24]], 
         Style[{3046 -> 12}, 
          RGBColor[0.6, 0.24, 0.4428931686004542]], 
         Style[{3050 -> 24}, 
          RGBColor[0.6, 0.24, 0.5632658430022722]]}, 
       VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0., 0.}, {10., 0.}}, 0.06561181434599156]}, 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {1., 1.}}, 0.06561181434599156]}, 
        {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{0., 0.}, {0., 10.}}, 0.06561181434599156]}}, 
        {Arrowheads[0.], 
         ArrowBox[{{10., 0.}, {1., 1.}}, 0.06561181434599156]}, 
        {RGBColor[0.2634521802031821, 0.6, 0.24], Thickness[Large], 
         Dashing[{Small, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{10., 0.}, {0., 10.}}, 0.06561181434599156]}}, 
        {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{10., 0.}, {2., 7.}}, 0.06561181434599156]}}, 
        {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{10., 0.}, {7., 1.}}, 0.06561181434599156]}}, 
        {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {0., 10.}}, 0.06561181434599156]}}, 
        {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {2., 7.}}, 0.06561181434599156]}}, 
        {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {7., 1.}}, 0.06561181434599156]}}, 
        {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {6., 2.}}, 0.06561181434599156]}}, 
        {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {3., 3.}}, 0.06561181434599156]}}, 
        {RGBColor[0.6, 0.24, 0.2941043604063603], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{1., 1.}, {2., 4.}}, 0.06561181434599156]}}, 
        {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{0., 10.}, {2., 7.}}, 0.06561181434599156]}}, 
        {RGBColor[0.6, 0.24, 0.5632658430022722], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{2., 7.}, {7., 1.}}, 0.06561181434599156]}}, 
        {RGBColor[0.6, 0.42664098839727194`, 0.24], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{2., 7.}, {6., 2.}}, 0.06561181434599156]}}, 
        {RGBColor[0.2634521802031821, 0.6, 0.24], Thickness[Large], 
         Dashing[{Small, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{2., 7.}, {2., 4.}}, 0.06561181434599156]}}, 
        {RGBColor[0.6, 0.42664098839727194`, 0.24], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{2., 7.}, {3., 5.}}, 0.06561181434599156]}}, 
        {RGBColor[0.24, 0.3531726744018182, 0.6], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{7., 1.}, {6., 2.}}, 0.06561181434599156]}}, 
        {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{6., 2.}, {3., 3.}}, 0.06561181434599156]}}, 
        {RGBColor[0.24, 0.6, 0.33692049419863584`], Thickness[Large], 
         {Arrowheads[0.], 
          ArrowBox[{{6., 2.}, {4., 3.}}, 0.06561181434599156]}}, 
        {RGBColor[0.2634521802031821, 0.6, 0.24], Thickness[Large], 
         Dashing[{Small, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{6., 2.}, {3., 5.}}, 0.06561181434599156]}}, 
        {Arrowheads[0.], ArrowBox[{{3., 3.}, {2., 4.}}, 0.06561181434599156]}, 
        {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{3., 3.}, {4., 3.}}, 0.06561181434599156]}}, 
        {RGBColor[0.6, 0.5470136627990908, 0.24], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{3., 3.}, {3., 5.}}, 0.06561181434599156]}}, 
        {Arrowheads[0.], ArrowBox[{{2., 4.}, {3., 5.}}, 0.06561181434599156]}, 
        {RGBColor[0.6, 0.42664098839727194`, 0.24], Thickness[Large], 
         Dashing[{0, Small}], 
         {Arrowheads[0.], 
          ArrowBox[{{4., 3.}, {3., 5.}}, 0.06561181434599156]}}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.06561181434599156], 
         InsetBox["1", 
          Offset[{2, 2}, {0.06561181434599156, 0.06561181434599156}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{10., 0.}, 0.06561181434599156], 
         InsetBox["2", 
          Offset[{2, 2}, {10.065611814345992`, 0.06561181434599156}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.06561181434599156], 
         InsetBox["3", 
          Offset[{2, 2}, {1.0656118143459916`, 1.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 10.}, 0.06561181434599156], 
         InsetBox["7", 
          Offset[{2, 2}, {0.06561181434599156, 10.065611814345992`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 7.}, 0.06561181434599156], 
         InsetBox["5", 
          Offset[{2, 2}, {2.0656118143459916`, 7.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{7., 1.}, 0.06561181434599156], 
         InsetBox["9", 
          Offset[{2, 2}, {7.065611814345991, 1.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6., 2.}, 0.06561181434599156], 
         InsetBox["6", 
          Offset[{2, 2}, {6.065611814345991, 2.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 3.}, 0.06561181434599156], 
         InsetBox["8", 
          Offset[{2, 2}, {3.0656118143459916`, 3.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 4.}, 0.06561181434599156], 
         InsetBox["11", 
          Offset[{2, 2}, {2.0656118143459916`, 4.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 3.}, 0.06561181434599156], 
         InsetBox["4", 
          Offset[{2, 2}, {4.065611814345991, 3.0656118143459916`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 5.}, 0.06561181434599156], 
         InsetBox["10", 
          Offset[{2, 2}, {3.0656118143459916`, 5.065611814345991}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->800,
  PlotLabel->FormBox[
    RowBox[{"{", 
      RowBox[{
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3044", "\[Rule]", "25"}], "}"}], 
         RGBColor[0.6, 0.24, 0.2941043604063603], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3045", "\[Rule]", "48"}], "}"}], 
         RGBColor[0.24720000000000014`, 0.24, 0.6], StripOnInput -> False], 
        ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3047", "\[Rule]", "12"}], "}"}], 
         RGBColor[0.6, 0.5470136627990908, 0.24], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3048", "\[Rule]", "36"}], "}"}], 
         RGBColor[0.24, 0.6, 0.33692049419863584`], StripOnInput -> False], 
        ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3049", "\[Rule]", "15"}], "}"}], 
         RGBColor[0.24, 0.3531726744018182, 0.6], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3051", "\[Rule]", "12"}], "}"}], 
         RGBColor[0.6, 0.42664098839727194`, 0.24], StripOnInput -> False], 
        ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3052", "\[Rule]", "20"}], "}"}], 
         RGBColor[0.2634521802031821, 0.6, 0.24], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3046", "\[Rule]", "12"}], "}"}], 
         RGBColor[0.6, 0.24, 0.4428931686004542], StripOnInput -> False], ",", 
        StyleBox[
         RowBox[{"{", 
           RowBox[{"3050", "\[Rule]", "24"}], "}"}], 
         RGBColor[0.6, 0.24, 0.5632658430022722], StripOnInput -> False]}], 
      "}"}], TraditionalForm]]], "Output",
 CellChangeTimes->{{3.6559929191047297`*^9, 3.6559929303744287`*^9}, 
   3.655993156254278*^9, 3.655993448043787*^9, 3.6559936831663866`*^9, 
   3.6559937356334934`*^9, 3.6559937736271563`*^9, 3.6559938545031347`*^9, 
   3.655994271536171*^9, 3.655994395625428*^9, 3.655994466006432*^9, {
   3.6559945914603376`*^9, 3.6559946262837462`*^9}, {3.6559949063585787`*^9, 
   3.6559949485037785`*^9}, {3.655995046232882*^9, 3.6559950656822653`*^9}, 
   3.6559954903154235`*^9, 3.655995568726664*^9, 3.6559956672108927`*^9, 
   3.6559971446532297`*^9, 3.65607984570231*^9, 3.6560831293958673`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ChromaticPolynomial", "[", " ", 
   RowBox[{
    RowBox[{"Rule2", "[", 
     RowBox[{
      RowBox[{"ReadGrof", "[", "312", "]"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "7"}]}], "]"}], ",", "4"}], "]"}], 
  "/", "24"}]], "Input",
 CellChangeTimes->{{3.656063760304073*^9, 3.656063811595099*^9}, {
  3.65606384655023*^9, 3.6560638669868956`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.656063813977086*^9, {3.656063852059215*^9, 3.656063867954898*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Chrom", "[", 
      RowBox[{"#", "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], "/", "24"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,2<->7,1<->5}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,2<->5,7<->9}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,5<->7,2<->3}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->7,1<->5}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->5,7<->11}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1733", ",", "\"\<{2,3<->6,8<->9}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1734", ",", "\"\<{2,6<->8,3<->4}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1739", ",", "\"\<{2,5<->9,2<->6}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1739", ",", "\"\<{2,5<->6,9<->10}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1741", ",", "\"\<{2,5<->10,6<->11}\>\""}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"312", ",", "1745", ",", "\"\<{2,10<->11,5<->8}\>\""}], "}"}]}],
     "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.655993018766574*^9, 3.6559930442395716`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", ",", "3", 
   ",", "3", ",", "5", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.655993045346425*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Chrom", "[", "312", "]"}], "/", "24"}]], "Input",
 CellChangeTimes->{{3.655993050808161*^9, 3.65599305964087*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.6559930552424374`*^9, 3.655993060190839*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReadGraphDiamondHighLights", "[", "312", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.6559937864396343`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Join", "[", 
    RowBox[{"FindHamiltonianCycle", "[", 
     RowBox[{
      RowBox[{"ReadGrof", "[", "312", "]"}], ",", "80"}], "]"}], "]"}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.6559948329877167`*^9, 3.6559948695705085`*^9}, {
  3.655994976941927*^9, 3.655995027896496*^9}, {3.655995058874815*^9, 
  3.6559950591553545`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"9", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "11"}], ",", 
   RowBox[{"11", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"10", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "1"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"10", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"11", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"10", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"11", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"9", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"10", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"10", "\[UndirectedEdge]", "11"}], ",", 
   RowBox[{"11", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"8", "\[UndirectedEdge]", "11"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "11"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"9", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "10"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "9"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "1"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "2"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6559948461298037`*^9, 3.65599487038699*^9}, {
   3.655994978619952*^9, 3.6559950287086573`*^9}, 3.655995059844214*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Chrom", "[", "#", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"24", "*", "4"}], ")"}]}], "&"}], ",", " ", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"Range", "[", "2000", "]"}], ",", 
      RowBox[{
       RowBox[{"EulerianGraphQ", "[", 
        RowBox[{"ReadGrof", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6559950860352397`*^9, 3.6559951153249383`*^9}, {
  3.655995241552414*^9, 3.6559952527877927`*^9}, {3.655995283284542*^9, 
  3.655995350060155*^9}, {3.6559953994761515`*^9, 3.6559954005093613`*^9}, {
  3.6559954347255306`*^9, 3.655995458078212*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "4", ",", "7", ",", "10", ",", "11", ",", "12"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6559951048625298`*^9, 3.6559951163622656`*^9}, {
   3.655995245270383*^9, 3.655995256613823*^9}, {3.6559953166965847`*^9, 
   3.655995353775816*^9}, 3.655995408797682*^9, {3.6559954461872387`*^9, 
   3.6559954661309104`*^9}}]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 131, 2, 31, "Input"],
Cell[714, 26, 121, 2, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[872, 33, 290, 7, 31, "Input"],
Cell[1165, 42, 10537, 269, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11739, 316, 286, 7, 31, "Input"],
Cell[12028, 325, 10576, 269, 151, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22641, 599, 1473, 34, 31, "Input"],
Cell[24117, 635, 374407, 5926, 895, 155245, 2334, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398561, 6566, 133, 2, 31, "Input"],
Cell[398697, 6570, 75, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398809, 6576, 167, 3, 31, "Input"],
Cell[398979, 6581, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[399089, 6587, 254, 5, 31, "Input"],
Cell[399346, 6594, 1469, 48, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400852, 6647, 208, 4, 31, "Input"],
Cell[401063, 6653, 15667, 401, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416767, 7059, 149, 3, 31, "Input"],
Cell[416919, 7064, 98, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417054, 7070, 825, 24, 31, "Input"],
Cell[417882, 7096, 412, 8, 31, "Output"]
}, Open  ]],
Cell[418309, 7107, 723, 22, 31, "Input"],
Cell[CellGroupData[{
Cell[419057, 7133, 370, 10, 31, "Input"],
Cell[419430, 7145, 115, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419582, 7152, 204, 4, 31, "Input"],
Cell[419789, 7158, 122, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[419948, 7165, 724, 22, 31, "Input"],
Cell[420675, 7189, 355, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421067, 7201, 314, 9, 31, "Input"],
Cell[421384, 7212, 94, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421515, 7219, 404, 10, 31, "Input"],
Cell[421922, 7231, 3425, 58, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425384, 7294, 727, 22, 31, "Input"],
Cell[426114, 7318, 391, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426542, 7330, 128, 2, 31, "Input"],
Cell[426673, 7334, 73, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426783, 7340, 315, 9, 31, "Input"],
Cell[427101, 7351, 95, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427233, 7358, 166, 3, 31, "Input"],
Cell[427402, 7363, 71, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427510, 7369, 301, 7, 31, "Input"],
Cell[427814, 7378, 3187, 54, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431038, 7437, 402, 12, 31, "Input"],
Cell[431443, 7451, 101, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[431581, 7457, 1127, 29, 31, "Input"],
Cell[432711, 7488, 4366, 97, 304, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437114, 7590, 450, 12, 31, "Input"],
Cell[437567, 7604, 1472, 46, 52, "Output"]
}, Open  ]],
Cell[439054, 7653, 96, 1, 31, "Input"],
Cell[439153, 7656, 7910, 223, 1492, "Input"],
Cell[447066, 7881, 1314, 28, 292, "Input"],
Cell[CellGroupData[{
Cell[448405, 7913, 2852, 77, 512, "Input"],
Cell[451260, 7992, 2503, 57, 112, "Output"]
}, Open  ]],
Cell[453778, 8052, 3713, 88, 172, "Input"],
Cell[457494, 8142, 2876, 74, 152, "Input"],
Cell[CellGroupData[{
Cell[460395, 8220, 103, 2, 31, "Input"],
Cell[460501, 8224, 23419, 624, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[483957, 8853, 1513, 40, 72, "Input"],
Cell[485473, 8895, 1137, 19, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486647, 8919, 2634, 66, 112, "Input"],
Cell[489284, 8987, 2485, 57, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[491806, 9049, 118, 2, 31, "Input"],
Cell[491927, 9053, 1549, 34, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493513, 9092, 230, 6, 31, "Input"],
Cell[493746, 9100, 72, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[493855, 9106, 1646, 37, 172, "Input"],
Cell[495504, 9145, 23106, 514, 880, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[518647, 9664, 1010, 20, 92, "Input"],
Cell[519660, 9686, 15065, 319, 829, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534762, 10010, 441, 11, 31, "Input"],
Cell[535206, 10023, 119, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535362, 10030, 1487, 43, 72, "Input"],
Cell[536852, 10075, 212, 5, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537101, 10085, 149, 3, 31, "Input"],
Cell[537253, 10090, 96, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537386, 10096, 81, 1, 31, "Input"],
Cell[537470, 10099, 89, 2, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537596, 10106, 425, 10, 31, "Input"],
Cell[538024, 10118, 2562, 51, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540623, 10174, 737, 19, 31, "Input"],
Cell[541363, 10195, 380, 8, 31, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
