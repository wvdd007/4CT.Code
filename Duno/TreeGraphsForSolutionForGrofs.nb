(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   4148203,      67164]
NotebookOptionsPosition[   4147094,      67124]
NotebookOutlinePosition[   4147436,      67139]
CellTagsIndexPosition[   4147393,      67136]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"edges", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"EdgeList", "[", 
             RowBox[{"PathGraph", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToString", "[", "#", "]"}], "&"}], ",", 
                RowBox[{"Haccumulate", "[", " ", 
                 RowBox[{"RecordToCouples", "[", "#", "]"}], "]"}]}], "]"}], 
              "]"}], "]"}], "&"}], ",", 
           RowBox[{"ToVarsLogical", "[", 
            RowBox[{
             RowBox[{"ReadGrof", "[", "k", "]"}], ",", 
             RowBox[{"x1", "\[Equal]", "1"}]}], "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", "=", 
           RowBox[{"Graph", "[", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", "edges", "]"}], "]"}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", " ", 
           RowBox[{"GraphLayout", "\[Rule]", "\"\<RadialDrawing\>\""}], ",", 
           RowBox[{"VertexStyle", "\[Rule]", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "->", 
                RowBox[{"IndexToColor", "[", " ", 
                 RowBox[{"FromDigits", "[", " ", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "&"}], ",", 
              " ", 
              RowBox[{"VertexList", "[", "g", "]"}]}], "]"}]}], ",", " ", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"GraphSignature2", "[", 
             RowBox[{"ReadGrof", "[", "k", "]"}], "]"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "50000", ",", "50010"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.6626435188997498`*^9, 3.662643536742801*^9}, {
  3.6626436567994957`*^9, 3.662643692856715*^9}, {3.6626437268901887`*^9, 
  3.6626437271429615`*^9}, {3.6626441092876916`*^9, 3.6626441254297647`*^9}, {
  3.662644160968142*^9, 3.6626441648727846`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2#13-4#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2#13-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2#13-1#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2#13-4#4-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2#13-3#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2#13-3#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2#13-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2#13-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2#13-1#4-3", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3#13-4#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3#13-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3#13-1#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3#13-4#4-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3#13-2#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3#13-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3#13-2#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3#13-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3#13-1#4-2", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4#13-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4#13-3#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4#13-1#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4#13-3#4-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4#13-2#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4#13-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4#13-2#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4#13-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4#13-1#4-2"}, {
        Null, CompressedData["
1:eJwBiwF0/iFib1JiAgAAAL0AAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCA4ODw8QEBEREgYTExQUFRUWFhcXGBgZBRoaGxscHB0dHh4fHyAgIQIi
IiMjJCQlJSYmJycoKCkpKiorKywkLS0uLi8vMDAxMTIyMzM0LzU1NjY3Nzg4
OS06Ojs7PDw9PT4+Pz9AAUFBQkJDQ0RERUVGRkdHSEhJSUpKS0tMR01NTk5P
T1BQUUVSUlNTVFRVVVZWV1dYRFlZWlpbW1xcXV1eXl9fYEFhYWJiY2NkZGVl
ZmZnZ2hoaWlqamtjbGxtbW5ub29wcHFxcnJzbnR0dXV2dnd3eGx5eXp6e3t8
fH19fn5/AYCAgYGCgoODhISFhYaGh4eIiImJioqLhoyMjY2Ojo+PkISRkZKS
k5OUlJWVlpaXg5iYmZmampubnJydnZ6en4CgoKGhoqKjo6SkpaWmpqenqKip
qaqiq6usrK2trq6vr7CwsbGyrbOztLS1tba2t6u4uLm5urq7u7y8vb2+ctmN
lw==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "9-9-7-6-6-5-5-4-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4#13-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4#13-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3#13-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4#13-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3#13-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2#13-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2#13-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2#13-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3#13-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
jLv/ACV6RvI=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 65}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 128}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 34}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 26}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 19}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 14}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 45}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 58}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 53}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 97}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 89}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 82}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 77}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 108}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 121}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 116}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 160}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 152}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 145}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 140}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 171}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 184}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 179}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09259951522411705]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[15, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[18, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[22, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[23, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[26, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[28, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[30, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[31, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[37, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[39, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[41, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[42, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[43, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[49, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[54, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[57, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[61, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[64, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[70, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[71, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[74, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[78, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[79, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[80, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[81, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[82, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[84, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[85, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[86, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[88, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[89, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[91, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[92, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[93, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[94, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[95, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[96, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[97, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[99, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[101, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[103, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[104, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[105, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[106, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[107, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[108, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[109, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[110, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[112, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[116, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[119, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[120, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[124, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[125, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[126, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[127, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[128, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[129, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[131, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[132, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[133, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[134, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[136, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[137, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[139, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[140, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[142, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[143, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[144, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[148, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[149, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[150, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[151, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[152, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[153, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[155, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[156, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[157, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[158, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[159, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[164, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[166, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[167, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[168, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[169, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[170, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[171, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[172, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[174, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[175, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[176, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[178, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[179, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[180, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[182, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[183, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[185, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[186, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[187, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[188, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[189, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[190, 0.09259951522411705]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"9-9-7-6-6-5-5-4-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2#4-4#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2#4-2#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2#4-4#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2#4-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2#4-3#13-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2#4-4#13-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2#4-3#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2#4-2#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2#4-3#13-1", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3#4-4#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3#4-3#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3#4-4#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3#4-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3#4-2#13-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3#4-4#13-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3#4-3#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3#4-2#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3#4-2#13-1", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4#4-4#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4#4-3#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4#4-3#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4#4-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4#4-2#13-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4#4-3#13-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4#4-4#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4#4-2#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4#4-2#13-1"}, {
        Null, CompressedData["
1:eJwBiwF0/iFib1JiAgAAAL0AAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCA4ODw8QEBEREgYTExQUFRUWFhcXGBgZBRoaGxscHB0dHh4fHyAgIQIi
IiMjJCQlJSYmJycoKCkpKiorKywkLS0uLi8vMDAxMTIyMzM0LzU1NjY3Nzg4
OS06Ojs7PDw9PT4+Pz9AAUFBQkJDQ0RERUVGRkdHSEhJSUpKS0tMR01NTk5P
T1BQUUVSUlNTVFRVVVZWV1dYRFlZWlpbW1xcXV1eXl9fYEFhYWJiY2NkZGVl
ZmZnZ2hoaWlqamtjbGxtbW5ub29wcHFxcnJzbnR0dXV2dnd3eGx5eXp6e3t8
fH19fn5/AYCAgYGCgoODhISFhYaGh4eIiImJioqLhoyMjY2Ojo+PkISRkZKS
k5OUlJWVlpaXg5iYmZmampubnJydnZ6en4CgoKGhoqKjo6SkpaWmpqenqKip
qaqiq6usrK2trq6vr7CwsbGyrbOztLS1tba2t6u4uLm5urq7u7y8vb2+ctmN
lw==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "9-8-7-7-6-5-5-4-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> RGBColor[0, 0, 1],
            "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2#4-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4#4-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4#4-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4#4-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3#12-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3#12-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-2#12-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-4#12-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-2#12-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-4#12-3#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-2#12-3#4-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2#4-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-2#12-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-3#12-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3#4-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-3#12-4#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3#12-2#4-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-2#12-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-2#12-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-4#12-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-2#12-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-4#12-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-4#12-2#4-4" -> 
           RGBColor[1, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
jLv/ACV6RvI=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 65}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 128}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 34}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 26}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 19}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 14}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 45}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 58}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 53}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 97}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 89}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 82}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 77}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 108}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 121}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 116}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 160}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 152}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 145}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 140}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 171}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 184}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 179}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09259951522411705]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[15, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[18, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[22, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[23, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[25, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[26, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[28, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[30, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[31, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[37, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[39, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[41, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[42, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[49, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[54, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[57, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[61, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[63, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[64, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[70, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[71, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[74, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[78, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[79, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[80, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[81, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[82, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[84, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[85, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[86, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[87, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[88, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[89, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[91, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[92, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[93, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[94, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[96, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[97, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[99, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[101, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[103, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[104, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[105, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[106, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[107, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[108, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[109, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[110, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[112, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[116, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[119, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[120, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[124, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[125, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[126, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[128, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[129, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[131, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[132, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[133, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[134, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[136, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[137, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[139, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[140, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[142, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[143, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[144, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[148, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[149, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[151, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[152, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[153, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[155, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[156, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[157, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[158, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[159, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[164, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[166, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[167, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[168, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[169, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[170, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[171, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[172, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[174, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[175, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[176, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[178, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[179, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[180, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[182, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[183, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[185, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[186, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[187, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[188, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[189, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[190, 0.09259951522411705]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"9-8-7-7-6-5-5-4-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-2#11-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-4#11-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4#13-1#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4#13-1#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4#13-1#8-2#11-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1#13-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1#13-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1#13-4#8-2#11-2#4-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1#13-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1#13-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1#13-3#8-2#11-2#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-2#11-2#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-3#11-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3#13-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3#13-1#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3#13-1#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3#13-1#8-2#11-2#4-3", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-3#11-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-4#11-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4#13-1#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4#13-1#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4#13-1#8-3#11-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1#13-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1#13-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1#13-4#8-3#11-3#4-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1#13-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1#13-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1#13-2#8-3#11-3#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-2#11-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-3#11-3#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2#13-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2#13-1#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2#13-1#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2#13-1#8-3#11-3#4-2", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-3#11-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-4#11-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3#13-1#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3#13-1#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3#13-1#8-4#11-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1#13-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1#13-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1#13-3#8-4#11-4#4-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1#13-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1#13-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1#13-2#8-4#11-4#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-2#11-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-4#11-4#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2#13-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2#13-1#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2#13-1#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2#13-1#8-4#11-4#4-2"}, {
        Null, CompressedData["
1:eJwBcwGM/iFib1JiAgAAALEAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCg4ODw8QBhEREhITExQUFRUWFhcFGBgZGRoaGxscHB0dHh4fAiAgISEi
IiMjJCQlJSYmJycoKCkpKiIrKywsLS0uLi8vMDAxMTIvMzM0NDUrNjY3Nzg4
OTk6Ojs7PAE9PT4+Pz9AQEFBQkJDQ0RERUVGRkdHSEVJSUpKS0FMTE1NTk5P
T1BQUVFSQFNTVFRVVVZWV1dYWFlZWj1bW1xcXV1eXl9fYGBhYWJiY2NkZGVd
ZmZnZ2hoaWlqamtrbGxtam5ub29wZnFxcnJzc3R0dXV2dncBeHh5eXp6e3t8
fH19fn5/f4CAgYGCgoOAhISFhYZ8h4eIiImJioqLi4yMjXuOjo+PkJCRkZKS
k5OUlJV4lpaXl5iYmZmampubnJydnZ6en5+gmKGhoqKjo6SkpaWmpqenqKWp
qaqqq6GsrK2trq6vr7CwsbGy7Hh8ew==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "9-9-8-6-5-5-5-4-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4#13-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1#13-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1#13-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2#13-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> RGBColor[0, 0, 1],
            "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3#13-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2#13-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1#13-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1#13-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3#13-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1#13-3#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1#13-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4#13-1#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1#13-4#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4#13-1#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1#13-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1#13-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1#13-4#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2#13-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3#13-1#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4#13-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-3#11-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-3#13-1#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1#13-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1#13-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3#13-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4#13-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-1#13-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1#13-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-3#11-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1#13-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-4#13-1#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1#13-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1#13-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2#13-1#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-2#11-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-3#13-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-1#13-2#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1#13-2#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2#13-1#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-4#11-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-1#13-2#8-2#11-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-1#13-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-2#13-1#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-1#13-3#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-1#13-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-1#13-4#8-4#11-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-1#13-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-2" -> 
           RGBColor[0, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
2kCOtOTqdyQowMw=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{1, 61}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{1, 120}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{2, 32}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{5, 24}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{6, 17}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{10, 14}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{34, 43}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{43, 54}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{47, 51}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{61, 91}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{64, 83}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{65, 76}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{69, 73}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{93, 102}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{102, 113}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{106, 110}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{120, 150}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{123, 142}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{124, 135}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{128, 132}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{152, 161}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{161, 172}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{165, 169}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09182432358888543]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[9, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[25, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[26, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[31, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[34, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[37, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[42, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[45, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[52, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[53, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[54, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[55, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[56, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[58, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[59, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[60, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[61, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[63, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[64, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[65, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[70, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[72, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[74, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[75, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[78, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[79, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[80, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[81, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[82, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[85, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[86, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[87, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[88, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[89, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[90, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[91, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[92, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[93, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[94, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[95, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[96, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[97, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[99, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[100, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[101, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[103, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[104, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[105, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[106, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[108, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[109, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[110, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[111, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[112, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[113, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[114, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[115, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[116, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[117, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[119, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[120, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[122, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[123, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[124, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[125, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[126, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[128, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[129, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[130, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[131, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[132, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[133, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[134, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[136, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[137, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[138, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[139, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[140, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[142, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[143, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[144, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[145, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[148, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[149, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[151, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[152, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[153, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[154, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[155, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[156, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[157, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[158, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[159, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[161, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[164, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[165, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[166, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[167, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[168, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[169, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[170, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[171, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[172, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[174, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[175, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[176, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[178, 0.09182432358888543]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"9-9-8-6-5-5-5-4-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-4#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#13-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#13-1#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2#13-4#4-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2#13-3#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-3#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#13-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#13-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#13-1#4-3", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-4#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#13-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#13-1#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3#13-4#4-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3#13-2#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#13-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-2#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#13-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#13-1#4-2", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#13-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-3#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#13-1#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4#13-3#4-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4#13-2#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#13-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-2#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#13-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#13-1#4-2"}, {
        Null, CompressedData["
1:eJwBfwGA/iFib1JiAgAAALcAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCQ4ODw8QEBEGEhITExQUFRUWFhcXGAUZGRoaGxscHB0dHh4fHyACISEi
IiMjJCQlJSYmJycoKCkpKiorIywsLS0uLi8vMDAxMTIyMy80NDU1NjY3LDg4
OTk6Ojs7PDw9PT4BPz9AQEFBQkJDQ0RERUVGRkdHSEhJSUpGS0tMTE1NTkNP
T1BQUVFSUlNTVFRVQlZWV1dYWFlZWlpbW1xcXT9eXl9fYGBhYWJiY2NkZGVl
ZmZnZ2hgaWlqamtrbGxtbW5ub29wbHFxcnJzc3RpdXV2dnd3eHh5eXp6ewF8
fH19fn5/f4CAgYGCgoODhISFhYaGh4OIiImJioqLgIyMjY2Ojo+PkJCRkZJ/
k5OUlJWVlpaXl5iYmZmafJubnJydnZ6en5+goKGhoqKjo6SkpZ2mpqenqKip
qaqqq6usrK2prq6vr7CwsaaysrOztLS1tba2t7e4/BOE5Q==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "9-8-8-6-6-6-5-3-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], "1-1#2-3#3-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4#13-3#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#13-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2#13-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2#13-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3#13-2#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3#13-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4#13-2#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
PQ==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{1, 63}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{1, 124}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{2, 33}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{5, 25}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{6, 18}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{9, 14}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{35, 44}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{44, 56}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{47, 52}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{63, 94}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{66, 86}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{67, 79}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{70, 75}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{96, 105}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{105, 117}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{108, 113}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{124, 155}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{127, 147}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{128, 140}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{131, 136}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{157, 166}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{166, 178}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{169, 174}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{178, 179}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.09223591175035867]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[23, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[27, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[31, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[33, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[34, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[35, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[38, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[42, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[45, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[53, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[56, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[57, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[58, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[59, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[61, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[62, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[63, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[65, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[67, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[76, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[77, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[79, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[80, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[82, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[83, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[85, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[86, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[88, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[89, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[90, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[91, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[92, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[93, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[94, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[96, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[97, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[98, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[99, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[101, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[102, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[103, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[104, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[105, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[106, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[108, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[109, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[110, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[111, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[115, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[116, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[118, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[119, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[120, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[121, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[122, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[123, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[124, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[125, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[126, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[128, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[129, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[132, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[133, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[134, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[135, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[136, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[137, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[138, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[139, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[140, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[142, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[143, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[144, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[145, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[147, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[148, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[149, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[151, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[152, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[153, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[155, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[156, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[157, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[158, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[159, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[162, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[163, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[164, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[166, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[167, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[168, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[169, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[170, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[171, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[172, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[173, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[174, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[175, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[177, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[178, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[179, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[180, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[182, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[183, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09223591175035867]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"9-8-8-6-6-6-5-3-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#4-2#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#4-4#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2#4-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2#4-3#13-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2#4-4#13-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#4-2#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#4-3#13-1", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#4-3#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#4-4#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3#4-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3#4-2#13-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3#4-4#13-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#4-3#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#4-2#13-1", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#4-4#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#4-3#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4#4-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4#4-2#13-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4#4-3#13-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#4-4#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#4-2#13-1"}, {
        Null, CompressedData["
1:eJwBfwGA/iFib1JiAgAAALcAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCQ4ODw8QEBEGEhITExQUFRUWFhcXGAUZGRoaGxscHB0dHh4fHyACISEi
IiMjJCQlJSYmJycoKCkpKiorIywsLS0uLi8vMDAxMTIyMy80NDU1NjY3LDg4
OTk6Ojs7PDw9PT4BPz9AQEFBQkJDQ0RERUVGRkdHSEhJSUpGS0tMTE1NTkNP
T1BQUVFSUlNTVFRVQlZWV1dYWFlZWlpbW1xcXT9eXl9fYGBhYWJiY2NkZGVl
ZmZnZ2hgaWlqamtrbGxtbW5ub29wbHFxcnJzc3RpdXV2dnd3eHh5eXp6ewF8
fH19fn5/f4CAgYGCgoODhISFhYaGh4OIiImJioqLgIyMjY2Ojo+PkJCRkZJ/
k5OUlJWVlpaXl5iYmZmafJubnJydnZ6en5+goKGhoqKjo6SkpZ2mpqenqKip
qaqqq6usrK2prq6vr7CwsaaysrOztLS1tba2t7e4/BOE5Q==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "8-8-8-7-6-6-5-3-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#4-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#4-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4#11-4#4-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#4-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2#11-2#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4#8-2#11-2#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#4-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#4-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-3#8-4#11-4#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#4-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-2#8-3#11-3#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
PQ==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{1, 63}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{1, 124}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{2, 33}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{5, 25}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{6, 18}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{9, 14}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{35, 44}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{44, 56}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{47, 52}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{63, 94}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{66, 86}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{67, 79}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{70, 75}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{96, 105}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{105, 117}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{108, 113}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{124, 155}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{127, 147}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{128, 140}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{131, 136}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{157, 166}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{166, 178}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{169, 174}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{178, 179}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.09223591175035867]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[27, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[31, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[33, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[34, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[35, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[38, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[42, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[45, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[53, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[56, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[57, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[58, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[59, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[61, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[62, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[63, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[65, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[67, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[76, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[77, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[79, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[80, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[82, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[83, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[84, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[85, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[86, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[88, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[89, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[90, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[91, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[92, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[93, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[94, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[96, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[97, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[98, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[99, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[101, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[102, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[103, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[104, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[105, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[106, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[108, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[109, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[110, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[111, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[115, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[116, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[118, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[119, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[120, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[121, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[123, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[124, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[125, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[126, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[128, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[129, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[132, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[133, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[134, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[135, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[136, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[137, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[138, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[139, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[140, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[142, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[143, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[144, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[146, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[147, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[148, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[149, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[151, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[152, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[153, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[155, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[156, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[157, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[158, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[159, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[162, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[163, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[164, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[166, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[167, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[168, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[169, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[170, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[171, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[172, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[173, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[174, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[175, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[177, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[178, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[179, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[180, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[182, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[183, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[184, 0.09223591175035867]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"8-8-8-7-6-6-5-3-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-4#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#13-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#13-1#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-4#4-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-3#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-3#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#13-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#13-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#13-1#4-3", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-4#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#13-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#13-1#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-4#4-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-2#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#13-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-2#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#13-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#13-1#4-2", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#13-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-3#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#13-1#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-3#4-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-2#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#13-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-2#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#13-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#13-1#4-2"}, {
        Null, CompressedData["
1:eJwBfwGA/iFib1JiAgAAALcAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCQ4ODw8QEBEGEhITExQUFRUWFhcXGAUZGRoaGxscHB0dHh4fHyACISEi
IiMjJCQlJSYmJycoKCkpKiorIywsLS0uLi8vMDAxMTIyMy80NDU1NjY3LDg4
OTk6Ojs7PDw9PT4BPz9AQEFBQkJDQ0RERUVGRkdHSEhJSUpGS0tMTE1NTkNP
T1BQUVFSUlNTVFRVQlZWV1dYWFlZWlpbW1xcXT9eXl9fYGBhYWJiY2NkZGVl
ZmZnZ2hgaWlqamtrbGxtbW5ub29wbHFxcnJzc3RpdXV2dnd3eHh5eXp6ewF8
fH19fn5/f4CAgYGCgoODhISFhYaGh4OIiImJioqLgIyMjY2Ojo+PkJCRkZJ/
k5OUlJWVlpaXl5iYmZmafJubnJydnZ6en5+goKGhoqKjo6SkpZ2mpqenqKip
qaqqq6usrK2prq6vr7CwsaaysrOztLS1tba2t7e4/BOE5Q==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "8-8-8-7-6-6-5-3-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#13-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-3#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2#13-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3#13-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4#13-2#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
PQ==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{1, 63}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{1, 124}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{2, 33}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{5, 25}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{6, 18}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{9, 14}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{35, 44}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{44, 56}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{47, 52}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{63, 94}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{66, 86}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{67, 79}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{70, 75}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{96, 105}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{105, 117}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{108, 113}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{124, 155}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{127, 147}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{128, 140}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{131, 136}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{157, 166}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{166, 178}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{169, 174}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{178, 179}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.09223591175035867]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[23, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[27, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[28, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[31, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[33, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[34, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[35, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[38, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[39, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[42, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[45, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[53, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[56, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[57, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[58, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[59, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[61, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[62, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[63, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[65, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[67, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[76, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[77, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[79, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[80, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[82, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[83, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[85, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[86, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[88, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[89, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[90, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[91, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[92, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[93, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[94, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[96, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[97, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[98, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[99, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[100, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[101, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[102, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[103, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[104, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[105, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[106, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[108, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[109, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[110, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[111, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[115, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[116, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[118, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[119, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[120, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[121, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[122, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[123, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[124, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[125, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[126, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[128, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[129, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[132, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[133, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[134, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[135, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[136, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[137, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[138, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[139, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[140, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[142, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[143, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[144, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[145, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[147, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[148, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[149, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[150, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[151, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[152, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[153, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[155, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[156, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[157, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[158, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[159, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[161, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[162, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[163, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[164, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[166, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[167, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[168, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[169, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[170, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[171, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[172, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[173, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[174, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[175, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[177, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[178, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[179, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[180, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[182, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[183, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09223591175035867]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"8-8-8-7-6-6-5-3-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#4-2#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#4-4#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3#13-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4#13-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#4-2#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#4-3#13-1", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#4-3#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#4-4#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2#13-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4#13-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#4-3#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#4-2#13-1", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#4-4#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#4-3#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2#13-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3#13-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#4-4#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#4-2#13-1"}, {
        Null, CompressedData["
1:eJwBfwGA/iFib1JiAgAAALcAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCQ4ODw8QEBEGEhITExQUFRUWFhcXGAUZGRoaGxscHB0dHh4fHyACISEi
IiMjJCQlJSYmJycoKCkpKiorIywsLS0uLi8vMDAxMTIyMy80NDU1NjY3LDg4
OTk6Ojs7PDw9PT4BPz9AQEFBQkJDQ0RERUVGRkdHSEhJSUpGS0tMTE1NTkNP
T1BQUVFSUlNTVFRVQlZWV1dYWFlZWlpbW1xcXT9eXl9fYGBhYWJiY2NkZGVl
ZmZnZ2hgaWlqamtrbGxtbW5ub29wbHFxcnJzc3RpdXV2dnd3eHh5eXp6ewF8
fH19fn5/f4CAgYGCgoODhISFhYaGh4OIiImJioqLgIyMjY2Ojo+PkJCRkZJ/
k5OUlJWVlpaXl5iYmZmafJubnJydnZ6en5+goKGhoqKjo6SkpZ2mpqenqKip
qaqqq6usrK2prq6vr7CwsaaysrOztLS1tba2t7e4/BOE5Q==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "8-8-8-7-6-6-5-3-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], "1-1#2-3#3-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#4-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#4-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#4-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-3#11-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#12-3#8-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-4#11-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1#8-4#11-4#4-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#12-1#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#12-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#12-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#12-1#8-2#11-2#4-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#12-2#8-2#11-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#12-1#8-4#11-4#4-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-2#11-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#12-4#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#12-3#8-2#11-2#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#12-4#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#12-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#12-2#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#12-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#12-2#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#12-1#8-3#11-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
PQ==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{1, 63}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{1, 124}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{2, 33}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{5, 25}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{6, 18}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{9, 14}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{35, 44}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{44, 56}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{47, 52}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{63, 94}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{66, 86}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{67, 79}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{70, 75}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{96, 105}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{105, 117}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{108, 113}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{124, 155}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{127, 147}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{128, 140}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{131, 136}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{157, 166}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{166, 178}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{169, 174}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{178, 179}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09223591175035867]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.09223591175035867]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[27, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[28, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[31, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[33, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[34, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[35, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[38, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[39, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[42, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[45, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[53, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[56, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[57, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[58, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[59, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[61, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[62, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[63, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[65, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[67, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[76, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[77, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[79, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[80, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[82, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[83, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[84, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[85, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[86, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[88, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[89, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[90, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[91, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[92, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[93, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[94, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[96, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[97, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[98, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[99, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[100, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[101, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[102, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[103, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[104, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[105, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[106, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[108, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[109, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[110, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[111, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[115, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[116, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[118, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[119, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[120, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[121, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[123, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[124, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[125, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[126, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[128, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[129, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[132, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[133, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[134, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[135, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[136, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[137, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[138, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[139, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[140, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[142, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[143, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[144, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[146, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[147, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[148, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[149, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[150, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[151, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[152, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[153, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[155, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[156, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[157, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[158, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[159, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[161, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[162, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[163, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[164, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09223591175035867]}, 
           {RGBColor[0, 0, 1], DiskBox[166, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[167, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[168, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[169, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[170, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[171, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[172, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[173, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[174, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[175, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[177, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[178, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[179, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[180, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.09223591175035867]}, 
           {RGBColor[1, 1, 0], DiskBox[182, 0.09223591175035867]}, 
           {RGBColor[0, 1, 0], DiskBox[183, 0.09223591175035867]}, 
           {RGBColor[1, 0, 0], DiskBox[184, 0.09223591175035867]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"8-8-8-7-6-6-5-3-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-2#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-2#13-4#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-4#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-4#13-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-2#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-2#13-1#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-2#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-2#13-4#4-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-2#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-2#13-3#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-2#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-2#13-3#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-3#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-3#13-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-2#13-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-2#13-1#4-3", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-3#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-3#13-4#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-4#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-4#13-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-3#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-3#13-1#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-3#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-3#13-4#4-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-3#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-3#13-2#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-2#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-2#13-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-3#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-3#13-2#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-3#13-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-3#13-1#4-2", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-3#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-3#13-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-4#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-4#13-3#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-4#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-4#13-1#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-4#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-4#13-3#4-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-4#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-4#13-2#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-2#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-2#13-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-4#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-4#13-2#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-4#13-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-4#13-1#4-2"}, {
        Null, CompressedData["
1:eJwBiwF0/iFib1JiAgAAAL0AAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCA4ODw8QEBEREgYTExQUFRUWFhcXGBgZBRoaGxscHB0dHh4fHyAgIQIi
IiMjJCQlJSYmJycoKCkpKiorKywkLS0uLi8vMDAxMTIyMzM0LzU1NjY3Nzg4
OS06Ojs7PDw9PT4+Pz9AAUFBQkJDQ0RERUVGRkdHSEhJSUpKS0tMR01NTk5P
T1BQUUVSUlNTVFRVVVZWV1dYRFlZWlpbW1xcXV1eXl9fYEFhYWJiY2NkZGVl
ZmZnZ2hoaWlqamtjbGxtbW5ub29wcHFxcnJzbnR0dXV2dnd3eGx5eXp6e3t8
fH19fn5/AYCAgYGCgoODhISFhYaGh4eIiImJioqLhoyMjY2Ojo+PkISRkZKS
k5OUlJWVlpaXg5iYmZmampubnJydnZ6en4CgoKGhoqKjo6SkpaWmpqenqKip
qaqiq6usrK2trq6vr7CwsbGyrbOztLS1tba2t6u4uLm5urq7u7y8vb2+ctmN
lw==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "9-8-7-6-6-6-5-4-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-2#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-2#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-3#13-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-4#13-2#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-3#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-3#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-4#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-4#13-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-3#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-2#13-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-4#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-4#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-2#13-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-4#13-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-3#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-4#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-2#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-3#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-3#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-4#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-3#13-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-2#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-2#13-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-2#13-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-4#13-1" -> 
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
jLv/ACV6RvI=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 65}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 128}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 34}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 26}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 19}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 14}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 45}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 58}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 53}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 97}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 89}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 82}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 77}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 108}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 121}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 116}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 160}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 152}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 145}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 140}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 171}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 184}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 179}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09259951522411705]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[16, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[18, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[23, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[26, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[28, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[31, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[37, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[39, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[42, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[43, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[55, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[57, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[64, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[70, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[71, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[73, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[74, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[79, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[80, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[81, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[82, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[84, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[85, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[86, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[88, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[89, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[91, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[92, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[93, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[94, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[95, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[96, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[97, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[99, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[101, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[103, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[104, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[105, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[106, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[107, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[108, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[109, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[110, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[113, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[116, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[117, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[119, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[120, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[124, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[125, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[126, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[127, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[128, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[129, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[131, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[132, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[133, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[134, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[136, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[137, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[139, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[140, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[141, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[142, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[143, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[144, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[148, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[149, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[150, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[151, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[152, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[153, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[155, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[156, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[157, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[158, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[159, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[164, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[166, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[167, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[168, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[169, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[170, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[171, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[172, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[174, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[175, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[178, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[179, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[180, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[182, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[183, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[185, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[186, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[187, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[188, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[189, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[190, 0.09259951522411705]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"9-8-7-6-6-6-5-4-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-1#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-1#13-4#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-1#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-1#13-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-4#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-4#13-1#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-1#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-1#13-4#4-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-1#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-1#13-3#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-1#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-1#13-3#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-1#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-1#13-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-3#13-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-3#13-1#4-3", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-1#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-1#13-4#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-1#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-1#13-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-4#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-4#13-1#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-1#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-1#13-4#4-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-1#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-1#13-2#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-1#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-1#13-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-1#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-1#13-2#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-2#13-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-2#13-1#4-2", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-1#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-1#13-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-1#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-1#13-3#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-3#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-3#13-1#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-1#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-1#13-3#4-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-1#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-1#13-2#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-1#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-1#13-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-1#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-1#13-2#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-2#13-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-2#13-1#4-2"}, {
        Null, CompressedData["
1:eJwBiwF0/iFib1JiAgAAAL0AAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCA4ODw8QEBEREgYTExQUFRUWFhcXGBgZBRoaGxscHB0dHh4fHyAgIQIi
IiMjJCQlJSYmJycoKCkpKiorKywkLS0uLi8vMDAxMTIyMzM0LzU1NjY3Nzg4
OS06Ojs7PDw9PT4+Pz9AAUFBQkJDQ0RERUVGRkdHSEhJSUpKS0tMR01NTk5P
T1BQUUVSUlNTVFRVVVZWV1dYRFlZWlpbW1xcXV1eXl9fYEFhYWJiY2NkZGVl
ZmZnZ2hoaWlqamtjbGxtbW5ub29wcHFxcnJzbnR0dXV2dnd3eGx5eXp6e3t8
fH19fn5/AYCAgYGCgoODhISFhYaGh4eIiImJioqLhoyMjY2Ojo+PkISRkZKS
k5OUlJWVlpaXg5iYmZmampubnJydnZ6en4CgoKGhoqKjo6SkpaWmpqenqKip
qaqiq6usrK2trq6vr7CwsbGyrbOztLS1tba2t6u4uLm5urq7u7y8vb2+ctmN
lw==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "9-8-7-7-6-5-5-4-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-1#13-3#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-1#13-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-1#13-2#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-3#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-4#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-2#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-3#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-2#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-1#13-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-1#13-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-1#13-2#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-4#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-1" -> 
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
jLv/ACV6RvI=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 65}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 128}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 34}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 26}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 19}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 14}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 45}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 58}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 53}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 97}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 89}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 82}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 77}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 108}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 121}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 116}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 160}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 152}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 145}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 140}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 171}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 184}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 179}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09259951522411705]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[11, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[16, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[18, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[26, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[28, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[31, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[37, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[39, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[42, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[43, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[50, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[55, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[57, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[62, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[64, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[70, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[71, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[73, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[74, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[79, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[80, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[81, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[82, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[84, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[85, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[86, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[88, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[89, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[91, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[92, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[93, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[94, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[95, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[96, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[97, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[99, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[101, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[103, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[104, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[105, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[106, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[107, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[108, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[109, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[110, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[113, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[116, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[117, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[118, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[119, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[120, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[124, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[125, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[126, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[127, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[128, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[129, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[131, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[132, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[133, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[134, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[136, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[137, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[139, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[140, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[141, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[142, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[143, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[144, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[148, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[149, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[150, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[151, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[152, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[153, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[155, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[156, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[157, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[158, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[159, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[164, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[166, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[167, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[168, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[169, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[170, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[171, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[172, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[174, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[175, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[176, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[178, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[179, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[180, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[181, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[182, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[183, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[185, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[186, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[187, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[188, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[189, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[190, 0.09259951522411705]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"9-8-7-7-6-5-5-4-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-4#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-4#4-4#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-2#4-2#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-1#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-1#4-4#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-4", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-4#4-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-4#4-3#13-3", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-3#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-3#4-4#13-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-3#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-3#4-3#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-2#4-2#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-1#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-1#4-3#13-1", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-4#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-4#4-4#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-3#4-3#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-1#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-1#4-4#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-4", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-4#4-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-4#4-2#13-2", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-2#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-2#4-4#13-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-3#4-3#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-2#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-2#4-2#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-1#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-1#4-2#13-1", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-4#4-4#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-3#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-3#4-3#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-1#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-1#4-3#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-3", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-3#4-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-3#4-2#13-2", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-2#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-2#4-3#13-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-4#4-4#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-2#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-2#4-2#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-1#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-1#4-2#13-1"}, {
        Null, CompressedData["
1:eJwBiwF0/iFib1JiAgAAAL0AAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCA4ODw8QEBEREgYTExQUFRUWFhcXGBgZBRoaGxscHB0dHh4fHyAgIQIi
IiMjJCQlJSYmJycoKCkpKiorKywkLS0uLi8vMDAxMTIyMzM0LzU1NjY3Nzg4
OS06Ojs7PDw9PT4+Pz9AAUFBQkJDQ0RERUVGRkdHSEhJSUpKS0tMR01NTk5P
T1BQUUVSUlNTVFRVVVZWV1dYRFlZWlpbW1xcXV1eXl9fYEFhYWJiY2NkZGVl
ZmZnZ2hoaWlqamtjbGxtbW5ub29wcHFxcnJzbnR0dXV2dnd3eGx5eXp6e3t8
fH19fn5/AYCAgYGCgoODhISFhYaGh4eIiImJioqLhoyMjY2Ojo+PkISRkZKS
k5OUlJWVlpaXg5iYmZmampubnJydnZ6en4CgoKGhoqKjo6SkpaWmpqenqKip
qaqiq6usrK2trq6vr7CwsbGyrbOztLS1tba2t6u4uLm5urq7u7y8vb2+ctmN
lw==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "8-8-7-7-7-6-5-3-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], "1-1#2-3#3-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-1#4-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-3#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-1#4-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-1#4-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-1#4-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-2#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#12-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#12-3#4-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-4#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#12-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#12-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#12-1#4-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#12-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#12-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#12-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-2#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#12-1#4-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#12-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#12-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#12-4#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#12-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#12-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#12-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#12-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#12-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
jLv/ACV6RvI=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 65}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 128}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 34}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 26}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 19}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 14}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 45}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 58}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 53}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 97}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 89}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 82}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 77}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 108}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 121}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 116}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 160}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 152}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 145}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 140}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 171}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 184}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 179}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09259951522411705]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[11, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[18, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[23, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[25, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[26, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[28, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[31, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[37, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[39, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[42, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[57, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[62, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[63, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[64, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[70, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[71, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[73, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[79, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[80, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[81, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[82, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[84, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[85, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[86, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[87, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[88, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[89, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[91, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[92, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[93, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[94, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[96, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[97, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[99, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[101, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[103, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[104, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[105, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[106, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[107, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[108, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[109, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[110, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[116, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[117, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[118, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[119, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[120, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[124, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[125, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[126, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[128, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[129, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[131, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[132, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[133, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[134, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[136, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[137, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[139, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[140, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[141, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[142, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[143, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[144, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[148, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[149, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[151, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[152, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[153, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[155, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[156, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[157, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[158, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[159, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[164, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[166, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[167, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[168, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[169, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[170, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[171, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[172, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[174, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[175, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[176, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[178, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[179, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[180, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[181, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[182, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[183, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[185, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[186, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[187, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[188, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[189, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[190, 0.09259951522411705]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"8-8-7-7-7-6-5-3-3-3-3-3-3\"", TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#6-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1", "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#4-4#13-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#4-4#13-4#12-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#4-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#4-2#13-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#4-2#13-2#12-3", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4", "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#4-4", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#4-4#13-1", 
         "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#4-4#13-1#12-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4", "1-1#2-2#3-3#7-4#5-1#6-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#4-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#4-3#13-3", 
         "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#4-3#13-3#12-4", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3", "1-1#2-2#3-4#7-3#5-1#6-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#4-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#4-4#13-4", 
         "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#4-4#13-4#12-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4", "1-1#2-2#3-4#7-3#5-1#6-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#4-3#13-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#4-3#13-3#12-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#4-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#4-2#13-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#4-2#13-2#12-4", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3", "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#4-3", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#4-3#13-1", 
         "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#4-3#13-1#12-4", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2", "1-1#2-3#3-2#7-4#5-1#6-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#4-4#13-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#4-4#13-4#12-2", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#4-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#4-3#13-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#4-3#13-3#12-2", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4", "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#4-4", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#4-4#13-1", 
         "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#4-4#13-1#12-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4", "1-1#2-3#3-2#7-4#5-1#6-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#4-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#4-2#13-2", 
         "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#4-2#13-2#12-4", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2", "1-1#2-3#3-4#7-2#5-1#6-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#4-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#4-4#13-4", 
         "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#4-4#13-4#12-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4", "1-1#2-3#3-4#7-2#5-1#6-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#4-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#4-3#13-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#4-3#13-3#12-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#4-2#13-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#4-2#13-2#12-4", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2", "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#4-2", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#4-2#13-1", 
         "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#4-2#13-1#12-4", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2", "1-1#2-4#3-2#7-3#5-1#6-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#4-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#4-4#13-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#4-4#13-4#12-2", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#4-3#13-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#4-3#13-3#12-2", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3", "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#4-3", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#4-3#13-1", 
         "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#4-3#13-1#12-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3", "1-1#2-4#3-2#7-3#5-1#6-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#4-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#4-2#13-2", 
         "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#4-2#13-2#12-3", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2", "1-1#2-4#3-3#7-2#5-1#6-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#4-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#4-3#13-3", 
         "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#4-3#13-3#12-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3", "1-1#2-4#3-3#7-2#5-1#6-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#4-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#4-4#13-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#4-4#13-4#12-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#4-2#13-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#4-2#13-2#12-3", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2", "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#4-2", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#4-2#13-1", 
         "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#4-2#13-1#12-3"}, {
        Null, CompressedData["
1:eJwBiwF0/iFib1JiAgAAAL0AAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCA4ODw8QEBEREgYTExQUFRUWFhcXGBgZBRoaGxscHB0dHh4fHyAgIQIi
IiMjJCQlJSYmJycoKCkpKiorKywkLS0uLi8vMDAxMTIyMzM0LzU1NjY3Nzg4
OS06Ojs7PDw9PT4+Pz9AAUFBQkJDQ0RERUVGRkdHSEhJSUpKS0tMR01NTk5P
T1BQUUVSUlNTVFRVVVZWV1dYRFlZWlpbW1xcXV1eXl9fYEFhYWJiY2NkZGVl
ZmZnZ2hoaWlqamtjbGxtbW5ub29wcHFxcnJzbnR0dXV2dnd3eGx5eXp6e3t8
fH19fn5/AYCAgYGCgoODhISFhYaGh4eIiImJioqLhoyMjY2Ojo+PkISRkZKS
k5OUlJWVlpaXg5iYmZmampubnJydnZ6en4CgoKGhoqKjo6SkpaWmpqenqKip
qaqiq6usrK2trq6vr7CwsbGyrbOztLS1tba2t6u4uLm5urq7u7y8vb2+ctmN
lw==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> "8-7-7-7-7-6-5-4-3-3-3-3-3", 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#4-4#13-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> RGBColor[0, 0, 1],
            "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#4-2#13-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#4-3#13-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#4-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#4-4#13-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#4-4#13-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2#11-2#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#4-3#13-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#4-4#13-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#4-2#13-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#4-3#13-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#4-2#13-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#4-2#13-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#6-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#4-3#13-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#4-4#13-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#4-3#13-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2#11-2#4-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3#8-4#11-4#4-3#13-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-4#9-1#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3#11-3#4-2#13-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#4-4#13-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-3#9-1#10-4#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3#8-3#11-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-2#11-3#4-3#13-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#6-4#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4#4-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4#4-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-4#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#6-2#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#4-2#13-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2#8-4#11-4#4-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-3#9-1#10-2#8-4#11-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2#11-2#4-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#4-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3#11-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#6-2#9-3#10-3#8-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#6-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#4-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#6-3#9-4#10-4#8-2#11-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#6-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#4-2#13-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-4#11-3#4-3#13-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3#10-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-1#10-4#8-3#11-3#4-4#13-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-4#11-4#4-2#13-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-1#10-2#8-2#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#6-2#9-1#10-3#8-3#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#6-3#9-2#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-4#11-2#4-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#6-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#6-3#9-1#10-4#8-2#11-2#4-4#13-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#6-4#9-1#10-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#6-2#9-4#10-4#8-3#11-3#4-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#6-2#9-1#10-4#8-3#11-3#4-4#13-4" -> 
           RGBColor[1, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
jLv/ACV6RvI=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 65}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{1, 128}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{2, 34}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{5, 26}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{6, 19}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{8, 14}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{36, 45}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{45, 58}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{47, 53}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{65, 97}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{68, 89}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{69, 82}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{71, 77}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{99, 108}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{108, 121}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{110, 116}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{128, 160}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{131, 152}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{132, 145}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{134, 140}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{162, 171}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{171, 184}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{173, 179}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09259951522411705]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09259951522411705]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[11, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[13, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[17, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[18, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[26, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[28, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[31, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[33, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[37, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[38, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[39, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[42, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[44, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[52, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[57, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[62, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[64, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[70, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[71, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[73, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[76, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[79, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[80, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[81, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[82, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[84, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[85, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[86, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[88, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[89, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[91, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[92, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[93, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[94, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[96, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[97, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[99, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[101, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[103, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[104, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[105, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[106, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[108, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[109, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[110, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[115, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[116, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[117, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[118, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[119, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[120, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[122, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[124, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[125, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[126, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[127, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[128, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[129, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[131, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[132, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[133, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[134, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[136, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[137, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[139, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[140, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[141, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[142, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[143, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[144, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[148, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[149, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[150, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[151, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[152, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[153, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[155, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[156, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[157, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[158, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[159, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[164, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[166, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[167, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[168, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[169, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[170, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[171, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[172, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[174, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[175, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[176, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[178, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[179, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[180, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[181, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[182, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[183, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[185, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[186, 0.09259951522411705]}, 
           {RGBColor[1, 1, 0], DiskBox[187, 0.09259951522411705]}, 
           {RGBColor[0, 1, 0], DiskBox[188, 0.09259951522411705]}, 
           {RGBColor[1, 0, 0], DiskBox[189, 0.09259951522411705]}, 
           {RGBColor[0, 0, 1], DiskBox[190, 0.09259951522411705]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox["\"8-7-7-7-7-6-5-4-3-3-3-3-3\"", TraditionalForm]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6626436579419465`*^9, 3.662643698810811*^9}, 
   3.6626438311536093`*^9, 3.662644156155205*^9, 3.662644327209239*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EndMPG", "[", 
  RowBox[{"[", "12", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.662644891542251*^9, 3.6626448963151383`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(12\\)\[NoBreak] of \
\[NoBreak]\\!\\({2, 4, 9, 23, 73, 306, 1555, 9150, 58716, \
398438}\\)\[NoBreak] does not exist. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/partw\\\", \
ButtonNote -> \\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6626448972307205`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "2", ",", "4", ",", "9", ",", "23", ",", "73", ",", "306", ",", "1555", 
    ",", "9150", ",", "58716", ",", "398438"}], "}"}], "\[LeftDoubleBracket]",
   "12", "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.662644897231222*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToVarsLogical", "[", 
  RowBox[{
   RowBox[{"ReadGrof", "[", "58716", "]"}], ",", 
   RowBox[{"x1", "\[Equal]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{3.662644976941896*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "1"}], ",", 
     RowBox[{"x2", "\[Rule]", "2"}], ",", 
     RowBox[{"x3", "\[Rule]", "3"}], ",", 
     RowBox[{"x5", "\[Rule]", "4"}], ",", 
     RowBox[{"x13", "\[Rule]", "1"}], ",", 
     RowBox[{"x4", "\[Rule]", "1"}], ",", 
     RowBox[{"x6", "\[Rule]", "1"}], ",", 
     RowBox[{"x7", "\[Rule]", "1"}], ",", 
     RowBox[{"x8", "\[Rule]", "1"}], ",", 
     RowBox[{"x9", "\[Rule]", "2"}], ",", 
     RowBox[{"x10", "\[Rule]", "2"}], ",", 
     RowBox[{"x11", "\[Rule]", "2"}], ",", 
     RowBox[{"x12", "\[Rule]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "1"}], ",", 
     RowBox[{"x2", "\[Rule]", "2"}], ",", 
     RowBox[{"x3", "\[Rule]", "4"}], ",", 
     RowBox[{"x5", "\[Rule]", "3"}], ",", 
     RowBox[{"x13", "\[Rule]", "1"}], ",", 
     RowBox[{"x4", "\[Rule]", "1"}], ",", 
     RowBox[{"x6", "\[Rule]", "1"}], ",", 
     RowBox[{"x7", "\[Rule]", "1"}], ",", 
     RowBox[{"x8", "\[Rule]", "1"}], ",", 
     RowBox[{"x9", "\[Rule]", "2"}], ",", 
     RowBox[{"x10", "\[Rule]", "2"}], ",", 
     RowBox[{"x11", "\[Rule]", "2"}], ",", 
     RowBox[{"x12", "\[Rule]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "1"}], ",", 
     RowBox[{"x2", "\[Rule]", "3"}], ",", 
     RowBox[{"x3", "\[Rule]", "2"}], ",", 
     RowBox[{"x5", "\[Rule]", "4"}], ",", 
     RowBox[{"x13", "\[Rule]", "1"}], ",", 
     RowBox[{"x4", "\[Rule]", "1"}], ",", 
     RowBox[{"x6", "\[Rule]", "1"}], ",", 
     RowBox[{"x7", "\[Rule]", "1"}], ",", 
     RowBox[{"x8", "\[Rule]", "1"}], ",", 
     RowBox[{"x9", "\[Rule]", "3"}], ",", 
     RowBox[{"x10", "\[Rule]", "3"}], ",", 
     RowBox[{"x11", "\[Rule]", "3"}], ",", 
     RowBox[{"x12", "\[Rule]", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "1"}], ",", 
     RowBox[{"x2", "\[Rule]", "3"}], ",", 
     RowBox[{"x3", "\[Rule]", "4"}], ",", 
     RowBox[{"x5", "\[Rule]", "2"}], ",", 
     RowBox[{"x13", "\[Rule]", "1"}], ",", 
     RowBox[{"x4", "\[Rule]", "1"}], ",", 
     RowBox[{"x6", "\[Rule]", "1"}], ",", 
     RowBox[{"x7", "\[Rule]", "1"}], ",", 
     RowBox[{"x8", "\[Rule]", "1"}], ",", 
     RowBox[{"x9", "\[Rule]", "3"}], ",", 
     RowBox[{"x10", "\[Rule]", "3"}], ",", 
     RowBox[{"x11", "\[Rule]", "3"}], ",", 
     RowBox[{"x12", "\[Rule]", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "1"}], ",", 
     RowBox[{"x2", "\[Rule]", "4"}], ",", 
     RowBox[{"x3", "\[Rule]", "2"}], ",", 
     RowBox[{"x5", "\[Rule]", "3"}], ",", 
     RowBox[{"x13", "\[Rule]", "1"}], ",", 
     RowBox[{"x4", "\[Rule]", "1"}], ",", 
     RowBox[{"x6", "\[Rule]", "1"}], ",", 
     RowBox[{"x7", "\[Rule]", "1"}], ",", 
     RowBox[{"x8", "\[Rule]", "1"}], ",", 
     RowBox[{"x9", "\[Rule]", "4"}], ",", 
     RowBox[{"x10", "\[Rule]", "4"}], ",", 
     RowBox[{"x11", "\[Rule]", "4"}], ",", 
     RowBox[{"x12", "\[Rule]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x1", "\[Rule]", "1"}], ",", 
     RowBox[{"x2", "\[Rule]", "4"}], ",", 
     RowBox[{"x3", "\[Rule]", "3"}], ",", 
     RowBox[{"x5", "\[Rule]", "2"}], ",", 
     RowBox[{"x13", "\[Rule]", "1"}], ",", 
     RowBox[{"x4", "\[Rule]", "1"}], ",", 
     RowBox[{"x6", "\[Rule]", "1"}], ",", 
     RowBox[{"x7", "\[Rule]", "1"}], ",", 
     RowBox[{"x8", "\[Rule]", "1"}], ",", 
     RowBox[{"x9", "\[Rule]", "4"}], ",", 
     RowBox[{"x10", "\[Rule]", "4"}], ",", 
     RowBox[{"x11", "\[Rule]", "4"}], ",", 
     RowBox[{"x12", "\[Rule]", "4"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.662644981170474*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Monitor", "[", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"edges", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"EdgeList", "[", 
             RowBox[{"PathGraph", "[", 
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ToString", "[", "#", "]"}], "&"}], ",", 
                RowBox[{"Haccumulate", "[", " ", 
                 RowBox[{"RecordToCouples", "[", "#", "]"}], "]"}]}], "]"}], 
              "]"}], "]"}], "&"}], ",", 
           RowBox[{"ToVarsLogical", "[", 
            RowBox[{
             RowBox[{"ReadGrof", "[", "k", "]"}], ",", 
             RowBox[{"x1", "\[Equal]", "1"}]}], "]"}]}], "]"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"With", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"g", "=", 
           RowBox[{"Graph", "[", 
            RowBox[{"DeleteDuplicates", "[", 
             RowBox[{"Flatten", "[", "edges", "]"}], "]"}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", " ", 
           RowBox[{"GraphLayout", "\[Rule]", "\"\<RadialDrawing\>\""}], ",", 
           RowBox[{"VertexStyle", "\[Rule]", 
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "->", 
                RowBox[{"IndexToColor", "[", " ", 
                 RowBox[{"FromDigits", "[", " ", 
                  RowBox[{"StringTake", "[", 
                   RowBox[{"#", ",", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "&"}], ",", 
              " ", 
              RowBox[{"VertexList", "[", "g", "]"}]}], "]"}]}], ",", " ", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Chrom", "[", "k", "]"}], ",", 
              RowBox[{"GraphSignature2", "[", 
               RowBox[{"ReadGrof", "[", "k", "]"}], "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
      "\[IndentingNewLine]", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"58716", "-", "10"}], ",", "58716"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.6626449172703323`*^9, 3.6626449476205945`*^9}, {
  3.6626450256538877`*^9, 3.6626450449654675`*^9}, {3.662645076347252*^9, 
  3.6626450792676272`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#9-4", 
         "1-1#2-2#3-3#9-4#5-1", "1-1#2-2#3-3#9-4#5-1#8-3", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3", "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4#7-2#12-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2#7-2#12-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4#4-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4#4-4#6-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4#4-4#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4#4-4#6-2#7-2#12-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4", "1-1#2-2#3-3#9-4#5-1#8-4#10-3", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2#7-2#12-4", 
         "1-1#2-2#3-3#9-4#5-4", "1-1#2-2#3-3#9-4#5-4#8-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1", "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3", "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3", "1-1#2-2#3-3#9-4#5-4#8-3#10-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-2#6-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-2#6-1#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-2#6-1#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3", "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-1#12-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-2#12-1", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#9-3", "1-1#2-2#3-4#9-3#5-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3", "1-1#2-2#3-4#9-3#5-1#8-3#10-4", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2#7-2#12-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4", "1-1#2-2#3-4#9-3#5-1#8-4#10-4", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3#7-2#12-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2#7-2#12-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3#4-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3#4-3#6-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3#4-3#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3#4-3#6-2#7-2#12-3", 
         "1-1#2-2#3-4#9-3#5-3", "1-1#2-2#3-4#9-3#5-3#8-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1", "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4", "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4", "1-1#2-2#3-4#9-3#5-3#8-4#10-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-2#6-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-2#6-1#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-2#6-1#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4", "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-1#12-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-2#12-1", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#9-4", "1-1#2-3#3-2#9-4#5-1", 
         "1-1#2-3#3-2#9-4#5-1#8-2", "1-1#2-3#3-2#9-4#5-1#8-2#10-2", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4#7-3#12-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3#7-3#12-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4#4-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4#4-4#6-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4#4-4#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4#4-4#6-3#7-3#12-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4", "1-1#2-3#3-2#9-4#5-1#8-4#10-2", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3#7-3#12-4", 
         "1-1#2-3#3-2#9-4#5-4", "1-1#2-3#3-2#9-4#5-4#8-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1", "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2", "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2", "1-1#2-3#3-2#9-4#5-4#8-2#10-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-3#6-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-3#6-1#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-3#6-1#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2", "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-1#12-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-3#12-1", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#9-2", "1-1#2-3#3-4#9-2#5-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2", "1-1#2-3#3-4#9-2#5-1#8-2#10-4", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3#7-3#12-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4", "1-1#2-3#3-4#9-2#5-1#8-4#10-4", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3#7-3#12-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2#7-3#12-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2#4-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2#4-2#6-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2#4-2#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2#4-2#6-3#7-3#12-2", 
         "1-1#2-3#3-4#9-2#5-2", "1-1#2-3#3-4#9-2#5-2#8-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1", "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4", "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4", "1-1#2-3#3-4#9-2#5-2#8-4#10-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-3#6-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-3#6-1#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-3#6-1#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4", "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-1#12-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-3#12-1", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#9-3", "1-1#2-4#3-2#9-3#5-1", 
         "1-1#2-4#3-2#9-3#5-1#8-2", "1-1#2-4#3-2#9-3#5-1#8-2#10-2", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4#7-4#12-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3#7-4#12-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3#4-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3#4-3#6-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3#4-3#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3#4-3#6-4#7-4#12-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3", "1-1#2-4#3-2#9-3#5-1#8-3#10-2", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4#7-4#12-3", 
         "1-1#2-4#3-2#9-3#5-3", "1-1#2-4#3-2#9-3#5-3#8-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1", "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2", "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2", "1-1#2-4#3-2#9-3#5-3#8-2#10-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-4#6-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-4#6-1#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-4#6-1#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2", "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-1#12-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-4#12-1", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#9-2", "1-1#2-4#3-3#9-2#5-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2", "1-1#2-4#3-3#9-2#5-1#8-2#10-3", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4#7-4#12-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3", "1-1#2-4#3-3#9-2#5-1#8-3#10-3", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4#7-4#12-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2#7-4#12-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2#4-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2#4-2#6-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2#4-2#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2#4-2#6-4#7-4#12-2", 
         "1-1#2-4#3-3#9-2#5-2", "1-1#2-4#3-3#9-2#5-2#8-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1", "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3", "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3", "1-1#2-4#3-3#9-2#5-2#8-3#10-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-4#6-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-4#6-1#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-4#6-1#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3", "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-1#12-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-4#12-1"}, {
        Null, CompressedData["
1:eJw112XQlGUUBuBvP7pbpJQQpEHpbhDp7lS6uwSkUwHpDunuBmmkU+lulO5U
cC9/XPvOPeecZ84z8+7ObLKGbSq2Dg0JCYnz4ePjMxASfH4UhrCEIzwRiEgk
IhOFqERTj04MYhLLebGJQ1zi8Qnx7fMpCUhIIhKThM/43L2SkozkpOALUpKK
L0ltLg1pSUd6MpCRTHJmvrLH12QhK9nITg5ykkt/bvKQl3zkp4B6QQpRmCL2
KEoxilOCbyjJt3IpSpsvQ1nKUZ4KVJQrUVl/FapSjepyDWqGBN/fWtSmDnWp
R30a0JDv+J5G5hvThKY0ozktaEkr9da0oS3tnNeeDnSkE53p4l5d6UZ3evAD
PelFb34014e+9KM/AxjIIHkwQ+wxlGEM5yd+ZgQjGaX/F0YzhrGMY7z6BCYy
icn2mMJUpjGdGcxklvwrs83PYS7zmM8CFsqLWKx/CUtZxnJ5BStDgr/Dq1jN
GtayjvVsYCOb2MwWtqr/xja2s8N5O9nFbvawl9/ts4/9HOAghzjMEY661zGO
c4KT/MGfnOI0Z8yd5RznucBFLnFZvsJVe1zjOje4yS1uc4e7+v/ib+5xnwc8
VH/EY57w1B7PeM4LXvKK17yR3/LO/Hv+4b+X7YMAoYSRwxIuEOwPHwiKQEQi
yZGJEgi+v1EDQdGITgxiEovYxCEu8fjEfHw+JQEJSURikvCZ+uckJRnJnZeC
L0hJKr4ktXulIS3pSE8GMpKJzHxl7muykJVsZCcHOeVc5LZHHvKSj/wUoCCF
KKy/CEUpRnFK8I16Sb6lFKXtUYaylKM8FahIJbkyVcxXpRrVqUFNasm1qaO/
LvWoTwO5Id8Fgl+N7wNBjWhME5rSjOa0oCWtaE0b9ba0oz0dnNeRTnSmC13p
Zp/u9OAHetKL3vxIH/fqSz/6M4CBDGIwQxhqbhjD+YmfGcFIRsm/MNoeYxjL
OMYzgYlMYrL+KUxlGtOZwUz1WfzKbObYYy7zmM8CFrKIxfISlppfxnJWsJJV
rJbXsFb/OtazgY3yJjYHgu/vFrbyG9vYzg52sovd7GGv+d/Zx34OcJBDHOaI
+lGOcZwTzjvJH/zJKU5zxr3Oco7zXOAil7jMFa6au8Z1bnCTW9zmjnyXv+zx
N/e4zwMe8ojHPNH/lGc85wUveaX+mje85Z093vMP///hDxBKGMLK4QgfGpyP
EBoUkUhEJgpR5WhE1x+DmMQithyHuB/8C4VbAbI=
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {384, "9-9-8-5-5-5-5-4-4-3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4#7-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4#7-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-2#6-1#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-4#6-1#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2#7-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4#7-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-2#6-1#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4#4-4#6-3#7-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3#7-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3#4-3#6-2#7-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3#7-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-3#6-1#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3#7-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2#7-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3#7-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4#7-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4#4-4#6-2#7-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2#7-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-3#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2#7-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2#4-2#6-4#7-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3#7-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3#4-3#6-4#7-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2#7-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3#7-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4" -> RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-3#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-4#6-1#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-3#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2#7-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4#7-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-3#6-1#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-2#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-2#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-3#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-2#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-4#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-4#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-4#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-2#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-3#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2#4-2#6-3#7-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-3#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4#7-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-3#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-3#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-2" -> 
           RGBColor[0, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
/n5n5vSXcd+b+MS4zyE+Me6nSye6dSoa4XNtpLtJqSmSvWbp1+vq46tGak/j
BGPEzFz8/iBPBz+m7ytNe26AiLCEq9EumpDfWxI2MloP9cTPvsT5s8RPNeJ8
UXXfiaIzFjLvyrd7VNLngymOHp5rbffLDAc2nDS962CMQ+bd++WCTLDrbWpy
/nwD7Nm5xfh+vSG2TJndEbNPFzs17HcUS/SRVuLqPfGeFtJTygek7e71FuI7
84ivn//jO/OIdBOtqCnPrWQc7dpzsOPO/86P65jq/tIc+VRHAdV1kOpgde2m
OnZTXduojm1U10aqYwPVlUx1sLq6O/6r4wfVtWzxN4FKiQWKtGJW+8ebYPMp
78IT88xwmzzn6JciOz8dE3wlz6keqpYnX2kIM4GnadwSbTSvDuIeXaKPRNMb
E7Qea0Ce3jvzGCV678xjXtO5M09RpHNnnlKW7jSnTYUHtU8vvRf3/n9/+9dL
uDKveBYyauqk9Rao/B49Sa5HH8sPrRTErjODYLyHU0mlDlTp3mbTPd5L91ad
7rGI7m0L3eNqurcRdI+bQrwr615x8JfiuRqvc3pQq+6s3a3FwUOBu2XOZG2s
I98OJm/pT76dRd6yjb7revrOjei7liNvWZnSFt620gIJ5B2T3/U18241QyB5
hz31jSjqI30u/9c3BlEfUapYtSp9Cw+ONXYCw0EGMLC+ZuyXbAkbj4khAfN1
0TYld1dXGxf72xPPfLmqidPUB4XUF1OoD/KoL+ZQn2N9z4f6HIf6njf1ySzq
m1nUJ3OobzYOWpC1VsMaOsTxZ6PUmhVv8JBAHJ9OHGBcWEwcYFwwoz7P+v5S
6vOs708kTgwibkiIE3LE+bM7zocf7Z33B+naf7NvU4LXtNM59zZaI3X7lNKN
B3ukNsQ1xjk2fzPOvSBuMo7GEDcZR62UFF3Ti+1k/Xf1Ns2eG7n2+J36r/Ml
/+T+V2xlnhVV4qZ+0NgWU8ouBG/MNMazARO5mxxsZV4xnjyCecUp8gjmFWbk
EYz7KeQRjPvvyCNYvb7kEazeN+R1y8jzlK/nqG88bAfBEck/LXoGUCTPYufV
SZ7Fzuv8hI3XB0XZybxhYN2a3a+O2MGQvOEEeRTzKkfyKPY+/S+tuuy53R5n
zauX7zqmjGV/Vf3c+MIeTvNbfNY7yiGDeRqd51HyNOZtWuSdvuShF8g7T5CH
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
Y1xzJo4xrn0kTjJuBhAnGTf/Dyr8Glc=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{1, 179}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{1, 356}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{2, 91}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{4, 32}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{5, 24}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{7, 18}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{9, 14}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{32, 50}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{33, 41}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{45, 48}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{50, 68}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{51, 58}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{59, 64}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{68, 77}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{72, 75}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{78, 85}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{80, 83}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{86, 89}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{92, 120}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{93, 102}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{103, 114}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{105, 110}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{120, 138}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{121, 129}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{133, 136}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{138, 156}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{139, 146}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{147, 152}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{156, 165}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{160, 163}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{166, 173}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{168, 171}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{174, 177}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{179, 268}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{181, 209}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{182, 201}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{184, 195}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{186, 191}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{191, 192}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{192, 193}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{193, 194}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{195, 196}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{196, 197}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{197, 198}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{198, 199}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{199, 200}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{201, 202}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{202, 203}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{203, 204}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{204, 205}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{205, 206}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{206, 207}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{207, 208}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{209, 210}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{209, 227}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{210, 211}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{210, 218}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{211, 212}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{212, 213}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{213, 214}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{214, 215}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{215, 216}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{216, 217}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{218, 219}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{219, 220}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{220, 221}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{221, 222}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{222, 223}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{222, 225}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{223, 224}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{225, 226}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{227, 228}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{227, 245}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{228, 229}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{228, 235}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{229, 230}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{230, 231}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{231, 232}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{232, 233}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{233, 234}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{235, 236}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{236, 237}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{236, 241}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{237, 238}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{238, 239}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{239, 240}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{241, 242}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{242, 243}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{243, 244}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{245, 246}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{245, 254}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{246, 247}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{247, 248}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{248, 249}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{249, 250}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{249, 252}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{250, 251}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{252, 253}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{254, 255}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{255, 256}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{255, 262}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{256, 257}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{257, 258}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{257, 260}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{258, 259}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{260, 261}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{262, 263}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{263, 264}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{263, 266}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{264, 265}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{266, 267}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{268, 269}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{269, 270}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{269, 297}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{270, 271}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{270, 279}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{271, 272}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{272, 273}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{273, 274}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{274, 275}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{275, 276}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{276, 277}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{277, 278}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{279, 280}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{280, 281}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{280, 291}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{281, 282}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{282, 283}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{282, 287}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{283, 284}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{284, 285}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{285, 286}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{287, 288}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{288, 289}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{289, 290}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{291, 292}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{292, 293}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{293, 294}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{294, 295}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{295, 296}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{297, 298}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{297, 315}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{298, 299}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{298, 306}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{299, 300}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{300, 301}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{301, 302}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{302, 303}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{303, 304}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{304, 305}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{306, 307}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{307, 308}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{308, 309}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{309, 310}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{310, 311}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{310, 313}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{311, 312}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{313, 314}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{315, 316}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{315, 333}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{316, 317}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{316, 323}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{317, 318}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{318, 319}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{319, 320}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{320, 321}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{321, 322}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{323, 324}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{324, 325}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{324, 329}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{325, 326}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{326, 327}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{327, 328}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{329, 330}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{330, 331}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{331, 332}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{333, 334}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{333, 342}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{334, 335}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{335, 336}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{336, 337}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{337, 338}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{337, 340}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{338, 339}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{340, 341}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{342, 343}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{343, 344}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{343, 350}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{344, 345}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{345, 346}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{345, 348}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{346, 347}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{348, 349}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{350, 351}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{351, 352}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{351, 354}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{352, 353}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{354, 355}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{356, 357}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{356, 445}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{357, 358}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{358, 359}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{358, 386}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{359, 360}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{359, 378}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{360, 361}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{361, 362}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{361, 372}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{362, 363}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{363, 364}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{363, 368}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{364, 365}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{365, 366}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{366, 367}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{368, 369}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{369, 370}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{370, 371}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{372, 373}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{373, 374}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{374, 375}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{375, 376}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{376, 377}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{378, 379}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{379, 380}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{380, 381}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{381, 382}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{382, 383}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{383, 384}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{384, 385}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{386, 387}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{386, 404}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{387, 388}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{387, 395}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{388, 389}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{389, 390}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{390, 391}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{391, 392}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{392, 393}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{393, 394}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{395, 396}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{396, 397}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{397, 398}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{398, 399}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{399, 400}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{399, 402}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{400, 401}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{402, 403}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{404, 405}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{404, 422}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{405, 406}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{405, 412}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{406, 407}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{407, 408}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{408, 409}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{409, 410}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{410, 411}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{412, 413}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{413, 414}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{413, 418}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{414, 415}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{415, 416}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{416, 417}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{418, 419}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{419, 420}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{420, 421}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{422, 423}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{422, 431}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{423, 424}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{424, 425}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{425, 426}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{426, 427}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{426, 429}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{427, 428}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{429, 430}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{431, 432}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{432, 433}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{432, 439}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{433, 434}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{434, 435}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{434, 437}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{435, 436}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{437, 438}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{439, 440}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{440, 441}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{440, 443}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{441, 442}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{443, 444}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{445, 446}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{446, 447}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{446, 474}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{447, 448}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{447, 456}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{448, 449}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{449, 450}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{450, 451}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{451, 452}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{452, 453}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{453, 454}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{454, 455}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{456, 457}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{457, 458}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{457, 468}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{458, 459}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{459, 460}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{459, 464}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{460, 461}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{461, 462}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{462, 463}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{464, 465}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{465, 466}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{466, 467}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{468, 469}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{469, 470}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{470, 471}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{471, 472}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{472, 473}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{474, 475}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{474, 492}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{475, 476}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{475, 483}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{476, 477}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{477, 478}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{478, 479}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{479, 480}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{480, 481}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{481, 482}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{483, 484}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{484, 485}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{485, 486}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{486, 487}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{487, 488}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{487, 490}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{488, 489}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{490, 491}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{492, 493}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{492, 510}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{493, 494}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{493, 500}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{494, 495}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{495, 496}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{496, 497}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{497, 498}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{498, 499}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{500, 501}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{501, 502}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{501, 506}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{502, 503}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{503, 504}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{504, 505}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{506, 507}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{507, 508}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{508, 509}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{510, 511}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{510, 519}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{511, 512}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{512, 513}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{513, 514}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{514, 515}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{514, 517}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{515, 516}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{517, 518}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{519, 520}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{520, 521}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{520, 527}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{521, 522}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{522, 523}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{522, 525}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{523, 524}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{525, 526}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{527, 528}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{528, 529}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{528, 531}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{529, 530}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{531, 532}, 0.09519516570557351]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[7, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[8, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[11, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[27, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[31, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[33, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[34, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[38, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[39, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[40, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[41, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[42, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[43, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[45, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[47, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[49, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[51, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[52, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[54, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[58, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[60, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[65, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[67, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[68, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[69, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[70, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[71, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[72, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[73, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[74, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[75, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[76, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[78, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[79, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[80, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[82, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[83, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[85, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[86, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[88, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[89, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[91, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[92, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[93, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[94, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[95, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[96, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[97, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[98, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[99, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[101, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[103, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[104, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[105, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[106, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[107, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[108, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[109, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[110, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[112, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[116, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[118, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[119, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[120, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[121, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[122, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[124, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[125, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[126, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[127, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[128, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[129, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[131, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[132, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[133, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[134, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[135, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[136, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[137, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[139, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[140, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[141, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[142, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[143, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[144, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[145, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[148, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[149, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[150, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[151, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[152, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[153, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[155, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[156, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[157, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[158, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[159, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[160, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[161, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[162, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[164, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[166, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[167, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[168, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[169, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[170, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[171, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[172, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[174, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[175, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[177, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[178, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[179, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[180, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[182, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[183, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[185, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[186, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[187, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[188, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[189, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[190, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[191, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[192, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[193, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[194, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[195, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[196, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[197, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[198, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[199, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[200, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[201, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[202, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[203, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[204, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[205, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[206, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[207, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[208, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[209, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[210, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[211, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[212, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[213, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[214, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[215, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[216, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[217, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[218, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[219, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[220, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[221, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[222, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[223, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[224, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[225, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[226, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[227, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[228, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[229, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[230, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[231, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[232, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[233, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[234, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[235, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[236, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[237, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[238, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[239, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[240, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[241, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[242, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[243, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[244, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[245, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[246, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[247, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[248, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[249, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[250, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[251, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[252, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[253, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[254, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[255, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[256, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[257, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[258, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[259, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[260, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[261, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[262, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[263, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[264, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[265, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[266, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[267, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[268, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[269, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[270, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[271, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[272, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[273, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[274, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[275, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[276, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[277, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[278, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[279, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[280, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[281, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[282, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[283, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[284, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[285, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[286, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[287, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[288, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[289, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[290, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[291, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[292, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[293, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[294, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[295, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[296, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[297, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[298, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[299, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[300, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[301, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[302, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[303, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[304, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[305, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[306, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[307, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[308, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[309, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[310, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[311, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[312, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[313, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[314, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[315, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[316, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[317, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[318, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[319, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[320, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[321, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[322, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[323, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[324, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[325, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[326, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[327, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[328, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[329, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[330, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[331, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[332, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[333, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[334, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[335, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[336, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[337, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[338, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[339, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[340, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[341, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[342, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[343, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[344, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[345, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[346, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[347, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[348, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[349, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[350, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[351, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[352, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[353, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[354, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[355, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[356, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[357, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[358, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[359, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[360, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[361, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[362, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[363, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[364, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[365, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[366, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[367, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[368, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[369, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[370, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[371, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[372, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[373, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[374, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[375, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[376, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[377, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[378, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[379, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[380, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[381, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[382, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[383, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[384, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[385, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[386, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[387, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[388, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[389, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[390, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[391, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[392, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[393, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[394, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[395, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[396, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[397, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[398, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[399, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[400, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[401, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[402, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[403, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[404, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[405, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[406, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[407, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[408, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[409, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[410, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[411, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[412, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[413, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[414, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[415, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[416, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[417, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[418, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[419, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[420, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[421, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[422, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[423, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[424, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[425, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[426, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[427, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[428, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[429, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[430, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[431, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[432, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[433, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[434, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[435, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[436, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[437, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[438, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[439, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[440, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[441, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[442, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[443, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[444, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[445, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[446, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[447, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[448, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[449, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[450, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[451, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[452, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[453, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[454, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[455, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[456, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[457, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[458, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[459, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[460, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[461, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[462, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[463, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[464, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[465, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[466, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[467, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[468, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[469, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[470, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[471, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[472, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[473, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[474, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[475, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[476, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[477, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[478, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[479, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[480, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[481, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[482, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[483, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[484, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[485, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[486, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[487, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[488, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[489, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[490, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[491, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[492, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[493, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[494, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[495, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[496, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[497, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[498, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[499, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[500, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[501, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[502, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[503, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[504, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[505, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[506, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[507, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[508, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[509, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[510, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[511, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[512, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[513, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[514, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[515, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[516, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[517, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[518, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[519, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[520, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[521, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[522, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[523, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[524, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[525, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[526, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[527, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[528, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[529, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[530, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[531, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[532, 0.09519516570557351]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"384", ",", "\"9-9-8-5-5-5-5-4-4-3-3-3-3\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#9-4", 
         "1-1#2-2#3-3#9-4#5-1", "1-1#2-2#3-3#9-4#5-1#8-3", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3", "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4#7-2#12-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2#7-2#12-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1#4-4", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1#4-4#6-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1#4-4#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1#4-4#6-2#7-2#12-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4", "1-1#2-2#3-3#9-4#5-1#8-4#10-3", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2#7-2#12-4", 
         "1-1#2-2#3-3#9-4#5-4", "1-1#2-2#3-3#9-4#5-4#8-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1", "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3", "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3", "1-1#2-2#3-3#9-4#5-4#8-3#10-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-2#6-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-2#6-1#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-2#6-1#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3", "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-1#12-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-2#12-1", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#9-3", "1-1#2-2#3-4#9-3#5-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3", "1-1#2-2#3-4#9-3#5-1#8-3#10-4", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2#7-2#12-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4", "1-1#2-2#3-4#9-3#5-1#8-4#10-4", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3#7-2#12-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2#7-2#12-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1#4-3", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1#4-3#6-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1#4-3#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1#4-3#6-2#7-2#12-3", 
         "1-1#2-2#3-4#9-3#5-3", "1-1#2-2#3-4#9-3#5-3#8-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1", "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4", "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4", "1-1#2-2#3-4#9-3#5-3#8-4#10-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-2#6-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-2#6-1#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-2#6-1#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4", "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-1#12-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-2#12-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-1#12-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-2#12-1", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#9-4", "1-1#2-3#3-2#9-4#5-1", 
         "1-1#2-3#3-2#9-4#5-1#8-2", "1-1#2-3#3-2#9-4#5-1#8-2#10-2", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4#7-3#12-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3#7-3#12-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1#4-4", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1#4-4#6-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1#4-4#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1#4-4#6-3#7-3#12-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4", "1-1#2-3#3-2#9-4#5-1#8-4#10-2", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3#7-3#12-4", 
         "1-1#2-3#3-2#9-4#5-4", "1-1#2-3#3-2#9-4#5-4#8-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1", "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2", "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2", "1-1#2-3#3-2#9-4#5-4#8-2#10-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-3#6-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-3#6-1#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-3#6-1#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2", "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-1#12-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-3#12-1", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#9-2", "1-1#2-3#3-4#9-2#5-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2", "1-1#2-3#3-4#9-2#5-1#8-2#10-4", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3#7-3#12-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4", "1-1#2-3#3-4#9-2#5-1#8-4#10-4", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3#7-3#12-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2#7-3#12-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1#4-2", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1#4-2#6-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1#4-2#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1#4-2#6-3#7-3#12-2", 
         "1-1#2-3#3-4#9-2#5-2", "1-1#2-3#3-4#9-2#5-2#8-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1", "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4", "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4", "1-1#2-3#3-4#9-2#5-2#8-4#10-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-3#6-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-3#6-1#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-3#6-1#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4", "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-1#12-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-3#12-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-1#12-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-3#12-1", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#9-3", "1-1#2-4#3-2#9-3#5-1", 
         "1-1#2-4#3-2#9-3#5-1#8-2", "1-1#2-4#3-2#9-3#5-1#8-2#10-2", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4#7-4#12-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3#7-4#12-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1#4-3", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1#4-3#6-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1#4-3#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1#4-3#6-4#7-4#12-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3", "1-1#2-4#3-2#9-3#5-1#8-3#10-2", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4#7-4#12-3", 
         "1-1#2-4#3-2#9-3#5-3", "1-1#2-4#3-2#9-3#5-3#8-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1", "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2", "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2", "1-1#2-4#3-2#9-3#5-3#8-2#10-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-4#6-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-4#6-1#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-4#6-1#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2", "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-1#12-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-4#12-1", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#9-2", "1-1#2-4#3-3#9-2#5-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2", "1-1#2-4#3-3#9-2#5-1#8-2#10-3", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4#7-4#12-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3", "1-1#2-4#3-3#9-2#5-1#8-3#10-3", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4#7-4#12-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2#7-4#12-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1#4-2", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1#4-2#6-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1#4-2#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1#4-2#6-4#7-4#12-2", 
         "1-1#2-4#3-3#9-2#5-2", "1-1#2-4#3-3#9-2#5-2#8-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1", "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3", "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3", "1-1#2-4#3-3#9-2#5-2#8-3#10-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-4#6-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-4#6-1#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-4#6-1#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3", "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-1#12-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-4#12-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-1#12-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-4#12-1"}, {
        Null, CompressedData["
1:eJw112XQlGUUBuBvP7pbpJQQpEHpbhDp7lS6uwSkUwHpDunuBmmkU+lulO5U
cC9/XPvOPeecZ84z8+7ObLKGbSq2Dg0JCYnz4ePjMxASfH4UhrCEIzwRiEgk
IhOFqERTj04MYhLLebGJQ1zi8Qnx7fMpCUhIIhKThM/43L2SkozkpOALUpKK
L0ltLg1pSUd6MpCRTHJmvrLH12QhK9nITg5ykkt/bvKQl3zkp4B6QQpRmCL2
KEoxilOCbyjJt3IpSpsvQ1nKUZ4KVJQrUVl/FapSjepyDWqGBN/fWtSmDnWp
R30a0JDv+J5G5hvThKY0ozktaEkr9da0oS3tnNeeDnSkE53p4l5d6UZ3evAD
PelFb34014e+9KM/AxjIIHkwQ+wxlGEM5yd+ZgQjGaX/F0YzhrGMY7z6BCYy
icn2mMJUpjGdGcxklvwrs83PYS7zmM8CFsqLWKx/CUtZxnJ5BStDgr/Dq1jN
GtayjvVsYCOb2MwWtqr/xja2s8N5O9nFbvawl9/ts4/9HOAghzjMEY661zGO
c4KT/MGfnOI0Z8yd5RznucBFLnFZvsJVe1zjOje4yS1uc4e7+v/ib+5xnwc8
VH/EY57w1B7PeM4LXvKK17yR3/LO/Hv+4b+X7YMAoYSRwxIuEOwPHwiKQEQi
yZGJEgi+v1EDQdGITgxiEovYxCEu8fjEfHw+JQEJSURikvCZ+uckJRnJnZeC
L0hJKr4ktXulIS3pSE8GMpKJzHxl7muykJVsZCcHOeVc5LZHHvKSj/wUoCCF
KKy/CEUpRnFK8I16Sb6lFKXtUYaylKM8FahIJbkyVcxXpRrVqUFNasm1qaO/
LvWoTwO5Id8Fgl+N7wNBjWhME5rSjOa0oCWtaE0b9ba0oz0dnNeRTnSmC13p
Zp/u9OAHetKL3vxIH/fqSz/6M4CBDGIwQxhqbhjD+YmfGcFIRsm/MNoeYxjL
OMYzgYlMYrL+KUxlGtOZwUz1WfzKbObYYy7zmM8CFrKIxfISlppfxnJWsJJV
rJbXsFb/OtazgY3yJjYHgu/vFrbyG9vYzg52sovd7GGv+d/Zx34OcJBDHOaI
+lGOcZwTzjvJH/zJKU5zxr3Oco7zXOAil7jMFa6au8Z1bnCTW9zmjnyXv+zx
N/e4zwMe8ojHPNH/lGc85wUveaX+mje85Z093vMP///hDxBKGMLK4QgfGpyP
EBoUkUhEJgpR5WhE1x+DmMQithyHuB/8C4VbAbI=
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {384, "10-8-8-5-5-5-5-4-4-3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-1#8-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4#7-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4#7-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2#7-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4#7-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1#4-4#6-3#7-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3#7-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-4#6-1#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3#7-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3#7-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2#7-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3#7-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4#7-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-2#6-1#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4#6-2#7-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2#6-4#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1#4-3#6-4#7-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-3#6-1#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3#4-3#6-2#7-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-4#6-1#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3#7-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-1#13-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1#13-2#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1#4-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-3#6-1#7-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2#7-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1#4-2#6-4#7-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-2#13-1#4-2#6-3#7-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4#6-3#7-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3#13-1#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1#4-4#6-2#7-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-2#13-1#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-3#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-4#13-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1#13-4#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-2#6-1#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-1#13-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-3#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-3#6-2#7-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4#7-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-4#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-4#13-1#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-2#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-1#13-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-4#10-4#11-1#13-2#4-3#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-1#13-2#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#13-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-4#10-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-2#8-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4#6-1#7-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-3#13-1#4-3#6-2#7-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3#4-2#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-4#10-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-3#13-1#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-1#13-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-3#10-3#11-1#13-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-1#11-1#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-3#6-4#7-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2#7-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3#7-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-3#11-2#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-4#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-3#10-1#11-2#13-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-2#11-1#13-4#4-1#6-3#7-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-4#10-4#11-3#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-2#10-1#11-1#13-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#13-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-4#10-1#11-2#13-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-3#10-3#11-1#13-4#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-2#10-2#11-1#13-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-2#10-2#11-3#13-1#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-2#10-2#11-1#13-3#4-4#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-4#10-4#11-1#13-2#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-3#10-1#11-4#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-3#10-3#11-4" -> 
           RGBColor[1, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
/n5n5vSXcd+b+MS4zyE+Me6nSye6dSoa4XNtpLtJqSmSvWbp1+vq46tGak/j
BGPEzFz8/iBPBz+m7ytNe26AiLCEq9EumpDfWxI2MloP9cTPvsT5s8RPNeJ8
UXXfiaIzFjLvyrd7VNLngymOHp5rbffLDAc2nDS962CMQ+bd++WCTLDrbWpy
/nwD7Nm5xfh+vSG2TJndEbNPFzs17HcUS/SRVuLqPfGeFtJTygek7e71FuI7
84ivn//jO/OIdBOtqCnPrWQc7dpzsOPO/86P65jq/tIc+VRHAdV1kOpgde2m
OnZTXduojm1U10aqYwPVlUx1sLq6O/6r4wfVtWzxN4FKiQWKtGJW+8ebYPMp
78IT88xwmzzn6JciOz8dE3wlz6keqpYnX2kIM4GnadwSbTSvDuIeXaKPRNMb
E7Qea0Ce3jvzGCV678xjXtO5M09RpHNnnlKW7jSnTYUHtU8vvRf3/n9/+9dL
uDKveBYyauqk9Rao/B49Sa5HH8sPrRTErjODYLyHU0mlDlTp3mbTPd5L91ad
7rGI7m0L3eNqurcRdI+bQrwr615x8JfiuRqvc3pQq+6s3a3FwUOBu2XOZG2s
I98OJm/pT76dRd6yjb7revrOjei7liNvWZnSFt620gIJ5B2T3/U18241QyB5
hz31jSjqI30u/9c3BlEfUapYtSp9Cw+ONXYCw0EGMLC+ZuyXbAkbj4khAfN1
0TYld1dXGxf72xPPfLmqidPUB4XUF1OoD/KoL+ZQn2N9z4f6HIf6njf1ySzq
m1nUJ3OobzYOWpC1VsMaOsTxZ6PUmhVv8JBAHJ9OHGBcWEwcYFwwoz7P+v5S
6vOs708kTgwibkiIE3LE+bM7zocf7Z33B+naf7NvU4LXtNM59zZaI3X7lNKN
B3ukNsQ1xjk2fzPOvSBuMo7GEDcZR62UFF3Ti+1k/Xf1Ns2eG7n2+J36r/Ml
/+T+V2xlnhVV4qZ+0NgWU8ouBG/MNMazARO5mxxsZV4xnjyCecUp8gjmFWbk
EYz7KeQRjPvvyCNYvb7kEazeN+R1y8jzlK/nqG88bAfBEck/LXoGUCTPYufV
SZ7Fzuv8hI3XB0XZybxhYN2a3a+O2MGQvOEEeRTzKkfyKPY+/S+tuuy53R5n
zauX7zqmjGV/Vf3c+MIeTvNbfNY7yiGDeRqd51HyNOZtWuSdvuShF8g7T5CH
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
Y1xzJo4xrn0kTjJuBhAnGTf/Dyr8Glc=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{1, 179}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{1, 356}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{2, 91}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{4, 32}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{5, 24}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{7, 18}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{9, 14}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{32, 50}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{33, 41}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{45, 48}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{50, 68}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{51, 58}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{59, 64}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{68, 77}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{72, 75}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{78, 85}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{80, 83}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{86, 89}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{92, 120}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{93, 102}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{103, 114}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{105, 110}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{120, 138}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{121, 129}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{133, 136}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{138, 156}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{139, 146}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{147, 152}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{156, 165}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{160, 163}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{166, 173}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{168, 171}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{174, 177}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{179, 268}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{181, 209}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{182, 201}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{184, 195}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{186, 191}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{191, 192}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{192, 193}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{193, 194}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{195, 196}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{196, 197}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{197, 198}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{198, 199}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{199, 200}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{201, 202}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{202, 203}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{203, 204}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{204, 205}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{205, 206}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{206, 207}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{207, 208}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{209, 210}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{209, 227}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{210, 211}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{210, 218}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{211, 212}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{212, 213}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{213, 214}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{214, 215}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{215, 216}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{216, 217}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{218, 219}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{219, 220}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{220, 221}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{221, 222}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{222, 223}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{222, 225}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{223, 224}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{225, 226}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{227, 228}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{227, 245}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{228, 229}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{228, 235}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{229, 230}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{230, 231}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{231, 232}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{232, 233}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{233, 234}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{235, 236}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{236, 237}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{236, 241}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{237, 238}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{238, 239}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{239, 240}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{241, 242}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{242, 243}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{243, 244}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{245, 246}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{245, 254}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{246, 247}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{247, 248}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{248, 249}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{249, 250}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{249, 252}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{250, 251}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{252, 253}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{254, 255}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{255, 256}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{255, 262}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{256, 257}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{257, 258}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{257, 260}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{258, 259}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{260, 261}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{262, 263}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{263, 264}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{263, 266}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{264, 265}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{266, 267}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{268, 269}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{269, 270}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{269, 297}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{270, 271}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{270, 279}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{271, 272}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{272, 273}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{273, 274}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{274, 275}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{275, 276}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{276, 277}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{277, 278}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{279, 280}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{280, 281}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{280, 291}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{281, 282}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{282, 283}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{282, 287}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{283, 284}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{284, 285}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{285, 286}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{287, 288}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{288, 289}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{289, 290}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{291, 292}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{292, 293}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{293, 294}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{294, 295}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{295, 296}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{297, 298}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{297, 315}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{298, 299}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{298, 306}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{299, 300}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{300, 301}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{301, 302}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{302, 303}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{303, 304}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{304, 305}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{306, 307}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{307, 308}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{308, 309}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{309, 310}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{310, 311}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{310, 313}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{311, 312}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{313, 314}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{315, 316}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{315, 333}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{316, 317}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{316, 323}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{317, 318}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{318, 319}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{319, 320}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{320, 321}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{321, 322}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{323, 324}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{324, 325}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{324, 329}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{325, 326}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{326, 327}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{327, 328}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{329, 330}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{330, 331}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{331, 332}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{333, 334}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{333, 342}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{334, 335}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{335, 336}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{336, 337}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{337, 338}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{337, 340}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{338, 339}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{340, 341}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{342, 343}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{343, 344}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{343, 350}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{344, 345}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{345, 346}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{345, 348}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{346, 347}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{348, 349}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{350, 351}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{351, 352}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{351, 354}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{352, 353}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{354, 355}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{356, 357}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{356, 445}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{357, 358}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{358, 359}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{358, 386}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{359, 360}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{359, 378}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{360, 361}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{361, 362}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{361, 372}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{362, 363}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{363, 364}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{363, 368}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{364, 365}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{365, 366}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{366, 367}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{368, 369}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{369, 370}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{370, 371}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{372, 373}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{373, 374}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{374, 375}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{375, 376}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{376, 377}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{378, 379}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{379, 380}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{380, 381}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{381, 382}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{382, 383}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{383, 384}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{384, 385}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{386, 387}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{386, 404}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{387, 388}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{387, 395}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{388, 389}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{389, 390}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{390, 391}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{391, 392}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{392, 393}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{393, 394}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{395, 396}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{396, 397}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{397, 398}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{398, 399}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{399, 400}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{399, 402}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{400, 401}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{402, 403}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{404, 405}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{404, 422}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{405, 406}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{405, 412}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{406, 407}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{407, 408}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{408, 409}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{409, 410}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{410, 411}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{412, 413}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{413, 414}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{413, 418}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{414, 415}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{415, 416}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{416, 417}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{418, 419}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{419, 420}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{420, 421}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{422, 423}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{422, 431}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{423, 424}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{424, 425}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{425, 426}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{426, 427}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{426, 429}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{427, 428}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{429, 430}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{431, 432}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{432, 433}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{432, 439}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{433, 434}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{434, 435}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{434, 437}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{435, 436}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{437, 438}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{439, 440}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{440, 441}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{440, 443}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{441, 442}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{443, 444}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{445, 446}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{446, 447}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{446, 474}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{447, 448}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{447, 456}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{448, 449}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{449, 450}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{450, 451}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{451, 452}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{452, 453}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{453, 454}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{454, 455}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{456, 457}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{457, 458}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{457, 468}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{458, 459}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{459, 460}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{459, 464}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{460, 461}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{461, 462}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{462, 463}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{464, 465}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{465, 466}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{466, 467}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{468, 469}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{469, 470}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{470, 471}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{471, 472}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{472, 473}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{474, 475}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{474, 492}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{475, 476}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{475, 483}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{476, 477}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{477, 478}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{478, 479}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{479, 480}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{480, 481}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{481, 482}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{483, 484}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{484, 485}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{485, 486}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{486, 487}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{487, 488}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{487, 490}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{488, 489}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{490, 491}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{492, 493}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{492, 510}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{493, 494}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{493, 500}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{494, 495}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{495, 496}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{496, 497}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{497, 498}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{498, 499}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{500, 501}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{501, 502}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{501, 506}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{502, 503}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{503, 504}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{504, 505}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{506, 507}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{507, 508}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{508, 509}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{510, 511}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{510, 519}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{511, 512}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{512, 513}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{513, 514}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{514, 515}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{514, 517}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{515, 516}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{517, 518}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{519, 520}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{520, 521}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{520, 527}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{521, 522}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{522, 523}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{522, 525}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{523, 524}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{525, 526}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{527, 528}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{528, 529}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{528, 531}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{529, 530}, 0.09519516570557351]}, 
           {Arrowheads[0.], ArrowBox[{531, 532}, 0.09519516570557351]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[7, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[8, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[11, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[27, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[31, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[33, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[34, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[38, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[39, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[40, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[41, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[42, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[43, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[45, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[46, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[47, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[49, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[51, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[52, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[53, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[54, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[58, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[59, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[60, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[65, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[67, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[68, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[69, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[71, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[72, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[73, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[74, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[75, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[76, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[77, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[78, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[79, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[80, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[82, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[83, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[85, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[86, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[88, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[89, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[91, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[92, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[93, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[94, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[95, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[96, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[97, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[98, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[99, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[100, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[101, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[103, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[104, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[105, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[106, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[107, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[108, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[109, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[110, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[112, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[114, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[115, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[116, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[118, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[119, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[120, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[121, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[122, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[123, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[124, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[125, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[126, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[127, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[128, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[129, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[131, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[132, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[133, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[134, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[135, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[136, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[137, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[139, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[140, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[141, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[142, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[143, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[144, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[145, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[147, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[148, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[149, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[150, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[151, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[152, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[153, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[154, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[155, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[156, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[157, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[158, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[159, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[160, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[161, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[162, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[163, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[164, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[166, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[167, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[168, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[169, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[170, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[171, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[172, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[173, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[174, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[175, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[177, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[178, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[179, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[180, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[181, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[182, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[183, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[184, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[185, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[186, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[187, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[188, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[189, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[190, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[191, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[192, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[193, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[194, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[195, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[196, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[197, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[198, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[199, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[200, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[201, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[202, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[203, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[204, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[205, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[206, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[207, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[208, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[209, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[210, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[211, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[212, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[213, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[214, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[215, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[216, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[217, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[218, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[219, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[220, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[221, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[222, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[223, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[224, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[225, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[226, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[227, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[228, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[229, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[230, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[231, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[232, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[233, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[234, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[235, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[236, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[237, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[238, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[239, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[240, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[241, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[242, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[243, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[244, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[245, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[246, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[247, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[248, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[249, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[250, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[251, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[252, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[253, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[254, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[255, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[256, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[257, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[258, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[259, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[260, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[261, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[262, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[263, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[264, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[265, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[266, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[267, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[268, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[269, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[270, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[271, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[272, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[273, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[274, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[275, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[276, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[277, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[278, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[279, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[280, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[281, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[282, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[283, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[284, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[285, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[286, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[287, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[288, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[289, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[290, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[291, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[292, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[293, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[294, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[295, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[296, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[297, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[298, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[299, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[300, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[301, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[302, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[303, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[304, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[305, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[306, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[307, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[308, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[309, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[310, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[311, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[312, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[313, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[314, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[315, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[316, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[317, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[318, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[319, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[320, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[321, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[322, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[323, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[324, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[325, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[326, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[327, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[328, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[329, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[330, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[331, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[332, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[333, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[334, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[335, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[336, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[337, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[338, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[339, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[340, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[341, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[342, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[343, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[344, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[345, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[346, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[347, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[348, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[349, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[350, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[351, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[352, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[353, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[354, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[355, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[356, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[357, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[358, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[359, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[360, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[361, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[362, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[363, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[364, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[365, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[366, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[367, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[368, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[369, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[370, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[371, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[372, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[373, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[374, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[375, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[376, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[377, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[378, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[379, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[380, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[381, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[382, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[383, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[384, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[385, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[386, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[387, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[388, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[389, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[390, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[391, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[392, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[393, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[394, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[395, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[396, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[397, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[398, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[399, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[400, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[401, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[402, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[403, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[404, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[405, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[406, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[407, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[408, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[409, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[410, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[411, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[412, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[413, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[414, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[415, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[416, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[417, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[418, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[419, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[420, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[421, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[422, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[423, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[424, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[425, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[426, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[427, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[428, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[429, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[430, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[431, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[432, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[433, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[434, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[435, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[436, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[437, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[438, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[439, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[440, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[441, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[442, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[443, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[444, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[445, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[446, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[447, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[448, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[449, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[450, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[451, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[452, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[453, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[454, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[455, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[456, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[457, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[458, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[459, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[460, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[461, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[462, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[463, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[464, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[465, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[466, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[467, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[468, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[469, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[470, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[471, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[472, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[473, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[474, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[475, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[476, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[477, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[478, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[479, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[480, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[481, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[482, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[483, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[484, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[485, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[486, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[487, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[488, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[489, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[490, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[491, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[492, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[493, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[494, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[495, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[496, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[497, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[498, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[499, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[500, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[501, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[502, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[503, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[504, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[505, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[506, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[507, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[508, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[509, 0.09519516570557351]}, 
           {RGBColor[0, 0, 1], DiskBox[510, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[511, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[512, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[513, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[514, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[515, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[516, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[517, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[518, 0.09519516570557351]}, 
           {RGBColor[0, 1, 0], DiskBox[519, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[520, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[521, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[522, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[523, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[524, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[525, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[526, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[527, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[528, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[529, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[530, 0.09519516570557351]}, 
           {RGBColor[1, 1, 0], DiskBox[531, 0.09519516570557351]}, 
           {RGBColor[1, 0, 0], DiskBox[532, 0.09519516570557351]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"384", ",", "\"10-8-8-5-5-5-5-4-4-3-3-3-3\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#9-4", 
         "1-1#2-2#3-3#9-4#5-1", "1-1#2-2#3-3#9-4#5-1#8-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3", "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3#4-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3#4-4#6-2", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3#4-4#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3#4-4#6-2#7-2#11-4", 
         "1-1#2-2#3-3#9-4#5-4", "1-1#2-2#3-3#9-4#5-4#8-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1", "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2#7-2#11-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3", "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2#7-1#11-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2#7-2#11-1", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#9-3", "1-1#2-2#3-4#9-3#5-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3", "1-1#2-2#3-4#9-3#5-1#8-3#10-4", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4#4-3", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4#4-3#6-2", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4#4-3#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4#4-3#6-2#7-2#11-3", 
         "1-1#2-2#3-4#9-3#5-3", "1-1#2-2#3-4#9-3#5-3#8-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1", "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2#7-2#11-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4", "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2#7-1#11-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2#7-2#11-1", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#9-4", "1-1#2-3#3-2#9-4#5-1", 
         "1-1#2-3#3-2#9-4#5-1#8-4", "1-1#2-3#3-2#9-4#5-1#8-4#10-2", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2#4-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2#4-4#6-3", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2#4-4#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2#4-4#6-3#7-3#11-4", 
         "1-1#2-3#3-2#9-4#5-4", "1-1#2-3#3-2#9-4#5-4#8-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1", "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3#7-3#11-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2", "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3#7-1#11-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3#7-3#11-1", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#9-2", "1-1#2-3#3-4#9-2#5-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2", "1-1#2-3#3-4#9-2#5-1#8-2#10-4", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4#4-2", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4#4-2#6-3", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4#4-2#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4#4-2#6-3#7-3#11-2", 
         "1-1#2-3#3-4#9-2#5-2", "1-1#2-3#3-4#9-2#5-2#8-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1", "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3#7-3#11-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4", "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3#7-1#11-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3#7-3#11-1", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#9-3", "1-1#2-4#3-2#9-3#5-1", 
         "1-1#2-4#3-2#9-3#5-1#8-3", "1-1#2-4#3-2#9-3#5-1#8-3#10-2", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2#4-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2#4-3#6-4", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2#4-3#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2#4-3#6-4#7-4#11-3", 
         "1-1#2-4#3-2#9-3#5-3", "1-1#2-4#3-2#9-3#5-3#8-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1", "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4#7-4#11-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2", "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4#7-1#11-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4#7-4#11-1", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#9-2", "1-1#2-4#3-3#9-2#5-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2", "1-1#2-4#3-3#9-2#5-1#8-2#10-3", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3#4-2", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3#4-2#6-4", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3#4-2#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3#4-2#6-4#7-4#11-2", 
         "1-1#2-4#3-3#9-2#5-2", "1-1#2-4#3-3#9-2#5-2#8-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1", "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4#7-4#11-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3", "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4#7-1#11-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4#7-4#11-1"}, {
        Null, CompressedData["
1:eJwBcwGM/iFib1JiAgAAALEAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNBA4ODw8QEBEREhITExQUFRUWDxcXGBgZGRoaGxscHB0bHh4fAiAgISEi
IiMjJCQlJSYmJycoKCkpKiErKywsLS0uLi8vMDAxMTIyMyw0NDU1NjY3Nzg4
OTk6ODs7PAE9PT4+Pz9AQEFBQkJDQ0RERUVGRkdHSD9JSUpKS0tMTE1NTk5P
T1BQUUpSUlNTVFRVVVZWV1dYVllZWj1bW1xcXV1eXl9fYGBhYWJiY2NkZGVc
ZmZnZ2hoaWlqamtrbGxtbW5nb29wcHFxcnJzc3R0dXN2dncBeHh5eXp6e3t8
fH19fn5/f4CAgYGCgoN6hISFhYaGh4eIiImJioqLi4yFjY2Ojo+PkJCRkZKS
k5GUlJV4lpaXl5iYmZmampubnJydnZ6en5+gl6GhoqKjo6SkpaWmpqenqKip
oqqqq6usrK2trq6vr7CusbGyDqF8qw==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {96, "10-9-8-6-5-5-4-4-3-3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2#4-4#6-3#7-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4#4-3#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2#7-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4#7-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2#7-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2#7-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4#7-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4#7-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3#7-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3#7-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3#7-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-1#8-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2#4-3#6-4#7-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4#4-3#6-2#7-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3#7-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3#4-4#6-2#7-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4#7-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3#7-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-1#8-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-3#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-2#4-1#6-4#7-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-3#4-2#6-4#7-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4#4-2#6-3#7-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4" -> RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2#7-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-1#8-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-2#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2#7-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-4#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-2#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-2#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2#7-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-2#4-1#6-3#7-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-3#4-1#6-4#7-4#11-1" -> 
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
BTkzwwA=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{1, 61}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{1, 120}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{2, 32}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{4, 14}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{15, 23}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{27, 30}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{33, 43}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{44, 52}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{56, 59}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{61, 91}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{63, 73}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{74, 82}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{86, 89}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{92, 102}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{103, 111}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{115, 118}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{120, 150}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{122, 132}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{133, 141}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{145, 148}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{151, 161}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{162, 170}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{174, 177}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09212695175138748]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[6, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[7, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[8, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[9, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[15, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[16, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[18, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[20, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[22, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[23, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[27, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[28, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[31, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[34, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[36, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[38, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[42, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[43, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[45, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[47, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[48, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[51, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[52, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[54, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[55, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[58, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[59, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[60, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[61, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[63, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[64, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[65, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[67, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[68, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[70, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[72, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[74, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[75, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[77, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[78, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[79, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[80, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[82, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[84, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[85, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[86, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[88, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[89, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[91, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[92, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[93, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[94, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[95, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[96, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[97, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[99, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[100, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[101, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[102, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[103, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[104, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[105, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[106, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[107, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[108, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[109, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[110, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[111, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[112, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[113, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[114, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[116, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[117, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[119, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[120, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[122, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[123, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[124, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[125, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[126, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[127, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[128, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[129, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[130, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[132, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[133, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[134, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[136, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[137, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[139, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[140, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[141, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[142, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[143, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[144, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[145, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[146, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[148, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[149, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[151, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[152, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[153, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[154, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[155, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[156, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[157, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[158, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[159, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[160, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[163, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[164, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[166, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[167, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[168, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[169, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[170, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[171, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[172, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[173, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[174, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[175, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[176, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[178, 0.09212695175138748]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"96", ",", "\"10-9-8-6-5-5-4-4-3-3-3-3-3\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#9-4", 
         "1-1#2-2#3-3#9-4#5-1", "1-1#2-2#3-3#9-4#5-1#8-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3", "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4#4-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4#4-4#6-2", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4#4-4#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4#4-4#6-2#7-2#11-4", 
         "1-1#2-2#3-3#9-4#5-4", "1-1#2-2#3-3#9-4#5-4#8-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1", "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2#7-2#11-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3", "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2#7-1#11-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2#7-2#11-1", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#9-3", "1-1#2-2#3-4#9-3#5-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3", "1-1#2-2#3-4#9-3#5-1#8-3#10-4", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3#4-3", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3#4-3#6-2", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3#4-3#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3#4-3#6-2#7-2#11-3", 
         "1-1#2-2#3-4#9-3#5-3", "1-1#2-2#3-4#9-3#5-3#8-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1", "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2#7-2#11-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4", "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2#7-1#11-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2#7-2#11-1", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#9-4", "1-1#2-3#3-2#9-4#5-1", 
         "1-1#2-3#3-2#9-4#5-1#8-4", "1-1#2-3#3-2#9-4#5-1#8-4#10-2", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4#4-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4#4-4#6-3", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4#4-4#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4#4-4#6-3#7-3#11-4", 
         "1-1#2-3#3-2#9-4#5-4", "1-1#2-3#3-2#9-4#5-4#8-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1", "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3#7-3#11-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2", "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3#7-1#11-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3#7-3#11-1", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#9-2", "1-1#2-3#3-4#9-2#5-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2", "1-1#2-3#3-4#9-2#5-1#8-2#10-4", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2#4-2", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2#4-2#6-3", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2#4-2#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2#4-2#6-3#7-3#11-2", 
         "1-1#2-3#3-4#9-2#5-2", "1-1#2-3#3-4#9-2#5-2#8-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1", "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3#7-3#11-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4", "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3#7-1#11-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3#7-3#11-1", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#9-3", "1-1#2-4#3-2#9-3#5-1", 
         "1-1#2-4#3-2#9-3#5-1#8-3", "1-1#2-4#3-2#9-3#5-1#8-3#10-2", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3#4-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3#4-3#6-4", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3#4-3#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3#4-3#6-4#7-4#11-3", 
         "1-1#2-4#3-2#9-3#5-3", "1-1#2-4#3-2#9-3#5-3#8-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1", "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4#7-4#11-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2", "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4#7-1#11-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4#7-4#11-1", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#9-2", "1-1#2-4#3-3#9-2#5-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2", "1-1#2-4#3-3#9-2#5-1#8-2#10-3", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2#4-2", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2#4-2#6-4", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2#4-2#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2#4-2#6-4#7-4#11-2", 
         "1-1#2-4#3-3#9-2#5-2", "1-1#2-4#3-3#9-2#5-2#8-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1", "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4#7-4#11-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3", "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4#7-1#11-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4#7-4#11-1"}, {
        Null, CompressedData["
1:eJwBcwGM/iFib1JiAgAAALEAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNBA4ODw8QEBEREhITExQUFRUWDxcXGBgZGRoaGxscHB0bHh4fAiAgISEi
IiMjJCQlJSYmJycoKCkpKiErKywsLS0uLi8vMDAxMTIyMyw0NDU1NjY3Nzg4
OTk6ODs7PAE9PT4+Pz9AQEFBQkJDQ0RERUVGRkdHSD9JSUpKS0tMTE1NTk5P
T1BQUUpSUlNTVFRVVVZWV1dYVllZWj1bW1xcXV1eXl9fYGBhYWJiY2NkZGVc
ZmZnZ2hoaWlqamtrbGxtbW5nb29wcHFxcnJzc3R0dXN2dncBeHh5eXp6e3t8
fH19fn5/f4CAgYGCgoN6hISFhYaGh4eIiImJioqLi4yFjY2Ojo+PkJCRkZKS
k5GUlJV4lpaXl5iYmZmampubnJydnZ6en5+gl6GhoqKjo6SkpaWmpqenqKip
oqqqq6usrK2trq6vr7CusbGyDqF8qw==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {96, "10-9-8-5-5-5-5-4-3-3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2#7-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3#7-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4#4-4#6-3#7-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4#7-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4#7-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4#4-4#6-2#7-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4#7-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2#7-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3#7-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4#7-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3#7-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3#13-1#4-1#6-4#7-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3#4-3#6-4#7-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3#7-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3#7-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2#4-2#6-3#7-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3#7-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#12-2#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2#4-2#6-4#7-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2#7-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#12-1#13-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#12-1#13-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#12-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#12-4#13-1#4-1#6-2#7-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2#13-1#4-1#6-4#7-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4#4-1#6-2#7-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#12-2#13-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#12-4#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#12-1#13-4#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#12-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#12-4#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1#13-3#4-3#6-2#7-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#12-4#13-3#4-1#6-2#7-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#12-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#12-2#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#12-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#12-1#13-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
BTkzwwA=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{1, 61}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{1, 120}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{2, 32}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{4, 14}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{15, 23}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{27, 30}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{33, 43}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{44, 52}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{56, 59}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{61, 91}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{63, 73}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{74, 82}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{86, 89}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{92, 102}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{103, 111}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{115, 118}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{120, 150}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{122, 132}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{133, 141}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{145, 148}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{151, 161}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{162, 170}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{174, 177}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09212695175138748]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09212695175138748]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[6, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[7, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[8, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[15, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[16, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[18, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[20, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[22, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[23, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[25, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[27, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[28, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[31, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[34, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[36, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[38, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[42, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[43, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[45, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[47, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[48, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[51, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[52, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[54, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[55, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[58, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[59, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[60, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[61, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[63, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[64, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[65, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[67, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[68, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[70, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[72, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[74, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[75, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[77, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[78, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[79, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[80, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[82, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[85, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[86, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[87, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[88, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[89, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[91, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[92, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[93, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[94, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[95, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[96, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[97, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[99, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[100, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[101, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[102, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[103, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[104, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[105, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[106, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[107, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[108, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[109, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[110, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[111, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[112, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[113, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[114, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[116, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[117, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[119, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[120, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[122, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[123, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[124, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[125, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[126, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[127, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[128, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[129, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[130, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[132, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[133, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[134, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[136, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[137, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[138, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[139, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[140, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[141, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[142, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[143, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[144, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[145, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[146, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[147, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[148, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[149, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[151, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[152, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[153, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[154, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[155, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[156, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[157, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[158, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[159, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[160, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[161, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[163, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[164, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[166, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[167, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[168, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[169, 0.09212695175138748]}, 
           {RGBColor[0, 0, 1], DiskBox[170, 0.09212695175138748]}, 
           {RGBColor[0, 1, 0], DiskBox[171, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[172, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[173, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[174, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[175, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[176, 0.09212695175138748]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09212695175138748]}, 
           {RGBColor[1, 0, 0], DiskBox[178, 0.09212695175138748]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"96", ",", "\"10-9-8-5-5-5-5-4-3-3-3-3-3\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#9-4", 
         "1-1#2-2#3-3#9-4#5-1", "1-1#2-2#3-3#9-4#5-1#8-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3", "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3#13-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3#13-4#4-4", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3#13-4#4-4#6-2", 
         "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3#13-4#4-4#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4", "1-1#2-2#3-3#9-4#5-4#8-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1", "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3#13-3", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3#13-3#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3#13-3#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3#13-3#4-1#6-2#7-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3", "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1#4-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#9-3", "1-1#2-2#3-4#9-3#5-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3", "1-1#2-2#3-4#9-3#5-1#8-3#10-4", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4#13-3", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4#13-3#4-3", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4#13-3#4-3#6-2", 
         "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4#13-3#4-3#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3", "1-1#2-2#3-4#9-3#5-3#8-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1", "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4#13-4", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4#13-4#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4#13-4#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4#13-4#4-1#6-2#7-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4", "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1#4-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1#4-1#6-2#7-1", 
         "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1#4-1#6-2#7-2", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#9-4", "1-1#2-3#3-2#9-4#5-1", 
         "1-1#2-3#3-2#9-4#5-1#8-4", "1-1#2-3#3-2#9-4#5-1#8-4#10-2", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2#13-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2#13-4#4-4", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2#13-4#4-4#6-3", 
         "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2#13-4#4-4#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4", "1-1#2-3#3-2#9-4#5-4#8-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1", "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2#13-2", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2#13-2#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2#13-2#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2#13-2#4-1#6-3#7-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2", "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1#4-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#9-2", "1-1#2-3#3-4#9-2#5-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2", "1-1#2-3#3-4#9-2#5-1#8-2#10-4", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4#13-2", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4#13-2#4-2", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4#13-2#4-2#6-3", 
         "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4#13-2#4-2#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2", "1-1#2-3#3-4#9-2#5-2#8-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1", "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4#13-4", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4#13-4#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4#13-4#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4#13-4#4-1#6-3#7-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4", "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1#4-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1#4-1#6-3#7-1", 
         "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1#4-1#6-3#7-3", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#9-3", "1-1#2-4#3-2#9-3#5-1", 
         "1-1#2-4#3-2#9-3#5-1#8-3", "1-1#2-4#3-2#9-3#5-1#8-3#10-2", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2#13-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2#13-3#4-3", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2#13-3#4-3#6-4", 
         "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2#13-3#4-3#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3", "1-1#2-4#3-2#9-3#5-3#8-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1", "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2#13-2", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2#13-2#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2#13-2#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2#13-2#4-1#6-4#7-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2", "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1#4-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#9-2", "1-1#2-4#3-3#9-2#5-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2", "1-1#2-4#3-3#9-2#5-1#8-2#10-3", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3#13-2", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3#13-2#4-2", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3#13-2#4-2#6-4", 
         "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3#13-2#4-2#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2", "1-1#2-4#3-3#9-2#5-2#8-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1", "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3#13-3", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3#13-3#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3#13-3#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3#13-3#4-1#6-4#7-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3", "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1#4-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1#4-1#6-4#7-1", 
         "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1#4-1#6-4#7-4"}, {
        Null, CompressedData["
1:eJwBZwGY/iFib1JiAgAAAKsAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNBA4ODw8QEBEREhITExQUFRUWDxcXGBgZGRoaGxscHB0cHgIfHyAgISEi
IiMjJCQlJSYmJycoKCkgKiorKywsLS0uLi8vMDAxMTIrMzM0NDU1NjY3Nzg4
OTg6ATs7PDw9PT4+Pz9AQEFBQkJDQ0RERUVGPUdHSEhJSUpKS0tMTE1NTk5P
SFBQUVFSUlNTVFRVVVZVVztYWFlZWlpbW1xcXV1eXl9fYGBhYWJZY2NkZGVl
ZmZnZ2hoaWlqamtkbGxtbW5ub29wcHFxcnFzAXR0dXV2dnd3eHh5eXp6e3t8
fH19fn5/doCAgYGCgoODhISFhYaGh4eIgYmJioqLi4yMjY2Ojo+OkHSRkZKS
k5OUlJWVlpaXl5iYmZmampuSnJydnZ6en5+goKGhoqKjo6SdpaWmpqenqKip
qaqqq6qsW6J0gA==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {96, "9-9-9-6-5-5-4-4-3-3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4#13-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3#13-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-1#8-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3#13-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2#13-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2#13-4" -> RGBColor[1, 1, 0],
            "1-1#2-4#3-2#9-3#5-3#8-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2" -> RGBColor[0, 1, 0], "1-1#2-2#3-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4#13-3#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4#13-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2#13-4#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3#13-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3#13-3" -> RGBColor[0, 0, 1],
            "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2#13-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3#13-3#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-1#8-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4#13-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#9-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-1#11-4#12-3#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3#13-3#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2#12-4#13-1" -> RGBColor[1, 0, 0],
            "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4#13-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2#13-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-1#8-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2#13-3#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1#11-2#12-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3#13-2#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-1#8-3#10-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3#13-4#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#8-1#10-3#11-2#12-3#13-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3#13-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4#12-3#13-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-2#11-4#12-2#13-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-2#9-4#5-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#9-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-1#8-4" -> RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4#13-4" -> RGBColor[1, 1, 0],
            "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-2#11-3#12-2#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4#13-2#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2#12-4#13-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#8-1#10-1#11-3#12-2#13-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#9-2#5-1#8-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-1#8-3#10-2#11-1#12-2#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-4#11-3#12-4#13-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#9-2#5-2#8-1#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#8-1#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1#12-3#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3#5-3#8-1#10-1#11-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-1#8-2#10-4#11-1#12-4#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-1#8-2#10-3#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-1#8-4#10-2#11-1#12-2#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#9-4#5-1#8-4#10-3#11-1#12-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#8-1#10-1#11-4#12-2#13-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#8-1#10-1#11-2" -> 
           RGBColor[0, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
MR/LybfvyccO8olxvIp8ZL7+H79ClvI=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{1, 59}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{1, 116}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{2, 31}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{4, 14}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{15, 23}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{28, 30}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{32, 42}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{43, 51}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{56, 58}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{59, 88}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{61, 71}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{72, 80}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{85, 87}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{89, 99}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{100, 108}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{113, 115}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{116, 145}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{118, 128}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{129, 137}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{142, 144}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{146, 156}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{157, 165}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09163674098742003]}, 
           {Arrowheads[0.], ArrowBox[{170, 172}, 0.09163674098742003]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[6, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[7, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[8, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[9, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[11, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[13, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[15, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[16, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[18, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[19, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[23, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[28, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[29, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[31, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[33, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[34, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[37, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[38, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[42, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[43, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[45, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[46, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[47, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[48, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[51, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[53, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[54, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[55, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[58, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[61, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[62, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[63, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[65, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[68, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[69, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[70, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[71, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[72, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[73, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[75, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[76, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[77, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[79, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[80, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[81, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[82, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[83, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[85, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[86, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[87, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[88, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[89, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[91, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[92, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[93, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[94, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[95, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[96, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[97, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[98, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[99, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[100, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[101, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[102, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[103, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[104, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[105, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[106, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[107, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[108, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[109, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[110, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[111, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[112, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[113, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[114, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[115, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[116, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[119, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[120, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[122, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[123, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[124, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[125, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[126, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[127, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[128, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[129, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[130, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[132, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[133, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[134, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[135, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[136, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[137, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[138, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[139, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[140, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[141, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[142, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[143, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[144, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[145, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[146, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[147, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[148, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[149, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[150, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[151, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[152, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[153, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[154, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[155, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[156, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[157, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[158, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[159, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[160, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[161, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[163, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[164, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09163674098742003]}, 
           {RGBColor[0, 1, 0], DiskBox[166, 0.09163674098742003]}, 
           {RGBColor[0, 0, 1], DiskBox[167, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[168, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[169, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[170, 0.09163674098742003]}, 
           {RGBColor[1, 0, 0], DiskBox[171, 0.09163674098742003]}, 
           {RGBColor[1, 1, 0], DiskBox[172, 0.09163674098742003]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"96", ",", "\"9-9-9-6-5-5-4-4-3-3-3-3-3\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#9-4", 
         "1-1#2-2#3-3#9-4#5-4", "1-1#2-2#3-3#9-4#5-4#7-1", 
         "1-1#2-2#3-3#9-4#5-4#7-1#8-1", "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3", 
         "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4", 
         "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4#13-3", 
         "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4#13-3#4-1", 
         "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4#13-3#4-1#6-2", 
         "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4#13-3#4-1#6-2#11-2", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#9-3", "1-1#2-2#3-4#9-3#5-3", 
         "1-1#2-2#3-4#9-3#5-3#7-1", "1-1#2-2#3-4#9-3#5-3#7-1#8-1", 
         "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4", 
         "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3", 
         "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3#13-4", 
         "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3#13-4#4-1", 
         "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3#13-4#4-1#6-2", 
         "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3#13-4#4-1#6-2#11-2", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#9-4", "1-1#2-3#3-2#9-4#5-4", 
         "1-1#2-3#3-2#9-4#5-4#7-1", "1-1#2-3#3-2#9-4#5-4#7-1#8-1", 
         "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2", 
         "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4", 
         "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4#13-2", 
         "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4#13-2#4-1", 
         "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4#13-2#4-1#6-3", 
         "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4#13-2#4-1#6-3#11-3", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#9-2", "1-1#2-3#3-4#9-2#5-2", 
         "1-1#2-3#3-4#9-2#5-2#7-1", "1-1#2-3#3-4#9-2#5-2#7-1#8-1", 
         "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4", 
         "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2", 
         "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2#13-4", 
         "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2#13-4#4-1", 
         "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2#13-4#4-1#6-3", 
         "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2#13-4#4-1#6-3#11-3", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#9-3", "1-1#2-4#3-2#9-3#5-3", 
         "1-1#2-4#3-2#9-3#5-3#7-1", "1-1#2-4#3-2#9-3#5-3#7-1#8-1", 
         "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2", 
         "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3", 
         "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3#13-2", 
         "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3#13-2#4-1", 
         "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3#13-2#4-1#6-4", 
         "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3#13-2#4-1#6-4#11-4", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#9-2", "1-1#2-4#3-3#9-2#5-2", 
         "1-1#2-4#3-3#9-2#5-2#7-1", "1-1#2-4#3-3#9-2#5-2#7-1#8-1", 
         "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3", 
         "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2", 
         "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2#13-3", 
         "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2#13-3#4-1", 
         "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2#13-3#4-1#6-4", 
         "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2#13-3#4-1#6-4#11-4"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
         9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {2, 14}, {14, 15}, {15, 
         16}, {16, 17}, {17, 18}, {18, 19}, {19, 20}, {20, 21}, {21, 22}, {22,
          23}, {23, 24}, {1, 25}, {25, 26}, {26, 27}, {27, 28}, {28, 29}, {29,
          30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}, {34, 35}, {35, 36}, {
         25, 37}, {37, 38}, {38, 39}, {39, 40}, {40, 41}, {41, 42}, {42, 
         43}, {43, 44}, {44, 45}, {45, 46}, {46, 47}, {1, 48}, {48, 49}, {49, 
         50}, {50, 51}, {51, 52}, {52, 53}, {53, 54}, {54, 55}, {55, 56}, {56,
          57}, {57, 58}, {58, 59}, {48, 60}, {60, 61}, {61, 62}, {62, 63}, {
         63, 64}, {64, 65}, {65, 66}, {66, 67}, {67, 68}, {68, 69}, {69, 
         70}}}, {GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {24, "10-9-9-6-6-4-4-3-3-3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#7-1#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2#13-3#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4#5-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4#13-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2#13-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3" -> RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#7-1#8-1" -> RGBColor[1, 0, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2#13-3#4-1#6-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#9-2#5-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3#13-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4#13-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2#13-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#7-1#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4#13-3#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#9-2#5-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3#13-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#9-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3#13-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#9-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#9-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#9-3#5-3#7-1#8-1#10-2#12-3#13-2#4-1#6-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2#13-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4#13-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4#13-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#9-4#5-4#7-1#8-1#10-3#12-4#13-3#4-1#6-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], "1-1#2-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3#13-4#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#9-3#5-3#7-1#8-1#10-4#12-3#13-4#4-1#6-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#9-2#5-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2#13-4#4-1#6-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#9-2#5-2#7-1#8-1#10-4#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#9-3#5-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#9-4#5-4#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#9-2#5-2#7-1#8-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#9-4#5-4#7-1#8-1#10-2#12-4#13-2#4-1#6-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#9-3#5-3#7-1#8-1" -> 
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxVk11Ik3EUxoeEXSQ5cmva1N6tjTm/9s6Z3jj2BGZhtdxWc8kYVg7MPmal
OdtFC8QbJcyQpllRIBReJBkVQRCUIl1EoGAf9mHZVWFdSBi5Pvz/z/uHDcZ4
ePee85zfOY/hUMQbTlOpVDX/v6u/2sMfW263W7Dvwy2s95jwYsTS53xmRvvn
3JHaXWbMNCzfkM+b8enApp9fxi0Y93c5l7pNKNBNv/SErej3ql8/6N2C1pme
0ccbi3DSPdwW6zfi/sXqbutUMepqC9SuhAFJd7JxoLMUcs290bRrEozpb6/G
tTLyu+IXendsxmRTZU/Fooy5WGIiy5eHI08vRb9N2nHl9NjKUEiPDOOP8M3r
ZWg4OuUwtuRgLL7bF4g6kM386+Bj/suFn/00j9Jf0bnUT9GDVN9PWkv1FM3r
ZQnN388UWsP+vxb1pCX2/K8rVX8XWkWfQEo/CzbMPukYCBoxTbw5Dwl3ibdq
7yq/fPTRfKcYbz1aifcC248ObpqX99OghHg/Z/XUyKb5o+z9dXhPvPk8azBM
PPg+f7uCxDvO9FdXJvHhUyxX+dlzq/B7JlKVCDUV4o+b+73M6hVRPT0edpgO
zgaKMU9+X7H+JXR/Gvw6l1FYt6eU6qmRw/zacIL85lWf7VyQZHjJL59PRjP5
de5cfCfp7Wgkv5yHXXAPSoPbtRYr2ui+E+RPuf83KX6UfdvovkywUT9fyn3Z
heb7KBOa349DaL7PcqH5vrcKvRQ6ln48ViE0v49KmteEeuI9T3mMEm8lj0M0
T4Ty+Ih4K3mco/lWKI9J4m1IyaMNE5RHiXg3Ux5lml/J4zbifYfy6CEeXsrj
P9AjvcY=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{1, 25}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{1, 48}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{2, 14}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{25, 37}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{48, 60}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09617813109650533]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[5, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[6, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[8, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[10, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[11, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[13, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[15, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[16, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[17, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[18, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[20, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[21, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[22, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[23, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[24, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[26, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[27, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[29, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[30, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[31, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[33, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[34, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[37, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[38, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[39, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[40, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[41, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[42, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[43, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[44, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[45, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[48, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[52, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[53, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[55, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[58, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[59, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[60, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[64, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[67, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.09617813109650533]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"24", ",", "\"10-9-9-6-6-4-4-3-3-3-3-3-3\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#8-3", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-1", "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-2", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-2#6-4", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-2#6-4#11-2", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-4", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-4#6-2", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-4#6-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-4", "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4#13-1", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4#13-1#4-4", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4#13-1#4-4#6-2", 
         "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4#13-1#4-4#6-2#11-2", 
         "1-1#2-2#3-3#7-4#5-1#8-4", "1-1#2-2#3-3#7-4#5-1#8-4#9-1", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3#13-4", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3#13-4#4-4", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3#13-4#4-4#6-2", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3#13-4#4-4#6-2#11-2", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#8-3", "1-1#2-2#3-4#7-3#5-1#8-3#9-1", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4#13-3", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4#13-3#4-3", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4#13-3#4-3#6-2", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4#13-3#4-3#6-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#8-4", "1-1#2-2#3-4#7-3#5-1#8-4#9-1", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-2", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-2#6-3", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-2#6-3#11-2", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-3", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-3#6-2", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-3#6-2#11-2", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-3", "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3#13-1", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3#13-1#4-3", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3#13-1#4-3#6-2", 
         "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3#13-1#4-3#6-2#11-2", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#8-2", "1-1#2-3#3-2#7-4#5-1#8-2#9-1", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-3", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-3#6-4", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-3#6-4#11-3", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-4", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-4#6-3", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-4#6-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-4", "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4#13-1", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4#13-1#4-4", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4#13-1#4-4#6-3", 
         "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4#13-1#4-4#6-3#11-3", 
         "1-1#2-3#3-2#7-4#5-1#8-4", "1-1#2-3#3-2#7-4#5-1#8-4#9-1", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2#13-4", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2#13-4#4-4", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2#13-4#4-4#6-3", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2#13-4#4-4#6-3#11-3", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#8-2", "1-1#2-3#3-4#7-2#5-1#8-2#9-1", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4#13-2", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4#13-2#4-2", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4#13-2#4-2#6-3", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4#13-2#4-2#6-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#8-4", "1-1#2-3#3-4#7-2#5-1#8-4#9-1", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-2", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-2#6-3", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-2#6-3#11-3", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-3", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-3#6-2", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-3#6-2#11-3", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-2", "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2#13-1", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2#13-1#4-2", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2#13-1#4-2#6-3", 
         "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2#13-1#4-2#6-3#11-3", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#8-2", "1-1#2-4#3-2#7-3#5-1#8-2#9-1", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-3", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-3#6-4", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-3#6-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-4", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-4#6-3", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-4#6-3#11-4", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-3", "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3#13-1", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3#13-1#4-3", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3#13-1#4-3#6-4", 
         "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3#13-1#4-3#6-4#11-4", 
         "1-1#2-4#3-2#7-3#5-1#8-3", "1-1#2-4#3-2#7-3#5-1#8-3#9-1", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2#13-3", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2#13-3#4-3", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2#13-3#4-3#6-4", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2#13-3#4-3#6-4#11-4", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#8-2", "1-1#2-4#3-3#7-2#5-1#8-2#9-1", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3#13-2", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3#13-2#4-2", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3#13-2#4-2#6-4", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3#13-2#4-2#6-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#8-3", "1-1#2-4#3-3#7-2#5-1#8-3#9-1", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-2", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-2#6-4", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-2#6-4#11-4", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-4", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-4#6-2", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-4#6-2#11-4", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-2", "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2#13-1", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2#13-1#4-2", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2#13-1#4-2#6-4", 
         "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2#13-1#4-2#6-4#11-4"}, {
        Null, CompressedData["
1:eJwBcwGM/iFib1JiAgAAALEAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNCg4ODw8QBhEREhITExQUFRUWFhcFGBgZGRoaGxscHB0dHh4fAiAgISEi
IiMjJCQlJSYmJycoKCkpKiIrKywsLS0uLi8vMDAxMTIvMzM0NDUrNjY3Nzg4
OTk6Ojs7PAE9PT4+Pz9AQEFBQkJDQ0RERUVGRkdHSEVJSUpKS0FMTE1NTk5P
T1BQUVFSQFNTVFRVVVZWV1dYWFlZWj1bW1xcXV1eXl9fYGBhYWJiY2NkZGVd
ZmZnZ2hoaWlqamtrbGxtam5ub29wZnFxcnJzc3R0dXV2dncBeHh5eXp6e3t8
fH19fn5/f4CAgYGCgoOAhISFhYZ8h4eIiImJioqLi4yMjXuOjo+PkJCRkZKS
k5OUlJV4lpaXl5iYmZmampubnJydnZ6en5+gmKGhoqKjo6SkpaWmpqenqKWp
qaqqq6GsrK2trq6vr7CwsbGy7Hh8ew==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {96, "9-9-9-6-5-5-5-3-3-3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4#13-3#4-3#6-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3#13-4#4-4#6-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2#13-1#4-2#6-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2#13-4#4-4#6-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3#13-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], "1-1#2-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-3#6-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3#13-1#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4#13-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-4#6-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3#13-1#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2#13-1#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3#13-2#4-2#6-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4#13-2#4-2#6-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2#13-1#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-3#6-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2#13-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4#13-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-2#6-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3#13-1#4-3#6-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4#13-1#4-4#6-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-4#6-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3#13-1#4-3#6-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-4#6-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2#12-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-2#6-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3#12-2#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-3#6-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#7-3#5-1#8-3#9-1#10-4#12-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#8-2#9-1#10-4#12-4#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3#13-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#8-2#9-3#10-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-2#6-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2#13-3#4-3#6-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2#13-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-1#10-2#12-4#13-4#4-3#6-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#8-4#9-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4#13-1#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#8-2#9-4#10-2#12-4#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4#13-1#4-4#6-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1#8-4#9-1#10-3#12-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2#13-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#5-1#8-2#9-1#10-2#12-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#5-1#8-3#9-2#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-1#10-4#12-3#13-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-2#6-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#5-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-4#6-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2#13-1#4-2#6-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-3#9-1#10-3#12-4#13-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-4#9-1#10-4#12-2#13-2#4-3#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2#12-2#13-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#8-4#9-2#10-4#12-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#8-3#9-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4#12-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-4#9-3#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#8-3#9-1#10-3#12-2#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-2#9-1#10-3#12-3#13-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-3#9-4#10-3#12-4#13-1#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#5-1#8-2" -> 
           RGBColor[0, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
2kCOtOTqdyQowMw=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{1, 61}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{1, 120}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{2, 32}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{5, 24}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{6, 17}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{10, 14}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{34, 43}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{43, 54}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{47, 51}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{61, 91}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{64, 83}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{65, 76}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{69, 73}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{87, 88}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{93, 102}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{102, 113}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{106, 110}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{120, 150}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{123, 142}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{124, 135}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{128, 132}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{152, 161}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{161, 172}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{164, 165}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{165, 169}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09182432358888543]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09182432358888543]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[8, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[9, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[13, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[18, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[21, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[23, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[25, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[26, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[27, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[29, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[31, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[34, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[37, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[38, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[40, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[41, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[42, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[49, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[51, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[52, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[53, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[54, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[55, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[56, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[59, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[61, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[63, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[64, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[65, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[67, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[68, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[70, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[71, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[74, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[75, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[77, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[78, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[79, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[80, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[81, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[82, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[83, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[85, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[86, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[87, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[88, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[89, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[90, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[91, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[92, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[93, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[94, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[95, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[96, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[97, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[98, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[99, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[100, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[101, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[102, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[103, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[104, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[105, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[106, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[108, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[109, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[110, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[112, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[113, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[114, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[115, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[116, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[117, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[118, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[119, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[120, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[121, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[122, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[123, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[124, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[125, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[126, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[127, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[128, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[129, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[130, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[131, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[132, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[133, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[134, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[135, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[136, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[137, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[138, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[139, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[140, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[141, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[142, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[143, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[144, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[145, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[146, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[147, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[148, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[149, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[150, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[151, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[152, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[153, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[154, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[155, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[156, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[157, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[158, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[159, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[160, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[161, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[163, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[164, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[165, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[166, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[167, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[168, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[169, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[170, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[171, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[172, 0.09182432358888543]}, 
           {RGBColor[0, 0, 1], DiskBox[173, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[174, 0.09182432358888543]}, 
           {RGBColor[1, 0, 0], DiskBox[175, 0.09182432358888543]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[177, 0.09182432358888543]}, 
           {RGBColor[1, 1, 0], DiskBox[178, 0.09182432358888543]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"96", ",", "\"9-9-9-6-5-5-5-3-3-3-3-3-3\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#5-1", "1-1#2-2#3-3#7-4#5-1#8-4", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-3", "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3#4-4", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3#4-4#6-2", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3#4-4#6-2#10-4", 
         "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3#4-4#6-2#10-4#11-2", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#5-1", 
         "1-1#2-2#3-4#7-3#5-1#8-3", "1-1#2-2#3-4#7-3#5-1#8-3#9-4", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4#4-3", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4#4-3#6-2", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4#4-3#6-2#10-3", 
         "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4#4-3#6-2#10-3#11-2", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#5-1", 
         "1-1#2-3#3-2#7-4#5-1#8-4", "1-1#2-3#3-2#7-4#5-1#8-4#9-2", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2#4-4", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2#4-4#6-3", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2#4-4#6-3#10-4", 
         "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2#4-4#6-3#10-4#11-3", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#5-1", 
         "1-1#2-3#3-4#7-2#5-1#8-2", "1-1#2-3#3-4#7-2#5-1#8-2#9-4", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4#4-2", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4#4-2#6-3", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4#4-2#6-3#10-2", 
         "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4#4-2#6-3#10-2#11-3", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#5-1", 
         "1-1#2-4#3-2#7-3#5-1#8-3", "1-1#2-4#3-2#7-3#5-1#8-3#9-2", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2#4-3", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2#4-3#6-4", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2#4-3#6-4#10-3", 
         "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2#4-3#6-4#10-3#11-4", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#5-1", 
         "1-1#2-4#3-3#7-2#5-1#8-2", "1-1#2-4#3-3#7-2#5-1#8-2#9-3", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3#4-2", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3#4-2#6-4", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3#4-2#6-4#10-2", 
         "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3#4-2#6-4#10-2#11-4"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
         9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {2, 14}, {14, 15}, {15, 
         16}, {16, 17}, {17, 18}, {18, 19}, {19, 20}, {20, 21}, {21, 22}, {22,
          23}, {23, 24}, {1, 25}, {25, 26}, {26, 27}, {27, 28}, {28, 29}, {29,
          30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}, {34, 35}, {35, 36}, {
         25, 37}, {37, 38}, {38, 39}, {39, 40}, {40, 41}, {41, 42}, {42, 
         43}, {43, 44}, {44, 45}, {45, 46}, {46, 47}, {1, 48}, {48, 49}, {49, 
         50}, {50, 51}, {51, 52}, {52, 53}, {53, 54}, {54, 55}, {55, 56}, {56,
          57}, {57, 58}, {58, 59}, {48, 60}, {60, 61}, {61, 62}, {62, 63}, {
         63, 64}, {64, 65}, {65, 66}, {66, 67}, {67, 68}, {68, 69}, {69, 
         70}}}, {GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {24, "10-10-8-6-6-4-4-3-3-3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1" -> RGBColor[1, 0, 0], "1-1#2-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4#4-2#6-3#10-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#5-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2#4-3#6-4#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2#4-4#6-3#10-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#5-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2#4-3#6-4#10-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3#4-4#6-2#10-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4#4-2#6-3#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#5-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2#4-4#6-3#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4#4-3#6-2#10-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#5-1" -> RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4#4-3#6-2#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3#4-4#6-2#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1#13-3#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#5-1#8-4#9-3#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1#13-4#4-3#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3#4-2#6-4#10-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1#8-4#9-2#12-1#13-2#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-4#12-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#5-1#8-3#9-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#5-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#5-1#8-3#9-2#12-1#13-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], "1-1#2-4#3-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3#4-2#6-4#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#5-1#8-2#9-3#12-1#13-3#4-2#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#5-1#8-2#9-4#12-1#13-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#5-1#8-4#9-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxVk11Ik3EUxoeEXSQ5cmva1N6tjTm/9s6Z3jj2BGZhtdxWc8kYVg7MPmal
OdtFC8QbJcyQpllRIBReJBkVQRCUIl1EoGAf9mHZVWFdSBi5Pvz/z/uHDcZ4
ePee85zfOY/hUMQbTlOpVDX/v6u/2sMfW263W7Dvwy2s95jwYsTS53xmRvvn
3JHaXWbMNCzfkM+b8enApp9fxi0Y93c5l7pNKNBNv/SErej3ql8/6N2C1pme
0ccbi3DSPdwW6zfi/sXqbutUMepqC9SuhAFJd7JxoLMUcs290bRrEozpb6/G
tTLyu+IXendsxmRTZU/Fooy5WGIiy5eHI08vRb9N2nHl9NjKUEiPDOOP8M3r
ZWg4OuUwtuRgLL7bF4g6kM386+Bj/suFn/00j9Jf0bnUT9GDVN9PWkv1FM3r
ZQnN388UWsP+vxb1pCX2/K8rVX8XWkWfQEo/CzbMPukYCBoxTbw5Dwl3ibdq
7yq/fPTRfKcYbz1aifcC248ObpqX99OghHg/Z/XUyKb5o+z9dXhPvPk8azBM
PPg+f7uCxDvO9FdXJvHhUyxX+dlzq/B7JlKVCDUV4o+b+73M6hVRPT0edpgO
zgaKMU9+X7H+JXR/Gvw6l1FYt6eU6qmRw/zacIL85lWf7VyQZHjJL59PRjP5
de5cfCfp7Wgkv5yHXXAPSoPbtRYr2ui+E+RPuf83KX6UfdvovkywUT9fyn3Z
heb7KBOa349DaL7PcqH5vrcKvRQ6ln48ViE0v49KmteEeuI9T3mMEm8lj0M0
T4Ty+Ih4K3mco/lWKI9J4m1IyaMNE5RHiXg3Ux5lml/J4zbifYfy6CEeXsrj
P9AjvcY=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{1, 25}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{1, 48}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{2, 14}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{25, 37}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{48, 60}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09617813109650533]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[6, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[7, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[8, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[9, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[13, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[15, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[16, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[17, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[21, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[23, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[24, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[26, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[27, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[28, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[29, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[31, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[32, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[33, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[34, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[37, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[38, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[39, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[41, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[42, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[44, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[45, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[46, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[48, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[51, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[52, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[53, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[54, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[55, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[56, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[57, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[59, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[60, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[62, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[63, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[64, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[65, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[66, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[67, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[68, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[69, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.09617813109650533]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"24", ",", "\"10-10-8-6-6-4-4-3-3-3-3-3-3\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#7-4", 
         "1-1#2-2#3-3#7-4#6-1", "1-1#2-2#3-3#7-4#6-1#8-3", 
         "1-1#2-2#3-3#7-4#6-1#8-3#9-4", "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4", 
         "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1", 
         "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1#4-4", 
         "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1#4-4#5-2", 
         "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1#4-4#5-2#10-1", 
         "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1#4-4#5-2#10-1#12-4", 
         "1-1#2-2#3-3#7-4#6-4", "1-1#2-2#3-3#7-4#6-4#8-1", 
         "1-1#2-2#3-3#7-4#6-4#8-1#9-1", "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3", 
         "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3", 
         "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3#4-1", 
         "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3#4-1#5-2", 
         "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3#4-1#5-2#10-1", 
         "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3#4-1#5-2#10-1#12-3", 
         "1-1#2-2#3-3#7-4#6-4#8-3", "1-1#2-2#3-3#7-4#6-4#8-3#9-1", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-1", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-1#5-2", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-1#5-2#10-1", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-1#5-2#10-1#12-1", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-2", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-2#5-1", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-2#5-1#10-2", 
         "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-2#5-1#10-2#12-2", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#7-3", "1-1#2-2#3-4#7-3#6-1", 
         "1-1#2-2#3-4#7-3#6-1#8-4", "1-1#2-2#3-4#7-3#6-1#8-4#9-3", 
         "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3", 
         "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1", 
         "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1#4-3", 
         "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1#4-3#5-2", 
         "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1#4-3#5-2#10-1", 
         "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1#4-3#5-2#10-1#12-3", 
         "1-1#2-2#3-4#7-3#6-3", "1-1#2-2#3-4#7-3#6-3#8-1", 
         "1-1#2-2#3-4#7-3#6-3#8-1#9-1", "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4", 
         "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4", 
         "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4#4-1", 
         "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4#4-1#5-2", 
         "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4#4-1#5-2#10-1", 
         "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4#4-1#5-2#10-1#12-4", 
         "1-1#2-2#3-4#7-3#6-3#8-4", "1-1#2-2#3-4#7-3#6-3#8-4#9-1", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-1", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-1#5-2", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-1#5-2#10-1", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-1#5-2#10-1#12-1", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-2", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-2#5-1", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-2#5-1#10-2", 
         "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-2#5-1#10-2#12-2", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#7-4", "1-1#2-3#3-2#7-4#6-1", 
         "1-1#2-3#3-2#7-4#6-1#8-2", "1-1#2-3#3-2#7-4#6-1#8-2#9-4", 
         "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4", 
         "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1", 
         "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1#4-4", 
         "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1#4-4#5-3", 
         "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1#4-4#5-3#10-1", 
         "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1#4-4#5-3#10-1#12-4", 
         "1-1#2-3#3-2#7-4#6-4", "1-1#2-3#3-2#7-4#6-4#8-1", 
         "1-1#2-3#3-2#7-4#6-4#8-1#9-1", "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2", 
         "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2", 
         "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2#4-1", 
         "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2#4-1#5-3", 
         "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2#4-1#5-3#10-1", 
         "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2#4-1#5-3#10-1#12-2", 
         "1-1#2-3#3-2#7-4#6-4#8-2", "1-1#2-3#3-2#7-4#6-4#8-2#9-1", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-1", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-1#5-3", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-1#5-3#10-1", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-1#5-3#10-1#12-1", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-3", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-3#5-1", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-3#5-1#10-3", 
         "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-3#5-1#10-3#12-3", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#7-2", "1-1#2-3#3-4#7-2#6-1", 
         "1-1#2-3#3-4#7-2#6-1#8-4", "1-1#2-3#3-4#7-2#6-1#8-4#9-2", 
         "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2", 
         "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1", 
         "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1#4-2", 
         "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1#4-2#5-3", 
         "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1#4-2#5-3#10-1", 
         "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1#4-2#5-3#10-1#12-2", 
         "1-1#2-3#3-4#7-2#6-2", "1-1#2-3#3-4#7-2#6-2#8-1", 
         "1-1#2-3#3-4#7-2#6-2#8-1#9-1", "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4", 
         "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4", 
         "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4#4-1", 
         "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4#4-1#5-3", 
         "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4#4-1#5-3#10-1", 
         "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4#4-1#5-3#10-1#12-4", 
         "1-1#2-3#3-4#7-2#6-2#8-4", "1-1#2-3#3-4#7-2#6-2#8-4#9-1", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-1", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-1#5-3", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-1#5-3#10-1", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-1#5-3#10-1#12-1", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-3", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-3#5-1", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-3#5-1#10-3", 
         "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-3#5-1#10-3#12-3", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#7-3", "1-1#2-4#3-2#7-3#6-1", 
         "1-1#2-4#3-2#7-3#6-1#8-2", "1-1#2-4#3-2#7-3#6-1#8-2#9-3", 
         "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3", 
         "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1", 
         "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1#4-3", 
         "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1#4-3#5-4", 
         "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1#4-3#5-4#10-1", 
         "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1#4-3#5-4#10-1#12-3", 
         "1-1#2-4#3-2#7-3#6-3", "1-1#2-4#3-2#7-3#6-3#8-1", 
         "1-1#2-4#3-2#7-3#6-3#8-1#9-1", "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2", 
         "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2", 
         "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2#4-1", 
         "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2#4-1#5-4", 
         "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2#4-1#5-4#10-1", 
         "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2#4-1#5-4#10-1#12-2", 
         "1-1#2-4#3-2#7-3#6-3#8-2", "1-1#2-4#3-2#7-3#6-3#8-2#9-1", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-1", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-1#5-4", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-1#5-4#10-1", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-1#5-4#10-1#12-1", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-4", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-4#5-1", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-4#5-1#10-4", 
         "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-4#5-1#10-4#12-4", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#7-2", "1-1#2-4#3-3#7-2#6-1", 
         "1-1#2-4#3-3#7-2#6-1#8-3", "1-1#2-4#3-3#7-2#6-1#8-3#9-2", 
         "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2", 
         "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1", 
         "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1#4-2", 
         "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1#4-2#5-4", 
         "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1#4-2#5-4#10-1", 
         "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1#4-2#5-4#10-1#12-2", 
         "1-1#2-4#3-3#7-2#6-2", "1-1#2-4#3-3#7-2#6-2#8-1", 
         "1-1#2-4#3-3#7-2#6-2#8-1#9-1", "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3", 
         "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3", 
         "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3#4-1", 
         "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3#4-1#5-4", 
         "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3#4-1#5-4#10-1", 
         "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3#4-1#5-4#10-1#12-3", 
         "1-1#2-4#3-3#7-2#6-2#8-3", "1-1#2-4#3-3#7-2#6-2#8-3#9-1", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-1", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-1#5-4", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-1#5-4#10-1", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-1#5-4#10-1#12-1", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-4", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-4#5-1", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-4#5-1#10-4", 
         "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-4#5-1#10-4#12-4"}, {
        Null, CompressedData["
1:eJwBlwFo/iFib1JiAgAAAMMAAAACAAAAAQICAwMEBAUFBgYHBwgICQkKCgsL
DAwNBA4ODw8QEBEREhITExQUFRUWDhcXGBgZGRoaGxscHB0dHhofHyAgISEi
AiMjJCQlJSYmJycoKCkpKiorKywsLSQuLi8vMDAxMTIyMzM0NDU1Ni43Nzg4
OTk6Ojs7PDw9PT46Pz9AQEFBQgFDQ0RERUVGRkdHSEhJSUpKS0tMTE1NTkVP
T1BQUVFSUlNTVFRVVVZWV09YWFlZWlpbW1xcXV1eXl9bYGBhYWJiY0NkZGVl
ZmZnZ2hoaWlqamtrbGxtbW5lb29wcHFxcnJzc3R0dXV2dndveHh5eXp6e3t8
fH19fn5/e4CAgYGCgoMBhISFhYaGh4eIiImJioqLi4yMjY2Ojo+GkJCRkZKS
k5OUlJWVlpaXl5iQmZmampubnJydnZ6en5+gnKGhoqKjo6SEpaWmpqenqKip
qaqqq6usrK2trq6vprCwsbGysrOztLS1tba2t7e4sLm5urq7u7y8vb2+vr+/
wLzBwcLCw8PEjbGW3A==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {96, "8-8-8-7-7-7-3-3-3-3-3-3-3"}, 
         VertexStyle -> {
          "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-4#5-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-1#5-3#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-1#5-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#6-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1#4-3#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4" -> RGBColor[1, 1, 0], "1-1#2-3#3-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-1#5-2#10-1#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#6-3#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#6-3#8-2#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2#4-1#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-1#5-3#10-1#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-1#5-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2#6-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2#4-1#5-3#10-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1#4-3#5-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1#4-2#5-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1#4-3#5-2#10-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#6-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4#4-1#5-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#6-2#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-3#5-1#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#6-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-2#5-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-4#5-1#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1#4-4#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#6-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1#4-4#5-2#10-1#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-1#5-4#10-1#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2#4-1#5-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-3#5-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#6-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-1#5-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-1#5-4#10-1#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4#4-1#5-3#10-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#6-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-1#5-3#10-1#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-2#5-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#6-1#8-3#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1#4-4#5-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#6-4#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1#4-4#5-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2#4-1#5-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-2#5-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-3#5-1#10-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-1#5-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#7-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2#4-1#5-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3#4-1#5-2#10-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#6-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4#4-1#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#6-3#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-2#5-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#6-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#6-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-1#5-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-1#5-4#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3#4-1#5-4#10-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-1#5-2#10-1#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2#4-1#5-4#10-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#6-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-2#5-1#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-4#5-1#10-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1#4-2#5-4#10-1#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-3#5-1#10-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1#4-3#5-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4#4-1#5-2#10-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3#4-1#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-3#5-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#6-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-4#5-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#6-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#6-1#8-3#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#6-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#6-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1#4-3#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#7-4#6-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1#4-2#5-3#10-1#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4#4-1#5-2#10-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1#4-4#5-3#10-1#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4#6-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#6-3#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-1#5-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-1#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4#6-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-4" -> RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1#4-2#5-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#7-3#6-3#8-1#9-1#11-4#13-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1#4-2#5-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-1#8-3#9-2#11-2#13-1#4-2#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#6-2#8-1#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#6-1#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-1#5-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-1#5-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#6-1#8-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#7-2#6-2#8-1#9-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#7-3#6-1#8-2#9-3#11-3#13-1#4-3#5-4#10-1#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#6-1#8-4#9-2#11-2#13-1#4-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#7-4#6-1#8-2#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#7-4#6-4#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3" -> RGBColor[0, 0, 1], "1-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#7-2#6-2#8-1#9-1#11-4#13-4#4-1#5-3#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#7-4#6-4#8-1#9-1#11-2#13-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3#4-1#5-4#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#6-4#8-1#9-1#11-3#13-3#4-1#5-2#10-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#7-2#6-2#8-1#9-1#11-3#13-3#4-1#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#7-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#6-1#8-2#9-4#11-4#13-1#4-4#5-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-1#5-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#7-3#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#6-3#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#6-1#8-4#9-3#11-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#7-2#6-2#8-3#9-1#11-1#13-1#4-4#5-1#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#7-4#6-4#8-2#9-1#11-1#13-1#4-3#5-1#10-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#7-3#6-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#7-4#6-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#7-4#6-4#8-3#9-1#11-1#13-1#4-2#5-1#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#7-3#6-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1#13-1#4-4#5-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#6-2#8-4#9-1#11-1#13-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#7-3#6-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#7-2#6-1#8-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#7-2#6-2#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#7-3#6-3#8-4#9-1#11-1#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#7-4#6-1" -> RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9lgtQk2cWhhHUKgJFISAk3JIYgsRAQuqqoDlFUEDAIhZtVQQsKq1SsbsC
YmmZQjcoCB1lm6JV1hVUtBa7KuBsERWUgkVEKkLLra4IDMpNLV5q103fE2aY
zD/A/C/f9zznvG5xH66INzUxMal59f3/T53H8S0dx2YRf1ZaNuRE2Erp4MIB
as+XUcwEac3dnyQki41TPG6U07IHPUO9g2J6sktrkRE3m24n6Cv3nZXSuZw3
em92KWggtSX0UrKUMu7pJ974Rkm/Z1t3P1wgJZlL+vTehd5kXRj6keilhHIa
vi36r1RF0lLd5JBLEhpJ7vG6O01N8y7UfJWcKaFVUpuLPaNqWlZvMqd4qYS+
bwoI727zoeh2v+pmcwmJP97R0Vmtoe0DKZEmjWLkf4NWrFQfU813o+z87pv6
RE8SVOze468QU987pg0brJX0ZUtm9HCqG+3fYDv9XpUXOY6kqw5dc6V/zt3n
+e/z3nTQMnViqMCVkn0PNo7lqmjRyt7TY7XOFE7FSZp4NS3ObV+5PNaJpIGn
bf/m50NBVxuflb4Q0rPg8vJzNhoK++Ny0WS9IzWFV7/7ZEBDMZWT/vHDNmeK
2RFmFWWvoG2b8nXXO4S02mVKQUvMHMoQCNNuhDjQW3WXhZGlSsq/Ury1udyO
gpI+PnJzzIv0NlXd59bZU7HOR5cRqaIXcrOX62UCyipof7TaQk0xi4KE5kMz
KP5IRqx3rZpqI3PnnS23piXfyhtfS/eh3M+av/gwYjotCR7p6yp69f8WbamS
/GJBIevdtwZGe9PM+Zp3Ngteo2GH2/ccB189Nz8fOxU+gfSGc1LRX9oOCwfM
xJQNPqzOCD8aVrkan0snVR8v+9mJPim/6CpLktOK0QOi0+mO9HthbViKxIPG
O5PzT7rZ0870hp31P3nQoYbIiSdqbGg89uYxkW42BVZ4pZRssqYdga0tiQs8
6U6w/Z2lAnN6JO+YcGnQk+SSGxf915jRdou7SpvDCuoet1ye5v9UOzTUtyY+
Yg6ZrHru9+vB+9qttx7qys2UdN7AoYhawaXrz4knWhc7kEdbWs7TVhlyC8ju
B+3TBlt3GjNwN4PMKs02HopwpwuGv7eg4ePXmrftdaccw+9Pog79Hu3iBneq
Nvz8hbZet/yUYIqcmgzPg9qKFBuHvgA5mRi+uv2Obm7NupAhp8PfBfteuvDq
/bIQbVuohIbGe8Lz5tpR8GjTjUUtYlqk3Rm37rsZlFC1KuboGjGJps0ajFpr
Rdm7O4en3nUD15OMXpTh/exFNd6/Hl6Y4Iu9aMJ5+oNjEc4zCBzX4TzDwXFT
1J/nGQmOeS6sxxzgz4GRB6dqPxVTCOaB423rH+c/cCWrrC6rgMsuFAEP90Ys
XtvbKSKzrpZznzu5kqXzsRO65w70vuG+nCl3wPy32TPtqbHPpyT2upAsyxMD
ftTYks/LlCvTChyM/LIHM8Eve8D8sge24Jc9+OJAfsX+TrGRU1PkyEOuBOR4
Hbk4Rx5yqZDjdeQqQI69yPUMOUTIFY0cIuS6jBwi5JKDA+YiCBwwF5vBgRZc
6MCBM7iYh3tkTxbiHtmTN3GP7Ekg7pE9mQuOmOsQcFQBrtaBI+ZqGzhirssi
FILWVHfqx/3XxCf234qTG+9/QX+5i/sBmdFDGbxzhoc28E4HD/+o+NO7UXg4
CO/Ow8M78I49qIF37MEZeMd5v4Z37MHFl07qbLvZRi6fYS4tx5xKxlx6jDn1
CHPpAOZUEubSm5hTDzGX2KstmEvsVT/mEnu1EXOJvYrGHliLvRCFPfAB9kI4
9kAq9kIg9kA29gJhjv8d/C3FHLcAfw8xx83B337M8Sng71/YI3ng+DPskVFw
vAF75G1w7I89UgmOVwVmhSb4uhv7QVtq2fdNyzyMc8L0iGZjvZOn8dn3reHM
X2MVRg/vYw/bYC/zHi7AXi7CHp6Jvcx7uBB7OQx7mD2QYA/7wQPew8TzDHuY
PTiPnjIPnH6KntKL3sI95Sl6yx70FAv0Fu4pLugtUegpanj1H/SUQHjFPWU1
vOKe8gG8qk496fvudiXdV0wu7DGVU+jJIf18R2+6FvPJ1F1pcqr4aqrtkufe
VLJ/PMXukZykOkneil9U9HldUl/ZFg9jT2qBJ9yTquEJv/8UPOH36+EJ9xrm
ehbOk7l+gfNkrptxnsz1GcwD7odXMQ8eox/uRg+rgofLSpUnl3YraNpf0yQa
tSdZ1OzKfBKhpNX9d2y7whR0vaN+XfEVLyqJnjt5d8IcupqWIywt9KaxW/t+
02QpqQT8Gj0Av+zBJvDLHgSBX/aAewpzaYUcQci1FjmmIFcpctQh1zhy1CAX
96qjyMW9KhO5RpDjPeTiXhWAXH24d+agDvfOHBzHvTMHOtw7c8A9ib3gnsRe
DOPe2ItEnke4x3ZwwxxfAzfM8VlwwxwVgRvm6H+Ln1+i
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{1, 67}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{1, 132}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{2, 35}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{4, 14}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{14, 23}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{26, 31}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{36, 46}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{46, 55}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{58, 63}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{67, 100}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{69, 79}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{79, 88}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{85, 86}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{88, 89}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{91, 96}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{93, 94}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{97, 98}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{98, 99}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{101, 111}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{105, 106}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{109, 110}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{111, 120}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{114, 115}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{118, 119}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{123, 128}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{124, 125}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{125, 126}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{128, 129}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{129, 130}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{132, 165}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{133, 134}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{134, 144}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{136, 137}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{141, 142}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{142, 143}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{144, 153}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{145, 146}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{146, 147}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{150, 151}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{153, 154}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{156, 161}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{159, 160}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{163, 164}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{166, 176}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{169, 170}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{173, 174}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{174, 175}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{176, 185}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{178, 179}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{181, 182}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{185, 186}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{188, 193}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{190, 191}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{191, 192}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{193, 194}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{194, 195}, 0.09343207087364204]}, 
           {Arrowheads[0.], ArrowBox[{195, 196}, 0.09343207087364204]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[7, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[9, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[12, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[15, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[16, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[17, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[18, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[20, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[21, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[22, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[23, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[25, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[27, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[28, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[29, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[30, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[31, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[32, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[33, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[34, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[37, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[38, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[40, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[41, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[42, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[43, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[45, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[47, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[48, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[49, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[50, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[51, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[52, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[53, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[54, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[55, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[56, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[57, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[58, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[59, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[60, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[61, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[62, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[63, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[64, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[65, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[66, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[67, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[68, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[70, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[71, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[72, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[74, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[75, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[76, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[77, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[78, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[79, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[80, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[81, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[82, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[83, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[84, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[85, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[86, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[87, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[88, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[89, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[90, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[91, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[92, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[93, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[94, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[95, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[96, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[97, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[98, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[99, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[100, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[101, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[102, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[103, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[104, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[105, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[106, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[107, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[108, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[109, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[110, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[111, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[112, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[113, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[114, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[115, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[116, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[117, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[118, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[119, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[120, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[121, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[122, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[123, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[124, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[125, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[126, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[127, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[128, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[129, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[130, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[131, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[132, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[133, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[134, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[135, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[136, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[137, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[138, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[139, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[140, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[141, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[142, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[143, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[144, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[145, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[146, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[147, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[148, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[149, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[150, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[151, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[152, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[153, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[154, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[155, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[156, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[157, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[158, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[159, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[160, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[161, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[162, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[163, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[164, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[165, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[166, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[167, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[168, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[169, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[170, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[171, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[172, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[173, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[174, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[175, 0.09343207087364204]}, 
           {RGBColor[0, 1, 0], DiskBox[176, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[177, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[178, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[179, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[180, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[181, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[182, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[183, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[184, 0.09343207087364204]}, 
           {RGBColor[0, 0, 1], DiskBox[185, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[186, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[187, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[188, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[189, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[190, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[191, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[192, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[193, 0.09343207087364204]}, 
           {RGBColor[1, 0, 0], DiskBox[194, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[195, 0.09343207087364204]}, 
           {RGBColor[1, 1, 0], DiskBox[196, 0.09343207087364204]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"96", ",", "\"8-8-8-7-7-7-3-3-3-3-3-3-3\""}], "}"}], 
      TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#5-3", 
         "1-1#2-2#3-3#5-3#10-2", "1-1#2-2#3-3#5-3#10-2#12-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1", "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1",
          "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2", "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1",
          "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4", "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1",
          "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4", "1-1#2-2#3-3#5-3#10-2#12-4#4-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-4#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-1#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-1#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2#9-4#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2", "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1",
          "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1#9-4#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-2#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-2#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-1#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-1#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-4#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-1#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-1#9-1#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-1#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-1#9-1#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4", "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1",
          "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-1#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-1#9-1#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2#9-1#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-1#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4", "1-1#2-2#3-3#5-3#10-4#12-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1", "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1",
          "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2", "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1",
          "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4", "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1",
          "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4", "1-1#2-2#3-3#5-3#10-4#12-4#4-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-2#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-2#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-1#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-1#9-2#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-2#9-2#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-2#9-2#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2", "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1",
          "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-1#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-1#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-1#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-1#9-1#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1#11-4#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1#11-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1#11-4#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4", "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1",
          "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1#9-2#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1#9-2#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-2#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-2#9-2#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-1#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-1#9-1#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2#9-1#11-2#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-1#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-1#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2#9-1#11-1#13-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-1#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-1#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-2#11-1#13-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-2", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-2#11-1", 
         "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-2#11-1#13-1", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#5-4", "1-1#2-2#3-4#5-4#10-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1", "1-1#2-2#3-4#5-4#10-2#12-1#4-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2", "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1",
          "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3", "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1",
          "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3", "1-1#2-2#3-4#5-4#10-2#12-3#4-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-3#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-1#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-1#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2#9-3#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2", "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1",
          "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1#9-3#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-2#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-2#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-1#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-1#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-3#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-1#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-1#9-1#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-1#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-1#9-1#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3", "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1",
          "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-1#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-1#9-1#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2#9-1#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-1#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3", "1-1#2-2#3-4#5-4#10-3#12-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1", "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1",
          "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2", "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1",
          "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3", "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1",
          "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3", "1-1#2-2#3-4#5-4#10-3#12-3#4-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-2#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-2#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-1#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-1#9-2#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-2#9-2#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-2#9-2#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2", "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1",
          "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-1#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-1#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-1#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-1#9-1#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1#11-3#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1#11-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1#11-3#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3", "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1",
          "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1#9-2#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1#9-2#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-2#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-2#9-2#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-1#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-1#9-1#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2#9-1#11-2#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-1#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-1#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2#9-1#11-1#13-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-1#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-1#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-1#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-2#11-1#13-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-1#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-2", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-2#11-1", 
         "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-2#11-1#13-1", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#5-2", "1-1#2-3#3-2#5-2#10-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1", "1-1#2-3#3-2#5-2#10-3#12-1#4-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3", "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1",
          "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4", "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1",
          "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4", "1-1#2-3#3-2#5-2#10-3#12-4#4-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-4#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-1#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-1#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3#9-4#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3", "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1",
          "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1#9-4#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-3#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-3#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-1#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-1#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-4#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-1#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-1#9-1#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-1#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-1#9-1#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4", "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1",
          "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-1#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-1#9-1#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3#9-1#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-1#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4", "1-1#2-3#3-2#5-2#10-4#12-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1", "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1",
          "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3", "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1",
          "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4", "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1",
          "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4", "1-1#2-3#3-2#5-2#10-4#12-4#4-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-3#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-3#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-1#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-1#9-3#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-3#9-3#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-3#9-3#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3", "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1",
          "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-1#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-1#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-1#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-1#9-1#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1#11-4#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1#11-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1#11-4#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4", "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1",
          "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1#9-3#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1#9-3#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-3#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-3#9-3#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-1#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-1#9-1#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3#9-1#11-3#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-1#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-1#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3#9-1#11-1#13-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-1#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-1#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-3#11-1#13-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-3", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-3#11-1", 
         "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-3#11-1#13-1", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#5-4", "1-1#2-3#3-4#5-4#10-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1", "1-1#2-3#3-4#5-4#10-2#12-1#4-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2", "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1",
          "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3", "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1",
          "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2", "1-1#2-3#3-4#5-4#10-2#12-2#4-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-3#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-3#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-1#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-1#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-3#9-3#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2", "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1",
          "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1#9-3#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1#9-3#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-3#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-3#9-3#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-1#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-1#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-3#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-3#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-1#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-1#9-1#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3#9-1#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-1#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-1#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3", "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1",
          "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-1#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-1#9-1#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-1#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-1#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3", "1-1#2-3#3-4#5-4#10-3#12-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1", "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1",
          "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2", "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1",
          "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3", "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1",
          "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2", "1-1#2-3#3-4#5-4#10-3#12-2#4-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-2#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-1#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-1#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3#9-2#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3#9-2#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3#9-2#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2", "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1",
          "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-1#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3#11-3#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-1#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-1#9-1#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3#9-1#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-3#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-3#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3", "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1",
          "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1#9-2#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1#9-2#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-3#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-3#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-1#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-1#9-1#11-2#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-1#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-1#9-1#11-1#13-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-1#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-1#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-1#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-1#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-2#11-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-2#11-2#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-2#11-2#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-2#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-1#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-1#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-1#11-1#13-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-2", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-2#11-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-2#11-1#13-1", 
         "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-2#11-1#13-2", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#5-2", "1-1#2-4#3-2#5-2#10-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1", "1-1#2-4#3-2#5-2#10-3#12-1#4-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3", "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1",
          "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4", "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1",
          "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3", "1-1#2-4#3-2#5-2#10-3#12-3#4-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-4#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-4#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-1#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-1#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-4#9-4#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3", "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1",
          "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1#9-4#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1#9-4#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-4#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-4#9-4#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-1#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-1#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-4#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-4#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-1#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-1#9-1#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4#9-1#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-1#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-1#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4", "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1",
          "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-1#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-1#9-1#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-1#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-1#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4", "1-1#2-4#3-2#5-2#10-4#12-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1", "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1",
          "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3", "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1",
          "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4", "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1",
          "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3", "1-1#2-4#3-2#5-2#10-4#12-3#4-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-3#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-1#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-1#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4#9-3#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4#9-3#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4#9-3#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3", "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1",
          "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-1#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-1#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-1#9-1#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4#9-1#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-4#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4", "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1",
          "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1#9-3#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1#9-3#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-4#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-4#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-1#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-1#9-1#11-3#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-1#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-1#9-1#11-1#13-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-1#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-1#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-1#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-1#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-3#11-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-3#11-3#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-3#11-3#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-3#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-1#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-1#11-1#13-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-3", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-3#11-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-3#11-1#13-1", 
         "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-3#11-1#13-3", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#5-3", "1-1#2-4#3-3#5-3#10-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1", "1-1#2-4#3-3#5-3#10-2#12-1#4-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2", "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1",
          "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4", "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1",
          "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2", "1-1#2-4#3-3#5-3#10-2#12-2#4-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-4#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-4#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-1#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-1#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-4#9-4#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2", "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1",
          "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1#9-4#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1#9-4#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-4#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-4#9-4#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-1#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-1#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-4#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-4#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-1#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-1#9-1#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4#9-1#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-1#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-1#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4", "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1",
          "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-1#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-1#9-1#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-1#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-1#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4", "1-1#2-4#3-3#5-3#10-4#12-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1", "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1",
          "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2", "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1",
          "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4", "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1",
          "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2", "1-1#2-4#3-3#5-3#10-4#12-2#4-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-2#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-1#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-1#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4#9-2#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4#9-2#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4#9-2#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2", "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1",
          "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-1#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4#11-4#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-1#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-1#9-1#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4#9-1#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-4#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-4#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4", "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1",
          "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1#9-2#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1#9-2#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-4#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-4#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-1#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-1#9-1#11-2#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-1#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-1#9-1#11-1#13-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-1#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-1#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-1#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-1#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-2#11-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-2#11-2#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-2#11-2#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-2#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-1#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-1#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-1#11-1#13-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-2", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-2#11-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-2#11-1#13-1", 
         "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-2#11-1#13-2"}, {
        Null, CompressedData["
1:eJw13WMQZte2NtC0bdu2bdu2bdu2bdu2bRtx0p20O+kOvptvj/Nj1FNzrrnW
XvutXXX79M3JSdGyW82uIb/55psX8b/55r8M8U2Q/wlFaMIQlnCEJwIRiURk
oqijEs1cdGIQUx2L2M6NQ1ziEV+dgITmEpGYJOqkJHPv5KQgJalIrZ+GtKSz
Lz0ZyEgm/cxkIavfLRvZyUFOcpFb5tHPSz6Z3/4CFKQQhdVFKOq5xShOCUpS
SpY2V4aylKO896lARSpRmSpUVVejuvka1KQWtWUd/brUk/U9twENaURjmlhv
SjOa00K2/Cb4vlvRmja0pR3t6WC9I53oTBfndKUb3elBT+u96E0f+rpXP/oz
gIEMYrAcYn0owxguRzhnJKMYzRj9sYxjvHtMYCKTmMwUOdX6NKYzQ850zixm
M4e5+vOYzwK/y0IWsZglLGWZ9eWsYCWr5GrnrWEt61jPBusb2cRmtsit3wTf
1za2s4Od7GI3e6zvZR/7OeCcgxziMEc4qj7GcfMnOMkpTqvPcNa9z3GeC1zk
EpflFXNXucZ1bjjvJre4zR3uynv693kgH9r/iMc84an6Gc+9zwte8i3f8T0/
6P/IT/xs3y/8yitey9+s/84b3sp37vGeD3zkE5/Vf/CnuS985S/13/zj3H/5
//9H//+EIKQMpR+aMDJsiGBfuBCB8ESQEfUjEVlGCRH8+SFqiEA0ohODmMQi
NnFkXP14xJcJ7EtIIhLLJPpJSSaTe24KUpKK1Oo0pDWXjvRkUGckk/fKTBay
ko3sMof1nOQit8zjnLzkIz8F9AtSiMJ+5yIUpRjFKUFJdSlKmy9DWcpRXlbQ
r0glWdlzq1CValSnhvWa1KI2dWRd71OP+jSgIY1orG5CU/PNaE4LWqpb0dpz
2tCWdrSng/WOdKIzXUIE331XutGdHvSkF71lH3N96Ud/BjhvIIMYzBCGymHm
hjOCkYxyz9GMYSzjGM8E/YlMYrJ9U5jKNKbLGdZnMovZco57zGUe81nAQv1F
LGaJfUtZxnJWyJXWV7GaNXKt32Ud69nARjax2foWtrKN7c7ZwU52sZs91vey
j/0cCBF8Xwc5xGGOcJRjHJcnzJ3kFKc547yznOM8F7goL+lf5oq8av81rnOD
m+pb3PY+d7jLPe7zgIfWH/GYJzyVz5z3nBe85Fu+U3/PD+Z/5Cd+5hf5q/4r
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
9YP+5A==
         "]}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {8184, "11-11-4-4-4-4-4-4-4-4-4-4-4"}, 
         VertexStyle -> {
          "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-4#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-1#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-1#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-2#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-1#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-3#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-1#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-1#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-1#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-1#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-4#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-3#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-3#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-1#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-1#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-1#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-1#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-1#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-4#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-3#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-1#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-2#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-4#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-1#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-1#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-3#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-4#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-1#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-1#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-4#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-1#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-1#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-3#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-3#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-1#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-1#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-4#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-4#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-1#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-4#8-4#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-1#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-2#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-3#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-1#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-2#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-4#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-1#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-2#8-1#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-1#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-1#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-2#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-2#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-3#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-4#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-3#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-1#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-1#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-2#8-1#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-2#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-1#8-1#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-1#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-2#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-1#8-4#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-2#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-1#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-2#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-1#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-3#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-4#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4#8-2#9-1#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-2#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-1#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-2#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-1#8-1#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-1#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-1#8-4#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-1#9-4#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-4#9-4#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-4#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-3#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-2#7-4#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-1#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-2#8-1#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-3#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-3#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-3#9-3#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-3#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-3#8-2#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-1#7-3#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-1#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-4#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1#8-1#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-4#8-1#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-4#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-3#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-3#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-3#7-2#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-3#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-1#7-1#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-4#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-1#8-1#9-2#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-1#7-1#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-2#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-2#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-2#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-1#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-4#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-4#7-2#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-3#7-3#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3#8-1#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-3#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3#8-2#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-1#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-4#8-1#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-2#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-3#8-2#9-3#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-2#7-3#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-1#8-1#9-1#11-2#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4#9-4#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-3#7-3#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-1#9-2#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-2#7-4#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-1#8-2#9-3#11-2#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-4#8-4#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-3#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-1#9-1#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-4#7-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-2#8-2#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-4#8-4#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2#7-4#8-2#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-3#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-1#7-3#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-3#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-1#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-2#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-2#6-2#7-2#8-1#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-3#7-4#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-4#7-4#8-4#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-1#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-3#7-1#8-1#9-4#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-2#7-2#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-1#7-3#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-2#9-2#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-4#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-1#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-2#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-4#11-4#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-1#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-4#7-4#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-3#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-3#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-3#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-4#7-2#8-4#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-2#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1#8-4#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-1#7-1#8-2#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-2#7-2#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-1#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-1#7-1#8-1#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-2#9-4#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-4#9-4#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-4#7-3#8-4#9-3#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-4#8-3#9-4#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-4#6-2#7-1#8-4#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-3#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-3#6-1#7-2#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-4#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4#9-1#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-3#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-1#7-3#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-2#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-3#8-3#9-1#11-2#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-4#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-3#8-4#9-1#11-4#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-2#7-4#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-4#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-1#8-4#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-4#9-4#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-1#7-3#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-2#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-1#7-1#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-1#7-1#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-2#7-1#8-4#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-3#7-2#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-2#12-2#4-1#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-2#12-1#4-2#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-1#8-3#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-3#7-2#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-2#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-4#7-1#8-4#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-1#6-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-1#6-4#7-4#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-1#6-2#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-2#8-2#9-3#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-1#8-3#9-3#11-3#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-1#7-3#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-3#5-3#10-4#12-1#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-4#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-2#9-2#11-2#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-4#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-1#7-4#8-2#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-2#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-2#6-1#7-1#8-1#9-4#11-4#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-3#7-1#8-2#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-1#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-4#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-2#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-4#8-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-2#7-1#8-3#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-1#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-1#8-2#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-1#7-3#8-3#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-1#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-2#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-4#7-4#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-1#7-3#8-3#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-2#7-1#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-1#7-1#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-4#7-1#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-4#7-1#8-3#9-3#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-1#9-2#11-1#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-3#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-1#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-1#7-3#8-3#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-1#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-4#7-4#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-1#11-1#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-3#7-1#8-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-4#8-3#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-3#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-2#8-4#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-3#7-1#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-3#8-1#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-1#7-1#8-3#9-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3#6-1#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-4#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-2#6-2#7-1#8-2#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-2#7-1#8-1#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-4#6-4#7-3#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1#7-1#8-2#9-3#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-4#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-2#7-2#8-2#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-2#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-1#6-1#7-4#8-3#9-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-4#7-4#8-4#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-3#4-2#6-2#7-3#8-2#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-2#6-1#7-1#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-3#6-3#7-1#8-3#9-1#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-1#6-4#7-1#8-2#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-2#5-2#10-3#12-1#4-3#6-1#7-4#8-3#9-4#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-4#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-3#8-3#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-1#7-4#8-3#9-3#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-2#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3#7-1#8-3#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-2#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-4#6-4#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-1#6-2#7-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-4#8-1#9-1#11-1#13-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-2#6-3#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-2#12-3#4-3#6-2#7-1#8-1#9-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-1#9-1#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-4#6-3#7-1#8-4#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-2#7-1#8-1#9-4#11-4#13-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4#7-1#8-2#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-1#9-2#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-1#7-2#8-3#9-2#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-3#7-1#8-3#9-1#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-1#7-2#8-2#9-4#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-4#4-4#6-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-3#12-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-4#7-2#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-3#6-2#7-2#8-2#9-1#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-2#7-2#8-3#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-3#8-1#9-3#11-1#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-2#6-4#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-1#8-2#9-3#11-3#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-1#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1#8-3#9-1#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2#5-2#10-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-2#7-2#8-1#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-1#6-1#7-2#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-1#6-3#7-1#8-1#9-2#11-2#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-1#7-1#8-1#9-3#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-2#8-4#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-2#7-2#8-2#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-2#10-3#12-3#4-3#6-3#7-4#8-4#9-4#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-4#4-4#6-4#7-4#8-1#9-3#11-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-4#7-4#8-2#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-4#6-2#7-1#8-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-1#6-3#7-2#8-1#9-2#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-1#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-4#12-1#4-1#6-1#7-2#8-4#9-2#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-3#12-3#4-2#6-2#7-2#8-1#9-1#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-2#10-3#12-3#4-1#6-1#7-1#8-4#9-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-4#10-2#12-2#4-3#6-3#7-1#8-1#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-2#7-1#8-2#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-1#4-3#6-3#7-1#8-3#9-4#11-4#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-1#6-2#7-1#8-3#9-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-1#4-2#6-4#7-1#8-2#9-1#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-3#5-3#10-4#12-1#4-2#6-2#7-1#8-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-2#9-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-1#6-3#7-3#8-2#9-2#11-2#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-3#6-4#7-3#8-3#9-1#11-4#13-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-2#4-2#6-3#7-1#8-3#9-1#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-2#3-3#5-3#10-4#12-4#4-1#6-1#7-1#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3#8-3#9-3#11-2#13-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-2#12-1#4-1#6-2#7-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1#7-1#8-3#9-3#11-3#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-1#4-4#6-1#7-4#8-4#9-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-2#10-3#12-1#4-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-3#6-4#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-1#4-1#6-1#7-1#8-4#9-2#11-4#13-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-2#10-4#12-1#4-1#6-4#7-1#8-4#9-3#11-3#13-3" -> 
           RGBColor[0, 0, 1], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-2#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-2#10-3#12-1#4-1#6-3#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-1#4-1#6-1#7-1#8-2#9-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2#5-2#10-4#12-3#4-4#6-4#7-1#8-4#9-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-4#10-3#12-2#4-3#6-3#7-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-3#12-1#4-4#6-3#7-4#8-4#9-1#11-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-3#10-2#12-4#4-4#6-1#7-4#8-1#9-2#11-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-4#5-4#10-3#12-1#4-2#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-3#10-4#12-2#4-1#6-1#7-1#8-1#9-4#11-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-4#3-3#5-3#10-2#12-2#4-4#6-2#7-4#8-1#9-1#11-1#13-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-4#10-3#12-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-2#10-4#12-4#4-1#6-3#7-3#8-1#9-4#11-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-4#10-2#12-1#4-3#6-3#7-3#8-3#9-1#11-1" -> 
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw8vHc41u8b/y9Z2XuP27qprHurt3hmRHuQVIiiIqKUpCVllZUUyWggSpIk
lWQ0UPaeiYqSUCIS3+vzO37f71+O13GN1+s6r/N8no+nw0F9t88Wd24uLq5+
eS6u//3UEVhq1z+sg5pZkRN95OeH0M9rftCoCDy8/OuiYV3UKTceixnRhvN8
YlTlrqXQuJOxaO8PLWQG9V4tVtDHcZXoI5I92rgRyfTivWGI5FIxp5o0Kqx6
LWI/fzGCU6mJwYCzDqp72iRXj9Lwzb9xWPyuDoYsI269GqUj3ZfHpvipDt7s
mlgpPcpA12P/6pw6HdxYcIBvxw8mBEd0HNjdOuD+88L/4ggLLYfliy0GdGAl
mUh58p0Nc/dbGif6/+/3c9AhbX2Jr1EHPPwd2/PI+NFBl9f/2+/x3STZDjLu
ZdwX2lusA+UDyY2HyX4XFA75V5XqIJey6/0tMp+/JPr4/8YXJxatrybzhUVM
/SMf6CDxJT0gmoxf8Xy35n/ff3DIl1JAxg+s5641T9BB2qnczQvI97ZkNS0O
S9HBXpOrF1aS/YUObL2+MVUHJkdcnPzI+nLHQsv/zd+7qSH6Klm/JNF5TDJK
B3rzf05sJuNSwz8OHzmvg/Oy3xMPkXHX8lPRRqd14L9SO23qOwueXVxBrSd0
ILlZolmXzC9cK/0x85AOXku2m1qR+XHbBuySPHWQdKHcfXqYDfuo10kdJP6p
uXlBEmS8rz3ucNhBHZTtlFhj9YOBpkzbbb+9dFCocOTK+REm1h8vss7bq4N2
qZKFeeR9KTz3jztv18Hu2cW0CrLfj5ib94TX6eDHpyvOrd84yLMrb+TdpoM5
IWp8AJmvlc0zrWGjgwmqBzuUzE/8t0oNy3TwdWVO+2Uy34RzRa9ikw5kk7Wf
yJD36bnVPN1pTeITZzC7nKx/2xTbM8gm3/ss46g5We9qYbfgCFUHXAPKo6vJ
eiW1cL58jg7Ei/79NzXMwrXmKdp9bR14JywanfrGhvyFfU5ZUiTf/GVu/fnK
QW/0jexfZL/pKobL2xE6FG1H/AcMdfCt8ed2iREGdDPWNQSS/V+VqndZfWfC
Vbe8/KI4GX+a/p1O9m+vTlBoFdIB36/owyfI/hoPVM16uMh5TCrH08j+a1fI
5Uv+oOITr1evGXlmGU4O7PlKRbL59VcvvrKR7P6jzKaLCjGGyf72IQ40/iDw
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
owbvN9KxTvjSBvNyFTylZ/z2fMxA4CcZpalOJVxedG5lyRUmwn6dM2J9U4C/
VYhv7hGSL//f33PIQZFP92jWZjai3vUrubxXgDQ9k+VI/OTYpvYp+3dymBhb
mz2+jo3DSfJrG9NJ/Yk+tG4n/j9m2OhOYq4CBKuV1XiIP9x760JA5105ZC7z
Pc60YUNTpPVTbyzJ592Jhpn7WOgQtv/mdUEOEQ+Dh3yJ//CY+thOdVUBl+oi
A5E7DKw80+j54aASui2MxXqIP/9ymDZI91OA5Y93HuZ7WEhws3IV9ZSDg9LR
6UziLzq7r5XGk3oR/Otd3078mgVrx3jJajlYL17xoHUZG95yt+dVlynBcqLp
3vtTTNifcjrHY6yAtjzjvR7En1U/jsw9vVgOZieahblYpB+MlK0MVlRAed1X
/Qnipx49f5ezfpEcppONZTSN2OBberAxQ14N145kKi5/SUc2Gnqq5FVQItH9
WTqZgYx4IeUxcSVcclCMyD/GxEd1HlHRf/LYnWu+5PhmFpQfzM4v/SoLOs+B
d2ZL2Viz8rExe1IRbq5pEUnED1fvcpi580Ee8sYCzn/WsbD29N/nClWyqBY9
RLenEj8VcrTwNeGvoIly0fvxhPcblq2I6FJETcvDNad8iF+jfZPfVC4Ph2Hu
94dsWNh6KWlCNlsW/Vx26/eqk/qZlFn+tVQRn3O6a3ccYMJwR/cJvgx5/Gyb
8/9swcL8i1svNCNkMcetruarzMbvur4rv3dSUEk75ibURMPKy6N2R3JVofjB
uSs2lw4xYY6b3E1l7J3wmPeOYOC7S4Zj3GlSvylpL0eIf9waJ/mHflweAnrc
RgIrWDj7X9MSeMhiKeXrXT85NvSvftzotVoWApZlv3wlSf/VymZNmsrDuSlG
tobBQuDt48haLIsJ4/LZfSKEN46uEJ9YJAvhTIEqBwE2VphOjzdtVwbT+tE7
ntMM+AkW9uwxVMR+2fEpMzsmcndd+nRQSh5eH7sqGvRYSNv4unHjNxnYizze
abGQjbKaXMeTk3I4uWePvKYuC7rX0q4/r5bBq6rhJzqEV3/tsvtesVEV902x
aVkaHWdE71ZFLVFGpXf2oi3+DJxPXsnXM6MA4UdVJvnEH0Us6TDXI/Wy6c9X
H0l1FjY2bjrNuScDC5GWPl7Co6/DbKMrLsqgvje5o+cXCzNF+ySW8StjQiLg
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
ZXylpFGxOJacnT9vJUz61ffhqiQ9KUzOuRn8XclEK8dgcWaaOGhuxhe0+Vg4
/yv3ouE5cTA3ef2eJ/1q+VxISCzR98wbn1U77I1wq/JV+Nt9KggyuplfRaeB
9qbL0KFdEceYC5sCJmnoWJW0W9CC8GGa4Z2uIjp2eoTwrk2XQRLfSL7BcQa6
L/pmXeSVQqP33ZKzy5hwzt259v1ecQi27KtunmZi6ox7SC3xGyf+qChwCug4
YWug9yhSBrrrJWX4jjAwT51qTBiWRMtNPokWBhPnZ14eP7lGHMGTM8Lpv5jQ
Ghnyzc9XxNDqjQeNftBwS2KHzU15cv9pyi7RD+hYZsB7eelRGYgHPG9pP8hA
w5q8nscNkuDfvGOtpgET+/bt1IWBOOYWT5d6j5B+lBJdFLxQHg9LhM98vEtH
/+d4mwInGSy9rvQn04Pou8H19s9PJJFxbMkhL10muI7d3C8nKQ41u2XfaINM
yCWyGbPEH9vObRE+R6FhteN43fdzithyqppWNkADMxbBYwNy4IvL2d96m47b
eqbCN5bLwOvW14gmVwYkqv67uvGSJJryqffqSb9Wpf5K4PkuBrc3VyLH+pgI
5Tn9dkGBGOnn3+9lk360egnf9TOviF5rBQiUJ9PxTNynMU9OBkauD6p+b2dg
6VTbon5PSVimfrmwWI4Jk+dng6knxeDQpbLOqZmJZE9vy2XrFOFcbH1apY2G
n96JBkYZchiptt6ffoWOY2bF775MSGOW7VQusoWBWfG+/SmWkhC8fVj5mCgT
lkLnhw9biqFzqdghoVomThr+1BoUFsN2pSzVgrdM1Nee3c8dKgevp1xxp6Lp
kLsXqmveKA1G7fhppTUM7Aq7OHRWVRJ/+/sPPOVlYt1byuZzLaKomGpy2FZG
9G/bKu60EGU4RqVItswZQcput0DUtAJyFIoLvlXQQP+tcmSS8N3r8fiY9WF0
TK5YeM2U6O3qvLY7VYQf7GKkaTReSfRF57h/mGfArWxtnHWqKPy9z2r+fsZE
6RqNd2vTpfHWwm+dnxnJt0L20M9hCWz6dGEf1wzhl1VXBZn7RNF5/lZwVAET
BxrGcyyJ33q6YJtBYwCpT3d3yvxZaZxyidjiwSHzR/bqGb+RwJeFvjd1Sf90
SBfstjESxec0vUBKLhNjxkm6odMieHpMXjT3DhOvrrU+P014K/zPubs39Rj4
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
I5M9R1UE1R86iyb2k/VsTd01K2vCMtjUc5LbewaSqPmvDXl1rE+fyfOp+bJD
Fcy49O2m/8237f9aekmczvhvvm3Ob5+QkmOM/+bbxoRUV+weYUCUmm/z3rVw
9+QiEziPTtcWEZLDLL5HWmoMiUd3u35NK5iGACNOXzWLAfWALWMBh0SwwPJ6
XRixXwdqXm/B3W+uAhPk/tR8nu8iOZsjIky4U/N7TKlZ85RukPfxXfd+nrcA
BOfOniYmzUSH1r/5QKtvOllRykyEU/OHjW9HmluI/RtS84+CrKuTp9oykEDN
P+oeswktzSH5gbXj3OPTAnDMj9UTpjPhQM0zKpU7/Iok9lRuNPHu8l0BxLyf
671vOvO/ecgyrz2JTVomqBb7ajbwRhFfv1ZVswdMUJrPunLAVA7jjb9sPjwz
hYV6rmiioRTaTX+fukDiLy3o2l79PyJA4M8IuyfEfmsSv9+vFcCVvOFdw0wm
yqn5yz/+j/adqjNF09bLlautpHBj6eaBm64M9PVrVqQri+LVBh8V0RcMjHv9
m/8c3RW0YMtsJpSp+c8TEodCPkmaohmN8W8c5OARsf1WDPGfpGjJpMrNUlCu
8HdlE/uWX6CXvmCeKIzMBrJLa4m9U/OmNeuPNTTOY2Kw5d+8aW/QLbuwZuJP
1Lzr4YJxjfmLyfov+TfvOvLK+vzzv6aIoeZvWz1FbvL9if1R87c5wR0tzE4S
P1bE/fq2eBKK60+rZqxkosn337ytW1DVxp4+BsJ6pkz9vXUSigR0y2TcyP5T
87kCvuz8WwkmMMju2b5wuRJqpOSnPbMxRS417+x74drSn6Q+yafmjT/79Z6/
G8YAx6MhuTVVFPeP3m49NcjAEmqeeP/lILVATyZqqHlimpmhT+YhBhzNotdt
LRFFZFapFUZJvKXmk78arld4vZ18r96/+eSLUQ9PlmgysJSar24zXNimeYKB
4bxbpv87H+ry8L3YY0EmHlHz0tPVs2+b7CL2Rc1H31Kc13VkL7mf/7/56dj8
kfBJKSS+tDCX3dUXAzcAOoJyzP/ms/dU9ae1HCb2Tc1je8geFDQ+QdaPmtcu
Exg0M7plir0ex9JPDMuBN9eWlU7qkbdOefMnzZPG8m8x15pI/BYw1qw6tEEM
etLh2301mbCl5sul3vT27kkk+x3/b778emXwT1F9JuKoeXVnxoj9swtMMKh5
9dfr66anPiD7dV9EbfJ5MbD8k5deNGYihpqPX+IaN0viBhM0aj7+XCR/K4vL
hAQ1bx98/8wF+ztMJFHz9nvDdnrnuzGw69zXrVmnpLHrorSrZSWJByHVzIif
Ysg0E52IAhNuZw9tdXk3GaNNgyGxD4g/UvP/uQcOlr0sYmLU4R8vQIBVey3Z
nvjDvfFZC2iC2JvK3S9UzoQXxR8w2fbjwqwa8nuKV/Db5OvfEx8YeLSeExvj
PxURRWGyl9cRf7SRsf9G+tNGszu0bU1M7Px/PkLGiomkDiYMKZ5CsF6f1tkd
5OeGoMmuNwWhfb2WW9pHnkfxGZQX0Ir6B8nzKJ7DicqMvC1xpJ+k9DZKN6w9
Gj1hDE2Kd2mV8vTA4o0kvlD8oEwbQXVvHVP8ofgnipfHX32aykAhxQNhuczP
2XKA5Ov/52vMrcz9OMZAIMXDmO/EWvoimHwPxbv4NMRJlPhF7IniXcyvWjfD
IpwJeYqXcXy96P2Zk1gIpngZlxMn3dkhxkQPxetoi/hxLi2S7DfF4xiMOK2y
UIwFUDyOnenrzinEMuFI8TyE7jQXrJNhwYvieezxeGNx9SwDChS/RHXFWfUe
RSYEKN7IYJyQ7l5ij+oUT6RxT/0ZfxUW3CmeSN3NlezO80xkUDyS3LeRNw/S
WehQ/scjaVJf3LpUlwkziodSGZNfanWNvA/FO5mtMtp3Yjp5X4p3cnviVs2F
DCZcKF6Ke+tMxzNMFi5RvJTBKw3rJWcy8JnizcQ/mtuYnc5AAcV/aXjw55mj
CfEniufCG0xwGr3LRC7Fc0k0NHqfPIsFBsVzaTvVKiRA/EGU4sU0hw4uXVZA
/p7ixdRvFDqTYsVCDcWLMb33RSyT+Nstim9zIvqa8E1z5n+8muRv7HuXnjD/
49XccHniedaOhUGKV+O10/zpEhLP5Skezpv6piNfK5hIoHg4C2YF2cUvZ4FG
8XAs0PFT6LApiigekp5F7fkYGwaiKd6Q5aroktgKUm9TPCCDY3rWb1cwYUTx
gB6o9v5tqyfrSfF9kq+wEOnKgi3F81l0UcI6eAMLWRTvZ+Zlfv/mbuZ//KCi
NDWHTd4siFK8IIvckPXL/FhwoXhCMZclLq1qYWAFxTuqSxXvTd7MRCDFO7rv
OGEx/wsTERTPqJU+fwc7hIUoimdk67HBJOwHiW8UD+nU68RA+QNkvykeUq7e
j0tGaxnYQvGf3jprq+iQ+OBG8Zum33Brux/AxFOK3xT8M/HqIgEW6il+E1c/
cee3KNZ/vKaDI55uL+JYUKZ4TmopPVlDXxk4QvGk/OyuMw+SfOBO8aSej2zJ
kRYn60PxpDRTp7MvJrEgQPGkJF7rTpN/Y4ozFE/MsW1B1OlABpwoXpeJxZjb
Y5K/sileVrHS1nob4q8RFC+rUaM7d7YsC9IUDytaXnLQ9xJ5HsXDEvoeM+hO
/E2e4mkx7s8+YXGThXHvfzyt1b5LS8ynknhM8cA8nqjW3TtH4gPFAzNyPztT
TpcFM4rv5XaoQ1Q4iwVDiuc1Xdh0TcUD1n+8r4VJo6W2LPL3FD8sxtk1/GgR
8U+KF2ZtcDrA5jmJRxRPbDj8hUkZqUd/Uvw07Z1nTfJJ/Xed4p2JcH0jatJI
vKV4ZwO/rN/2WpD4QPHO6gpVGX+qWbhJ8c6SLgx89iD1n8D/89fk+k765pL8
S/HXxKO6uWELWYig+GueE7rZWY0sLKF4a3Ve376tbyP2SvHYDHa/Ybk4mkI1
UKmwXUoDe9bM7dch/a2ib3fwb3MVkk/eJ8UmMXCB4tXl7GoIE5rBRDzFm1sx
OeTKlELi3xRv7vsJ9XLRFcT+Kd5cvFrx56m9LARSvLl8G8+DJaZMrKJ4d1m7
j3Zufkr8keLdXb91GxLE/zIo3l1Ky+uL2Z9ZMKJ4d9j1Z2oNqa+vPPla2iWl
iEdTFo05mzFR2fxT3LFMFmtb7SMGq5hYoimUPklJCsVuaWXi7iykUjw+Nzl/
QccfLDyleHxKmx45iWwh/kTx/q42dsl9H2chjOL9jV2eE/t4PhNrk51bj32Q
xdbtZzYkvyX1AsUnrPh+qv/vDuJPL/11mW2iSHi/s/KYEBvjWf94hO/Su/Z+
DyT+nLwtZGSKGELveBvSJdgQ2vSPX2gtnjb/sRUD7094R1q8VUH82pdWk0oY
eJ7inrhntSKa83ZWFzoy4dtMv/heRQ7HSjUz+R9IPKT4inu761a67Cf2SPEV
nztp6OTIsRFM8RT7b7c9mKvGRhTFW/z2Om/hsyEm6Su6x5ePSIEee2eRwXES
f+8OewqcEYO5nWBXmTYbMRTf8e2O7pRFM9gQpfiQlwqdTK5sYkLrcqVV+xI5
/BTtear3h4mGxrmmB5WkYaW4vn73GRb6mh/w1jWI4ZjO2+4KJhuGFK9S5OOH
nRsEWfhV0dIcPkMar48nyqy8QPJt9G55wwkxXGDa5FjPYqOD4l3q5k6wLpD+
7/iu3sCUHkWUP1yyI+IAE0oPNvRzrsohtazVrJfEh8H43zIrV0sjyvkHJ4H4
///zNyu1DwsWgA0vircpbPunzsiWDQeKxznEPtnDvE/8e/9Z7cfxU+FSIKd+
zp78nuJ9PvFgvp28io08ihc6A7N3HZ3JQhzFQ7U2P9FdWMqCevWsI38+TIXM
UInolnXkeyl+6bXv7Ktlm9gYjv7HQ321dLu0eS0LPZPChz7MEceqR6Op9B1s
bKf4qbMPRogFB7KhTPFZjX7/lTt6heTDG5+yJCXlsWqZWGrLHBa2UrxY+Y+a
8ktbSLyylWst2ycOf4dllRWhbEhTfFjXCPj87STxkTXQMDtNHJOla/oUD7FR
Q/FkU9zsxCdI/s11mffXc6oM9CoMDqT3sRBO8W6Tjx5ZvT6aDWuKd3tja66t
41fijxRPd5XXN/WrJ8n9KJ6uj/K7j1qhDNQKyNG3nFbFi4YVUtNkmdi4a8eX
gDVK8K9mf9LLYuJ8wg+J9lny2Gv710lqJXmew7eZjoYyiHxSXjxK/LOc4v/G
W5ya2ZXERhzF//2Tt4+/II+JhzoNDiOO8mDLc58rurGwaEOCsM8CGWz1/eT8
YYKFvDk3Al/6SuD6vm8H1C+R6ym+8MOTCWorbpDvoXjFukOn6k4bMLHvHm6s
SVWCBcc5VKqUCU3zjXUOIfJIfJjTLOvFQv6ZyNN1PjKYl8jWqRRjw43iI+8q
Exk+eJvcn+IjO98P4KyXZsPd5GfHrzYJ1K5tnnLnHvk9xWfumJUeqP2aiZX6
Js6rsuThfdVY/CvJ983TvK1H0mXwwq30JFuVjZ6fbitnakui+tg5+8ZHxB4o
3jNnT3vFaCkbAxQ/OjQzeb6lARuOFL96wWJLP8WXbDyleNXH1R2tTOvYEKB4
1pzjRYYmEiTfThpW/e6uiWcbufqSiQys+rZuccd3VXjb1146SPrzkxTPe8bN
2hwf0j/YyRRHXmuTh12A1tF7pF44XfjljHe7DLzm7lg/ziDPezPbYU2xJCLF
Crjzm9n/8bULD8lPzn/PRG3Qs2223+SR9Mjb98wJFoZlF53WHJaB/4/C1kA+
G4x15/f2f5bEUhP5RSs62AikeN0aY2nR70n8pd0s190ioow6d5Hrkz6ReDgq
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
hcqk8Qtj9Woz+HKQu9+sfkwNam6br/yL8G+0LZe157QalM1d81T8I8o/oZ8c
YorVIN9BZQcX4VX127HnS9HvJ2C8ushvyiBCUB3KMB5u2jvYryerDnfknO2n
uliwaXQnxyhNDRTnv7ic/JkN7RLvn5daqwHvQjLgLsLz9c/XCLDQ/Q7aOM7i
Qb/vWBY82/e6GsRaPczkRfj7k90qtz9NaqBtIWs2C+Fvl1k/GgJ41Wfwe396
JmeSpQ4b1nembkF8oLB65eBxNL5hc4z71yI+oOeWe+NcF3p/NQUEA/GBhkUq
u1KF1WEW5gPW966I3NdXh1PjO9yefeRAo2yxQ9JltRl+E+vuUHHmkdoMv/G+
mKr567caTK3/Zm7ewYXl5r/inimqgxfmM0c/aQXv264OuUVGhZ6I/7yvqTow
TKrP8J8Vgf1ecm7q0Fy39NOjLhJ2vYt8mdCpBvxJS8NdEf/aUhbPklumDuaY
f6WtHe0WWa8+w78aUhReNQeqQ3ZLjmEc4n+BHr87NdHvHcJ876WfeWroWXXo
yl9altXBhtK5YRN7//m21L+/qd3FARHjFfk9b9RgWVRS/S7ET71X3jNJm68O
zoLdjzMQP9V0f9tgwFUHAYmYU/LtXNj52zOyz0sd8b7/+KWf+EAjlaI+w1fF
r+427clXB+1O01ONiG+ny+yr2rNNHXb0zvstjvizx7zojcoX/s2H//izPlNd
7FytOhzA/HuUt0hcu10dbPB+QaKGyexUjjrUYf5PTHo0F7urQxbm//tz/c42
ZqtDJOb/WY7Bxp8G1Gf2F2i/+DYYoPEJw/sLje28v3rL1cEf7y94V/KknplW
h4AtZYtSX3PgmWnpy7yN6vAs95nCnDYS2gPZa0L81UHTNtqn+hUFV2lCPRKp
6lBEblYsbOZCHO+G6tNt6jP7H/JZt5ayhTXAEu+fBHROnHulpAGflw/273rB
Bb3rz17fG1MHK7w/o7vVU/iwpga44f0dc87xCDEjDWjB+1ehaekuKh/Q+L+k
3vY1oHzN72vXIqkBxni/6fFQ5td7NhpQgPevlut60E09NeDJEmrcuo4Lwuf6
+b+t0YCPeL/LkNyk13tCA6bwflqzSrX88VgNkAFG65Um9LwfBtrV//lG4P29
67d1Sq8s1oBYx97Vts+4sE4gSCFgu8bMft7Qu53lS29qQPa4ST7fUy50JFzV
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

         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.5], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1, 2125}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1, 4248}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2, 1064}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4, 534}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5, 270}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6, 99}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6, 175}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{7, 47}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{7, 73}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{8, 32}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{9, 21}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{10, 16}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{11, 14}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{16, 19}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{21, 27}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{22, 25}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{27, 30}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{32, 40}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{33, 37}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{40, 44}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{47, 63}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{48, 57}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{50, 54}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{51, 53}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{54, 56}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{58, 61}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{63, 69}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{66, 68}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{73, 89}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{74, 75}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{74, 81}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{76, 79}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{82, 86}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{83, 84}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{83, 85}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{86, 88}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{89, 90}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{89, 94}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{90, 91}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{91, 92}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{92, 93}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{94, 95}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{95, 96}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{96, 97}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{96, 98}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{99, 100}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{99, 119}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{99, 154}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{100, 101}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{100, 110}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{101, 102}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{101, 106}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{102, 103}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{103, 104}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{104, 105}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{106, 107}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{107, 108}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{108, 109}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{110, 111}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{110, 115}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{111, 112}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{112, 113}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{113, 114}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{115, 116}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{116, 117}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{117, 118}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{119, 120}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{119, 137}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{120, 121}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{120, 130}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{121, 122}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{121, 126}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{122, 123}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{123, 124}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{123, 125}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{126, 127}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{127, 128}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{127, 129}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{130, 131}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{130, 134}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{131, 132}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{132, 133}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{134, 135}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{135, 136}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{137, 138}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{137, 147}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{138, 139}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{138, 143}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{139, 140}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{140, 141}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{140, 142}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{143, 144}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{144, 145}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{144, 146}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{147, 148}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{147, 151}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{148, 149}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{149, 150}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{151, 152}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{152, 153}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{154, 155}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{154, 165}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{155, 156}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{155, 160}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{156, 157}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{157, 158}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{158, 159}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{160, 161}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{161, 162}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{162, 163}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{162, 164}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{165, 166}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{165, 170}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{166, 167}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{167, 168}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{168, 169}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{170, 171}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{171, 172}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{172, 173}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{172, 174}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{175, 176}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{175, 199}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{175, 225}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{176, 177}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{176, 186}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{177, 178}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{177, 182}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{178, 179}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{179, 180}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{180, 181}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{182, 183}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{183, 184}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{184, 185}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{186, 187}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{186, 193}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{187, 188}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{188, 189}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{188, 191}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{189, 190}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{191, 192}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{193, 194}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{194, 195}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{194, 197}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{195, 196}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{197, 198}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{199, 200}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{199, 210}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{200, 201}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{200, 206}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{201, 202}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{202, 203}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{203, 204}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{203, 205}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{206, 207}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{207, 208}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{208, 209}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{210, 211}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{210, 219}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{211, 212}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{212, 213}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{212, 216}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{213, 214}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{213, 215}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{216, 217}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{216, 218}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{219, 220}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{220, 221}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{220, 223}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{221, 222}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{223, 224}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{225, 226}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{225, 243}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{226, 227}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{226, 234}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{227, 228}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{227, 231}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{228, 229}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{229, 230}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{231, 232}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{232, 233}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{234, 235}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{234, 239}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{235, 236}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{236, 237}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{236, 238}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{239, 240}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{240, 241}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{240, 242}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{243, 244}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{243, 255}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{244, 245}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{244, 250}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{245, 246}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{245, 248}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{246, 247}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{248, 249}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{250, 251}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{250, 253}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{251, 252}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{253, 254}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{255, 256}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{255, 263}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{256, 257}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{256, 260}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{257, 258}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{257, 259}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{260, 261}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{260, 262}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{263, 264}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{263, 267}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{264, 265}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{264, 266}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{267, 268}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{267, 269}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{270, 271}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{270, 366}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{270, 442}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{271, 272}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{271, 317}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{271, 343}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{272, 273}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{272, 300}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{273, 274}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{273, 289}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{274, 275}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{274, 282}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{275, 276}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{275, 279}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{276, 277}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{276, 278}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{279, 280}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{279, 281}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{282, 283}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{282, 286}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{283, 284}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{283, 285}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{286, 287}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{286, 288}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{289, 290}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{289, 295}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{290, 291}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{290, 293}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{291, 292}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{293, 294}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{295, 296}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{295, 298}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{296, 297}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{298, 299}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{300, 301}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{300, 310}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{301, 302}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{301, 306}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{302, 303}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{303, 304}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{303, 305}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{306, 307}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{307, 308}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{307, 309}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{310, 311}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{310, 314}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{311, 312}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{312, 313}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{314, 315}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{315, 316}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{317, 318}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{317, 333}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{318, 319}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{318, 325}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{319, 320}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{320, 321}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{320, 323}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{321, 322}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{323, 324}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{325, 326}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{326, 327}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{326, 330}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{327, 328}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{327, 329}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{330, 331}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{330, 332}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{333, 334}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{333, 338}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{334, 335}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{335, 336}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{336, 337}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{338, 339}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{339, 340}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{340, 341}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{340, 342}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{343, 344}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{343, 357}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{344, 345}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{344, 351}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{345, 346}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{346, 347}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{346, 349}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{347, 348}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{349, 350}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{351, 352}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{352, 353}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{352, 355}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{353, 354}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{355, 356}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{357, 358}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{357, 362}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{358, 359}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{359, 360}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{360, 361}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{362, 363}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{363, 364}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{364, 365}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{366, 367}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{366, 388}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{366, 423}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{367, 368}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{367, 378}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{368, 369}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{368, 374}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{369, 370}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{370, 371}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{371, 372}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{371, 373}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{374, 375}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{375, 376}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{376, 377}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{378, 379}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{378, 384}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{379, 380}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{380, 381}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{381, 382}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{381, 383}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{384, 385}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{385, 386}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{386, 387}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{388, 389}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{388, 406}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{389, 390}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{389, 397}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{390, 391}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{390, 394}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{391, 392}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{392, 393}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{394, 395}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{395, 396}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{397, 398}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{397, 402}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{398, 399}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{399, 400}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{399, 401}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{402, 403}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{403, 404}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{403, 405}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{406, 407}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{406, 414}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{407, 408}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{407, 411}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{408, 409}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{409, 410}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{411, 412}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{412, 413}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{414, 415}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{414, 419}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{415, 416}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{416, 417}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{416, 418}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{419, 420}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{420, 421}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{420, 422}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{423, 424}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{423, 433}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{424, 425}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{424, 429}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{425, 426}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{426, 427}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{427, 428}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{429, 430}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{430, 431}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{431, 432}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{433, 434}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{433, 438}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{434, 435}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{435, 436}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{436, 437}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{438, 439}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{439, 440}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{440, 441}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{442, 443}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{442, 469}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{442, 495}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{443, 444}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{443, 454}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{444, 445}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{444, 450}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{445, 446}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{446, 447}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{447, 448}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{447, 449}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{450, 451}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{451, 452}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{452, 453}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{454, 455}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{454, 463}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{455, 456}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{456, 457}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{456, 460}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{457, 458}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{457, 459}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{460, 461}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{460, 462}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{463, 464}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{464, 465}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{464, 467}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{465, 466}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{467, 468}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{469, 470}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{469, 480}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{470, 471}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{470, 475}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{471, 472}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{472, 473}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{473, 474}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{475, 476}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{476, 477}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{477, 478}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{477, 479}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{480, 481}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{480, 487}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{481, 482}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{482, 483}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{482, 485}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{483, 484}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{485, 486}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{487, 488}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{488, 489}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{488, 492}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{489, 490}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{489, 491}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{492, 493}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{492, 494}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{495, 496}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{495, 511}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{496, 497}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{496, 504}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{497, 498}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{497, 501}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{498, 499}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{499, 500}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{501, 502}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{502, 503}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{504, 505}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{504, 508}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{505, 506}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{506, 507}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{508, 509}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{509, 510}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{511, 512}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{511, 523}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{512, 513}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{512, 518}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{513, 514}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{513, 516}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{514, 515}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{516, 517}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{518, 519}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{518, 521}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{519, 520}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{521, 522}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{523, 524}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{523, 529}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{524, 525}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{524, 527}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{525, 526}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{527, 528}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{529, 530}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{529, 532}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{530, 531}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{532, 533}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{534, 535}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{534, 799}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{535, 536}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{535, 628}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{535, 723}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{536, 537}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{536, 576}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{536, 602}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{537, 538}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{537, 561}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{538, 539}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{538, 550}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{539, 540}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{539, 545}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{540, 541}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{540, 543}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{541, 542}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{543, 544}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{545, 546}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{545, 548}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{546, 547}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{548, 549}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{550, 551}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{550, 556}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{551, 552}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{551, 554}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{552, 553}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{554, 555}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{556, 557}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{556, 559}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{557, 558}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{559, 560}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{561, 562}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{561, 569}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{562, 563}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{562, 566}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{563, 564}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{564, 565}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{566, 567}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{567, 568}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{569, 570}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{569, 573}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{570, 571}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{571, 572}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{573, 574}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{574, 575}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{576, 577}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{576, 592}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{577, 578}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{577, 586}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{578, 579}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{579, 580}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{579, 583}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{580, 581}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{580, 582}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{583, 584}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{583, 585}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{586, 587}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{587, 588}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{587, 590}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{588, 589}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{590, 591}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{592, 593}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{592, 598}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{593, 594}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{594, 595}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{595, 596}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{595, 597}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{598, 599}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{599, 600}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{600, 601}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{602, 603}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{602, 618}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{603, 604}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{603, 610}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{604, 605}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{605, 606}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{605, 608}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{606, 607}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{608, 609}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{610, 611}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{611, 612}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{611, 615}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{612, 613}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{612, 614}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{615, 616}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{615, 617}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{618, 619}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{618, 623}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{619, 620}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{620, 621}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{621, 622}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{623, 624}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{624, 625}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{625, 626}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{625, 627}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{628, 629}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{628, 652}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{628, 697}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{629, 630}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{629, 639}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{630, 631}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{630, 635}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{631, 632}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{632, 633}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{633, 634}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{635, 636}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{636, 637}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{637, 638}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{639, 640}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{639, 646}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{640, 641}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{641, 642}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{641, 644}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{642, 643}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{644, 645}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{646, 647}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{647, 648}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{647, 650}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{648, 649}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{650, 651}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{652, 653}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{652, 670}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{653, 654}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{653, 663}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{654, 655}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{654, 659}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{655, 656}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{656, 657}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{656, 658}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{659, 660}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{660, 661}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{660, 662}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{663, 664}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{663, 667}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{664, 665}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{665, 666}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{667, 668}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{668, 669}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{670, 671}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{670, 686}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{671, 672}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{671, 679}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{672, 673}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{672, 676}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{673, 674}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{673, 675}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{676, 677}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{676, 678}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{679, 680}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{679, 683}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{680, 681}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{680, 682}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{683, 684}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{683, 685}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{686, 687}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{686, 692}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{687, 688}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{687, 690}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{688, 689}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{690, 691}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{692, 693}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{692, 695}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{693, 694}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{695, 696}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{697, 698}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{697, 708}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{698, 699}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{698, 703}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{699, 700}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{700, 701}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{701, 702}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{703, 704}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{704, 705}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{705, 706}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{705, 707}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{708, 709}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{708, 715}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{709, 710}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{710, 711}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{710, 713}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{711, 712}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{713, 714}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{715, 716}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{716, 717}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{716, 720}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{717, 718}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{717, 719}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{720, 721}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{720, 722}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{723, 724}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{723, 743}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{723, 764}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{724, 725}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{724, 734}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{725, 726}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{725, 730}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{726, 727}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{727, 728}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{728, 729}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{730, 731}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{731, 732}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{732, 733}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{734, 735}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{734, 739}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{735, 736}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{736, 737}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{737, 738}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{739, 740}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{740, 741}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{741, 742}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{743, 744}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{743, 754}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{744, 745}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{744, 750}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{745, 746}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{746, 747}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{747, 748}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{747, 749}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{750, 751}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{751, 752}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{752, 753}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{754, 755}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{754, 760}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{755, 756}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{756, 757}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{757, 758}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{757, 759}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{760, 761}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{761, 762}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{762, 763}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{764, 765}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{764, 782}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{765, 766}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{765, 773}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{766, 767}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{766, 770}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{767, 768}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{768, 769}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{770, 771}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{771, 772}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{773, 774}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{773, 778}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{774, 775}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{775, 776}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{775, 777}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{778, 779}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{779, 780}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{779, 781}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{782, 783}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{782, 790}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{783, 784}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{783, 787}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{784, 785}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{785, 786}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{787, 788}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{788, 789}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{790, 791}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{790, 795}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{791, 792}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{792, 793}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{792, 794}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{795, 796}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{796, 797}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{796, 798}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{799, 800}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{799, 895}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{799, 990}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{800, 801}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{800, 846}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{800, 872}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{801, 802}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{801, 829}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{802, 803}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{802, 818}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{803, 804}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{803, 811}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{804, 805}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{804, 808}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{805, 806}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{805, 807}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{808, 809}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{808, 810}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{811, 812}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{811, 815}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{812, 813}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{812, 814}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{815, 816}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{815, 817}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{818, 819}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{818, 824}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{819, 820}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{819, 822}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{820, 821}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{822, 823}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{824, 825}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{824, 827}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{825, 826}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{827, 828}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{829, 830}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{829, 839}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{830, 831}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{830, 835}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{831, 832}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{832, 833}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{832, 834}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{835, 836}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{836, 837}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{836, 838}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{839, 840}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{839, 843}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{840, 841}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{841, 842}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{843, 844}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{844, 845}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{846, 847}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{846, 862}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{847, 848}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{847, 854}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{848, 849}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{849, 850}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{849, 852}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{850, 851}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{852, 853}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{854, 855}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{855, 856}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{855, 859}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{856, 857}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{856, 858}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{859, 860}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{859, 861}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{862, 863}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{862, 867}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{863, 864}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{864, 865}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{865, 866}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{867, 868}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{868, 869}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{869, 870}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{869, 871}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{872, 873}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{872, 886}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{873, 874}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{873, 880}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{874, 875}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{875, 876}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{875, 878}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{876, 877}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{878, 879}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{880, 881}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{881, 882}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{881, 884}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{882, 883}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{884, 885}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{886, 887}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{886, 891}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{887, 888}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{888, 889}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{889, 890}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{891, 892}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{892, 893}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{893, 894}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{895, 896}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{895, 922}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{895, 967}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{896, 897}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{896, 907}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{897, 898}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{897, 903}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{898, 899}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{899, 900}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{900, 901}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{900, 902}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{903, 904}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{904, 905}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{905, 906}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{907, 908}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{907, 916}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{908, 909}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{909, 910}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{909, 913}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{910, 911}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{910, 912}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{913, 914}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{913, 915}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{916, 917}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{917, 918}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{917, 920}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{918, 919}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{920, 921}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{922, 923}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{922, 940}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{923, 924}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{923, 931}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{924, 925}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{924, 928}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{925, 926}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{926, 927}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{928, 929}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{929, 930}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{931, 932}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{931, 936}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{932, 933}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{933, 934}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{933, 935}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{936, 937}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{937, 938}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{937, 939}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{940, 941}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{940, 952}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{941, 942}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{941, 947}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{942, 943}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{942, 945}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{943, 944}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{945, 946}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{947, 948}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{947, 950}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{948, 949}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{950, 951}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{952, 953}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{952, 960}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{953, 954}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{953, 957}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{954, 955}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{954, 956}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{957, 958}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{957, 959}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{960, 961}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{960, 964}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{961, 962}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{961, 963}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{964, 965}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{964, 966}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{967, 968}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{967, 977}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{968, 969}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{968, 973}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{969, 970}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{970, 971}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{971, 972}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{973, 974}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{974, 975}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{975, 976}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{977, 978}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{977, 984}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{978, 979}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{979, 980}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{979, 982}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{980, 981}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{982, 983}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{984, 985}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{985, 986}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{985, 988}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{986, 987}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{988, 989}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{990, 991}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{990, 1012}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{990, 1033}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{991, 992}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{991, 1002}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{992, 993}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{992, 998}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{993, 994}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{994, 995}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{995, 996}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{995, 997}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{998, 999}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{999, 1000}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1000, 1001}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1002, 1003}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1002, 1008}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1003, 1004}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1004, 1005}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1005, 1006}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1005, 1007}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1008, 1009}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1009, 1010}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1010, 1011}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1012, 1013}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1012, 1023}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1013, 1014}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1013, 1018}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1014, 1015}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1015, 1016}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1016, 1017}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1018, 1019}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1019, 1020}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1020, 1021}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1020, 1022}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1023, 1024}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1023, 1028}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1024, 1025}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1025, 1026}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1026, 1027}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1028, 1029}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1029, 1030}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1030, 1031}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1030, 1032}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1033, 1034}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1033, 1049}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1034, 1035}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1034, 1042}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1035, 1036}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1035, 1039}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1036, 1037}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1037, 1038}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1039, 1040}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1040, 1041}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1042, 1043}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1042, 1046}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1043, 1044}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1044, 1045}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1046, 1047}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1047, 1048}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1049, 1050}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1049, 1057}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1050, 1051}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1050, 1054}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1051, 1052}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1052, 1053}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1054, 1055}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1055, 1056}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1057, 1058}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1057, 1061}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1058, 1059}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1059, 1060}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1061, 1062}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1062, 1063}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1064, 1065}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1065, 1066}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1065, 1595}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1066, 1067}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1066, 1331}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1067, 1068}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1067, 1160}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1067, 1236}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1068, 1069}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1068, 1108}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1068, 1134}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1069, 1070}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1069, 1093}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1070, 1071}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1070, 1082}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1071, 1072}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1071, 1077}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1072, 1073}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1072, 1075}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1073, 1074}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1075, 1076}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1077, 1078}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1077, 1080}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1078, 1079}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1080, 1081}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1082, 1083}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1082, 1088}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1083, 1084}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1083, 1086}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1084, 1085}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1086, 1087}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1088, 1089}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1088, 1091}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1089, 1090}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1091, 1092}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1093, 1094}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1093, 1101}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1094, 1095}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1094, 1098}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1095, 1096}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1096, 1097}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1098, 1099}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1099, 1100}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1101, 1102}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1101, 1105}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1102, 1103}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1103, 1104}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1105, 1106}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1106, 1107}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1108, 1109}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1108, 1124}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1109, 1110}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1109, 1118}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1110, 1111}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1111, 1112}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1111, 1115}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1112, 1113}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1112, 1114}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1115, 1116}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1115, 1117}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1118, 1119}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1119, 1120}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1119, 1122}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1120, 1121}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1122, 1123}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1124, 1125}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1124, 1130}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1125, 1126}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1126, 1127}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1127, 1128}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1127, 1129}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1130, 1131}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1131, 1132}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1132, 1133}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1134, 1135}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1134, 1150}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1135, 1136}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1135, 1142}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1136, 1137}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1137, 1138}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1137, 1140}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1138, 1139}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1140, 1141}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1142, 1143}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1143, 1144}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1143, 1147}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1144, 1145}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1144, 1146}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1147, 1148}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1147, 1149}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1150, 1151}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1150, 1155}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1151, 1152}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1152, 1153}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1153, 1154}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1155, 1156}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1156, 1157}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1157, 1158}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1157, 1159}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1160, 1161}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1160, 1180}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1160, 1215}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1161, 1162}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1161, 1171}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1162, 1163}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1162, 1167}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1163, 1164}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1164, 1165}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1165, 1166}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1167, 1168}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1168, 1169}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1169, 1170}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1171, 1172}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1171, 1176}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1172, 1173}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1173, 1174}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1174, 1175}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1176, 1177}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1177, 1178}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1178, 1179}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1180, 1181}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1180, 1198}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1181, 1182}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1181, 1191}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1182, 1183}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1182, 1187}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1183, 1184}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1184, 1185}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1184, 1186}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1187, 1188}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1188, 1189}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1188, 1190}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1191, 1192}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1191, 1195}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1192, 1193}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1193, 1194}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1195, 1196}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1196, 1197}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1198, 1199}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1198, 1208}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1199, 1200}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1199, 1204}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1200, 1201}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1201, 1202}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1201, 1203}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1204, 1205}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1205, 1206}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1205, 1207}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1208, 1209}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1208, 1212}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1209, 1210}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1210, 1211}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1212, 1213}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1213, 1214}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1215, 1216}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1215, 1226}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1216, 1217}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1216, 1221}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1217, 1218}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1218, 1219}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1219, 1220}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1221, 1222}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1222, 1223}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1223, 1224}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1223, 1225}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1226, 1227}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1226, 1231}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1227, 1228}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1228, 1229}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1229, 1230}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1231, 1232}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1232, 1233}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1233, 1234}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1233, 1235}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1236, 1237}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1236, 1260}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1236, 1286}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1237, 1238}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1237, 1247}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1238, 1239}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1238, 1243}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1239, 1240}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1240, 1241}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1241, 1242}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1243, 1244}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1244, 1245}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1245, 1246}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1247, 1248}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1247, 1254}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1248, 1249}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1249, 1250}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1249, 1252}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1250, 1251}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1252, 1253}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1254, 1255}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1255, 1256}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1255, 1258}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1256, 1257}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1258, 1259}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1260, 1261}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1260, 1271}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1261, 1262}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1261, 1267}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1262, 1263}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1263, 1264}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1264, 1265}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1264, 1266}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1267, 1268}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1268, 1269}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1269, 1270}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1271, 1272}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1271, 1280}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1272, 1273}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1273, 1274}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1273, 1277}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1274, 1275}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1274, 1276}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1277, 1278}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1277, 1279}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1280, 1281}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1281, 1282}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1281, 1284}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1282, 1283}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1284, 1285}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1286, 1287}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1286, 1304}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1287, 1288}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1287, 1295}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1288, 1289}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1288, 1292}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1289, 1290}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1290, 1291}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1292, 1293}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1293, 1294}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1295, 1296}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1295, 1300}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1296, 1297}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1297, 1298}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1297, 1299}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1300, 1301}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1301, 1302}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1301, 1303}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1304, 1305}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1304, 1316}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1305, 1306}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1305, 1311}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1306, 1307}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1306, 1309}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1307, 1308}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1309, 1310}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1311, 1312}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1311, 1314}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1312, 1313}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1314, 1315}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1316, 1317}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1316, 1324}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1317, 1318}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1317, 1321}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1318, 1319}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1318, 1320}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1321, 1322}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1321, 1323}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1324, 1325}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1324, 1328}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1325, 1326}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1325, 1327}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1328, 1329}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1328, 1330}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1331, 1332}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1331, 1427}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1331, 1503}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1332, 1333}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1332, 1378}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1332, 1404}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1333, 1334}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1333, 1361}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1334, 1335}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1334, 1350}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1335, 1336}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1335, 1343}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1336, 1337}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1336, 1340}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1337, 1338}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1337, 1339}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1340, 1341}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1340, 1342}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1343, 1344}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1343, 1347}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1344, 1345}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1344, 1346}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1347, 1348}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1347, 1349}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1350, 1351}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1350, 1356}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1351, 1352}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1351, 1354}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1352, 1353}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1354, 1355}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1356, 1357}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1356, 1359}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1357, 1358}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1359, 1360}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1361, 1362}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1361, 1371}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1362, 1363}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1362, 1367}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1363, 1364}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1364, 1365}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1364, 1366}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1367, 1368}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1368, 1369}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1368, 1370}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1371, 1372}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1371, 1375}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1372, 1373}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1373, 1374}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1375, 1376}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1376, 1377}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1378, 1379}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1378, 1394}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1379, 1380}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1379, 1386}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1380, 1381}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1381, 1382}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1381, 1384}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1382, 1383}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1384, 1385}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1386, 1387}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1387, 1388}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1387, 1391}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1388, 1389}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1388, 1390}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1391, 1392}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1391, 1393}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1394, 1395}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1394, 1399}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1395, 1396}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1396, 1397}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1397, 1398}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1399, 1400}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1400, 1401}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1401, 1402}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1401, 1403}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1404, 1405}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1404, 1418}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1405, 1406}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1405, 1412}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1406, 1407}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1407, 1408}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1407, 1410}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1408, 1409}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1410, 1411}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1412, 1413}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1413, 1414}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1413, 1416}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1414, 1415}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1416, 1417}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1418, 1419}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1418, 1423}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1419, 1420}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1420, 1421}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1421, 1422}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1423, 1424}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1424, 1425}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1425, 1426}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1427, 1428}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1427, 1449}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1427, 1484}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1428, 1429}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1428, 1439}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1429, 1430}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1429, 1435}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1430, 1431}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1431, 1432}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1432, 1433}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1432, 1434}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1435, 1436}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1436, 1437}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1437, 1438}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1439, 1440}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1439, 1445}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1440, 1441}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1441, 1442}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1442, 1443}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1442, 1444}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1445, 1446}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1446, 1447}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1447, 1448}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1449, 1450}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1449, 1467}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1450, 1451}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1450, 1458}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1451, 1452}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1451, 1455}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1452, 1453}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1453, 1454}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1455, 1456}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1456, 1457}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1458, 1459}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1458, 1463}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1459, 1460}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1460, 1461}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1460, 1462}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1463, 1464}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1464, 1465}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1464, 1466}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1467, 1468}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1467, 1475}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1468, 1469}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1468, 1472}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1469, 1470}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1470, 1471}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1472, 1473}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1473, 1474}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1475, 1476}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1475, 1480}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1476, 1477}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1477, 1478}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1477, 1479}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1480, 1481}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1481, 1482}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1481, 1483}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1484, 1485}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1484, 1494}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1485, 1486}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1485, 1490}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1486, 1487}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1487, 1488}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1488, 1489}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1490, 1491}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1491, 1492}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1492, 1493}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1494, 1495}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1494, 1499}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1495, 1496}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1496, 1497}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1497, 1498}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1499, 1500}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1500, 1501}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1501, 1502}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1503, 1504}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1503, 1530}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1503, 1556}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1504, 1505}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1504, 1515}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1505, 1506}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1505, 1511}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1506, 1507}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1507, 1508}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1508, 1509}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1508, 1510}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1511, 1512}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1512, 1513}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1513, 1514}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1515, 1516}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1515, 1524}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1516, 1517}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1517, 1518}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1517, 1521}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1518, 1519}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1518, 1520}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1521, 1522}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1521, 1523}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1524, 1525}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1525, 1526}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1525, 1528}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1526, 1527}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1528, 1529}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1530, 1531}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1530, 1541}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1531, 1532}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1531, 1536}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1532, 1533}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1533, 1534}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1534, 1535}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1536, 1537}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1537, 1538}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1538, 1539}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1538, 1540}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1541, 1542}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1541, 1548}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1542, 1543}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1543, 1544}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1543, 1546}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1544, 1545}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1546, 1547}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1548, 1549}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1549, 1550}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1549, 1553}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1550, 1551}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1550, 1552}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1553, 1554}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1553, 1555}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1556, 1557}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1556, 1572}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1557, 1558}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1557, 1565}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1558, 1559}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1558, 1562}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1559, 1560}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1560, 1561}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1562, 1563}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1563, 1564}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1565, 1566}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1565, 1569}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1566, 1567}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1567, 1568}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1569, 1570}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1570, 1571}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1572, 1573}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1572, 1584}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1573, 1574}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1573, 1579}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1574, 1575}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1574, 1577}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1575, 1576}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1577, 1578}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1579, 1580}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1579, 1582}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1580, 1581}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1582, 1583}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1584, 1585}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1584, 1590}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1585, 1586}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1585, 1588}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1586, 1587}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1588, 1589}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1590, 1591}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1590, 1593}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1591, 1592}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1593, 1594}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1595, 1596}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1595, 1860}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1596, 1597}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1596, 1689}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1596, 1784}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1597, 1598}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1597, 1637}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1597, 1663}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1598, 1599}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1598, 1622}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1599, 1600}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1599, 1611}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1600, 1601}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1600, 1606}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1601, 1602}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1601, 1604}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1602, 1603}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1604, 1605}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1606, 1607}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1606, 1609}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1607, 1608}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1609, 1610}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1611, 1612}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1611, 1617}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1612, 1613}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1612, 1615}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1613, 1614}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1615, 1616}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1617, 1618}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1617, 1620}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1618, 1619}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1620, 1621}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1622, 1623}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1622, 1630}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1623, 1624}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1623, 1627}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1624, 1625}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1625, 1626}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1627, 1628}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1628, 1629}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1630, 1631}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1630, 1634}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1631, 1632}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1632, 1633}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1634, 1635}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1635, 1636}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1637, 1638}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1637, 1653}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1638, 1639}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1638, 1647}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1639, 1640}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1640, 1641}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1640, 1644}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1641, 1642}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1641, 1643}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1644, 1645}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1644, 1646}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1647, 1648}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1648, 1649}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1648, 1651}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1649, 1650}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1651, 1652}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1653, 1654}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1653, 1659}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1654, 1655}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1655, 1656}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1656, 1657}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1656, 1658}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1659, 1660}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1660, 1661}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1661, 1662}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1663, 1664}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1663, 1679}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1664, 1665}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1664, 1671}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1665, 1666}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1666, 1667}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1666, 1669}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1667, 1668}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1669, 1670}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1671, 1672}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1672, 1673}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1672, 1676}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1673, 1674}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1673, 1675}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1676, 1677}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1676, 1678}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1679, 1680}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1679, 1684}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1680, 1681}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1681, 1682}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1682, 1683}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1684, 1685}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1685, 1686}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1686, 1687}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1686, 1688}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1689, 1690}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1689, 1713}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1689, 1758}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1690, 1691}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1690, 1700}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1691, 1692}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1691, 1696}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1692, 1693}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1693, 1694}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1694, 1695}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1696, 1697}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1697, 1698}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1698, 1699}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1700, 1701}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1700, 1707}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1701, 1702}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1702, 1703}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1702, 1705}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1703, 1704}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1705, 1706}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1707, 1708}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1708, 1709}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1708, 1711}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1709, 1710}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1711, 1712}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1713, 1714}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1713, 1731}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1714, 1715}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1714, 1724}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1715, 1716}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1715, 1720}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1716, 1717}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1717, 1718}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1717, 1719}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1720, 1721}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1721, 1722}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1721, 1723}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1724, 1725}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1724, 1728}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1725, 1726}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1726, 1727}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1728, 1729}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1729, 1730}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1731, 1732}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1731, 1747}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1732, 1733}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1732, 1740}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1733, 1734}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1733, 1737}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1734, 1735}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1734, 1736}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1737, 1738}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1737, 1739}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1740, 1741}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1740, 1744}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1741, 1742}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1741, 1743}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1744, 1745}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1744, 1746}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1747, 1748}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1747, 1753}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1748, 1749}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1748, 1751}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1749, 1750}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1751, 1752}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1753, 1754}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1753, 1756}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1754, 1755}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1756, 1757}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1758, 1759}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1758, 1769}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1759, 1760}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1759, 1764}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1760, 1761}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1761, 1762}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1762, 1763}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1764, 1765}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1765, 1766}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1766, 1767}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1766, 1768}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1769, 1770}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1769, 1776}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1770, 1771}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1771, 1772}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1771, 1774}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1772, 1773}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1774, 1775}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1776, 1777}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1777, 1778}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1777, 1781}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1778, 1779}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1778, 1780}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1781, 1782}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1781, 1783}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1784, 1785}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1784, 1804}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1784, 1825}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1785, 1786}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1785, 1795}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1786, 1787}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1786, 1791}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1787, 1788}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1788, 1789}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1789, 1790}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1791, 1792}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1792, 1793}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1793, 1794}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1795, 1796}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1795, 1800}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1796, 1797}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1797, 1798}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1798, 1799}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1800, 1801}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1801, 1802}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1802, 1803}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1804, 1805}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1804, 1815}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1805, 1806}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1805, 1811}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1806, 1807}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1807, 1808}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1808, 1809}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1808, 1810}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1811, 1812}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1812, 1813}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1813, 1814}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1815, 1816}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1815, 1821}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1816, 1817}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1817, 1818}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1818, 1819}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1818, 1820}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1821, 1822}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1822, 1823}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1823, 1824}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1825, 1826}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1825, 1843}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1826, 1827}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1826, 1834}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1827, 1828}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1827, 1831}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1828, 1829}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1829, 1830}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1831, 1832}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1832, 1833}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1834, 1835}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1834, 1839}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1835, 1836}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1836, 1837}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1836, 1838}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1839, 1840}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1840, 1841}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1840, 1842}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1843, 1844}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1843, 1851}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1844, 1845}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1844, 1848}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1845, 1846}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1846, 1847}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1848, 1849}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1849, 1850}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1851, 1852}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1851, 1856}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1852, 1853}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1853, 1854}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1853, 1855}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1856, 1857}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1857, 1858}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1857, 1859}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1860, 1861}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1860, 1956}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1860, 2051}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1861, 1862}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1861, 1907}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1861, 1933}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1862, 1863}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1862, 1890}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1863, 1864}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1863, 1879}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1864, 1865}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1864, 1872}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1865, 1866}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1865, 1869}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1866, 1867}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1866, 1868}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1869, 1870}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1869, 1871}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1872, 1873}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1872, 1876}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1873, 1874}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1873, 1875}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1876, 1877}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1876, 1878}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1879, 1880}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1879, 1885}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1880, 1881}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1880, 1883}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1881, 1882}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1883, 1884}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1885, 1886}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1885, 1888}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1886, 1887}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1888, 1889}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1890, 1891}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1890, 1900}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1891, 1892}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1891, 1896}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1892, 1893}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1893, 1894}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1893, 1895}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1896, 1897}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1897, 1898}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1897, 1899}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1900, 1901}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1900, 1904}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1901, 1902}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1902, 1903}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1904, 1905}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1905, 1906}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1907, 1908}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1907, 1923}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1908, 1909}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1908, 1915}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1909, 1910}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1910, 1911}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1910, 1913}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1911, 1912}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1913, 1914}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1915, 1916}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1916, 1917}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1916, 1920}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1917, 1918}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1917, 1919}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1920, 1921}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1920, 1922}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1923, 1924}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1923, 1928}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1924, 1925}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1925, 1926}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1926, 1927}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1928, 1929}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1929, 1930}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1930, 1931}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1930, 1932}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1933, 1934}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1933, 1947}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1934, 1935}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1934, 1941}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1935, 1936}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1936, 1937}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1936, 1939}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1937, 1938}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1939, 1940}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1941, 1942}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1942, 1943}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1942, 1945}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1943, 1944}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1945, 1946}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1947, 1948}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1947, 1952}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1948, 1949}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1949, 1950}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1950, 1951}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1952, 1953}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1953, 1954}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1954, 1955}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1956, 1957}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1956, 1983}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1956, 2028}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1957, 1958}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1957, 1968}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1958, 1959}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1958, 1964}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1959, 1960}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1960, 1961}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1961, 1962}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1961, 1963}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1964, 1965}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1965, 1966}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1966, 1967}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1968, 1969}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1968, 1977}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1969, 1970}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1970, 1971}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1970, 1974}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1971, 1972}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1971, 1973}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1974, 1975}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1974, 1976}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1977, 1978}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1978, 1979}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1978, 1981}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1979, 1980}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1981, 1982}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1983, 1984}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1983, 2001}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1984, 1985}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1984, 1992}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1985, 1986}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1985, 1989}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1986, 1987}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1987, 1988}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1989, 1990}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1990, 1991}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1992, 1993}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1992, 1997}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1993, 1994}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1994, 1995}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1994, 1996}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1997, 1998}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1998, 1999}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{1998, 2000}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2001, 2002}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2001, 2013}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2002, 2003}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2002, 2008}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2003, 2004}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2003, 2006}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2004, 2005}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2006, 2007}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2008, 2009}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2008, 2011}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2009, 2010}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2011, 2012}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2013, 2014}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2013, 2021}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2014, 2015}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2014, 2018}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2015, 2016}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2015, 2017}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2018, 2019}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2018, 2020}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2021, 2022}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2021, 2025}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2022, 2023}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2022, 2024}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2025, 2026}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2025, 2027}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2028, 2029}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2028, 2038}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2029, 2030}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2029, 2034}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2030, 2031}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2031, 2032}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2032, 2033}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2034, 2035}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2035, 2036}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2036, 2037}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2038, 2039}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2038, 2045}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2039, 2040}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2040, 2041}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2040, 2043}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2041, 2042}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2043, 2044}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2045, 2046}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2046, 2047}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2046, 2049}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2047, 2048}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2049, 2050}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2051, 2052}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2051, 2073}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2051, 2094}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2052, 2053}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2052, 2063}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2053, 2054}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2053, 2059}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2054, 2055}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2055, 2056}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2056, 2057}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2056, 2058}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2059, 2060}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2060, 2061}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2061, 2062}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2063, 2064}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2063, 2069}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2064, 2065}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2065, 2066}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2066, 2067}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2066, 2068}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2069, 2070}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2070, 2071}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2071, 2072}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2073, 2074}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2073, 2084}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2074, 2075}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2074, 2079}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2075, 2076}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2076, 2077}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2077, 2078}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2079, 2080}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2080, 2081}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2081, 2082}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2081, 2083}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2084, 2085}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2084, 2089}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2085, 2086}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2086, 2087}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2087, 2088}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2089, 2090}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2090, 2091}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2091, 2092}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2091, 2093}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2094, 2095}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2094, 2110}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2095, 2096}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2095, 2103}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2096, 2097}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2096, 2100}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2097, 2098}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2098, 2099}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2100, 2101}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2101, 2102}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2103, 2104}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2103, 2107}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2104, 2105}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2105, 2106}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2107, 2108}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2108, 2109}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2110, 2111}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2110, 2118}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2111, 2112}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2111, 2115}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2112, 2113}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2113, 2114}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2115, 2116}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2116, 2117}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2118, 2119}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2118, 2122}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2119, 2120}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2120, 2121}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2122, 2123}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2123, 2124}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2125, 2126}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2125, 3187}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2126, 2127}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2127, 2128}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2127, 2657}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2128, 2129}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2128, 2393}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2129, 2130}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2129, 2222}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2129, 2298}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2130, 2131}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2130, 2170}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2130, 2196}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2131, 2132}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2131, 2155}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2132, 2133}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2132, 2144}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2133, 2134}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2133, 2139}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2134, 2135}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2134, 2137}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2135, 2136}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2137, 2138}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2139, 2140}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2139, 2142}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2140, 2141}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2142, 2143}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2144, 2145}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2144, 2150}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2145, 2146}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2145, 2148}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2146, 2147}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2148, 2149}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2150, 2151}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2150, 2153}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2151, 2152}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2153, 2154}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2155, 2156}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2155, 2163}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2156, 2157}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2156, 2160}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2157, 2158}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2158, 2159}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2160, 2161}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2161, 2162}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2163, 2164}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2163, 2167}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2164, 2165}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2165, 2166}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2167, 2168}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2168, 2169}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2170, 2171}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2170, 2186}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2171, 2172}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2171, 2180}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2172, 2173}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2173, 2174}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2173, 2177}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2174, 2175}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2174, 2176}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2177, 2178}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2177, 2179}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2180, 2181}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2181, 2182}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2181, 2184}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2182, 2183}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2184, 2185}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2186, 2187}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2186, 2192}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2187, 2188}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2188, 2189}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2189, 2190}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2189, 2191}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2192, 2193}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2193, 2194}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2194, 2195}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2196, 2197}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2196, 2212}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2197, 2198}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2197, 2204}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2198, 2199}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2199, 2200}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2199, 2202}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2200, 2201}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2202, 2203}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2204, 2205}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2205, 2206}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2205, 2209}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2206, 2207}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2206, 2208}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2209, 2210}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2209, 2211}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2212, 2213}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2212, 2217}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2213, 2214}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2214, 2215}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2215, 2216}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2217, 2218}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2218, 2219}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2219, 2220}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2219, 2221}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2222, 2223}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2222, 2242}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2222, 2277}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2223, 2224}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2223, 2233}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2224, 2225}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2224, 2229}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2225, 2226}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2226, 2227}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2227, 2228}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2229, 2230}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2230, 2231}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2231, 2232}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2233, 2234}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2233, 2238}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2234, 2235}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2235, 2236}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2236, 2237}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2238, 2239}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2239, 2240}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2240, 2241}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2242, 2243}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2242, 2260}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2243, 2244}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2243, 2253}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2244, 2245}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2244, 2249}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2245, 2246}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2246, 2247}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2246, 2248}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2249, 2250}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2250, 2251}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2250, 2252}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2253, 2254}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2253, 2257}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2254, 2255}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2255, 2256}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2257, 2258}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2258, 2259}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2260, 2261}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2260, 2270}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2261, 2262}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2261, 2266}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2262, 2263}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2263, 2264}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2263, 2265}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2266, 2267}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2267, 2268}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2267, 2269}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2270, 2271}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2270, 2274}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2271, 2272}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2272, 2273}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2274, 2275}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2275, 2276}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2277, 2278}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2277, 2288}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2278, 2279}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2278, 2283}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2279, 2280}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2280, 2281}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2281, 2282}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2283, 2284}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2284, 2285}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2285, 2286}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2285, 2287}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2288, 2289}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2288, 2293}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2289, 2290}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2290, 2291}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2291, 2292}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2293, 2294}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2294, 2295}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2295, 2296}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2295, 2297}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2298, 2299}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2298, 2322}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2298, 2348}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2299, 2300}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2299, 2309}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2300, 2301}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2300, 2305}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2301, 2302}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2302, 2303}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2303, 2304}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2305, 2306}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2306, 2307}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2307, 2308}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2309, 2310}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2309, 2316}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2310, 2311}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2311, 2312}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2311, 2314}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2312, 2313}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2314, 2315}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2316, 2317}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2317, 2318}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2317, 2320}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2318, 2319}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2320, 2321}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2322, 2323}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2322, 2333}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2323, 2324}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2323, 2329}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2324, 2325}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2325, 2326}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2326, 2327}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2326, 2328}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2329, 2330}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2330, 2331}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2331, 2332}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2333, 2334}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2333, 2342}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2334, 2335}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2335, 2336}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2335, 2339}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2336, 2337}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2336, 2338}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2339, 2340}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2339, 2341}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2342, 2343}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2343, 2344}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2343, 2346}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2344, 2345}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2346, 2347}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2348, 2349}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2348, 2366}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2349, 2350}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2349, 2357}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2350, 2351}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2350, 2354}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2351, 2352}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2352, 2353}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2354, 2355}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2355, 2356}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2357, 2358}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2357, 2362}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2358, 2359}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2359, 2360}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2359, 2361}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2362, 2363}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2363, 2364}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2363, 2365}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2366, 2367}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2366, 2378}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2367, 2368}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2367, 2373}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2368, 2369}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2368, 2371}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2369, 2370}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2371, 2372}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2373, 2374}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2373, 2376}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2374, 2375}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2376, 2377}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2378, 2379}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2378, 2386}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2379, 2380}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2379, 2383}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2380, 2381}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2380, 2382}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2383, 2384}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2383, 2385}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2386, 2387}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2386, 2390}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2387, 2388}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2387, 2389}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2390, 2391}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2390, 2392}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2393, 2394}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2393, 2489}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2393, 2565}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2394, 2395}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2394, 2440}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2394, 2466}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2395, 2396}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2395, 2423}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2396, 2397}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2396, 2412}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2397, 2398}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2397, 2405}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2398, 2399}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2398, 2402}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2399, 2400}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2399, 2401}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2402, 2403}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2402, 2404}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2405, 2406}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2405, 2409}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2406, 2407}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2406, 2408}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2409, 2410}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2409, 2411}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2412, 2413}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2412, 2418}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2413, 2414}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2413, 2416}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2414, 2415}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2416, 2417}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2418, 2419}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2418, 2421}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2419, 2420}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2421, 2422}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2423, 2424}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2423, 2433}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2424, 2425}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2424, 2429}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2425, 2426}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2426, 2427}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2426, 2428}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2429, 2430}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2430, 2431}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2430, 2432}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2433, 2434}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2433, 2437}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2434, 2435}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2435, 2436}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2437, 2438}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2438, 2439}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2440, 2441}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2440, 2456}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2441, 2442}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2441, 2448}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2442, 2443}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2443, 2444}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2443, 2446}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2444, 2445}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2446, 2447}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2448, 2449}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2449, 2450}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2449, 2453}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2450, 2451}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2450, 2452}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2453, 2454}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2453, 2455}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2456, 2457}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2456, 2461}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2457, 2458}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2458, 2459}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2459, 2460}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2461, 2462}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2462, 2463}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2463, 2464}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2463, 2465}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2466, 2467}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2466, 2480}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2467, 2468}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2467, 2474}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2468, 2469}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2469, 2470}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2469, 2472}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2470, 2471}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2472, 2473}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2474, 2475}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2475, 2476}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2475, 2478}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2476, 2477}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2478, 2479}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2480, 2481}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2480, 2485}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2481, 2482}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2482, 2483}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2483, 2484}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2485, 2486}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2486, 2487}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2487, 2488}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2489, 2490}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2489, 2511}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2489, 2546}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2490, 2491}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2490, 2501}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2491, 2492}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2491, 2497}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2492, 2493}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2493, 2494}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2494, 2495}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2494, 2496}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2497, 2498}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2498, 2499}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2499, 2500}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2501, 2502}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2501, 2507}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2502, 2503}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2503, 2504}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2504, 2505}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2504, 2506}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2507, 2508}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2508, 2509}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2509, 2510}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2511, 2512}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2511, 2529}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2512, 2513}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2512, 2520}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2513, 2514}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2513, 2517}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2514, 2515}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2515, 2516}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2517, 2518}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2518, 2519}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2520, 2521}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2520, 2525}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2521, 2522}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2522, 2523}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2522, 2524}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2525, 2526}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2526, 2527}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2526, 2528}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2529, 2530}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2529, 2537}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2530, 2531}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2530, 2534}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2531, 2532}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2532, 2533}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2534, 2535}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2535, 2536}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2537, 2538}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2537, 2542}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2538, 2539}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2539, 2540}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2539, 2541}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2542, 2543}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2543, 2544}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2543, 2545}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2546, 2547}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2546, 2556}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2547, 2548}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2547, 2552}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2548, 2549}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2549, 2550}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2550, 2551}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2552, 2553}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2553, 2554}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2554, 2555}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2556, 2557}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2556, 2561}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2557, 2558}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2558, 2559}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2559, 2560}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2561, 2562}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2562, 2563}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2563, 2564}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2565, 2566}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2565, 2592}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2565, 2618}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2566, 2567}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2566, 2577}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2567, 2568}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2567, 2573}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2568, 2569}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2569, 2570}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2570, 2571}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2570, 2572}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2573, 2574}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2574, 2575}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2575, 2576}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2577, 2578}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2577, 2586}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2578, 2579}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2579, 2580}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2579, 2583}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2580, 2581}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2580, 2582}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2583, 2584}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2583, 2585}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2586, 2587}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2587, 2588}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2587, 2590}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2588, 2589}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2590, 2591}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2592, 2593}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2592, 2603}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2593, 2594}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2593, 2598}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2594, 2595}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2595, 2596}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2596, 2597}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2598, 2599}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2599, 2600}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2600, 2601}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2600, 2602}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2603, 2604}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2603, 2610}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2604, 2605}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2605, 2606}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2605, 2608}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2606, 2607}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2608, 2609}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2610, 2611}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2611, 2612}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2611, 2615}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2612, 2613}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2612, 2614}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2615, 2616}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2615, 2617}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2618, 2619}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2618, 2634}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2619, 2620}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2619, 2627}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2620, 2621}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2620, 2624}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2621, 2622}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2622, 2623}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2624, 2625}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2625, 2626}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2627, 2628}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2627, 2631}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2628, 2629}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2629, 2630}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2631, 2632}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2632, 2633}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2634, 2635}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2634, 2646}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2635, 2636}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2635, 2641}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2636, 2637}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2636, 2639}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2637, 2638}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2639, 2640}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2641, 2642}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2641, 2644}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2642, 2643}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2644, 2645}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2646, 2647}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2646, 2652}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2647, 2648}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2647, 2650}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2648, 2649}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2650, 2651}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2652, 2653}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2652, 2655}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2653, 2654}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2655, 2656}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2657, 2658}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2657, 2922}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2658, 2659}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2658, 2751}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2658, 2846}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2659, 2660}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2659, 2699}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2659, 2725}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2660, 2661}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2660, 2684}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2661, 2662}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2661, 2673}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2662, 2663}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2662, 2668}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2663, 2664}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2663, 2666}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2664, 2665}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2666, 2667}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2668, 2669}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2668, 2671}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2669, 2670}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2671, 2672}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2673, 2674}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2673, 2679}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2674, 2675}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2674, 2677}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2675, 2676}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2677, 2678}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2679, 2680}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2679, 2682}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2680, 2681}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2682, 2683}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2684, 2685}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2684, 2692}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2685, 2686}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2685, 2689}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2686, 2687}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2687, 2688}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2689, 2690}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2690, 2691}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2692, 2693}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2692, 2696}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2693, 2694}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2694, 2695}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2696, 2697}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2697, 2698}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2699, 2700}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2699, 2715}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2700, 2701}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2700, 2709}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2701, 2702}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2702, 2703}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2702, 2706}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2703, 2704}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2703, 2705}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2706, 2707}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2706, 2708}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2709, 2710}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2710, 2711}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2710, 2713}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2711, 2712}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2713, 2714}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2715, 2716}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2715, 2721}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2716, 2717}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2717, 2718}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2718, 2719}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2718, 2720}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2721, 2722}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2722, 2723}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2723, 2724}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2725, 2726}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2725, 2741}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2726, 2727}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2726, 2733}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2727, 2728}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2728, 2729}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2728, 2731}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2729, 2730}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2731, 2732}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2733, 2734}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2734, 2735}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2734, 2738}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2735, 2736}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2735, 2737}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2738, 2739}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2738, 2740}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2741, 2742}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2741, 2746}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2742, 2743}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2743, 2744}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2744, 2745}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2746, 2747}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2747, 2748}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2748, 2749}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2748, 2750}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2751, 2752}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2751, 2775}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2751, 2820}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2752, 2753}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2752, 2762}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2753, 2754}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2753, 2758}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2754, 2755}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2755, 2756}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2756, 2757}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2758, 2759}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2759, 2760}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2760, 2761}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2762, 2763}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2762, 2769}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2763, 2764}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2764, 2765}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2764, 2767}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2765, 2766}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2767, 2768}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2769, 2770}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2770, 2771}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2770, 2773}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2771, 2772}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2773, 2774}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2775, 2776}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2775, 2793}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2776, 2777}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2776, 2786}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2777, 2778}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2777, 2782}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2778, 2779}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2779, 2780}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2779, 2781}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2782, 2783}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2783, 2784}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2783, 2785}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2786, 2787}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2786, 2790}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2787, 2788}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2788, 2789}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2790, 2791}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2791, 2792}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2793, 2794}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2793, 2809}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2794, 2795}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2794, 2802}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2795, 2796}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2795, 2799}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2796, 2797}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2796, 2798}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2799, 2800}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2799, 2801}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2802, 2803}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2802, 2806}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2803, 2804}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2803, 2805}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2806, 2807}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2806, 2808}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2809, 2810}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2809, 2815}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2810, 2811}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2810, 2813}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2811, 2812}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2813, 2814}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2815, 2816}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2815, 2818}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2816, 2817}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2818, 2819}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2820, 2821}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2820, 2831}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2821, 2822}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2821, 2826}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2822, 2823}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2823, 2824}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2824, 2825}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2826, 2827}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2827, 2828}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2828, 2829}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2828, 2830}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2831, 2832}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2831, 2838}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2832, 2833}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2833, 2834}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2833, 2836}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2834, 2835}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2836, 2837}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2838, 2839}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2839, 2840}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2839, 2843}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2840, 2841}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2840, 2842}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2843, 2844}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2843, 2845}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2846, 2847}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2846, 2866}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2846, 2887}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2847, 2848}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2847, 2857}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2848, 2849}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2848, 2853}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2849, 2850}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2850, 2851}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2851, 2852}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2853, 2854}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2854, 2855}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2855, 2856}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2857, 2858}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2857, 2862}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2858, 2859}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2859, 2860}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2860, 2861}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2862, 2863}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2863, 2864}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2864, 2865}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2866, 2867}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2866, 2877}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2867, 2868}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2867, 2873}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2868, 2869}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2869, 2870}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2870, 2871}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2870, 2872}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2873, 2874}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2874, 2875}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2875, 2876}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2877, 2878}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2877, 2883}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2878, 2879}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2879, 2880}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2880, 2881}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2880, 2882}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2883, 2884}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2884, 2885}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2885, 2886}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2887, 2888}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2887, 2905}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2888, 2889}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2888, 2896}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2889, 2890}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2889, 2893}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2890, 2891}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2891, 2892}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2893, 2894}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2894, 2895}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2896, 2897}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2896, 2901}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2897, 2898}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2898, 2899}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2898, 2900}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2901, 2902}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2902, 2903}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2902, 2904}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2905, 2906}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2905, 2913}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2906, 2907}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2906, 2910}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2907, 2908}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2908, 2909}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2910, 2911}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2911, 2912}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2913, 2914}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2913, 2918}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2914, 2915}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2915, 2916}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2915, 2917}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2918, 2919}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2919, 2920}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2919, 2921}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2922, 2923}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2922, 3018}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2922, 3113}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2923, 2924}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2923, 2969}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2923, 2995}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2924, 2925}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2924, 2952}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2925, 2926}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2925, 2941}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2926, 2927}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2926, 2934}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2927, 2928}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2927, 2931}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2928, 2929}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2928, 2930}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2931, 2932}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2931, 2933}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2934, 2935}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2934, 2938}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2935, 2936}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2935, 2937}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2938, 2939}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2938, 2940}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2941, 2942}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2941, 2947}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2942, 2943}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2942, 2945}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2943, 2944}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2945, 2946}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2947, 2948}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2947, 2950}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2948, 2949}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2950, 2951}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2952, 2953}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2952, 2962}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2953, 2954}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2953, 2958}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2954, 2955}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2955, 2956}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2955, 2957}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2958, 2959}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2959, 2960}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2959, 2961}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2962, 2963}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2962, 2966}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2963, 2964}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2964, 2965}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2966, 2967}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2967, 2968}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2969, 2970}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2969, 2985}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2970, 2971}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2970, 2977}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2971, 2972}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2972, 2973}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2972, 2975}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2973, 2974}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2975, 2976}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2977, 2978}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2978, 2979}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2978, 2982}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2979, 2980}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2979, 2981}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2982, 2983}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2982, 2984}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2985, 2986}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2985, 2990}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2986, 2987}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2987, 2988}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2988, 2989}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2990, 2991}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2991, 2992}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2992, 2993}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2992, 2994}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2995, 2996}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2995, 3009}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2996, 2997}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2996, 3003}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2997, 2998}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2998, 2999}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2998, 3001}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{2999, 3000}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3001, 3002}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3003, 3004}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3004, 3005}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3004, 3007}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3005, 3006}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3007, 3008}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3009, 3010}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3009, 3014}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3010, 3011}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3011, 3012}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3012, 3013}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3014, 3015}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3015, 3016}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3016, 3017}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3018, 3019}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3018, 3045}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3018, 3090}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3019, 3020}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3019, 3030}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3020, 3021}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3020, 3026}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3021, 3022}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3022, 3023}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3023, 3024}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3023, 3025}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3026, 3027}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3027, 3028}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3028, 3029}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3030, 3031}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3030, 3039}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3031, 3032}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3032, 3033}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3032, 3036}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3033, 3034}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3033, 3035}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3036, 3037}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3036, 3038}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3039, 3040}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3040, 3041}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3040, 3043}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3041, 3042}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3043, 3044}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3045, 3046}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3045, 3063}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3046, 3047}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3046, 3054}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3047, 3048}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3047, 3051}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3048, 3049}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3049, 3050}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3051, 3052}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3052, 3053}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3054, 3055}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3054, 3059}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3055, 3056}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3056, 3057}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3056, 3058}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3059, 3060}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3060, 3061}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3060, 3062}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3063, 3064}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3063, 3075}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3064, 3065}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3064, 3070}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3065, 3066}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3065, 3068}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3066, 3067}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3068, 3069}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3070, 3071}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3070, 3073}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3071, 3072}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3073, 3074}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3075, 3076}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3075, 3083}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3076, 3077}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3076, 3080}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3077, 3078}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3077, 3079}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3080, 3081}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3080, 3082}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3083, 3084}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3083, 3087}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3084, 3085}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3084, 3086}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3087, 3088}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3087, 3089}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3090, 3091}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3090, 3100}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3091, 3092}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3091, 3096}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3092, 3093}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3093, 3094}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3094, 3095}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3096, 3097}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3097, 3098}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3098, 3099}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3100, 3101}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3100, 3107}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3101, 3102}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3102, 3103}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3102, 3105}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3103, 3104}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3105, 3106}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3107, 3108}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3108, 3109}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3108, 3111}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3109, 3110}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3111, 3112}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3113, 3114}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3113, 3135}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3113, 3156}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3114, 3115}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3114, 3125}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3115, 3116}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3115, 3121}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3116, 3117}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3117, 3118}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3118, 3119}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3118, 3120}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3121, 3122}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3122, 3123}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3123, 3124}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3125, 3126}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3125, 3131}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3126, 3127}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3127, 3128}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3128, 3129}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3128, 3130}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3131, 3132}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3132, 3133}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3133, 3134}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3135, 3136}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3135, 3146}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3136, 3137}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3136, 3141}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3137, 3138}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3138, 3139}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3139, 3140}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3141, 3142}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3142, 3143}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3143, 3144}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3143, 3145}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3146, 3147}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3146, 3151}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3147, 3148}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3148, 3149}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3149, 3150}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3151, 3152}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3152, 3153}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3153, 3154}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3153, 3155}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3156, 3157}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3156, 3172}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3157, 3158}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3157, 3165}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3158, 3159}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3158, 3162}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3159, 3160}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3160, 3161}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3162, 3163}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3163, 3164}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3165, 3166}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3165, 3169}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3166, 3167}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3167, 3168}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3169, 3170}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3170, 3171}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3172, 3173}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3172, 3180}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3173, 3174}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3173, 3177}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3174, 3175}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3175, 3176}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3177, 3178}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3178, 3179}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3180, 3181}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3180, 3184}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3181, 3182}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3182, 3183}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3184, 3185}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3185, 3186}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3187, 3188}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3188, 3189}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3188, 3719}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3189, 3190}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3189, 3454}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3190, 3191}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3190, 3283}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3190, 3359}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3191, 3192}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3191, 3231}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3191, 3257}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3192, 3193}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3192, 3216}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3193, 3194}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3193, 3205}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3194, 3195}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3194, 3200}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3195, 3196}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3195, 3198}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3196, 3197}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3198, 3199}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3200, 3201}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3200, 3203}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3201, 3202}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3203, 3204}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3205, 3206}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3205, 3211}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3206, 3207}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3206, 3209}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3207, 3208}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3209, 3210}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3211, 3212}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3211, 3214}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3212, 3213}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3214, 3215}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3216, 3217}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3216, 3224}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3217, 3218}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3217, 3221}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3218, 3219}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3219, 3220}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3221, 3222}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3222, 3223}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3224, 3225}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3224, 3228}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3225, 3226}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3226, 3227}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3228, 3229}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3229, 3230}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3231, 3232}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3231, 3247}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3232, 3233}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3232, 3241}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3233, 3234}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3234, 3235}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3234, 3238}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3235, 3236}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3235, 3237}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3238, 3239}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3238, 3240}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3241, 3242}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3242, 3243}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3242, 3245}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3243, 3244}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3245, 3246}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3247, 3248}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3247, 3253}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3248, 3249}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3249, 3250}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3250, 3251}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3250, 3252}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3253, 3254}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3254, 3255}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3255, 3256}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3257, 3258}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3257, 3273}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3258, 3259}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3258, 3265}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3259, 3260}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3260, 3261}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3260, 3263}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3261, 3262}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3263, 3264}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3265, 3266}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3266, 3267}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3266, 3270}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3267, 3268}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3267, 3269}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3270, 3271}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3270, 3272}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3273, 3274}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3273, 3278}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3274, 3275}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3275, 3276}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3276, 3277}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3278, 3279}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3279, 3280}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3280, 3281}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3280, 3282}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3283, 3284}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3283, 3303}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3283, 3338}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3284, 3285}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3284, 3294}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3285, 3286}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3285, 3290}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3286, 3287}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3287, 3288}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3288, 3289}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3290, 3291}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3291, 3292}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3292, 3293}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3294, 3295}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3294, 3299}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3295, 3296}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3296, 3297}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3297, 3298}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3299, 3300}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3300, 3301}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3301, 3302}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3303, 3304}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3303, 3321}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3304, 3305}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3304, 3314}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3305, 3306}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3305, 3310}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3306, 3307}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3307, 3308}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3307, 3309}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3310, 3311}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3311, 3312}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3311, 3313}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3314, 3315}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3314, 3318}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3315, 3316}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3316, 3317}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3318, 3319}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3319, 3320}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3321, 3322}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3321, 3331}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3322, 3323}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3322, 3327}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3323, 3324}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3324, 3325}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3324, 3326}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3327, 3328}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3328, 3329}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3328, 3330}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3331, 3332}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3331, 3335}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3332, 3333}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3333, 3334}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3335, 3336}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3336, 3337}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3338, 3339}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3338, 3349}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3339, 3340}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3339, 3344}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3340, 3341}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3341, 3342}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3342, 3343}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3344, 3345}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3345, 3346}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3346, 3347}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3346, 3348}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3349, 3350}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3349, 3354}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3350, 3351}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3351, 3352}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3352, 3353}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3354, 3355}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3355, 3356}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3356, 3357}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3356, 3358}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3359, 3360}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3359, 3383}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3359, 3409}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3360, 3361}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3360, 3370}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3361, 3362}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3361, 3366}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3362, 3363}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3363, 3364}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3364, 3365}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3366, 3367}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3367, 3368}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3368, 3369}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3370, 3371}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3370, 3377}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3371, 3372}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3372, 3373}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3372, 3375}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3373, 3374}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3375, 3376}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3377, 3378}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3378, 3379}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3378, 3381}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3379, 3380}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3381, 3382}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3383, 3384}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3383, 3394}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3384, 3385}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3384, 3390}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3385, 3386}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3386, 3387}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3387, 3388}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3387, 3389}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3390, 3391}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3391, 3392}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3392, 3393}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3394, 3395}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3394, 3403}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3395, 3396}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3396, 3397}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3396, 3400}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3397, 3398}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3397, 3399}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3400, 3401}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3400, 3402}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3403, 3404}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3404, 3405}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3404, 3407}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3405, 3406}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3407, 3408}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3409, 3410}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3409, 3427}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3410, 3411}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3410, 3418}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3411, 3412}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3411, 3415}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3412, 3413}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3413, 3414}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3415, 3416}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3416, 3417}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3418, 3419}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3418, 3423}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3419, 3420}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3420, 3421}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3420, 3422}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3423, 3424}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3424, 3425}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3424, 3426}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3427, 3428}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3427, 3439}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3428, 3429}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3428, 3434}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3429, 3430}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3429, 3432}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3430, 3431}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3432, 3433}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3434, 3435}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3434, 3437}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3435, 3436}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3437, 3438}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3439, 3440}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3439, 3447}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3440, 3441}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3440, 3444}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3441, 3442}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3441, 3443}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3444, 3445}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3444, 3446}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3447, 3448}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3447, 3451}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3448, 3449}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3448, 3450}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3451, 3452}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3451, 3453}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3454, 3455}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3454, 3550}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3454, 3624}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3455, 3456}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3455, 3501}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3455, 3524}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3456, 3457}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3456, 3484}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3457, 3458}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3457, 3473}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3458, 3459}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3458, 3466}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3459, 3460}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3459, 3463}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3460, 3461}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3460, 3462}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3463, 3464}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3463, 3465}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3466, 3467}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3466, 3470}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3467, 3468}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3467, 3469}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3470, 3471}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3470, 3472}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3473, 3474}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3473, 3479}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3474, 3475}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3474, 3477}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3475, 3476}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3477, 3478}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3479, 3480}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3479, 3482}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3480, 3481}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3482, 3483}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3484, 3485}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3484, 3494}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3485, 3486}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3485, 3490}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3486, 3487}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3487, 3488}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3487, 3489}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3490, 3491}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3491, 3492}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3491, 3493}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3494, 3495}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3494, 3498}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3495, 3496}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3496, 3497}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3498, 3499}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3499, 3500}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3501, 3502}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3501, 3515}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3502, 3503}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3502, 3509}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3503, 3504}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3504, 3505}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3504, 3507}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3505, 3506}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3507, 3508}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3509, 3510}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3510, 3511}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3510, 3513}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3511, 3512}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3513, 3514}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3515, 3516}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3515, 3520}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3516, 3517}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3517, 3518}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3518, 3519}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3520, 3521}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3521, 3522}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3522, 3523}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3524, 3525}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3524, 3540}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3525, 3526}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3525, 3532}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3526, 3527}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3527, 3528}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3527, 3530}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3528, 3529}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3530, 3531}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3532, 3533}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3533, 3534}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3533, 3537}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3534, 3535}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3534, 3536}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3537, 3538}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3537, 3539}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3540, 3541}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3540, 3545}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3541, 3542}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3542, 3543}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3543, 3544}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3545, 3546}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3546, 3547}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3547, 3548}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3547, 3549}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3550, 3551}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3550, 3572}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3550, 3603}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3551, 3552}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3551, 3562}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3552, 3553}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3552, 3558}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3553, 3554}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3554, 3555}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3555, 3556}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3555, 3557}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3558, 3559}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3559, 3560}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3560, 3561}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3562, 3563}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3562, 3568}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3563, 3564}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3564, 3565}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3565, 3566}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3565, 3567}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3568, 3569}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3569, 3570}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3570, 3571}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3572, 3573}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3572, 3588}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3573, 3574}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3573, 3581}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3574, 3575}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3574, 3578}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3575, 3576}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3576, 3577}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3578, 3579}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3579, 3580}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3581, 3582}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3581, 3585}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3582, 3583}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3583, 3584}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3585, 3586}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3586, 3587}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3588, 3589}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3588, 3596}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3589, 3590}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3589, 3593}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3590, 3591}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3591, 3592}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3593, 3594}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3594, 3595}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3596, 3597}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3596, 3600}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3597, 3598}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3598, 3599}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3600, 3601}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3601, 3602}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3603, 3604}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3603, 3614}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3604, 3605}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3604, 3609}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3605, 3606}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3606, 3607}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3607, 3608}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3609, 3610}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3610, 3611}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3611, 3612}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3611, 3613}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3614, 3615}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3614, 3619}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3615, 3616}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3616, 3617}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3617, 3618}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3619, 3620}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3620, 3621}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3621, 3622}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3621, 3623}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3624, 3625}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3624, 3651}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3624, 3674}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3625, 3626}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3625, 3636}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3626, 3627}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3626, 3632}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3627, 3628}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3628, 3629}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3629, 3630}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3629, 3631}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3632, 3633}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3633, 3634}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3634, 3635}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3636, 3637}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3636, 3645}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3637, 3638}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3638, 3639}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3638, 3642}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3639, 3640}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3639, 3641}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3642, 3643}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3642, 3644}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3645, 3646}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3646, 3647}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3646, 3649}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3647, 3648}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3649, 3650}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3651, 3652}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3651, 3661}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3652, 3653}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3652, 3657}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3653, 3654}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3654, 3655}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3655, 3656}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3657, 3658}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3658, 3659}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3659, 3660}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3661, 3662}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3661, 3668}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3662, 3663}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3663, 3664}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3663, 3666}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3664, 3665}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3666, 3667}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3668, 3669}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3669, 3670}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3669, 3672}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3670, 3671}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3672, 3673}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3674, 3675}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3674, 3692}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3675, 3676}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3675, 3683}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3676, 3677}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3676, 3680}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3677, 3678}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3678, 3679}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3680, 3681}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3681, 3682}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3683, 3684}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3683, 3688}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3684, 3685}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3685, 3686}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3685, 3687}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3688, 3689}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3689, 3690}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3689, 3691}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3692, 3693}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3692, 3704}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3693, 3694}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3693, 3699}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3694, 3695}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3694, 3697}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3695, 3696}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3697, 3698}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3699, 3700}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3699, 3702}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3700, 3701}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3702, 3703}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3704, 3705}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3704, 3712}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3705, 3706}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3705, 3709}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3706, 3707}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3706, 3708}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3709, 3710}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3709, 3711}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3712, 3713}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3712, 3716}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3713, 3714}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3713, 3715}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3716, 3717}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3716, 3718}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3719, 3720}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3719, 3984}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3720, 3721}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3720, 3813}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3720, 3908}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3721, 3722}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3721, 3761}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3721, 3787}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3722, 3723}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3722, 3746}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3723, 3724}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3723, 3735}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3724, 3725}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3724, 3730}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3725, 3726}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3725, 3728}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3726, 3727}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3728, 3729}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3730, 3731}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3730, 3733}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3731, 3732}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3733, 3734}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3735, 3736}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3735, 3741}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3736, 3737}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3736, 3739}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3737, 3738}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3739, 3740}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3741, 3742}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3741, 3744}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3742, 3743}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3744, 3745}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3746, 3747}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3746, 3754}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3747, 3748}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3747, 3751}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3748, 3749}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3749, 3750}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3751, 3752}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3752, 3753}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3754, 3755}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3754, 3758}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3755, 3756}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3756, 3757}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3758, 3759}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3759, 3760}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3761, 3762}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3761, 3777}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3762, 3763}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3762, 3771}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3763, 3764}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3764, 3765}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3764, 3768}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3765, 3766}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3765, 3767}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3768, 3769}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3768, 3770}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3771, 3772}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3772, 3773}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3772, 3775}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3773, 3774}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3775, 3776}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3777, 3778}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3777, 3783}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3778, 3779}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3779, 3780}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3780, 3781}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3780, 3782}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3783, 3784}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3784, 3785}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3785, 3786}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3787, 3788}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3787, 3803}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3788, 3789}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3788, 3795}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3789, 3790}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3790, 3791}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3790, 3793}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3791, 3792}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3793, 3794}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3795, 3796}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3796, 3797}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3796, 3800}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3797, 3798}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3797, 3799}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3800, 3801}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3800, 3802}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3803, 3804}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3803, 3808}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3804, 3805}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3805, 3806}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3806, 3807}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3808, 3809}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3809, 3810}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3810, 3811}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3810, 3812}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3813, 3814}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3813, 3837}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3813, 3882}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3814, 3815}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3814, 3824}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3815, 3816}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3815, 3820}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3816, 3817}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3817, 3818}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3818, 3819}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3820, 3821}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3821, 3822}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3822, 3823}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3824, 3825}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3824, 3831}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3825, 3826}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3826, 3827}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3826, 3829}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3827, 3828}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3829, 3830}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3831, 3832}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3832, 3833}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3832, 3835}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3833, 3834}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3835, 3836}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3837, 3838}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3837, 3855}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3838, 3839}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3838, 3848}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3839, 3840}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3839, 3844}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3840, 3841}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3841, 3842}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3841, 3843}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3844, 3845}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3845, 3846}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3845, 3847}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3848, 3849}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3848, 3852}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3849, 3850}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3850, 3851}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3852, 3853}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3853, 3854}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3855, 3856}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3855, 3871}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3856, 3857}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3856, 3864}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3857, 3858}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3857, 3861}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3858, 3859}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3858, 3860}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3861, 3862}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3861, 3863}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3864, 3865}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3864, 3868}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3865, 3866}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3865, 3867}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3868, 3869}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3868, 3870}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3871, 3872}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3871, 3877}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3872, 3873}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3872, 3875}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3873, 3874}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3875, 3876}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3877, 3878}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3877, 3880}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3878, 3879}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3880, 3881}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3882, 3883}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3882, 3893}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3883, 3884}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3883, 3888}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3884, 3885}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3885, 3886}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3886, 3887}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3888, 3889}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3889, 3890}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3890, 3891}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3890, 3892}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3893, 3894}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3893, 3900}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3894, 3895}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3895, 3896}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3895, 3898}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3896, 3897}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3898, 3899}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3900, 3901}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3901, 3902}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3901, 3905}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3902, 3903}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3902, 3904}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3905, 3906}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3905, 3907}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3908, 3909}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3908, 3928}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3908, 3949}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3909, 3910}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3909, 3919}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3910, 3911}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3910, 3915}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3911, 3912}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3912, 3913}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3913, 3914}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3915, 3916}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3916, 3917}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3917, 3918}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3919, 3920}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3919, 3924}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3920, 3921}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3921, 3922}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3922, 3923}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3924, 3925}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3925, 3926}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3926, 3927}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3928, 3929}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3928, 3939}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3929, 3930}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3929, 3935}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3930, 3931}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3931, 3932}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3932, 3933}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3932, 3934}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3935, 3936}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3936, 3937}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3937, 3938}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3939, 3940}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3939, 3945}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3940, 3941}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3941, 3942}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3942, 3943}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3942, 3944}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3945, 3946}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3946, 3947}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3947, 3948}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3949, 3950}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3949, 3967}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3950, 3951}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3950, 3958}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3951, 3952}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3951, 3955}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3952, 3953}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3953, 3954}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3955, 3956}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3956, 3957}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3958, 3959}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3958, 3963}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3959, 3960}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3960, 3961}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3960, 3962}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3963, 3964}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3964, 3965}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3964, 3966}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3967, 3968}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3967, 3975}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3968, 3969}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3968, 3972}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3969, 3970}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3970, 3971}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3972, 3973}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3973, 3974}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3975, 3976}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3975, 3980}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3976, 3977}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3977, 3978}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3977, 3979}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3980, 3981}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3981, 3982}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3981, 3983}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3984, 3985}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3984, 4080}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3984, 4172}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3985, 3986}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3985, 4031}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3985, 4054}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3986, 3987}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3986, 4014}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3987, 3988}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3987, 4003}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3988, 3989}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3988, 3996}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3989, 3990}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3989, 3993}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3990, 3991}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3990, 3992}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3993, 3994}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3993, 3995}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3996, 3997}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3996, 4000}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3997, 3998}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{3997, 3999}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4000, 4001}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4000, 4002}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4003, 4004}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4003, 4009}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4004, 4005}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4004, 4007}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4005, 4006}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4007, 4008}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4009, 4010}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4009, 4012}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4010, 4011}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4012, 4013}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4014, 4015}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4014, 4024}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4015, 4016}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4015, 4020}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4016, 4017}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4017, 4018}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4017, 4019}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4020, 4021}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4021, 4022}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4021, 4023}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4024, 4025}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4024, 4028}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4025, 4026}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4026, 4027}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4028, 4029}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4029, 4030}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4031, 4032}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4031, 4045}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4032, 4033}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4032, 4039}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4033, 4034}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4034, 4035}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4034, 4037}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4035, 4036}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4037, 4038}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4039, 4040}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4040, 4041}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4040, 4043}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4041, 4042}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4043, 4044}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4045, 4046}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4045, 4050}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4046, 4047}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4047, 4048}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4048, 4049}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4050, 4051}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4051, 4052}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4052, 4053}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4054, 4055}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4054, 4070}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4055, 4056}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4055, 4062}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4056, 4057}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4057, 4058}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4057, 4060}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4058, 4059}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4060, 4061}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4062, 4063}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4063, 4064}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4063, 4067}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4064, 4065}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4064, 4066}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4067, 4068}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4067, 4069}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4070, 4071}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4070, 4075}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4071, 4072}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4072, 4073}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4073, 4074}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4075, 4076}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4076, 4077}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4077, 4078}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4077, 4079}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4080, 4081}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4080, 4107}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4080, 4146}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4081, 4082}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4081, 4092}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4082, 4083}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4082, 4088}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4083, 4084}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4084, 4085}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4085, 4086}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4085, 4087}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4088, 4089}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4089, 4090}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4090, 4091}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4092, 4093}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4092, 4101}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4093, 4094}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4094, 4095}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4094, 4098}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4095, 4096}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4095, 4097}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4098, 4099}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4098, 4100}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4101, 4102}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4102, 4103}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4102, 4105}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4103, 4104}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4105, 4106}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4107, 4108}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4107, 4123}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4108, 4109}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4108, 4116}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4109, 4110}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4109, 4113}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4110, 4111}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4111, 4112}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4113, 4114}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4114, 4115}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4116, 4117}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4116, 4120}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4117, 4118}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4118, 4119}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4120, 4121}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4121, 4122}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4123, 4124}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4123, 4135}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4124, 4125}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4124, 4130}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4125, 4126}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4125, 4128}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4126, 4127}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4128, 4129}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4130, 4131}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4130, 4133}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4131, 4132}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4133, 4134}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4135, 4136}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4135, 4141}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4136, 4137}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4136, 4139}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4137, 4138}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4139, 4140}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4141, 4142}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4141, 4144}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4142, 4143}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4144, 4145}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4146, 4147}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4146, 4157}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4147, 4148}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4147, 4152}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4148, 4149}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4149, 4150}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4150, 4151}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4152, 4153}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4153, 4154}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4154, 4155}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4154, 4156}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4157, 4158}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4157, 4164}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4158, 4159}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4159, 4160}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4159, 4162}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4160, 4161}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4162, 4163}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4164, 4165}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4165, 4166}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4165, 4169}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4166, 4167}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4166, 4168}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4169, 4170}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4169, 4171}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4172, 4173}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4172, 4194}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4172, 4213}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4173, 4174}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4173, 4184}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4174, 4175}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4174, 4180}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4175, 4176}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4176, 4177}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4177, 4178}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4177, 4179}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4180, 4181}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4181, 4182}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4182, 4183}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4184, 4185}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4184, 4190}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4185, 4186}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4186, 4187}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4187, 4188}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4187, 4189}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4190, 4191}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4191, 4192}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4192, 4193}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4194, 4195}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4194, 4204}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4195, 4196}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4195, 4200}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4196, 4197}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4197, 4198}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4198, 4199}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4200, 4201}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4201, 4202}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4202, 4203}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4204, 4205}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4204, 4209}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4205, 4206}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4206, 4207}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4207, 4208}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4209, 4210}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4210, 4211}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4211, 4212}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4213, 4214}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4213, 4231}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4214, 4215}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4214, 4222}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4215, 4216}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4215, 4219}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4216, 4217}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4217, 4218}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4219, 4220}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4220, 4221}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4222, 4223}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4222, 4227}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4223, 4224}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4224, 4225}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4224, 4226}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4227, 4228}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4228, 4229}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4228, 4230}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4231, 4232}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4231, 4239}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4232, 4233}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4232, 4236}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4233, 4234}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4234, 4235}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4236, 4237}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4237, 4238}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4239, 4240}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4239, 4244}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4240, 4241}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4241, 4242}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4241, 4243}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4244, 4245}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4245, 4246}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4245, 4247}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4248, 4249}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4248, 5310}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4249, 4250}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4250, 4251}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4250, 4781}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4251, 4252}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4251, 4516}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4252, 4253}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4252, 4345}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4252, 4421}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4253, 4254}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4253, 4293}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4253, 4319}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4254, 4255}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4254, 4278}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4255, 4256}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4255, 4267}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4256, 4257}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4256, 4262}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4257, 4258}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4257, 4260}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4258, 4259}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4260, 4261}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4262, 4263}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4262, 4265}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4263, 4264}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4265, 4266}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4267, 4268}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4267, 4273}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4268, 4269}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4268, 4271}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4269, 4270}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4271, 4272}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4273, 4274}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4273, 4276}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4274, 4275}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4276, 4277}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4278, 4279}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4278, 4286}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4279, 4280}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4279, 4283}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4280, 4281}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4281, 4282}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4283, 4284}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4284, 4285}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4286, 4287}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4286, 4290}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4287, 4288}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4288, 4289}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4290, 4291}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4291, 4292}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4293, 4294}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4293, 4309}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4294, 4295}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4294, 4303}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4295, 4296}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4296, 4297}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4296, 4300}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4297, 4298}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4297, 4299}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4300, 4301}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4300, 4302}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4303, 4304}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4304, 4305}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4304, 4307}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4305, 4306}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4307, 4308}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4309, 4310}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4309, 4315}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4310, 4311}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4311, 4312}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4312, 4313}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4312, 4314}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4315, 4316}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4316, 4317}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4317, 4318}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4319, 4320}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4319, 4335}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4320, 4321}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4320, 4327}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4321, 4322}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4322, 4323}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4322, 4325}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4323, 4324}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4325, 4326}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4327, 4328}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4328, 4329}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4328, 4332}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4329, 4330}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4329, 4331}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4332, 4333}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4332, 4334}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4335, 4336}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4335, 4340}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4336, 4337}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4337, 4338}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4338, 4339}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4340, 4341}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4341, 4342}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4342, 4343}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4342, 4344}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4345, 4346}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4345, 4365}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4345, 4400}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4346, 4347}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4346, 4356}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4347, 4348}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4347, 4352}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4348, 4349}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4349, 4350}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4350, 4351}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4352, 4353}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4353, 4354}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4354, 4355}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4356, 4357}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4356, 4361}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4357, 4358}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4358, 4359}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4359, 4360}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4361, 4362}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4362, 4363}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4363, 4364}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4365, 4366}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4365, 4383}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4366, 4367}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4366, 4376}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4367, 4368}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4367, 4372}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4368, 4369}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4369, 4370}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4369, 4371}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4372, 4373}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4373, 4374}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4373, 4375}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4376, 4377}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4376, 4380}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4377, 4378}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4378, 4379}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4380, 4381}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4381, 4382}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4383, 4384}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4383, 4393}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4384, 4385}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4384, 4389}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4385, 4386}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4386, 4387}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4386, 4388}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4389, 4390}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4390, 4391}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4390, 4392}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4393, 4394}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4393, 4397}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4394, 4395}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4395, 4396}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4397, 4398}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4398, 4399}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4400, 4401}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4400, 4411}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4401, 4402}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4401, 4406}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4402, 4403}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4403, 4404}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4404, 4405}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4406, 4407}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4407, 4408}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4408, 4409}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4408, 4410}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4411, 4412}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4411, 4416}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4412, 4413}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4413, 4414}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4414, 4415}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4416, 4417}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4417, 4418}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4418, 4419}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4418, 4420}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4421, 4422}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4421, 4445}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4421, 4471}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4422, 4423}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4422, 4432}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4423, 4424}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4423, 4428}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4424, 4425}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4425, 4426}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4426, 4427}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4428, 4429}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4429, 4430}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4430, 4431}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4432, 4433}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4432, 4439}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4433, 4434}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4434, 4435}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4434, 4437}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4435, 4436}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4437, 4438}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4439, 4440}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4440, 4441}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4440, 4443}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4441, 4442}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4443, 4444}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4445, 4446}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4445, 4456}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4446, 4447}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4446, 4452}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4447, 4448}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4448, 4449}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4449, 4450}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4449, 4451}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4452, 4453}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4453, 4454}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4454, 4455}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4456, 4457}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4456, 4465}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4457, 4458}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4458, 4459}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4458, 4462}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4459, 4460}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4459, 4461}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4462, 4463}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4462, 4464}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4465, 4466}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4466, 4467}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4466, 4469}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4467, 4468}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4469, 4470}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4471, 4472}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4471, 4489}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4472, 4473}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4472, 4480}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4473, 4474}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4473, 4477}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4474, 4475}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4475, 4476}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4477, 4478}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4478, 4479}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4480, 4481}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4480, 4485}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4481, 4482}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4482, 4483}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4482, 4484}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4485, 4486}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4486, 4487}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4486, 4488}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4489, 4490}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4489, 4501}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4490, 4491}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4490, 4496}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4491, 4492}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4491, 4494}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4492, 4493}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4494, 4495}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4496, 4497}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4496, 4499}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4497, 4498}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4499, 4500}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4501, 4502}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4501, 4509}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4502, 4503}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4502, 4506}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4503, 4504}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4503, 4505}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4506, 4507}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4506, 4508}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4509, 4510}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4509, 4513}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4510, 4511}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4510, 4512}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4513, 4514}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4513, 4515}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4516, 4517}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4516, 4612}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4516, 4686}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4517, 4518}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4517, 4563}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4517, 4586}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4518, 4519}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4518, 4546}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4519, 4520}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4519, 4535}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4520, 4521}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4520, 4528}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4521, 4522}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4521, 4525}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4522, 4523}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4522, 4524}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4525, 4526}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4525, 4527}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4528, 4529}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4528, 4532}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4529, 4530}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4529, 4531}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4532, 4533}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4532, 4534}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4535, 4536}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4535, 4541}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4536, 4537}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4536, 4539}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4537, 4538}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4539, 4540}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4541, 4542}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4541, 4544}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4542, 4543}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4544, 4545}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4546, 4547}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4546, 4556}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4547, 4548}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4547, 4552}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4548, 4549}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4549, 4550}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4549, 4551}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4552, 4553}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4553, 4554}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4553, 4555}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4556, 4557}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4556, 4560}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4557, 4558}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4558, 4559}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4560, 4561}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4561, 4562}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4563, 4564}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4563, 4577}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4564, 4565}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4564, 4571}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4565, 4566}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4566, 4567}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4566, 4569}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4567, 4568}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4569, 4570}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4571, 4572}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4572, 4573}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4572, 4575}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4573, 4574}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4575, 4576}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4577, 4578}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4577, 4582}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4578, 4579}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4579, 4580}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4580, 4581}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4582, 4583}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4583, 4584}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4584, 4585}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4586, 4587}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4586, 4602}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4587, 4588}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4587, 4594}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4588, 4589}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4589, 4590}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4589, 4592}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4590, 4591}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4592, 4593}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4594, 4595}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4595, 4596}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4595, 4599}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4596, 4597}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4596, 4598}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4599, 4600}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4599, 4601}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4602, 4603}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4602, 4607}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4603, 4604}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4604, 4605}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4605, 4606}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4607, 4608}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4608, 4609}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4609, 4610}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4609, 4611}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4612, 4613}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4612, 4634}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4612, 4665}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4613, 4614}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4613, 4624}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4614, 4615}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4614, 4620}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4615, 4616}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4616, 4617}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4617, 4618}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4617, 4619}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4620, 4621}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4621, 4622}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4622, 4623}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4624, 4625}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4624, 4630}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4625, 4626}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4626, 4627}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4627, 4628}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4627, 4629}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4630, 4631}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4631, 4632}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4632, 4633}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4634, 4635}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4634, 4650}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4635, 4636}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4635, 4643}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4636, 4637}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4636, 4640}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4637, 4638}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4638, 4639}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4640, 4641}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4641, 4642}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4643, 4644}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4643, 4647}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4644, 4645}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4645, 4646}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4647, 4648}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4648, 4649}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4650, 4651}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4650, 4658}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4651, 4652}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4651, 4655}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4652, 4653}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4653, 4654}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4655, 4656}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4656, 4657}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4658, 4659}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4658, 4662}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4659, 4660}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4660, 4661}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4662, 4663}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4663, 4664}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4665, 4666}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4665, 4676}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4666, 4667}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4666, 4671}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4667, 4668}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4668, 4669}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4669, 4670}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4671, 4672}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4672, 4673}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4673, 4674}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4673, 4675}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4676, 4677}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4676, 4681}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4677, 4678}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4678, 4679}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4679, 4680}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4681, 4682}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4682, 4683}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4683, 4684}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4683, 4685}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4686, 4687}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4686, 4713}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4686, 4736}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4687, 4688}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4687, 4698}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4688, 4689}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4688, 4694}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4689, 4690}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4690, 4691}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4691, 4692}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4691, 4693}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4694, 4695}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4695, 4696}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4696, 4697}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4698, 4699}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4698, 4707}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4699, 4700}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4700, 4701}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4700, 4704}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4701, 4702}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4701, 4703}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4704, 4705}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4704, 4706}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4707, 4708}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4708, 4709}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4708, 4711}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4709, 4710}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4711, 4712}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4713, 4714}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4713, 4723}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4714, 4715}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4714, 4719}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4715, 4716}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4716, 4717}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4717, 4718}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4719, 4720}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4720, 4721}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4721, 4722}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4723, 4724}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4723, 4730}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4724, 4725}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4725, 4726}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4725, 4728}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4726, 4727}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4728, 4729}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4730, 4731}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4731, 4732}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4731, 4734}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4732, 4733}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4734, 4735}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4736, 4737}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4736, 4754}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4737, 4738}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4737, 4745}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4738, 4739}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4738, 4742}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4739, 4740}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4740, 4741}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4742, 4743}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4743, 4744}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4745, 4746}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4745, 4750}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4746, 4747}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4747, 4748}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4747, 4749}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4750, 4751}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4751, 4752}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4751, 4753}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4754, 4755}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4754, 4766}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4755, 4756}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4755, 4761}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4756, 4757}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4756, 4759}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4757, 4758}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4759, 4760}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4761, 4762}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4761, 4764}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4762, 4763}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4764, 4765}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4766, 4767}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4766, 4774}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4767, 4768}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4767, 4771}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4768, 4769}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4768, 4770}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4771, 4772}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4771, 4773}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4774, 4775}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4774, 4778}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4775, 4776}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4775, 4777}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4778, 4779}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4778, 4780}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4781, 4782}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4781, 5046}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4782, 4783}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4782, 4875}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4782, 4970}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4783, 4784}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4783, 4823}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4783, 4849}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4784, 4785}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4784, 4808}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4785, 4786}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4785, 4797}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4786, 4787}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4786, 4792}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4787, 4788}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4787, 4790}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4788, 4789}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4790, 4791}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4792, 4793}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4792, 4795}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4793, 4794}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4795, 4796}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4797, 4798}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4797, 4803}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4798, 4799}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4798, 4801}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4799, 4800}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4801, 4802}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4803, 4804}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4803, 4806}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4804, 4805}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4806, 4807}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4808, 4809}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4808, 4816}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4809, 4810}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4809, 4813}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4810, 4811}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4811, 4812}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4813, 4814}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4814, 4815}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4816, 4817}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4816, 4820}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4817, 4818}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4818, 4819}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4820, 4821}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4821, 4822}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4823, 4824}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4823, 4839}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4824, 4825}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4824, 4833}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4825, 4826}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4826, 4827}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4826, 4830}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4827, 4828}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4827, 4829}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4830, 4831}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4830, 4832}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4833, 4834}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4834, 4835}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4834, 4837}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4835, 4836}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4837, 4838}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4839, 4840}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4839, 4845}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4840, 4841}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4841, 4842}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4842, 4843}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4842, 4844}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4845, 4846}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4846, 4847}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4847, 4848}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4849, 4850}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4849, 4865}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4850, 4851}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4850, 4857}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4851, 4852}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4852, 4853}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4852, 4855}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4853, 4854}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4855, 4856}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4857, 4858}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4858, 4859}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4858, 4862}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4859, 4860}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4859, 4861}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4862, 4863}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4862, 4864}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4865, 4866}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4865, 4870}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4866, 4867}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4867, 4868}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4868, 4869}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4870, 4871}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4871, 4872}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4872, 4873}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4872, 4874}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4875, 4876}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4875, 4899}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4875, 4944}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4876, 4877}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4876, 4886}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4877, 4878}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4877, 4882}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4878, 4879}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4879, 4880}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4880, 4881}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4882, 4883}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4883, 4884}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4884, 4885}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4886, 4887}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4886, 4893}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4887, 4888}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4888, 4889}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4888, 4891}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4889, 4890}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4891, 4892}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4893, 4894}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4894, 4895}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4894, 4897}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4895, 4896}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4897, 4898}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4899, 4900}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4899, 4917}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4900, 4901}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4900, 4910}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4901, 4902}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4901, 4906}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4902, 4903}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4903, 4904}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4903, 4905}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4906, 4907}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4907, 4908}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4907, 4909}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4910, 4911}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4910, 4914}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4911, 4912}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4912, 4913}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4914, 4915}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4915, 4916}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4917, 4918}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4917, 4933}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4918, 4919}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4918, 4926}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4919, 4920}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4919, 4923}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4920, 4921}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4920, 4922}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4923, 4924}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4923, 4925}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4926, 4927}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4926, 4930}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4927, 4928}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4927, 4929}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4930, 4931}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4930, 4932}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4933, 4934}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4933, 4939}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4934, 4935}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4934, 4937}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4935, 4936}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4937, 4938}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4939, 4940}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4939, 4942}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4940, 4941}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4942, 4943}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4944, 4945}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4944, 4955}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4945, 4946}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4945, 4950}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4946, 4947}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4947, 4948}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4948, 4949}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4950, 4951}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4951, 4952}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4952, 4953}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4952, 4954}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4955, 4956}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4955, 4962}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4956, 4957}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4957, 4958}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4957, 4960}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4958, 4959}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4960, 4961}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4962, 4963}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4963, 4964}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4963, 4967}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4964, 4965}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4964, 4966}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4967, 4968}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4967, 4969}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4970, 4971}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4970, 4990}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4970, 5011}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4971, 4972}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4971, 4981}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4972, 4973}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4972, 4977}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4973, 4974}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4974, 4975}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4975, 4976}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4977, 4978}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4978, 4979}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4979, 4980}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4981, 4982}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4981, 4986}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4982, 4983}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4983, 4984}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4984, 4985}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4986, 4987}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4987, 4988}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4988, 4989}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4990, 4991}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4990, 5001}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4991, 4992}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4991, 4997}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4992, 4993}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4993, 4994}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4994, 4995}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4994, 4996}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4997, 4998}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4998, 4999}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{4999, 5000}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5001, 5002}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5001, 5007}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5002, 5003}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5003, 5004}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5004, 5005}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5004, 5006}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5007, 5008}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5008, 5009}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5009, 5010}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5011, 5012}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5011, 5029}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5012, 5013}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5012, 5020}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5013, 5014}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5013, 5017}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5014, 5015}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5015, 5016}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5017, 5018}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5018, 5019}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5020, 5021}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5020, 5025}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5021, 5022}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5022, 5023}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5022, 5024}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5025, 5026}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5026, 5027}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5026, 5028}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5029, 5030}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5029, 5037}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5030, 5031}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5030, 5034}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5031, 5032}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5032, 5033}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5034, 5035}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5035, 5036}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5037, 5038}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5037, 5042}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5038, 5039}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5039, 5040}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5039, 5041}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5042, 5043}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5043, 5044}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5043, 5045}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5046, 5047}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5046, 5142}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5046, 5234}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5047, 5048}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5047, 5093}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5047, 5116}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5048, 5049}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5048, 5076}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5049, 5050}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5049, 5065}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5050, 5051}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5050, 5058}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5051, 5052}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5051, 5055}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5052, 5053}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5052, 5054}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5055, 5056}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5055, 5057}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5058, 5059}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5058, 5062}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5059, 5060}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5059, 5061}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5062, 5063}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5062, 5064}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5065, 5066}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5065, 5071}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5066, 5067}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5066, 5069}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5067, 5068}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5069, 5070}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5071, 5072}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5071, 5074}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5072, 5073}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5074, 5075}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5076, 5077}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5076, 5086}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5077, 5078}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5077, 5082}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5078, 5079}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5079, 5080}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5079, 5081}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5082, 5083}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5083, 5084}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5083, 5085}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5086, 5087}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5086, 5090}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5087, 5088}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5088, 5089}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5090, 5091}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5091, 5092}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5093, 5094}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5093, 5107}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5094, 5095}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5094, 5101}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5095, 5096}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5096, 5097}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5096, 5099}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5097, 5098}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5099, 5100}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5101, 5102}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5102, 5103}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5102, 5105}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5103, 5104}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5105, 5106}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5107, 5108}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5107, 5112}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5108, 5109}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5109, 5110}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5110, 5111}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5112, 5113}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5113, 5114}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5114, 5115}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5116, 5117}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5116, 5132}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5117, 5118}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5117, 5124}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5118, 5119}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5119, 5120}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5119, 5122}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5120, 5121}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5122, 5123}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5124, 5125}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5125, 5126}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5125, 5129}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5126, 5127}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5126, 5128}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5129, 5130}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5129, 5131}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5132, 5133}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5132, 5137}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5133, 5134}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5134, 5135}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5135, 5136}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5137, 5138}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5138, 5139}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5139, 5140}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5139, 5141}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5142, 5143}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5142, 5169}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5142, 5208}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5143, 5144}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5143, 5154}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5144, 5145}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5144, 5150}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5145, 5146}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5146, 5147}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5147, 5148}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5147, 5149}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5150, 5151}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5151, 5152}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5152, 5153}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5154, 5155}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5154, 5163}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5155, 5156}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5156, 5157}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5156, 5160}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5157, 5158}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5157, 5159}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5160, 5161}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5160, 5162}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5163, 5164}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5164, 5165}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5164, 5167}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5165, 5166}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5167, 5168}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5169, 5170}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5169, 5185}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5170, 5171}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5170, 5178}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5171, 5172}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5171, 5175}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5172, 5173}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5173, 5174}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5175, 5176}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5176, 5177}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5178, 5179}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5178, 5182}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5179, 5180}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5180, 5181}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5182, 5183}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5183, 5184}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5185, 5186}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5185, 5197}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5186, 5187}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5186, 5192}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5187, 5188}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5187, 5190}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5188, 5189}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5190, 5191}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5192, 5193}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5192, 5195}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5193, 5194}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5195, 5196}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5197, 5198}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5197, 5203}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5198, 5199}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5198, 5201}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5199, 5200}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5201, 5202}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5203, 5204}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5203, 5206}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5204, 5205}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5206, 5207}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5208, 5209}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5208, 5219}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5209, 5210}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5209, 5214}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5210, 5211}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5211, 5212}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5212, 5213}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5214, 5215}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5215, 5216}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5216, 5217}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5216, 5218}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5219, 5220}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5219, 5226}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5220, 5221}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5221, 5222}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5221, 5224}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5222, 5223}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5224, 5225}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5226, 5227}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5227, 5228}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5227, 5231}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5228, 5229}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5228, 5230}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5231, 5232}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5231, 5233}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5234, 5235}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5234, 5256}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5234, 5275}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5235, 5236}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5235, 5246}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5236, 5237}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5236, 5242}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5237, 5238}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5238, 5239}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5239, 5240}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5239, 5241}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5242, 5243}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5243, 5244}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5244, 5245}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5246, 5247}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5246, 5252}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5247, 5248}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5248, 5249}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5249, 5250}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5249, 5251}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5252, 5253}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5253, 5254}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5254, 5255}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5256, 5257}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5256, 5266}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5257, 5258}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5257, 5262}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5258, 5259}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5259, 5260}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5260, 5261}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5262, 5263}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5263, 5264}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5264, 5265}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5266, 5267}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5266, 5271}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5267, 5268}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5268, 5269}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5269, 5270}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5271, 5272}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5272, 5273}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5273, 5274}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5275, 5276}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5275, 5293}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5276, 5277}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5276, 5284}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5277, 5278}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5277, 5281}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5278, 5279}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5279, 5280}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5281, 5282}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5282, 5283}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5284, 5285}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5284, 5289}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5285, 5286}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5286, 5287}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5286, 5288}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5289, 5290}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5290, 5291}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5290, 5292}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5293, 5294}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5293, 5301}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5294, 5295}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5294, 5298}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5295, 5296}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5296, 5297}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5298, 5299}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5299, 5300}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5301, 5302}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5301, 5306}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5302, 5303}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5303, 5304}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5303, 5305}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5306, 5307}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5307, 5308}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5307, 5309}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5310, 5311}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5311, 5312}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5311, 5842}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5312, 5313}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5312, 5577}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5313, 5314}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5313, 5406}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5313, 5482}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5314, 5315}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5314, 5354}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5314, 5380}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5315, 5316}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5315, 5339}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5316, 5317}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5316, 5328}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5317, 5318}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5317, 5323}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5318, 5319}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5318, 5321}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5319, 5320}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5321, 5322}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5323, 5324}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5323, 5326}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5324, 5325}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5326, 5327}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5328, 5329}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5328, 5334}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5329, 5330}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5329, 5332}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5330, 5331}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5332, 5333}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5334, 5335}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5334, 5337}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5335, 5336}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5337, 5338}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5339, 5340}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5339, 5347}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5340, 5341}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5340, 5344}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5341, 5342}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5342, 5343}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5344, 5345}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5345, 5346}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5347, 5348}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5347, 5351}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5348, 5349}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5349, 5350}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5351, 5352}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5352, 5353}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5354, 5355}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5354, 5370}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5355, 5356}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5355, 5364}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5356, 5357}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5357, 5358}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5357, 5361}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5358, 5359}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5358, 5360}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5361, 5362}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5361, 5363}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5364, 5365}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5365, 5366}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5365, 5368}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5366, 5367}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5368, 5369}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5370, 5371}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5370, 5376}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5371, 5372}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5372, 5373}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5373, 5374}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5373, 5375}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5376, 5377}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5377, 5378}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5378, 5379}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5380, 5381}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5380, 5396}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5381, 5382}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5381, 5388}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5382, 5383}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5383, 5384}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5383, 5386}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5384, 5385}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5386, 5387}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5388, 5389}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5389, 5390}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5389, 5393}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5390, 5391}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5390, 5392}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5393, 5394}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5393, 5395}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5396, 5397}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5396, 5401}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5397, 5398}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5398, 5399}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5399, 5400}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5401, 5402}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5402, 5403}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5403, 5404}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5403, 5405}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5406, 5407}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5406, 5426}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5406, 5461}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5407, 5408}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5407, 5417}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5408, 5409}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5408, 5413}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5409, 5410}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5410, 5411}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5411, 5412}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5413, 5414}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5414, 5415}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5415, 5416}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5417, 5418}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5417, 5422}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5418, 5419}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5419, 5420}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5420, 5421}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5422, 5423}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5423, 5424}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5424, 5425}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5426, 5427}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5426, 5444}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5427, 5428}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5427, 5437}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5428, 5429}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5428, 5433}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5429, 5430}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5430, 5431}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5430, 5432}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5433, 5434}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5434, 5435}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5434, 5436}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5437, 5438}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5437, 5441}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5438, 5439}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5439, 5440}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5441, 5442}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5442, 5443}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5444, 5445}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5444, 5454}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5445, 5446}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5445, 5450}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5446, 5447}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5447, 5448}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5447, 5449}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5450, 5451}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5451, 5452}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5451, 5453}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5454, 5455}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5454, 5458}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5455, 5456}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5456, 5457}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5458, 5459}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5459, 5460}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5461, 5462}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5461, 5472}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5462, 5463}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5462, 5467}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5463, 5464}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5464, 5465}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5465, 5466}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5467, 5468}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5468, 5469}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5469, 5470}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5469, 5471}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5472, 5473}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5472, 5477}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5473, 5474}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5474, 5475}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5475, 5476}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5477, 5478}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5478, 5479}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5479, 5480}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5479, 5481}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5482, 5483}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5482, 5506}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5482, 5532}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5483, 5484}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5483, 5493}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5484, 5485}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5484, 5489}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5485, 5486}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5486, 5487}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5487, 5488}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5489, 5490}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5490, 5491}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5491, 5492}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5493, 5494}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5493, 5500}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5494, 5495}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5495, 5496}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5495, 5498}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5496, 5497}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5498, 5499}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5500, 5501}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5501, 5502}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5501, 5504}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5502, 5503}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5504, 5505}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5506, 5507}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5506, 5517}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5507, 5508}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5507, 5513}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5508, 5509}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5509, 5510}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5510, 5511}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5510, 5512}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5513, 5514}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5514, 5515}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5515, 5516}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5517, 5518}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5517, 5526}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5518, 5519}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5519, 5520}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5519, 5523}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5520, 5521}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5520, 5522}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5523, 5524}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5523, 5525}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5526, 5527}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5527, 5528}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5527, 5530}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5528, 5529}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5530, 5531}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5532, 5533}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5532, 5550}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5533, 5534}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5533, 5541}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5534, 5535}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5534, 5538}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5535, 5536}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5536, 5537}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5538, 5539}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5539, 5540}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5541, 5542}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5541, 5546}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5542, 5543}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5543, 5544}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5543, 5545}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5546, 5547}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5547, 5548}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5547, 5549}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5550, 5551}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5550, 5562}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5551, 5552}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5551, 5557}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5552, 5553}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5552, 5555}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5553, 5554}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5555, 5556}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5557, 5558}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5557, 5560}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5558, 5559}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5560, 5561}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5562, 5563}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5562, 5570}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5563, 5564}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5563, 5567}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5564, 5565}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5564, 5566}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5567, 5568}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5567, 5569}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5570, 5571}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5570, 5574}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5571, 5572}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5571, 5573}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5574, 5575}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5574, 5576}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5577, 5578}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5577, 5673}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5577, 5747}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5578, 5579}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5578, 5624}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5578, 5647}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5579, 5580}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5579, 5607}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5580, 5581}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5580, 5596}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5581, 5582}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5581, 5589}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5582, 5583}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5582, 5586}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5583, 5584}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5583, 5585}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5586, 5587}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5586, 5588}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5589, 5590}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5589, 5593}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5590, 5591}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5590, 5592}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5593, 5594}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5593, 5595}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5596, 5597}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5596, 5602}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5597, 5598}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5597, 5600}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5598, 5599}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5600, 5601}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5602, 5603}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5602, 5605}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5603, 5604}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5605, 5606}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5607, 5608}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5607, 5617}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5608, 5609}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5608, 5613}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5609, 5610}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5610, 5611}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5610, 5612}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5613, 5614}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5614, 5615}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5614, 5616}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5617, 5618}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5617, 5621}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5618, 5619}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5619, 5620}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5621, 5622}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5622, 5623}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5624, 5625}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5624, 5638}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5625, 5626}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5625, 5632}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5626, 5627}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5627, 5628}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5627, 5630}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5628, 5629}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5630, 5631}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5632, 5633}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5633, 5634}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5633, 5636}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5634, 5635}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5636, 5637}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5638, 5639}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5638, 5643}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5639, 5640}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5640, 5641}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5641, 5642}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5643, 5644}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5644, 5645}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5645, 5646}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5647, 5648}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5647, 5663}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5648, 5649}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5648, 5655}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5649, 5650}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5650, 5651}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5650, 5653}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5651, 5652}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5653, 5654}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5655, 5656}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5656, 5657}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5656, 5660}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5657, 5658}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5657, 5659}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5660, 5661}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5660, 5662}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5663, 5664}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5663, 5668}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5664, 5665}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5665, 5666}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5666, 5667}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5668, 5669}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5669, 5670}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5670, 5671}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5670, 5672}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5673, 5674}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5673, 5695}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5673, 5726}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5674, 5675}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5674, 5685}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5675, 5676}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5675, 5681}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5676, 5677}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5677, 5678}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5678, 5679}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5678, 5680}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5681, 5682}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5682, 5683}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5683, 5684}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5685, 5686}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5685, 5691}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5686, 5687}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5687, 5688}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5688, 5689}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5688, 5690}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5691, 5692}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5692, 5693}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5693, 5694}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5695, 5696}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5695, 5711}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5696, 5697}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5696, 5704}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5697, 5698}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5697, 5701}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5698, 5699}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5699, 5700}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5701, 5702}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5702, 5703}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5704, 5705}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5704, 5708}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5705, 5706}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5706, 5707}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5708, 5709}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5709, 5710}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5711, 5712}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5711, 5719}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5712, 5713}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5712, 5716}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5713, 5714}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5714, 5715}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5716, 5717}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5717, 5718}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5719, 5720}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5719, 5723}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5720, 5721}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5721, 5722}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5723, 5724}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5724, 5725}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5726, 5727}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5726, 5737}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5727, 5728}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5727, 5732}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5728, 5729}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5729, 5730}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5730, 5731}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5732, 5733}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5733, 5734}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5734, 5735}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5734, 5736}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5737, 5738}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5737, 5742}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5738, 5739}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5739, 5740}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5740, 5741}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5742, 5743}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5743, 5744}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5744, 5745}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5744, 5746}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5747, 5748}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5747, 5774}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5747, 5797}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5748, 5749}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5748, 5759}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5749, 5750}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5749, 5755}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5750, 5751}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5751, 5752}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5752, 5753}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5752, 5754}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5755, 5756}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5756, 5757}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5757, 5758}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5759, 5760}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5759, 5768}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5760, 5761}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5761, 5762}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5761, 5765}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5762, 5763}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5762, 5764}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5765, 5766}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5765, 5767}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5768, 5769}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5769, 5770}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5769, 5772}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5770, 5771}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5772, 5773}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5774, 5775}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5774, 5784}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5775, 5776}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5775, 5780}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5776, 5777}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5777, 5778}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5778, 5779}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5780, 5781}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5781, 5782}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5782, 5783}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5784, 5785}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5784, 5791}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5785, 5786}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5786, 5787}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5786, 5789}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5787, 5788}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5789, 5790}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5791, 5792}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5792, 5793}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5792, 5795}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5793, 5794}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5795, 5796}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5797, 5798}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5797, 5815}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5798, 5799}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5798, 5806}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5799, 5800}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5799, 5803}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5800, 5801}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5801, 5802}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5803, 5804}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5804, 5805}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5806, 5807}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5806, 5811}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5807, 5808}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5808, 5809}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5808, 5810}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5811, 5812}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5812, 5813}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5812, 5814}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5815, 5816}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5815, 5827}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5816, 5817}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5816, 5822}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5817, 5818}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5817, 5820}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5818, 5819}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5820, 5821}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5822, 5823}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5822, 5825}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5823, 5824}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5825, 5826}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5827, 5828}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5827, 5835}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5828, 5829}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5828, 5832}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5829, 5830}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5829, 5831}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5832, 5833}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5832, 5834}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5835, 5836}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5835, 5839}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5836, 5837}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5836, 5838}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5839, 5840}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5839, 5841}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5842, 5843}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5842, 6107}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5843, 5844}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5843, 5936}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5843, 6031}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5844, 5845}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5844, 5884}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5844, 5910}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5845, 5846}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5845, 5869}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5846, 5847}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5846, 5858}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5847, 5848}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5847, 5853}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5848, 5849}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5848, 5851}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5849, 5850}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5851, 5852}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5853, 5854}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5853, 5856}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5854, 5855}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5856, 5857}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5858, 5859}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5858, 5864}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5859, 5860}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5859, 5862}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5860, 5861}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5862, 5863}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5864, 5865}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5864, 5867}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5865, 5866}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5867, 5868}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5869, 5870}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5869, 5877}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5870, 5871}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5870, 5874}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5871, 5872}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5872, 5873}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5874, 5875}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5875, 5876}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5877, 5878}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5877, 5881}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5878, 5879}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5879, 5880}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5881, 5882}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5882, 5883}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5884, 5885}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5884, 5900}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5885, 5886}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5885, 5894}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5886, 5887}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5887, 5888}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5887, 5891}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5888, 5889}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5888, 5890}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5891, 5892}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5891, 5893}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5894, 5895}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5895, 5896}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5895, 5898}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5896, 5897}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5898, 5899}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5900, 5901}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5900, 5906}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5901, 5902}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5902, 5903}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5903, 5904}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5903, 5905}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5906, 5907}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5907, 5908}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5908, 5909}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5910, 5911}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5910, 5926}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5911, 5912}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5911, 5918}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5912, 5913}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5913, 5914}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5913, 5916}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5914, 5915}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5916, 5917}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5918, 5919}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5919, 5920}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5919, 5923}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5920, 5921}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5920, 5922}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5923, 5924}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5923, 5925}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5926, 5927}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5926, 5931}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5927, 5928}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5928, 5929}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5929, 5930}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5931, 5932}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5932, 5933}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5933, 5934}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5933, 5935}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5936, 5937}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5936, 5960}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5936, 6005}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5937, 5938}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5937, 5947}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5938, 5939}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5938, 5943}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5939, 5940}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5940, 5941}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5941, 5942}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5943, 5944}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5944, 5945}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5945, 5946}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5947, 5948}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5947, 5954}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5948, 5949}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5949, 5950}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5949, 5952}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5950, 5951}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5952, 5953}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5954, 5955}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5955, 5956}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5955, 5958}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5956, 5957}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5958, 5959}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5960, 5961}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5960, 5978}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5961, 5962}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5961, 5971}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5962, 5963}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5962, 5967}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5963, 5964}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5964, 5965}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5964, 5966}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5967, 5968}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5968, 5969}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5968, 5970}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5971, 5972}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5971, 5975}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5972, 5973}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5973, 5974}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5975, 5976}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5976, 5977}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5978, 5979}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5978, 5994}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5979, 5980}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5979, 5987}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5980, 5981}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5980, 5984}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5981, 5982}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5981, 5983}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5984, 5985}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5984, 5986}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5987, 5988}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5987, 5991}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5988, 5989}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5988, 5990}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5991, 5992}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5991, 5993}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5994, 5995}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5994, 6000}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5995, 5996}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5995, 5998}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5996, 5997}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{5998, 5999}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6000, 6001}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6000, 6003}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6001, 6002}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6003, 6004}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6005, 6006}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6005, 6016}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6006, 6007}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6006, 6011}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6007, 6008}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6008, 6009}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6009, 6010}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6011, 6012}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6012, 6013}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6013, 6014}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6013, 6015}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6016, 6017}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6016, 6023}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6017, 6018}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6018, 6019}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6018, 6021}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6019, 6020}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6021, 6022}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6023, 6024}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6024, 6025}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6024, 6028}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6025, 6026}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6025, 6027}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6028, 6029}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6028, 6030}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6031, 6032}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6031, 6051}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6031, 6072}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6032, 6033}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6032, 6042}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6033, 6034}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6033, 6038}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6034, 6035}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6035, 6036}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6036, 6037}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6038, 6039}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6039, 6040}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6040, 6041}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6042, 6043}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6042, 6047}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6043, 6044}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6044, 6045}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6045, 6046}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6047, 6048}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6048, 6049}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6049, 6050}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6051, 6052}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6051, 6062}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6052, 6053}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6052, 6058}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6053, 6054}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6054, 6055}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6055, 6056}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6055, 6057}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6058, 6059}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6059, 6060}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6060, 6061}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6062, 6063}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6062, 6068}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6063, 6064}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6064, 6065}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6065, 6066}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6065, 6067}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6068, 6069}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6069, 6070}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6070, 6071}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6072, 6073}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6072, 6090}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6073, 6074}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6073, 6081}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6074, 6075}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6074, 6078}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6075, 6076}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6076, 6077}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6078, 6079}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6079, 6080}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6081, 6082}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6081, 6086}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6082, 6083}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6083, 6084}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6083, 6085}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6086, 6087}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6087, 6088}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6087, 6089}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6090, 6091}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6090, 6098}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6091, 6092}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6091, 6095}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6092, 6093}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6093, 6094}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6095, 6096}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6096, 6097}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6098, 6099}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6098, 6103}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6099, 6100}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6100, 6101}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6100, 6102}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6103, 6104}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6104, 6105}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6104, 6106}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6107, 6108}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6107, 6203}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6107, 6295}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6108, 6109}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6108, 6154}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6108, 6177}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6109, 6110}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6109, 6137}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6110, 6111}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6110, 6126}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6111, 6112}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6111, 6119}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6112, 6113}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6112, 6116}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6113, 6114}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6113, 6115}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6116, 6117}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6116, 6118}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6119, 6120}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6119, 6123}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6120, 6121}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6120, 6122}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6123, 6124}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6123, 6125}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6126, 6127}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6126, 6132}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6127, 6128}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6127, 6130}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6128, 6129}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6130, 6131}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6132, 6133}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6132, 6135}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6133, 6134}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6135, 6136}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6137, 6138}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6137, 6147}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6138, 6139}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6138, 6143}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6139, 6140}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6140, 6141}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6140, 6142}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6143, 6144}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6144, 6145}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6144, 6146}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6147, 6148}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6147, 6151}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6148, 6149}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6149, 6150}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6151, 6152}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6152, 6153}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6154, 6155}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6154, 6168}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6155, 6156}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6155, 6162}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6156, 6157}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6157, 6158}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6157, 6160}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6158, 6159}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6160, 6161}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6162, 6163}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6163, 6164}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6163, 6166}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6164, 6165}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6166, 6167}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6168, 6169}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6168, 6173}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6169, 6170}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6170, 6171}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6171, 6172}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6173, 6174}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6174, 6175}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6175, 6176}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6177, 6178}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6177, 6193}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6178, 6179}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6178, 6185}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6179, 6180}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6180, 6181}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6180, 6183}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6181, 6182}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6183, 6184}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6185, 6186}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6186, 6187}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6186, 6190}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6187, 6188}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6187, 6189}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6190, 6191}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6190, 6192}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6193, 6194}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6193, 6198}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6194, 6195}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6195, 6196}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6196, 6197}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6198, 6199}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6199, 6200}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6200, 6201}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6200, 6202}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6203, 6204}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6203, 6230}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6203, 6269}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6204, 6205}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6204, 6215}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6205, 6206}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6205, 6211}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6206, 6207}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6207, 6208}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6208, 6209}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6208, 6210}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6211, 6212}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6212, 6213}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6213, 6214}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6215, 6216}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6215, 6224}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6216, 6217}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6217, 6218}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6217, 6221}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6218, 6219}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6218, 6220}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6221, 6222}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6221, 6223}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6224, 6225}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6225, 6226}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6225, 6228}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6226, 6227}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6228, 6229}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6230, 6231}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6230, 6246}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6231, 6232}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6231, 6239}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6232, 6233}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6232, 6236}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6233, 6234}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6234, 6235}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6236, 6237}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6237, 6238}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6239, 6240}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6239, 6243}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6240, 6241}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6241, 6242}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6243, 6244}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6244, 6245}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6246, 6247}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6246, 6258}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6247, 6248}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6247, 6253}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6248, 6249}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6248, 6251}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6249, 6250}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6251, 6252}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6253, 6254}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6253, 6256}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6254, 6255}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6256, 6257}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6258, 6259}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6258, 6264}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6259, 6260}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6259, 6262}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6260, 6261}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6262, 6263}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6264, 6265}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6264, 6267}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6265, 6266}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6267, 6268}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6269, 6270}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6269, 6280}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6270, 6271}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6270, 6275}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6271, 6272}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6272, 6273}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6273, 6274}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6275, 6276}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6276, 6277}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6277, 6278}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6277, 6279}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6280, 6281}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6280, 6287}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6281, 6282}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6282, 6283}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6282, 6285}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6283, 6284}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6285, 6286}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6287, 6288}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6288, 6289}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6288, 6292}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6289, 6290}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6289, 6291}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6292, 6293}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6292, 6294}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6295, 6296}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6295, 6317}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6295, 6336}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6296, 6297}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6296, 6307}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6297, 6298}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6297, 6303}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6298, 6299}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6299, 6300}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6300, 6301}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6300, 6302}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6303, 6304}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6304, 6305}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6305, 6306}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6307, 6308}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6307, 6313}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6308, 6309}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6309, 6310}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6310, 6311}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6310, 6312}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6313, 6314}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6314, 6315}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6315, 6316}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6317, 6318}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6317, 6327}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6318, 6319}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6318, 6323}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6319, 6320}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6320, 6321}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6321, 6322}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6323, 6324}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6324, 6325}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6325, 6326}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6327, 6328}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6327, 6332}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6328, 6329}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6329, 6330}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6330, 6331}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6332, 6333}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6333, 6334}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6334, 6335}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6336, 6337}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6336, 6354}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6337, 6338}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6337, 6345}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6338, 6339}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6338, 6342}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6339, 6340}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6340, 6341}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6342, 6343}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6343, 6344}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6345, 6346}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6345, 6350}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6346, 6347}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6347, 6348}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6347, 6349}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6350, 6351}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6351, 6352}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6351, 6353}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6354, 6355}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6354, 6362}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6355, 6356}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6355, 6359}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6356, 6357}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6357, 6358}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6359, 6360}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6360, 6361}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6362, 6363}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6362, 6367}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6363, 6364}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6364, 6365}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6364, 6366}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6367, 6368}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6368, 6369}, 0.09683879874229871]}, 
           {Arrowheads[0.], ArrowBox[{6368, 6370}, 0.09683879874229871]}}, 
          {Hue[0.625, 0.5, 0.7], 
           {RGBColor[1, 0, 0], PointBox[1]}, 
           {RGBColor[0, 1, 0], PointBox[2]}, 
           {RGBColor[0, 0, 1], PointBox[3]}, 
           {RGBColor[0, 0, 1], PointBox[4]}, 
           {RGBColor[0, 1, 0], PointBox[5]}, 
           {RGBColor[1, 0, 0], PointBox[6]}, 
           {RGBColor[1, 0, 0], PointBox[7]}, 
           {RGBColor[1, 0, 0], PointBox[8]}, 
           {RGBColor[1, 0, 0], PointBox[9]}, 
           {RGBColor[0, 1, 0], PointBox[10]}, 
           {RGBColor[0, 1, 0], PointBox[11]}, 
           {RGBColor[0, 1, 0], PointBox[12]}, 
           {RGBColor[1, 1, 0], PointBox[13]}, 
           {RGBColor[1, 1, 0], PointBox[14]}, 
           {RGBColor[1, 1, 0], PointBox[15]}, 
           {RGBColor[1, 1, 0], PointBox[16]}, 
           {RGBColor[0, 1, 0], PointBox[17]}, 
           {RGBColor[1, 1, 0], PointBox[18]}, 
           {RGBColor[1, 1, 0], PointBox[19]}, 
           {RGBColor[1, 1, 0], PointBox[20]}, 
           {RGBColor[1, 1, 0], PointBox[21]}, 
           {RGBColor[0, 1, 0], PointBox[22]}, 
           {RGBColor[0, 1, 0], PointBox[23]}, 
           {RGBColor[0, 1, 0], PointBox[24]}, 
           {RGBColor[1, 1, 0], PointBox[25]}, 
           {RGBColor[0, 1, 0], PointBox[26]}, 
           {RGBColor[1, 1, 0], PointBox[27]}, 
           {RGBColor[0, 1, 0], PointBox[28]}, 
           {RGBColor[0, 1, 0], PointBox[29]}, 
           {RGBColor[1, 1, 0], PointBox[30]}, 
           {RGBColor[0, 1, 0], PointBox[31]}, 
           {RGBColor[1, 1, 0], PointBox[32]}, 
           {RGBColor[0, 1, 0], PointBox[33]}, 
           {RGBColor[0, 1, 0], PointBox[34]}, 
           {RGBColor[0, 1, 0], PointBox[35]}, 
           {RGBColor[1, 1, 0], PointBox[36]}, 
           {RGBColor[1, 1, 0], PointBox[37]}, 
           {RGBColor[0, 1, 0], PointBox[38]}, 
           {RGBColor[1, 1, 0], PointBox[39]}, 
           {RGBColor[1, 1, 0], PointBox[40]}, 
           {RGBColor[0, 1, 0], PointBox[41]}, 
           {RGBColor[0, 1, 0], PointBox[42]}, 
           {RGBColor[0, 1, 0], PointBox[43]}, 
           {RGBColor[1, 1, 0], PointBox[44]}, 
           {RGBColor[0, 1, 0], PointBox[45]}, 
           {RGBColor[0, 1, 0], PointBox[46]}, 
           {RGBColor[0, 1, 0], PointBox[47]}, 
           {RGBColor[1, 0, 0], PointBox[48]}, 
           {RGBColor[0, 1, 0], PointBox[49]}, 
           {RGBColor[1, 1, 0], PointBox[50]}, 
           {RGBColor[0, 1, 0], PointBox[51]}, 
           {RGBColor[1, 0, 0], PointBox[52]}, 
           {RGBColor[1, 1, 0], PointBox[53]}, 
           {RGBColor[1, 1, 0], PointBox[54]}, 
           {RGBColor[1, 0, 0], PointBox[55]}, 
           {RGBColor[1, 1, 0], PointBox[56]}, 
           {RGBColor[1, 1, 0], PointBox[57]}, 
           {RGBColor[1, 1, 0], PointBox[58]}, 
           {RGBColor[0, 1, 0], PointBox[59]}, 
           {RGBColor[1, 0, 0], PointBox[60]}, 
           {RGBColor[1, 1, 0], PointBox[61]}, 
           {RGBColor[1, 0, 0], PointBox[62]}, 
           {RGBColor[1, 1, 0], PointBox[63]}, 
           {RGBColor[0, 1, 0], PointBox[64]}, 
           {RGBColor[1, 1, 0], PointBox[65]}, 
           {RGBColor[0, 1, 0], PointBox[66]}, 
           {RGBColor[1, 0, 0], PointBox[67]}, 
           {RGBColor[1, 1, 0], PointBox[68]}, 
           {RGBColor[1, 1, 0], PointBox[69]}, 
           {RGBColor[1, 1, 0], PointBox[70]}, 
           {RGBColor[0, 1, 0], PointBox[71]}, 
           {RGBColor[1, 0, 0], PointBox[72]}, 
           {RGBColor[1, 1, 0], PointBox[73]}, 
           {RGBColor[1, 0, 0], PointBox[74]}, 
           {RGBColor[0, 1, 0], PointBox[75]}, 
           {RGBColor[0, 1, 0], PointBox[76]}, 
           {RGBColor[0, 1, 0], PointBox[77]}, 
           {RGBColor[1, 0, 0], PointBox[78]}, 
           {RGBColor[1, 1, 0], PointBox[79]}, 
           {RGBColor[1, 0, 0], PointBox[80]}, 
           {RGBColor[1, 1, 0], PointBox[81]}, 
           {RGBColor[0, 1, 0], PointBox[82]}, 
           {RGBColor[0, 1, 0], PointBox[83]}, 
           {RGBColor[1, 0, 0], PointBox[84]}, 
           {RGBColor[0, 1, 0], PointBox[85]}, 
           {RGBColor[1, 1, 0], PointBox[86]}, 
           {RGBColor[1, 0, 0], PointBox[87]}, 
           {RGBColor[0, 1, 0], PointBox[88]}, 
           {RGBColor[1, 1, 0], PointBox[89]}, 
           {RGBColor[0, 1, 0], PointBox[90]}, 
           {RGBColor[0, 1, 0], PointBox[91]}, 
           {RGBColor[0, 1, 0], PointBox[92]}, 
           {RGBColor[1, 0, 0], PointBox[93]}, 
           {RGBColor[1, 1, 0], PointBox[94]}, 
           {RGBColor[0, 1, 0], PointBox[95]}, 
           {RGBColor[0, 1, 0], PointBox[96]}, 
           {RGBColor[1, 0, 0], PointBox[97]}, 
           {RGBColor[0, 1, 0], PointBox[98]}, 
           {RGBColor[0, 1, 0], PointBox[99]}, 
           {RGBColor[1, 0, 0], PointBox[100]}, 
           {RGBColor[1, 0, 0], PointBox[101]}, 
           {RGBColor[0, 1, 0], PointBox[102]}, 
           {RGBColor[1, 1, 0], PointBox[103]}, 
           {RGBColor[1, 1, 0], PointBox[104]}, 
           {RGBColor[1, 1, 0], PointBox[105]}, 
           {RGBColor[1, 1, 0], PointBox[106]}, 
           {RGBColor[1, 1, 0], PointBox[107]}, 
           {RGBColor[1, 1, 0], PointBox[108]}, 
           {RGBColor[0, 1, 0], PointBox[109]}, 
           {RGBColor[1, 1, 0], PointBox[110]}, 
           {RGBColor[0, 1, 0], PointBox[111]}, 
           {RGBColor[1, 1, 0], PointBox[112]}, 
           {RGBColor[1, 0, 0], PointBox[113]}, 
           {RGBColor[1, 1, 0], PointBox[114]}, 
           {RGBColor[1, 1, 0], PointBox[115]}, 
           {RGBColor[1, 1, 0], PointBox[116]}, 
           {RGBColor[1, 0, 0], PointBox[117]}, 
           {RGBColor[0, 1, 0], PointBox[118]}, 
           {RGBColor[0, 1, 0], PointBox[119]}, 
           {RGBColor[1, 0, 0], PointBox[120]}, 
           {RGBColor[0, 1, 0], PointBox[121]}, 
           {RGBColor[1, 0, 0], PointBox[122]}, 
           {RGBColor[1, 1, 0], PointBox[123]}, 
           {RGBColor[1, 0, 0], PointBox[124]}, 
           {RGBColor[1, 1, 0], PointBox[125]}, 
           {RGBColor[1, 1, 0], PointBox[126]}, 
           {RGBColor[1, 1, 0], PointBox[127]}, 
           {RGBColor[1, 0, 0], PointBox[128]}, 
           {RGBColor[1, 1, 0], PointBox[129]}, 
           {RGBColor[1, 1, 0], PointBox[130]}, 
           {RGBColor[1, 0, 0], PointBox[131]}, 
           {RGBColor[1, 1, 0], PointBox[132]}, 
           {RGBColor[1, 0, 0], PointBox[133]}, 
           {RGBColor[1, 1, 0], PointBox[134]}, 
           {RGBColor[1, 1, 0], PointBox[135]}, 
           {RGBColor[1, 0, 0], PointBox[136]}, 
           {RGBColor[1, 1, 0], PointBox[137]}, 
           {RGBColor[0, 1, 0], PointBox[138]}, 
           {RGBColor[1, 0, 0], PointBox[139]}, 
           {RGBColor[1, 0, 0], PointBox[140]}, 
           {RGBColor[1, 0, 0], PointBox[141]}, 
           {RGBColor[1, 1, 0], PointBox[142]}, 
           {RGBColor[1, 1, 0], PointBox[143]}, 
           {RGBColor[1, 0, 0], PointBox[144]}, 
           {RGBColor[1, 0, 0], PointBox[145]}, 
           {RGBColor[1, 1, 0], PointBox[146]}, 
           {RGBColor[1, 1, 0], PointBox[147]}, 
           {RGBColor[1, 0, 0], PointBox[148]}, 
           {RGBColor[1, 0, 0], PointBox[149]}, 
           {RGBColor[1, 0, 0], PointBox[150]}, 
           {RGBColor[1, 1, 0], PointBox[151]}, 
           {RGBColor[1, 0, 0], PointBox[152]}, 
           {RGBColor[1, 0, 0], PointBox[153]}, 
           {RGBColor[1, 1, 0], PointBox[154]}, 
           {RGBColor[1, 0, 0], PointBox[155]}, 
           {RGBColor[0, 1, 0], PointBox[156]}, 
           {RGBColor[1, 0, 0], PointBox[157]}, 
           {RGBColor[1, 1, 0], PointBox[158]}, 
           {RGBColor[1, 0, 0], PointBox[159]}, 
           {RGBColor[1, 1, 0], PointBox[160]}, 
           {RGBColor[1, 0, 0], PointBox[161]}, 
           {RGBColor[1, 1, 0], PointBox[162]}, 
           {RGBColor[1, 0, 0], PointBox[163]}, 
           {RGBColor[0, 1, 0], PointBox[164]}, 
           {RGBColor[1, 1, 0], PointBox[165]}, 
           {RGBColor[0, 1, 0], PointBox[166]}, 
           {RGBColor[1, 0, 0], PointBox[167]}, 
           {RGBColor[1, 0, 0], PointBox[168]}, 
           {RGBColor[1, 0, 0], PointBox[169]}, 
           {RGBColor[1, 1, 0], PointBox[170]}, 
           {RGBColor[1, 0, 0], PointBox[171]}, 
           {RGBColor[1, 0, 0], PointBox[172]}, 
           {RGBColor[1, 0, 0], PointBox[173]}, 
           {RGBColor[0, 1, 0], PointBox[174]}, 
           {RGBColor[1, 1, 0], PointBox[175]}, 
           {RGBColor[1, 0, 0], PointBox[176]}, 
           {RGBColor[1, 0, 0], PointBox[177]}, 
           {RGBColor[0, 1, 0], PointBox[178]}, 
           {RGBColor[0, 1, 0], PointBox[179]}, 
           {RGBColor[0, 1, 0], PointBox[180]}, 
           {RGBColor[1, 1, 0], PointBox[181]}, 
           {RGBColor[1, 1, 0], PointBox[182]}, 
           {RGBColor[0, 1, 0], PointBox[183]}, 
           {RGBColor[0, 1, 0], PointBox[184]}, 
           {RGBColor[0, 1, 0], PointBox[185]}, 
           {RGBColor[1, 1, 0], PointBox[186]}, 
           {RGBColor[0, 1, 0], PointBox[187]}, 
           {RGBColor[0, 1, 0], PointBox[188]}, 
           {RGBColor[1, 0, 0], PointBox[189]}, 
           {RGBColor[1, 1, 0], PointBox[190]}, 
           {RGBColor[0, 1, 0], PointBox[191]}, 
           {RGBColor[1, 1, 0], PointBox[192]}, 
           {RGBColor[1, 1, 0], PointBox[193]}, 
           {RGBColor[0, 1, 0], PointBox[194]}, 
           {RGBColor[1, 0, 0], PointBox[195]}, 
           {RGBColor[0, 1, 0], PointBox[196]}, 
           {RGBColor[0, 1, 0], PointBox[197]}, 
           {RGBColor[0, 1, 0], PointBox[198]}, 
           {RGBColor[0, 1, 0], PointBox[199]}, 
           {RGBColor[1, 0, 0], PointBox[200]}, 
           {RGBColor[0, 1, 0], PointBox[201]}, 
           {RGBColor[1, 0, 0], PointBox[202]}, 
           {RGBColor[0, 1, 0], PointBox[203]}, 
           {RGBColor[1, 0, 0], PointBox[204]}, 
           {RGBColor[1, 1, 0], PointBox[205]}, 
           {RGBColor[1, 1, 0], PointBox[206]}, 
           {RGBColor[1, 0, 0], PointBox[207]}, 
           {RGBColor[0, 1, 0], PointBox[208]}, 
           {RGBColor[1, 0, 0], PointBox[209]}, 
           {RGBColor[1, 1, 0], PointBox[210]}, 
           {RGBColor[0, 1, 0], PointBox[211]}, 
           {RGBColor[1, 0, 0], PointBox[212]}, 
           {RGBColor[1, 0, 0], PointBox[213]}, 
           {RGBColor[1, 0, 0], PointBox[214]}, 
           {RGBColor[1, 1, 0], PointBox[215]}, 
           {RGBColor[0, 1, 0], PointBox[216]}, 
           {RGBColor[1, 0, 0], PointBox[217]}, 
           {RGBColor[1, 1, 0], PointBox[218]}, 
           {RGBColor[1, 1, 0], PointBox[219]}, 
           {RGBColor[1, 0, 0], PointBox[220]}, 
           {RGBColor[1, 0, 0], PointBox[221]}, 
           {RGBColor[1, 0, 0], PointBox[222]}, 
           {RGBColor[0, 1, 0], PointBox[223]}, 
           {RGBColor[1, 0, 0], PointBox[224]}, 
           {RGBColor[1, 1, 0], PointBox[225]}, 
           {RGBColor[1, 0, 0], PointBox[226]}, 
           {RGBColor[0, 1, 0], PointBox[227]}, 
           {RGBColor[1, 0, 0], PointBox[228]}, 
           {RGBColor[0, 1, 0], PointBox[229]}, 
           {RGBColor[1, 0, 0], PointBox[230]}, 
           {RGBColor[0, 1, 0], PointBox[231]}, 
           {RGBColor[0, 1, 0], PointBox[232]}, 
           {RGBColor[1, 0, 0], PointBox[233]}, 
           {RGBColor[1, 1, 0], PointBox[234]}, 
           {RGBColor[1, 0, 0], PointBox[235]}, 
           {RGBColor[0, 1, 0], PointBox[236]}, 
           {RGBColor[1, 0, 0], PointBox[237]}, 
           {RGBColor[0, 1, 0], PointBox[238]}, 
           {RGBColor[0, 1, 0], PointBox[239]}, 
           {RGBColor[0, 1, 0], PointBox[240]}, 
           {RGBColor[1, 0, 0], PointBox[241]}, 
           {RGBColor[0, 1, 0], PointBox[242]}, 
           {RGBColor[1, 1, 0], PointBox[243]}, 
           {RGBColor[0, 1, 0], PointBox[244]}, 
           {RGBColor[1, 0, 0], PointBox[245]}, 
           {RGBColor[1, 0, 0], PointBox[246]}, 
           {RGBColor[1, 0, 0], PointBox[247]}, 
           {RGBColor[0, 1, 0], PointBox[248]}, 
           {RGBColor[1, 0, 0], PointBox[249]}, 
           {RGBColor[0, 1, 0], PointBox[250]}, 
           {RGBColor[1, 0, 0], PointBox[251]}, 
           {RGBColor[1, 0, 0], PointBox[252]}, 
           {RGBColor[0, 1, 0], PointBox[253]}, 
           {RGBColor[1, 0, 0], PointBox[254]}, 
           {RGBColor[1, 1, 0], PointBox[255]}, 
           {RGBColor[1, 0, 0], PointBox[256]}, 
           {RGBColor[1, 0, 0], PointBox[257]}, 
           {RGBColor[1, 0, 0], PointBox[258]}, 
           {RGBColor[0, 1, 0], PointBox[259]}, 
           {RGBColor[0, 1, 0], PointBox[260]}, 
           {RGBColor[1, 0, 0], PointBox[261]}, 
           {RGBColor[0, 1, 0], PointBox[262]}, 
           {RGBColor[0, 1, 0], PointBox[263]}, 
           {RGBColor[1, 0, 0], PointBox[264]}, 
           {RGBColor[1, 0, 0], PointBox[265]}, 
           {RGBColor[0, 1, 0], PointBox[266]}, 
           {RGBColor[0, 1, 0], PointBox[267]}, 
           {RGBColor[1, 0, 0], PointBox[268]}, 
           {RGBColor[0, 1, 0], PointBox[269]}, 
           {RGBColor[1, 1, 0], PointBox[270]}, 
           {RGBColor[1, 0, 0], PointBox[271]}, 
           {RGBColor[1, 0, 0], PointBox[272]}, 
           {RGBColor[1, 0, 0], PointBox[273]}, 
           {RGBColor[1, 0, 0], PointBox[274]}, 
           {RGBColor[0, 1, 0], PointBox[275]}, 
           {RGBColor[0, 1, 0], PointBox[276]}, 
           {RGBColor[0, 1, 0], PointBox[277]}, 
           {RGBColor[1, 1, 0], PointBox[278]}, 
           {RGBColor[1, 1, 0], PointBox[279]}, 
           {RGBColor[0, 1, 0], PointBox[280]}, 
           {RGBColor[1, 1, 0], PointBox[281]}, 
           {RGBColor[1, 1, 0], PointBox[282]}, 
           {RGBColor[0, 1, 0], PointBox[283]}, 
           {RGBColor[0, 1, 0], PointBox[284]}, 
           {RGBColor[1, 1, 0], PointBox[285]}, 
           {RGBColor[1, 1, 0], PointBox[286]}, 
           {RGBColor[0, 1, 0], PointBox[287]}, 
           {RGBColor[1, 1, 0], PointBox[288]}, 
           {RGBColor[0, 1, 0], PointBox[289]}, 
           {RGBColor[0, 1, 0], PointBox[290]}, 
           {RGBColor[0, 1, 0], PointBox[291]}, 
           {RGBColor[1, 1, 0], PointBox[292]}, 
           {RGBColor[1, 1, 0], PointBox[293]}, 
           {RGBColor[1, 1, 0], PointBox[294]}, 
           {RGBColor[1, 1, 0], PointBox[295]}, 
           {RGBColor[0, 1, 0], PointBox[296]}, 
           {RGBColor[1, 1, 0], PointBox[297]}, 
           {RGBColor[1, 1, 0], PointBox[298]}, 
           {RGBColor[1, 1, 0], PointBox[299]}, 
           {RGBColor[1, 1, 0], PointBox[300]}, 
           {RGBColor[1, 0, 0], PointBox[301]}, 
           {RGBColor[0, 1, 0], PointBox[302]}, 
           {RGBColor[0, 1, 0], PointBox[303]}, 
           {RGBColor[0, 1, 0], PointBox[304]}, 
           {RGBColor[1, 1, 0], PointBox[305]}, 
           {RGBColor[1, 1, 0], PointBox[306]}, 
           {RGBColor[0, 1, 0], PointBox[307]}, 
           {RGBColor[0, 1, 0], PointBox[308]}, 
           {RGBColor[1, 1, 0], PointBox[309]}, 
           {RGBColor[0, 1, 0], PointBox[310]}, 
           {RGBColor[0, 1, 0], PointBox[311]}, 
           {RGBColor[0, 1, 0], PointBox[312]}, 
           {RGBColor[1, 1, 0], PointBox[313]}, 
           {RGBColor[1, 1, 0], PointBox[314]}, 
           {RGBColor[0, 1, 0], PointBox[315]}, 
           {RGBColor[1, 1, 0], PointBox[316]}, 
           {RGBColor[0, 1, 0], PointBox[317]}, 
           {RGBColor[1, 0, 0], PointBox[318]}, 
           {RGBColor[1, 0, 0], PointBox[319]}, 
           {RGBColor[1, 1, 0], PointBox[320]}, 
           {RGBColor[0, 1, 0], PointBox[321]}, 
           {RGBColor[1, 1, 0], PointBox[322]}, 
           {RGBColor[1, 1, 0], PointBox[323]}, 
           {RGBColor[1, 1, 0], PointBox[324]}, 
           {RGBColor[0, 1, 0], PointBox[325]}, 
           {RGBColor[1, 1, 0], PointBox[326]}, 
           {RGBColor[0, 1, 0], PointBox[327]}, 
           {RGBColor[1, 0, 0], PointBox[328]}, 
           {RGBColor[1, 1, 0], PointBox[329]}, 
           {RGBColor[1, 1, 0], PointBox[330]}, 
           {RGBColor[1, 0, 0], PointBox[331]}, 
           {RGBColor[1, 1, 0], PointBox[332]}, 
           {RGBColor[1, 1, 0], PointBox[333]}, 
           {RGBColor[1, 0, 0], PointBox[334]}, 
           {RGBColor[1, 1, 0], PointBox[335]}, 
           {RGBColor[0, 1, 0], PointBox[336]}, 
           {RGBColor[1, 1, 0], PointBox[337]}, 
           {RGBColor[0, 1, 0], PointBox[338]}, 
           {RGBColor[1, 1, 0], PointBox[339]}, 
           {RGBColor[0, 1, 0], PointBox[340]}, 
           {RGBColor[1, 0, 0], PointBox[341]}, 
           {RGBColor[1, 1, 0], PointBox[342]}, 
           {RGBColor[1, 1, 0], PointBox[343]}, 
           {RGBColor[1, 0, 0], PointBox[344]}, 
           {RGBColor[1, 0, 0], PointBox[345]}, 
           {RGBColor[0, 1, 0], PointBox[346]}, 
           {RGBColor[0, 1, 0], PointBox[347]}, 
           {RGBColor[0, 1, 0], PointBox[348]}, 
           {RGBColor[1, 1, 0], PointBox[349]}, 
           {RGBColor[0, 1, 0], PointBox[350]}, 
           {RGBColor[0, 1, 0], PointBox[351]}, 
           {RGBColor[0, 1, 0], PointBox[352]}, 
           {RGBColor[0, 1, 0], PointBox[353]}, 
           {RGBColor[1, 0, 0], PointBox[354]}, 
           {RGBColor[1, 1, 0], PointBox[355]}, 
           {RGBColor[1, 0, 0], PointBox[356]}, 
           {RGBColor[1, 1, 0], PointBox[357]}, 
           {RGBColor[1, 0, 0], PointBox[358]}, 
           {RGBColor[0, 1, 0], PointBox[359]}, 
           {RGBColor[0, 1, 0], PointBox[360]}, 
           {RGBColor[0, 1, 0], PointBox[361]}, 
           {RGBColor[0, 1, 0], PointBox[362]}, 
           {RGBColor[0, 1, 0], PointBox[363]}, 
           {RGBColor[0, 1, 0], PointBox[364]}, 
           {RGBColor[1, 0, 0], PointBox[365]}, 
           {RGBColor[0, 1, 0], PointBox[366]}, 
           {RGBColor[1, 0, 0], PointBox[367]}, 
           {RGBColor[1, 0, 0], PointBox[368]}, 
           {RGBColor[1, 0, 0], PointBox[369]}, 
           {RGBColor[1, 1, 0], PointBox[370]}, 
           {RGBColor[1, 1, 0], PointBox[371]}, 
           {RGBColor[0, 1, 0], PointBox[372]}, 
           {RGBColor[1, 1, 0], PointBox[373]}, 
           {RGBColor[0, 1, 0], PointBox[374]}, 
           {RGBColor[1, 1, 0], PointBox[375]}, 
           {RGBColor[1, 1, 0], PointBox[376]}, 
           {RGBColor[1, 1, 0], PointBox[377]}, 
           {RGBColor[1, 1, 0], PointBox[378]}, 
           {RGBColor[1, 0, 0], PointBox[379]}, 
           {RGBColor[1, 1, 0], PointBox[380]}, 
           {RGBColor[1, 0, 0], PointBox[381]}, 
           {RGBColor[0, 1, 0], PointBox[382]}, 
           {RGBColor[1, 1, 0], PointBox[383]}, 
           {RGBColor[0, 1, 0], PointBox[384]}, 
           {RGBColor[1, 1, 0], PointBox[385]}, 
           {RGBColor[1, 0, 0], PointBox[386]}, 
           {RGBColor[1, 1, 0], PointBox[387]}, 
           {RGBColor[0, 1, 0], PointBox[388]}, 
           {RGBColor[1, 0, 0], PointBox[389]}, 
           {RGBColor[1, 0, 0], PointBox[390]}, 
           {RGBColor[1, 0, 0], PointBox[391]}, 
           {RGBColor[1, 1, 0], PointBox[392]}, 
           {RGBColor[1, 1, 0], PointBox[393]}, 
           {RGBColor[1, 1, 0], PointBox[394]}, 
           {RGBColor[1, 1, 0], PointBox[395]}, 
           {RGBColor[1, 1, 0], PointBox[396]}, 
           {RGBColor[0, 1, 0], PointBox[397]}, 
           {RGBColor[1, 0, 0], PointBox[398]}, 
           {RGBColor[1, 1, 0], PointBox[399]}, 
           {RGBColor[1, 0, 0], PointBox[400]}, 
           {RGBColor[1, 1, 0], PointBox[401]}, 
           {RGBColor[1, 1, 0], PointBox[402]}, 
           {RGBColor[1, 1, 0], PointBox[403]}, 
           {RGBColor[1, 0, 0], PointBox[404]}, 
           {RGBColor[1, 1, 0], PointBox[405]}, 
           {RGBColor[1, 1, 0], PointBox[406]}, 
           {RGBColor[1, 0, 0], PointBox[407]}, 
           {RGBColor[1, 0, 0], PointBox[408]}, 
           {RGBColor[1, 0, 0], PointBox[409]}, 
           {RGBColor[1, 1, 0], PointBox[410]}, 
           {RGBColor[1, 1, 0], PointBox[411]}, 
           {RGBColor[1, 0, 0], PointBox[412]}, 
           {RGBColor[1, 1, 0], PointBox[413]}, 
           {RGBColor[0, 1, 0], PointBox[414]}, 
           {RGBColor[1, 0, 0], PointBox[415]}, 
           {RGBColor[1, 0, 0], PointBox[416]}, 
           {RGBColor[1, 0, 0], PointBox[417]}, 
           {RGBColor[1, 1, 0], PointBox[418]}, 
           {RGBColor[1, 1, 0], PointBox[419]}, 
           {RGBColor[1, 0, 0], PointBox[420]}, 
           {RGBColor[1, 0, 0], PointBox[421]}, 
           {RGBColor[1, 1, 0], PointBox[422]}, 
           {RGBColor[1, 1, 0], PointBox[423]}, 
           {RGBColor[1, 0, 0], PointBox[424]}, 
           {RGBColor[1, 0, 0], PointBox[425]}, 
           {RGBColor[1, 0, 0], PointBox[426]}, 
           {RGBColor[1, 1, 0], PointBox[427]}, 
           {RGBColor[0, 1, 0], PointBox[428]}, 
           {RGBColor[0, 1, 0], PointBox[429]}, 
           {RGBColor[1, 0, 0], PointBox[430]}, 
           {RGBColor[1, 1, 0], PointBox[431]}, 
           {RGBColor[1, 0, 0], PointBox[432]}, 
           {RGBColor[1, 1, 0], PointBox[433]}, 
           {RGBColor[1, 0, 0], PointBox[434]}, 
           {RGBColor[1, 0, 0], PointBox[435]}, 
           {RGBColor[1, 0, 0], PointBox[436]}, 
           {RGBColor[0, 1, 0], PointBox[437]}, 
           {RGBColor[0, 1, 0], PointBox[438]}, 
           {RGBColor[1, 0, 0], PointBox[439]}, 
           {RGBColor[1, 0, 0], PointBox[440]}, 
           {RGBColor[1, 0, 0], PointBox[441]}, 
           {RGBColor[1, 1, 0], PointBox[442]}, 
           {RGBColor[1, 0, 0], PointBox[443]}, 
           {RGBColor[1, 0, 0], PointBox[444]}, 
           {RGBColor[1, 0, 0], PointBox[445]}, 
           {RGBColor[0, 1, 0], PointBox[446]}, 
           {RGBColor[0, 1, 0], PointBox[447]}, 
           {RGBColor[0, 1, 0], PointBox[448]}, 
           {RGBColor[1, 1, 0], PointBox[449]}, 
           {RGBColor[0, 1, 0], PointBox[450]}, 
           {RGBColor[0, 1, 0], PointBox[451]}, 
           {RGBColor[0, 1, 0], PointBox[452]}, 
           {RGBColor[1, 1, 0], PointBox[453]}, 
           {RGBColor[1, 1, 0], PointBox[454]}, 
           {RGBColor[1, 0, 0], PointBox[455]}, 
           {RGBColor[0, 1, 0], PointBox[456]}, 
           {RGBColor[1, 0, 0], PointBox[457]}, 
           {RGBColor[0, 1, 0], PointBox[458]}, 
           {RGBColor[1, 1, 0], PointBox[459]}, 
           {RGBColor[0, 1, 0], PointBox[460]}, 
           {RGBColor[0, 1, 0], PointBox[461]}, 
           {RGBColor[1, 1, 0], PointBox[462]}, 
           {RGBColor[0, 1, 0], PointBox[463]}, 
           {RGBColor[0, 1, 0], PointBox[464]}, 
           {RGBColor[1, 0, 0], PointBox[465]}, 
           {RGBColor[1, 1, 0], PointBox[466]}, 
           {RGBColor[0, 1, 0], PointBox[467]}, 
           {RGBColor[1, 1, 0], PointBox[468]}, 
           {RGBColor[0, 1, 0], PointBox[469]}, 
           {RGBColor[1, 0, 0], PointBox[470]}, 
           {RGBColor[1, 0, 0], PointBox[471]}, 
           {RGBColor[1, 0, 0], PointBox[472]}, 
           {RGBColor[0, 1, 0], PointBox[473]}, 
           {RGBColor[1, 1, 0], PointBox[474]}, 
           {RGBColor[0, 1, 0], PointBox[475]}, 
           {RGBColor[1, 0, 0], PointBox[476]}, 
           {RGBColor[0, 1, 0], PointBox[477]}, 
           {RGBColor[1, 0, 0], PointBox[478]}, 
           {RGBColor[1, 1, 0], PointBox[479]}, 
           {RGBColor[1, 1, 0], PointBox[480]}, 
           {RGBColor[1, 0, 0], PointBox[481]}, 
           {RGBColor[1, 0, 0], PointBox[482]}, 
           {RGBColor[1, 0, 0], PointBox[483]}, 
           {RGBColor[1, 1, 0], PointBox[484]}, 
           {RGBColor[0, 1, 0], PointBox[485]}, 
           {RGBColor[1, 1, 0], PointBox[486]}, 
           {RGBColor[0, 1, 0], PointBox[487]}, 
           {RGBColor[1, 0, 0], PointBox[488]}, 
           {RGBColor[1, 0, 0], PointBox[489]}, 
           {RGBColor[1, 0, 0], PointBox[490]}, 
           {RGBColor[1, 1, 0], PointBox[491]}, 
           {RGBColor[0, 1, 0], PointBox[492]}, 
           {RGBColor[1, 0, 0], PointBox[493]}, 
           {RGBColor[1, 1, 0], PointBox[494]}, 
           {RGBColor[1, 1, 0], PointBox[495]}, 
           {RGBColor[1, 0, 0], PointBox[496]}, 
           {RGBColor[1, 0, 0], PointBox[497]}, 
           {RGBColor[1, 0, 0], PointBox[498]}, 
           {RGBColor[0, 1, 0], PointBox[499]}, 
           {RGBColor[0, 1, 0], PointBox[500]}, 
           {RGBColor[0, 1, 0], PointBox[501]}, 
           {RGBColor[0, 1, 0], PointBox[502]}, 
           {RGBColor[0, 1, 0], PointBox[503]}, 
           {RGBColor[0, 1, 0], PointBox[504]}, 
           {RGBColor[1, 0, 0], PointBox[505]}, 
           {RGBColor[0, 1, 0], PointBox[506]}, 
           {RGBColor[1, 0, 0], PointBox[507]}, 
           {RGBColor[0, 1, 0], PointBox[508]}, 
           {RGBColor[0, 1, 0], PointBox[509]}, 
           {RGBColor[1, 0, 0], PointBox[510]}, 
           {RGBColor[1, 1, 0], PointBox[511]}, 
           {RGBColor[1, 0, 0], PointBox[512]}, 
           {RGBColor[1, 0, 0], PointBox[513]}, 
           {RGBColor[1, 0, 0], PointBox[514]}, 
           {RGBColor[0, 1, 0], PointBox[515]}, 
           {RGBColor[0, 1, 0], PointBox[516]}, 
           {RGBColor[0, 1, 0], PointBox[517]}, 
           {RGBColor[0, 1, 0], PointBox[518]}, 
           {RGBColor[1, 0, 0], PointBox[519]}, 
           {RGBColor[0, 1, 0], PointBox[520]}, 
           {RGBColor[0, 1, 0], PointBox[521]}, 
           {RGBColor[0, 1, 0], PointBox[522]}, 
           {RGBColor[0, 1, 0], PointBox[523]}, 
           {RGBColor[1, 0, 0], PointBox[524]}, 
           {RGBColor[1, 0, 0], PointBox[525]}, 
           {RGBColor[1, 0, 0], PointBox[526]}, 
           {RGBColor[0, 1, 0], PointBox[527]}, 
           {RGBColor[1, 0, 0], PointBox[528]}, 
           {RGBColor[0, 1, 0], PointBox[529]}, 
           {RGBColor[1, 0, 0], PointBox[530]}, 
           {RGBColor[1, 0, 0], PointBox[531]}, 
           {RGBColor[0, 1, 0], PointBox[532]}, 
           {RGBColor[1, 0, 0], PointBox[533]}, 
           {RGBColor[1, 1, 0], PointBox[534]}, 
           {RGBColor[1, 0, 0], PointBox[535]}, 
           {RGBColor[1, 0, 0], PointBox[536]}, 
           {RGBColor[1, 0, 0], PointBox[537]}, 
           {RGBColor[1, 0, 0], PointBox[538]}, 
           {RGBColor[0, 1, 0], PointBox[539]}, 
           {RGBColor[0, 1, 0], PointBox[540]}, 
           {RGBColor[0, 1, 0], PointBox[541]}, 
           {RGBColor[1, 1, 0], PointBox[542]}, 
           {RGBColor[1, 1, 0], PointBox[543]}, 
           {RGBColor[1, 1, 0], PointBox[544]}, 
           {RGBColor[1, 1, 0], PointBox[545]}, 
           {RGBColor[0, 1, 0], PointBox[546]}, 
           {RGBColor[1, 1, 0], PointBox[547]}, 
           {RGBColor[1, 1, 0], PointBox[548]}, 
           {RGBColor[1, 1, 0], PointBox[549]}, 
           {RGBColor[1, 1, 0], PointBox[550]}, 
           {RGBColor[0, 1, 0], PointBox[551]}, 
           {RGBColor[0, 1, 0], PointBox[552]}, 
           {RGBColor[0, 1, 0], PointBox[553]}, 
           {RGBColor[1, 1, 0], PointBox[554]}, 
           {RGBColor[0, 1, 0], PointBox[555]}, 
           {RGBColor[1, 1, 0], PointBox[556]}, 
           {RGBColor[0, 1, 0], PointBox[557]}, 
           {RGBColor[0, 1, 0], PointBox[558]}, 
           {RGBColor[1, 1, 0], PointBox[559]}, 
           {RGBColor[0, 1, 0], PointBox[560]}, 
           {RGBColor[0, 1, 0], PointBox[561]}, 
           {RGBColor[0, 1, 0], PointBox[562]}, 
           {RGBColor[0, 1, 0], PointBox[563]}, 
           {RGBColor[1, 1, 0], PointBox[564]}, 
           {RGBColor[1, 1, 0], PointBox[565]}, 
           {RGBColor[1, 1, 0], PointBox[566]}, 
           {RGBColor[1, 1, 0], PointBox[567]}, 
           {RGBColor[1, 1, 0], PointBox[568]}, 
           {RGBColor[1, 1, 0], PointBox[569]}, 
           {RGBColor[0, 1, 0], PointBox[570]}, 
           {RGBColor[1, 1, 0], PointBox[571]}, 
           {RGBColor[0, 1, 0], PointBox[572]}, 
           {RGBColor[1, 1, 0], PointBox[573]}, 
           {RGBColor[1, 1, 0], PointBox[574]}, 
           {RGBColor[0, 1, 0], PointBox[575]}, 
           {RGBColor[0, 1, 0], PointBox[576]}, 
           {RGBColor[1, 0, 0], PointBox[577]}, 
           {RGBColor[0, 1, 0], PointBox[578]}, 
           {RGBColor[1, 1, 0], PointBox[579]}, 
           {RGBColor[0, 1, 0], PointBox[580]}, 
           {RGBColor[1, 0, 0], PointBox[581]}, 
           {RGBColor[1, 1, 0], PointBox[582]}, 
           {RGBColor[1, 1, 0], PointBox[583]}, 
           {RGBColor[1, 0, 0], PointBox[584]}, 
           {RGBColor[1, 1, 0], PointBox[585]}, 
           {RGBColor[1, 1, 0], PointBox[586]}, 
           {RGBColor[1, 1, 0], PointBox[587]}, 
           {RGBColor[0, 1, 0], PointBox[588]}, 
           {RGBColor[1, 0, 0], PointBox[589]}, 
           {RGBColor[1, 1, 0], PointBox[590]}, 
           {RGBColor[1, 0, 0], PointBox[591]}, 
           {RGBColor[0, 1, 0], PointBox[592]}, 
           {RGBColor[0, 1, 0], PointBox[593]}, 
           {RGBColor[1, 1, 0], PointBox[594]}, 
           {RGBColor[1, 1, 0], PointBox[595]}, 
           {RGBColor[1, 0, 0], PointBox[596]}, 
           {RGBColor[1, 1, 0], PointBox[597]}, 
           {RGBColor[1, 1, 0], PointBox[598]}, 
           {RGBColor[1, 1, 0], PointBox[599]}, 
           {RGBColor[1, 1, 0], PointBox[600]}, 
           {RGBColor[1, 0, 0], PointBox[601]}, 
           {RGBColor[1, 1, 0], PointBox[602]}, 
           {RGBColor[1, 0, 0], PointBox[603]}, 
           {RGBColor[0, 1, 0], PointBox[604]}, 
           {RGBColor[0, 1, 0], PointBox[605]}, 
           {RGBColor[0, 1, 0], PointBox[606]}, 
           {RGBColor[1, 0, 0], PointBox[607]}, 
           {RGBColor[1, 1, 0], PointBox[608]}, 
           {RGBColor[1, 0, 0], PointBox[609]}, 
           {RGBColor[1, 1, 0], PointBox[610]}, 
           {RGBColor[0, 1, 0], PointBox[611]}, 
           {RGBColor[0, 1, 0], PointBox[612]}, 
           {RGBColor[1, 0, 0], PointBox[613]}, 
           {RGBColor[0, 1, 0], PointBox[614]}, 
           {RGBColor[1, 1, 0], PointBox[615]}, 
           {RGBColor[1, 0, 0], PointBox[616]}, 
           {RGBColor[0, 1, 0], PointBox[617]}, 
           {RGBColor[0, 1, 0], PointBox[618]}, 
           {RGBColor[0, 1, 0], PointBox[619]}, 
           {RGBColor[0, 1, 0], PointBox[620]}, 
           {RGBColor[1, 1, 0], PointBox[621]}, 
           {RGBColor[1, 0, 0], PointBox[622]}, 
           {RGBColor[1, 1, 0], PointBox[623]}, 
           {RGBColor[0, 1, 0], PointBox[624]}, 
           {RGBColor[1, 1, 0], PointBox[625]}, 
           {RGBColor[1, 0, 0], PointBox[626]}, 
           {RGBColor[0, 1, 0], PointBox[627]}, 
           {RGBColor[0, 1, 0], PointBox[628]}, 
           {RGBColor[1, 0, 0], PointBox[629]}, 
           {RGBColor[1, 0, 0], PointBox[630]}, 
           {RGBColor[0, 1, 0], PointBox[631]}, 
           {RGBColor[1, 1, 0], PointBox[632]}, 
           {RGBColor[1, 1, 0], PointBox[633]}, 
           {RGBColor[1, 1, 0], PointBox[634]}, 
           {RGBColor[1, 1, 0], PointBox[635]}, 
           {RGBColor[1, 1, 0], PointBox[636]}, 
           {RGBColor[1, 1, 0], PointBox[637]}, 
           {RGBColor[0, 1, 0], PointBox[638]}, 
           {RGBColor[0, 1, 0], PointBox[639]}, 
           {RGBColor[0, 1, 0], PointBox[640]}, 
           {RGBColor[1, 1, 0], PointBox[641]}, 
           {RGBColor[1, 0, 0], PointBox[642]}, 
           {RGBColor[1, 1, 0], PointBox[643]}, 
           {RGBColor[1, 1, 0], PointBox[644]}, 
           {RGBColor[1, 1, 0], PointBox[645]}, 
           {RGBColor[1, 1, 0], PointBox[646]}, 
           {RGBColor[1, 1, 0], PointBox[647]}, 
           {RGBColor[1, 0, 0], PointBox[648]}, 
           {RGBColor[0, 1, 0], PointBox[649]}, 
           {RGBColor[1, 1, 0], PointBox[650]}, 
           {RGBColor[0, 1, 0], PointBox[651]}, 
           {RGBColor[0, 1, 0], PointBox[652]}, 
           {RGBColor[1, 0, 0], PointBox[653]}, 
           {RGBColor[0, 1, 0], PointBox[654]}, 
           {RGBColor[1, 0, 0], PointBox[655]}, 
           {RGBColor[1, 1, 0], PointBox[656]}, 
           {RGBColor[1, 0, 0], PointBox[657]}, 
           {RGBColor[1, 1, 0], PointBox[658]}, 
           {RGBColor[1, 1, 0], PointBox[659]}, 
           {RGBColor[1, 1, 0], PointBox[660]}, 
           {RGBColor[1, 0, 0], PointBox[661]}, 
           {RGBColor[1, 1, 0], PointBox[662]}, 
           {RGBColor[1, 1, 0], PointBox[663]}, 
           {RGBColor[1, 0, 0], PointBox[664]}, 
           {RGBColor[1, 1, 0], PointBox[665]}, 
           {RGBColor[1, 0, 0], PointBox[666]}, 
           {RGBColor[1, 1, 0], PointBox[667]}, 
           {RGBColor[1, 1, 0], PointBox[668]}, 
           {RGBColor[1, 0, 0], PointBox[669]}, 
           {RGBColor[0, 1, 0], PointBox[670]}, 
           {RGBColor[0, 1, 0], PointBox[671]}, 
           {RGBColor[1, 0, 0], PointBox[672]}, 
           {RGBColor[1, 0, 0], PointBox[673]}, 
           {RGBColor[1, 0, 0], PointBox[674]}, 
           {RGBColor[1, 1, 0], PointBox[675]}, 
           {RGBColor[1, 1, 0], PointBox[676]}, 
           {RGBColor[1, 0, 0], PointBox[677]}, 
           {RGBColor[1, 1, 0], PointBox[678]}, 
           {RGBColor[1, 1, 0], PointBox[679]}, 
           {RGBColor[1, 0, 0], PointBox[680]}, 
           {RGBColor[1, 0, 0], PointBox[681]}, 
           {RGBColor[1, 1, 0], PointBox[682]}, 
           {RGBColor[1, 1, 0], PointBox[683]}, 
           {RGBColor[1, 0, 0], PointBox[684]}, 
           {RGBColor[1, 1, 0], PointBox[685]}, 
           {RGBColor[1, 1, 0], PointBox[686]}, 
           {RGBColor[1, 0, 0], PointBox[687]}, 
           {RGBColor[1, 0, 0], PointBox[688]}, 
           {RGBColor[1, 0, 0], PointBox[689]}, 
           {RGBColor[1, 1, 0], PointBox[690]}, 
           {RGBColor[1, 0, 0], PointBox[691]}, 
           {RGBColor[1, 1, 0], PointBox[692]}, 
           {RGBColor[1, 0, 0], PointBox[693]}, 
           {RGBColor[1, 0, 0], PointBox[694]}, 
           {RGBColor[1, 1, 0], PointBox[695]}, 
           {RGBColor[1, 0, 0], PointBox[696]}, 
           {RGBColor[1, 1, 0], PointBox[697]}, 
           {RGBColor[1, 0, 0], PointBox[698]}, 
           {RGBColor[0, 1, 0], PointBox[699]}, 
           {RGBColor[1, 0, 0], PointBox[700]}, 
           {RGBColor[1, 1, 0], PointBox[701]}, 
           {RGBColor[1, 0, 0], PointBox[702]}, 
           {RGBColor[1, 1, 0], PointBox[703]}, 
           {RGBColor[1, 0, 0], PointBox[704]}, 
           {RGBColor[1, 1, 0], PointBox[705]}, 
           {RGBColor[1, 0, 0], PointBox[706]}, 
           {RGBColor[0, 1, 0], PointBox[707]}, 
           {RGBColor[0, 1, 0], PointBox[708]}, 
           {RGBColor[0, 1, 0], PointBox[709]}, 
           {RGBColor[1, 0, 0], PointBox[710]}, 
           {RGBColor[1, 0, 0], PointBox[711]}, 
           {RGBColor[1, 0, 0], PointBox[712]}, 
           {RGBColor[1, 1, 0], PointBox[713]}, 
           {RGBColor[1, 0, 0], PointBox[714]}, 
           {RGBColor[1, 1, 0], PointBox[715]}, 
           {RGBColor[1, 0, 0], PointBox[716]}, 
           {RGBColor[1, 0, 0], PointBox[717]}, 
           {RGBColor[1, 0, 0], PointBox[718]}, 
           {RGBColor[0, 1, 0], PointBox[719]}, 
           {RGBColor[1, 1, 0], PointBox[720]}, 
           {RGBColor[1, 0, 0], PointBox[721]}, 
           {RGBColor[0, 1, 0], PointBox[722]}, 
           {RGBColor[1, 1, 0], PointBox[723]}, 
           {RGBColor[1, 0, 0], PointBox[724]}, 
           {RGBColor[1, 0, 0], PointBox[725]}, 
           {RGBColor[0, 1, 0], PointBox[726]}, 
           {RGBColor[0, 1, 0], PointBox[727]}, 
           {RGBColor[0, 1, 0], PointBox[728]}, 
           {RGBColor[1, 1, 0], PointBox[729]}, 
           {RGBColor[1, 1, 0], PointBox[730]}, 
           {RGBColor[0, 1, 0], PointBox[731]}, 
           {RGBColor[0, 1, 0], PointBox[732]}, 
           {RGBColor[0, 1, 0], PointBox[733]}, 
           {RGBColor[0, 1, 0], PointBox[734]}, 
           {RGBColor[0, 1, 0], PointBox[735]}, 
           {RGBColor[0, 1, 0], PointBox[736]}, 
           {RGBColor[1, 0, 0], PointBox[737]}, 
           {RGBColor[1, 1, 0], PointBox[738]}, 
           {RGBColor[1, 1, 0], PointBox[739]}, 
           {RGBColor[0, 1, 0], PointBox[740]}, 
           {RGBColor[1, 0, 0], PointBox[741]}, 
           {RGBColor[0, 1, 0], PointBox[742]}, 
           {RGBColor[0, 1, 0], PointBox[743]}, 
           {RGBColor[1, 0, 0], PointBox[744]}, 
           {RGBColor[0, 1, 0], PointBox[745]}, 
           {RGBColor[1, 0, 0], PointBox[746]}, 
           {RGBColor[0, 1, 0], PointBox[747]}, 
           {RGBColor[1, 0, 0], PointBox[748]}, 
           {RGBColor[1, 1, 0], PointBox[749]}, 
           {RGBColor[1, 1, 0], PointBox[750]}, 
           {RGBColor[1, 0, 0], PointBox[751]}, 
           {RGBColor[0, 1, 0], PointBox[752]}, 
           {RGBColor[1, 0, 0], PointBox[753]}, 
           {RGBColor[0, 1, 0], PointBox[754]}, 
           {RGBColor[0, 1, 0], PointBox[755]}, 
           {RGBColor[1, 0, 0], PointBox[756]}, 
           {RGBColor[1, 0, 0], PointBox[757]}, 
           {RGBColor[1, 0, 0], PointBox[758]}, 
           {RGBColor[1, 1, 0], PointBox[759]}, 
           {RGBColor[1, 1, 0], PointBox[760]}, 
           {RGBColor[1, 0, 0], PointBox[761]}, 
           {RGBColor[1, 0, 0], PointBox[762]}, 
           {RGBColor[1, 0, 0], PointBox[763]}, 
           {RGBColor[1, 1, 0], PointBox[764]}, 
           {RGBColor[1, 0, 0], PointBox[765]}, 
           {RGBColor[0, 1, 0], PointBox[766]}, 
           {RGBColor[1, 0, 0], PointBox[767]}, 
           {RGBColor[0, 1, 0], PointBox[768]}, 
           {RGBColor[1, 0, 0], PointBox[769]}, 
           {RGBColor[0, 1, 0], PointBox[770]}, 
           {RGBColor[0, 1, 0], PointBox[771]}, 
           {RGBColor[1, 0, 0], PointBox[772]}, 
           {RGBColor[1, 1, 0], PointBox[773]}, 
           {RGBColor[1, 0, 0], PointBox[774]}, 
           {RGBColor[0, 1, 0], PointBox[775]}, 
           {RGBColor[1, 0, 0], PointBox[776]}, 
           {RGBColor[0, 1, 0], PointBox[777]}, 
           {RGBColor[0, 1, 0], PointBox[778]}, 
           {RGBColor[0, 1, 0], PointBox[779]}, 
           {RGBColor[1, 0, 0], PointBox[780]}, 
           {RGBColor[0, 1, 0], PointBox[781]}, 
           {RGBColor[0, 1, 0], PointBox[782]}, 
           {RGBColor[0, 1, 0], PointBox[783]}, 
           {RGBColor[1, 0, 0], PointBox[784]}, 
           {RGBColor[1, 0, 0], PointBox[785]}, 
           {RGBColor[1, 0, 0], PointBox[786]}, 
           {RGBColor[0, 1, 0], PointBox[787]}, 
           {RGBColor[1, 0, 0], PointBox[788]}, 
           {RGBColor[1, 0, 0], PointBox[789]}, 
           {RGBColor[1, 1, 0], PointBox[790]}, 
           {RGBColor[1, 0, 0], PointBox[791]}, 
           {RGBColor[1, 0, 0], PointBox[792]}, 
           {RGBColor[1, 0, 0], PointBox[793]}, 
           {RGBColor[0, 1, 0], PointBox[794]}, 
           {RGBColor[0, 1, 0], PointBox[795]}, 
           {RGBColor[1, 0, 0], PointBox[796]}, 
           {RGBColor[1, 0, 0], PointBox[797]}, 
           {RGBColor[0, 1, 0], PointBox[798]}, 
           {RGBColor[1, 1, 0], PointBox[799]}, 
           {RGBColor[1, 0, 0], PointBox[800]}, 
           {RGBColor[1, 0, 0], PointBox[801]}, 
           {RGBColor[1, 0, 0], PointBox[802]}, 
           {RGBColor[1, 0, 0], PointBox[803]}, 
           {RGBColor[0, 1, 0], PointBox[804]}, 
           {RGBColor[0, 1, 0], PointBox[805]}, 
           {RGBColor[0, 1, 0], PointBox[806]}, 
           {RGBColor[1, 1, 0], PointBox[807]}, 
           {RGBColor[1, 1, 0], PointBox[808]}, 
           {RGBColor[0, 1, 0], PointBox[809]}, 
           {RGBColor[1, 1, 0], PointBox[810]}, 
           {RGBColor[1, 1, 0], PointBox[811]}, 
           {RGBColor[0, 1, 0], PointBox[812]}, 
           {RGBColor[0, 1, 0], PointBox[813]}, 
           {RGBColor[1, 1, 0], PointBox[814]}, 
           {RGBColor[1, 1, 0], PointBox[815]}, 
           {RGBColor[0, 1, 0], PointBox[816]}, 
           {RGBColor[1, 1, 0], PointBox[817]}, 
           {RGBColor[0, 1, 0], PointBox[818]}, 
           {RGBColor[0, 1, 0], PointBox[819]}, 
           {RGBColor[0, 1, 0], PointBox[820]}, 
           {RGBColor[1, 1, 0], PointBox[821]}, 
           {RGBColor[1, 1, 0], PointBox[822]}, 
           {RGBColor[1, 1, 0], PointBox[823]}, 
           {RGBColor[1, 1, 0], PointBox[824]}, 
           {RGBColor[0, 1, 0], PointBox[825]}, 
           {RGBColor[1, 1, 0], PointBox[826]}, 
           {RGBColor[1, 1, 0], PointBox[827]}, 
           {RGBColor[1, 1, 0], PointBox[828]}, 
           {RGBColor[0, 1, 0], PointBox[829]}, 
           {RGBColor[1, 0, 0], PointBox[830]}, 
           {RGBColor[0, 1, 0], PointBox[831]}, 
           {RGBColor[1, 1, 0], PointBox[832]}, 
           {RGBColor[0, 1, 0], PointBox[833]}, 
           {RGBColor[1, 1, 0], PointBox[834]}, 
           {RGBColor[1, 1, 0], PointBox[835]}, 
           {RGBColor[1, 1, 0], PointBox[836]}, 
           {RGBColor[0, 1, 0], PointBox[837]}, 
           {RGBColor[1, 1, 0], PointBox[838]}, 
           {RGBColor[0, 1, 0], PointBox[839]}, 
           {RGBColor[0, 1, 0], PointBox[840]}, 
           {RGBColor[1, 1, 0], PointBox[841]}, 
           {RGBColor[1, 1, 0], PointBox[842]}, 
           {RGBColor[1, 1, 0], PointBox[843]}, 
           {RGBColor[1, 1, 0], PointBox[844]}, 
           {RGBColor[1, 1, 0], PointBox[845]}, 
           {RGBColor[0, 1, 0], PointBox[846]}, 
           {RGBColor[1, 0, 0], PointBox[847]}, 
           {RGBColor[1, 0, 0], PointBox[848]}, 
           {RGBColor[1, 1, 0], PointBox[849]}, 
           {RGBColor[0, 1, 0], PointBox[850]}, 
           {RGBColor[1, 1, 0], PointBox[851]}, 
           {RGBColor[1, 1, 0], PointBox[852]}, 
           {RGBColor[1, 1, 0], PointBox[853]}, 
           {RGBColor[0, 1, 0], PointBox[854]}, 
           {RGBColor[1, 1, 0], PointBox[855]}, 
           {RGBColor[0, 1, 0], PointBox[856]}, 
           {RGBColor[1, 0, 0], PointBox[857]}, 
           {RGBColor[1, 1, 0], PointBox[858]}, 
           {RGBColor[1, 1, 0], PointBox[859]}, 
           {RGBColor[1, 0, 0], PointBox[860]}, 
           {RGBColor[1, 1, 0], PointBox[861]}, 
           {RGBColor[0, 1, 0], PointBox[862]}, 
           {RGBColor[1, 0, 0], PointBox[863]}, 
           {RGBColor[1, 1, 0], PointBox[864]}, 
           {RGBColor[1, 1, 0], PointBox[865]}, 
           {RGBColor[1, 1, 0], PointBox[866]}, 
           {RGBColor[0, 1, 0], PointBox[867]}, 
           {RGBColor[1, 1, 0], PointBox[868]}, 
           {RGBColor[1, 1, 0], PointBox[869]}, 
           {RGBColor[1, 0, 0], PointBox[870]}, 
           {RGBColor[1, 1, 0], PointBox[871]}, 
           {RGBColor[1, 1, 0], PointBox[872]}, 
           {RGBColor[1, 0, 0], PointBox[873]}, 
           {RGBColor[1, 0, 0], PointBox[874]}, 
           {RGBColor[0, 1, 0], PointBox[875]}, 
           {RGBColor[0, 1, 0], PointBox[876]}, 
           {RGBColor[0, 1, 0], PointBox[877]}, 
           {RGBColor[1, 1, 0], PointBox[878]}, 
           {RGBColor[0, 1, 0], PointBox[879]}, 
           {RGBColor[0, 1, 0], PointBox[880]}, 
           {RGBColor[0, 1, 0], PointBox[881]}, 
           {RGBColor[0, 1, 0], PointBox[882]}, 
           {RGBColor[1, 0, 0], PointBox[883]}, 
           {RGBColor[1, 1, 0], PointBox[884]}, 
           {RGBColor[1, 0, 0], PointBox[885]}, 
           {RGBColor[0, 1, 0], PointBox[886]}, 
           {RGBColor[1, 0, 0], PointBox[887]}, 
           {RGBColor[0, 1, 0], PointBox[888]}, 
           {RGBColor[1, 1, 0], PointBox[889]}, 
           {RGBColor[0, 1, 0], PointBox[890]}, 
           {RGBColor[0, 1, 0], PointBox[891]}, 
           {RGBColor[0, 1, 0], PointBox[892]}, 
           {RGBColor[1, 1, 0], PointBox[893]}, 
           {RGBColor[1, 0, 0], PointBox[894]}, 
           {RGBColor[0, 1, 0], PointBox[895]}, 
           {RGBColor[1, 0, 0], PointBox[896]}, 
           {RGBColor[1, 0, 0], PointBox[897]}, 
           {RGBColor[1, 0, 0], PointBox[898]}, 
           {RGBColor[1, 1, 0], PointBox[899]}, 
           {RGBColor[1, 1, 0], PointBox[900]}, 
           {RGBColor[0, 1, 0], PointBox[901]}, 
           {RGBColor[1, 1, 0], PointBox[902]}, 
           {RGBColor[0, 1, 0], PointBox[903]}, 
           {RGBColor[1, 1, 0], PointBox[904]}, 
           {RGBColor[1, 1, 0], PointBox[905]}, 
           {RGBColor[1, 1, 0], PointBox[906]}, 
           {RGBColor[0, 1, 0], PointBox[907]}, 
           {RGBColor[1, 0, 0], PointBox[908]}, 
           {RGBColor[1, 1, 0], PointBox[909]}, 
           {RGBColor[1, 0, 0], PointBox[910]}, 
           {RGBColor[0, 1, 0], PointBox[911]}, 
           {RGBColor[1, 1, 0], PointBox[912]}, 
           {RGBColor[1, 1, 0], PointBox[913]}, 
           {RGBColor[0, 1, 0], PointBox[914]}, 
           {RGBColor[1, 1, 0], PointBox[915]}, 
           {RGBColor[0, 1, 0], PointBox[916]}, 
           {RGBColor[1, 1, 0], PointBox[917]}, 
           {RGBColor[1, 0, 0], PointBox[918]}, 
           {RGBColor[1, 1, 0], PointBox[919]}, 
           {RGBColor[1, 1, 0], PointBox[920]}, 
           {RGBColor[1, 1, 0], PointBox[921]}, 
           {RGBColor[0, 1, 0], PointBox[922]}, 
           {RGBColor[1, 0, 0], PointBox[923]}, 
           {RGBColor[1, 0, 0], PointBox[924]}, 
           {RGBColor[1, 0, 0], PointBox[925]}, 
           {RGBColor[1, 1, 0], PointBox[926]}, 
           {RGBColor[1, 1, 0], PointBox[927]}, 
           {RGBColor[1, 1, 0], PointBox[928]}, 
           {RGBColor[1, 1, 0], PointBox[929]}, 
           {RGBColor[1, 1, 0], PointBox[930]}, 
           {RGBColor[0, 1, 0], PointBox[931]}, 
           {RGBColor[1, 0, 0], PointBox[932]}, 
           {RGBColor[1, 1, 0], PointBox[933]}, 
           {RGBColor[1, 0, 0], PointBox[934]}, 
           {RGBColor[1, 1, 0], PointBox[935]}, 
           {RGBColor[1, 1, 0], PointBox[936]}, 
           {RGBColor[1, 1, 0], PointBox[937]}, 
           {RGBColor[1, 0, 0], PointBox[938]}, 
           {RGBColor[1, 1, 0], PointBox[939]}, 
           {RGBColor[0, 1, 0], PointBox[940]}, 
           {RGBColor[1, 0, 0], PointBox[941]}, 
           {RGBColor[1, 0, 0], PointBox[942]}, 
           {RGBColor[1, 0, 0], PointBox[943]}, 
           {RGBColor[1, 1, 0], PointBox[944]}, 
           {RGBColor[1, 1, 0], PointBox[945]}, 
           {RGBColor[1, 1, 0], PointBox[946]}, 
           {RGBColor[1, 1, 0], PointBox[947]}, 
           {RGBColor[1, 0, 0], PointBox[948]}, 
           {RGBColor[1, 1, 0], PointBox[949]}, 
           {RGBColor[1, 1, 0], PointBox[950]}, 
           {RGBColor[1, 1, 0], PointBox[951]}, 
           {RGBColor[0, 1, 0], PointBox[952]}, 
           {RGBColor[1, 0, 0], PointBox[953]}, 
           {RGBColor[1, 0, 0], PointBox[954]}, 
           {RGBColor[1, 0, 0], PointBox[955]}, 
           {RGBColor[1, 1, 0], PointBox[956]}, 
           {RGBColor[1, 1, 0], PointBox[957]}, 
           {RGBColor[1, 0, 0], PointBox[958]}, 
           {RGBColor[1, 1, 0], PointBox[959]}, 
           {RGBColor[1, 1, 0], PointBox[960]}, 
           {RGBColor[1, 0, 0], PointBox[961]}, 
           {RGBColor[1, 0, 0], PointBox[962]}, 
           {RGBColor[1, 1, 0], PointBox[963]}, 
           {RGBColor[1, 1, 0], PointBox[964]}, 
           {RGBColor[1, 0, 0], PointBox[965]}, 
           {RGBColor[1, 1, 0], PointBox[966]}, 
           {RGBColor[1, 1, 0], PointBox[967]}, 
           {RGBColor[1, 0, 0], PointBox[968]}, 
           {RGBColor[1, 0, 0], PointBox[969]}, 
           {RGBColor[1, 0, 0], PointBox[970]}, 
           {RGBColor[1, 1, 0], PointBox[971]}, 
           {RGBColor[0, 1, 0], PointBox[972]}, 
           {RGBColor[0, 1, 0], PointBox[973]}, 
           {RGBColor[1, 0, 0], PointBox[974]}, 
           {RGBColor[1, 1, 0], PointBox[975]}, 
           {RGBColor[1, 0, 0], PointBox[976]}, 
           {RGBColor[0, 1, 0], PointBox[977]}, 
           {RGBColor[1, 0, 0], PointBox[978]}, 
           {RGBColor[1, 0, 0], PointBox[979]}, 
           {RGBColor[1, 0, 0], PointBox[980]}, 
           {RGBColor[0, 1, 0], PointBox[981]}, 
           {RGBColor[1, 1, 0], PointBox[982]}, 
           {RGBColor[0, 1, 0], PointBox[983]}, 
           {RGBColor[0, 1, 0], PointBox[984]}, 
           {RGBColor[1, 0, 0], PointBox[985]}, 
           {RGBColor[1, 0, 0], PointBox[986]}, 
           {RGBColor[1, 0, 0], PointBox[987]}, 
           {RGBColor[1, 1, 0], PointBox[988]}, 
           {RGBColor[1, 0, 0], PointBox[989]}, 
           {RGBColor[1, 1, 0], PointBox[990]}, 
           {RGBColor[1, 0, 0], PointBox[991]}, 
           {RGBColor[1, 0, 0], PointBox[992]}, 
           {RGBColor[1, 0, 0], PointBox[993]}, 
           {RGBColor[0, 1, 0], PointBox[994]}, 
           {RGBColor[0, 1, 0], PointBox[995]}, 
           {RGBColor[0, 1, 0], PointBox[996]}, 
           {RGBColor[1, 1, 0], PointBox[997]}, 
           {RGBColor[0, 1, 0], PointBox[998]}, 
           {RGBColor[0, 1, 0], PointBox[999]}, 
           {RGBColor[0, 1, 0], PointBox[1000]}, 
           {RGBColor[1, 1, 0], PointBox[1001]}, 
           {RGBColor[0, 1, 0], PointBox[1002]}, 
           {RGBColor[1, 0, 0], PointBox[1003]}, 
           {RGBColor[0, 1, 0], PointBox[1004]}, 
           {RGBColor[1, 0, 0], PointBox[1005]}, 
           {RGBColor[0, 1, 0], PointBox[1006]}, 
           {RGBColor[1, 1, 0], PointBox[1007]}, 
           {RGBColor[0, 1, 0], PointBox[1008]}, 
           {RGBColor[0, 1, 0], PointBox[1009]}, 
           {RGBColor[1, 0, 0], PointBox[1010]}, 
           {RGBColor[1, 1, 0], PointBox[1011]}, 
           {RGBColor[0, 1, 0], PointBox[1012]}, 
           {RGBColor[1, 0, 0], PointBox[1013]}, 
           {RGBColor[1, 0, 0], PointBox[1014]}, 
           {RGBColor[1, 0, 0], PointBox[1015]}, 
           {RGBColor[0, 1, 0], PointBox[1016]}, 
           {RGBColor[1, 1, 0], PointBox[1017]}, 
           {RGBColor[0, 1, 0], PointBox[1018]}, 
           {RGBColor[1, 0, 0], PointBox[1019]}, 
           {RGBColor[0, 1, 0], PointBox[1020]}, 
           {RGBColor[1, 0, 0], PointBox[1021]}, 
           {RGBColor[1, 1, 0], PointBox[1022]}, 
           {RGBColor[0, 1, 0], PointBox[1023]}, 
           {RGBColor[1, 0, 0], PointBox[1024]}, 
           {RGBColor[1, 0, 0], PointBox[1025]}, 
           {RGBColor[1, 0, 0], PointBox[1026]}, 
           {RGBColor[1, 1, 0], PointBox[1027]}, 
           {RGBColor[0, 1, 0], PointBox[1028]}, 
           {RGBColor[1, 0, 0], PointBox[1029]}, 
           {RGBColor[1, 0, 0], PointBox[1030]}, 
           {RGBColor[1, 0, 0], PointBox[1031]}, 
           {RGBColor[1, 1, 0], PointBox[1032]}, 
           {RGBColor[1, 1, 0], PointBox[1033]}, 
           {RGBColor[1, 0, 0], PointBox[1034]}, 
           {RGBColor[1, 0, 0], PointBox[1035]}, 
           {RGBColor[1, 0, 0], PointBox[1036]}, 
           {RGBColor[0, 1, 0], PointBox[1037]}, 
           {RGBColor[0, 1, 0], PointBox[1038]}, 
           {RGBColor[0, 1, 0], PointBox[1039]}, 
           {RGBColor[0, 1, 0], PointBox[1040]}, 
           {RGBColor[0, 1, 0], PointBox[1041]}, 
           {RGBColor[0, 1, 0], PointBox[1042]}, 
           {RGBColor[1, 0, 0], PointBox[1043]}, 
           {RGBColor[0, 1, 0], PointBox[1044]}, 
           {RGBColor[1, 0, 0], PointBox[1045]}, 
           {RGBColor[0, 1, 0], PointBox[1046]}, 
           {RGBColor[0, 1, 0], PointBox[1047]}, 
           {RGBColor[1, 0, 0], PointBox[1048]}, 
           {RGBColor[0, 1, 0], PointBox[1049]}, 
           {RGBColor[1, 0, 0], PointBox[1050]}, 
           {RGBColor[1, 0, 0], PointBox[1051]}, 
           {RGBColor[1, 0, 0], PointBox[1052]}, 
           {RGBColor[0, 1, 0], PointBox[1053]}, 
           {RGBColor[0, 1, 0], PointBox[1054]}, 
           {RGBColor[1, 0, 0], PointBox[1055]}, 
           {RGBColor[0, 1, 0], PointBox[1056]}, 
           {RGBColor[0, 1, 0], PointBox[1057]}, 
           {RGBColor[1, 0, 0], PointBox[1058]}, 
           {RGBColor[1, 0, 0], PointBox[1059]}, 
           {RGBColor[1, 0, 0], PointBox[1060]}, 
           {RGBColor[0, 1, 0], PointBox[1061]}, 
           {RGBColor[1, 0, 0], PointBox[1062]}, 
           {RGBColor[1, 0, 0], PointBox[1063]}, 
           {RGBColor[1, 1, 0], PointBox[1064]}, 
           {RGBColor[1, 1, 0], PointBox[1065]}, 
           {RGBColor[0, 1, 0], PointBox[1066]}, 
           {RGBColor[1, 0, 0], PointBox[1067]}, 
           {RGBColor[1, 0, 0], PointBox[1068]}, 
           {RGBColor[1, 0, 0], PointBox[1069]}, 
           {RGBColor[1, 0, 0], PointBox[1070]}, 
           {RGBColor[0, 1, 0], PointBox[1071]}, 
           {RGBColor[0, 1, 0], PointBox[1072]}, 
           {RGBColor[0, 1, 0], PointBox[1073]}, 
           {RGBColor[0, 0, 1], PointBox[1074]}, 
           {RGBColor[0, 0, 1], PointBox[1075]}, 
           {RGBColor[0, 0, 1], PointBox[1076]}, 
           {RGBColor[0, 0, 1], PointBox[1077]}, 
           {RGBColor[0, 1, 0], PointBox[1078]}, 
           {RGBColor[0, 0, 1], PointBox[1079]}, 
           {RGBColor[0, 0, 1], PointBox[1080]}, 
           {RGBColor[0, 0, 1], PointBox[1081]}, 
           {RGBColor[0, 0, 1], PointBox[1082]}, 
           {RGBColor[0, 1, 0], PointBox[1083]}, 
           {RGBColor[0, 1, 0], PointBox[1084]}, 
           {RGBColor[0, 1, 0], PointBox[1085]}, 
           {RGBColor[0, 0, 1], PointBox[1086]}, 
           {RGBColor[0, 1, 0], PointBox[1087]}, 
           {RGBColor[0, 0, 1], PointBox[1088]}, 
           {RGBColor[0, 1, 0], PointBox[1089]}, 
           {RGBColor[0, 1, 0], PointBox[1090]}, 
           {RGBColor[0, 0, 1], PointBox[1091]}, 
           {RGBColor[0, 1, 0], PointBox[1092]}, 
           {RGBColor[0, 0, 1], PointBox[1093]}, 
           {RGBColor[0, 1, 0], PointBox[1094]}, 
           {RGBColor[0, 1, 0], PointBox[1095]}, 
           {RGBColor[0, 1, 0], PointBox[1096]}, 
           {RGBColor[0, 0, 1], PointBox[1097]}, 
           {RGBColor[0, 0, 1], PointBox[1098]}, 
           {RGBColor[0, 1, 0], PointBox[1099]}, 
           {RGBColor[0, 0, 1], PointBox[1100]}, 
           {RGBColor[0, 0, 1], PointBox[1101]}, 
           {RGBColor[0, 1, 0], PointBox[1102]}, 
           {RGBColor[0, 1, 0], PointBox[1103]}, 
           {RGBColor[0, 1, 0], PointBox[1104]}, 
           {RGBColor[0, 0, 1], PointBox[1105]}, 
           {RGBColor[0, 1, 0], PointBox[1106]}, 
           {RGBColor[0, 1, 0], PointBox[1107]}, 
           {RGBColor[0, 1, 0], PointBox[1108]}, 
           {RGBColor[1, 0, 0], PointBox[1109]}, 
           {RGBColor[0, 1, 0], PointBox[1110]}, 
           {RGBColor[0, 0, 1], PointBox[1111]}, 
           {RGBColor[0, 1, 0], PointBox[1112]}, 
           {RGBColor[1, 0, 0], PointBox[1113]}, 
           {RGBColor[0, 0, 1], PointBox[1114]}, 
           {RGBColor[0, 0, 1], PointBox[1115]}, 
           {RGBColor[1, 0, 0], PointBox[1116]}, 
           {RGBColor[0, 0, 1], PointBox[1117]}, 
           {RGBColor[0, 0, 1], PointBox[1118]}, 
           {RGBColor[0, 0, 1], PointBox[1119]}, 
           {RGBColor[0, 1, 0], PointBox[1120]}, 
           {RGBColor[1, 0, 0], PointBox[1121]}, 
           {RGBColor[0, 0, 1], PointBox[1122]}, 
           {RGBColor[1, 0, 0], PointBox[1123]}, 
           {RGBColor[0, 0, 1], PointBox[1124]}, 
           {RGBColor[0, 1, 0], PointBox[1125]}, 
           {RGBColor[0, 0, 1], PointBox[1126]}, 
           {RGBColor[0, 1, 0], PointBox[1127]}, 
           {RGBColor[1, 0, 0], PointBox[1128]}, 
           {RGBColor[0, 0, 1], PointBox[1129]}, 
           {RGBColor[0, 0, 1], PointBox[1130]}, 
           {RGBColor[0, 0, 1], PointBox[1131]}, 
           {RGBColor[0, 1, 0], PointBox[1132]}, 
           {RGBColor[1, 0, 0], PointBox[1133]}, 
           {RGBColor[0, 0, 1], PointBox[1134]}, 
           {RGBColor[1, 0, 0], PointBox[1135]}, 
           {RGBColor[0, 1, 0], PointBox[1136]}, 
           {RGBColor[0, 1, 0], PointBox[1137]}, 
           {RGBColor[0, 1, 0], PointBox[1138]}, 
           {RGBColor[1, 0, 0], PointBox[1139]}, 
           {RGBColor[0, 0, 1], PointBox[1140]}, 
           {RGBColor[1, 0, 0], PointBox[1141]}, 
           {RGBColor[0, 0, 1], PointBox[1142]}, 
           {RGBColor[0, 1, 0], PointBox[1143]}, 
           {RGBColor[0, 1, 0], PointBox[1144]}, 
           {RGBColor[1, 0, 0], PointBox[1145]}, 
           {RGBColor[0, 1, 0], PointBox[1146]}, 
           {RGBColor[0, 0, 1], PointBox[1147]}, 
           {RGBColor[1, 0, 0], PointBox[1148]}, 
           {RGBColor[0, 1, 0], PointBox[1149]}, 
           {RGBColor[0, 0, 1], PointBox[1150]}, 
           {RGBColor[0, 1, 0], PointBox[1151]}, 
           {RGBColor[0, 1, 0], PointBox[1152]}, 
           {RGBColor[0, 1, 0], PointBox[1153]}, 
           {RGBColor[1, 0, 0], PointBox[1154]}, 
           {RGBColor[0, 0, 1], PointBox[1155]}, 
           {RGBColor[0, 1, 0], PointBox[1156]}, 
           {RGBColor[0, 1, 0], PointBox[1157]}, 
           {RGBColor[1, 0, 0], PointBox[1158]}, 
           {RGBColor[0, 1, 0], PointBox[1159]}, 
           {RGBColor[0, 1, 0], PointBox[1160]}, 
           {RGBColor[1, 0, 0], PointBox[1161]}, 
           {RGBColor[1, 0, 0], PointBox[1162]}, 
           {RGBColor[0, 1, 0], PointBox[1163]}, 
           {RGBColor[0, 0, 1], PointBox[1164]}, 
           {RGBColor[0, 0, 1], PointBox[1165]}, 
           {RGBColor[0, 0, 1], PointBox[1166]}, 
           {RGBColor[0, 0, 1], PointBox[1167]}, 
           {RGBColor[0, 0, 1], PointBox[1168]}, 
           {RGBColor[0, 0, 1], PointBox[1169]}, 
           {RGBColor[0, 1, 0], PointBox[1170]}, 
           {RGBColor[0, 0, 1], PointBox[1171]}, 
           {RGBColor[0, 1, 0], PointBox[1172]}, 
           {RGBColor[0, 0, 1], PointBox[1173]}, 
           {RGBColor[1, 0, 0], PointBox[1174]}, 
           {RGBColor[0, 0, 1], PointBox[1175]}, 
           {RGBColor[0, 0, 1], PointBox[1176]}, 
           {RGBColor[0, 0, 1], PointBox[1177]}, 
           {RGBColor[1, 0, 0], PointBox[1178]}, 
           {RGBColor[0, 1, 0], PointBox[1179]}, 
           {RGBColor[0, 1, 0], PointBox[1180]}, 
           {RGBColor[1, 0, 0], PointBox[1181]}, 
           {RGBColor[0, 1, 0], PointBox[1182]}, 
           {RGBColor[1, 0, 0], PointBox[1183]}, 
           {RGBColor[0, 0, 1], PointBox[1184]}, 
           {RGBColor[1, 0, 0], PointBox[1185]}, 
           {RGBColor[0, 0, 1], PointBox[1186]}, 
           {RGBColor[0, 0, 1], PointBox[1187]}, 
           {RGBColor[0, 0, 1], PointBox[1188]}, 
           {RGBColor[1, 0, 0], PointBox[1189]}, 
           {RGBColor[0, 0, 1], PointBox[1190]}, 
           {RGBColor[0, 0, 1], PointBox[1191]}, 
           {RGBColor[1, 0, 0], PointBox[1192]}, 
           {RGBColor[0, 0, 1], PointBox[1193]}, 
           {RGBColor[1, 0, 0], PointBox[1194]}, 
           {RGBColor[0, 0, 1], PointBox[1195]}, 
           {RGBColor[0, 0, 1], PointBox[1196]}, 
           {RGBColor[1, 0, 0], PointBox[1197]}, 
           {RGBColor[0, 0, 1], PointBox[1198]}, 
           {RGBColor[0, 1, 0], PointBox[1199]}, 
           {RGBColor[1, 0, 0], PointBox[1200]}, 
           {RGBColor[1, 0, 0], PointBox[1201]}, 
           {RGBColor[1, 0, 0], PointBox[1202]}, 
           {RGBColor[0, 0, 1], PointBox[1203]}, 
           {RGBColor[0, 0, 1], PointBox[1204]}, 
           {RGBColor[1, 0, 0], PointBox[1205]}, 
           {RGBColor[1, 0, 0], PointBox[1206]}, 
           {RGBColor[0, 0, 1], PointBox[1207]}, 
           {RGBColor[0, 0, 1], PointBox[1208]}, 
           {RGBColor[1, 0, 0], PointBox[1209]}, 
           {RGBColor[1, 0, 0], PointBox[1210]}, 
           {RGBColor[1, 0, 0], PointBox[1211]}, 
           {RGBColor[0, 0, 1], PointBox[1212]}, 
           {RGBColor[1, 0, 0], PointBox[1213]}, 
           {RGBColor[1, 0, 0], PointBox[1214]}, 
           {RGBColor[0, 0, 1], PointBox[1215]}, 
           {RGBColor[1, 0, 0], PointBox[1216]}, 
           {RGBColor[0, 1, 0], PointBox[1217]}, 
           {RGBColor[1, 0, 0], PointBox[1218]}, 
           {RGBColor[0, 0, 1], PointBox[1219]}, 
           {RGBColor[1, 0, 0], PointBox[1220]}, 
           {RGBColor[0, 0, 1], PointBox[1221]}, 
           {RGBColor[1, 0, 0], PointBox[1222]}, 
           {RGBColor[0, 0, 1], PointBox[1223]}, 
           {RGBColor[1, 0, 0], PointBox[1224]}, 
           {RGBColor[0, 1, 0], PointBox[1225]}, 
           {RGBColor[0, 0, 1], PointBox[1226]}, 
           {RGBColor[0, 1, 0], PointBox[1227]}, 
           {RGBColor[1, 0, 0], PointBox[1228]}, 
           {RGBColor[1, 0, 0], PointBox[1229]}, 
           {RGBColor[1, 0, 0], PointBox[1230]}, 
           {RGBColor[0, 0, 1], PointBox[1231]}, 
           {RGBColor[1, 0, 0], PointBox[1232]}, 
           {RGBColor[1, 0, 0], PointBox[1233]}, 
           {RGBColor[1, 0, 0], PointBox[1234]}, 
           {RGBColor[0, 1, 0], PointBox[1235]}, 
           {RGBColor[0, 0, 1], PointBox[1236]}, 
           {RGBColor[1, 0, 0], PointBox[1237]}, 
           {RGBColor[1, 0, 0], PointBox[1238]}, 
           {RGBColor[0, 1, 0], PointBox[1239]}, 
           {RGBColor[0, 1, 0], PointBox[1240]}, 
           {RGBColor[0, 1, 0], PointBox[1241]}, 
           {RGBColor[0, 0, 1], PointBox[1242]}, 
           {RGBColor[0, 0, 1], PointBox[1243]}, 
           {RGBColor[0, 1, 0], PointBox[1244]}, 
           {RGBColor[0, 1, 0], PointBox[1245]}, 
           {RGBColor[0, 1, 0], PointBox[1246]}, 
           {RGBColor[0, 0, 1], PointBox[1247]}, 
           {RGBColor[0, 1, 0], PointBox[1248]}, 
           {RGBColor[0, 1, 0], PointBox[1249]}, 
           {RGBColor[1, 0, 0], PointBox[1250]}, 
           {RGBColor[0, 0, 1], PointBox[1251]}, 
           {RGBColor[0, 1, 0], PointBox[1252]}, 
           {RGBColor[0, 0, 1], PointBox[1253]}, 
           {RGBColor[0, 0, 1], PointBox[1254]}, 
           {RGBColor[0, 1, 0], PointBox[1255]}, 
           {RGBColor[1, 0, 0], PointBox[1256]}, 
           {RGBColor[0, 1, 0], PointBox[1257]}, 
           {RGBColor[0, 1, 0], PointBox[1258]}, 
           {RGBColor[0, 1, 0], PointBox[1259]}, 
           {RGBColor[0, 1, 0], PointBox[1260]}, 
           {RGBColor[1, 0, 0], PointBox[1261]}, 
           {RGBColor[0, 1, 0], PointBox[1262]}, 
           {RGBColor[1, 0, 0], PointBox[1263]}, 
           {RGBColor[0, 1, 0], PointBox[1264]}, 
           {RGBColor[1, 0, 0], PointBox[1265]}, 
           {RGBColor[0, 0, 1], PointBox[1266]}, 
           {RGBColor[0, 0, 1], PointBox[1267]}, 
           {RGBColor[1, 0, 0], PointBox[1268]}, 
           {RGBColor[0, 1, 0], PointBox[1269]}, 
           {RGBColor[1, 0, 0], PointBox[1270]}, 
           {RGBColor[0, 0, 1], PointBox[1271]}, 
           {RGBColor[0, 1, 0], PointBox[1272]}, 
           {RGBColor[1, 0, 0], PointBox[1273]}, 
           {RGBColor[1, 0, 0], PointBox[1274]}, 
           {RGBColor[1, 0, 0], PointBox[1275]}, 
           {RGBColor[0, 0, 1], PointBox[1276]}, 
           {RGBColor[0, 1, 0], PointBox[1277]}, 
           {RGBColor[1, 0, 0], PointBox[1278]}, 
           {RGBColor[0, 0, 1], PointBox[1279]}, 
           {RGBColor[0, 0, 1], PointBox[1280]}, 
           {RGBColor[1, 0, 0], PointBox[1281]}, 
           {RGBColor[1, 0, 0], PointBox[1282]}, 
           {RGBColor[1, 0, 0], PointBox[1283]}, 
           {RGBColor[0, 1, 0], PointBox[1284]}, 
           {RGBColor[1, 0, 0], PointBox[1285]}, 
           {RGBColor[0, 0, 1], PointBox[1286]}, 
           {RGBColor[1, 0, 0], PointBox[1287]}, 
           {RGBColor[0, 1, 0], PointBox[1288]}, 
           {RGBColor[1, 0, 0], PointBox[1289]}, 
           {RGBColor[0, 1, 0], PointBox[1290]}, 
           {RGBColor[1, 0, 0], PointBox[1291]}, 
           {RGBColor[0, 1, 0], PointBox[1292]}, 
           {RGBColor[0, 1, 0], PointBox[1293]}, 
           {RGBColor[1, 0, 0], PointBox[1294]}, 
           {RGBColor[0, 0, 1], PointBox[1295]}, 
           {RGBColor[1, 0, 0], PointBox[1296]}, 
           {RGBColor[0, 1, 0], PointBox[1297]}, 
           {RGBColor[1, 0, 0], PointBox[1298]}, 
           {RGBColor[0, 1, 0], PointBox[1299]}, 
           {RGBColor[0, 1, 0], PointBox[1300]}, 
           {RGBColor[0, 1, 0], PointBox[1301]}, 
           {RGBColor[1, 0, 0], PointBox[1302]}, 
           {RGBColor[0, 1, 0], PointBox[1303]}, 
           {RGBColor[0, 0, 1], PointBox[1304]}, 
           {RGBColor[0, 1, 0], PointBox[1305]}, 
           {RGBColor[1, 0, 0], PointBox[1306]}, 
           {RGBColor[1, 0, 0], PointBox[1307]}, 
           {RGBColor[1, 0, 0], PointBox[1308]}, 
           {RGBColor[0, 1, 0], PointBox[1309]}, 
           {RGBColor[1, 0, 0], PointBox[1310]}, 
           {RGBColor[0, 1, 0], PointBox[1311]}, 
           {RGBColor[1, 0, 0], PointBox[1312]}, 
           {RGBColor[1, 0, 0], PointBox[1313]}, 
           {RGBColor[0, 1, 0], PointBox[1314]}, 
           {RGBColor[1, 0, 0], PointBox[1315]}, 
           {RGBColor[0, 0, 1], PointBox[1316]}, 
           {RGBColor[1, 0, 0], PointBox[1317]}, 
           {RGBColor[1, 0, 0], PointBox[1318]}, 
           {RGBColor[1, 0, 0], PointBox[1319]}, 
           {RGBColor[0, 1, 0], PointBox[1320]}, 
           {RGBColor[0, 1, 0], PointBox[1321]}, 
           {RGBColor[1, 0, 0], PointBox[1322]}, 
           {RGBColor[0, 1, 0], PointBox[1323]}, 
           {RGBColor[0, 1, 0], PointBox[1324]}, 
           {RGBColor[1, 0, 0], PointBox[1325]}, 
           {RGBColor[1, 0, 0], PointBox[1326]}, 
           {RGBColor[0, 1, 0], PointBox[1327]}, 
           {RGBColor[0, 1, 0], PointBox[1328]}, 
           {RGBColor[1, 0, 0], PointBox[1329]}, 
           {RGBColor[0, 1, 0], PointBox[1330]}, 
           {RGBColor[0, 0, 1], PointBox[1331]}, 
           {RGBColor[1, 0, 0], PointBox[1332]}, 
           {RGBColor[1, 0, 0], PointBox[1333]}, 
           {RGBColor[1, 0, 0], PointBox[1334]}, 
           {RGBColor[1, 0, 0], PointBox[1335]}, 
           {RGBColor[0, 1, 0], PointBox[1336]}, 
           {RGBColor[0, 1, 0], PointBox[1337]}, 
           {RGBColor[0, 1, 0], PointBox[1338]}, 
           {RGBColor[0, 0, 1], PointBox[1339]}, 
           {RGBColor[0, 0, 1], PointBox[1340]}, 
           {RGBColor[0, 1, 0], PointBox[1341]}, 
           {RGBColor[0, 0, 1], PointBox[1342]}, 
           {RGBColor[0, 0, 1], PointBox[1343]}, 
           {RGBColor[0, 1, 0], PointBox[1344]}, 
           {RGBColor[0, 1, 0], PointBox[1345]}, 
           {RGBColor[0, 0, 1], PointBox[1346]}, 
           {RGBColor[0, 0, 1], PointBox[1347]}, 
           {RGBColor[0, 1, 0], PointBox[1348]}, 
           {RGBColor[0, 0, 1], PointBox[1349]}, 
           {RGBColor[0, 1, 0], PointBox[1350]}, 
           {RGBColor[0, 1, 0], PointBox[1351]}, 
           {RGBColor[0, 1, 0], PointBox[1352]}, 
           {RGBColor[0, 0, 1], PointBox[1353]}, 
           {RGBColor[0, 0, 1], PointBox[1354]}, 
           {RGBColor[0, 0, 1], PointBox[1355]}, 
           {RGBColor[0, 0, 1], PointBox[1356]}, 
           {RGBColor[0, 1, 0], PointBox[1357]}, 
           {RGBColor[0, 0, 1], PointBox[1358]}, 
           {RGBColor[0, 0, 1], PointBox[1359]}, 
           {RGBColor[0, 0, 1], PointBox[1360]}, 
           {RGBColor[0, 0, 1], PointBox[1361]}, 
           {RGBColor[1, 0, 0], PointBox[1362]}, 
           {RGBColor[0, 1, 0], PointBox[1363]}, 
           {RGBColor[0, 1, 0], PointBox[1364]}, 
           {RGBColor[0, 1, 0], PointBox[1365]}, 
           {RGBColor[0, 0, 1], PointBox[1366]}, 
           {RGBColor[0, 0, 1], PointBox[1367]}, 
           {RGBColor[0, 1, 0], PointBox[1368]}, 
           {RGBColor[0, 1, 0], PointBox[1369]}, 
           {RGBColor[0, 0, 1], PointBox[1370]}, 
           {RGBColor[0, 1, 0], PointBox[1371]}, 
           {RGBColor[0, 1, 0], PointBox[1372]}, 
           {RGBColor[0, 1, 0], PointBox[1373]}, 
           {RGBColor[0, 0, 1], PointBox[1374]}, 
           {RGBColor[0, 0, 1], PointBox[1375]}, 
           {RGBColor[0, 1, 0], PointBox[1376]}, 
           {RGBColor[0, 0, 1], PointBox[1377]}, 
           {RGBColor[0, 1, 0], PointBox[1378]}, 
           {RGBColor[1, 0, 0], PointBox[1379]}, 
           {RGBColor[1, 0, 0], PointBox[1380]}, 
           {RGBColor[0, 0, 1], PointBox[1381]}, 
           {RGBColor[0, 1, 0], PointBox[1382]}, 
           {RGBColor[0, 0, 1], PointBox[1383]}, 
           {RGBColor[0, 0, 1], PointBox[1384]}, 
           {RGBColor[0, 0, 1], PointBox[1385]}, 
           {RGBColor[0, 1, 0], PointBox[1386]}, 
           {RGBColor[0, 0, 1], PointBox[1387]}, 
           {RGBColor[0, 1, 0], PointBox[1388]}, 
           {RGBColor[1, 0, 0], PointBox[1389]}, 
           {RGBColor[0, 0, 1], PointBox[1390]}, 
           {RGBColor[0, 0, 1], PointBox[1391]}, 
           {RGBColor[1, 0, 0], PointBox[1392]}, 
           {RGBColor[0, 0, 1], PointBox[1393]}, 
           {RGBColor[0, 0, 1], PointBox[1394]}, 
           {RGBColor[1, 0, 0], PointBox[1395]}, 
           {RGBColor[0, 0, 1], PointBox[1396]}, 
           {RGBColor[0, 1, 0], PointBox[1397]}, 
           {RGBColor[0, 0, 1], PointBox[1398]}, 
           {RGBColor[0, 1, 0], PointBox[1399]}, 
           {RGBColor[0, 0, 1], PointBox[1400]}, 
           {RGBColor[0, 1, 0], PointBox[1401]}, 
           {RGBColor[1, 0, 0], PointBox[1402]}, 
           {RGBColor[0, 0, 1], PointBox[1403]}, 
           {RGBColor[0, 0, 1], PointBox[1404]}, 
           {RGBColor[1, 0, 0], PointBox[1405]}, 
           {RGBColor[1, 0, 0], PointBox[1406]}, 
           {RGBColor[0, 1, 0], PointBox[1407]}, 
           {RGBColor[0, 1, 0], PointBox[1408]}, 
           {RGBColor[0, 1, 0], PointBox[1409]}, 
           {RGBColor[0, 0, 1], PointBox[1410]}, 
           {RGBColor[0, 1, 0], PointBox[1411]}, 
           {RGBColor[0, 1, 0], PointBox[1412]}, 
           {RGBColor[0, 1, 0], PointBox[1413]}, 
           {RGBColor[0, 1, 0], PointBox[1414]}, 
           {RGBColor[1, 0, 0], PointBox[1415]}, 
           {RGBColor[0, 0, 1], PointBox[1416]}, 
           {RGBColor[1, 0, 0], PointBox[1417]}, 
           {RGBColor[0, 0, 1], PointBox[1418]}, 
           {RGBColor[1, 0, 0], PointBox[1419]}, 
           {RGBColor[0, 1, 0], PointBox[1420]}, 
           {RGBColor[0, 1, 0], PointBox[1421]}, 
           {RGBColor[0, 1, 0], PointBox[1422]}, 
           {RGBColor[0, 1, 0], PointBox[1423]}, 
           {RGBColor[0, 1, 0], PointBox[1424]}, 
           {RGBColor[0, 1, 0], PointBox[1425]}, 
           {RGBColor[1, 0, 0], PointBox[1426]}, 
           {RGBColor[0, 1, 0], PointBox[1427]}, 
           {RGBColor[1, 0, 0], PointBox[1428]}, 
           {RGBColor[1, 0, 0], PointBox[1429]}, 
           {RGBColor[1, 0, 0], PointBox[1430]}, 
           {RGBColor[0, 0, 1], PointBox[1431]}, 
           {RGBColor[0, 0, 1], PointBox[1432]}, 
           {RGBColor[0, 1, 0], PointBox[1433]}, 
           {RGBColor[0, 0, 1], PointBox[1434]}, 
           {RGBColor[0, 1, 0], PointBox[1435]}, 
           {RGBColor[0, 0, 1], PointBox[1436]}, 
           {RGBColor[0, 0, 1], PointBox[1437]}, 
           {RGBColor[0, 0, 1], PointBox[1438]}, 
           {RGBColor[0, 0, 1], PointBox[1439]}, 
           {RGBColor[1, 0, 0], PointBox[1440]}, 
           {RGBColor[0, 0, 1], PointBox[1441]}, 
           {RGBColor[1, 0, 0], PointBox[1442]}, 
           {RGBColor[0, 1, 0], PointBox[1443]}, 
           {RGBColor[0, 0, 1], PointBox[1444]}, 
           {RGBColor[0, 1, 0], PointBox[1445]}, 
           {RGBColor[0, 0, 1], PointBox[1446]}, 
           {RGBColor[1, 0, 0], PointBox[1447]}, 
           {RGBColor[0, 0, 1], PointBox[1448]}, 
           {RGBColor[0, 1, 0], PointBox[1449]}, 
           {RGBColor[1, 0, 0], PointBox[1450]}, 
           {RGBColor[1, 0, 0], PointBox[1451]}, 
           {RGBColor[1, 0, 0], PointBox[1452]}, 
           {RGBColor[0, 0, 1], PointBox[1453]}, 
           {RGBColor[0, 0, 1], PointBox[1454]}, 
           {RGBColor[0, 0, 1], PointBox[1455]}, 
           {RGBColor[0, 0, 1], PointBox[1456]}, 
           {RGBColor[0, 0, 1], PointBox[1457]}, 
           {RGBColor[0, 1, 0], PointBox[1458]}, 
           {RGBColor[1, 0, 0], PointBox[1459]}, 
           {RGBColor[0, 0, 1], PointBox[1460]}, 
           {RGBColor[1, 0, 0], PointBox[1461]}, 
           {RGBColor[0, 0, 1], PointBox[1462]}, 
           {RGBColor[0, 0, 1], PointBox[1463]}, 
           {RGBColor[0, 0, 1], PointBox[1464]}, 
           {RGBColor[1, 0, 0], PointBox[1465]}, 
           {RGBColor[0, 0, 1], PointBox[1466]}, 
           {RGBColor[0, 0, 1], PointBox[1467]}, 
           {RGBColor[1, 0, 0], PointBox[1468]}, 
           {RGBColor[1, 0, 0], PointBox[1469]}, 
           {RGBColor[1, 0, 0], PointBox[1470]}, 
           {RGBColor[0, 0, 1], PointBox[1471]}, 
           {RGBColor[0, 0, 1], PointBox[1472]}, 
           {RGBColor[1, 0, 0], PointBox[1473]}, 
           {RGBColor[0, 0, 1], PointBox[1474]}, 
           {RGBColor[0, 1, 0], PointBox[1475]}, 
           {RGBColor[1, 0, 0], PointBox[1476]}, 
           {RGBColor[1, 0, 0], PointBox[1477]}, 
           {RGBColor[1, 0, 0], PointBox[1478]}, 
           {RGBColor[0, 0, 1], PointBox[1479]}, 
           {RGBColor[0, 0, 1], PointBox[1480]}, 
           {RGBColor[1, 0, 0], PointBox[1481]}, 
           {RGBColor[1, 0, 0], PointBox[1482]}, 
           {RGBColor[0, 0, 1], PointBox[1483]}, 
           {RGBColor[0, 0, 1], PointBox[1484]}, 
           {RGBColor[1, 0, 0], PointBox[1485]}, 
           {RGBColor[1, 0, 0], PointBox[1486]}, 
           {RGBColor[1, 0, 0], PointBox[1487]}, 
           {RGBColor[0, 0, 1], PointBox[1488]}, 
           {RGBColor[0, 1, 0], PointBox[1489]}, 
           {RGBColor[0, 1, 0], PointBox[1490]}, 
           {RGBColor[1, 0, 0], PointBox[1491]}, 
           {RGBColor[0, 0, 1], PointBox[1492]}, 
           {RGBColor[1, 0, 0], PointBox[1493]}, 
           {RGBColor[0, 0, 1], PointBox[1494]}, 
           {RGBColor[1, 0, 0], PointBox[1495]}, 
           {RGBColor[1, 0, 0], PointBox[1496]}, 
           {RGBColor[1, 0, 0], PointBox[1497]}, 
           {RGBColor[0, 1, 0], PointBox[1498]}, 
           {RGBColor[0, 1, 0], PointBox[1499]}, 
           {RGBColor[1, 0, 0], PointBox[1500]}, 
           {RGBColor[1, 0, 0], PointBox[1501]}, 
           {RGBColor[1, 0, 0], PointBox[1502]}, 
           {RGBColor[0, 0, 1], PointBox[1503]}, 
           {RGBColor[1, 0, 0], PointBox[1504]}, 
           {RGBColor[1, 0, 0], PointBox[1505]}, 
           {RGBColor[1, 0, 0], PointBox[1506]}, 
           {RGBColor[0, 1, 0], PointBox[1507]}, 
           {RGBColor[0, 1, 0], PointBox[1508]}, 
           {RGBColor[0, 1, 0], PointBox[1509]}, 
           {RGBColor[0, 0, 1], PointBox[1510]}, 
           {RGBColor[0, 1, 0], PointBox[1511]}, 
           {RGBColor[0, 1, 0], PointBox[1512]}, 
           {RGBColor[0, 1, 0], PointBox[1513]}, 
           {RGBColor[0, 0, 1], PointBox[1514]}, 
           {RGBColor[0, 0, 1], PointBox[1515]}, 
           {RGBColor[1, 0, 0], PointBox[1516]}, 
           {RGBColor[0, 1, 0], PointBox[1517]}, 
           {RGBColor[1, 0, 0], PointBox[1518]}, 
           {RGBColor[0, 1, 0], PointBox[1519]}, 
           {RGBColor[0, 0, 1], PointBox[1520]}, 
           {RGBColor[0, 1, 0], PointBox[1521]}, 
           {RGBColor[0, 1, 0], PointBox[1522]}, 
           {RGBColor[0, 0, 1], PointBox[1523]}, 
           {RGBColor[0, 1, 0], PointBox[1524]}, 
           {RGBColor[0, 1, 0], PointBox[1525]}, 
           {RGBColor[1, 0, 0], PointBox[1526]}, 
           {RGBColor[0, 0, 1], PointBox[1527]}, 
           {RGBColor[0, 1, 0], PointBox[1528]}, 
           {RGBColor[0, 0, 1], PointBox[1529]}, 
           {RGBColor[0, 1, 0], PointBox[1530]}, 
           {RGBColor[1, 0, 0], PointBox[1531]}, 
           {RGBColor[1, 0, 0], PointBox[1532]}, 
           {RGBColor[1, 0, 0], PointBox[1533]}, 
           {RGBColor[0, 1, 0], PointBox[1534]}, 
           {RGBColor[0, 0, 1], PointBox[1535]}, 
           {RGBColor[0, 1, 0], PointBox[1536]}, 
           {RGBColor[1, 0, 0], PointBox[1537]}, 
           {RGBColor[0, 1, 0], PointBox[1538]}, 
           {RGBColor[1, 0, 0], PointBox[1539]}, 
           {RGBColor[0, 0, 1], PointBox[1540]}, 
           {RGBColor[0, 0, 1], PointBox[1541]}, 
           {RGBColor[1, 0, 0], PointBox[1542]}, 
           {RGBColor[1, 0, 0], PointBox[1543]}, 
           {RGBColor[1, 0, 0], PointBox[1544]}, 
           {RGBColor[0, 0, 1], PointBox[1545]}, 
           {RGBColor[0, 1, 0], PointBox[1546]}, 
           {RGBColor[0, 0, 1], PointBox[1547]}, 
           {RGBColor[0, 1, 0], PointBox[1548]}, 
           {RGBColor[1, 0, 0], PointBox[1549]}, 
           {RGBColor[1, 0, 0], PointBox[1550]}, 
           {RGBColor[1, 0, 0], PointBox[1551]}, 
           {RGBColor[0, 0, 1], PointBox[1552]}, 
           {RGBColor[0, 1, 0], PointBox[1553]}, 
           {RGBColor[1, 0, 0], PointBox[1554]}, 
           {RGBColor[0, 0, 1], PointBox[1555]}, 
           {RGBColor[0, 0, 1], PointBox[1556]}, 
           {RGBColor[1, 0, 0], PointBox[1557]}, 
           {RGBColor[1, 0, 0], PointBox[1558]}, 
           {RGBColor[1, 0, 0], PointBox[1559]}, 
           {RGBColor[0, 1, 0], PointBox[1560]}, 
           {RGBColor[0, 1, 0], PointBox[1561]}, 
           {RGBColor[0, 1, 0], PointBox[1562]}, 
           {RGBColor[0, 1, 0], PointBox[1563]}, 
           {RGBColor[0, 1, 0], PointBox[1564]}, 
           {RGBColor[0, 1, 0], PointBox[1565]}, 
           {RGBColor[1, 0, 0], PointBox[1566]}, 
           {RGBColor[0, 1, 0], PointBox[1567]}, 
           {RGBColor[1, 0, 0], PointBox[1568]}, 
           {RGBColor[0, 1, 0], PointBox[1569]}, 
           {RGBColor[0, 1, 0], PointBox[1570]}, 
           {RGBColor[1, 0, 0], PointBox[1571]}, 
           {RGBColor[0, 0, 1], PointBox[1572]}, 
           {RGBColor[1, 0, 0], PointBox[1573]}, 
           {RGBColor[1, 0, 0], PointBox[1574]}, 
           {RGBColor[1, 0, 0], PointBox[1575]}, 
           {RGBColor[0, 1, 0], PointBox[1576]}, 
           {RGBColor[0, 1, 0], PointBox[1577]}, 
           {RGBColor[0, 1, 0], PointBox[1578]}, 
           {RGBColor[0, 1, 0], PointBox[1579]}, 
           {RGBColor[1, 0, 0], PointBox[1580]}, 
           {RGBColor[0, 1, 0], PointBox[1581]}, 
           {RGBColor[0, 1, 0], PointBox[1582]}, 
           {RGBColor[0, 1, 0], PointBox[1583]}, 
           {RGBColor[0, 1, 0], PointBox[1584]}, 
           {RGBColor[1, 0, 0], PointBox[1585]}, 
           {RGBColor[1, 0, 0], PointBox[1586]}, 
           {RGBColor[1, 0, 0], PointBox[1587]}, 
           {RGBColor[0, 1, 0], PointBox[1588]}, 
           {RGBColor[1, 0, 0], PointBox[1589]}, 
           {RGBColor[0, 1, 0], PointBox[1590]}, 
           {RGBColor[1, 0, 0], PointBox[1591]}, 
           {RGBColor[1, 0, 0], PointBox[1592]}, 
           {RGBColor[0, 1, 0], PointBox[1593]}, 
           {RGBColor[1, 0, 0], PointBox[1594]}, 
           {RGBColor[0, 0, 1], PointBox[1595]}, 
           {RGBColor[1, 0, 0], PointBox[1596]}, 
           {RGBColor[1, 0, 0], PointBox[1597]}, 
           {RGBColor[1, 0, 0], PointBox[1598]}, 
           {RGBColor[1, 0, 0], PointBox[1599]}, 
           {RGBColor[0, 1, 0], PointBox[1600]}, 
           {RGBColor[0, 1, 0], PointBox[1601]}, 
           {RGBColor[0, 1, 0], PointBox[1602]}, 
           {RGBColor[0, 0, 1], PointBox[1603]}, 
           {RGBColor[0, 0, 1], PointBox[1604]}, 
           {RGBColor[0, 0, 1], PointBox[1605]}, 
           {RGBColor[0, 0, 1], PointBox[1606]}, 
           {RGBColor[0, 1, 0], PointBox[1607]}, 
           {RGBColor[0, 0, 1], PointBox[1608]}, 
           {RGBColor[0, 0, 1], PointBox[1609]}, 
           {RGBColor[0, 0, 1], PointBox[1610]}, 
           {RGBColor[0, 0, 1], PointBox[1611]}, 
           {RGBColor[0, 1, 0], PointBox[1612]}, 
           {RGBColor[0, 1, 0], PointBox[1613]}, 
           {RGBColor[0, 1, 0], PointBox[1614]}, 
           {RGBColor[0, 0, 1], PointBox[1615]}, 
           {RGBColor[0, 1, 0], PointBox[1616]}, 
           {RGBColor[0, 0, 1], PointBox[1617]}, 
           {RGBColor[0, 1, 0], PointBox[1618]}, 
           {RGBColor[0, 1, 0], PointBox[1619]}, 
           {RGBColor[0, 0, 1], PointBox[1620]}, 
           {RGBColor[0, 1, 0], PointBox[1621]}, 
           {RGBColor[0, 1, 0], PointBox[1622]}, 
           {RGBColor[0, 1, 0], PointBox[1623]}, 
           {RGBColor[0, 1, 0], PointBox[1624]}, 
           {RGBColor[0, 0, 1], PointBox[1625]}, 
           {RGBColor[0, 0, 1], PointBox[1626]}, 
           {RGBColor[0, 0, 1], PointBox[1627]}, 
           {RGBColor[0, 0, 1], PointBox[1628]}, 
           {RGBColor[0, 0, 1], PointBox[1629]}, 
           {RGBColor[0, 0, 1], PointBox[1630]}, 
           {RGBColor[0, 1, 0], PointBox[1631]}, 
           {RGBColor[0, 0, 1], PointBox[1632]}, 
           {RGBColor[0, 1, 0], PointBox[1633]}, 
           {RGBColor[0, 0, 1], PointBox[1634]}, 
           {RGBColor[0, 0, 1], PointBox[1635]}, 
           {RGBColor[0, 1, 0], PointBox[1636]}, 
           {RGBColor[0, 1, 0], PointBox[1637]}, 
           {RGBColor[1, 0, 0], PointBox[1638]}, 
           {RGBColor[0, 1, 0], PointBox[1639]}, 
           {RGBColor[0, 0, 1], PointBox[1640]}, 
           {RGBColor[0, 1, 0], PointBox[1641]}, 
           {RGBColor[1, 0, 0], PointBox[1642]}, 
           {RGBColor[0, 0, 1], PointBox[1643]}, 
           {RGBColor[0, 0, 1], PointBox[1644]}, 
           {RGBColor[1, 0, 0], PointBox[1645]}, 
           {RGBColor[0, 0, 1], PointBox[1646]}, 
           {RGBColor[0, 0, 1], PointBox[1647]}, 
           {RGBColor[0, 0, 1], PointBox[1648]}, 
           {RGBColor[0, 1, 0], PointBox[1649]}, 
           {RGBColor[1, 0, 0], PointBox[1650]}, 
           {RGBColor[0, 0, 1], PointBox[1651]}, 
           {RGBColor[1, 0, 0], PointBox[1652]}, 
           {RGBColor[0, 1, 0], PointBox[1653]}, 
           {RGBColor[0, 1, 0], PointBox[1654]}, 
           {RGBColor[0, 0, 1], PointBox[1655]}, 
           {RGBColor[0, 0, 1], PointBox[1656]}, 
           {RGBColor[1, 0, 0], PointBox[1657]}, 
           {RGBColor[0, 0, 1], PointBox[1658]}, 
           {RGBColor[0, 0, 1], PointBox[1659]}, 
           {RGBColor[0, 0, 1], PointBox[1660]}, 
           {RGBColor[0, 0, 1], PointBox[1661]}, 
           {RGBColor[1, 0, 0], PointBox[1662]}, 
           {RGBColor[0, 0, 1], PointBox[1663]}, 
           {RGBColor[1, 0, 0], PointBox[1664]}, 
           {RGBColor[0, 1, 0], PointBox[1665]}, 
           {RGBColor[0, 1, 0], PointBox[1666]}, 
           {RGBColor[0, 1, 0], PointBox[1667]}, 
           {RGBColor[1, 0, 0], PointBox[1668]}, 
           {RGBColor[0, 0, 1], PointBox[1669]}, 
           {RGBColor[1, 0, 0], PointBox[1670]}, 
           {RGBColor[0, 0, 1], PointBox[1671]}, 
           {RGBColor[0, 1, 0], PointBox[1672]}, 
           {RGBColor[0, 1, 0], PointBox[1673]}, 
           {RGBColor[1, 0, 0], PointBox[1674]}, 
           {RGBColor[0, 1, 0], PointBox[1675]}, 
           {RGBColor[0, 0, 1], PointBox[1676]}, 
           {RGBColor[1, 0, 0], PointBox[1677]}, 
           {RGBColor[0, 1, 0], PointBox[1678]}, 
           {RGBColor[0, 1, 0], PointBox[1679]}, 
           {RGBColor[0, 1, 0], PointBox[1680]}, 
           {RGBColor[0, 1, 0], PointBox[1681]}, 
           {RGBColor[0, 0, 1], PointBox[1682]}, 
           {RGBColor[1, 0, 0], PointBox[1683]}, 
           {RGBColor[0, 0, 1], PointBox[1684]}, 
           {RGBColor[0, 1, 0], PointBox[1685]}, 
           {RGBColor[0, 0, 1], PointBox[1686]}, 
           {RGBColor[1, 0, 0], PointBox[1687]}, 
           {RGBColor[0, 1, 0], PointBox[1688]}, 
           {RGBColor[0, 1, 0], PointBox[1689]}, 
           {RGBColor[1, 0, 0], PointBox[1690]}, 
           {RGBColor[1, 0, 0], PointBox[1691]}, 
           {RGBColor[0, 1, 0], PointBox[1692]}, 
           {RGBColor[0, 0, 1], PointBox[1693]}, 
           {RGBColor[0, 0, 1], PointBox[1694]}, 
           {RGBColor[0, 0, 1], PointBox[1695]}, 
           {RGBColor[0, 0, 1], PointBox[1696]}, 
           {RGBColor[0, 0, 1], PointBox[1697]}, 
           {RGBColor[0, 0, 1], PointBox[1698]}, 
           {RGBColor[0, 1, 0], PointBox[1699]}, 
           {RGBColor[0, 1, 0], PointBox[1700]}, 
           {RGBColor[0, 1, 0], PointBox[1701]}, 
           {RGBColor[0, 0, 1], PointBox[1702]}, 
           {RGBColor[1, 0, 0], PointBox[1703]}, 
           {RGBColor[0, 0, 1], PointBox[1704]}, 
           {RGBColor[0, 0, 1], PointBox[1705]}, 
           {RGBColor[0, 0, 1], PointBox[1706]}, 
           {RGBColor[0, 0, 1], PointBox[1707]}, 
           {RGBColor[0, 0, 1], PointBox[1708]}, 
           {RGBColor[1, 0, 0], PointBox[1709]}, 
           {RGBColor[0, 1, 0], PointBox[1710]}, 
           {RGBColor[0, 0, 1], PointBox[1711]}, 
           {RGBColor[0, 1, 0], PointBox[1712]}, 
           {RGBColor[0, 1, 0], PointBox[1713]}, 
           {RGBColor[1, 0, 0], PointBox[1714]}, 
           {RGBColor[0, 1, 0], PointBox[1715]}, 
           {RGBColor[1, 0, 0], PointBox[1716]}, 
           {RGBColor[0, 0, 1], PointBox[1717]}, 
           {RGBColor[1, 0, 0], PointBox[1718]}, 
           {RGBColor[0, 0, 1], PointBox[1719]}, 
           {RGBColor[0, 0, 1], PointBox[1720]}, 
           {RGBColor[0, 0, 1], PointBox[1721]}, 
           {RGBColor[1, 0, 0], PointBox[1722]}, 
           {RGBColor[0, 0, 1], PointBox[1723]}, 
           {RGBColor[0, 0, 1], PointBox[1724]}, 
           {RGBColor[1, 0, 0], PointBox[1725]}, 
           {RGBColor[0, 0, 1], PointBox[1726]}, 
           {RGBColor[1, 0, 0], PointBox[1727]}, 
           {RGBColor[0, 0, 1], PointBox[1728]}, 
           {RGBColor[0, 0, 1], PointBox[1729]}, 
           {RGBColor[1, 0, 0], PointBox[1730]}, 
           {RGBColor[0, 1, 0], PointBox[1731]}, 
           {RGBColor[0, 1, 0], PointBox[1732]}, 
           {RGBColor[1, 0, 0], PointBox[1733]}, 
           {RGBColor[1, 0, 0], PointBox[1734]}, 
           {RGBColor[1, 0, 0], PointBox[1735]}, 
           {RGBColor[0, 0, 1], PointBox[1736]}, 
           {RGBColor[0, 0, 1], PointBox[1737]}, 
           {RGBColor[1, 0, 0], PointBox[1738]}, 
           {RGBColor[0, 0, 1], PointBox[1739]}, 
           {RGBColor[0, 0, 1], PointBox[1740]}, 
           {RGBColor[1, 0, 0], PointBox[1741]}, 
           {RGBColor[1, 0, 0], PointBox[1742]}, 
           {RGBColor[0, 0, 1], PointBox[1743]}, 
           {RGBColor[0, 0, 1], PointBox[1744]}, 
           {RGBColor[1, 0, 0], PointBox[1745]}, 
           {RGBColor[0, 0, 1], PointBox[1746]}, 
           {RGBColor[0, 0, 1], PointBox[1747]}, 
           {RGBColor[1, 0, 0], PointBox[1748]}, 
           {RGBColor[1, 0, 0], PointBox[1749]}, 
           {RGBColor[1, 0, 0], PointBox[1750]}, 
           {RGBColor[0, 0, 1], PointBox[1751]}, 
           {RGBColor[1, 0, 0], PointBox[1752]}, 
           {RGBColor[0, 0, 1], PointBox[1753]}, 
           {RGBColor[1, 0, 0], PointBox[1754]}, 
           {RGBColor[1, 0, 0], PointBox[1755]}, 
           {RGBColor[0, 0, 1], PointBox[1756]}, 
           {RGBColor[1, 0, 0], PointBox[1757]}, 
           {RGBColor[0, 0, 1], PointBox[1758]}, 
           {RGBColor[1, 0, 0], PointBox[1759]}, 
           {RGBColor[0, 1, 0], PointBox[1760]}, 
           {RGBColor[1, 0, 0], PointBox[1761]}, 
           {RGBColor[0, 0, 1], PointBox[1762]}, 
           {RGBColor[1, 0, 0], PointBox[1763]}, 
           {RGBColor[0, 0, 1], PointBox[1764]}, 
           {RGBColor[1, 0, 0], PointBox[1765]}, 
           {RGBColor[0, 0, 1], PointBox[1766]}, 
           {RGBColor[1, 0, 0], PointBox[1767]}, 
           {RGBColor[0, 1, 0], PointBox[1768]}, 
           {RGBColor[0, 1, 0], PointBox[1769]}, 
           {RGBColor[0, 1, 0], PointBox[1770]}, 
           {RGBColor[1, 0, 0], PointBox[1771]}, 
           {RGBColor[1, 0, 0], PointBox[1772]}, 
           {RGBColor[1, 0, 0], PointBox[1773]}, 
           {RGBColor[0, 0, 1], PointBox[1774]}, 
           {RGBColor[1, 0, 0], PointBox[1775]}, 
           {RGBColor[0, 0, 1], PointBox[1776]}, 
           {RGBColor[1, 0, 0], PointBox[1777]}, 
           {RGBColor[1, 0, 0], PointBox[1778]}, 
           {RGBColor[1, 0, 0], PointBox[1779]}, 
           {RGBColor[0, 1, 0], PointBox[1780]}, 
           {RGBColor[0, 0, 1], PointBox[1781]}, 
           {RGBColor[1, 0, 0], PointBox[1782]}, 
           {RGBColor[0, 1, 0], PointBox[1783]}, 
           {RGBColor[0, 0, 1], PointBox[1784]}, 
           {RGBColor[1, 0, 0], PointBox[1785]}, 
           {RGBColor[1, 0, 0], PointBox[1786]}, 
           {RGBColor[0, 1, 0], PointBox[1787]}, 
           {RGBColor[0, 1, 0], PointBox[1788]}, 
           {RGBColor[0, 1, 0], PointBox[1789]}, 
           {RGBColor[0, 0, 1], PointBox[1790]}, 
           {RGBColor[0, 0, 1], PointBox[1791]}, 
           {RGBColor[0, 1, 0], PointBox[1792]}, 
           {RGBColor[0, 1, 0], PointBox[1793]}, 
           {RGBColor[0, 1, 0], PointBox[1794]}, 
           {RGBColor[0, 1, 0], PointBox[1795]}, 
           {RGBColor[0, 1, 0], PointBox[1796]}, 
           {RGBColor[0, 1, 0], PointBox[1797]}, 
           {RGBColor[1, 0, 0], PointBox[1798]}, 
           {RGBColor[0, 0, 1], PointBox[1799]}, 
           {RGBColor[0, 0, 1], PointBox[1800]}, 
           {RGBColor[0, 1, 0], PointBox[1801]}, 
           {RGBColor[1, 0, 0], PointBox[1802]}, 
           {RGBColor[0, 1, 0], PointBox[1803]}, 
           {RGBColor[0, 1, 0], PointBox[1804]}, 
           {RGBColor[1, 0, 0], PointBox[1805]}, 
           {RGBColor[0, 1, 0], PointBox[1806]}, 
           {RGBColor[1, 0, 0], PointBox[1807]}, 
           {RGBColor[0, 1, 0], PointBox[1808]}, 
           {RGBColor[1, 0, 0], PointBox[1809]}, 
           {RGBColor[0, 0, 1], PointBox[1810]}, 
           {RGBColor[0, 0, 1], PointBox[1811]}, 
           {RGBColor[1, 0, 0], PointBox[1812]}, 
           {RGBColor[0, 1, 0], PointBox[1813]}, 
           {RGBColor[1, 0, 0], PointBox[1814]}, 
           {RGBColor[0, 1, 0], PointBox[1815]}, 
           {RGBColor[0, 1, 0], PointBox[1816]}, 
           {RGBColor[1, 0, 0], PointBox[1817]}, 
           {RGBColor[1, 0, 0], PointBox[1818]}, 
           {RGBColor[1, 0, 0], PointBox[1819]}, 
           {RGBColor[0, 0, 1], PointBox[1820]}, 
           {RGBColor[0, 0, 1], PointBox[1821]}, 
           {RGBColor[1, 0, 0], PointBox[1822]}, 
           {RGBColor[1, 0, 0], PointBox[1823]}, 
           {RGBColor[1, 0, 0], PointBox[1824]}, 
           {RGBColor[0, 0, 1], PointBox[1825]}, 
           {RGBColor[1, 0, 0], PointBox[1826]}, 
           {RGBColor[0, 1, 0], PointBox[1827]}, 
           {RGBColor[1, 0, 0], PointBox[1828]}, 
           {RGBColor[0, 1, 0], PointBox[1829]}, 
           {RGBColor[1, 0, 0], PointBox[1830]}, 
           {RGBColor[0, 1, 0], PointBox[1831]}, 
           {RGBColor[0, 1, 0], PointBox[1832]}, 
           {RGBColor[1, 0, 0], PointBox[1833]}, 
           {RGBColor[0, 0, 1], PointBox[1834]}, 
           {RGBColor[1, 0, 0], PointBox[1835]}, 
           {RGBColor[0, 1, 0], PointBox[1836]}, 
           {RGBColor[1, 0, 0], PointBox[1837]}, 
           {RGBColor[0, 1, 0], PointBox[1838]}, 
           {RGBColor[0, 1, 0], PointBox[1839]}, 
           {RGBColor[0, 1, 0], PointBox[1840]}, 
           {RGBColor[1, 0, 0], PointBox[1841]}, 
           {RGBColor[0, 1, 0], PointBox[1842]}, 
           {RGBColor[0, 1, 0], PointBox[1843]}, 
           {RGBColor[0, 1, 0], PointBox[1844]}, 
           {RGBColor[1, 0, 0], PointBox[1845]}, 
           {RGBColor[1, 0, 0], PointBox[1846]}, 
           {RGBColor[1, 0, 0], PointBox[1847]}, 
           {RGBColor[0, 1, 0], PointBox[1848]}, 
           {RGBColor[1, 0, 0], PointBox[1849]}, 
           {RGBColor[1, 0, 0], PointBox[1850]}, 
           {RGBColor[0, 0, 1], PointBox[1851]}, 
           {RGBColor[1, 0, 0], PointBox[1852]}, 
           {RGBColor[1, 0, 0], PointBox[1853]}, 
           {RGBColor[1, 0, 0], PointBox[1854]}, 
           {RGBColor[0, 1, 0], PointBox[1855]}, 
           {RGBColor[0, 1, 0], PointBox[1856]}, 
           {RGBColor[1, 0, 0], PointBox[1857]}, 
           {RGBColor[1, 0, 0], PointBox[1858]}, 
           {RGBColor[0, 1, 0], PointBox[1859]}, 
           {RGBColor[0, 0, 1], PointBox[1860]}, 
           {RGBColor[1, 0, 0], PointBox[1861]}, 
           {RGBColor[1, 0, 0], PointBox[1862]}, 
           {RGBColor[1, 0, 0], PointBox[1863]}, 
           {RGBColor[1, 0, 0], PointBox[1864]}, 
           {RGBColor[0, 1, 0], PointBox[1865]}, 
           {RGBColor[0, 1, 0], PointBox[1866]}, 
           {RGBColor[0, 1, 0], PointBox[1867]}, 
           {RGBColor[0, 0, 1], PointBox[1868]}, 
           {RGBColor[0, 0, 1], PointBox[1869]}, 
           {RGBColor[0, 1, 0], PointBox[1870]}, 
           {RGBColor[0, 0, 1], PointBox[1871]}, 
           {RGBColor[0, 0, 1], PointBox[1872]}, 
           {RGBColor[0, 1, 0], PointBox[1873]}, 
           {RGBColor[0, 1, 0], PointBox[1874]}, 
           {RGBColor[0, 0, 1], PointBox[1875]}, 
           {RGBColor[0, 0, 1], PointBox[1876]}, 
           {RGBColor[0, 1, 0], PointBox[1877]}, 
           {RGBColor[0, 0, 1], PointBox[1878]}, 
           {RGBColor[0, 1, 0], PointBox[1879]}, 
           {RGBColor[0, 1, 0], PointBox[1880]}, 
           {RGBColor[0, 1, 0], PointBox[1881]}, 
           {RGBColor[0, 0, 1], PointBox[1882]}, 
           {RGBColor[0, 0, 1], PointBox[1883]}, 
           {RGBColor[0, 0, 1], PointBox[1884]}, 
           {RGBColor[0, 0, 1], PointBox[1885]}, 
           {RGBColor[0, 1, 0], PointBox[1886]}, 
           {RGBColor[0, 0, 1], PointBox[1887]}, 
           {RGBColor[0, 0, 1], PointBox[1888]}, 
           {RGBColor[0, 0, 1], PointBox[1889]}, 
           {RGBColor[0, 1, 0], PointBox[1890]}, 
           {RGBColor[1, 0, 0], PointBox[1891]}, 
           {RGBColor[0, 1, 0], PointBox[1892]}, 
           {RGBColor[0, 0, 1], PointBox[1893]}, 
           {RGBColor[0, 1, 0], PointBox[1894]}, 
           {RGBColor[0, 0, 1], PointBox[1895]}, 
           {RGBColor[0, 0, 1], PointBox[1896]}, 
           {RGBColor[0, 0, 1], PointBox[1897]}, 
           {RGBColor[0, 1, 0], PointBox[1898]}, 
           {RGBColor[0, 0, 1], PointBox[1899]}, 
           {RGBColor[0, 1, 0], PointBox[1900]}, 
           {RGBColor[0, 1, 0], PointBox[1901]}, 
           {RGBColor[0, 0, 1], PointBox[1902]}, 
           {RGBColor[0, 0, 1], PointBox[1903]}, 
           {RGBColor[0, 0, 1], PointBox[1904]}, 
           {RGBColor[0, 0, 1], PointBox[1905]}, 
           {RGBColor[0, 0, 1], PointBox[1906]}, 
           {RGBColor[0, 1, 0], PointBox[1907]}, 
           {RGBColor[1, 0, 0], PointBox[1908]}, 
           {RGBColor[1, 0, 0], PointBox[1909]}, 
           {RGBColor[0, 0, 1], PointBox[1910]}, 
           {RGBColor[0, 1, 0], PointBox[1911]}, 
           {RGBColor[0, 0, 1], PointBox[1912]}, 
           {RGBColor[0, 0, 1], PointBox[1913]}, 
           {RGBColor[0, 0, 1], PointBox[1914]}, 
           {RGBColor[0, 1, 0], PointBox[1915]}, 
           {RGBColor[0, 0, 1], PointBox[1916]}, 
           {RGBColor[0, 1, 0], PointBox[1917]}, 
           {RGBColor[1, 0, 0], PointBox[1918]}, 
           {RGBColor[0, 0, 1], PointBox[1919]}, 
           {RGBColor[0, 0, 1], PointBox[1920]}, 
           {RGBColor[1, 0, 0], PointBox[1921]}, 
           {RGBColor[0, 0, 1], PointBox[1922]}, 
           {RGBColor[0, 1, 0], PointBox[1923]}, 
           {RGBColor[1, 0, 0], PointBox[1924]}, 
           {RGBColor[0, 0, 1], PointBox[1925]}, 
           {RGBColor[0, 0, 1], PointBox[1926]}, 
           {RGBColor[0, 0, 1], PointBox[1927]}, 
           {RGBColor[0, 1, 0], PointBox[1928]}, 
           {RGBColor[0, 0, 1], PointBox[1929]}, 
           {RGBColor[0, 0, 1], PointBox[1930]}, 
           {RGBColor[1, 0, 0], PointBox[1931]}, 
           {RGBColor[0, 0, 1], PointBox[1932]}, 
           {RGBColor[0, 0, 1], PointBox[1933]}, 
           {RGBColor[1, 0, 0], PointBox[1934]}, 
           {RGBColor[1, 0, 0], PointBox[1935]}, 
           {RGBColor[0, 1, 0], PointBox[1936]}, 
           {RGBColor[0, 1, 0], PointBox[1937]}, 
           {RGBColor[0, 1, 0], PointBox[1938]}, 
           {RGBColor[0, 0, 1], PointBox[1939]}, 
           {RGBColor[0, 1, 0], PointBox[1940]}, 
           {RGBColor[0, 1, 0], PointBox[1941]}, 
           {RGBColor[0, 1, 0], PointBox[1942]}, 
           {RGBColor[0, 1, 0], PointBox[1943]}, 
           {RGBColor[1, 0, 0], PointBox[1944]}, 
           {RGBColor[0, 0, 1], PointBox[1945]}, 
           {RGBColor[1, 0, 0], PointBox[1946]}, 
           {RGBColor[0, 1, 0], PointBox[1947]}, 
           {RGBColor[1, 0, 0], PointBox[1948]}, 
           {RGBColor[0, 1, 0], PointBox[1949]}, 
           {RGBColor[0, 0, 1], PointBox[1950]}, 
           {RGBColor[0, 1, 0], PointBox[1951]}, 
           {RGBColor[0, 1, 0], PointBox[1952]}, 
           {RGBColor[0, 1, 0], PointBox[1953]}, 
           {RGBColor[0, 0, 1], PointBox[1954]}, 
           {RGBColor[1, 0, 0], PointBox[1955]}, 
           {RGBColor[0, 1, 0], PointBox[1956]}, 
           {RGBColor[1, 0, 0], PointBox[1957]}, 
           {RGBColor[1, 0, 0], PointBox[1958]}, 
           {RGBColor[1, 0, 0], PointBox[1959]}, 
           {RGBColor[0, 0, 1], PointBox[1960]}, 
           {RGBColor[0, 0, 1], PointBox[1961]}, 
           {RGBColor[0, 1, 0], PointBox[1962]}, 
           {RGBColor[0, 0, 1], PointBox[1963]}, 
           {RGBColor[0, 1, 0], PointBox[1964]}, 
           {RGBColor[0, 0, 1], PointBox[1965]}, 
           {RGBColor[0, 0, 1], PointBox[1966]}, 
           {RGBColor[0, 0, 1], PointBox[1967]}, 
           {RGBColor[0, 1, 0], PointBox[1968]}, 
           {RGBColor[1, 0, 0], PointBox[1969]}, 
           {RGBColor[0, 0, 1], PointBox[1970]}, 
           {RGBColor[1, 0, 0], PointBox[1971]}, 
           {RGBColor[0, 1, 0], PointBox[1972]}, 
           {RGBColor[0, 0, 1], PointBox[1973]}, 
           {RGBColor[0, 0, 1], PointBox[1974]}, 
           {RGBColor[0, 1, 0], PointBox[1975]}, 
           {RGBColor[0, 0, 1], PointBox[1976]}, 
           {RGBColor[0, 1, 0], PointBox[1977]}, 
           {RGBColor[0, 0, 1], PointBox[1978]}, 
           {RGBColor[1, 0, 0], PointBox[1979]}, 
           {RGBColor[0, 0, 1], PointBox[1980]}, 
           {RGBColor[0, 0, 1], PointBox[1981]}, 
           {RGBColor[0, 0, 1], PointBox[1982]}, 
           {RGBColor[0, 1, 0], PointBox[1983]}, 
           {RGBColor[1, 0, 0], PointBox[1984]}, 
           {RGBColor[1, 0, 0], PointBox[1985]}, 
           {RGBColor[1, 0, 0], PointBox[1986]}, 
           {RGBColor[0, 0, 1], PointBox[1987]}, 
           {RGBColor[0, 0, 1], PointBox[1988]}, 
           {RGBColor[0, 0, 1], PointBox[1989]}, 
           {RGBColor[0, 0, 1], PointBox[1990]}, 
           {RGBColor[0, 0, 1], PointBox[1991]}, 
           {RGBColor[0, 1, 0], PointBox[1992]}, 
           {RGBColor[1, 0, 0], PointBox[1993]}, 
           {RGBColor[0, 0, 1], PointBox[1994]}, 
           {RGBColor[1, 0, 0], PointBox[1995]}, 
           {RGBColor[0, 0, 1], PointBox[1996]}, 
           {RGBColor[0, 0, 1], PointBox[1997]}, 
           {RGBColor[0, 0, 1], PointBox[1998]}, 
           {RGBColor[1, 0, 0], PointBox[1999]}, 
           {RGBColor[0, 0, 1], PointBox[2000]}, 
           {RGBColor[0, 1, 0], PointBox[2001]}, 
           {RGBColor[1, 0, 0], PointBox[2002]}, 
           {RGBColor[1, 0, 0], PointBox[2003]}, 
           {RGBColor[1, 0, 0], PointBox[2004]}, 
           {RGBColor[0, 0, 1], PointBox[2005]}, 
           {RGBColor[0, 0, 1], PointBox[2006]}, 
           {RGBColor[0, 0, 1], PointBox[2007]}, 
           {RGBColor[0, 0, 1], PointBox[2008]}, 
           {RGBColor[1, 0, 0], PointBox[2009]}, 
           {RGBColor[0, 0, 1], PointBox[2010]}, 
           {RGBColor[0, 0, 1], PointBox[2011]}, 
           {RGBColor[0, 0, 1], PointBox[2012]}, 
           {RGBColor[0, 1, 0], PointBox[2013]}, 
           {RGBColor[1, 0, 0], PointBox[2014]}, 
           {RGBColor[1, 0, 0], PointBox[2015]}, 
           {RGBColor[1, 0, 0], PointBox[2016]}, 
           {RGBColor[0, 0, 1], PointBox[2017]}, 
           {RGBColor[0, 0, 1], PointBox[2018]}, 
           {RGBColor[1, 0, 0], PointBox[2019]}, 
           {RGBColor[0, 0, 1], PointBox[2020]}, 
           {RGBColor[0, 0, 1], PointBox[2021]}, 
           {RGBColor[1, 0, 0], PointBox[2022]}, 
           {RGBColor[1, 0, 0], PointBox[2023]}, 
           {RGBColor[0, 0, 1], PointBox[2024]}, 
           {RGBColor[0, 0, 1], PointBox[2025]}, 
           {RGBColor[1, 0, 0], PointBox[2026]}, 
           {RGBColor[0, 0, 1], PointBox[2027]}, 
           {RGBColor[0, 0, 1], PointBox[2028]}, 
           {RGBColor[1, 0, 0], PointBox[2029]}, 
           {RGBColor[1, 0, 0], PointBox[2030]}, 
           {RGBColor[1, 0, 0], PointBox[2031]}, 
           {RGBColor[0, 0, 1], PointBox[2032]}, 
           {RGBColor[0, 1, 0], PointBox[2033]}, 
           {RGBColor[0, 1, 0], PointBox[2034]}, 
           {RGBColor[1, 0, 0], PointBox[2035]}, 
           {RGBColor[0, 0, 1], PointBox[2036]}, 
           {RGBColor[1, 0, 0], PointBox[2037]}, 
           {RGBColor[0, 1, 0], PointBox[2038]}, 
           {RGBColor[1, 0, 0], PointBox[2039]}, 
           {RGBColor[1, 0, 0], PointBox[2040]}, 
           {RGBColor[1, 0, 0], PointBox[2041]}, 
           {RGBColor[0, 1, 0], PointBox[2042]}, 
           {RGBColor[0, 0, 1], PointBox[2043]}, 
           {RGBColor[0, 1, 0], PointBox[2044]}, 
           {RGBColor[0, 1, 0], PointBox[2045]}, 
           {RGBColor[1, 0, 0], PointBox[2046]}, 
           {RGBColor[1, 0, 0], PointBox[2047]}, 
           {RGBColor[1, 0, 0], PointBox[2048]}, 
           {RGBColor[0, 0, 1], PointBox[2049]}, 
           {RGBColor[1, 0, 0], PointBox[2050]}, 
           {RGBColor[0, 0, 1], PointBox[2051]}, 
           {RGBColor[1, 0, 0], PointBox[2052]}, 
           {RGBColor[1, 0, 0], PointBox[2053]}, 
           {RGBColor[1, 0, 0], PointBox[2054]}, 
           {RGBColor[0, 1, 0], PointBox[2055]}, 
           {RGBColor[0, 1, 0], PointBox[2056]}, 
           {RGBColor[0, 1, 0], PointBox[2057]}, 
           {RGBColor[0, 0, 1], PointBox[2058]}, 
           {RGBColor[0, 1, 0], PointBox[2059]}, 
           {RGBColor[0, 1, 0], PointBox[2060]}, 
           {RGBColor[0, 1, 0], PointBox[2061]}, 
           {RGBColor[0, 0, 1], PointBox[2062]}, 
           {RGBColor[0, 1, 0], PointBox[2063]}, 
           {RGBColor[1, 0, 0], PointBox[2064]}, 
           {RGBColor[0, 1, 0], PointBox[2065]}, 
           {RGBColor[1, 0, 0], PointBox[2066]}, 
           {RGBColor[0, 1, 0], PointBox[2067]}, 
           {RGBColor[0, 0, 1], PointBox[2068]}, 
           {RGBColor[0, 1, 0], PointBox[2069]}, 
           {RGBColor[0, 1, 0], PointBox[2070]}, 
           {RGBColor[1, 0, 0], PointBox[2071]}, 
           {RGBColor[0, 0, 1], PointBox[2072]}, 
           {RGBColor[0, 1, 0], PointBox[2073]}, 
           {RGBColor[1, 0, 0], PointBox[2074]}, 
           {RGBColor[1, 0, 0], PointBox[2075]}, 
           {RGBColor[1, 0, 0], PointBox[2076]}, 
           {RGBColor[0, 1, 0], PointBox[2077]}, 
           {RGBColor[0, 0, 1], PointBox[2078]}, 
           {RGBColor[0, 1, 0], PointBox[2079]}, 
           {RGBColor[1, 0, 0], PointBox[2080]}, 
           {RGBColor[0, 1, 0], PointBox[2081]}, 
           {RGBColor[1, 0, 0], PointBox[2082]}, 
           {RGBColor[0, 0, 1], PointBox[2083]}, 
           {RGBColor[0, 1, 0], PointBox[2084]}, 
           {RGBColor[1, 0, 0], PointBox[2085]}, 
           {RGBColor[1, 0, 0], PointBox[2086]}, 
           {RGBColor[1, 0, 0], PointBox[2087]}, 
           {RGBColor[0, 0, 1], PointBox[2088]}, 
           {RGBColor[0, 1, 0], PointBox[2089]}, 
           {RGBColor[1, 0, 0], PointBox[2090]}, 
           {RGBColor[1, 0, 0], PointBox[2091]}, 
           {RGBColor[1, 0, 0], PointBox[2092]}, 
           {RGBColor[0, 0, 1], PointBox[2093]}, 
           {RGBColor[0, 0, 1], PointBox[2094]}, 
           {RGBColor[1, 0, 0], PointBox[2095]}, 
           {RGBColor[1, 0, 0], PointBox[2096]}, 
           {RGBColor[1, 0, 0], PointBox[2097]}, 
           {RGBColor[0, 1, 0], PointBox[2098]}, 
           {RGBColor[0, 1, 0], PointBox[2099]}, 
           {RGBColor[0, 1, 0], PointBox[2100]}, 
           {RGBColor[0, 1, 0], PointBox[2101]}, 
           {RGBColor[0, 1, 0], PointBox[2102]}, 
           {RGBColor[0, 1, 0], PointBox[2103]}, 
           {RGBColor[1, 0, 0], PointBox[2104]}, 
           {RGBColor[0, 1, 0], PointBox[2105]}, 
           {RGBColor[1, 0, 0], PointBox[2106]}, 
           {RGBColor[0, 1, 0], PointBox[2107]}, 
           {RGBColor[0, 1, 0], PointBox[2108]}, 
           {RGBColor[1, 0, 0], PointBox[2109]}, 
           {RGBColor[0, 1, 0], PointBox[2110]}, 
           {RGBColor[1, 0, 0], PointBox[2111]}, 
           {RGBColor[1, 0, 0], PointBox[2112]}, 
           {RGBColor[1, 0, 0], PointBox[2113]}, 
           {RGBColor[0, 1, 0], PointBox[2114]}, 
           {RGBColor[0, 1, 0], PointBox[2115]}, 
           {RGBColor[1, 0, 0], PointBox[2116]}, 
           {RGBColor[0, 1, 0], PointBox[2117]}, 
           {RGBColor[0, 1, 0], PointBox[2118]}, 
           {RGBColor[1, 0, 0], PointBox[2119]}, 
           {RGBColor[1, 0, 0], PointBox[2120]}, 
           {RGBColor[1, 0, 0], PointBox[2121]}, 
           {RGBColor[0, 1, 0], PointBox[2122]}, 
           {RGBColor[1, 0, 0], PointBox[2123]}, 
           {RGBColor[1, 0, 0], PointBox[2124]}, 
           {RGBColor[0, 0, 1], PointBox[2125]}, 
           {RGBColor[0, 1, 0], PointBox[2126]}, 
           {RGBColor[0, 1, 0], PointBox[2127]}, 
           {RGBColor[0, 0, 1], PointBox[2128]}, 
           {RGBColor[1, 0, 0], PointBox[2129]}, 
           {RGBColor[1, 0, 0], PointBox[2130]}, 
           {RGBColor[1, 0, 0], PointBox[2131]}, 
           {RGBColor[1, 0, 0], PointBox[2132]}, 
           {RGBColor[0, 0, 1], PointBox[2133]}, 
           {RGBColor[0, 0, 1], PointBox[2134]}, 
           {RGBColor[0, 0, 1], PointBox[2135]}, 
           {RGBColor[1, 1, 0], PointBox[2136]}, 
           {RGBColor[1, 1, 0], PointBox[2137]}, 
           {RGBColor[1, 1, 0], PointBox[2138]}, 
           {RGBColor[1, 1, 0], PointBox[2139]}, 
           {RGBColor[0, 0, 1], PointBox[2140]}, 
           {RGBColor[1, 1, 0], PointBox[2141]}, 
           {RGBColor[1, 1, 0], PointBox[2142]}, 
           {RGBColor[1, 1, 0], PointBox[2143]}, 
           {RGBColor[1, 1, 0], PointBox[2144]}, 
           {RGBColor[0, 0, 1], PointBox[2145]}, 
           {RGBColor[0, 0, 1], PointBox[2146]}, 
           {RGBColor[0, 0, 1], PointBox[2147]}, 
           {RGBColor[1, 1, 0], PointBox[2148]}, 
           {RGBColor[0, 0, 1], PointBox[2149]}, 
           {RGBColor[1, 1, 0], PointBox[2150]}, 
           {RGBColor[0, 0, 1], PointBox[2151]}, 
           {RGBColor[0, 0, 1], PointBox[2152]}, 
           {RGBColor[1, 1, 0], PointBox[2153]}, 
           {RGBColor[0, 0, 1], PointBox[2154]}, 
           {RGBColor[1, 1, 0], PointBox[2155]}, 
           {RGBColor[0, 0, 1], PointBox[2156]}, 
           {RGBColor[0, 0, 1], PointBox[2157]}, 
           {RGBColor[0, 0, 1], PointBox[2158]}, 
           {RGBColor[1, 1, 0], PointBox[2159]}, 
           {RGBColor[1, 1, 0], PointBox[2160]}, 
           {RGBColor[0, 0, 1], PointBox[2161]}, 
           {RGBColor[1, 1, 0], PointBox[2162]}, 
           {RGBColor[1, 1, 0], PointBox[2163]}, 
           {RGBColor[0, 0, 1], PointBox[2164]}, 
           {RGBColor[0, 0, 1], PointBox[2165]}, 
           {RGBColor[0, 0, 1], PointBox[2166]}, 
           {RGBColor[1, 1, 0], PointBox[2167]}, 
           {RGBColor[0, 0, 1], PointBox[2168]}, 
           {RGBColor[0, 0, 1], PointBox[2169]}, 
           {RGBColor[0, 0, 1], PointBox[2170]}, 
           {RGBColor[1, 0, 0], PointBox[2171]}, 
           {RGBColor[0, 0, 1], PointBox[2172]}, 
           {RGBColor[1, 1, 0], PointBox[2173]}, 
           {RGBColor[0, 0, 1], PointBox[2174]}, 
           {RGBColor[1, 0, 0], PointBox[2175]}, 
           {RGBColor[1, 1, 0], PointBox[2176]}, 
           {RGBColor[1, 1, 0], PointBox[2177]}, 
           {RGBColor[1, 0, 0], PointBox[2178]}, 
           {RGBColor[1, 1, 0], PointBox[2179]}, 
           {RGBColor[1, 1, 0], PointBox[2180]}, 
           {RGBColor[1, 1, 0], PointBox[2181]}, 
           {RGBColor[0, 0, 1], PointBox[2182]}, 
           {RGBColor[1, 0, 0], PointBox[2183]}, 
           {RGBColor[1, 1, 0], PointBox[2184]}, 
           {RGBColor[1, 0, 0], PointBox[2185]}, 
           {RGBColor[1, 1, 0], PointBox[2186]}, 
           {RGBColor[0, 0, 1], PointBox[2187]}, 
           {RGBColor[1, 1, 0], PointBox[2188]}, 
           {RGBColor[0, 0, 1], PointBox[2189]}, 
           {RGBColor[1, 0, 0], PointBox[2190]}, 
           {RGBColor[1, 1, 0], PointBox[2191]}, 
           {RGBColor[1, 1, 0], PointBox[2192]}, 
           {RGBColor[1, 1, 0], PointBox[2193]}, 
           {RGBColor[0, 0, 1], PointBox[2194]}, 
           {RGBColor[1, 0, 0], PointBox[2195]}, 
           {RGBColor[1, 1, 0], PointBox[2196]}, 
           {RGBColor[1, 0, 0], PointBox[2197]}, 
           {RGBColor[0, 0, 1], PointBox[2198]}, 
           {RGBColor[0, 0, 1], PointBox[2199]}, 
           {RGBColor[0, 0, 1], PointBox[2200]}, 
           {RGBColor[1, 0, 0], PointBox[2201]}, 
           {RGBColor[1, 1, 0], PointBox[2202]}, 
           {RGBColor[1, 0, 0], PointBox[2203]}, 
           {RGBColor[1, 1, 0], PointBox[2204]}, 
           {RGBColor[0, 0, 1], PointBox[2205]}, 
           {RGBColor[0, 0, 1], PointBox[2206]}, 
           {RGBColor[1, 0, 0], PointBox[2207]}, 
           {RGBColor[0, 0, 1], PointBox[2208]}, 
           {RGBColor[1, 1, 0], PointBox[2209]}, 
           {RGBColor[1, 0, 0], PointBox[2210]}, 
           {RGBColor[0, 0, 1], PointBox[2211]}, 
           {RGBColor[1, 1, 0], PointBox[2212]}, 
           {RGBColor[0, 0, 1], PointBox[2213]}, 
           {RGBColor[0, 0, 1], PointBox[2214]}, 
           {RGBColor[0, 0, 1], PointBox[2215]}, 
           {RGBColor[1, 0, 0], PointBox[2216]}, 
           {RGBColor[1, 1, 0], PointBox[2217]}, 
           {RGBColor[0, 0, 1], PointBox[2218]}, 
           {RGBColor[0, 0, 1], PointBox[2219]}, 
           {RGBColor[1, 0, 0], PointBox[2220]}, 
           {RGBColor[0, 0, 1], PointBox[2221]}, 
           {RGBColor[0, 0, 1], PointBox[2222]}, 
           {RGBColor[1, 0, 0], PointBox[2223]}, 
           {RGBColor[1, 0, 0], PointBox[2224]}, 
           {RGBColor[0, 0, 1], PointBox[2225]}, 
           {RGBColor[1, 1, 0], PointBox[2226]}, 
           {RGBColor[1, 1, 0], PointBox[2227]}, 
           {RGBColor[1, 1, 0], PointBox[2228]}, 
           {RGBColor[1, 1, 0], PointBox[2229]}, 
           {RGBColor[1, 1, 0], PointBox[2230]}, 
           {RGBColor[1, 1, 0], PointBox[2231]}, 
           {RGBColor[0, 0, 1], PointBox[2232]}, 
           {RGBColor[1, 1, 0], PointBox[2233]}, 
           {RGBColor[0, 0, 1], PointBox[2234]}, 
           {RGBColor[1, 1, 0], PointBox[2235]}, 
           {RGBColor[1, 0, 0], PointBox[2236]}, 
           {RGBColor[1, 1, 0], PointBox[2237]}, 
           {RGBColor[1, 1, 0], PointBox[2238]}, 
           {RGBColor[1, 1, 0], PointBox[2239]}, 
           {RGBColor[1, 0, 0], PointBox[2240]}, 
           {RGBColor[0, 0, 1], PointBox[2241]}, 
           {RGBColor[0, 0, 1], PointBox[2242]}, 
           {RGBColor[1, 0, 0], PointBox[2243]}, 
           {RGBColor[0, 0, 1], PointBox[2244]}, 
           {RGBColor[1, 0, 0], PointBox[2245]}, 
           {RGBColor[1, 1, 0], PointBox[2246]}, 
           {RGBColor[1, 0, 0], PointBox[2247]}, 
           {RGBColor[1, 1, 0], PointBox[2248]}, 
           {RGBColor[1, 1, 0], PointBox[2249]}, 
           {RGBColor[1, 1, 0], PointBox[2250]}, 
           {RGBColor[1, 0, 0], PointBox[2251]}, 
           {RGBColor[1, 1, 0], PointBox[2252]}, 
           {RGBColor[1, 1, 0], PointBox[2253]}, 
           {RGBColor[1, 0, 0], PointBox[2254]}, 
           {RGBColor[1, 1, 0], PointBox[2255]}, 
           {RGBColor[1, 0, 0], PointBox[2256]}, 
           {RGBColor[1, 1, 0], PointBox[2257]}, 
           {RGBColor[1, 1, 0], PointBox[2258]}, 
           {RGBColor[1, 0, 0], PointBox[2259]}, 
           {RGBColor[1, 1, 0], PointBox[2260]}, 
           {RGBColor[0, 0, 1], PointBox[2261]}, 
           {RGBColor[1, 0, 0], PointBox[2262]}, 
           {RGBColor[1, 0, 0], PointBox[2263]}, 
           {RGBColor[1, 0, 0], PointBox[2264]}, 
           {RGBColor[1, 1, 0], PointBox[2265]}, 
           {RGBColor[1, 1, 0], PointBox[2266]}, 
           {RGBColor[1, 0, 0], PointBox[2267]}, 
           {RGBColor[1, 0, 0], PointBox[2268]}, 
           {RGBColor[1, 1, 0], PointBox[2269]}, 
           {RGBColor[1, 1, 0], PointBox[2270]}, 
           {RGBColor[1, 0, 0], PointBox[2271]}, 
           {RGBColor[1, 0, 0], PointBox[2272]}, 
           {RGBColor[1, 0, 0], PointBox[2273]}, 
           {RGBColor[1, 1, 0], PointBox[2274]}, 
           {RGBColor[1, 0, 0], PointBox[2275]}, 
           {RGBColor[1, 0, 0], PointBox[2276]}, 
           {RGBColor[1, 1, 0], PointBox[2277]}, 
           {RGBColor[1, 0, 0], PointBox[2278]}, 
           {RGBColor[0, 0, 1], PointBox[2279]}, 
           {RGBColor[1, 0, 0], PointBox[2280]}, 
           {RGBColor[1, 1, 0], PointBox[2281]}, 
           {RGBColor[1, 0, 0], PointBox[2282]}, 
           {RGBColor[1, 1, 0], PointBox[2283]}, 
           {RGBColor[1, 0, 0], PointBox[2284]}, 
           {RGBColor[1, 1, 0], PointBox[2285]}, 
           {RGBColor[1, 0, 0], PointBox[2286]}, 
           {RGBColor[0, 0, 1], PointBox[2287]}, 
           {RGBColor[1, 1, 0], PointBox[2288]}, 
           {RGBColor[0, 0, 1], PointBox[2289]}, 
           {RGBColor[1, 0, 0], PointBox[2290]}, 
           {RGBColor[1, 0, 0], PointBox[2291]}, 
           {RGBColor[1, 0, 0], PointBox[2292]}, 
           {RGBColor[1, 1, 0], PointBox[2293]}, 
           {RGBColor[1, 0, 0], PointBox[2294]}, 
           {RGBColor[1, 0, 0], PointBox[2295]}, 
           {RGBColor[1, 0, 0], PointBox[2296]}, 
           {RGBColor[0, 0, 1], PointBox[2297]}, 
           {RGBColor[1, 1, 0], PointBox[2298]}, 
           {RGBColor[1, 0, 0], PointBox[2299]}, 
           {RGBColor[1, 0, 0], PointBox[2300]}, 
           {RGBColor[0, 0, 1], PointBox[2301]}, 
           {RGBColor[0, 0, 1], PointBox[2302]}, 
           {RGBColor[0, 0, 1], PointBox[2303]}, 
           {RGBColor[1, 1, 0], PointBox[2304]}, 
           {RGBColor[1, 1, 0], PointBox[2305]}, 
           {RGBColor[0, 0, 1], PointBox[2306]}, 
           {RGBColor[0, 0, 1], PointBox[2307]}, 
           {RGBColor[0, 0, 1], PointBox[2308]}, 
           {RGBColor[1, 1, 0], PointBox[2309]}, 
           {RGBColor[0, 0, 1], PointBox[2310]}, 
           {RGBColor[0, 0, 1], PointBox[2311]}, 
           {RGBColor[1, 0, 0], PointBox[2312]}, 
           {RGBColor[1, 1, 0], PointBox[2313]}, 
           {RGBColor[0, 0, 1], PointBox[2314]}, 
           {RGBColor[1, 1, 0], PointBox[2315]}, 
           {RGBColor[1, 1, 0], PointBox[2316]}, 
           {RGBColor[0, 0, 1], PointBox[2317]}, 
           {RGBColor[1, 0, 0], PointBox[2318]}, 
           {RGBColor[0, 0, 1], PointBox[2319]}, 
           {RGBColor[0, 0, 1], PointBox[2320]}, 
           {RGBColor[0, 0, 1], PointBox[2321]}, 
           {RGBColor[0, 0, 1], PointBox[2322]}, 
           {RGBColor[1, 0, 0], PointBox[2323]}, 
           {RGBColor[0, 0, 1], PointBox[2324]}, 
           {RGBColor[1, 0, 0], PointBox[2325]}, 
           {RGBColor[0, 0, 1], PointBox[2326]}, 
           {RGBColor[1, 0, 0], PointBox[2327]}, 
           {RGBColor[1, 1, 0], PointBox[2328]}, 
           {RGBColor[1, 1, 0], PointBox[2329]}, 
           {RGBColor[1, 0, 0], PointBox[2330]}, 
           {RGBColor[0, 0, 1], PointBox[2331]}, 
           {RGBColor[1, 0, 0], PointBox[2332]}, 
           {RGBColor[1, 1, 0], PointBox[2333]}, 
           {RGBColor[0, 0, 1], PointBox[2334]}, 
           {RGBColor[1, 0, 0], PointBox[2335]}, 
           {RGBColor[1, 0, 0], PointBox[2336]}, 
           {RGBColor[1, 0, 0], PointBox[2337]}, 
           {RGBColor[1, 1, 0], PointBox[2338]}, 
           {RGBColor[0, 0, 1], PointBox[2339]}, 
           {RGBColor[1, 0, 0], PointBox[2340]}, 
           {RGBColor[1, 1, 0], PointBox[2341]}, 
           {RGBColor[1, 1, 0], PointBox[2342]}, 
           {RGBColor[1, 0, 0], PointBox[2343]}, 
           {RGBColor[1, 0, 0], PointBox[2344]}, 
           {RGBColor[1, 0, 0], PointBox[2345]}, 
           {RGBColor[0, 0, 1], PointBox[2346]}, 
           {RGBColor[1, 0, 0], PointBox[2347]}, 
           {RGBColor[1, 1, 0], PointBox[2348]}, 
           {RGBColor[1, 0, 0], PointBox[2349]}, 
           {RGBColor[0, 0, 1], PointBox[2350]}, 
           {RGBColor[1, 0, 0], PointBox[2351]}, 
           {RGBColor[0, 0, 1], PointBox[2352]}, 
           {RGBColor[1, 0, 0], PointBox[2353]}, 
           {RGBColor[0, 0, 1], PointBox[2354]}, 
           {RGBColor[0, 0, 1], PointBox[2355]}, 
           {RGBColor[1, 0, 0], PointBox[2356]}, 
           {RGBColor[1, 1, 0], PointBox[2357]}, 
           {RGBColor[1, 0, 0], PointBox[2358]}, 
           {RGBColor[0, 0, 1], PointBox[2359]}, 
           {RGBColor[1, 0, 0], PointBox[2360]}, 
           {RGBColor[0, 0, 1], PointBox[2361]}, 
           {RGBColor[0, 0, 1], PointBox[2362]}, 
           {RGBColor[0, 0, 1], PointBox[2363]}, 
           {RGBColor[1, 0, 0], PointBox[2364]}, 
           {RGBColor[0, 0, 1], PointBox[2365]}, 
           {RGBColor[1, 1, 0], PointBox[2366]}, 
           {RGBColor[0, 0, 1], PointBox[2367]}, 
           {RGBColor[1, 0, 0], PointBox[2368]}, 
           {RGBColor[1, 0, 0], PointBox[2369]}, 
           {RGBColor[1, 0, 0], PointBox[2370]}, 
           {RGBColor[0, 0, 1], PointBox[2371]}, 
           {RGBColor[1, 0, 0], PointBox[2372]}, 
           {RGBColor[0, 0, 1], PointBox[2373]}, 
           {RGBColor[1, 0, 0], PointBox[2374]}, 
           {RGBColor[1, 0, 0], PointBox[2375]}, 
           {RGBColor[0, 0, 1], PointBox[2376]}, 
           {RGBColor[1, 0, 0], PointBox[2377]}, 
           {RGBColor[1, 1, 0], PointBox[2378]}, 
           {RGBColor[1, 0, 0], PointBox[2379]}, 
           {RGBColor[1, 0, 0], PointBox[2380]}, 
           {RGBColor[1, 0, 0], PointBox[2381]}, 
           {RGBColor[0, 0, 1], PointBox[2382]}, 
           {RGBColor[0, 0, 1], PointBox[2383]}, 
           {RGBColor[1, 0, 0], PointBox[2384]}, 
           {RGBColor[0, 0, 1], PointBox[2385]}, 
           {RGBColor[0, 0, 1], PointBox[2386]}, 
           {RGBColor[1, 0, 0], PointBox[2387]}, 
           {RGBColor[1, 0, 0], PointBox[2388]}, 
           {RGBColor[0, 0, 1], PointBox[2389]}, 
           {RGBColor[0, 0, 1], PointBox[2390]}, 
           {RGBColor[1, 0, 0], PointBox[2391]}, 
           {RGBColor[0, 0, 1], PointBox[2392]}, 
           {RGBColor[1, 1, 0], PointBox[2393]}, 
           {RGBColor[1, 0, 0], PointBox[2394]}, 
           {RGBColor[1, 0, 0], PointBox[2395]}, 
           {RGBColor[1, 0, 0], PointBox[2396]}, 
           {RGBColor[1, 0, 0], PointBox[2397]}, 
           {RGBColor[0, 0, 1], PointBox[2398]}, 
           {RGBColor[0, 0, 1], PointBox[2399]}, 
           {RGBColor[0, 0, 1], PointBox[2400]}, 
           {RGBColor[1, 1, 0], PointBox[2401]}, 
           {RGBColor[1, 1, 0], PointBox[2402]}, 
           {RGBColor[0, 0, 1], PointBox[2403]}, 
           {RGBColor[1, 1, 0], PointBox[2404]}, 
           {RGBColor[1, 1, 0], PointBox[2405]}, 
           {RGBColor[0, 0, 1], PointBox[2406]}, 
           {RGBColor[0, 0, 1], PointBox[2407]}, 
           {RGBColor[1, 1, 0], PointBox[2408]}, 
           {RGBColor[1, 1, 0], PointBox[2409]}, 
           {RGBColor[0, 0, 1], PointBox[2410]}, 
           {RGBColor[1, 1, 0], PointBox[2411]}, 
           {RGBColor[0, 0, 1], PointBox[2412]}, 
           {RGBColor[0, 0, 1], PointBox[2413]}, 
           {RGBColor[0, 0, 1], PointBox[2414]}, 
           {RGBColor[1, 1, 0], PointBox[2415]}, 
           {RGBColor[1, 1, 0], PointBox[2416]}, 
           {RGBColor[1, 1, 0], PointBox[2417]}, 
           {RGBColor[1, 1, 0], PointBox[2418]}, 
           {RGBColor[0, 0, 1], PointBox[2419]}, 
           {RGBColor[1, 1, 0], PointBox[2420]}, 
           {RGBColor[1, 1, 0], PointBox[2421]}, 
           {RGBColor[1, 1, 0], PointBox[2422]}, 
           {RGBColor[1, 1, 0], PointBox[2423]}, 
           {RGBColor[1, 0, 0], PointBox[2424]}, 
           {RGBColor[0, 0, 1], PointBox[2425]}, 
           {RGBColor[0, 0, 1], PointBox[2426]}, 
           {RGBColor[0, 0, 1], PointBox[2427]}, 
           {RGBColor[1, 1, 0], PointBox[2428]}, 
           {RGBColor[1, 1, 0], PointBox[2429]}, 
           {RGBColor[0, 0, 1], PointBox[2430]}, 
           {RGBColor[0, 0, 1], PointBox[2431]}, 
           {RGBColor[1, 1, 0], PointBox[2432]}, 
           {RGBColor[0, 0, 1], PointBox[2433]}, 
           {RGBColor[0, 0, 1], PointBox[2434]}, 
           {RGBColor[0, 0, 1], PointBox[2435]}, 
           {RGBColor[1, 1, 0], PointBox[2436]}, 
           {RGBColor[1, 1, 0], PointBox[2437]}, 
           {RGBColor[0, 0, 1], PointBox[2438]}, 
           {RGBColor[1, 1, 0], PointBox[2439]}, 
           {RGBColor[0, 0, 1], PointBox[2440]}, 
           {RGBColor[1, 0, 0], PointBox[2441]}, 
           {RGBColor[1, 0, 0], PointBox[2442]}, 
           {RGBColor[1, 1, 0], PointBox[2443]}, 
           {RGBColor[0, 0, 1], PointBox[2444]}, 
           {RGBColor[1, 1, 0], PointBox[2445]}, 
           {RGBColor[1, 1, 0], PointBox[2446]}, 
           {RGBColor[1, 1, 0], PointBox[2447]}, 
           {RGBColor[0, 0, 1], PointBox[2448]}, 
           {RGBColor[1, 1, 0], PointBox[2449]}, 
           {RGBColor[0, 0, 1], PointBox[2450]}, 
           {RGBColor[1, 0, 0], PointBox[2451]}, 
           {RGBColor[1, 1, 0], PointBox[2452]}, 
           {RGBColor[1, 1, 0], PointBox[2453]}, 
           {RGBColor[1, 0, 0], PointBox[2454]}, 
           {RGBColor[1, 1, 0], PointBox[2455]}, 
           {RGBColor[1, 1, 0], PointBox[2456]}, 
           {RGBColor[1, 0, 0], PointBox[2457]}, 
           {RGBColor[1, 1, 0], PointBox[2458]}, 
           {RGBColor[0, 0, 1], PointBox[2459]}, 
           {RGBColor[1, 1, 0], PointBox[2460]}, 
           {RGBColor[0, 0, 1], PointBox[2461]}, 
           {RGBColor[1, 1, 0], PointBox[2462]}, 
           {RGBColor[0, 0, 1], PointBox[2463]}, 
           {RGBColor[1, 0, 0], PointBox[2464]}, 
           {RGBColor[1, 1, 0], PointBox[2465]}, 
           {RGBColor[1, 1, 0], PointBox[2466]}, 
           {RGBColor[1, 0, 0], PointBox[2467]}, 
           {RGBColor[1, 0, 0], PointBox[2468]}, 
           {RGBColor[0, 0, 1], PointBox[2469]}, 
           {RGBColor[0, 0, 1], PointBox[2470]}, 
           {RGBColor[0, 0, 1], PointBox[2471]}, 
           {RGBColor[1, 1, 0], PointBox[2472]}, 
           {RGBColor[0, 0, 1], PointBox[2473]}, 
           {RGBColor[0, 0, 1], PointBox[2474]}, 
           {RGBColor[0, 0, 1], PointBox[2475]}, 
           {RGBColor[0, 0, 1], PointBox[2476]}, 
           {RGBColor[1, 0, 0], PointBox[2477]}, 
           {RGBColor[1, 1, 0], PointBox[2478]}, 
           {RGBColor[1, 0, 0], PointBox[2479]}, 
           {RGBColor[1, 1, 0], PointBox[2480]}, 
           {RGBColor[1, 0, 0], PointBox[2481]}, 
           {RGBColor[0, 0, 1], PointBox[2482]}, 
           {RGBColor[0, 0, 1], PointBox[2483]}, 
           {RGBColor[0, 0, 1], PointBox[2484]}, 
           {RGBColor[0, 0, 1], PointBox[2485]}, 
           {RGBColor[0, 0, 1], PointBox[2486]}, 
           {RGBColor[0, 0, 1], PointBox[2487]}, 
           {RGBColor[1, 0, 0], PointBox[2488]}, 
           {RGBColor[0, 0, 1], PointBox[2489]}, 
           {RGBColor[1, 0, 0], PointBox[2490]}, 
           {RGBColor[1, 0, 0], PointBox[2491]}, 
           {RGBColor[1, 0, 0], PointBox[2492]}, 
           {RGBColor[1, 1, 0], PointBox[2493]}, 
           {RGBColor[1, 1, 0], PointBox[2494]}, 
           {RGBColor[0, 0, 1], PointBox[2495]}, 
           {RGBColor[1, 1, 0], PointBox[2496]}, 
           {RGBColor[0, 0, 1], PointBox[2497]}, 
           {RGBColor[1, 1, 0], PointBox[2498]}, 
           {RGBColor[1, 1, 0], PointBox[2499]}, 
           {RGBColor[1, 1, 0], PointBox[2500]}, 
           {RGBColor[1, 1, 0], PointBox[2501]}, 
           {RGBColor[1, 0, 0], PointBox[2502]}, 
           {RGBColor[1, 1, 0], PointBox[2503]}, 
           {RGBColor[1, 0, 0], PointBox[2504]}, 
           {RGBColor[0, 0, 1], PointBox[2505]}, 
           {RGBColor[1, 1, 0], PointBox[2506]}, 
           {RGBColor[0, 0, 1], PointBox[2507]}, 
           {RGBColor[1, 1, 0], PointBox[2508]}, 
           {RGBColor[1, 0, 0], PointBox[2509]}, 
           {RGBColor[1, 1, 0], PointBox[2510]}, 
           {RGBColor[0, 0, 1], PointBox[2511]}, 
           {RGBColor[1, 0, 0], PointBox[2512]}, 
           {RGBColor[1, 0, 0], PointBox[2513]}, 
           {RGBColor[1, 0, 0], PointBox[2514]}, 
           {RGBColor[1, 1, 0], PointBox[2515]}, 
           {RGBColor[1, 1, 0], PointBox[2516]}, 
           {RGBColor[1, 1, 0], PointBox[2517]}, 
           {RGBColor[1, 1, 0], PointBox[2518]}, 
           {RGBColor[1, 1, 0], PointBox[2519]}, 
           {RGBColor[0, 0, 1], PointBox[2520]}, 
           {RGBColor[1, 0, 0], PointBox[2521]}, 
           {RGBColor[1, 1, 0], PointBox[2522]}, 
           {RGBColor[1, 0, 0], PointBox[2523]}, 
           {RGBColor[1, 1, 0], PointBox[2524]}, 
           {RGBColor[1, 1, 0], PointBox[2525]}, 
           {RGBColor[1, 1, 0], PointBox[2526]}, 
           {RGBColor[1, 0, 0], PointBox[2527]}, 
           {RGBColor[1, 1, 0], PointBox[2528]}, 
           {RGBColor[1, 1, 0], PointBox[2529]}, 
           {RGBColor[1, 0, 0], PointBox[2530]}, 
           {RGBColor[1, 0, 0], PointBox[2531]}, 
           {RGBColor[1, 0, 0], PointBox[2532]}, 
           {RGBColor[1, 1, 0], PointBox[2533]}, 
           {RGBColor[1, 1, 0], PointBox[2534]}, 
           {RGBColor[1, 0, 0], PointBox[2535]}, 
           {RGBColor[1, 1, 0], PointBox[2536]}, 
           {RGBColor[0, 0, 1], PointBox[2537]}, 
           {RGBColor[1, 0, 0], PointBox[2538]}, 
           {RGBColor[1, 0, 0], PointBox[2539]}, 
           {RGBColor[1, 0, 0], PointBox[2540]}, 
           {RGBColor[1, 1, 0], PointBox[2541]}, 
           {RGBColor[1, 1, 0], PointBox[2542]}, 
           {RGBColor[1, 0, 0], PointBox[2543]}, 
           {RGBColor[1, 0, 0], PointBox[2544]}, 
           {RGBColor[1, 1, 0], PointBox[2545]}, 
           {RGBColor[1, 1, 0], PointBox[2546]}, 
           {RGBColor[1, 0, 0], PointBox[2547]}, 
           {RGBColor[1, 0, 0], PointBox[2548]}, 
           {RGBColor[1, 0, 0], PointBox[2549]}, 
           {RGBColor[1, 1, 0], PointBox[2550]}, 
           {RGBColor[0, 0, 1], PointBox[2551]}, 
           {RGBColor[0, 0, 1], PointBox[2552]}, 
           {RGBColor[1, 0, 0], PointBox[2553]}, 
           {RGBColor[1, 1, 0], PointBox[2554]}, 
           {RGBColor[1, 0, 0], PointBox[2555]}, 
           {RGBColor[1, 1, 0], PointBox[2556]}, 
           {RGBColor[1, 0, 0], PointBox[2557]}, 
           {RGBColor[1, 0, 0], PointBox[2558]}, 
           {RGBColor[1, 0, 0], PointBox[2559]}, 
           {RGBColor[0, 0, 1], PointBox[2560]}, 
           {RGBColor[0, 0, 1], PointBox[2561]}, 
           {RGBColor[1, 0, 0], PointBox[2562]}, 
           {RGBColor[1, 0, 0], PointBox[2563]}, 
           {RGBColor[1, 0, 0], PointBox[2564]}, 
           {RGBColor[1, 1, 0], PointBox[2565]}, 
           {RGBColor[1, 0, 0], PointBox[2566]}, 
           {RGBColor[1, 0, 0], PointBox[2567]}, 
           {RGBColor[1, 0, 0], PointBox[2568]}, 
           {RGBColor[0, 0, 1], PointBox[2569]}, 
           {RGBColor[0, 0, 1], PointBox[2570]}, 
           {RGBColor[0, 0, 1], PointBox[2571]}, 
           {RGBColor[1, 1, 0], PointBox[2572]}, 
           {RGBColor[0, 0, 1], PointBox[2573]}, 
           {RGBColor[0, 0, 1], PointBox[2574]}, 
           {RGBColor[0, 0, 1], PointBox[2575]}, 
           {RGBColor[1, 1, 0], PointBox[2576]}, 
           {RGBColor[1, 1, 0], PointBox[2577]}, 
           {RGBColor[1, 0, 0], PointBox[2578]}, 
           {RGBColor[0, 0, 1], PointBox[2579]}, 
           {RGBColor[1, 0, 0], PointBox[2580]}, 
           {RGBColor[0, 0, 1], PointBox[2581]}, 
           {RGBColor[1, 1, 0], PointBox[2582]}, 
           {RGBColor[0, 0, 1], PointBox[2583]}, 
           {RGBColor[0, 0, 1], PointBox[2584]}, 
           {RGBColor[1, 1, 0], PointBox[2585]}, 
           {RGBColor[0, 0, 1], PointBox[2586]}, 
           {RGBColor[0, 0, 1], PointBox[2587]}, 
           {RGBColor[1, 0, 0], PointBox[2588]}, 
           {RGBColor[1, 1, 0], PointBox[2589]}, 
           {RGBColor[0, 0, 1], PointBox[2590]}, 
           {RGBColor[1, 1, 0], PointBox[2591]}, 
           {RGBColor[0, 0, 1], PointBox[2592]}, 
           {RGBColor[1, 0, 0], PointBox[2593]}, 
           {RGBColor[1, 0, 0], PointBox[2594]}, 
           {RGBColor[1, 0, 0], PointBox[2595]}, 
           {RGBColor[0, 0, 1], PointBox[2596]}, 
           {RGBColor[1, 1, 0], PointBox[2597]}, 
           {RGBColor[0, 0, 1], PointBox[2598]}, 
           {RGBColor[1, 0, 0], PointBox[2599]}, 
           {RGBColor[0, 0, 1], PointBox[2600]}, 
           {RGBColor[1, 0, 0], PointBox[2601]}, 
           {RGBColor[1, 1, 0], PointBox[2602]}, 
           {RGBColor[1, 1, 0], PointBox[2603]}, 
           {RGBColor[1, 0, 0], PointBox[2604]}, 
           {RGBColor[1, 0, 0], PointBox[2605]}, 
           {RGBColor[1, 0, 0], PointBox[2606]}, 
           {RGBColor[1, 1, 0], PointBox[2607]}, 
           {RGBColor[0, 0, 1], PointBox[2608]}, 
           {RGBColor[1, 1, 0], PointBox[2609]}, 
           {RGBColor[0, 0, 1], PointBox[2610]}, 
           {RGBColor[1, 0, 0], PointBox[2611]}, 
           {RGBColor[1, 0, 0], PointBox[2612]}, 
           {RGBColor[1, 0, 0], PointBox[2613]}, 
           {RGBColor[1, 1, 0], PointBox[2614]}, 
           {RGBColor[0, 0, 1], PointBox[2615]}, 
           {RGBColor[1, 0, 0], PointBox[2616]}, 
           {RGBColor[1, 1, 0], PointBox[2617]}, 
           {RGBColor[1, 1, 0], PointBox[2618]}, 
           {RGBColor[1, 0, 0], PointBox[2619]}, 
           {RGBColor[1, 0, 0], PointBox[2620]}, 
           {RGBColor[1, 0, 0], PointBox[2621]}, 
           {RGBColor[0, 0, 1], PointBox[2622]}, 
           {RGBColor[0, 0, 1], PointBox[2623]}, 
           {RGBColor[0, 0, 1], PointBox[2624]}, 
           {RGBColor[0, 0, 1], PointBox[2625]}, 
           {RGBColor[0, 0, 1], PointBox[2626]}, 
           {RGBColor[0, 0, 1], PointBox[2627]}, 
           {RGBColor[1, 0, 0], PointBox[2628]}, 
           {RGBColor[0, 0, 1], PointBox[2629]}, 
           {RGBColor[1, 0, 0], PointBox[2630]}, 
           {RGBColor[0, 0, 1], PointBox[2631]}, 
           {RGBColor[0, 0, 1], PointBox[2632]}, 
           {RGBColor[1, 0, 0], PointBox[2633]}, 
           {RGBColor[1, 1, 0], PointBox[2634]}, 
           {RGBColor[1, 0, 0], PointBox[2635]}, 
           {RGBColor[1, 0, 0], PointBox[2636]}, 
           {RGBColor[1, 0, 0], PointBox[2637]}, 
           {RGBColor[0, 0, 1], PointBox[2638]}, 
           {RGBColor[0, 0, 1], PointBox[2639]}, 
           {RGBColor[0, 0, 1], PointBox[2640]}, 
           {RGBColor[0, 0, 1], PointBox[2641]}, 
           {RGBColor[1, 0, 0], PointBox[2642]}, 
           {RGBColor[0, 0, 1], PointBox[2643]}, 
           {RGBColor[0, 0, 1], PointBox[2644]}, 
           {RGBColor[0, 0, 1], PointBox[2645]}, 
           {RGBColor[0, 0, 1], PointBox[2646]}, 
           {RGBColor[1, 0, 0], PointBox[2647]}, 
           {RGBColor[1, 0, 0], PointBox[2648]}, 
           {RGBColor[1, 0, 0], PointBox[2649]}, 
           {RGBColor[0, 0, 1], PointBox[2650]}, 
           {RGBColor[1, 0, 0], PointBox[2651]}, 
           {RGBColor[0, 0, 1], PointBox[2652]}, 
           {RGBColor[1, 0, 0], PointBox[2653]}, 
           {RGBColor[1, 0, 0], PointBox[2654]}, 
           {RGBColor[0, 0, 1], PointBox[2655]}, 
           {RGBColor[1, 0, 0], PointBox[2656]}, 
           {RGBColor[1, 1, 0], PointBox[2657]}, 
           {RGBColor[1, 0, 0], PointBox[2658]}, 
           {RGBColor[1, 0, 0], PointBox[2659]}, 
           {RGBColor[1, 0, 0], PointBox[2660]}, 
           {RGBColor[1, 0, 0], PointBox[2661]}, 
           {RGBColor[0, 0, 1], PointBox[2662]}, 
           {RGBColor[0, 0, 1], PointBox[2663]}, 
           {RGBColor[0, 0, 1], PointBox[2664]}, 
           {RGBColor[1, 1, 0], PointBox[2665]}, 
           {RGBColor[1, 1, 0], PointBox[2666]}, 
           {RGBColor[1, 1, 0], PointBox[2667]}, 
           {RGBColor[1, 1, 0], PointBox[2668]}, 
           {RGBColor[0, 0, 1], PointBox[2669]}, 
           {RGBColor[1, 1, 0], PointBox[2670]}, 
           {RGBColor[1, 1, 0], PointBox[2671]}, 
           {RGBColor[1, 1, 0], PointBox[2672]}, 
           {RGBColor[1, 1, 0], PointBox[2673]}, 
           {RGBColor[0, 0, 1], PointBox[2674]}, 
           {RGBColor[0, 0, 1], PointBox[2675]}, 
           {RGBColor[0, 0, 1], PointBox[2676]}, 
           {RGBColor[1, 1, 0], PointBox[2677]}, 
           {RGBColor[0, 0, 1], PointBox[2678]}, 
           {RGBColor[1, 1, 0], PointBox[2679]}, 
           {RGBColor[0, 0, 1], PointBox[2680]}, 
           {RGBColor[0, 0, 1], PointBox[2681]}, 
           {RGBColor[1, 1, 0], PointBox[2682]}, 
           {RGBColor[0, 0, 1], PointBox[2683]}, 
           {RGBColor[0, 0, 1], PointBox[2684]}, 
           {RGBColor[0, 0, 1], PointBox[2685]}, 
           {RGBColor[0, 0, 1], PointBox[2686]}, 
           {RGBColor[1, 1, 0], PointBox[2687]}, 
           {RGBColor[1, 1, 0], PointBox[2688]}, 
           {RGBColor[1, 1, 0], PointBox[2689]}, 
           {RGBColor[1, 1, 0], PointBox[2690]}, 
           {RGBColor[1, 1, 0], PointBox[2691]}, 
           {RGBColor[1, 1, 0], PointBox[2692]}, 
           {RGBColor[0, 0, 1], PointBox[2693]}, 
           {RGBColor[1, 1, 0], PointBox[2694]}, 
           {RGBColor[0, 0, 1], PointBox[2695]}, 
           {RGBColor[1, 1, 0], PointBox[2696]}, 
           {RGBColor[1, 1, 0], PointBox[2697]}, 
           {RGBColor[0, 0, 1], PointBox[2698]}, 
           {RGBColor[0, 0, 1], PointBox[2699]}, 
           {RGBColor[1, 0, 0], PointBox[2700]}, 
           {RGBColor[0, 0, 1], PointBox[2701]}, 
           {RGBColor[1, 1, 0], PointBox[2702]}, 
           {RGBColor[0, 0, 1], PointBox[2703]}, 
           {RGBColor[1, 0, 0], PointBox[2704]}, 
           {RGBColor[1, 1, 0], PointBox[2705]}, 
           {RGBColor[1, 1, 0], PointBox[2706]}, 
           {RGBColor[1, 0, 0], PointBox[2707]}, 
           {RGBColor[1, 1, 0], PointBox[2708]}, 
           {RGBColor[1, 1, 0], PointBox[2709]}, 
           {RGBColor[1, 1, 0], PointBox[2710]}, 
           {RGBColor[0, 0, 1], PointBox[2711]}, 
           {RGBColor[1, 0, 0], PointBox[2712]}, 
           {RGBColor[1, 1, 0], PointBox[2713]}, 
           {RGBColor[1, 0, 0], PointBox[2714]}, 
           {RGBColor[0, 0, 1], PointBox[2715]}, 
           {RGBColor[0, 0, 1], PointBox[2716]}, 
           {RGBColor[1, 1, 0], PointBox[2717]}, 
           {RGBColor[1, 1, 0], PointBox[2718]}, 
           {RGBColor[1, 0, 0], PointBox[2719]}, 
           {RGBColor[1, 1, 0], PointBox[2720]}, 
           {RGBColor[1, 1, 0], PointBox[2721]}, 
           {RGBColor[1, 1, 0], PointBox[2722]}, 
           {RGBColor[1, 1, 0], PointBox[2723]}, 
           {RGBColor[1, 0, 0], PointBox[2724]}, 
           {RGBColor[1, 1, 0], PointBox[2725]}, 
           {RGBColor[1, 0, 0], PointBox[2726]}, 
           {RGBColor[0, 0, 1], PointBox[2727]}, 
           {RGBColor[0, 0, 1], PointBox[2728]}, 
           {RGBColor[0, 0, 1], PointBox[2729]}, 
           {RGBColor[1, 0, 0], PointBox[2730]}, 
           {RGBColor[1, 1, 0], PointBox[2731]}, 
           {RGBColor[1, 0, 0], PointBox[2732]}, 
           {RGBColor[1, 1, 0], PointBox[2733]}, 
           {RGBColor[0, 0, 1], PointBox[2734]}, 
           {RGBColor[0, 0, 1], PointBox[2735]}, 
           {RGBColor[1, 0, 0], PointBox[2736]}, 
           {RGBColor[0, 0, 1], PointBox[2737]}, 
           {RGBColor[1, 1, 0], PointBox[2738]}, 
           {RGBColor[1, 0, 0], PointBox[2739]}, 
           {RGBColor[0, 0, 1], PointBox[2740]}, 
           {RGBColor[0, 0, 1], PointBox[2741]}, 
           {RGBColor[0, 0, 1], PointBox[2742]}, 
           {RGBColor[0, 0, 1], PointBox[2743]}, 
           {RGBColor[1, 1, 0], PointBox[2744]}, 
           {RGBColor[1, 0, 0], PointBox[2745]}, 
           {RGBColor[1, 1, 0], PointBox[2746]}, 
           {RGBColor[0, 0, 1], PointBox[2747]}, 
           {RGBColor[1, 1, 0], PointBox[2748]}, 
           {RGBColor[1, 0, 0], PointBox[2749]}, 
           {RGBColor[0, 0, 1], PointBox[2750]}, 
           {RGBColor[0, 0, 1], PointBox[2751]}, 
           {RGBColor[1, 0, 0], PointBox[2752]}, 
           {RGBColor[1, 0, 0], PointBox[2753]}, 
           {RGBColor[0, 0, 1], PointBox[2754]}, 
           {RGBColor[1, 1, 0], PointBox[2755]}, 
           {RGBColor[1, 1, 0], PointBox[2756]}, 
           {RGBColor[1, 1, 0], PointBox[2757]}, 
           {RGBColor[1, 1, 0], PointBox[2758]}, 
           {RGBColor[1, 1, 0], PointBox[2759]}, 
           {RGBColor[1, 1, 0], PointBox[2760]}, 
           {RGBColor[0, 0, 1], PointBox[2761]}, 
           {RGBColor[0, 0, 1], PointBox[2762]}, 
           {RGBColor[0, 0, 1], PointBox[2763]}, 
           {RGBColor[1, 1, 0], PointBox[2764]}, 
           {RGBColor[1, 0, 0], PointBox[2765]}, 
           {RGBColor[1, 1, 0], PointBox[2766]}, 
           {RGBColor[1, 1, 0], PointBox[2767]}, 
           {RGBColor[1, 1, 0], PointBox[2768]}, 
           {RGBColor[1, 1, 0], PointBox[2769]}, 
           {RGBColor[1, 1, 0], PointBox[2770]}, 
           {RGBColor[1, 0, 0], PointBox[2771]}, 
           {RGBColor[0, 0, 1], PointBox[2772]}, 
           {RGBColor[1, 1, 0], PointBox[2773]}, 
           {RGBColor[0, 0, 1], PointBox[2774]}, 
           {RGBColor[0, 0, 1], PointBox[2775]}, 
           {RGBColor[1, 0, 0], PointBox[2776]}, 
           {RGBColor[0, 0, 1], PointBox[2777]}, 
           {RGBColor[1, 0, 0], PointBox[2778]}, 
           {RGBColor[1, 1, 0], PointBox[2779]}, 
           {RGBColor[1, 0, 0], PointBox[2780]}, 
           {RGBColor[1, 1, 0], PointBox[2781]}, 
           {RGBColor[1, 1, 0], PointBox[2782]}, 
           {RGBColor[1, 1, 0], PointBox[2783]}, 
           {RGBColor[1, 0, 0], PointBox[2784]}, 
           {RGBColor[1, 1, 0], PointBox[2785]}, 
           {RGBColor[1, 1, 0], PointBox[2786]}, 
           {RGBColor[1, 0, 0], PointBox[2787]}, 
           {RGBColor[1, 1, 0], PointBox[2788]}, 
           {RGBColor[1, 0, 0], PointBox[2789]}, 
           {RGBColor[1, 1, 0], PointBox[2790]}, 
           {RGBColor[1, 1, 0], PointBox[2791]}, 
           {RGBColor[1, 0, 0], PointBox[2792]}, 
           {RGBColor[0, 0, 1], PointBox[2793]}, 
           {RGBColor[0, 0, 1], PointBox[2794]}, 
           {RGBColor[1, 0, 0], PointBox[2795]}, 
           {RGBColor[1, 0, 0], PointBox[2796]}, 
           {RGBColor[1, 0, 0], PointBox[2797]}, 
           {RGBColor[1, 1, 0], PointBox[2798]}, 
           {RGBColor[1, 1, 0], PointBox[2799]}, 
           {RGBColor[1, 0, 0], PointBox[2800]}, 
           {RGBColor[1, 1, 0], PointBox[2801]}, 
           {RGBColor[1, 1, 0], PointBox[2802]}, 
           {RGBColor[1, 0, 0], PointBox[2803]}, 
           {RGBColor[1, 0, 0], PointBox[2804]}, 
           {RGBColor[1, 1, 0], PointBox[2805]}, 
           {RGBColor[1, 1, 0], PointBox[2806]}, 
           {RGBColor[1, 0, 0], PointBox[2807]}, 
           {RGBColor[1, 1, 0], PointBox[2808]}, 
           {RGBColor[1, 1, 0], PointBox[2809]}, 
           {RGBColor[1, 0, 0], PointBox[2810]}, 
           {RGBColor[1, 0, 0], PointBox[2811]}, 
           {RGBColor[1, 0, 0], PointBox[2812]}, 
           {RGBColor[1, 1, 0], PointBox[2813]}, 
           {RGBColor[1, 0, 0], PointBox[2814]}, 
           {RGBColor[1, 1, 0], PointBox[2815]}, 
           {RGBColor[1, 0, 0], PointBox[2816]}, 
           {RGBColor[1, 0, 0], PointBox[2817]}, 
           {RGBColor[1, 1, 0], PointBox[2818]}, 
           {RGBColor[1, 0, 0], PointBox[2819]}, 
           {RGBColor[1, 1, 0], PointBox[2820]}, 
           {RGBColor[1, 0, 0], PointBox[2821]}, 
           {RGBColor[0, 0, 1], PointBox[2822]}, 
           {RGBColor[1, 0, 0], PointBox[2823]}, 
           {RGBColor[1, 1, 0], PointBox[2824]}, 
           {RGBColor[1, 0, 0], PointBox[2825]}, 
           {RGBColor[1, 1, 0], PointBox[2826]}, 
           {RGBColor[1, 0, 0], PointBox[2827]}, 
           {RGBColor[1, 1, 0], PointBox[2828]}, 
           {RGBColor[1, 0, 0], PointBox[2829]}, 
           {RGBColor[0, 0, 1], PointBox[2830]}, 
           {RGBColor[0, 0, 1], PointBox[2831]}, 
           {RGBColor[0, 0, 1], PointBox[2832]}, 
           {RGBColor[1, 0, 0], PointBox[2833]}, 
           {RGBColor[1, 0, 0], PointBox[2834]}, 
           {RGBColor[1, 0, 0], PointBox[2835]}, 
           {RGBColor[1, 1, 0], PointBox[2836]}, 
           {RGBColor[1, 0, 0], PointBox[2837]}, 
           {RGBColor[1, 1, 0], PointBox[2838]}, 
           {RGBColor[1, 0, 0], PointBox[2839]}, 
           {RGBColor[1, 0, 0], PointBox[2840]}, 
           {RGBColor[1, 0, 0], PointBox[2841]}, 
           {RGBColor[0, 0, 1], PointBox[2842]}, 
           {RGBColor[1, 1, 0], PointBox[2843]}, 
           {RGBColor[1, 0, 0], PointBox[2844]}, 
           {RGBColor[0, 0, 1], PointBox[2845]}, 
           {RGBColor[1, 1, 0], PointBox[2846]}, 
           {RGBColor[1, 0, 0], PointBox[2847]}, 
           {RGBColor[1, 0, 0], PointBox[2848]}, 
           {RGBColor[0, 0, 1], PointBox[2849]}, 
           {RGBColor[0, 0, 1], PointBox[2850]}, 
           {RGBColor[0, 0, 1], PointBox[2851]}, 
           {RGBColor[1, 1, 0], PointBox[2852]}, 
           {RGBColor[1, 1, 0], PointBox[2853]}, 
           {RGBColor[0, 0, 1], PointBox[2854]}, 
           {RGBColor[0, 0, 1], PointBox[2855]}, 
           {RGBColor[0, 0, 1], PointBox[2856]}, 
           {RGBColor[0, 0, 1], PointBox[2857]}, 
           {RGBColor[0, 0, 1], PointBox[2858]}, 
           {RGBColor[0, 0, 1], PointBox[2859]}, 
           {RGBColor[1, 0, 0], PointBox[2860]}, 
           {RGBColor[1, 1, 0], PointBox[2861]}, 
           {RGBColor[1, 1, 0], PointBox[2862]}, 
           {RGBColor[0, 0, 1], PointBox[2863]}, 
           {RGBColor[1, 0, 0], PointBox[2864]}, 
           {RGBColor[0, 0, 1], PointBox[2865]}, 
           {RGBColor[0, 0, 1], PointBox[2866]}, 
           {RGBColor[1, 0, 0], PointBox[2867]}, 
           {RGBColor[0, 0, 1], PointBox[2868]}, 
           {RGBColor[1, 0, 0], PointBox[2869]}, 
           {RGBColor[0, 0, 1], PointBox[2870]}, 
           {RGBColor[1, 0, 0], PointBox[2871]}, 
           {RGBColor[1, 1, 0], PointBox[2872]}, 
           {RGBColor[1, 1, 0], PointBox[2873]}, 
           {RGBColor[1, 0, 0], PointBox[2874]}, 
           {RGBColor[0, 0, 1], PointBox[2875]}, 
           {RGBColor[1, 0, 0], PointBox[2876]}, 
           {RGBColor[0, 0, 1], PointBox[2877]}, 
           {RGBColor[0, 0, 1], PointBox[2878]}, 
           {RGBColor[1, 0, 0], PointBox[2879]}, 
           {RGBColor[1, 0, 0], PointBox[2880]}, 
           {RGBColor[1, 0, 0], PointBox[2881]}, 
           {RGBColor[1, 1, 0], PointBox[2882]}, 
           {RGBColor[1, 1, 0], PointBox[2883]}, 
           {RGBColor[1, 0, 0], PointBox[2884]}, 
           {RGBColor[1, 0, 0], PointBox[2885]}, 
           {RGBColor[1, 0, 0], PointBox[2886]}, 
           {RGBColor[1, 1, 0], PointBox[2887]}, 
           {RGBColor[1, 0, 0], PointBox[2888]}, 
           {RGBColor[0, 0, 1], PointBox[2889]}, 
           {RGBColor[1, 0, 0], PointBox[2890]}, 
           {RGBColor[0, 0, 1], PointBox[2891]}, 
           {RGBColor[1, 0, 0], PointBox[2892]}, 
           {RGBColor[0, 0, 1], PointBox[2893]}, 
           {RGBColor[0, 0, 1], PointBox[2894]}, 
           {RGBColor[1, 0, 0], PointBox[2895]}, 
           {RGBColor[1, 1, 0], PointBox[2896]}, 
           {RGBColor[1, 0, 0], PointBox[2897]}, 
           {RGBColor[0, 0, 1], PointBox[2898]}, 
           {RGBColor[1, 0, 0], PointBox[2899]}, 
           {RGBColor[0, 0, 1], PointBox[2900]}, 
           {RGBColor[0, 0, 1], PointBox[2901]}, 
           {RGBColor[0, 0, 1], PointBox[2902]}, 
           {RGBColor[1, 0, 0], PointBox[2903]}, 
           {RGBColor[0, 0, 1], PointBox[2904]}, 
           {RGBColor[0, 0, 1], PointBox[2905]}, 
           {RGBColor[0, 0, 1], PointBox[2906]}, 
           {RGBColor[1, 0, 0], PointBox[2907]}, 
           {RGBColor[1, 0, 0], PointBox[2908]}, 
           {RGBColor[1, 0, 0], PointBox[2909]}, 
           {RGBColor[0, 0, 1], PointBox[2910]}, 
           {RGBColor[1, 0, 0], PointBox[2911]}, 
           {RGBColor[1, 0, 0], PointBox[2912]}, 
           {RGBColor[1, 1, 0], PointBox[2913]}, 
           {RGBColor[1, 0, 0], PointBox[2914]}, 
           {RGBColor[1, 0, 0], PointBox[2915]}, 
           {RGBColor[1, 0, 0], PointBox[2916]}, 
           {RGBColor[0, 0, 1], PointBox[2917]}, 
           {RGBColor[0, 0, 1], PointBox[2918]}, 
           {RGBColor[1, 0, 0], PointBox[2919]}, 
           {RGBColor[1, 0, 0], PointBox[2920]}, 
           {RGBColor[0, 0, 1], PointBox[2921]}, 
           {RGBColor[1, 1, 0], PointBox[2922]}, 
           {RGBColor[1, 0, 0], PointBox[2923]}, 
           {RGBColor[1, 0, 0], PointBox[2924]}, 
           {RGBColor[1, 0, 0], PointBox[2925]}, 
           {RGBColor[1, 0, 0], PointBox[2926]}, 
           {RGBColor[0, 0, 1], PointBox[2927]}, 
           {RGBColor[0, 0, 1], PointBox[2928]}, 
           {RGBColor[0, 0, 1], PointBox[2929]}, 
           {RGBColor[1, 1, 0], PointBox[2930]}, 
           {RGBColor[1, 1, 0], PointBox[2931]}, 
           {RGBColor[0, 0, 1], PointBox[2932]}, 
           {RGBColor[1, 1, 0], PointBox[2933]}, 
           {RGBColor[1, 1, 0], PointBox[2934]}, 
           {RGBColor[0, 0, 1], PointBox[2935]}, 
           {RGBColor[0, 0, 1], PointBox[2936]}, 
           {RGBColor[1, 1, 0], PointBox[2937]}, 
           {RGBColor[1, 1, 0], PointBox[2938]}, 
           {RGBColor[0, 0, 1], PointBox[2939]}, 
           {RGBColor[1, 1, 0], PointBox[2940]}, 
           {RGBColor[0, 0, 1], PointBox[2941]}, 
           {RGBColor[0, 0, 1], PointBox[2942]}, 
           {RGBColor[0, 0, 1], PointBox[2943]}, 
           {RGBColor[1, 1, 0], PointBox[2944]}, 
           {RGBColor[1, 1, 0], PointBox[2945]}, 
           {RGBColor[1, 1, 0], PointBox[2946]}, 
           {RGBColor[1, 1, 0], PointBox[2947]}, 
           {RGBColor[0, 0, 1], PointBox[2948]}, 
           {RGBColor[1, 1, 0], PointBox[2949]}, 
           {RGBColor[1, 1, 0], PointBox[2950]}, 
           {RGBColor[1, 1, 0], PointBox[2951]}, 
           {RGBColor[0, 0, 1], PointBox[2952]}, 
           {RGBColor[1, 0, 0], PointBox[2953]}, 
           {RGBColor[0, 0, 1], PointBox[2954]}, 
           {RGBColor[1, 1, 0], PointBox[2955]}, 
           {RGBColor[0, 0, 1], PointBox[2956]}, 
           {RGBColor[1, 1, 0], PointBox[2957]}, 
           {RGBColor[1, 1, 0], PointBox[2958]}, 
           {RGBColor[1, 1, 0], PointBox[2959]}, 
           {RGBColor[0, 0, 1], PointBox[2960]}, 
           {RGBColor[1, 1, 0], PointBox[2961]}, 
           {RGBColor[0, 0, 1], PointBox[2962]}, 
           {RGBColor[0, 0, 1], PointBox[2963]}, 
           {RGBColor[1, 1, 0], PointBox[2964]}, 
           {RGBColor[1, 1, 0], PointBox[2965]}, 
           {RGBColor[1, 1, 0], PointBox[2966]}, 
           {RGBColor[1, 1, 0], PointBox[2967]}, 
           {RGBColor[1, 1, 0], PointBox[2968]}, 
           {RGBColor[0, 0, 1], PointBox[2969]}, 
           {RGBColor[1, 0, 0], PointBox[2970]}, 
           {RGBColor[1, 0, 0], PointBox[2971]}, 
           {RGBColor[1, 1, 0], PointBox[2972]}, 
           {RGBColor[0, 0, 1], PointBox[2973]}, 
           {RGBColor[1, 1, 0], PointBox[2974]}, 
           {RGBColor[1, 1, 0], PointBox[2975]}, 
           {RGBColor[1, 1, 0], PointBox[2976]}, 
           {RGBColor[0, 0, 1], PointBox[2977]}, 
           {RGBColor[1, 1, 0], PointBox[2978]}, 
           {RGBColor[0, 0, 1], PointBox[2979]}, 
           {RGBColor[1, 0, 0], PointBox[2980]}, 
           {RGBColor[1, 1, 0], PointBox[2981]}, 
           {RGBColor[1, 1, 0], PointBox[2982]}, 
           {RGBColor[1, 0, 0], PointBox[2983]}, 
           {RGBColor[1, 1, 0], PointBox[2984]}, 
           {RGBColor[0, 0, 1], PointBox[2985]}, 
           {RGBColor[1, 0, 0], PointBox[2986]}, 
           {RGBColor[1, 1, 0], PointBox[2987]}, 
           {RGBColor[1, 1, 0], PointBox[2988]}, 
           {RGBColor[1, 1, 0], PointBox[2989]}, 
           {RGBColor[0, 0, 1], PointBox[2990]}, 
           {RGBColor[1, 1, 0], PointBox[2991]}, 
           {RGBColor[1, 1, 0], PointBox[2992]}, 
           {RGBColor[1, 0, 0], PointBox[2993]}, 
           {RGBColor[1, 1, 0], PointBox[2994]}, 
           {RGBColor[1, 1, 0], PointBox[2995]}, 
           {RGBColor[1, 0, 0], PointBox[2996]}, 
           {RGBColor[1, 0, 0], PointBox[2997]}, 
           {RGBColor[0, 0, 1], PointBox[2998]}, 
           {RGBColor[0, 0, 1], PointBox[2999]}, 
           {RGBColor[0, 0, 1], PointBox[3000]}, 
           {RGBColor[1, 1, 0], PointBox[3001]}, 
           {RGBColor[0, 0, 1], PointBox[3002]}, 
           {RGBColor[0, 0, 1], PointBox[3003]}, 
           {RGBColor[0, 0, 1], PointBox[3004]}, 
           {RGBColor[0, 0, 1], PointBox[3005]}, 
           {RGBColor[1, 0, 0], PointBox[3006]}, 
           {RGBColor[1, 1, 0], PointBox[3007]}, 
           {RGBColor[1, 0, 0], PointBox[3008]}, 
           {RGBColor[0, 0, 1], PointBox[3009]}, 
           {RGBColor[1, 0, 0], PointBox[3010]}, 
           {RGBColor[0, 0, 1], PointBox[3011]}, 
           {RGBColor[1, 1, 0], PointBox[3012]}, 
           {RGBColor[0, 0, 1], PointBox[3013]}, 
           {RGBColor[0, 0, 1], PointBox[3014]}, 
           {RGBColor[0, 0, 1], PointBox[3015]}, 
           {RGBColor[1, 1, 0], PointBox[3016]}, 
           {RGBColor[1, 0, 0], PointBox[3017]}, 
           {RGBColor[0, 0, 1], PointBox[3018]}, 
           {RGBColor[1, 0, 0], PointBox[3019]}, 
           {RGBColor[1, 0, 0], PointBox[3020]}, 
           {RGBColor[1, 0, 0], PointBox[3021]}, 
           {RGBColor[1, 1, 0], PointBox[3022]}, 
           {RGBColor[1, 1, 0], PointBox[3023]}, 
           {RGBColor[0, 0, 1], PointBox[3024]}, 
           {RGBColor[1, 1, 0], PointBox[3025]}, 
           {RGBColor[0, 0, 1], PointBox[3026]}, 
           {RGBColor[1, 1, 0], PointBox[3027]}, 
           {RGBColor[1, 1, 0], PointBox[3028]}, 
           {RGBColor[1, 1, 0], PointBox[3029]}, 
           {RGBColor[0, 0, 1], PointBox[3030]}, 
           {RGBColor[1, 0, 0], PointBox[3031]}, 
           {RGBColor[1, 1, 0], PointBox[3032]}, 
           {RGBColor[1, 0, 0], PointBox[3033]}, 
           {RGBColor[0, 0, 1], PointBox[3034]}, 
           {RGBColor[1, 1, 0], PointBox[3035]}, 
           {RGBColor[1, 1, 0], PointBox[3036]}, 
           {RGBColor[0, 0, 1], PointBox[3037]}, 
           {RGBColor[1, 1, 0], PointBox[3038]}, 
           {RGBColor[0, 0, 1], PointBox[3039]}, 
           {RGBColor[1, 1, 0], PointBox[3040]}, 
           {RGBColor[1, 0, 0], PointBox[3041]}, 
           {RGBColor[1, 1, 0], PointBox[3042]}, 
           {RGBColor[1, 1, 0], PointBox[3043]}, 
           {RGBColor[1, 1, 0], PointBox[3044]}, 
           {RGBColor[0, 0, 1], PointBox[3045]}, 
           {RGBColor[1, 0, 0], PointBox[3046]}, 
           {RGBColor[1, 0, 0], PointBox[3047]}, 
           {RGBColor[1, 0, 0], PointBox[3048]}, 
           {RGBColor[1, 1, 0], PointBox[3049]}, 
           {RGBColor[1, 1, 0], PointBox[3050]}, 
           {RGBColor[1, 1, 0], PointBox[3051]}, 
           {RGBColor[1, 1, 0], PointBox[3052]}, 
           {RGBColor[1, 1, 0], PointBox[3053]}, 
           {RGBColor[0, 0, 1], PointBox[3054]}, 
           {RGBColor[1, 0, 0], PointBox[3055]}, 
           {RGBColor[1, 1, 0], PointBox[3056]}, 
           {RGBColor[1, 0, 0], PointBox[3057]}, 
           {RGBColor[1, 1, 0], PointBox[3058]}, 
           {RGBColor[1, 1, 0], PointBox[3059]}, 
           {RGBColor[1, 1, 0], PointBox[3060]}, 
           {RGBColor[1, 0, 0], PointBox[3061]}, 
           {RGBColor[1, 1, 0], PointBox[3062]}, 
           {RGBColor[0, 0, 1], PointBox[3063]}, 
           {RGBColor[1, 0, 0], PointBox[3064]}, 
           {RGBColor[1, 0, 0], PointBox[3065]}, 
           {RGBColor[1, 0, 0], PointBox[3066]}, 
           {RGBColor[1, 1, 0], PointBox[3067]}, 
           {RGBColor[1, 1, 0], PointBox[3068]}, 
           {RGBColor[1, 1, 0], PointBox[3069]}, 
           {RGBColor[1, 1, 0], PointBox[3070]}, 
           {RGBColor[1, 0, 0], PointBox[3071]}, 
           {RGBColor[1, 1, 0], PointBox[3072]}, 
           {RGBColor[1, 1, 0], PointBox[3073]}, 
           {RGBColor[1, 1, 0], PointBox[3074]}, 
           {RGBColor[0, 0, 1], PointBox[3075]}, 
           {RGBColor[1, 0, 0], PointBox[3076]}, 
           {RGBColor[1, 0, 0], PointBox[3077]}, 
           {RGBColor[1, 0, 0], PointBox[3078]}, 
           {RGBColor[1, 1, 0], PointBox[3079]}, 
           {RGBColor[1, 1, 0], PointBox[3080]}, 
           {RGBColor[1, 0, 0], PointBox[3081]}, 
           {RGBColor[1, 1, 0], PointBox[3082]}, 
           {RGBColor[1, 1, 0], PointBox[3083]}, 
           {RGBColor[1, 0, 0], PointBox[3084]}, 
           {RGBColor[1, 0, 0], PointBox[3085]}, 
           {RGBColor[1, 1, 0], PointBox[3086]}, 
           {RGBColor[1, 1, 0], PointBox[3087]}, 
           {RGBColor[1, 0, 0], PointBox[3088]}, 
           {RGBColor[1, 1, 0], PointBox[3089]}, 
           {RGBColor[1, 1, 0], PointBox[3090]}, 
           {RGBColor[1, 0, 0], PointBox[3091]}, 
           {RGBColor[1, 0, 0], PointBox[3092]}, 
           {RGBColor[1, 0, 0], PointBox[3093]}, 
           {RGBColor[1, 1, 0], PointBox[3094]}, 
           {RGBColor[0, 0, 1], PointBox[3095]}, 
           {RGBColor[0, 0, 1], PointBox[3096]}, 
           {RGBColor[1, 0, 0], PointBox[3097]}, 
           {RGBColor[1, 1, 0], PointBox[3098]}, 
           {RGBColor[1, 0, 0], PointBox[3099]}, 
           {RGBColor[0, 0, 1], PointBox[3100]}, 
           {RGBColor[1, 0, 0], PointBox[3101]}, 
           {RGBColor[1, 0, 0], PointBox[3102]}, 
           {RGBColor[1, 0, 0], PointBox[3103]}, 
           {RGBColor[0, 0, 1], PointBox[3104]}, 
           {RGBColor[1, 1, 0], PointBox[3105]}, 
           {RGBColor[0, 0, 1], PointBox[3106]}, 
           {RGBColor[0, 0, 1], PointBox[3107]}, 
           {RGBColor[1, 0, 0], PointBox[3108]}, 
           {RGBColor[1, 0, 0], PointBox[3109]}, 
           {RGBColor[1, 0, 0], PointBox[3110]}, 
           {RGBColor[1, 1, 0], PointBox[3111]}, 
           {RGBColor[1, 0, 0], PointBox[3112]}, 
           {RGBColor[1, 1, 0], PointBox[3113]}, 
           {RGBColor[1, 0, 0], PointBox[3114]}, 
           {RGBColor[1, 0, 0], PointBox[3115]}, 
           {RGBColor[1, 0, 0], PointBox[3116]}, 
           {RGBColor[0, 0, 1], PointBox[3117]}, 
           {RGBColor[0, 0, 1], PointBox[3118]}, 
           {RGBColor[0, 0, 1], PointBox[3119]}, 
           {RGBColor[1, 1, 0], PointBox[3120]}, 
           {RGBColor[0, 0, 1], PointBox[3121]}, 
           {RGBColor[0, 0, 1], PointBox[3122]}, 
           {RGBColor[0, 0, 1], PointBox[3123]}, 
           {RGBColor[1, 1, 0], PointBox[3124]}, 
           {RGBColor[0, 0, 1], PointBox[3125]}, 
           {RGBColor[1, 0, 0], PointBox[3126]}, 
           {RGBColor[0, 0, 1], PointBox[3127]}, 
           {RGBColor[1, 0, 0], PointBox[3128]}, 
           {RGBColor[0, 0, 1], PointBox[3129]}, 
           {RGBColor[1, 1, 0], PointBox[3130]}, 
           {RGBColor[0, 0, 1], PointBox[3131]}, 
           {RGBColor[0, 0, 1], PointBox[3132]}, 
           {RGBColor[1, 0, 0], PointBox[3133]}, 
           {RGBColor[1, 1, 0], PointBox[3134]}, 
           {RGBColor[0, 0, 1], PointBox[3135]}, 
           {RGBColor[1, 0, 0], PointBox[3136]}, 
           {RGBColor[1, 0, 0], PointBox[3137]}, 
           {RGBColor[1, 0, 0], PointBox[3138]}, 
           {RGBColor[0, 0, 1], PointBox[3139]}, 
           {RGBColor[1, 1, 0], PointBox[3140]}, 
           {RGBColor[0, 0, 1], PointBox[3141]}, 
           {RGBColor[1, 0, 0], PointBox[3142]}, 
           {RGBColor[0, 0, 1], PointBox[3143]}, 
           {RGBColor[1, 0, 0], PointBox[3144]}, 
           {RGBColor[1, 1, 0], PointBox[3145]}, 
           {RGBColor[0, 0, 1], PointBox[3146]}, 
           {RGBColor[1, 0, 0], PointBox[3147]}, 
           {RGBColor[1, 0, 0], PointBox[3148]}, 
           {RGBColor[1, 0, 0], PointBox[3149]}, 
           {RGBColor[1, 1, 0], PointBox[3150]}, 
           {RGBColor[0, 0, 1], PointBox[3151]}, 
           {RGBColor[1, 0, 0], PointBox[3152]}, 
           {RGBColor[1, 0, 0], PointBox[3153]}, 
           {RGBColor[1, 0, 0], PointBox[3154]}, 
           {RGBColor[1, 1, 0], PointBox[3155]}, 
           {RGBColor[1, 1, 0], PointBox[3156]}, 
           {RGBColor[1, 0, 0], PointBox[3157]}, 
           {RGBColor[1, 0, 0], PointBox[3158]}, 
           {RGBColor[1, 0, 0], PointBox[3159]}, 
           {RGBColor[0, 0, 1], PointBox[3160]}, 
           {RGBColor[0, 0, 1], PointBox[3161]}, 
           {RGBColor[0, 0, 1], PointBox[3162]}, 
           {RGBColor[0, 0, 1], PointBox[3163]}, 
           {RGBColor[0, 0, 1], PointBox[3164]}, 
           {RGBColor[0, 0, 1], PointBox[3165]}, 
           {RGBColor[1, 0, 0], PointBox[3166]}, 
           {RGBColor[0, 0, 1], PointBox[3167]}, 
           {RGBColor[1, 0, 0], PointBox[3168]}, 
           {RGBColor[0, 0, 1], PointBox[3169]}, 
           {RGBColor[0, 0, 1], PointBox[3170]}, 
           {RGBColor[1, 0, 0], PointBox[3171]}, 
           {RGBColor[0, 0, 1], PointBox[3172]}, 
           {RGBColor[1, 0, 0], PointBox[3173]}, 
           {RGBColor[1, 0, 0], PointBox[3174]}, 
           {RGBColor[1, 0, 0], PointBox[3175]}, 
           {RGBColor[0, 0, 1], PointBox[3176]}, 
           {RGBColor[0, 0, 1], PointBox[3177]}, 
           {RGBColor[1, 0, 0], PointBox[3178]}, 
           {RGBColor[0, 0, 1], PointBox[3179]}, 
           {RGBColor[0, 0, 1], PointBox[3180]}, 
           {RGBColor[1, 0, 0], PointBox[3181]}, 
           {RGBColor[1, 0, 0], PointBox[3182]}, 
           {RGBColor[1, 0, 0], PointBox[3183]}, 
           {RGBColor[0, 0, 1], PointBox[3184]}, 
           {RGBColor[1, 0, 0], PointBox[3185]}, 
           {RGBColor[1, 0, 0], PointBox[3186]}, 
           {RGBColor[1, 1, 0], PointBox[3187]}, 
           {RGBColor[1, 1, 0], PointBox[3188]}, 
           {RGBColor[0, 1, 0], PointBox[3189]}, 
           {RGBColor[1, 0, 0], PointBox[3190]}, 
           {RGBColor[1, 0, 0], PointBox[3191]}, 
           {RGBColor[1, 0, 0], PointBox[3192]}, 
           {RGBColor[1, 0, 0], PointBox[3193]}, 
           {RGBColor[0, 1, 0], PointBox[3194]}, 
           {RGBColor[0, 1, 0], PointBox[3195]}, 
           {RGBColor[0, 1, 0], PointBox[3196]}, 
           {RGBColor[0, 0, 1], PointBox[3197]}, 
           {RGBColor[0, 0, 1], PointBox[3198]}, 
           {RGBColor[0, 0, 1], PointBox[3199]}, 
           {RGBColor[0, 0, 1], PointBox[3200]}, 
           {RGBColor[0, 1, 0], PointBox[3201]}, 
           {RGBColor[0, 0, 1], PointBox[3202]}, 
           {RGBColor[0, 0, 1], PointBox[3203]}, 
           {RGBColor[0, 0, 1], PointBox[3204]}, 
           {RGBColor[0, 0, 1], PointBox[3205]}, 
           {RGBColor[0, 1, 0], PointBox[3206]}, 
           {RGBColor[0, 1, 0], PointBox[3207]}, 
           {RGBColor[0, 1, 0], PointBox[3208]}, 
           {RGBColor[0, 0, 1], PointBox[3209]}, 
           {RGBColor[0, 1, 0], PointBox[3210]}, 
           {RGBColor[0, 0, 1], PointBox[3211]}, 
           {RGBColor[0, 1, 0], PointBox[3212]}, 
           {RGBColor[0, 1, 0], PointBox[3213]}, 
           {RGBColor[0, 0, 1], PointBox[3214]}, 
           {RGBColor[0, 1, 0], PointBox[3215]}, 
           {RGBColor[0, 0, 1], PointBox[3216]}, 
           {RGBColor[0, 1, 0], PointBox[3217]}, 
           {RGBColor[0, 1, 0], PointBox[3218]}, 
           {RGBColor[0, 1, 0], PointBox[3219]}, 
           {RGBColor[0, 0, 1], PointBox[3220]}, 
           {RGBColor[0, 0, 1], PointBox[3221]}, 
           {RGBColor[0, 1, 0], PointBox[3222]}, 
           {RGBColor[0, 0, 1], PointBox[3223]}, 
           {RGBColor[0, 0, 1], PointBox[3224]}, 
           {RGBColor[0, 1, 0], PointBox[3225]}, 
           {RGBColor[0, 1, 0], PointBox[3226]}, 
           {RGBColor[0, 1, 0], PointBox[3227]}, 
           {RGBColor[0, 0, 1], PointBox[3228]}, 
           {RGBColor[0, 1, 0], PointBox[3229]}, 
           {RGBColor[0, 1, 0], PointBox[3230]}, 
           {RGBColor[0, 1, 0], PointBox[3231]}, 
           {RGBColor[1, 0, 0], PointBox[3232]}, 
           {RGBColor[0, 1, 0], PointBox[3233]}, 
           {RGBColor[0, 0, 1], PointBox[3234]}, 
           {RGBColor[0, 1, 0], PointBox[3235]}, 
           {RGBColor[1, 0, 0], PointBox[3236]}, 
           {RGBColor[0, 0, 1], PointBox[3237]}, 
           {RGBColor[0, 0, 1], PointBox[3238]}, 
           {RGBColor[1, 0, 0], PointBox[3239]}, 
           {RGBColor[0, 0, 1], PointBox[3240]}, 
           {RGBColor[0, 0, 1], PointBox[3241]}, 
           {RGBColor[0, 0, 1], PointBox[3242]}, 
           {RGBColor[0, 1, 0], PointBox[3243]}, 
           {RGBColor[1, 0, 0], PointBox[3244]}, 
           {RGBColor[0, 0, 1], PointBox[3245]}, 
           {RGBColor[1, 0, 0], PointBox[3246]}, 
           {RGBColor[0, 0, 1], PointBox[3247]}, 
           {RGBColor[0, 1, 0], PointBox[3248]}, 
           {RGBColor[0, 0, 1], PointBox[3249]}, 
           {RGBColor[0, 1, 0], PointBox[3250]}, 
           {RGBColor[1, 0, 0], PointBox[3251]}, 
           {RGBColor[0, 0, 1], PointBox[3252]}, 
           {RGBColor[0, 0, 1], PointBox[3253]}, 
           {RGBColor[0, 0, 1], PointBox[3254]}, 
           {RGBColor[0, 1, 0], PointBox[3255]}, 
           {RGBColor[1, 0, 0], PointBox[3256]}, 
           {RGBColor[0, 0, 1], PointBox[3257]}, 
           {RGBColor[1, 0, 0], PointBox[3258]}, 
           {RGBColor[0, 1, 0], PointBox[3259]}, 
           {RGBColor[0, 1, 0], PointBox[3260]}, 
           {RGBColor[0, 1, 0], PointBox[3261]}, 
           {RGBColor[1, 0, 0], PointBox[3262]}, 
           {RGBColor[0, 0, 1], PointBox[3263]}, 
           {RGBColor[1, 0, 0], PointBox[3264]}, 
           {RGBColor[0, 0, 1], PointBox[3265]}, 
           {RGBColor[0, 1, 0], PointBox[3266]}, 
           {RGBColor[0, 1, 0], PointBox[3267]}, 
           {RGBColor[1, 0, 0], PointBox[3268]}, 
           {RGBColor[0, 1, 0], PointBox[3269]}, 
           {RGBColor[0, 0, 1], PointBox[3270]}, 
           {RGBColor[1, 0, 0], PointBox[3271]}, 
           {RGBColor[0, 1, 0], PointBox[3272]}, 
           {RGBColor[0, 0, 1], PointBox[3273]}, 
           {RGBColor[0, 1, 0], PointBox[3274]}, 
           {RGBColor[0, 1, 0], PointBox[3275]}, 
           {RGBColor[0, 1, 0], PointBox[3276]}, 
           {RGBColor[1, 0, 0], PointBox[3277]}, 
           {RGBColor[0, 0, 1], PointBox[3278]}, 
           {RGBColor[0, 1, 0], PointBox[3279]}, 
           {RGBColor[0, 1, 0], PointBox[3280]}, 
           {RGBColor[1, 0, 0], PointBox[3281]}, 
           {RGBColor[0, 1, 0], PointBox[3282]}, 
           {RGBColor[0, 1, 0], PointBox[3283]}, 
           {RGBColor[1, 0, 0], PointBox[3284]}, 
           {RGBColor[1, 0, 0], PointBox[3285]}, 
           {RGBColor[0, 1, 0], PointBox[3286]}, 
           {RGBColor[0, 0, 1], PointBox[3287]}, 
           {RGBColor[0, 0, 1], PointBox[3288]}, 
           {RGBColor[0, 0, 1], PointBox[3289]}, 
           {RGBColor[0, 0, 1], PointBox[3290]}, 
           {RGBColor[0, 0, 1], PointBox[3291]}, 
           {RGBColor[0, 0, 1], PointBox[3292]}, 
           {RGBColor[0, 1, 0], PointBox[3293]}, 
           {RGBColor[0, 0, 1], PointBox[3294]}, 
           {RGBColor[0, 1, 0], PointBox[3295]}, 
           {RGBColor[0, 0, 1], PointBox[3296]}, 
           {RGBColor[1, 0, 0], PointBox[3297]}, 
           {RGBColor[0, 0, 1], PointBox[3298]}, 
           {RGBColor[0, 0, 1], PointBox[3299]}, 
           {RGBColor[0, 0, 1], PointBox[3300]}, 
           {RGBColor[1, 0, 0], PointBox[3301]}, 
           {RGBColor[0, 1, 0], PointBox[3302]}, 
           {RGBColor[0, 1, 0], PointBox[3303]}, 
           {RGBColor[1, 0, 0], PointBox[3304]}, 
           {RGBColor[0, 1, 0], PointBox[3305]}, 
           {RGBColor[1, 0, 0], PointBox[3306]}, 
           {RGBColor[0, 0, 1], PointBox[3307]}, 
           {RGBColor[1, 0, 0], PointBox[3308]}, 
           {RGBColor[0, 0, 1], PointBox[3309]}, 
           {RGBColor[0, 0, 1], PointBox[3310]}, 
           {RGBColor[0, 0, 1], PointBox[3311]}, 
           {RGBColor[1, 0, 0], PointBox[3312]}, 
           {RGBColor[0, 0, 1], PointBox[3313]}, 
           {RGBColor[0, 0, 1], PointBox[3314]}, 
           {RGBColor[1, 0, 0], PointBox[3315]}, 
           {RGBColor[0, 0, 1], PointBox[3316]}, 
           {RGBColor[1, 0, 0], PointBox[3317]}, 
           {RGBColor[0, 0, 1], PointBox[3318]}, 
           {RGBColor[0, 0, 1], PointBox[3319]}, 
           {RGBColor[1, 0, 0], PointBox[3320]}, 
           {RGBColor[0, 0, 1], PointBox[3321]}, 
           {RGBColor[0, 1, 0], PointBox[3322]}, 
           {RGBColor[1, 0, 0], PointBox[3323]}, 
           {RGBColor[1, 0, 0], PointBox[3324]}, 
           {RGBColor[1, 0, 0], PointBox[3325]}, 
           {RGBColor[0, 0, 1], PointBox[3326]}, 
           {RGBColor[0, 0, 1], PointBox[3327]}, 
           {RGBColor[1, 0, 0], PointBox[3328]}, 
           {RGBColor[1, 0, 0], PointBox[3329]}, 
           {RGBColor[0, 0, 1], PointBox[3330]}, 
           {RGBColor[0, 0, 1], PointBox[3331]}, 
           {RGBColor[1, 0, 0], PointBox[3332]}, 
           {RGBColor[1, 0, 0], PointBox[3333]}, 
           {RGBColor[1, 0, 0], PointBox[3334]}, 
           {RGBColor[0, 0, 1], PointBox[3335]}, 
           {RGBColor[1, 0, 0], PointBox[3336]}, 
           {RGBColor[1, 0, 0], PointBox[3337]}, 
           {RGBColor[0, 0, 1], PointBox[3338]}, 
           {RGBColor[1, 0, 0], PointBox[3339]}, 
           {RGBColor[0, 1, 0], PointBox[3340]}, 
           {RGBColor[1, 0, 0], PointBox[3341]}, 
           {RGBColor[0, 0, 1], PointBox[3342]}, 
           {RGBColor[1, 0, 0], PointBox[3343]}, 
           {RGBColor[0, 0, 1], PointBox[3344]}, 
           {RGBColor[1, 0, 0], PointBox[3345]}, 
           {RGBColor[0, 0, 1], PointBox[3346]}, 
           {RGBColor[1, 0, 0], PointBox[3347]}, 
           {RGBColor[0, 1, 0], PointBox[3348]}, 
           {RGBColor[0, 0, 1], PointBox[3349]}, 
           {RGBColor[0, 1, 0], PointBox[3350]}, 
           {RGBColor[1, 0, 0], PointBox[3351]}, 
           {RGBColor[1, 0, 0], PointBox[3352]}, 
           {RGBColor[1, 0, 0], PointBox[3353]}, 
           {RGBColor[0, 0, 1], PointBox[3354]}, 
           {RGBColor[1, 0, 0], PointBox[3355]}, 
           {RGBColor[1, 0, 0], PointBox[3356]}, 
           {RGBColor[1, 0, 0], PointBox[3357]}, 
           {RGBColor[0, 1, 0], PointBox[3358]}, 
           {RGBColor[0, 0, 1], PointBox[3359]}, 
           {RGBColor[1, 0, 0], PointBox[3360]}, 
           {RGBColor[1, 0, 0], PointBox[3361]}, 
           {RGBColor[0, 1, 0], PointBox[3362]}, 
           {RGBColor[0, 1, 0], PointBox[3363]}, 
           {RGBColor[0, 1, 0], PointBox[3364]}, 
           {RGBColor[0, 0, 1], PointBox[3365]}, 
           {RGBColor[0, 0, 1], PointBox[3366]}, 
           {RGBColor[0, 1, 0], PointBox[3367]}, 
           {RGBColor[0, 1, 0], PointBox[3368]}, 
           {RGBColor[0, 1, 0], PointBox[3369]}, 
           {RGBColor[0, 0, 1], PointBox[3370]}, 
           {RGBColor[0, 1, 0], PointBox[3371]}, 
           {RGBColor[0, 1, 0], PointBox[3372]}, 
           {RGBColor[1, 0, 0], PointBox[3373]}, 
           {RGBColor[0, 0, 1], PointBox[3374]}, 
           {RGBColor[0, 1, 0], PointBox[3375]}, 
           {RGBColor[0, 0, 1], PointBox[3376]}, 
           {RGBColor[0, 0, 1], PointBox[3377]}, 
           {RGBColor[0, 1, 0], PointBox[3378]}, 
           {RGBColor[1, 0, 0], PointBox[3379]}, 
           {RGBColor[0, 1, 0], PointBox[3380]}, 
           {RGBColor[0, 1, 0], PointBox[3381]}, 
           {RGBColor[0, 1, 0], PointBox[3382]}, 
           {RGBColor[0, 1, 0], PointBox[3383]}, 
           {RGBColor[1, 0, 0], PointBox[3384]}, 
           {RGBColor[0, 1, 0], PointBox[3385]}, 
           {RGBColor[1, 0, 0], PointBox[3386]}, 
           {RGBColor[0, 1, 0], PointBox[3387]}, 
           {RGBColor[1, 0, 0], PointBox[3388]}, 
           {RGBColor[0, 0, 1], PointBox[3389]}, 
           {RGBColor[0, 0, 1], PointBox[3390]}, 
           {RGBColor[1, 0, 0], PointBox[3391]}, 
           {RGBColor[0, 1, 0], PointBox[3392]}, 
           {RGBColor[1, 0, 0], PointBox[3393]}, 
           {RGBColor[0, 0, 1], PointBox[3394]}, 
           {RGBColor[0, 1, 0], PointBox[3395]}, 
           {RGBColor[1, 0, 0], PointBox[3396]}, 
           {RGBColor[1, 0, 0], PointBox[3397]}, 
           {RGBColor[1, 0, 0], PointBox[3398]}, 
           {RGBColor[0, 0, 1], PointBox[3399]}, 
           {RGBColor[0, 1, 0], PointBox[3400]}, 
           {RGBColor[1, 0, 0], PointBox[3401]}, 
           {RGBColor[0, 0, 1], PointBox[3402]}, 
           {RGBColor[0, 0, 1], PointBox[3403]}, 
           {RGBColor[1, 0, 0], PointBox[3404]}, 
           {RGBColor[1, 0, 0], PointBox[3405]}, 
           {RGBColor[1, 0, 0], PointBox[3406]}, 
           {RGBColor[0, 1, 0], PointBox[3407]}, 
           {RGBColor[1, 0, 0], PointBox[3408]}, 
           {RGBColor[0, 0, 1], PointBox[3409]}, 
           {RGBColor[1, 0, 0], PointBox[3410]}, 
           {RGBColor[0, 1, 0], PointBox[3411]}, 
           {RGBColor[1, 0, 0], PointBox[3412]}, 
           {RGBColor[0, 1, 0], PointBox[3413]}, 
           {RGBColor[1, 0, 0], PointBox[3414]}, 
           {RGBColor[0, 1, 0], PointBox[3415]}, 
           {RGBColor[0, 1, 0], PointBox[3416]}, 
           {RGBColor[1, 0, 0], PointBox[3417]}, 
           {RGBColor[0, 0, 1], PointBox[3418]}, 
           {RGBColor[1, 0, 0], PointBox[3419]}, 
           {RGBColor[0, 1, 0], PointBox[3420]}, 
           {RGBColor[1, 0, 0], PointBox[3421]}, 
           {RGBColor[0, 1, 0], PointBox[3422]}, 
           {RGBColor[0, 1, 0], PointBox[3423]}, 
           {RGBColor[0, 1, 0], PointBox[3424]}, 
           {RGBColor[1, 0, 0], PointBox[3425]}, 
           {RGBColor[0, 1, 0], PointBox[3426]}, 
           {RGBColor[0, 0, 1], PointBox[3427]}, 
           {RGBColor[0, 1, 0], PointBox[3428]}, 
           {RGBColor[1, 0, 0], PointBox[3429]}, 
           {RGBColor[1, 0, 0], PointBox[3430]}, 
           {RGBColor[1, 0, 0], PointBox[3431]}, 
           {RGBColor[0, 1, 0], PointBox[3432]}, 
           {RGBColor[1, 0, 0], PointBox[3433]}, 
           {RGBColor[0, 1, 0], PointBox[3434]}, 
           {RGBColor[1, 0, 0], PointBox[3435]}, 
           {RGBColor[1, 0, 0], PointBox[3436]}, 
           {RGBColor[0, 1, 0], PointBox[3437]}, 
           {RGBColor[1, 0, 0], PointBox[3438]}, 
           {RGBColor[0, 0, 1], PointBox[3439]}, 
           {RGBColor[1, 0, 0], PointBox[3440]}, 
           {RGBColor[1, 0, 0], PointBox[3441]}, 
           {RGBColor[1, 0, 0], PointBox[3442]}, 
           {RGBColor[0, 1, 0], PointBox[3443]}, 
           {RGBColor[0, 1, 0], PointBox[3444]}, 
           {RGBColor[1, 0, 0], PointBox[3445]}, 
           {RGBColor[0, 1, 0], PointBox[3446]}, 
           {RGBColor[0, 1, 0], PointBox[3447]}, 
           {RGBColor[1, 0, 0], PointBox[3448]}, 
           {RGBColor[1, 0, 0], PointBox[3449]}, 
           {RGBColor[0, 1, 0], PointBox[3450]}, 
           {RGBColor[0, 1, 0], PointBox[3451]}, 
           {RGBColor[1, 0, 0], PointBox[3452]}, 
           {RGBColor[0, 1, 0], PointBox[3453]}, 
           {RGBColor[0, 1, 0], PointBox[3454]}, 
           {RGBColor[1, 0, 0], PointBox[3455]}, 
           {RGBColor[1, 0, 0], PointBox[3456]}, 
           {RGBColor[1, 0, 0], PointBox[3457]}, 
           {RGBColor[1, 0, 0], PointBox[3458]}, 
           {RGBColor[0, 1, 0], PointBox[3459]}, 
           {RGBColor[0, 1, 0], PointBox[3460]}, 
           {RGBColor[0, 1, 0], PointBox[3461]}, 
           {RGBColor[0, 0, 1], PointBox[3462]}, 
           {RGBColor[0, 0, 1], PointBox[3463]}, 
           {RGBColor[0, 1, 0], PointBox[3464]}, 
           {RGBColor[0, 0, 1], PointBox[3465]}, 
           {RGBColor[0, 0, 1], PointBox[3466]}, 
           {RGBColor[0, 1, 0], PointBox[3467]}, 
           {RGBColor[0, 1, 0], PointBox[3468]}, 
           {RGBColor[0, 0, 1], PointBox[3469]}, 
           {RGBColor[0, 0, 1], PointBox[3470]}, 
           {RGBColor[0, 1, 0], PointBox[3471]}, 
           {RGBColor[0, 0, 1], PointBox[3472]}, 
           {RGBColor[0, 0, 1], PointBox[3473]}, 
           {RGBColor[0, 1, 0], PointBox[3474]}, 
           {RGBColor[0, 1, 0], PointBox[3475]}, 
           {RGBColor[0, 1, 0], PointBox[3476]}, 
           {RGBColor[0, 0, 1], PointBox[3477]}, 
           {RGBColor[0, 1, 0], PointBox[3478]}, 
           {RGBColor[0, 0, 1], PointBox[3479]}, 
           {RGBColor[0, 1, 0], PointBox[3480]}, 
           {RGBColor[0, 1, 0], PointBox[3481]}, 
           {RGBColor[0, 0, 1], PointBox[3482]}, 
           {RGBColor[0, 1, 0], PointBox[3483]}, 
           {RGBColor[0, 0, 1], PointBox[3484]}, 
           {RGBColor[1, 0, 0], PointBox[3485]}, 
           {RGBColor[0, 1, 0], PointBox[3486]}, 
           {RGBColor[0, 1, 0], PointBox[3487]}, 
           {RGBColor[0, 1, 0], PointBox[3488]}, 
           {RGBColor[0, 0, 1], PointBox[3489]}, 
           {RGBColor[0, 0, 1], PointBox[3490]}, 
           {RGBColor[0, 1, 0], PointBox[3491]}, 
           {RGBColor[0, 1, 0], PointBox[3492]}, 
           {RGBColor[0, 0, 1], PointBox[3493]}, 
           {RGBColor[0, 0, 1], PointBox[3494]}, 
           {RGBColor[0, 1, 0], PointBox[3495]}, 
           {RGBColor[0, 1, 0], PointBox[3496]}, 
           {RGBColor[0, 1, 0], PointBox[3497]}, 
           {RGBColor[0, 0, 1], PointBox[3498]}, 
           {RGBColor[0, 1, 0], PointBox[3499]}, 
           {RGBColor[0, 1, 0], PointBox[3500]}, 
           {RGBColor[0, 1, 0], PointBox[3501]}, 
           {RGBColor[1, 0, 0], PointBox[3502]}, 
           {RGBColor[1, 0, 0], PointBox[3503]}, 
           {RGBColor[0, 0, 1], PointBox[3504]}, 
           {RGBColor[0, 1, 0], PointBox[3505]}, 
           {RGBColor[0, 0, 1], PointBox[3506]}, 
           {RGBColor[0, 0, 1], PointBox[3507]}, 
           {RGBColor[0, 0, 1], PointBox[3508]}, 
           {RGBColor[0, 0, 1], PointBox[3509]}, 
           {RGBColor[0, 0, 1], PointBox[3510]}, 
           {RGBColor[0, 1, 0], PointBox[3511]}, 
           {RGBColor[1, 0, 0], PointBox[3512]}, 
           {RGBColor[0, 0, 1], PointBox[3513]}, 
           {RGBColor[1, 0, 0], PointBox[3514]}, 
           {RGBColor[0, 0, 1], PointBox[3515]}, 
           {RGBColor[1, 0, 0], PointBox[3516]}, 
           {RGBColor[0, 0, 1], PointBox[3517]}, 
           {RGBColor[0, 1, 0], PointBox[3518]}, 
           {RGBColor[0, 0, 1], PointBox[3519]}, 
           {RGBColor[0, 0, 1], PointBox[3520]}, 
           {RGBColor[0, 0, 1], PointBox[3521]}, 
           {RGBColor[0, 1, 0], PointBox[3522]}, 
           {RGBColor[1, 0, 0], PointBox[3523]}, 
           {RGBColor[0, 0, 1], PointBox[3524]}, 
           {RGBColor[1, 0, 0], PointBox[3525]}, 
           {RGBColor[1, 0, 0], PointBox[3526]}, 
           {RGBColor[0, 1, 0], PointBox[3527]}, 
           {RGBColor[0, 1, 0], PointBox[3528]}, 
           {RGBColor[0, 1, 0], PointBox[3529]}, 
           {RGBColor[0, 0, 1], PointBox[3530]}, 
           {RGBColor[0, 1, 0], PointBox[3531]}, 
           {RGBColor[0, 0, 1], PointBox[3532]}, 
           {RGBColor[0, 1, 0], PointBox[3533]}, 
           {RGBColor[0, 1, 0], PointBox[3534]}, 
           {RGBColor[1, 0, 0], PointBox[3535]}, 
           {RGBColor[0, 1, 0], PointBox[3536]}, 
           {RGBColor[0, 0, 1], PointBox[3537]}, 
           {RGBColor[1, 0, 0], PointBox[3538]}, 
           {RGBColor[0, 1, 0], PointBox[3539]}, 
           {RGBColor[0, 0, 1], PointBox[3540]}, 
           {RGBColor[1, 0, 0], PointBox[3541]}, 
           {RGBColor[0, 1, 0], PointBox[3542]}, 
           {RGBColor[0, 1, 0], PointBox[3543]}, 
           {RGBColor[0, 1, 0], PointBox[3544]}, 
           {RGBColor[0, 0, 1], PointBox[3545]}, 
           {RGBColor[0, 1, 0], PointBox[3546]}, 
           {RGBColor[0, 1, 0], PointBox[3547]}, 
           {RGBColor[1, 0, 0], PointBox[3548]}, 
           {RGBColor[0, 1, 0], PointBox[3549]}, 
           {RGBColor[0, 1, 0], PointBox[3550]}, 
           {RGBColor[1, 0, 0], PointBox[3551]}, 
           {RGBColor[1, 0, 0], PointBox[3552]}, 
           {RGBColor[1, 0, 0], PointBox[3553]}, 
           {RGBColor[0, 0, 1], PointBox[3554]}, 
           {RGBColor[0, 0, 1], PointBox[3555]}, 
           {RGBColor[0, 1, 0], PointBox[3556]}, 
           {RGBColor[0, 0, 1], PointBox[3557]}, 
           {RGBColor[0, 0, 1], PointBox[3558]}, 
           {RGBColor[0, 0, 1], PointBox[3559]}, 
           {RGBColor[0, 0, 1], PointBox[3560]}, 
           {RGBColor[0, 1, 0], PointBox[3561]}, 
           {RGBColor[0, 0, 1], PointBox[3562]}, 
           {RGBColor[1, 0, 0], PointBox[3563]}, 
           {RGBColor[0, 0, 1], PointBox[3564]}, 
           {RGBColor[1, 0, 0], PointBox[3565]}, 
           {RGBColor[0, 1, 0], PointBox[3566]}, 
           {RGBColor[0, 0, 1], PointBox[3567]}, 
           {RGBColor[0, 0, 1], PointBox[3568]}, 
           {RGBColor[0, 0, 1], PointBox[3569]}, 
           {RGBColor[1, 0, 0], PointBox[3570]}, 
           {RGBColor[0, 1, 0], PointBox[3571]}, 
           {RGBColor[0, 1, 0], PointBox[3572]}, 
           {RGBColor[1, 0, 0], PointBox[3573]}, 
           {RGBColor[1, 0, 0], PointBox[3574]}, 
           {RGBColor[1, 0, 0], PointBox[3575]}, 
           {RGBColor[0, 0, 1], PointBox[3576]}, 
           {RGBColor[0, 0, 1], PointBox[3577]}, 
           {RGBColor[0, 0, 1], PointBox[3578]}, 
           {RGBColor[0, 0, 1], PointBox[3579]}, 
           {RGBColor[0, 0, 1], PointBox[3580]}, 
           {RGBColor[0, 0, 1], PointBox[3581]}, 
           {RGBColor[1, 0, 0], PointBox[3582]}, 
           {RGBColor[0, 0, 1], PointBox[3583]}, 
           {RGBColor[1, 0, 0], PointBox[3584]}, 
           {RGBColor[0, 0, 1], PointBox[3585]}, 
           {RGBColor[0, 0, 1], PointBox[3586]}, 
           {RGBColor[1, 0, 0], PointBox[3587]}, 
           {RGBColor[0, 0, 1], PointBox[3588]}, 
           {RGBColor[1, 0, 0], PointBox[3589]}, 
           {RGBColor[1, 0, 0], PointBox[3590]}, 
           {RGBColor[1, 0, 0], PointBox[3591]}, 
           {RGBColor[0, 0, 1], PointBox[3592]}, 
           {RGBColor[0, 0, 1], PointBox[3593]}, 
           {RGBColor[1, 0, 0], PointBox[3594]}, 
           {RGBColor[0, 0, 1], PointBox[3595]}, 
           {RGBColor[0, 0, 1], PointBox[3596]}, 
           {RGBColor[1, 0, 0], PointBox[3597]}, 
           {RGBColor[1, 0, 0], PointBox[3598]}, 
           {RGBColor[1, 0, 0], PointBox[3599]}, 
           {RGBColor[0, 0, 1], PointBox[3600]}, 
           {RGBColor[1, 0, 0], PointBox[3601]}, 
           {RGBColor[1, 0, 0], PointBox[3602]}, 
           {RGBColor[0, 0, 1], PointBox[3603]}, 
           {RGBColor[1, 0, 0], PointBox[3604]}, 
           {RGBColor[1, 0, 0], PointBox[3605]}, 
           {RGBColor[1, 0, 0], PointBox[3606]}, 
           {RGBColor[0, 0, 1], PointBox[3607]}, 
           {RGBColor[0, 1, 0], PointBox[3608]}, 
           {RGBColor[0, 0, 1], PointBox[3609]}, 
           {RGBColor[1, 0, 0], PointBox[3610]}, 
           {RGBColor[0, 0, 1], PointBox[3611]}, 
           {RGBColor[1, 0, 0], PointBox[3612]}, 
           {RGBColor[0, 1, 0], PointBox[3613]}, 
           {RGBColor[0, 0, 1], PointBox[3614]}, 
           {RGBColor[1, 0, 0], PointBox[3615]}, 
           {RGBColor[1, 0, 0], PointBox[3616]}, 
           {RGBColor[1, 0, 0], PointBox[3617]}, 
           {RGBColor[0, 1, 0], PointBox[3618]}, 
           {RGBColor[0, 0, 1], PointBox[3619]}, 
           {RGBColor[1, 0, 0], PointBox[3620]}, 
           {RGBColor[1, 0, 0], PointBox[3621]}, 
           {RGBColor[1, 0, 0], PointBox[3622]}, 
           {RGBColor[0, 1, 0], PointBox[3623]}, 
           {RGBColor[0, 0, 1], PointBox[3624]}, 
           {RGBColor[1, 0, 0], PointBox[3625]}, 
           {RGBColor[1, 0, 0], PointBox[3626]}, 
           {RGBColor[1, 0, 0], PointBox[3627]}, 
           {RGBColor[0, 1, 0], PointBox[3628]}, 
           {RGBColor[0, 1, 0], PointBox[3629]}, 
           {RGBColor[0, 1, 0], PointBox[3630]}, 
           {RGBColor[0, 0, 1], PointBox[3631]}, 
           {RGBColor[0, 0, 1], PointBox[3632]}, 
           {RGBColor[0, 1, 0], PointBox[3633]}, 
           {RGBColor[0, 1, 0], PointBox[3634]}, 
           {RGBColor[0, 1, 0], PointBox[3635]}, 
           {RGBColor[0, 0, 1], PointBox[3636]}, 
           {RGBColor[1, 0, 0], PointBox[3637]}, 
           {RGBColor[0, 1, 0], PointBox[3638]}, 
           {RGBColor[1, 0, 0], PointBox[3639]}, 
           {RGBColor[0, 1, 0], PointBox[3640]}, 
           {RGBColor[0, 0, 1], PointBox[3641]}, 
           {RGBColor[0, 1, 0], PointBox[3642]}, 
           {RGBColor[0, 1, 0], PointBox[3643]}, 
           {RGBColor[0, 0, 1], PointBox[3644]}, 
           {RGBColor[0, 0, 1], PointBox[3645]}, 
           {RGBColor[0, 1, 0], PointBox[3646]}, 
           {RGBColor[1, 0, 0], PointBox[3647]}, 
           {RGBColor[0, 1, 0], PointBox[3648]}, 
           {RGBColor[0, 1, 0], PointBox[3649]}, 
           {RGBColor[0, 1, 0], PointBox[3650]}, 
           {RGBColor[0, 1, 0], PointBox[3651]}, 
           {RGBColor[1, 0, 0], PointBox[3652]}, 
           {RGBColor[1, 0, 0], PointBox[3653]}, 
           {RGBColor[1, 0, 0], PointBox[3654]}, 
           {RGBColor[0, 1, 0], PointBox[3655]}, 
           {RGBColor[0, 0, 1], PointBox[3656]}, 
           {RGBColor[0, 0, 1], PointBox[3657]}, 
           {RGBColor[1, 0, 0], PointBox[3658]}, 
           {RGBColor[0, 1, 0], PointBox[3659]}, 
           {RGBColor[1, 0, 0], PointBox[3660]}, 
           {RGBColor[0, 0, 1], PointBox[3661]}, 
           {RGBColor[1, 0, 0], PointBox[3662]}, 
           {RGBColor[1, 0, 0], PointBox[3663]}, 
           {RGBColor[1, 0, 0], PointBox[3664]}, 
           {RGBColor[0, 0, 1], PointBox[3665]}, 
           {RGBColor[0, 1, 0], PointBox[3666]}, 
           {RGBColor[0, 0, 1], PointBox[3667]}, 
           {RGBColor[0, 0, 1], PointBox[3668]}, 
           {RGBColor[1, 0, 0], PointBox[3669]}, 
           {RGBColor[1, 0, 0], PointBox[3670]}, 
           {RGBColor[1, 0, 0], PointBox[3671]}, 
           {RGBColor[0, 1, 0], PointBox[3672]}, 
           {RGBColor[1, 0, 0], PointBox[3673]}, 
           {RGBColor[0, 0, 1], PointBox[3674]}, 
           {RGBColor[1, 0, 0], PointBox[3675]}, 
           {RGBColor[1, 0, 0], PointBox[3676]}, 
           {RGBColor[1, 0, 0], PointBox[3677]}, 
           {RGBColor[0, 1, 0], PointBox[3678]}, 
           {RGBColor[0, 1, 0], PointBox[3679]}, 
           {RGBColor[0, 1, 0], PointBox[3680]}, 
           {RGBColor[0, 1, 0], PointBox[3681]}, 
           {RGBColor[0, 1, 0], PointBox[3682]}, 
           {RGBColor[0, 0, 1], PointBox[3683]}, 
           {RGBColor[1, 0, 0], PointBox[3684]}, 
           {RGBColor[0, 1, 0], PointBox[3685]}, 
           {RGBColor[1, 0, 0], PointBox[3686]}, 
           {RGBColor[0, 1, 0], PointBox[3687]}, 
           {RGBColor[0, 1, 0], PointBox[3688]}, 
           {RGBColor[0, 1, 0], PointBox[3689]}, 
           {RGBColor[1, 0, 0], PointBox[3690]}, 
           {RGBColor[0, 1, 0], PointBox[3691]}, 
           {RGBColor[0, 0, 1], PointBox[3692]}, 
           {RGBColor[1, 0, 0], PointBox[3693]}, 
           {RGBColor[1, 0, 0], PointBox[3694]}, 
           {RGBColor[1, 0, 0], PointBox[3695]}, 
           {RGBColor[0, 1, 0], PointBox[3696]}, 
           {RGBColor[0, 1, 0], PointBox[3697]}, 
           {RGBColor[0, 1, 0], PointBox[3698]}, 
           {RGBColor[0, 1, 0], PointBox[3699]}, 
           {RGBColor[1, 0, 0], PointBox[3700]}, 
           {RGBColor[0, 1, 0], PointBox[3701]}, 
           {RGBColor[0, 1, 0], PointBox[3702]}, 
           {RGBColor[0, 1, 0], PointBox[3703]}, 
           {RGBColor[0, 0, 1], PointBox[3704]}, 
           {RGBColor[1, 0, 0], PointBox[3705]}, 
           {RGBColor[1, 0, 0], PointBox[3706]}, 
           {RGBColor[1, 0, 0], PointBox[3707]}, 
           {RGBColor[0, 1, 0], PointBox[3708]}, 
           {RGBColor[0, 1, 0], PointBox[3709]}, 
           {RGBColor[1, 0, 0], PointBox[3710]}, 
           {RGBColor[0, 1, 0], PointBox[3711]}, 
           {RGBColor[0, 1, 0], PointBox[3712]}, 
           {RGBColor[1, 0, 0], PointBox[3713]}, 
           {RGBColor[1, 0, 0], PointBox[3714]}, 
           {RGBColor[0, 1, 0], PointBox[3715]}, 
           {RGBColor[0, 1, 0], PointBox[3716]}, 
           {RGBColor[1, 0, 0], PointBox[3717]}, 
           {RGBColor[0, 1, 0], PointBox[3718]}, 
           {RGBColor[0, 0, 1], PointBox[3719]}, 
           {RGBColor[1, 0, 0], PointBox[3720]}, 
           {RGBColor[1, 0, 0], PointBox[3721]}, 
           {RGBColor[1, 0, 0], PointBox[3722]}, 
           {RGBColor[1, 0, 0], PointBox[3723]}, 
           {RGBColor[0, 1, 0], PointBox[3724]}, 
           {RGBColor[0, 1, 0], PointBox[3725]}, 
           {RGBColor[0, 1, 0], PointBox[3726]}, 
           {RGBColor[0, 0, 1], PointBox[3727]}, 
           {RGBColor[0, 0, 1], PointBox[3728]}, 
           {RGBColor[0, 0, 1], PointBox[3729]}, 
           {RGBColor[0, 0, 1], PointBox[3730]}, 
           {RGBColor[0, 1, 0], PointBox[3731]}, 
           {RGBColor[0, 0, 1], PointBox[3732]}, 
           {RGBColor[0, 0, 1], PointBox[3733]}, 
           {RGBColor[0, 0, 1], PointBox[3734]}, 
           {RGBColor[0, 0, 1], PointBox[3735]}, 
           {RGBColor[0, 1, 0], PointBox[3736]}, 
           {RGBColor[0, 1, 0], PointBox[3737]}, 
           {RGBColor[0, 1, 0], PointBox[3738]}, 
           {RGBColor[0, 0, 1], PointBox[3739]}, 
           {RGBColor[0, 1, 0], PointBox[3740]}, 
           {RGBColor[0, 0, 1], PointBox[3741]}, 
           {RGBColor[0, 1, 0], PointBox[3742]}, 
           {RGBColor[0, 1, 0], PointBox[3743]}, 
           {RGBColor[0, 0, 1], PointBox[3744]}, 
           {RGBColor[0, 1, 0], PointBox[3745]}, 
           {RGBColor[0, 1, 0], PointBox[3746]}, 
           {RGBColor[0, 1, 0], PointBox[3747]}, 
           {RGBColor[0, 1, 0], PointBox[3748]}, 
           {RGBColor[0, 0, 1], PointBox[3749]}, 
           {RGBColor[0, 0, 1], PointBox[3750]}, 
           {RGBColor[0, 0, 1], PointBox[3751]}, 
           {RGBColor[0, 0, 1], PointBox[3752]}, 
           {RGBColor[0, 0, 1], PointBox[3753]}, 
           {RGBColor[0, 0, 1], PointBox[3754]}, 
           {RGBColor[0, 1, 0], PointBox[3755]}, 
           {RGBColor[0, 0, 1], PointBox[3756]}, 
           {RGBColor[0, 1, 0], PointBox[3757]}, 
           {RGBColor[0, 0, 1], PointBox[3758]}, 
           {RGBColor[0, 0, 1], PointBox[3759]}, 
           {RGBColor[0, 1, 0], PointBox[3760]}, 
           {RGBColor[0, 1, 0], PointBox[3761]}, 
           {RGBColor[1, 0, 0], PointBox[3762]}, 
           {RGBColor[0, 1, 0], PointBox[3763]}, 
           {RGBColor[0, 0, 1], PointBox[3764]}, 
           {RGBColor[0, 1, 0], PointBox[3765]}, 
           {RGBColor[1, 0, 0], PointBox[3766]}, 
           {RGBColor[0, 0, 1], PointBox[3767]}, 
           {RGBColor[0, 0, 1], PointBox[3768]}, 
           {RGBColor[1, 0, 0], PointBox[3769]}, 
           {RGBColor[0, 0, 1], PointBox[3770]}, 
           {RGBColor[0, 0, 1], PointBox[3771]}, 
           {RGBColor[0, 0, 1], PointBox[3772]}, 
           {RGBColor[0, 1, 0], PointBox[3773]}, 
           {RGBColor[1, 0, 0], PointBox[3774]}, 
           {RGBColor[0, 0, 1], PointBox[3775]}, 
           {RGBColor[1, 0, 0], PointBox[3776]}, 
           {RGBColor[0, 1, 0], PointBox[3777]}, 
           {RGBColor[0, 1, 0], PointBox[3778]}, 
           {RGBColor[0, 0, 1], PointBox[3779]}, 
           {RGBColor[0, 0, 1], PointBox[3780]}, 
           {RGBColor[1, 0, 0], PointBox[3781]}, 
           {RGBColor[0, 0, 1], PointBox[3782]}, 
           {RGBColor[0, 0, 1], PointBox[3783]}, 
           {RGBColor[0, 0, 1], PointBox[3784]}, 
           {RGBColor[0, 0, 1], PointBox[3785]}, 
           {RGBColor[1, 0, 0], PointBox[3786]}, 
           {RGBColor[0, 0, 1], PointBox[3787]}, 
           {RGBColor[1, 0, 0], PointBox[3788]}, 
           {RGBColor[0, 1, 0], PointBox[3789]}, 
           {RGBColor[0, 1, 0], PointBox[3790]}, 
           {RGBColor[0, 1, 0], PointBox[3791]}, 
           {RGBColor[1, 0, 0], PointBox[3792]}, 
           {RGBColor[0, 0, 1], PointBox[3793]}, 
           {RGBColor[1, 0, 0], PointBox[3794]}, 
           {RGBColor[0, 0, 1], PointBox[3795]}, 
           {RGBColor[0, 1, 0], PointBox[3796]}, 
           {RGBColor[0, 1, 0], PointBox[3797]}, 
           {RGBColor[1, 0, 0], PointBox[3798]}, 
           {RGBColor[0, 1, 0], PointBox[3799]}, 
           {RGBColor[0, 0, 1], PointBox[3800]}, 
           {RGBColor[1, 0, 0], PointBox[3801]}, 
           {RGBColor[0, 1, 0], PointBox[3802]}, 
           {RGBColor[0, 1, 0], PointBox[3803]}, 
           {RGBColor[0, 1, 0], PointBox[3804]}, 
           {RGBColor[0, 1, 0], PointBox[3805]}, 
           {RGBColor[0, 0, 1], PointBox[3806]}, 
           {RGBColor[1, 0, 0], PointBox[3807]}, 
           {RGBColor[0, 0, 1], PointBox[3808]}, 
           {RGBColor[0, 1, 0], PointBox[3809]}, 
           {RGBColor[0, 0, 1], PointBox[3810]}, 
           {RGBColor[1, 0, 0], PointBox[3811]}, 
           {RGBColor[0, 1, 0], PointBox[3812]}, 
           {RGBColor[0, 1, 0], PointBox[3813]}, 
           {RGBColor[1, 0, 0], PointBox[3814]}, 
           {RGBColor[1, 0, 0], PointBox[3815]}, 
           {RGBColor[0, 1, 0], PointBox[3816]}, 
           {RGBColor[0, 0, 1], PointBox[3817]}, 
           {RGBColor[0, 0, 1], PointBox[3818]}, 
           {RGBColor[0, 0, 1], PointBox[3819]}, 
           {RGBColor[0, 0, 1], PointBox[3820]}, 
           {RGBColor[0, 0, 1], PointBox[3821]}, 
           {RGBColor[0, 0, 1], PointBox[3822]}, 
           {RGBColor[0, 1, 0], PointBox[3823]}, 
           {RGBColor[0, 1, 0], PointBox[3824]}, 
           {RGBColor[0, 1, 0], PointBox[3825]}, 
           {RGBColor[0, 0, 1], PointBox[3826]}, 
           {RGBColor[1, 0, 0], PointBox[3827]}, 
           {RGBColor[0, 0, 1], PointBox[3828]}, 
           {RGBColor[0, 0, 1], PointBox[3829]}, 
           {RGBColor[0, 0, 1], PointBox[3830]}, 
           {RGBColor[0, 0, 1], PointBox[3831]}, 
           {RGBColor[0, 0, 1], PointBox[3832]}, 
           {RGBColor[1, 0, 0], PointBox[3833]}, 
           {RGBColor[0, 1, 0], PointBox[3834]}, 
           {RGBColor[0, 0, 1], PointBox[3835]}, 
           {RGBColor[0, 1, 0], PointBox[3836]}, 
           {RGBColor[0, 1, 0], PointBox[3837]}, 
           {RGBColor[1, 0, 0], PointBox[3838]}, 
           {RGBColor[0, 1, 0], PointBox[3839]}, 
           {RGBColor[1, 0, 0], PointBox[3840]}, 
           {RGBColor[0, 0, 1], PointBox[3841]}, 
           {RGBColor[1, 0, 0], PointBox[3842]}, 
           {RGBColor[0, 0, 1], PointBox[3843]}, 
           {RGBColor[0, 0, 1], PointBox[3844]}, 
           {RGBColor[0, 0, 1], PointBox[3845]}, 
           {RGBColor[1, 0, 0], PointBox[3846]}, 
           {RGBColor[0, 0, 1], PointBox[3847]}, 
           {RGBColor[0, 0, 1], PointBox[3848]}, 
           {RGBColor[1, 0, 0], PointBox[3849]}, 
           {RGBColor[0, 0, 1], PointBox[3850]}, 
           {RGBColor[1, 0, 0], PointBox[3851]}, 
           {RGBColor[0, 0, 1], PointBox[3852]}, 
           {RGBColor[0, 0, 1], PointBox[3853]}, 
           {RGBColor[1, 0, 0], PointBox[3854]}, 
           {RGBColor[0, 1, 0], PointBox[3855]}, 
           {RGBColor[0, 1, 0], PointBox[3856]}, 
           {RGBColor[1, 0, 0], PointBox[3857]}, 
           {RGBColor[1, 0, 0], PointBox[3858]}, 
           {RGBColor[1, 0, 0], PointBox[3859]}, 
           {RGBColor[0, 0, 1], PointBox[3860]}, 
           {RGBColor[0, 0, 1], PointBox[3861]}, 
           {RGBColor[1, 0, 0], PointBox[3862]}, 
           {RGBColor[0, 0, 1], PointBox[3863]}, 
           {RGBColor[0, 0, 1], PointBox[3864]}, 
           {RGBColor[1, 0, 0], PointBox[3865]}, 
           {RGBColor[1, 0, 0], PointBox[3866]}, 
           {RGBColor[0, 0, 1], PointBox[3867]}, 
           {RGBColor[0, 0, 1], PointBox[3868]}, 
           {RGBColor[1, 0, 0], PointBox[3869]}, 
           {RGBColor[0, 0, 1], PointBox[3870]}, 
           {RGBColor[0, 0, 1], PointBox[3871]}, 
           {RGBColor[1, 0, 0], PointBox[3872]}, 
           {RGBColor[1, 0, 0], PointBox[3873]}, 
           {RGBColor[1, 0, 0], PointBox[3874]}, 
           {RGBColor[0, 0, 1], PointBox[3875]}, 
           {RGBColor[1, 0, 0], PointBox[3876]}, 
           {RGBColor[0, 0, 1], PointBox[3877]}, 
           {RGBColor[1, 0, 0], PointBox[3878]}, 
           {RGBColor[1, 0, 0], PointBox[3879]}, 
           {RGBColor[0, 0, 1], PointBox[3880]}, 
           {RGBColor[1, 0, 0], PointBox[3881]}, 
           {RGBColor[0, 0, 1], PointBox[3882]}, 
           {RGBColor[1, 0, 0], PointBox[3883]}, 
           {RGBColor[0, 1, 0], PointBox[3884]}, 
           {RGBColor[1, 0, 0], PointBox[3885]}, 
           {RGBColor[0, 0, 1], PointBox[3886]}, 
           {RGBColor[1, 0, 0], PointBox[3887]}, 
           {RGBColor[0, 0, 1], PointBox[3888]}, 
           {RGBColor[1, 0, 0], PointBox[3889]}, 
           {RGBColor[0, 0, 1], PointBox[3890]}, 
           {RGBColor[1, 0, 0], PointBox[3891]}, 
           {RGBColor[0, 1, 0], PointBox[3892]}, 
           {RGBColor[0, 1, 0], PointBox[3893]}, 
           {RGBColor[0, 1, 0], PointBox[3894]}, 
           {RGBColor[1, 0, 0], PointBox[3895]}, 
           {RGBColor[1, 0, 0], PointBox[3896]}, 
           {RGBColor[1, 0, 0], PointBox[3897]}, 
           {RGBColor[0, 0, 1], PointBox[3898]}, 
           {RGBColor[1, 0, 0], PointBox[3899]}, 
           {RGBColor[0, 0, 1], PointBox[3900]}, 
           {RGBColor[1, 0, 0], PointBox[3901]}, 
           {RGBColor[1, 0, 0], PointBox[3902]}, 
           {RGBColor[1, 0, 0], PointBox[3903]}, 
           {RGBColor[0, 1, 0], PointBox[3904]}, 
           {RGBColor[0, 0, 1], PointBox[3905]}, 
           {RGBColor[1, 0, 0], PointBox[3906]}, 
           {RGBColor[0, 1, 0], PointBox[3907]}, 
           {RGBColor[0, 0, 1], PointBox[3908]}, 
           {RGBColor[1, 0, 0], PointBox[3909]}, 
           {RGBColor[1, 0, 0], PointBox[3910]}, 
           {RGBColor[0, 1, 0], PointBox[3911]}, 
           {RGBColor[0, 1, 0], PointBox[3912]}, 
           {RGBColor[0, 1, 0], PointBox[3913]}, 
           {RGBColor[0, 0, 1], PointBox[3914]}, 
           {RGBColor[0, 0, 1], PointBox[3915]}, 
           {RGBColor[0, 1, 0], PointBox[3916]}, 
           {RGBColor[0, 1, 0], PointBox[3917]}, 
           {RGBColor[0, 1, 0], PointBox[3918]}, 
           {RGBColor[0, 1, 0], PointBox[3919]}, 
           {RGBColor[0, 1, 0], PointBox[3920]}, 
           {RGBColor[0, 1, 0], PointBox[3921]}, 
           {RGBColor[1, 0, 0], PointBox[3922]}, 
           {RGBColor[0, 0, 1], PointBox[3923]}, 
           {RGBColor[0, 0, 1], PointBox[3924]}, 
           {RGBColor[0, 1, 0], PointBox[3925]}, 
           {RGBColor[1, 0, 0], PointBox[3926]}, 
           {RGBColor[0, 1, 0], PointBox[3927]}, 
           {RGBColor[0, 1, 0], PointBox[3928]}, 
           {RGBColor[1, 0, 0], PointBox[3929]}, 
           {RGBColor[0, 1, 0], PointBox[3930]}, 
           {RGBColor[1, 0, 0], PointBox[3931]}, 
           {RGBColor[0, 1, 0], PointBox[3932]}, 
           {RGBColor[1, 0, 0], PointBox[3933]}, 
           {RGBColor[0, 0, 1], PointBox[3934]}, 
           {RGBColor[0, 0, 1], PointBox[3935]}, 
           {RGBColor[1, 0, 0], PointBox[3936]}, 
           {RGBColor[0, 1, 0], PointBox[3937]}, 
           {RGBColor[1, 0, 0], PointBox[3938]}, 
           {RGBColor[0, 1, 0], PointBox[3939]}, 
           {RGBColor[0, 1, 0], PointBox[3940]}, 
           {RGBColor[1, 0, 0], PointBox[3941]}, 
           {RGBColor[1, 0, 0], PointBox[3942]}, 
           {RGBColor[1, 0, 0], PointBox[3943]}, 
           {RGBColor[0, 0, 1], PointBox[3944]}, 
           {RGBColor[0, 0, 1], PointBox[3945]}, 
           {RGBColor[1, 0, 0], PointBox[3946]}, 
           {RGBColor[1, 0, 0], PointBox[3947]}, 
           {RGBColor[1, 0, 0], PointBox[3948]}, 
           {RGBColor[0, 0, 1], PointBox[3949]}, 
           {RGBColor[1, 0, 0], PointBox[3950]}, 
           {RGBColor[0, 1, 0], PointBox[3951]}, 
           {RGBColor[1, 0, 0], PointBox[3952]}, 
           {RGBColor[0, 1, 0], PointBox[3953]}, 
           {RGBColor[1, 0, 0], PointBox[3954]}, 
           {RGBColor[0, 1, 0], PointBox[3955]}, 
           {RGBColor[0, 1, 0], PointBox[3956]}, 
           {RGBColor[1, 0, 0], PointBox[3957]}, 
           {RGBColor[0, 0, 1], PointBox[3958]}, 
           {RGBColor[1, 0, 0], PointBox[3959]}, 
           {RGBColor[0, 1, 0], PointBox[3960]}, 
           {RGBColor[1, 0, 0], PointBox[3961]}, 
           {RGBColor[0, 1, 0], PointBox[3962]}, 
           {RGBColor[0, 1, 0], PointBox[3963]}, 
           {RGBColor[0, 1, 0], PointBox[3964]}, 
           {RGBColor[1, 0, 0], PointBox[3965]}, 
           {RGBColor[0, 1, 0], PointBox[3966]}, 
           {RGBColor[0, 1, 0], PointBox[3967]}, 
           {RGBColor[0, 1, 0], PointBox[3968]}, 
           {RGBColor[1, 0, 0], PointBox[3969]}, 
           {RGBColor[1, 0, 0], PointBox[3970]}, 
           {RGBColor[1, 0, 0], PointBox[3971]}, 
           {RGBColor[0, 1, 0], PointBox[3972]}, 
           {RGBColor[1, 0, 0], PointBox[3973]}, 
           {RGBColor[1, 0, 0], PointBox[3974]}, 
           {RGBColor[0, 0, 1], PointBox[3975]}, 
           {RGBColor[1, 0, 0], PointBox[3976]}, 
           {RGBColor[1, 0, 0], PointBox[3977]}, 
           {RGBColor[1, 0, 0], PointBox[3978]}, 
           {RGBColor[0, 1, 0], PointBox[3979]}, 
           {RGBColor[0, 1, 0], PointBox[3980]}, 
           {RGBColor[1, 0, 0], PointBox[3981]}, 
           {RGBColor[1, 0, 0], PointBox[3982]}, 
           {RGBColor[0, 1, 0], PointBox[3983]}, 
           {RGBColor[0, 1, 0], PointBox[3984]}, 
           {RGBColor[1, 0, 0], PointBox[3985]}, 
           {RGBColor[1, 0, 0], PointBox[3986]}, 
           {RGBColor[1, 0, 0], PointBox[3987]}, 
           {RGBColor[1, 0, 0], PointBox[3988]}, 
           {RGBColor[0, 1, 0], PointBox[3989]}, 
           {RGBColor[0, 1, 0], PointBox[3990]}, 
           {RGBColor[0, 1, 0], PointBox[3991]}, 
           {RGBColor[0, 0, 1], PointBox[3992]}, 
           {RGBColor[0, 0, 1], PointBox[3993]}, 
           {RGBColor[0, 1, 0], PointBox[3994]}, 
           {RGBColor[0, 0, 1], PointBox[3995]}, 
           {RGBColor[0, 0, 1], PointBox[3996]}, 
           {RGBColor[0, 1, 0], PointBox[3997]}, 
           {RGBColor[0, 1, 0], PointBox[3998]}, 
           {RGBColor[0, 0, 1], PointBox[3999]}, 
           {RGBColor[0, 0, 1], PointBox[4000]}, 
           {RGBColor[0, 1, 0], PointBox[4001]}, 
           {RGBColor[0, 0, 1], PointBox[4002]}, 
           {RGBColor[0, 0, 1], PointBox[4003]}, 
           {RGBColor[0, 1, 0], PointBox[4004]}, 
           {RGBColor[0, 1, 0], PointBox[4005]}, 
           {RGBColor[0, 1, 0], PointBox[4006]}, 
           {RGBColor[0, 0, 1], PointBox[4007]}, 
           {RGBColor[0, 1, 0], PointBox[4008]}, 
           {RGBColor[0, 0, 1], PointBox[4009]}, 
           {RGBColor[0, 1, 0], PointBox[4010]}, 
           {RGBColor[0, 1, 0], PointBox[4011]}, 
           {RGBColor[0, 0, 1], PointBox[4012]}, 
           {RGBColor[0, 1, 0], PointBox[4013]}, 
           {RGBColor[0, 1, 0], PointBox[4014]}, 
           {RGBColor[1, 0, 0], PointBox[4015]}, 
           {RGBColor[0, 1, 0], PointBox[4016]}, 
           {RGBColor[0, 0, 1], PointBox[4017]}, 
           {RGBColor[0, 1, 0], PointBox[4018]}, 
           {RGBColor[0, 0, 1], PointBox[4019]}, 
           {RGBColor[0, 0, 1], PointBox[4020]}, 
           {RGBColor[0, 0, 1], PointBox[4021]}, 
           {RGBColor[0, 1, 0], PointBox[4022]}, 
           {RGBColor[0, 0, 1], PointBox[4023]}, 
           {RGBColor[0, 0, 1], PointBox[4024]}, 
           {RGBColor[0, 1, 0], PointBox[4025]}, 
           {RGBColor[0, 0, 1], PointBox[4026]}, 
           {RGBColor[0, 1, 0], PointBox[4027]}, 
           {RGBColor[0, 0, 1], PointBox[4028]}, 
           {RGBColor[0, 0, 1], PointBox[4029]}, 
           {RGBColor[0, 1, 0], PointBox[4030]}, 
           {RGBColor[0, 1, 0], PointBox[4031]}, 
           {RGBColor[1, 0, 0], PointBox[4032]}, 
           {RGBColor[1, 0, 0], PointBox[4033]}, 
           {RGBColor[0, 0, 1], PointBox[4034]}, 
           {RGBColor[0, 1, 0], PointBox[4035]}, 
           {RGBColor[0, 0, 1], PointBox[4036]}, 
           {RGBColor[0, 0, 1], PointBox[4037]}, 
           {RGBColor[0, 0, 1], PointBox[4038]}, 
           {RGBColor[0, 0, 1], PointBox[4039]}, 
           {RGBColor[0, 0, 1], PointBox[4040]}, 
           {RGBColor[0, 1, 0], PointBox[4041]}, 
           {RGBColor[1, 0, 0], PointBox[4042]}, 
           {RGBColor[0, 0, 1], PointBox[4043]}, 
           {RGBColor[1, 0, 0], PointBox[4044]}, 
           {RGBColor[0, 1, 0], PointBox[4045]}, 
           {RGBColor[1, 0, 0], PointBox[4046]}, 
           {RGBColor[0, 0, 1], PointBox[4047]}, 
           {RGBColor[0, 0, 1], PointBox[4048]}, 
           {RGBColor[0, 0, 1], PointBox[4049]}, 
           {RGBColor[0, 0, 1], PointBox[4050]}, 
           {RGBColor[0, 0, 1], PointBox[4051]}, 
           {RGBColor[0, 0, 1], PointBox[4052]}, 
           {RGBColor[1, 0, 0], PointBox[4053]}, 
           {RGBColor[0, 0, 1], PointBox[4054]}, 
           {RGBColor[1, 0, 0], PointBox[4055]}, 
           {RGBColor[1, 0, 0], PointBox[4056]}, 
           {RGBColor[0, 1, 0], PointBox[4057]}, 
           {RGBColor[0, 1, 0], PointBox[4058]}, 
           {RGBColor[0, 1, 0], PointBox[4059]}, 
           {RGBColor[0, 0, 1], PointBox[4060]}, 
           {RGBColor[0, 1, 0], PointBox[4061]}, 
           {RGBColor[0, 0, 1], PointBox[4062]}, 
           {RGBColor[0, 1, 0], PointBox[4063]}, 
           {RGBColor[0, 1, 0], PointBox[4064]}, 
           {RGBColor[1, 0, 0], PointBox[4065]}, 
           {RGBColor[0, 1, 0], PointBox[4066]}, 
           {RGBColor[0, 0, 1], PointBox[4067]}, 
           {RGBColor[1, 0, 0], PointBox[4068]}, 
           {RGBColor[0, 1, 0], PointBox[4069]}, 
           {RGBColor[0, 1, 0], PointBox[4070]}, 
           {RGBColor[1, 0, 0], PointBox[4071]}, 
           {RGBColor[0, 1, 0], PointBox[4072]}, 
           {RGBColor[0, 0, 1], PointBox[4073]}, 
           {RGBColor[0, 1, 0], PointBox[4074]}, 
           {RGBColor[0, 0, 1], PointBox[4075]}, 
           {RGBColor[0, 1, 0], PointBox[4076]}, 
           {RGBColor[0, 0, 1], PointBox[4077]}, 
           {RGBColor[1, 0, 0], PointBox[4078]}, 
           {RGBColor[0, 1, 0], PointBox[4079]}, 
           {RGBColor[0, 1, 0], PointBox[4080]}, 
           {RGBColor[1, 0, 0], PointBox[4081]}, 
           {RGBColor[1, 0, 0], PointBox[4082]}, 
           {RGBColor[1, 0, 0], PointBox[4083]}, 
           {RGBColor[0, 0, 1], PointBox[4084]}, 
           {RGBColor[0, 0, 1], PointBox[4085]}, 
           {RGBColor[0, 1, 0], PointBox[4086]}, 
           {RGBColor[0, 0, 1], PointBox[4087]}, 
           {RGBColor[0, 0, 1], PointBox[4088]}, 
           {RGBColor[0, 0, 1], PointBox[4089]}, 
           {RGBColor[0, 0, 1], PointBox[4090]}, 
           {RGBColor[0, 1, 0], PointBox[4091]}, 
           {RGBColor[0, 1, 0], PointBox[4092]}, 
           {RGBColor[1, 0, 0], PointBox[4093]}, 
           {RGBColor[0, 0, 1], PointBox[4094]}, 
           {RGBColor[1, 0, 0], PointBox[4095]}, 
           {RGBColor[0, 1, 0], PointBox[4096]}, 
           {RGBColor[0, 0, 1], PointBox[4097]}, 
           {RGBColor[0, 0, 1], PointBox[4098]}, 
           {RGBColor[0, 1, 0], PointBox[4099]}, 
           {RGBColor[0, 0, 1], PointBox[4100]}, 
           {RGBColor[0, 0, 1], PointBox[4101]}, 
           {RGBColor[0, 0, 1], PointBox[4102]}, 
           {RGBColor[1, 0, 0], PointBox[4103]}, 
           {RGBColor[0, 1, 0], PointBox[4104]}, 
           {RGBColor[0, 0, 1], PointBox[4105]}, 
           {RGBColor[0, 1, 0], PointBox[4106]}, 
           {RGBColor[0, 1, 0], PointBox[4107]}, 
           {RGBColor[1, 0, 0], PointBox[4108]}, 
           {RGBColor[1, 0, 0], PointBox[4109]}, 
           {RGBColor[1, 0, 0], PointBox[4110]}, 
           {RGBColor[0, 0, 1], PointBox[4111]}, 
           {RGBColor[0, 0, 1], PointBox[4112]}, 
           {RGBColor[0, 0, 1], PointBox[4113]}, 
           {RGBColor[0, 0, 1], PointBox[4114]}, 
           {RGBColor[0, 0, 1], PointBox[4115]}, 
           {RGBColor[0, 0, 1], PointBox[4116]}, 
           {RGBColor[1, 0, 0], PointBox[4117]}, 
           {RGBColor[0, 0, 1], PointBox[4118]}, 
           {RGBColor[1, 0, 0], PointBox[4119]}, 
           {RGBColor[0, 0, 1], PointBox[4120]}, 
           {RGBColor[0, 0, 1], PointBox[4121]}, 
           {RGBColor[1, 0, 0], PointBox[4122]}, 
           {RGBColor[0, 1, 0], PointBox[4123]}, 
           {RGBColor[1, 0, 0], PointBox[4124]}, 
           {RGBColor[1, 0, 0], PointBox[4125]}, 
           {RGBColor[1, 0, 0], PointBox[4126]}, 
           {RGBColor[0, 0, 1], PointBox[4127]}, 
           {RGBColor[0, 0, 1], PointBox[4128]}, 
           {RGBColor[0, 0, 1], PointBox[4129]}, 
           {RGBColor[0, 0, 1], PointBox[4130]}, 
           {RGBColor[1, 0, 0], PointBox[4131]}, 
           {RGBColor[0, 0, 1], PointBox[4132]}, 
           {RGBColor[0, 0, 1], PointBox[4133]}, 
           {RGBColor[0, 0, 1], PointBox[4134]}, 
           {RGBColor[0, 0, 1], PointBox[4135]}, 
           {RGBColor[1, 0, 0], PointBox[4136]}, 
           {RGBColor[1, 0, 0], PointBox[4137]}, 
           {RGBColor[1, 0, 0], PointBox[4138]}, 
           {RGBColor[0, 0, 1], PointBox[4139]}, 
           {RGBColor[1, 0, 0], PointBox[4140]}, 
           {RGBColor[0, 0, 1], PointBox[4141]}, 
           {RGBColor[1, 0, 0], PointBox[4142]}, 
           {RGBColor[1, 0, 0], PointBox[4143]}, 
           {RGBColor[0, 0, 1], PointBox[4144]}, 
           {RGBColor[1, 0, 0], PointBox[4145]}, 
           {RGBColor[0, 0, 1], PointBox[4146]}, 
           {RGBColor[1, 0, 0], PointBox[4147]}, 
           {RGBColor[1, 0, 0], PointBox[4148]}, 
           {RGBColor[1, 0, 0], PointBox[4149]}, 
           {RGBColor[0, 0, 1], PointBox[4150]}, 
           {RGBColor[0, 1, 0], PointBox[4151]}, 
           {RGBColor[0, 0, 1], PointBox[4152]}, 
           {RGBColor[1, 0, 0], PointBox[4153]}, 
           {RGBColor[0, 0, 1], PointBox[4154]}, 
           {RGBColor[1, 0, 0], PointBox[4155]}, 
           {RGBColor[0, 1, 0], PointBox[4156]}, 
           {RGBColor[0, 1, 0], PointBox[4157]}, 
           {RGBColor[1, 0, 0], PointBox[4158]}, 
           {RGBColor[1, 0, 0], PointBox[4159]}, 
           {RGBColor[1, 0, 0], PointBox[4160]}, 
           {RGBColor[0, 1, 0], PointBox[4161]}, 
           {RGBColor[0, 0, 1], PointBox[4162]}, 
           {RGBColor[0, 1, 0], PointBox[4163]}, 
           {RGBColor[0, 0, 1], PointBox[4164]}, 
           {RGBColor[1, 0, 0], PointBox[4165]}, 
           {RGBColor[1, 0, 0], PointBox[4166]}, 
           {RGBColor[1, 0, 0], PointBox[4167]}, 
           {RGBColor[0, 1, 0], PointBox[4168]}, 
           {RGBColor[0, 0, 1], PointBox[4169]}, 
           {RGBColor[1, 0, 0], PointBox[4170]}, 
           {RGBColor[0, 1, 0], PointBox[4171]}, 
           {RGBColor[0, 0, 1], PointBox[4172]}, 
           {RGBColor[1, 0, 0], PointBox[4173]}, 
           {RGBColor[1, 0, 0], PointBox[4174]}, 
           {RGBColor[1, 0, 0], PointBox[4175]}, 
           {RGBColor[0, 1, 0], PointBox[4176]}, 
           {RGBColor[0, 1, 0], PointBox[4177]}, 
           {RGBColor[0, 1, 0], PointBox[4178]}, 
           {RGBColor[0, 0, 1], PointBox[4179]}, 
           {RGBColor[0, 0, 1], PointBox[4180]}, 
           {RGBColor[0, 1, 0], PointBox[4181]}, 
           {RGBColor[0, 1, 0], PointBox[4182]}, 
           {RGBColor[0, 1, 0], PointBox[4183]}, 
           {RGBColor[0, 1, 0], PointBox[4184]}, 
           {RGBColor[1, 0, 0], PointBox[4185]}, 
           {RGBColor[0, 1, 0], PointBox[4186]}, 
           {RGBColor[1, 0, 0], PointBox[4187]}, 
           {RGBColor[0, 1, 0], PointBox[4188]}, 
           {RGBColor[0, 0, 1], PointBox[4189]}, 
           {RGBColor[0, 0, 1], PointBox[4190]}, 
           {RGBColor[0, 1, 0], PointBox[4191]}, 
           {RGBColor[1, 0, 0], PointBox[4192]}, 
           {RGBColor[0, 1, 0], PointBox[4193]}, 
           {RGBColor[0, 1, 0], PointBox[4194]}, 
           {RGBColor[1, 0, 0], PointBox[4195]}, 
           {RGBColor[1, 0, 0], PointBox[4196]}, 
           {RGBColor[1, 0, 0], PointBox[4197]}, 
           {RGBColor[0, 1, 0], PointBox[4198]}, 
           {RGBColor[0, 0, 1], PointBox[4199]}, 
           {RGBColor[0, 0, 1], PointBox[4200]}, 
           {RGBColor[1, 0, 0], PointBox[4201]}, 
           {RGBColor[0, 1, 0], PointBox[4202]}, 
           {RGBColor[1, 0, 0], PointBox[4203]}, 
           {RGBColor[0, 1, 0], PointBox[4204]}, 
           {RGBColor[1, 0, 0], PointBox[4205]}, 
           {RGBColor[1, 0, 0], PointBox[4206]}, 
           {RGBColor[1, 0, 0], PointBox[4207]}, 
           {RGBColor[0, 0, 1], PointBox[4208]}, 
           {RGBColor[0, 0, 1], PointBox[4209]}, 
           {RGBColor[1, 0, 0], PointBox[4210]}, 
           {RGBColor[1, 0, 0], PointBox[4211]}, 
           {RGBColor[1, 0, 0], PointBox[4212]}, 
           {RGBColor[0, 0, 1], PointBox[4213]}, 
           {RGBColor[1, 0, 0], PointBox[4214]}, 
           {RGBColor[1, 0, 0], PointBox[4215]}, 
           {RGBColor[1, 0, 0], PointBox[4216]}, 
           {RGBColor[0, 1, 0], PointBox[4217]}, 
           {RGBColor[0, 1, 0], PointBox[4218]}, 
           {RGBColor[0, 1, 0], PointBox[4219]}, 
           {RGBColor[0, 1, 0], PointBox[4220]}, 
           {RGBColor[0, 1, 0], PointBox[4221]}, 
           {RGBColor[0, 0, 1], PointBox[4222]}, 
           {RGBColor[1, 0, 0], PointBox[4223]}, 
           {RGBColor[0, 1, 0], PointBox[4224]}, 
           {RGBColor[1, 0, 0], PointBox[4225]}, 
           {RGBColor[0, 1, 0], PointBox[4226]}, 
           {RGBColor[0, 1, 0], PointBox[4227]}, 
           {RGBColor[0, 1, 0], PointBox[4228]}, 
           {RGBColor[1, 0, 0], PointBox[4229]}, 
           {RGBColor[0, 1, 0], PointBox[4230]}, 
           {RGBColor[0, 1, 0], PointBox[4231]}, 
           {RGBColor[1, 0, 0], PointBox[4232]}, 
           {RGBColor[1, 0, 0], PointBox[4233]}, 
           {RGBColor[1, 0, 0], PointBox[4234]}, 
           {RGBColor[0, 1, 0], PointBox[4235]}, 
           {RGBColor[0, 1, 0], PointBox[4236]}, 
           {RGBColor[1, 0, 0], PointBox[4237]}, 
           {RGBColor[0, 1, 0], PointBox[4238]}, 
           {RGBColor[0, 0, 1], PointBox[4239]}, 
           {RGBColor[1, 0, 0], PointBox[4240]}, 
           {RGBColor[1, 0, 0], PointBox[4241]}, 
           {RGBColor[1, 0, 0], PointBox[4242]}, 
           {RGBColor[0, 1, 0], PointBox[4243]}, 
           {RGBColor[0, 1, 0], PointBox[4244]}, 
           {RGBColor[1, 0, 0], PointBox[4245]}, 
           {RGBColor[1, 0, 0], PointBox[4246]}, 
           {RGBColor[0, 1, 0], PointBox[4247]}, 
           {RGBColor[1, 1, 0], PointBox[4248]}, 
           {RGBColor[0, 1, 0], PointBox[4249]}, 
           {RGBColor[0, 1, 0], PointBox[4250]}, 
           {RGBColor[0, 0, 1], PointBox[4251]}, 
           {RGBColor[1, 0, 0], PointBox[4252]}, 
           {RGBColor[1, 0, 0], PointBox[4253]}, 
           {RGBColor[1, 0, 0], PointBox[4254]}, 
           {RGBColor[1, 0, 0], PointBox[4255]}, 
           {RGBColor[0, 0, 1], PointBox[4256]}, 
           {RGBColor[0, 0, 1], PointBox[4257]}, 
           {RGBColor[0, 0, 1], PointBox[4258]}, 
           {RGBColor[1, 1, 0], PointBox[4259]}, 
           {RGBColor[1, 1, 0], PointBox[4260]}, 
           {RGBColor[1, 1, 0], PointBox[4261]}, 
           {RGBColor[1, 1, 0], PointBox[4262]}, 
           {RGBColor[0, 0, 1], PointBox[4263]}, 
           {RGBColor[1, 1, 0], PointBox[4264]}, 
           {RGBColor[1, 1, 0], PointBox[4265]}, 
           {RGBColor[1, 1, 0], PointBox[4266]}, 
           {RGBColor[1, 1, 0], PointBox[4267]}, 
           {RGBColor[0, 0, 1], PointBox[4268]}, 
           {RGBColor[0, 0, 1], PointBox[4269]}, 
           {RGBColor[0, 0, 1], PointBox[4270]}, 
           {RGBColor[1, 1, 0], PointBox[4271]}, 
           {RGBColor[0, 0, 1], PointBox[4272]}, 
           {RGBColor[1, 1, 0], PointBox[4273]}, 
           {RGBColor[0, 0, 1], PointBox[4274]}, 
           {RGBColor[0, 0, 1], PointBox[4275]}, 
           {RGBColor[1, 1, 0], PointBox[4276]}, 
           {RGBColor[0, 0, 1], PointBox[4277]}, 
           {RGBColor[1, 1, 0], PointBox[4278]}, 
           {RGBColor[0, 0, 1], PointBox[4279]}, 
           {RGBColor[0, 0, 1], PointBox[4280]}, 
           {RGBColor[0, 0, 1], PointBox[4281]}, 
           {RGBColor[1, 1, 0], PointBox[4282]}, 
           {RGBColor[1, 1, 0], PointBox[4283]}, 
           {RGBColor[0, 0, 1], PointBox[4284]}, 
           {RGBColor[1, 1, 0], PointBox[4285]}, 
           {RGBColor[1, 1, 0], PointBox[4286]}, 
           {RGBColor[0, 0, 1], PointBox[4287]}, 
           {RGBColor[0, 0, 1], PointBox[4288]}, 
           {RGBColor[0, 0, 1], PointBox[4289]}, 
           {RGBColor[1, 1, 0], PointBox[4290]}, 
           {RGBColor[0, 0, 1], PointBox[4291]}, 
           {RGBColor[0, 0, 1], PointBox[4292]}, 
           {RGBColor[0, 0, 1], PointBox[4293]}, 
           {RGBColor[1, 0, 0], PointBox[4294]}, 
           {RGBColor[0, 0, 1], PointBox[4295]}, 
           {RGBColor[1, 1, 0], PointBox[4296]}, 
           {RGBColor[0, 0, 1], PointBox[4297]}, 
           {RGBColor[1, 0, 0], PointBox[4298]}, 
           {RGBColor[1, 1, 0], PointBox[4299]}, 
           {RGBColor[1, 1, 0], PointBox[4300]}, 
           {RGBColor[1, 0, 0], PointBox[4301]}, 
           {RGBColor[1, 1, 0], PointBox[4302]}, 
           {RGBColor[1, 1, 0], PointBox[4303]}, 
           {RGBColor[1, 1, 0], PointBox[4304]}, 
           {RGBColor[0, 0, 1], PointBox[4305]}, 
           {RGBColor[1, 0, 0], PointBox[4306]}, 
           {RGBColor[1, 1, 0], PointBox[4307]}, 
           {RGBColor[1, 0, 0], PointBox[4308]}, 
           {RGBColor[1, 1, 0], PointBox[4309]}, 
           {RGBColor[0, 0, 1], PointBox[4310]}, 
           {RGBColor[1, 1, 0], PointBox[4311]}, 
           {RGBColor[0, 0, 1], PointBox[4312]}, 
           {RGBColor[1, 0, 0], PointBox[4313]}, 
           {RGBColor[1, 1, 0], PointBox[4314]}, 
           {RGBColor[1, 1, 0], PointBox[4315]}, 
           {RGBColor[1, 1, 0], PointBox[4316]}, 
           {RGBColor[0, 0, 1], PointBox[4317]}, 
           {RGBColor[1, 0, 0], PointBox[4318]}, 
           {RGBColor[1, 1, 0], PointBox[4319]}, 
           {RGBColor[1, 0, 0], PointBox[4320]}, 
           {RGBColor[0, 0, 1], PointBox[4321]}, 
           {RGBColor[0, 0, 1], PointBox[4322]}, 
           {RGBColor[0, 0, 1], PointBox[4323]}, 
           {RGBColor[1, 0, 0], PointBox[4324]}, 
           {RGBColor[1, 1, 0], PointBox[4325]}, 
           {RGBColor[1, 0, 0], PointBox[4326]}, 
           {RGBColor[1, 1, 0], PointBox[4327]}, 
           {RGBColor[0, 0, 1], PointBox[4328]}, 
           {RGBColor[0, 0, 1], PointBox[4329]}, 
           {RGBColor[1, 0, 0], PointBox[4330]}, 
           {RGBColor[0, 0, 1], PointBox[4331]}, 
           {RGBColor[1, 1, 0], PointBox[4332]}, 
           {RGBColor[1, 0, 0], PointBox[4333]}, 
           {RGBColor[0, 0, 1], PointBox[4334]}, 
           {RGBColor[1, 1, 0], PointBox[4335]}, 
           {RGBColor[0, 0, 1], PointBox[4336]}, 
           {RGBColor[0, 0, 1], PointBox[4337]}, 
           {RGBColor[0, 0, 1], PointBox[4338]}, 
           {RGBColor[1, 0, 0], PointBox[4339]}, 
           {RGBColor[1, 1, 0], PointBox[4340]}, 
           {RGBColor[0, 0, 1], PointBox[4341]}, 
           {RGBColor[0, 0, 1], PointBox[4342]}, 
           {RGBColor[1, 0, 0], PointBox[4343]}, 
           {RGBColor[0, 0, 1], PointBox[4344]}, 
           {RGBColor[0, 0, 1], PointBox[4345]}, 
           {RGBColor[1, 0, 0], PointBox[4346]}, 
           {RGBColor[1, 0, 0], PointBox[4347]}, 
           {RGBColor[0, 0, 1], PointBox[4348]}, 
           {RGBColor[1, 1, 0], PointBox[4349]}, 
           {RGBColor[1, 1, 0], PointBox[4350]}, 
           {RGBColor[1, 1, 0], PointBox[4351]}, 
           {RGBColor[1, 1, 0], PointBox[4352]}, 
           {RGBColor[1, 1, 0], PointBox[4353]}, 
           {RGBColor[1, 1, 0], PointBox[4354]}, 
           {RGBColor[0, 0, 1], PointBox[4355]}, 
           {RGBColor[1, 1, 0], PointBox[4356]}, 
           {RGBColor[0, 0, 1], PointBox[4357]}, 
           {RGBColor[1, 1, 0], PointBox[4358]}, 
           {RGBColor[1, 0, 0], PointBox[4359]}, 
           {RGBColor[1, 1, 0], PointBox[4360]}, 
           {RGBColor[1, 1, 0], PointBox[4361]}, 
           {RGBColor[1, 1, 0], PointBox[4362]}, 
           {RGBColor[1, 0, 0], PointBox[4363]}, 
           {RGBColor[0, 0, 1], PointBox[4364]}, 
           {RGBColor[0, 0, 1], PointBox[4365]}, 
           {RGBColor[1, 0, 0], PointBox[4366]}, 
           {RGBColor[0, 0, 1], PointBox[4367]}, 
           {RGBColor[1, 0, 0], PointBox[4368]}, 
           {RGBColor[1, 1, 0], PointBox[4369]}, 
           {RGBColor[1, 0, 0], PointBox[4370]}, 
           {RGBColor[1, 1, 0], PointBox[4371]}, 
           {RGBColor[1, 1, 0], PointBox[4372]}, 
           {RGBColor[1, 1, 0], PointBox[4373]}, 
           {RGBColor[1, 0, 0], PointBox[4374]}, 
           {RGBColor[1, 1, 0], PointBox[4375]}, 
           {RGBColor[1, 1, 0], PointBox[4376]}, 
           {RGBColor[1, 0, 0], PointBox[4377]}, 
           {RGBColor[1, 1, 0], PointBox[4378]}, 
           {RGBColor[1, 0, 0], PointBox[4379]}, 
           {RGBColor[1, 1, 0], PointBox[4380]}, 
           {RGBColor[1, 1, 0], PointBox[4381]}, 
           {RGBColor[1, 0, 0], PointBox[4382]}, 
           {RGBColor[1, 1, 0], PointBox[4383]}, 
           {RGBColor[0, 0, 1], PointBox[4384]}, 
           {RGBColor[1, 0, 0], PointBox[4385]}, 
           {RGBColor[1, 0, 0], PointBox[4386]}, 
           {RGBColor[1, 0, 0], PointBox[4387]}, 
           {RGBColor[1, 1, 0], PointBox[4388]}, 
           {RGBColor[1, 1, 0], PointBox[4389]}, 
           {RGBColor[1, 0, 0], PointBox[4390]}, 
           {RGBColor[1, 0, 0], PointBox[4391]}, 
           {RGBColor[1, 1, 0], PointBox[4392]}, 
           {RGBColor[1, 1, 0], PointBox[4393]}, 
           {RGBColor[1, 0, 0], PointBox[4394]}, 
           {RGBColor[1, 0, 0], PointBox[4395]}, 
           {RGBColor[1, 0, 0], PointBox[4396]}, 
           {RGBColor[1, 1, 0], PointBox[4397]}, 
           {RGBColor[1, 0, 0], PointBox[4398]}, 
           {RGBColor[1, 0, 0], PointBox[4399]}, 
           {RGBColor[1, 1, 0], PointBox[4400]}, 
           {RGBColor[1, 0, 0], PointBox[4401]}, 
           {RGBColor[0, 0, 1], PointBox[4402]}, 
           {RGBColor[1, 0, 0], PointBox[4403]}, 
           {RGBColor[1, 1, 0], PointBox[4404]}, 
           {RGBColor[1, 0, 0], PointBox[4405]}, 
           {RGBColor[1, 1, 0], PointBox[4406]}, 
           {RGBColor[1, 0, 0], PointBox[4407]}, 
           {RGBColor[1, 1, 0], PointBox[4408]}, 
           {RGBColor[1, 0, 0], PointBox[4409]}, 
           {RGBColor[0, 0, 1], PointBox[4410]}, 
           {RGBColor[1, 1, 0], PointBox[4411]}, 
           {RGBColor[0, 0, 1], PointBox[4412]}, 
           {RGBColor[1, 0, 0], PointBox[4413]}, 
           {RGBColor[1, 0, 0], PointBox[4414]}, 
           {RGBColor[1, 0, 0], PointBox[4415]}, 
           {RGBColor[1, 1, 0], PointBox[4416]}, 
           {RGBColor[1, 0, 0], PointBox[4417]}, 
           {RGBColor[1, 0, 0], PointBox[4418]}, 
           {RGBColor[1, 0, 0], PointBox[4419]}, 
           {RGBColor[0, 0, 1], PointBox[4420]}, 
           {RGBColor[1, 1, 0], PointBox[4421]}, 
           {RGBColor[1, 0, 0], PointBox[4422]}, 
           {RGBColor[1, 0, 0], PointBox[4423]}, 
           {RGBColor[0, 0, 1], PointBox[4424]}, 
           {RGBColor[0, 0, 1], PointBox[4425]}, 
           {RGBColor[0, 0, 1], PointBox[4426]}, 
           {RGBColor[1, 1, 0], PointBox[4427]}, 
           {RGBColor[1, 1, 0], PointBox[4428]}, 
           {RGBColor[0, 0, 1], PointBox[4429]}, 
           {RGBColor[0, 0, 1], PointBox[4430]}, 
           {RGBColor[0, 0, 1], PointBox[4431]}, 
           {RGBColor[1, 1, 0], PointBox[4432]}, 
           {RGBColor[0, 0, 1], PointBox[4433]}, 
           {RGBColor[0, 0, 1], PointBox[4434]}, 
           {RGBColor[1, 0, 0], PointBox[4435]}, 
           {RGBColor[1, 1, 0], PointBox[4436]}, 
           {RGBColor[0, 0, 1], PointBox[4437]}, 
           {RGBColor[1, 1, 0], PointBox[4438]}, 
           {RGBColor[1, 1, 0], PointBox[4439]}, 
           {RGBColor[0, 0, 1], PointBox[4440]}, 
           {RGBColor[1, 0, 0], PointBox[4441]}, 
           {RGBColor[0, 0, 1], PointBox[4442]}, 
           {RGBColor[0, 0, 1], PointBox[4443]}, 
           {RGBColor[0, 0, 1], PointBox[4444]}, 
           {RGBColor[0, 0, 1], PointBox[4445]}, 
           {RGBColor[1, 0, 0], PointBox[4446]}, 
           {RGBColor[0, 0, 1], PointBox[4447]}, 
           {RGBColor[1, 0, 0], PointBox[4448]}, 
           {RGBColor[0, 0, 1], PointBox[4449]}, 
           {RGBColor[1, 0, 0], PointBox[4450]}, 
           {RGBColor[1, 1, 0], PointBox[4451]}, 
           {RGBColor[1, 1, 0], PointBox[4452]}, 
           {RGBColor[1, 0, 0], PointBox[4453]}, 
           {RGBColor[0, 0, 1], PointBox[4454]}, 
           {RGBColor[1, 0, 0], PointBox[4455]}, 
           {RGBColor[1, 1, 0], PointBox[4456]}, 
           {RGBColor[0, 0, 1], PointBox[4457]}, 
           {RGBColor[1, 0, 0], PointBox[4458]}, 
           {RGBColor[1, 0, 0], PointBox[4459]}, 
           {RGBColor[1, 0, 0], PointBox[4460]}, 
           {RGBColor[1, 1, 0], PointBox[4461]}, 
           {RGBColor[0, 0, 1], PointBox[4462]}, 
           {RGBColor[1, 0, 0], PointBox[4463]}, 
           {RGBColor[1, 1, 0], PointBox[4464]}, 
           {RGBColor[1, 1, 0], PointBox[4465]}, 
           {RGBColor[1, 0, 0], PointBox[4466]}, 
           {RGBColor[1, 0, 0], PointBox[4467]}, 
           {RGBColor[1, 0, 0], PointBox[4468]}, 
           {RGBColor[0, 0, 1], PointBox[4469]}, 
           {RGBColor[1, 0, 0], PointBox[4470]}, 
           {RGBColor[1, 1, 0], PointBox[4471]}, 
           {RGBColor[1, 0, 0], PointBox[4472]}, 
           {RGBColor[0, 0, 1], PointBox[4473]}, 
           {RGBColor[1, 0, 0], PointBox[4474]}, 
           {RGBColor[0, 0, 1], PointBox[4475]}, 
           {RGBColor[1, 0, 0], PointBox[4476]}, 
           {RGBColor[0, 0, 1], PointBox[4477]}, 
           {RGBColor[0, 0, 1], PointBox[4478]}, 
           {RGBColor[1, 0, 0], PointBox[4479]}, 
           {RGBColor[1, 1, 0], PointBox[4480]}, 
           {RGBColor[1, 0, 0], PointBox[4481]}, 
           {RGBColor[0, 0, 1], PointBox[4482]}, 
           {RGBColor[1, 0, 0], PointBox[4483]}, 
           {RGBColor[0, 0, 1], PointBox[4484]}, 
           {RGBColor[0, 0, 1], PointBox[4485]}, 
           {RGBColor[0, 0, 1], PointBox[4486]}, 
           {RGBColor[1, 0, 0], PointBox[4487]}, 
           {RGBColor[0, 0, 1], PointBox[4488]}, 
           {RGBColor[1, 1, 0], PointBox[4489]}, 
           {RGBColor[0, 0, 1], PointBox[4490]}, 
           {RGBColor[1, 0, 0], PointBox[4491]}, 
           {RGBColor[1, 0, 0], PointBox[4492]}, 
           {RGBColor[1, 0, 0], PointBox[4493]}, 
           {RGBColor[0, 0, 1], PointBox[4494]}, 
           {RGBColor[1, 0, 0], PointBox[4495]}, 
           {RGBColor[0, 0, 1], PointBox[4496]}, 
           {RGBColor[1, 0, 0], PointBox[4497]}, 
           {RGBColor[1, 0, 0], PointBox[4498]}, 
           {RGBColor[0, 0, 1], PointBox[4499]}, 
           {RGBColor[1, 0, 0], PointBox[4500]}, 
           {RGBColor[1, 1, 0], PointBox[4501]}, 
           {RGBColor[1, 0, 0], PointBox[4502]}, 
           {RGBColor[1, 0, 0], PointBox[4503]}, 
           {RGBColor[1, 0, 0], PointBox[4504]}, 
           {RGBColor[0, 0, 1], PointBox[4505]}, 
           {RGBColor[0, 0, 1], PointBox[4506]}, 
           {RGBColor[1, 0, 0], PointBox[4507]}, 
           {RGBColor[0, 0, 1], PointBox[4508]}, 
           {RGBColor[0, 0, 1], PointBox[4509]}, 
           {RGBColor[1, 0, 0], PointBox[4510]}, 
           {RGBColor[1, 0, 0], PointBox[4511]}, 
           {RGBColor[0, 0, 1], PointBox[4512]}, 
           {RGBColor[0, 0, 1], PointBox[4513]}, 
           {RGBColor[1, 0, 0], PointBox[4514]}, 
           {RGBColor[0, 0, 1], PointBox[4515]}, 
           {RGBColor[0, 0, 1], PointBox[4516]}, 
           {RGBColor[1, 0, 0], PointBox[4517]}, 
           {RGBColor[1, 0, 0], PointBox[4518]}, 
           {RGBColor[1, 0, 0], PointBox[4519]}, 
           {RGBColor[1, 0, 0], PointBox[4520]}, 
           {RGBColor[0, 0, 1], PointBox[4521]}, 
           {RGBColor[0, 0, 1], PointBox[4522]}, 
           {RGBColor[0, 0, 1], PointBox[4523]}, 
           {RGBColor[1, 1, 0], PointBox[4524]}, 
           {RGBColor[1, 1, 0], PointBox[4525]}, 
           {RGBColor[0, 0, 1], PointBox[4526]}, 
           {RGBColor[1, 1, 0], PointBox[4527]}, 
           {RGBColor[1, 1, 0], PointBox[4528]}, 
           {RGBColor[0, 0, 1], PointBox[4529]}, 
           {RGBColor[0, 0, 1], PointBox[4530]}, 
           {RGBColor[1, 1, 0], PointBox[4531]}, 
           {RGBColor[1, 1, 0], PointBox[4532]}, 
           {RGBColor[0, 0, 1], PointBox[4533]}, 
           {RGBColor[1, 1, 0], PointBox[4534]}, 
           {RGBColor[1, 1, 0], PointBox[4535]}, 
           {RGBColor[0, 0, 1], PointBox[4536]}, 
           {RGBColor[0, 0, 1], PointBox[4537]}, 
           {RGBColor[0, 0, 1], PointBox[4538]}, 
           {RGBColor[1, 1, 0], PointBox[4539]}, 
           {RGBColor[0, 0, 1], PointBox[4540]}, 
           {RGBColor[1, 1, 0], PointBox[4541]}, 
           {RGBColor[0, 0, 1], PointBox[4542]}, 
           {RGBColor[0, 0, 1], PointBox[4543]}, 
           {RGBColor[1, 1, 0], PointBox[4544]}, 
           {RGBColor[0, 0, 1], PointBox[4545]}, 
           {RGBColor[1, 1, 0], PointBox[4546]}, 
           {RGBColor[1, 0, 0], PointBox[4547]}, 
           {RGBColor[0, 0, 1], PointBox[4548]}, 
           {RGBColor[0, 0, 1], PointBox[4549]}, 
           {RGBColor[0, 0, 1], PointBox[4550]}, 
           {RGBColor[1, 1, 0], PointBox[4551]}, 
           {RGBColor[1, 1, 0], PointBox[4552]}, 
           {RGBColor[0, 0, 1], PointBox[4553]}, 
           {RGBColor[0, 0, 1], PointBox[4554]}, 
           {RGBColor[1, 1, 0], PointBox[4555]}, 
           {RGBColor[1, 1, 0], PointBox[4556]}, 
           {RGBColor[0, 0, 1], PointBox[4557]}, 
           {RGBColor[0, 0, 1], PointBox[4558]}, 
           {RGBColor[0, 0, 1], PointBox[4559]}, 
           {RGBColor[1, 1, 0], PointBox[4560]}, 
           {RGBColor[0, 0, 1], PointBox[4561]}, 
           {RGBColor[0, 0, 1], PointBox[4562]}, 
           {RGBColor[0, 0, 1], PointBox[4563]}, 
           {RGBColor[1, 0, 0], PointBox[4564]}, 
           {RGBColor[1, 0, 0], PointBox[4565]}, 
           {RGBColor[1, 1, 0], PointBox[4566]}, 
           {RGBColor[0, 0, 1], PointBox[4567]}, 
           {RGBColor[1, 1, 0], PointBox[4568]}, 
           {RGBColor[1, 1, 0], PointBox[4569]}, 
           {RGBColor[1, 1, 0], PointBox[4570]}, 
           {RGBColor[1, 1, 0], PointBox[4571]}, 
           {RGBColor[1, 1, 0], PointBox[4572]}, 
           {RGBColor[0, 0, 1], PointBox[4573]}, 
           {RGBColor[1, 0, 0], PointBox[4574]}, 
           {RGBColor[1, 1, 0], PointBox[4575]}, 
           {RGBColor[1, 0, 0], PointBox[4576]}, 
           {RGBColor[1, 1, 0], PointBox[4577]}, 
           {RGBColor[1, 0, 0], PointBox[4578]}, 
           {RGBColor[1, 1, 0], PointBox[4579]}, 
           {RGBColor[0, 0, 1], PointBox[4580]}, 
           {RGBColor[1, 1, 0], PointBox[4581]}, 
           {RGBColor[1, 1, 0], PointBox[4582]}, 
           {RGBColor[1, 1, 0], PointBox[4583]}, 
           {RGBColor[0, 0, 1], PointBox[4584]}, 
           {RGBColor[1, 0, 0], PointBox[4585]}, 
           {RGBColor[1, 1, 0], PointBox[4586]}, 
           {RGBColor[1, 0, 0], PointBox[4587]}, 
           {RGBColor[1, 0, 0], PointBox[4588]}, 
           {RGBColor[0, 0, 1], PointBox[4589]}, 
           {RGBColor[0, 0, 1], PointBox[4590]}, 
           {RGBColor[0, 0, 1], PointBox[4591]}, 
           {RGBColor[1, 1, 0], PointBox[4592]}, 
           {RGBColor[0, 0, 1], PointBox[4593]}, 
           {RGBColor[1, 1, 0], PointBox[4594]}, 
           {RGBColor[0, 0, 1], PointBox[4595]}, 
           {RGBColor[0, 0, 1], PointBox[4596]}, 
           {RGBColor[1, 0, 0], PointBox[4597]}, 
           {RGBColor[0, 0, 1], PointBox[4598]}, 
           {RGBColor[1, 1, 0], PointBox[4599]}, 
           {RGBColor[1, 0, 0], PointBox[4600]}, 
           {RGBColor[0, 0, 1], PointBox[4601]}, 
           {RGBColor[1, 1, 0], PointBox[4602]}, 
           {RGBColor[1, 0, 0], PointBox[4603]}, 
           {RGBColor[0, 0, 1], PointBox[4604]}, 
           {RGBColor[0, 0, 1], PointBox[4605]}, 
           {RGBColor[0, 0, 1], PointBox[4606]}, 
           {RGBColor[1, 1, 0], PointBox[4607]}, 
           {RGBColor[0, 0, 1], PointBox[4608]}, 
           {RGBColor[0, 0, 1], PointBox[4609]}, 
           {RGBColor[1, 0, 0], PointBox[4610]}, 
           {RGBColor[0, 0, 1], PointBox[4611]}, 
           {RGBColor[0, 0, 1], PointBox[4612]}, 
           {RGBColor[1, 0, 0], PointBox[4613]}, 
           {RGBColor[1, 0, 0], PointBox[4614]}, 
           {RGBColor[1, 0, 0], PointBox[4615]}, 
           {RGBColor[1, 1, 0], PointBox[4616]}, 
           {RGBColor[1, 1, 0], PointBox[4617]}, 
           {RGBColor[0, 0, 1], PointBox[4618]}, 
           {RGBColor[1, 1, 0], PointBox[4619]}, 
           {RGBColor[1, 1, 0], PointBox[4620]}, 
           {RGBColor[1, 1, 0], PointBox[4621]}, 
           {RGBColor[1, 1, 0], PointBox[4622]}, 
           {RGBColor[0, 0, 1], PointBox[4623]}, 
           {RGBColor[1, 1, 0], PointBox[4624]}, 
           {RGBColor[1, 0, 0], PointBox[4625]}, 
           {RGBColor[1, 1, 0], PointBox[4626]}, 
           {RGBColor[1, 0, 0], PointBox[4627]}, 
           {RGBColor[0, 0, 1], PointBox[4628]}, 
           {RGBColor[1, 1, 0], PointBox[4629]}, 
           {RGBColor[1, 1, 0], PointBox[4630]}, 
           {RGBColor[1, 1, 0], PointBox[4631]}, 
           {RGBColor[1, 0, 0], PointBox[4632]}, 
           {RGBColor[0, 0, 1], PointBox[4633]}, 
           {RGBColor[0, 0, 1], PointBox[4634]}, 
           {RGBColor[1, 0, 0], PointBox[4635]}, 
           {RGBColor[1, 0, 0], PointBox[4636]}, 
           {RGBColor[1, 0, 0], PointBox[4637]}, 
           {RGBColor[1, 1, 0], PointBox[4638]}, 
           {RGBColor[1, 1, 0], PointBox[4639]}, 
           {RGBColor[1, 1, 0], PointBox[4640]}, 
           {RGBColor[1, 1, 0], PointBox[4641]}, 
           {RGBColor[1, 1, 0], PointBox[4642]}, 
           {RGBColor[1, 1, 0], PointBox[4643]}, 
           {RGBColor[1, 0, 0], PointBox[4644]}, 
           {RGBColor[1, 1, 0], PointBox[4645]}, 
           {RGBColor[1, 0, 0], PointBox[4646]}, 
           {RGBColor[1, 1, 0], PointBox[4647]}, 
           {RGBColor[1, 1, 0], PointBox[4648]}, 
           {RGBColor[1, 0, 0], PointBox[4649]}, 
           {RGBColor[1, 1, 0], PointBox[4650]}, 
           {RGBColor[1, 0, 0], PointBox[4651]}, 
           {RGBColor[1, 0, 0], PointBox[4652]}, 
           {RGBColor[1, 0, 0], PointBox[4653]}, 
           {RGBColor[1, 1, 0], PointBox[4654]}, 
           {RGBColor[1, 1, 0], PointBox[4655]}, 
           {RGBColor[1, 0, 0], PointBox[4656]}, 
           {RGBColor[1, 1, 0], PointBox[4657]}, 
           {RGBColor[1, 1, 0], PointBox[4658]}, 
           {RGBColor[1, 0, 0], PointBox[4659]}, 
           {RGBColor[1, 0, 0], PointBox[4660]}, 
           {RGBColor[1, 0, 0], PointBox[4661]}, 
           {RGBColor[1, 1, 0], PointBox[4662]}, 
           {RGBColor[1, 0, 0], PointBox[4663]}, 
           {RGBColor[1, 0, 0], PointBox[4664]}, 
           {RGBColor[1, 1, 0], PointBox[4665]}, 
           {RGBColor[1, 0, 0], PointBox[4666]}, 
           {RGBColor[1, 0, 0], PointBox[4667]}, 
           {RGBColor[1, 0, 0], PointBox[4668]}, 
           {RGBColor[1, 1, 0], PointBox[4669]}, 
           {RGBColor[0, 0, 1], PointBox[4670]}, 
           {RGBColor[1, 1, 0], PointBox[4671]}, 
           {RGBColor[1, 0, 0], PointBox[4672]}, 
           {RGBColor[1, 1, 0], PointBox[4673]}, 
           {RGBColor[1, 0, 0], PointBox[4674]}, 
           {RGBColor[0, 0, 1], PointBox[4675]}, 
           {RGBColor[1, 1, 0], PointBox[4676]}, 
           {RGBColor[1, 0, 0], PointBox[4677]}, 
           {RGBColor[1, 0, 0], PointBox[4678]}, 
           {RGBColor[1, 0, 0], PointBox[4679]}, 
           {RGBColor[0, 0, 1], PointBox[4680]}, 
           {RGBColor[1, 1, 0], PointBox[4681]}, 
           {RGBColor[1, 0, 0], PointBox[4682]}, 
           {RGBColor[1, 0, 0], PointBox[4683]}, 
           {RGBColor[1, 0, 0], PointBox[4684]}, 
           {RGBColor[0, 0, 1], PointBox[4685]}, 
           {RGBColor[1, 1, 0], PointBox[4686]}, 
           {RGBColor[1, 0, 0], PointBox[4687]}, 
           {RGBColor[1, 0, 0], PointBox[4688]}, 
           {RGBColor[1, 0, 0], PointBox[4689]}, 
           {RGBColor[0, 0, 1], PointBox[4690]}, 
           {RGBColor[0, 0, 1], PointBox[4691]}, 
           {RGBColor[0, 0, 1], PointBox[4692]}, 
           {RGBColor[1, 1, 0], PointBox[4693]}, 
           {RGBColor[1, 1, 0], PointBox[4694]}, 
           {RGBColor[0, 0, 1], PointBox[4695]}, 
           {RGBColor[0, 0, 1], PointBox[4696]}, 
           {RGBColor[0, 0, 1], PointBox[4697]}, 
           {RGBColor[1, 1, 0], PointBox[4698]}, 
           {RGBColor[1, 0, 0], PointBox[4699]}, 
           {RGBColor[0, 0, 1], PointBox[4700]}, 
           {RGBColor[1, 0, 0], PointBox[4701]}, 
           {RGBColor[0, 0, 1], PointBox[4702]}, 
           {RGBColor[1, 1, 0], PointBox[4703]}, 
           {RGBColor[0, 0, 1], PointBox[4704]}, 
           {RGBColor[0, 0, 1], PointBox[4705]}, 
           {RGBColor[1, 1, 0], PointBox[4706]}, 
           {RGBColor[1, 1, 0], PointBox[4707]}, 
           {RGBColor[0, 0, 1], PointBox[4708]}, 
           {RGBColor[1, 0, 0], PointBox[4709]}, 
           {RGBColor[0, 0, 1], PointBox[4710]}, 
           {RGBColor[0, 0, 1], PointBox[4711]}, 
           {RGBColor[0, 0, 1], PointBox[4712]}, 
           {RGBColor[0, 0, 1], PointBox[4713]}, 
           {RGBColor[1, 0, 0], PointBox[4714]}, 
           {RGBColor[1, 0, 0], PointBox[4715]}, 
           {RGBColor[1, 0, 0], PointBox[4716]}, 
           {RGBColor[0, 0, 1], PointBox[4717]}, 
           {RGBColor[1, 1, 0], PointBox[4718]}, 
           {RGBColor[1, 1, 0], PointBox[4719]}, 
           {RGBColor[1, 0, 0], PointBox[4720]}, 
           {RGBColor[0, 0, 1], PointBox[4721]}, 
           {RGBColor[1, 0, 0], PointBox[4722]}, 
           {RGBColor[1, 1, 0], PointBox[4723]}, 
           {RGBColor[1, 0, 0], PointBox[4724]}, 
           {RGBColor[1, 0, 0], PointBox[4725]}, 
           {RGBColor[1, 0, 0], PointBox[4726]}, 
           {RGBColor[1, 1, 0], PointBox[4727]}, 
           {RGBColor[0, 0, 1], PointBox[4728]}, 
           {RGBColor[1, 1, 0], PointBox[4729]}, 
           {RGBColor[1, 1, 0], PointBox[4730]}, 
           {RGBColor[1, 0, 0], PointBox[4731]}, 
           {RGBColor[1, 0, 0], PointBox[4732]}, 
           {RGBColor[1, 0, 0], PointBox[4733]}, 
           {RGBColor[0, 0, 1], PointBox[4734]}, 
           {RGBColor[1, 0, 0], PointBox[4735]}, 
           {RGBColor[1, 1, 0], PointBox[4736]}, 
           {RGBColor[1, 0, 0], PointBox[4737]}, 
           {RGBColor[1, 0, 0], PointBox[4738]}, 
           {RGBColor[1, 0, 0], PointBox[4739]}, 
           {RGBColor[0, 0, 1], PointBox[4740]}, 
           {RGBColor[0, 0, 1], PointBox[4741]}, 
           {RGBColor[0, 0, 1], PointBox[4742]}, 
           {RGBColor[0, 0, 1], PointBox[4743]}, 
           {RGBColor[0, 0, 1], PointBox[4744]}, 
           {RGBColor[1, 1, 0], PointBox[4745]}, 
           {RGBColor[1, 0, 0], PointBox[4746]}, 
           {RGBColor[0, 0, 1], PointBox[4747]}, 
           {RGBColor[1, 0, 0], PointBox[4748]}, 
           {RGBColor[0, 0, 1], PointBox[4749]}, 
           {RGBColor[0, 0, 1], PointBox[4750]}, 
           {RGBColor[0, 0, 1], PointBox[4751]}, 
           {RGBColor[1, 0, 0], PointBox[4752]}, 
           {RGBColor[0, 0, 1], PointBox[4753]}, 
           {RGBColor[1, 1, 0], PointBox[4754]}, 
           {RGBColor[1, 0, 0], PointBox[4755]}, 
           {RGBColor[1, 0, 0], PointBox[4756]}, 
           {RGBColor[1, 0, 0], PointBox[4757]}, 
           {RGBColor[0, 0, 1], PointBox[4758]}, 
           {RGBColor[0, 0, 1], PointBox[4759]}, 
           {RGBColor[0, 0, 1], PointBox[4760]}, 
           {RGBColor[0, 0, 1], PointBox[4761]}, 
           {RGBColor[1, 0, 0], PointBox[4762]}, 
           {RGBColor[0, 0, 1], PointBox[4763]}, 
           {RGBColor[0, 0, 1], PointBox[4764]}, 
           {RGBColor[0, 0, 1], PointBox[4765]}, 
           {RGBColor[1, 1, 0], PointBox[4766]}, 
           {RGBColor[1, 0, 0], PointBox[4767]}, 
           {RGBColor[1, 0, 0], PointBox[4768]}, 
           {RGBColor[1, 0, 0], PointBox[4769]}, 
           {RGBColor[0, 0, 1], PointBox[4770]}, 
           {RGBColor[0, 0, 1], PointBox[4771]}, 
           {RGBColor[1, 0, 0], PointBox[4772]}, 
           {RGBColor[0, 0, 1], PointBox[4773]}, 
           {RGBColor[0, 0, 1], PointBox[4774]}, 
           {RGBColor[1, 0, 0], PointBox[4775]}, 
           {RGBColor[1, 0, 0], PointBox[4776]}, 
           {RGBColor[0, 0, 1], PointBox[4777]}, 
           {RGBColor[0, 0, 1], PointBox[4778]}, 
           {RGBColor[1, 0, 0], PointBox[4779]}, 
           {RGBColor[0, 0, 1], PointBox[4780]}, 
           {RGBColor[1, 1, 0], PointBox[4781]}, 
           {RGBColor[1, 0, 0], PointBox[4782]}, 
           {RGBColor[1, 0, 0], PointBox[4783]}, 
           {RGBColor[1, 0, 0], PointBox[4784]}, 
           {RGBColor[1, 0, 0], PointBox[4785]}, 
           {RGBColor[0, 0, 1], PointBox[4786]}, 
           {RGBColor[0, 0, 1], PointBox[4787]}, 
           {RGBColor[0, 0, 1], PointBox[4788]}, 
           {RGBColor[1, 1, 0], PointBox[4789]}, 
           {RGBColor[1, 1, 0], PointBox[4790]}, 
           {RGBColor[1, 1, 0], PointBox[4791]}, 
           {RGBColor[1, 1, 0], PointBox[4792]}, 
           {RGBColor[0, 0, 1], PointBox[4793]}, 
           {RGBColor[1, 1, 0], PointBox[4794]}, 
           {RGBColor[1, 1, 0], PointBox[4795]}, 
           {RGBColor[1, 1, 0], PointBox[4796]}, 
           {RGBColor[1, 1, 0], PointBox[4797]}, 
           {RGBColor[0, 0, 1], PointBox[4798]}, 
           {RGBColor[0, 0, 1], PointBox[4799]}, 
           {RGBColor[0, 0, 1], PointBox[4800]}, 
           {RGBColor[1, 1, 0], PointBox[4801]}, 
           {RGBColor[0, 0, 1], PointBox[4802]}, 
           {RGBColor[1, 1, 0], PointBox[4803]}, 
           {RGBColor[0, 0, 1], PointBox[4804]}, 
           {RGBColor[0, 0, 1], PointBox[4805]}, 
           {RGBColor[1, 1, 0], PointBox[4806]}, 
           {RGBColor[0, 0, 1], PointBox[4807]}, 
           {RGBColor[0, 0, 1], PointBox[4808]}, 
           {RGBColor[0, 0, 1], PointBox[4809]}, 
           {RGBColor[0, 0, 1], PointBox[4810]}, 
           {RGBColor[1, 1, 0], PointBox[4811]}, 
           {RGBColor[1, 1, 0], PointBox[4812]}, 
           {RGBColor[1, 1, 0], PointBox[4813]}, 
           {RGBColor[1, 1, 0], PointBox[4814]}, 
           {RGBColor[1, 1, 0], PointBox[4815]}, 
           {RGBColor[1, 1, 0], PointBox[4816]}, 
           {RGBColor[0, 0, 1], PointBox[4817]}, 
           {RGBColor[1, 1, 0], PointBox[4818]}, 
           {RGBColor[0, 0, 1], PointBox[4819]}, 
           {RGBColor[1, 1, 0], PointBox[4820]}, 
           {RGBColor[1, 1, 0], PointBox[4821]}, 
           {RGBColor[0, 0, 1], PointBox[4822]}, 
           {RGBColor[0, 0, 1], PointBox[4823]}, 
           {RGBColor[1, 0, 0], PointBox[4824]}, 
           {RGBColor[0, 0, 1], PointBox[4825]}, 
           {RGBColor[1, 1, 0], PointBox[4826]}, 
           {RGBColor[0, 0, 1], PointBox[4827]}, 
           {RGBColor[1, 0, 0], PointBox[4828]}, 
           {RGBColor[1, 1, 0], PointBox[4829]}, 
           {RGBColor[1, 1, 0], PointBox[4830]}, 
           {RGBColor[1, 0, 0], PointBox[4831]}, 
           {RGBColor[1, 1, 0], PointBox[4832]}, 
           {RGBColor[1, 1, 0], PointBox[4833]}, 
           {RGBColor[1, 1, 0], PointBox[4834]}, 
           {RGBColor[0, 0, 1], PointBox[4835]}, 
           {RGBColor[1, 0, 0], PointBox[4836]}, 
           {RGBColor[1, 1, 0], PointBox[4837]}, 
           {RGBColor[1, 0, 0], PointBox[4838]}, 
           {RGBColor[0, 0, 1], PointBox[4839]}, 
           {RGBColor[0, 0, 1], PointBox[4840]}, 
           {RGBColor[1, 1, 0], PointBox[4841]}, 
           {RGBColor[1, 1, 0], PointBox[4842]}, 
           {RGBColor[1, 0, 0], PointBox[4843]}, 
           {RGBColor[1, 1, 0], PointBox[4844]}, 
           {RGBColor[1, 1, 0], PointBox[4845]}, 
           {RGBColor[1, 1, 0], PointBox[4846]}, 
           {RGBColor[1, 1, 0], PointBox[4847]}, 
           {RGBColor[1, 0, 0], PointBox[4848]}, 
           {RGBColor[1, 1, 0], PointBox[4849]}, 
           {RGBColor[1, 0, 0], PointBox[4850]}, 
           {RGBColor[0, 0, 1], PointBox[4851]}, 
           {RGBColor[0, 0, 1], PointBox[4852]}, 
           {RGBColor[0, 0, 1], PointBox[4853]}, 
           {RGBColor[1, 0, 0], PointBox[4854]}, 
           {RGBColor[1, 1, 0], PointBox[4855]}, 
           {RGBColor[1, 0, 0], PointBox[4856]}, 
           {RGBColor[1, 1, 0], PointBox[4857]}, 
           {RGBColor[0, 0, 1], PointBox[4858]}, 
           {RGBColor[0, 0, 1], PointBox[4859]}, 
           {RGBColor[1, 0, 0], PointBox[4860]}, 
           {RGBColor[0, 0, 1], PointBox[4861]}, 
           {RGBColor[1, 1, 0], PointBox[4862]}, 
           {RGBColor[1, 0, 0], PointBox[4863]}, 
           {RGBColor[0, 0, 1], PointBox[4864]}, 
           {RGBColor[0, 0, 1], PointBox[4865]}, 
           {RGBColor[0, 0, 1], PointBox[4866]}, 
           {RGBColor[0, 0, 1], PointBox[4867]}, 
           {RGBColor[1, 1, 0], PointBox[4868]}, 
           {RGBColor[1, 0, 0], PointBox[4869]}, 
           {RGBColor[1, 1, 0], PointBox[4870]}, 
           {RGBColor[0, 0, 1], PointBox[4871]}, 
           {RGBColor[1, 1, 0], PointBox[4872]}, 
           {RGBColor[1, 0, 0], PointBox[4873]}, 
           {RGBColor[0, 0, 1], PointBox[4874]}, 
           {RGBColor[0, 0, 1], PointBox[4875]}, 
           {RGBColor[1, 0, 0], PointBox[4876]}, 
           {RGBColor[1, 0, 0], PointBox[4877]}, 
           {RGBColor[0, 0, 1], PointBox[4878]}, 
           {RGBColor[1, 1, 0], PointBox[4879]}, 
           {RGBColor[1, 1, 0], PointBox[4880]}, 
           {RGBColor[1, 1, 0], PointBox[4881]}, 
           {RGBColor[1, 1, 0], PointBox[4882]}, 
           {RGBColor[1, 1, 0], PointBox[4883]}, 
           {RGBColor[1, 1, 0], PointBox[4884]}, 
           {RGBColor[0, 0, 1], PointBox[4885]}, 
           {RGBColor[0, 0, 1], PointBox[4886]}, 
           {RGBColor[0, 0, 1], PointBox[4887]}, 
           {RGBColor[1, 1, 0], PointBox[4888]}, 
           {RGBColor[1, 0, 0], PointBox[4889]}, 
           {RGBColor[1, 1, 0], PointBox[4890]}, 
           {RGBColor[1, 1, 0], PointBox[4891]}, 
           {RGBColor[1, 1, 0], PointBox[4892]}, 
           {RGBColor[1, 1, 0], PointBox[4893]}, 
           {RGBColor[1, 1, 0], PointBox[4894]}, 
           {RGBColor[1, 0, 0], PointBox[4895]}, 
           {RGBColor[0, 0, 1], PointBox[4896]}, 
           {RGBColor[1, 1, 0], PointBox[4897]}, 
           {RGBColor[0, 0, 1], PointBox[4898]}, 
           {RGBColor[0, 0, 1], PointBox[4899]}, 
           {RGBColor[1, 0, 0], PointBox[4900]}, 
           {RGBColor[0, 0, 1], PointBox[4901]}, 
           {RGBColor[1, 0, 0], PointBox[4902]}, 
           {RGBColor[1, 1, 0], PointBox[4903]}, 
           {RGBColor[1, 0, 0], PointBox[4904]}, 
           {RGBColor[1, 1, 0], PointBox[4905]}, 
           {RGBColor[1, 1, 0], PointBox[4906]}, 
           {RGBColor[1, 1, 0], PointBox[4907]}, 
           {RGBColor[1, 0, 0], PointBox[4908]}, 
           {RGBColor[1, 1, 0], PointBox[4909]}, 
           {RGBColor[1, 1, 0], PointBox[4910]}, 
           {RGBColor[1, 0, 0], PointBox[4911]}, 
           {RGBColor[1, 1, 0], PointBox[4912]}, 
           {RGBColor[1, 0, 0], PointBox[4913]}, 
           {RGBColor[1, 1, 0], PointBox[4914]}, 
           {RGBColor[1, 1, 0], PointBox[4915]}, 
           {RGBColor[1, 0, 0], PointBox[4916]}, 
           {RGBColor[0, 0, 1], PointBox[4917]}, 
           {RGBColor[0, 0, 1], PointBox[4918]}, 
           {RGBColor[1, 0, 0], PointBox[4919]}, 
           {RGBColor[1, 0, 0], PointBox[4920]}, 
           {RGBColor[1, 0, 0], PointBox[4921]}, 
           {RGBColor[1, 1, 0], PointBox[4922]}, 
           {RGBColor[1, 1, 0], PointBox[4923]}, 
           {RGBColor[1, 0, 0], PointBox[4924]}, 
           {RGBColor[1, 1, 0], PointBox[4925]}, 
           {RGBColor[1, 1, 0], PointBox[4926]}, 
           {RGBColor[1, 0, 0], PointBox[4927]}, 
           {RGBColor[1, 0, 0], PointBox[4928]}, 
           {RGBColor[1, 1, 0], PointBox[4929]}, 
           {RGBColor[1, 1, 0], PointBox[4930]}, 
           {RGBColor[1, 0, 0], PointBox[4931]}, 
           {RGBColor[1, 1, 0], PointBox[4932]}, 
           {RGBColor[1, 1, 0], PointBox[4933]}, 
           {RGBColor[1, 0, 0], PointBox[4934]}, 
           {RGBColor[1, 0, 0], PointBox[4935]}, 
           {RGBColor[1, 0, 0], PointBox[4936]}, 
           {RGBColor[1, 1, 0], PointBox[4937]}, 
           {RGBColor[1, 0, 0], PointBox[4938]}, 
           {RGBColor[1, 1, 0], PointBox[4939]}, 
           {RGBColor[1, 0, 0], PointBox[4940]}, 
           {RGBColor[1, 0, 0], PointBox[4941]}, 
           {RGBColor[1, 1, 0], PointBox[4942]}, 
           {RGBColor[1, 0, 0], PointBox[4943]}, 
           {RGBColor[1, 1, 0], PointBox[4944]}, 
           {RGBColor[1, 0, 0], PointBox[4945]}, 
           {RGBColor[0, 0, 1], PointBox[4946]}, 
           {RGBColor[1, 0, 0], PointBox[4947]}, 
           {RGBColor[1, 1, 0], PointBox[4948]}, 
           {RGBColor[1, 0, 0], PointBox[4949]}, 
           {RGBColor[1, 1, 0], PointBox[4950]}, 
           {RGBColor[1, 0, 0], PointBox[4951]}, 
           {RGBColor[1, 1, 0], PointBox[4952]}, 
           {RGBColor[1, 0, 0], PointBox[4953]}, 
           {RGBColor[0, 0, 1], PointBox[4954]}, 
           {RGBColor[0, 0, 1], PointBox[4955]}, 
           {RGBColor[0, 0, 1], PointBox[4956]}, 
           {RGBColor[1, 0, 0], PointBox[4957]}, 
           {RGBColor[1, 0, 0], PointBox[4958]}, 
           {RGBColor[1, 0, 0], PointBox[4959]}, 
           {RGBColor[1, 1, 0], PointBox[4960]}, 
           {RGBColor[1, 0, 0], PointBox[4961]}, 
           {RGBColor[1, 1, 0], PointBox[4962]}, 
           {RGBColor[1, 0, 0], PointBox[4963]}, 
           {RGBColor[1, 0, 0], PointBox[4964]}, 
           {RGBColor[1, 0, 0], PointBox[4965]}, 
           {RGBColor[0, 0, 1], PointBox[4966]}, 
           {RGBColor[1, 1, 0], PointBox[4967]}, 
           {RGBColor[1, 0, 0], PointBox[4968]}, 
           {RGBColor[0, 0, 1], PointBox[4969]}, 
           {RGBColor[1, 1, 0], PointBox[4970]}, 
           {RGBColor[1, 0, 0], PointBox[4971]}, 
           {RGBColor[1, 0, 0], PointBox[4972]}, 
           {RGBColor[0, 0, 1], PointBox[4973]}, 
           {RGBColor[0, 0, 1], PointBox[4974]}, 
           {RGBColor[0, 0, 1], PointBox[4975]}, 
           {RGBColor[1, 1, 0], PointBox[4976]}, 
           {RGBColor[1, 1, 0], PointBox[4977]}, 
           {RGBColor[0, 0, 1], PointBox[4978]}, 
           {RGBColor[0, 0, 1], PointBox[4979]}, 
           {RGBColor[0, 0, 1], PointBox[4980]}, 
           {RGBColor[0, 0, 1], PointBox[4981]}, 
           {RGBColor[0, 0, 1], PointBox[4982]}, 
           {RGBColor[0, 0, 1], PointBox[4983]}, 
           {RGBColor[1, 0, 0], PointBox[4984]}, 
           {RGBColor[1, 1, 0], PointBox[4985]}, 
           {RGBColor[1, 1, 0], PointBox[4986]}, 
           {RGBColor[0, 0, 1], PointBox[4987]}, 
           {RGBColor[1, 0, 0], PointBox[4988]}, 
           {RGBColor[0, 0, 1], PointBox[4989]}, 
           {RGBColor[0, 0, 1], PointBox[4990]}, 
           {RGBColor[1, 0, 0], PointBox[4991]}, 
           {RGBColor[0, 0, 1], PointBox[4992]}, 
           {RGBColor[1, 0, 0], PointBox[4993]}, 
           {RGBColor[0, 0, 1], PointBox[4994]}, 
           {RGBColor[1, 0, 0], PointBox[4995]}, 
           {RGBColor[1, 1, 0], PointBox[4996]}, 
           {RGBColor[1, 1, 0], PointBox[4997]}, 
           {RGBColor[1, 0, 0], PointBox[4998]}, 
           {RGBColor[0, 0, 1], PointBox[4999]}, 
           {RGBColor[1, 0, 0], PointBox[5000]}, 
           {RGBColor[0, 0, 1], PointBox[5001]}, 
           {RGBColor[0, 0, 1], PointBox[5002]}, 
           {RGBColor[1, 0, 0], PointBox[5003]}, 
           {RGBColor[1, 0, 0], PointBox[5004]}, 
           {RGBColor[1, 0, 0], PointBox[5005]}, 
           {RGBColor[1, 1, 0], PointBox[5006]}, 
           {RGBColor[1, 1, 0], PointBox[5007]}, 
           {RGBColor[1, 0, 0], PointBox[5008]}, 
           {RGBColor[1, 0, 0], PointBox[5009]}, 
           {RGBColor[1, 0, 0], PointBox[5010]}, 
           {RGBColor[1, 1, 0], PointBox[5011]}, 
           {RGBColor[1, 0, 0], PointBox[5012]}, 
           {RGBColor[0, 0, 1], PointBox[5013]}, 
           {RGBColor[1, 0, 0], PointBox[5014]}, 
           {RGBColor[0, 0, 1], PointBox[5015]}, 
           {RGBColor[1, 0, 0], PointBox[5016]}, 
           {RGBColor[0, 0, 1], PointBox[5017]}, 
           {RGBColor[0, 0, 1], PointBox[5018]}, 
           {RGBColor[1, 0, 0], PointBox[5019]}, 
           {RGBColor[1, 1, 0], PointBox[5020]}, 
           {RGBColor[1, 0, 0], PointBox[5021]}, 
           {RGBColor[0, 0, 1], PointBox[5022]}, 
           {RGBColor[1, 0, 0], PointBox[5023]}, 
           {RGBColor[0, 0, 1], PointBox[5024]}, 
           {RGBColor[0, 0, 1], PointBox[5025]}, 
           {RGBColor[0, 0, 1], PointBox[5026]}, 
           {RGBColor[1, 0, 0], PointBox[5027]}, 
           {RGBColor[0, 0, 1], PointBox[5028]}, 
           {RGBColor[0, 0, 1], PointBox[5029]}, 
           {RGBColor[0, 0, 1], PointBox[5030]}, 
           {RGBColor[1, 0, 0], PointBox[5031]}, 
           {RGBColor[1, 0, 0], PointBox[5032]}, 
           {RGBColor[1, 0, 0], PointBox[5033]}, 
           {RGBColor[0, 0, 1], PointBox[5034]}, 
           {RGBColor[1, 0, 0], PointBox[5035]}, 
           {RGBColor[1, 0, 0], PointBox[5036]}, 
           {RGBColor[1, 1, 0], PointBox[5037]}, 
           {RGBColor[1, 0, 0], PointBox[5038]}, 
           {RGBColor[1, 0, 0], PointBox[5039]}, 
           {RGBColor[1, 0, 0], PointBox[5040]}, 
           {RGBColor[0, 0, 1], PointBox[5041]}, 
           {RGBColor[0, 0, 1], PointBox[5042]}, 
           {RGBColor[1, 0, 0], PointBox[5043]}, 
           {RGBColor[1, 0, 0], PointBox[5044]}, 
           {RGBColor[0, 0, 1], PointBox[5045]}, 
           {RGBColor[0, 0, 1], PointBox[5046]}, 
           {RGBColor[1, 0, 0], PointBox[5047]}, 
           {RGBColor[1, 0, 0], PointBox[5048]}, 
           {RGBColor[1, 0, 0], PointBox[5049]}, 
           {RGBColor[1, 0, 0], PointBox[5050]}, 
           {RGBColor[0, 0, 1], PointBox[5051]}, 
           {RGBColor[0, 0, 1], PointBox[5052]}, 
           {RGBColor[0, 0, 1], PointBox[5053]}, 
           {RGBColor[1, 1, 0], PointBox[5054]}, 
           {RGBColor[1, 1, 0], PointBox[5055]}, 
           {RGBColor[0, 0, 1], PointBox[5056]}, 
           {RGBColor[1, 1, 0], PointBox[5057]}, 
           {RGBColor[1, 1, 0], PointBox[5058]}, 
           {RGBColor[0, 0, 1], PointBox[5059]}, 
           {RGBColor[0, 0, 1], PointBox[5060]}, 
           {RGBColor[1, 1, 0], PointBox[5061]}, 
           {RGBColor[1, 1, 0], PointBox[5062]}, 
           {RGBColor[0, 0, 1], PointBox[5063]}, 
           {RGBColor[1, 1, 0], PointBox[5064]}, 
           {RGBColor[1, 1, 0], PointBox[5065]}, 
           {RGBColor[0, 0, 1], PointBox[5066]}, 
           {RGBColor[0, 0, 1], PointBox[5067]}, 
           {RGBColor[0, 0, 1], PointBox[5068]}, 
           {RGBColor[1, 1, 0], PointBox[5069]}, 
           {RGBColor[0, 0, 1], PointBox[5070]}, 
           {RGBColor[1, 1, 0], PointBox[5071]}, 
           {RGBColor[0, 0, 1], PointBox[5072]}, 
           {RGBColor[0, 0, 1], PointBox[5073]}, 
           {RGBColor[1, 1, 0], PointBox[5074]}, 
           {RGBColor[0, 0, 1], PointBox[5075]}, 
           {RGBColor[0, 0, 1], PointBox[5076]}, 
           {RGBColor[1, 0, 0], PointBox[5077]}, 
           {RGBColor[0, 0, 1], PointBox[5078]}, 
           {RGBColor[1, 1, 0], PointBox[5079]}, 
           {RGBColor[0, 0, 1], PointBox[5080]}, 
           {RGBColor[1, 1, 0], PointBox[5081]}, 
           {RGBColor[1, 1, 0], PointBox[5082]}, 
           {RGBColor[1, 1, 0], PointBox[5083]}, 
           {RGBColor[0, 0, 1], PointBox[5084]}, 
           {RGBColor[1, 1, 0], PointBox[5085]}, 
           {RGBColor[1, 1, 0], PointBox[5086]}, 
           {RGBColor[0, 0, 1], PointBox[5087]}, 
           {RGBColor[1, 1, 0], PointBox[5088]}, 
           {RGBColor[0, 0, 1], PointBox[5089]}, 
           {RGBColor[1, 1, 0], PointBox[5090]}, 
           {RGBColor[1, 1, 0], PointBox[5091]}, 
           {RGBColor[0, 0, 1], PointBox[5092]}, 
           {RGBColor[0, 0, 1], PointBox[5093]}, 
           {RGBColor[1, 0, 0], PointBox[5094]}, 
           {RGBColor[1, 0, 0], PointBox[5095]}, 
           {RGBColor[1, 1, 0], PointBox[5096]}, 
           {RGBColor[0, 0, 1], PointBox[5097]}, 
           {RGBColor[1, 1, 0], PointBox[5098]}, 
           {RGBColor[1, 1, 0], PointBox[5099]}, 
           {RGBColor[1, 1, 0], PointBox[5100]}, 
           {RGBColor[1, 1, 0], PointBox[5101]}, 
           {RGBColor[1, 1, 0], PointBox[5102]}, 
           {RGBColor[0, 0, 1], PointBox[5103]}, 
           {RGBColor[1, 0, 0], PointBox[5104]}, 
           {RGBColor[1, 1, 0], PointBox[5105]}, 
           {RGBColor[1, 0, 0], PointBox[5106]}, 
           {RGBColor[0, 0, 1], PointBox[5107]}, 
           {RGBColor[1, 0, 0], PointBox[5108]}, 
           {RGBColor[1, 1, 0], PointBox[5109]}, 
           {RGBColor[1, 1, 0], PointBox[5110]}, 
           {RGBColor[1, 1, 0], PointBox[5111]}, 
           {RGBColor[1, 1, 0], PointBox[5112]}, 
           {RGBColor[1, 1, 0], PointBox[5113]}, 
           {RGBColor[1, 1, 0], PointBox[5114]}, 
           {RGBColor[1, 0, 0], PointBox[5115]}, 
           {RGBColor[1, 1, 0], PointBox[5116]}, 
           {RGBColor[1, 0, 0], PointBox[5117]}, 
           {RGBColor[1, 0, 0], PointBox[5118]}, 
           {RGBColor[0, 0, 1], PointBox[5119]}, 
           {RGBColor[0, 0, 1], PointBox[5120]}, 
           {RGBColor[0, 0, 1], PointBox[5121]}, 
           {RGBColor[1, 1, 0], PointBox[5122]}, 
           {RGBColor[0, 0, 1], PointBox[5123]}, 
           {RGBColor[1, 1, 0], PointBox[5124]}, 
           {RGBColor[0, 0, 1], PointBox[5125]}, 
           {RGBColor[0, 0, 1], PointBox[5126]}, 
           {RGBColor[1, 0, 0], PointBox[5127]}, 
           {RGBColor[0, 0, 1], PointBox[5128]}, 
           {RGBColor[1, 1, 0], PointBox[5129]}, 
           {RGBColor[1, 0, 0], PointBox[5130]}, 
           {RGBColor[0, 0, 1], PointBox[5131]}, 
           {RGBColor[0, 0, 1], PointBox[5132]}, 
           {RGBColor[1, 0, 0], PointBox[5133]}, 
           {RGBColor[0, 0, 1], PointBox[5134]}, 
           {RGBColor[1, 1, 0], PointBox[5135]}, 
           {RGBColor[0, 0, 1], PointBox[5136]}, 
           {RGBColor[1, 1, 0], PointBox[5137]}, 
           {RGBColor[0, 0, 1], PointBox[5138]}, 
           {RGBColor[1, 1, 0], PointBox[5139]}, 
           {RGBColor[1, 0, 0], PointBox[5140]}, 
           {RGBColor[0, 0, 1], PointBox[5141]}, 
           {RGBColor[0, 0, 1], PointBox[5142]}, 
           {RGBColor[1, 0, 0], PointBox[5143]}, 
           {RGBColor[1, 0, 0], PointBox[5144]}, 
           {RGBColor[1, 0, 0], PointBox[5145]}, 
           {RGBColor[1, 1, 0], PointBox[5146]}, 
           {RGBColor[1, 1, 0], PointBox[5147]}, 
           {RGBColor[0, 0, 1], PointBox[5148]}, 
           {RGBColor[1, 1, 0], PointBox[5149]}, 
           {RGBColor[1, 1, 0], PointBox[5150]}, 
           {RGBColor[1, 1, 0], PointBox[5151]}, 
           {RGBColor[1, 1, 0], PointBox[5152]}, 
           {RGBColor[0, 0, 1], PointBox[5153]}, 
           {RGBColor[0, 0, 1], PointBox[5154]}, 
           {RGBColor[1, 0, 0], PointBox[5155]}, 
           {RGBColor[1, 1, 0], PointBox[5156]}, 
           {RGBColor[1, 0, 0], PointBox[5157]}, 
           {RGBColor[0, 0, 1], PointBox[5158]}, 
           {RGBColor[1, 1, 0], PointBox[5159]}, 
           {RGBColor[1, 1, 0], PointBox[5160]}, 
           {RGBColor[0, 0, 1], PointBox[5161]}, 
           {RGBColor[1, 1, 0], PointBox[5162]}, 
           {RGBColor[1, 1, 0], PointBox[5163]}, 
           {RGBColor[1, 1, 0], PointBox[5164]}, 
           {RGBColor[1, 0, 0], PointBox[5165]}, 
           {RGBColor[0, 0, 1], PointBox[5166]}, 
           {RGBColor[1, 1, 0], PointBox[5167]}, 
           {RGBColor[0, 0, 1], PointBox[5168]}, 
           {RGBColor[0, 0, 1], PointBox[5169]}, 
           {RGBColor[1, 0, 0], PointBox[5170]}, 
           {RGBColor[1, 0, 0], PointBox[5171]}, 
           {RGBColor[1, 0, 0], PointBox[5172]}, 
           {RGBColor[1, 1, 0], PointBox[5173]}, 
           {RGBColor[1, 1, 0], PointBox[5174]}, 
           {RGBColor[1, 1, 0], PointBox[5175]}, 
           {RGBColor[1, 1, 0], PointBox[5176]}, 
           {RGBColor[1, 1, 0], PointBox[5177]}, 
           {RGBColor[1, 1, 0], PointBox[5178]}, 
           {RGBColor[1, 0, 0], PointBox[5179]}, 
           {RGBColor[1, 1, 0], PointBox[5180]}, 
           {RGBColor[1, 0, 0], PointBox[5181]}, 
           {RGBColor[1, 1, 0], PointBox[5182]}, 
           {RGBColor[1, 1, 0], PointBox[5183]}, 
           {RGBColor[1, 0, 0], PointBox[5184]}, 
           {RGBColor[0, 0, 1], PointBox[5185]}, 
           {RGBColor[1, 0, 0], PointBox[5186]}, 
           {RGBColor[1, 0, 0], PointBox[5187]}, 
           {RGBColor[1, 0, 0], PointBox[5188]}, 
           {RGBColor[1, 1, 0], PointBox[5189]}, 
           {RGBColor[1, 1, 0], PointBox[5190]}, 
           {RGBColor[1, 1, 0], PointBox[5191]}, 
           {RGBColor[1, 1, 0], PointBox[5192]}, 
           {RGBColor[1, 0, 0], PointBox[5193]}, 
           {RGBColor[1, 1, 0], PointBox[5194]}, 
           {RGBColor[1, 1, 0], PointBox[5195]}, 
           {RGBColor[1, 1, 0], PointBox[5196]}, 
           {RGBColor[1, 1, 0], PointBox[5197]}, 
           {RGBColor[1, 0, 0], PointBox[5198]}, 
           {RGBColor[1, 0, 0], PointBox[5199]}, 
           {RGBColor[1, 0, 0], PointBox[5200]}, 
           {RGBColor[1, 1, 0], PointBox[5201]}, 
           {RGBColor[1, 0, 0], PointBox[5202]}, 
           {RGBColor[1, 1, 0], PointBox[5203]}, 
           {RGBColor[1, 0, 0], PointBox[5204]}, 
           {RGBColor[1, 0, 0], PointBox[5205]}, 
           {RGBColor[1, 1, 0], PointBox[5206]}, 
           {RGBColor[1, 0, 0], PointBox[5207]}, 
           {RGBColor[1, 1, 0], PointBox[5208]}, 
           {RGBColor[1, 0, 0], PointBox[5209]}, 
           {RGBColor[1, 0, 0], PointBox[5210]}, 
           {RGBColor[1, 0, 0], PointBox[5211]}, 
           {RGBColor[1, 1, 0], PointBox[5212]}, 
           {RGBColor[0, 0, 1], PointBox[5213]}, 
           {RGBColor[1, 1, 0], PointBox[5214]}, 
           {RGBColor[1, 0, 0], PointBox[5215]}, 
           {RGBColor[1, 1, 0], PointBox[5216]}, 
           {RGBColor[1, 0, 0], PointBox[5217]}, 
           {RGBColor[0, 0, 1], PointBox[5218]}, 
           {RGBColor[0, 0, 1], PointBox[5219]}, 
           {RGBColor[1, 0, 0], PointBox[5220]}, 
           {RGBColor[1, 0, 0], PointBox[5221]}, 
           {RGBColor[1, 0, 0], PointBox[5222]}, 
           {RGBColor[0, 0, 1], PointBox[5223]}, 
           {RGBColor[1, 1, 0], PointBox[5224]}, 
           {RGBColor[0, 0, 1], PointBox[5225]}, 
           {RGBColor[1, 1, 0], PointBox[5226]}, 
           {RGBColor[1, 0, 0], PointBox[5227]}, 
           {RGBColor[1, 0, 0], PointBox[5228]}, 
           {RGBColor[1, 0, 0], PointBox[5229]}, 
           {RGBColor[0, 0, 1], PointBox[5230]}, 
           {RGBColor[1, 1, 0], PointBox[5231]}, 
           {RGBColor[1, 0, 0], PointBox[5232]}, 
           {RGBColor[0, 0, 1], PointBox[5233]}, 
           {RGBColor[1, 1, 0], PointBox[5234]}, 
           {RGBColor[1, 0, 0], PointBox[5235]}, 
           {RGBColor[1, 0, 0], PointBox[5236]}, 
           {RGBColor[1, 0, 0], PointBox[5237]}, 
           {RGBColor[0, 0, 1], PointBox[5238]}, 
           {RGBColor[0, 0, 1], PointBox[5239]}, 
           {RGBColor[0, 0, 1], PointBox[5240]}, 
           {RGBColor[1, 1, 0], PointBox[5241]}, 
           {RGBColor[1, 1, 0], PointBox[5242]}, 
           {RGBColor[0, 0, 1], PointBox[5243]}, 
           {RGBColor[0, 0, 1], PointBox[5244]}, 
           {RGBColor[0, 0, 1], PointBox[5245]}, 
           {RGBColor[0, 0, 1], PointBox[5246]}, 
           {RGBColor[1, 0, 0], PointBox[5247]}, 
           {RGBColor[0, 0, 1], PointBox[5248]}, 
           {RGBColor[1, 0, 0], PointBox[5249]}, 
           {RGBColor[0, 0, 1], PointBox[5250]}, 
           {RGBColor[1, 1, 0], PointBox[5251]}, 
           {RGBColor[1, 1, 0], PointBox[5252]}, 
           {RGBColor[0, 0, 1], PointBox[5253]}, 
           {RGBColor[1, 0, 0], PointBox[5254]}, 
           {RGBColor[0, 0, 1], PointBox[5255]}, 
           {RGBColor[0, 0, 1], PointBox[5256]}, 
           {RGBColor[1, 0, 0], PointBox[5257]}, 
           {RGBColor[1, 0, 0], PointBox[5258]}, 
           {RGBColor[1, 0, 0], PointBox[5259]}, 
           {RGBColor[0, 0, 1], PointBox[5260]}, 
           {RGBColor[1, 1, 0], PointBox[5261]}, 
           {RGBColor[1, 1, 0], PointBox[5262]}, 
           {RGBColor[1, 0, 0], PointBox[5263]}, 
           {RGBColor[0, 0, 1], PointBox[5264]}, 
           {RGBColor[1, 0, 0], PointBox[5265]}, 
           {RGBColor[0, 0, 1], PointBox[5266]}, 
           {RGBColor[1, 0, 0], PointBox[5267]}, 
           {RGBColor[1, 0, 0], PointBox[5268]}, 
           {RGBColor[1, 0, 0], PointBox[5269]}, 
           {RGBColor[1, 1, 0], PointBox[5270]}, 
           {RGBColor[1, 1, 0], PointBox[5271]}, 
           {RGBColor[1, 0, 0], PointBox[5272]}, 
           {RGBColor[1, 0, 0], PointBox[5273]}, 
           {RGBColor[1, 0, 0], PointBox[5274]}, 
           {RGBColor[1, 1, 0], PointBox[5275]}, 
           {RGBColor[1, 0, 0], PointBox[5276]}, 
           {RGBColor[1, 0, 0], PointBox[5277]}, 
           {RGBColor[1, 0, 0], PointBox[5278]}, 
           {RGBColor[0, 0, 1], PointBox[5279]}, 
           {RGBColor[0, 0, 1], PointBox[5280]}, 
           {RGBColor[0, 0, 1], PointBox[5281]}, 
           {RGBColor[0, 0, 1], PointBox[5282]}, 
           {RGBColor[0, 0, 1], PointBox[5283]}, 
           {RGBColor[1, 1, 0], PointBox[5284]}, 
           {RGBColor[1, 0, 0], PointBox[5285]}, 
           {RGBColor[0, 0, 1], PointBox[5286]}, 
           {RGBColor[1, 0, 0], PointBox[5287]}, 
           {RGBColor[0, 0, 1], PointBox[5288]}, 
           {RGBColor[0, 0, 1], PointBox[5289]}, 
           {RGBColor[0, 0, 1], PointBox[5290]}, 
           {RGBColor[1, 0, 0], PointBox[5291]}, 
           {RGBColor[0, 0, 1], PointBox[5292]}, 
           {RGBColor[0, 0, 1], PointBox[5293]}, 
           {RGBColor[1, 0, 0], PointBox[5294]}, 
           {RGBColor[1, 0, 0], PointBox[5295]}, 
           {RGBColor[1, 0, 0], PointBox[5296]}, 
           {RGBColor[0, 0, 1], PointBox[5297]}, 
           {RGBColor[0, 0, 1], PointBox[5298]}, 
           {RGBColor[1, 0, 0], PointBox[5299]}, 
           {RGBColor[0, 0, 1], PointBox[5300]}, 
           {RGBColor[1, 1, 0], PointBox[5301]}, 
           {RGBColor[1, 0, 0], PointBox[5302]}, 
           {RGBColor[1, 0, 0], PointBox[5303]}, 
           {RGBColor[1, 0, 0], PointBox[5304]}, 
           {RGBColor[0, 0, 1], PointBox[5305]}, 
           {RGBColor[0, 0, 1], PointBox[5306]}, 
           {RGBColor[1, 0, 0], PointBox[5307]}, 
           {RGBColor[1, 0, 0], PointBox[5308]}, 
           {RGBColor[0, 0, 1], PointBox[5309]}, 
           {RGBColor[0, 0, 1], PointBox[5310]}, 
           {RGBColor[0, 0, 1], PointBox[5311]}, 
           {RGBColor[0, 1, 0], PointBox[5312]}, 
           {RGBColor[1, 0, 0], PointBox[5313]}, 
           {RGBColor[1, 0, 0], PointBox[5314]}, 
           {RGBColor[1, 0, 0], PointBox[5315]}, 
           {RGBColor[1, 0, 0], PointBox[5316]}, 
           {RGBColor[0, 1, 0], PointBox[5317]}, 
           {RGBColor[0, 1, 0], PointBox[5318]}, 
           {RGBColor[0, 1, 0], PointBox[5319]}, 
           {RGBColor[1, 1, 0], PointBox[5320]}, 
           {RGBColor[1, 1, 0], PointBox[5321]}, 
           {RGBColor[1, 1, 0], PointBox[5322]}, 
           {RGBColor[1, 1, 0], PointBox[5323]}, 
           {RGBColor[0, 1, 0], PointBox[5324]}, 
           {RGBColor[1, 1, 0], PointBox[5325]}, 
           {RGBColor[1, 1, 0], PointBox[5326]}, 
           {RGBColor[1, 1, 0], PointBox[5327]}, 
           {RGBColor[1, 1, 0], PointBox[5328]}, 
           {RGBColor[0, 1, 0], PointBox[5329]}, 
           {RGBColor[0, 1, 0], PointBox[5330]}, 
           {RGBColor[0, 1, 0], PointBox[5331]}, 
           {RGBColor[1, 1, 0], PointBox[5332]}, 
           {RGBColor[0, 1, 0], PointBox[5333]}, 
           {RGBColor[1, 1, 0], PointBox[5334]}, 
           {RGBColor[0, 1, 0], PointBox[5335]}, 
           {RGBColor[0, 1, 0], PointBox[5336]}, 
           {RGBColor[1, 1, 0], PointBox[5337]}, 
           {RGBColor[0, 1, 0], PointBox[5338]}, 
           {RGBColor[1, 1, 0], PointBox[5339]}, 
           {RGBColor[0, 1, 0], PointBox[5340]}, 
           {RGBColor[0, 1, 0], PointBox[5341]}, 
           {RGBColor[0, 1, 0], PointBox[5342]}, 
           {RGBColor[1, 1, 0], PointBox[5343]}, 
           {RGBColor[1, 1, 0], PointBox[5344]}, 
           {RGBColor[0, 1, 0], PointBox[5345]}, 
           {RGBColor[1, 1, 0], PointBox[5346]}, 
           {RGBColor[1, 1, 0], PointBox[5347]}, 
           {RGBColor[0, 1, 0], PointBox[5348]}, 
           {RGBColor[0, 1, 0], PointBox[5349]}, 
           {RGBColor[0, 1, 0], PointBox[5350]}, 
           {RGBColor[1, 1, 0], PointBox[5351]}, 
           {RGBColor[0, 1, 0], PointBox[5352]}, 
           {RGBColor[0, 1, 0], PointBox[5353]}, 
           {RGBColor[0, 1, 0], PointBox[5354]}, 
           {RGBColor[1, 0, 0], PointBox[5355]}, 
           {RGBColor[0, 1, 0], PointBox[5356]}, 
           {RGBColor[1, 1, 0], PointBox[5357]}, 
           {RGBColor[0, 1, 0], PointBox[5358]}, 
           {RGBColor[1, 0, 0], PointBox[5359]}, 
           {RGBColor[1, 1, 0], PointBox[5360]}, 
           {RGBColor[1, 1, 0], PointBox[5361]}, 
           {RGBColor[1, 0, 0], PointBox[5362]}, 
           {RGBColor[1, 1, 0], PointBox[5363]}, 
           {RGBColor[1, 1, 0], PointBox[5364]}, 
           {RGBColor[1, 1, 0], PointBox[5365]}, 
           {RGBColor[0, 1, 0], PointBox[5366]}, 
           {RGBColor[1, 0, 0], PointBox[5367]}, 
           {RGBColor[1, 1, 0], PointBox[5368]}, 
           {RGBColor[1, 0, 0], PointBox[5369]}, 
           {RGBColor[1, 1, 0], PointBox[5370]}, 
           {RGBColor[0, 1, 0], PointBox[5371]}, 
           {RGBColor[1, 1, 0], PointBox[5372]}, 
           {RGBColor[0, 1, 0], PointBox[5373]}, 
           {RGBColor[1, 0, 0], PointBox[5374]}, 
           {RGBColor[1, 1, 0], PointBox[5375]}, 
           {RGBColor[1, 1, 0], PointBox[5376]}, 
           {RGBColor[1, 1, 0], PointBox[5377]}, 
           {RGBColor[0, 1, 0], PointBox[5378]}, 
           {RGBColor[1, 0, 0], PointBox[5379]}, 
           {RGBColor[1, 1, 0], PointBox[5380]}, 
           {RGBColor[1, 0, 0], PointBox[5381]}, 
           {RGBColor[0, 1, 0], PointBox[5382]}, 
           {RGBColor[0, 1, 0], PointBox[5383]}, 
           {RGBColor[0, 1, 0], PointBox[5384]}, 
           {RGBColor[1, 0, 0], PointBox[5385]}, 
           {RGBColor[1, 1, 0], PointBox[5386]}, 
           {RGBColor[1, 0, 0], PointBox[5387]}, 
           {RGBColor[1, 1, 0], PointBox[5388]}, 
           {RGBColor[0, 1, 0], PointBox[5389]}, 
           {RGBColor[0, 1, 0], PointBox[5390]}, 
           {RGBColor[1, 0, 0], PointBox[5391]}, 
           {RGBColor[0, 1, 0], PointBox[5392]}, 
           {RGBColor[1, 1, 0], PointBox[5393]}, 
           {RGBColor[1, 0, 0], PointBox[5394]}, 
           {RGBColor[0, 1, 0], PointBox[5395]}, 
           {RGBColor[1, 1, 0], PointBox[5396]}, 
           {RGBColor[0, 1, 0], PointBox[5397]}, 
           {RGBColor[0, 1, 0], PointBox[5398]}, 
           {RGBColor[0, 1, 0], PointBox[5399]}, 
           {RGBColor[1, 0, 0], PointBox[5400]}, 
           {RGBColor[1, 1, 0], PointBox[5401]}, 
           {RGBColor[0, 1, 0], PointBox[5402]}, 
           {RGBColor[0, 1, 0], PointBox[5403]}, 
           {RGBColor[1, 0, 0], PointBox[5404]}, 
           {RGBColor[0, 1, 0], PointBox[5405]}, 
           {RGBColor[0, 1, 0], PointBox[5406]}, 
           {RGBColor[1, 0, 0], PointBox[5407]}, 
           {RGBColor[1, 0, 0], PointBox[5408]}, 
           {RGBColor[0, 1, 0], PointBox[5409]}, 
           {RGBColor[1, 1, 0], PointBox[5410]}, 
           {RGBColor[1, 1, 0], PointBox[5411]}, 
           {RGBColor[1, 1, 0], PointBox[5412]}, 
           {RGBColor[1, 1, 0], PointBox[5413]}, 
           {RGBColor[1, 1, 0], PointBox[5414]}, 
           {RGBColor[1, 1, 0], PointBox[5415]}, 
           {RGBColor[0, 1, 0], PointBox[5416]}, 
           {RGBColor[1, 1, 0], PointBox[5417]}, 
           {RGBColor[0, 1, 0], PointBox[5418]}, 
           {RGBColor[1, 1, 0], PointBox[5419]}, 
           {RGBColor[1, 0, 0], PointBox[5420]}, 
           {RGBColor[1, 1, 0], PointBox[5421]}, 
           {RGBColor[1, 1, 0], PointBox[5422]}, 
           {RGBColor[1, 1, 0], PointBox[5423]}, 
           {RGBColor[1, 0, 0], PointBox[5424]}, 
           {RGBColor[0, 1, 0], PointBox[5425]}, 
           {RGBColor[0, 1, 0], PointBox[5426]}, 
           {RGBColor[1, 0, 0], PointBox[5427]}, 
           {RGBColor[0, 1, 0], PointBox[5428]}, 
           {RGBColor[1, 0, 0], PointBox[5429]}, 
           {RGBColor[1, 1, 0], PointBox[5430]}, 
           {RGBColor[1, 0, 0], PointBox[5431]}, 
           {RGBColor[1, 1, 0], PointBox[5432]}, 
           {RGBColor[1, 1, 0], PointBox[5433]}, 
           {RGBColor[1, 1, 0], PointBox[5434]}, 
           {RGBColor[1, 0, 0], PointBox[5435]}, 
           {RGBColor[1, 1, 0], PointBox[5436]}, 
           {RGBColor[1, 1, 0], PointBox[5437]}, 
           {RGBColor[1, 0, 0], PointBox[5438]}, 
           {RGBColor[1, 1, 0], PointBox[5439]}, 
           {RGBColor[1, 0, 0], PointBox[5440]}, 
           {RGBColor[1, 1, 0], PointBox[5441]}, 
           {RGBColor[1, 1, 0], PointBox[5442]}, 
           {RGBColor[1, 0, 0], PointBox[5443]}, 
           {RGBColor[1, 1, 0], PointBox[5444]}, 
           {RGBColor[0, 1, 0], PointBox[5445]}, 
           {RGBColor[1, 0, 0], PointBox[5446]}, 
           {RGBColor[1, 0, 0], PointBox[5447]}, 
           {RGBColor[1, 0, 0], PointBox[5448]}, 
           {RGBColor[1, 1, 0], PointBox[5449]}, 
           {RGBColor[1, 1, 0], PointBox[5450]}, 
           {RGBColor[1, 0, 0], PointBox[5451]}, 
           {RGBColor[1, 0, 0], PointBox[5452]}, 
           {RGBColor[1, 1, 0], PointBox[5453]}, 
           {RGBColor[1, 1, 0], PointBox[5454]}, 
           {RGBColor[1, 0, 0], PointBox[5455]}, 
           {RGBColor[1, 0, 0], PointBox[5456]}, 
           {RGBColor[1, 0, 0], PointBox[5457]}, 
           {RGBColor[1, 1, 0], PointBox[5458]}, 
           {RGBColor[1, 0, 0], PointBox[5459]}, 
           {RGBColor[1, 0, 0], PointBox[5460]}, 
           {RGBColor[1, 1, 0], PointBox[5461]}, 
           {RGBColor[1, 0, 0], PointBox[5462]}, 
           {RGBColor[0, 1, 0], PointBox[5463]}, 
           {RGBColor[1, 0, 0], PointBox[5464]}, 
           {RGBColor[1, 1, 0], PointBox[5465]}, 
           {RGBColor[1, 0, 0], PointBox[5466]}, 
           {RGBColor[1, 1, 0], PointBox[5467]}, 
           {RGBColor[1, 0, 0], PointBox[5468]}, 
           {RGBColor[1, 1, 0], PointBox[5469]}, 
           {RGBColor[1, 0, 0], PointBox[5470]}, 
           {RGBColor[0, 1, 0], PointBox[5471]}, 
           {RGBColor[1, 1, 0], PointBox[5472]}, 
           {RGBColor[0, 1, 0], PointBox[5473]}, 
           {RGBColor[1, 0, 0], PointBox[5474]}, 
           {RGBColor[1, 0, 0], PointBox[5475]}, 
           {RGBColor[1, 0, 0], PointBox[5476]}, 
           {RGBColor[1, 1, 0], PointBox[5477]}, 
           {RGBColor[1, 0, 0], PointBox[5478]}, 
           {RGBColor[1, 0, 0], PointBox[5479]}, 
           {RGBColor[1, 0, 0], PointBox[5480]}, 
           {RGBColor[0, 1, 0], PointBox[5481]}, 
           {RGBColor[1, 1, 0], PointBox[5482]}, 
           {RGBColor[1, 0, 0], PointBox[5483]}, 
           {RGBColor[1, 0, 0], PointBox[5484]}, 
           {RGBColor[0, 1, 0], PointBox[5485]}, 
           {RGBColor[0, 1, 0], PointBox[5486]}, 
           {RGBColor[0, 1, 0], PointBox[5487]}, 
           {RGBColor[1, 1, 0], PointBox[5488]}, 
           {RGBColor[1, 1, 0], PointBox[5489]}, 
           {RGBColor[0, 1, 0], PointBox[5490]}, 
           {RGBColor[0, 1, 0], PointBox[5491]}, 
           {RGBColor[0, 1, 0], PointBox[5492]}, 
           {RGBColor[1, 1, 0], PointBox[5493]}, 
           {RGBColor[0, 1, 0], PointBox[5494]}, 
           {RGBColor[0, 1, 0], PointBox[5495]}, 
           {RGBColor[1, 0, 0], PointBox[5496]}, 
           {RGBColor[1, 1, 0], PointBox[5497]}, 
           {RGBColor[0, 1, 0], PointBox[5498]}, 
           {RGBColor[1, 1, 0], PointBox[5499]}, 
           {RGBColor[1, 1, 0], PointBox[5500]}, 
           {RGBColor[0, 1, 0], PointBox[5501]}, 
           {RGBColor[1, 0, 0], PointBox[5502]}, 
           {RGBColor[0, 1, 0], PointBox[5503]}, 
           {RGBColor[0, 1, 0], PointBox[5504]}, 
           {RGBColor[0, 1, 0], PointBox[5505]}, 
           {RGBColor[0, 1, 0], PointBox[5506]}, 
           {RGBColor[1, 0, 0], PointBox[5507]}, 
           {RGBColor[0, 1, 0], PointBox[5508]}, 
           {RGBColor[1, 0, 0], PointBox[5509]}, 
           {RGBColor[0, 1, 0], PointBox[5510]}, 
           {RGBColor[1, 0, 0], PointBox[5511]}, 
           {RGBColor[1, 1, 0], PointBox[5512]}, 
           {RGBColor[1, 1, 0], PointBox[5513]}, 
           {RGBColor[1, 0, 0], PointBox[5514]}, 
           {RGBColor[0, 1, 0], PointBox[5515]}, 
           {RGBColor[1, 0, 0], PointBox[5516]}, 
           {RGBColor[1, 1, 0], PointBox[5517]}, 
           {RGBColor[0, 1, 0], PointBox[5518]}, 
           {RGBColor[1, 0, 0], PointBox[5519]}, 
           {RGBColor[1, 0, 0], PointBox[5520]}, 
           {RGBColor[1, 0, 0], PointBox[5521]}, 
           {RGBColor[1, 1, 0], PointBox[5522]}, 
           {RGBColor[0, 1, 0], PointBox[5523]}, 
           {RGBColor[1, 0, 0], PointBox[5524]}, 
           {RGBColor[1, 1, 0], PointBox[5525]}, 
           {RGBColor[1, 1, 0], PointBox[5526]}, 
           {RGBColor[1, 0, 0], PointBox[5527]}, 
           {RGBColor[1, 0, 0], PointBox[5528]}, 
           {RGBColor[1, 0, 0], PointBox[5529]}, 
           {RGBColor[0, 1, 0], PointBox[5530]}, 
           {RGBColor[1, 0, 0], PointBox[5531]}, 
           {RGBColor[1, 1, 0], PointBox[5532]}, 
           {RGBColor[1, 0, 0], PointBox[5533]}, 
           {RGBColor[0, 1, 0], PointBox[5534]}, 
           {RGBColor[1, 0, 0], PointBox[5535]}, 
           {RGBColor[0, 1, 0], PointBox[5536]}, 
           {RGBColor[1, 0, 0], PointBox[5537]}, 
           {RGBColor[0, 1, 0], PointBox[5538]}, 
           {RGBColor[0, 1, 0], PointBox[5539]}, 
           {RGBColor[1, 0, 0], PointBox[5540]}, 
           {RGBColor[1, 1, 0], PointBox[5541]}, 
           {RGBColor[1, 0, 0], PointBox[5542]}, 
           {RGBColor[0, 1, 0], PointBox[5543]}, 
           {RGBColor[1, 0, 0], PointBox[5544]}, 
           {RGBColor[0, 1, 0], PointBox[5545]}, 
           {RGBColor[0, 1, 0], PointBox[5546]}, 
           {RGBColor[0, 1, 0], PointBox[5547]}, 
           {RGBColor[1, 0, 0], PointBox[5548]}, 
           {RGBColor[0, 1, 0], PointBox[5549]}, 
           {RGBColor[1, 1, 0], PointBox[5550]}, 
           {RGBColor[0, 1, 0], PointBox[5551]}, 
           {RGBColor[1, 0, 0], PointBox[5552]}, 
           {RGBColor[1, 0, 0], PointBox[5553]}, 
           {RGBColor[1, 0, 0], PointBox[5554]}, 
           {RGBColor[0, 1, 0], PointBox[5555]}, 
           {RGBColor[1, 0, 0], PointBox[5556]}, 
           {RGBColor[0, 1, 0], PointBox[5557]}, 
           {RGBColor[1, 0, 0], PointBox[5558]}, 
           {RGBColor[1, 0, 0], PointBox[5559]}, 
           {RGBColor[0, 1, 0], PointBox[5560]}, 
           {RGBColor[1, 0, 0], PointBox[5561]}, 
           {RGBColor[1, 1, 0], PointBox[5562]}, 
           {RGBColor[1, 0, 0], PointBox[5563]}, 
           {RGBColor[1, 0, 0], PointBox[5564]}, 
           {RGBColor[1, 0, 0], PointBox[5565]}, 
           {RGBColor[0, 1, 0], PointBox[5566]}, 
           {RGBColor[0, 1, 0], PointBox[5567]}, 
           {RGBColor[1, 0, 0], PointBox[5568]}, 
           {RGBColor[0, 1, 0], PointBox[5569]}, 
           {RGBColor[0, 1, 0], PointBox[5570]}, 
           {RGBColor[1, 0, 0], PointBox[5571]}, 
           {RGBColor[1, 0, 0], PointBox[5572]}, 
           {RGBColor[0, 1, 0], PointBox[5573]}, 
           {RGBColor[0, 1, 0], PointBox[5574]}, 
           {RGBColor[1, 0, 0], PointBox[5575]}, 
           {RGBColor[0, 1, 0], PointBox[5576]}, 
           {RGBColor[0, 1, 0], PointBox[5577]}, 
           {RGBColor[1, 0, 0], PointBox[5578]}, 
           {RGBColor[1, 0, 0], PointBox[5579]}, 
           {RGBColor[1, 0, 0], PointBox[5580]}, 
           {RGBColor[1, 0, 0], PointBox[5581]}, 
           {RGBColor[0, 1, 0], PointBox[5582]}, 
           {RGBColor[0, 1, 0], PointBox[5583]}, 
           {RGBColor[0, 1, 0], PointBox[5584]}, 
           {RGBColor[1, 1, 0], PointBox[5585]}, 
           {RGBColor[1, 1, 0], PointBox[5586]}, 
           {RGBColor[0, 1, 0], PointBox[5587]}, 
           {RGBColor[1, 1, 0], PointBox[5588]}, 
           {RGBColor[1, 1, 0], PointBox[5589]}, 
           {RGBColor[0, 1, 0], PointBox[5590]}, 
           {RGBColor[0, 1, 0], PointBox[5591]}, 
           {RGBColor[1, 1, 0], PointBox[5592]}, 
           {RGBColor[1, 1, 0], PointBox[5593]}, 
           {RGBColor[0, 1, 0], PointBox[5594]}, 
           {RGBColor[1, 1, 0], PointBox[5595]}, 
           {RGBColor[1, 1, 0], PointBox[5596]}, 
           {RGBColor[0, 1, 0], PointBox[5597]}, 
           {RGBColor[0, 1, 0], PointBox[5598]}, 
           {RGBColor[0, 1, 0], PointBox[5599]}, 
           {RGBColor[1, 1, 0], PointBox[5600]}, 
           {RGBColor[0, 1, 0], PointBox[5601]}, 
           {RGBColor[1, 1, 0], PointBox[5602]}, 
           {RGBColor[0, 1, 0], PointBox[5603]}, 
           {RGBColor[0, 1, 0], PointBox[5604]}, 
           {RGBColor[1, 1, 0], PointBox[5605]}, 
           {RGBColor[0, 1, 0], PointBox[5606]}, 
           {RGBColor[1, 1, 0], PointBox[5607]}, 
           {RGBColor[1, 0, 0], PointBox[5608]}, 
           {RGBColor[0, 1, 0], PointBox[5609]}, 
           {RGBColor[0, 1, 0], PointBox[5610]}, 
           {RGBColor[0, 1, 0], PointBox[5611]}, 
           {RGBColor[1, 1, 0], PointBox[5612]}, 
           {RGBColor[1, 1, 0], PointBox[5613]}, 
           {RGBColor[0, 1, 0], PointBox[5614]}, 
           {RGBColor[0, 1, 0], PointBox[5615]}, 
           {RGBColor[1, 1, 0], PointBox[5616]}, 
           {RGBColor[1, 1, 0], PointBox[5617]}, 
           {RGBColor[0, 1, 0], PointBox[5618]}, 
           {RGBColor[0, 1, 0], PointBox[5619]}, 
           {RGBColor[0, 1, 0], PointBox[5620]}, 
           {RGBColor[1, 1, 0], PointBox[5621]}, 
           {RGBColor[0, 1, 0], PointBox[5622]}, 
           {RGBColor[0, 1, 0], PointBox[5623]}, 
           {RGBColor[0, 1, 0], PointBox[5624]}, 
           {RGBColor[1, 0, 0], PointBox[5625]}, 
           {RGBColor[1, 0, 0], PointBox[5626]}, 
           {RGBColor[1, 1, 0], PointBox[5627]}, 
           {RGBColor[0, 1, 0], PointBox[5628]}, 
           {RGBColor[1, 1, 0], PointBox[5629]}, 
           {RGBColor[1, 1, 0], PointBox[5630]}, 
           {RGBColor[1, 1, 0], PointBox[5631]}, 
           {RGBColor[1, 1, 0], PointBox[5632]}, 
           {RGBColor[1, 1, 0], PointBox[5633]}, 
           {RGBColor[0, 1, 0], PointBox[5634]}, 
           {RGBColor[1, 0, 0], PointBox[5635]}, 
           {RGBColor[1, 1, 0], PointBox[5636]}, 
           {RGBColor[1, 0, 0], PointBox[5637]}, 
           {RGBColor[1, 1, 0], PointBox[5638]}, 
           {RGBColor[1, 0, 0], PointBox[5639]}, 
           {RGBColor[1, 1, 0], PointBox[5640]}, 
           {RGBColor[0, 1, 0], PointBox[5641]}, 
           {RGBColor[1, 1, 0], PointBox[5642]}, 
           {RGBColor[1, 1, 0], PointBox[5643]}, 
           {RGBColor[1, 1, 0], PointBox[5644]}, 
           {RGBColor[0, 1, 0], PointBox[5645]}, 
           {RGBColor[1, 0, 0], PointBox[5646]}, 
           {RGBColor[1, 1, 0], PointBox[5647]}, 
           {RGBColor[1, 0, 0], PointBox[5648]}, 
           {RGBColor[1, 0, 0], PointBox[5649]}, 
           {RGBColor[0, 1, 0], PointBox[5650]}, 
           {RGBColor[0, 1, 0], PointBox[5651]}, 
           {RGBColor[0, 1, 0], PointBox[5652]}, 
           {RGBColor[1, 1, 0], PointBox[5653]}, 
           {RGBColor[0, 1, 0], PointBox[5654]}, 
           {RGBColor[1, 1, 0], PointBox[5655]}, 
           {RGBColor[0, 1, 0], PointBox[5656]}, 
           {RGBColor[0, 1, 0], PointBox[5657]}, 
           {RGBColor[1, 0, 0], PointBox[5658]}, 
           {RGBColor[0, 1, 0], PointBox[5659]}, 
           {RGBColor[1, 1, 0], PointBox[5660]}, 
           {RGBColor[1, 0, 0], PointBox[5661]}, 
           {RGBColor[0, 1, 0], PointBox[5662]}, 
           {RGBColor[1, 1, 0], PointBox[5663]}, 
           {RGBColor[1, 0, 0], PointBox[5664]}, 
           {RGBColor[0, 1, 0], PointBox[5665]}, 
           {RGBColor[0, 1, 0], PointBox[5666]}, 
           {RGBColor[0, 1, 0], PointBox[5667]}, 
           {RGBColor[1, 1, 0], PointBox[5668]}, 
           {RGBColor[0, 1, 0], PointBox[5669]}, 
           {RGBColor[0, 1, 0], PointBox[5670]}, 
           {RGBColor[1, 0, 0], PointBox[5671]}, 
           {RGBColor[0, 1, 0], PointBox[5672]}, 
           {RGBColor[0, 1, 0], PointBox[5673]}, 
           {RGBColor[1, 0, 0], PointBox[5674]}, 
           {RGBColor[1, 0, 0], PointBox[5675]}, 
           {RGBColor[1, 0, 0], PointBox[5676]}, 
           {RGBColor[1, 1, 0], PointBox[5677]}, 
           {RGBColor[1, 1, 0], PointBox[5678]}, 
           {RGBColor[0, 1, 0], PointBox[5679]}, 
           {RGBColor[1, 1, 0], PointBox[5680]}, 
           {RGBColor[1, 1, 0], PointBox[5681]}, 
           {RGBColor[1, 1, 0], PointBox[5682]}, 
           {RGBColor[1, 1, 0], PointBox[5683]}, 
           {RGBColor[0, 1, 0], PointBox[5684]}, 
           {RGBColor[1, 1, 0], PointBox[5685]}, 
           {RGBColor[1, 0, 0], PointBox[5686]}, 
           {RGBColor[1, 1, 0], PointBox[5687]}, 
           {RGBColor[1, 0, 0], PointBox[5688]}, 
           {RGBColor[0, 1, 0], PointBox[5689]}, 
           {RGBColor[1, 1, 0], PointBox[5690]}, 
           {RGBColor[1, 1, 0], PointBox[5691]}, 
           {RGBColor[1, 1, 0], PointBox[5692]}, 
           {RGBColor[1, 0, 0], PointBox[5693]}, 
           {RGBColor[0, 1, 0], PointBox[5694]}, 
           {RGBColor[0, 1, 0], PointBox[5695]}, 
           {RGBColor[1, 0, 0], PointBox[5696]}, 
           {RGBColor[1, 0, 0], PointBox[5697]}, 
           {RGBColor[1, 0, 0], PointBox[5698]}, 
           {RGBColor[1, 1, 0], PointBox[5699]}, 
           {RGBColor[1, 1, 0], PointBox[5700]}, 
           {RGBColor[1, 1, 0], PointBox[5701]}, 
           {RGBColor[1, 1, 0], PointBox[5702]}, 
           {RGBColor[1, 1, 0], PointBox[5703]}, 
           {RGBColor[1, 1, 0], PointBox[5704]}, 
           {RGBColor[1, 0, 0], PointBox[5705]}, 
           {RGBColor[1, 1, 0], PointBox[5706]}, 
           {RGBColor[1, 0, 0], PointBox[5707]}, 
           {RGBColor[1, 1, 0], PointBox[5708]}, 
           {RGBColor[1, 1, 0], PointBox[5709]}, 
           {RGBColor[1, 0, 0], PointBox[5710]}, 
           {RGBColor[1, 1, 0], PointBox[5711]}, 
           {RGBColor[1, 0, 0], PointBox[5712]}, 
           {RGBColor[1, 0, 0], PointBox[5713]}, 
           {RGBColor[1, 0, 0], PointBox[5714]}, 
           {RGBColor[1, 1, 0], PointBox[5715]}, 
           {RGBColor[1, 1, 0], PointBox[5716]}, 
           {RGBColor[1, 0, 0], PointBox[5717]}, 
           {RGBColor[1, 1, 0], PointBox[5718]}, 
           {RGBColor[1, 1, 0], PointBox[5719]}, 
           {RGBColor[1, 0, 0], PointBox[5720]}, 
           {RGBColor[1, 0, 0], PointBox[5721]}, 
           {RGBColor[1, 0, 0], PointBox[5722]}, 
           {RGBColor[1, 1, 0], PointBox[5723]}, 
           {RGBColor[1, 0, 0], PointBox[5724]}, 
           {RGBColor[1, 0, 0], PointBox[5725]}, 
           {RGBColor[1, 1, 0], PointBox[5726]}, 
           {RGBColor[1, 0, 0], PointBox[5727]}, 
           {RGBColor[1, 0, 0], PointBox[5728]}, 
           {RGBColor[1, 0, 0], PointBox[5729]}, 
           {RGBColor[1, 1, 0], PointBox[5730]}, 
           {RGBColor[0, 1, 0], PointBox[5731]}, 
           {RGBColor[1, 1, 0], PointBox[5732]}, 
           {RGBColor[1, 0, 0], PointBox[5733]}, 
           {RGBColor[1, 1, 0], PointBox[5734]}, 
           {RGBColor[1, 0, 0], PointBox[5735]}, 
           {RGBColor[0, 1, 0], PointBox[5736]}, 
           {RGBColor[1, 1, 0], PointBox[5737]}, 
           {RGBColor[1, 0, 0], PointBox[5738]}, 
           {RGBColor[1, 0, 0], PointBox[5739]}, 
           {RGBColor[1, 0, 0], PointBox[5740]}, 
           {RGBColor[0, 1, 0], PointBox[5741]}, 
           {RGBColor[1, 1, 0], PointBox[5742]}, 
           {RGBColor[1, 0, 0], PointBox[5743]}, 
           {RGBColor[1, 0, 0], PointBox[5744]}, 
           {RGBColor[1, 0, 0], PointBox[5745]}, 
           {RGBColor[0, 1, 0], PointBox[5746]}, 
           {RGBColor[1, 1, 0], PointBox[5747]}, 
           {RGBColor[1, 0, 0], PointBox[5748]}, 
           {RGBColor[1, 0, 0], PointBox[5749]}, 
           {RGBColor[1, 0, 0], PointBox[5750]}, 
           {RGBColor[0, 1, 0], PointBox[5751]}, 
           {RGBColor[0, 1, 0], PointBox[5752]}, 
           {RGBColor[0, 1, 0], PointBox[5753]}, 
           {RGBColor[1, 1, 0], PointBox[5754]}, 
           {RGBColor[1, 1, 0], PointBox[5755]}, 
           {RGBColor[0, 1, 0], PointBox[5756]}, 
           {RGBColor[0, 1, 0], PointBox[5757]}, 
           {RGBColor[0, 1, 0], PointBox[5758]}, 
           {RGBColor[1, 1, 0], PointBox[5759]}, 
           {RGBColor[1, 0, 0], PointBox[5760]}, 
           {RGBColor[0, 1, 0], PointBox[5761]}, 
           {RGBColor[1, 0, 0], PointBox[5762]}, 
           {RGBColor[0, 1, 0], PointBox[5763]}, 
           {RGBColor[1, 1, 0], PointBox[5764]}, 
           {RGBColor[0, 1, 0], PointBox[5765]}, 
           {RGBColor[0, 1, 0], PointBox[5766]}, 
           {RGBColor[1, 1, 0], PointBox[5767]}, 
           {RGBColor[1, 1, 0], PointBox[5768]}, 
           {RGBColor[0, 1, 0], PointBox[5769]}, 
           {RGBColor[1, 0, 0], PointBox[5770]}, 
           {RGBColor[0, 1, 0], PointBox[5771]}, 
           {RGBColor[0, 1, 0], PointBox[5772]}, 
           {RGBColor[0, 1, 0], PointBox[5773]}, 
           {RGBColor[0, 1, 0], PointBox[5774]}, 
           {RGBColor[1, 0, 0], PointBox[5775]}, 
           {RGBColor[1, 0, 0], PointBox[5776]}, 
           {RGBColor[1, 0, 0], PointBox[5777]}, 
           {RGBColor[0, 1, 0], PointBox[5778]}, 
           {RGBColor[1, 1, 0], PointBox[5779]}, 
           {RGBColor[1, 1, 0], PointBox[5780]}, 
           {RGBColor[1, 0, 0], PointBox[5781]}, 
           {RGBColor[0, 1, 0], PointBox[5782]}, 
           {RGBColor[1, 0, 0], PointBox[5783]}, 
           {RGBColor[1, 1, 0], PointBox[5784]}, 
           {RGBColor[1, 0, 0], PointBox[5785]}, 
           {RGBColor[1, 0, 0], PointBox[5786]}, 
           {RGBColor[1, 0, 0], PointBox[5787]}, 
           {RGBColor[1, 1, 0], PointBox[5788]}, 
           {RGBColor[0, 1, 0], PointBox[5789]}, 
           {RGBColor[1, 1, 0], PointBox[5790]}, 
           {RGBColor[1, 1, 0], PointBox[5791]}, 
           {RGBColor[1, 0, 0], PointBox[5792]}, 
           {RGBColor[1, 0, 0], PointBox[5793]}, 
           {RGBColor[1, 0, 0], PointBox[5794]}, 
           {RGBColor[0, 1, 0], PointBox[5795]}, 
           {RGBColor[1, 0, 0], PointBox[5796]}, 
           {RGBColor[1, 1, 0], PointBox[5797]}, 
           {RGBColor[1, 0, 0], PointBox[5798]}, 
           {RGBColor[1, 0, 0], PointBox[5799]}, 
           {RGBColor[1, 0, 0], PointBox[5800]}, 
           {RGBColor[0, 1, 0], PointBox[5801]}, 
           {RGBColor[0, 1, 0], PointBox[5802]}, 
           {RGBColor[0, 1, 0], PointBox[5803]}, 
           {RGBColor[0, 1, 0], PointBox[5804]}, 
           {RGBColor[0, 1, 0], PointBox[5805]}, 
           {RGBColor[1, 1, 0], PointBox[5806]}, 
           {RGBColor[1, 0, 0], PointBox[5807]}, 
           {RGBColor[0, 1, 0], PointBox[5808]}, 
           {RGBColor[1, 0, 0], PointBox[5809]}, 
           {RGBColor[0, 1, 0], PointBox[5810]}, 
           {RGBColor[0, 1, 0], PointBox[5811]}, 
           {RGBColor[0, 1, 0], PointBox[5812]}, 
           {RGBColor[1, 0, 0], PointBox[5813]}, 
           {RGBColor[0, 1, 0], PointBox[5814]}, 
           {RGBColor[1, 1, 0], PointBox[5815]}, 
           {RGBColor[1, 0, 0], PointBox[5816]}, 
           {RGBColor[1, 0, 0], PointBox[5817]}, 
           {RGBColor[1, 0, 0], PointBox[5818]}, 
           {RGBColor[0, 1, 0], PointBox[5819]}, 
           {RGBColor[0, 1, 0], PointBox[5820]}, 
           {RGBColor[0, 1, 0], PointBox[5821]}, 
           {RGBColor[0, 1, 0], PointBox[5822]}, 
           {RGBColor[1, 0, 0], PointBox[5823]}, 
           {RGBColor[0, 1, 0], PointBox[5824]}, 
           {RGBColor[0, 1, 0], PointBox[5825]}, 
           {RGBColor[0, 1, 0], PointBox[5826]}, 
           {RGBColor[1, 1, 0], PointBox[5827]}, 
           {RGBColor[1, 0, 0], PointBox[5828]}, 
           {RGBColor[1, 0, 0], PointBox[5829]}, 
           {RGBColor[1, 0, 0], PointBox[5830]}, 
           {RGBColor[0, 1, 0], PointBox[5831]}, 
           {RGBColor[0, 1, 0], PointBox[5832]}, 
           {RGBColor[1, 0, 0], PointBox[5833]}, 
           {RGBColor[0, 1, 0], PointBox[5834]}, 
           {RGBColor[0, 1, 0], PointBox[5835]}, 
           {RGBColor[1, 0, 0], PointBox[5836]}, 
           {RGBColor[1, 0, 0], PointBox[5837]}, 
           {RGBColor[0, 1, 0], PointBox[5838]}, 
           {RGBColor[0, 1, 0], PointBox[5839]}, 
           {RGBColor[1, 0, 0], PointBox[5840]}, 
           {RGBColor[0, 1, 0], PointBox[5841]}, 
           {RGBColor[1, 1, 0], PointBox[5842]}, 
           {RGBColor[1, 0, 0], PointBox[5843]}, 
           {RGBColor[1, 0, 0], PointBox[5844]}, 
           {RGBColor[1, 0, 0], PointBox[5845]}, 
           {RGBColor[1, 0, 0], PointBox[5846]}, 
           {RGBColor[0, 1, 0], PointBox[5847]}, 
           {RGBColor[0, 1, 0], PointBox[5848]}, 
           {RGBColor[0, 1, 0], PointBox[5849]}, 
           {RGBColor[1, 1, 0], PointBox[5850]}, 
           {RGBColor[1, 1, 0], PointBox[5851]}, 
           {RGBColor[1, 1, 0], PointBox[5852]}, 
           {RGBColor[1, 1, 0], PointBox[5853]}, 
           {RGBColor[0, 1, 0], PointBox[5854]}, 
           {RGBColor[1, 1, 0], PointBox[5855]}, 
           {RGBColor[1, 1, 0], PointBox[5856]}, 
           {RGBColor[1, 1, 0], PointBox[5857]}, 
           {RGBColor[1, 1, 0], PointBox[5858]}, 
           {RGBColor[0, 1, 0], PointBox[5859]}, 
           {RGBColor[0, 1, 0], PointBox[5860]}, 
           {RGBColor[0, 1, 0], PointBox[5861]}, 
           {RGBColor[1, 1, 0], PointBox[5862]}, 
           {RGBColor[0, 1, 0], PointBox[5863]}, 
           {RGBColor[1, 1, 0], PointBox[5864]}, 
           {RGBColor[0, 1, 0], PointBox[5865]}, 
           {RGBColor[0, 1, 0], PointBox[5866]}, 
           {RGBColor[1, 1, 0], PointBox[5867]}, 
           {RGBColor[0, 1, 0], PointBox[5868]}, 
           {RGBColor[0, 1, 0], PointBox[5869]}, 
           {RGBColor[0, 1, 0], PointBox[5870]}, 
           {RGBColor[0, 1, 0], PointBox[5871]}, 
           {RGBColor[1, 1, 0], PointBox[5872]}, 
           {RGBColor[1, 1, 0], PointBox[5873]}, 
           {RGBColor[1, 1, 0], PointBox[5874]}, 
           {RGBColor[1, 1, 0], PointBox[5875]}, 
           {RGBColor[1, 1, 0], PointBox[5876]}, 
           {RGBColor[1, 1, 0], PointBox[5877]}, 
           {RGBColor[0, 1, 0], PointBox[5878]}, 
           {RGBColor[1, 1, 0], PointBox[5879]}, 
           {RGBColor[0, 1, 0], PointBox[5880]}, 
           {RGBColor[1, 1, 0], PointBox[5881]}, 
           {RGBColor[1, 1, 0], PointBox[5882]}, 
           {RGBColor[0, 1, 0], PointBox[5883]}, 
           {RGBColor[0, 1, 0], PointBox[5884]}, 
           {RGBColor[1, 0, 0], PointBox[5885]}, 
           {RGBColor[0, 1, 0], PointBox[5886]}, 
           {RGBColor[1, 1, 0], PointBox[5887]}, 
           {RGBColor[0, 1, 0], PointBox[5888]}, 
           {RGBColor[1, 0, 0], PointBox[5889]}, 
           {RGBColor[1, 1, 0], PointBox[5890]}, 
           {RGBColor[1, 1, 0], PointBox[5891]}, 
           {RGBColor[1, 0, 0], PointBox[5892]}, 
           {RGBColor[1, 1, 0], PointBox[5893]}, 
           {RGBColor[1, 1, 0], PointBox[5894]}, 
           {RGBColor[1, 1, 0], PointBox[5895]}, 
           {RGBColor[0, 1, 0], PointBox[5896]}, 
           {RGBColor[1, 0, 0], PointBox[5897]}, 
           {RGBColor[1, 1, 0], PointBox[5898]}, 
           {RGBColor[1, 0, 0], PointBox[5899]}, 
           {RGBColor[0, 1, 0], PointBox[5900]}, 
           {RGBColor[0, 1, 0], PointBox[5901]}, 
           {RGBColor[1, 1, 0], PointBox[5902]}, 
           {RGBColor[1, 1, 0], PointBox[5903]}, 
           {RGBColor[1, 0, 0], PointBox[5904]}, 
           {RGBColor[1, 1, 0], PointBox[5905]}, 
           {RGBColor[1, 1, 0], PointBox[5906]}, 
           {RGBColor[1, 1, 0], PointBox[5907]}, 
           {RGBColor[1, 1, 0], PointBox[5908]}, 
           {RGBColor[1, 0, 0], PointBox[5909]}, 
           {RGBColor[1, 1, 0], PointBox[5910]}, 
           {RGBColor[1, 0, 0], PointBox[5911]}, 
           {RGBColor[0, 1, 0], PointBox[5912]}, 
           {RGBColor[0, 1, 0], PointBox[5913]}, 
           {RGBColor[0, 1, 0], PointBox[5914]}, 
           {RGBColor[1, 0, 0], PointBox[5915]}, 
           {RGBColor[1, 1, 0], PointBox[5916]}, 
           {RGBColor[1, 0, 0], PointBox[5917]}, 
           {RGBColor[1, 1, 0], PointBox[5918]}, 
           {RGBColor[0, 1, 0], PointBox[5919]}, 
           {RGBColor[0, 1, 0], PointBox[5920]}, 
           {RGBColor[1, 0, 0], PointBox[5921]}, 
           {RGBColor[0, 1, 0], PointBox[5922]}, 
           {RGBColor[1, 1, 0], PointBox[5923]}, 
           {RGBColor[1, 0, 0], PointBox[5924]}, 
           {RGBColor[0, 1, 0], PointBox[5925]}, 
           {RGBColor[0, 1, 0], PointBox[5926]}, 
           {RGBColor[0, 1, 0], PointBox[5927]}, 
           {RGBColor[0, 1, 0], PointBox[5928]}, 
           {RGBColor[1, 1, 0], PointBox[5929]}, 
           {RGBColor[1, 0, 0], PointBox[5930]}, 
           {RGBColor[1, 1, 0], PointBox[5931]}, 
           {RGBColor[0, 1, 0], PointBox[5932]}, 
           {RGBColor[1, 1, 0], PointBox[5933]}, 
           {RGBColor[1, 0, 0], PointBox[5934]}, 
           {RGBColor[0, 1, 0], PointBox[5935]}, 
           {RGBColor[0, 1, 0], PointBox[5936]}, 
           {RGBColor[1, 0, 0], PointBox[5937]}, 
           {RGBColor[1, 0, 0], PointBox[5938]}, 
           {RGBColor[0, 1, 0], PointBox[5939]}, 
           {RGBColor[1, 1, 0], PointBox[5940]}, 
           {RGBColor[1, 1, 0], PointBox[5941]}, 
           {RGBColor[1, 1, 0], PointBox[5942]}, 
           {RGBColor[1, 1, 0], PointBox[5943]}, 
           {RGBColor[1, 1, 0], PointBox[5944]}, 
           {RGBColor[1, 1, 0], PointBox[5945]}, 
           {RGBColor[0, 1, 0], PointBox[5946]}, 
           {RGBColor[0, 1, 0], PointBox[5947]}, 
           {RGBColor[0, 1, 0], PointBox[5948]}, 
           {RGBColor[1, 1, 0], PointBox[5949]}, 
           {RGBColor[1, 0, 0], PointBox[5950]}, 
           {RGBColor[1, 1, 0], PointBox[5951]}, 
           {RGBColor[1, 1, 0], PointBox[5952]}, 
           {RGBColor[1, 1, 0], PointBox[5953]}, 
           {RGBColor[1, 1, 0], PointBox[5954]}, 
           {RGBColor[1, 1, 0], PointBox[5955]}, 
           {RGBColor[1, 0, 0], PointBox[5956]}, 
           {RGBColor[0, 1, 0], PointBox[5957]}, 
           {RGBColor[1, 1, 0], PointBox[5958]}, 
           {RGBColor[0, 1, 0], PointBox[5959]}, 
           {RGBColor[0, 1, 0], PointBox[5960]}, 
           {RGBColor[1, 0, 0], PointBox[5961]}, 
           {RGBColor[0, 1, 0], PointBox[5962]}, 
           {RGBColor[1, 0, 0], PointBox[5963]}, 
           {RGBColor[1, 1, 0], PointBox[5964]}, 
           {RGBColor[1, 0, 0], PointBox[5965]}, 
           {RGBColor[1, 1, 0], PointBox[5966]}, 
           {RGBColor[1, 1, 0], PointBox[5967]}, 
           {RGBColor[1, 1, 0], PointBox[5968]}, 
           {RGBColor[1, 0, 0], PointBox[5969]}, 
           {RGBColor[1, 1, 0], PointBox[5970]}, 
           {RGBColor[1, 1, 0], PointBox[5971]}, 
           {RGBColor[1, 0, 0], PointBox[5972]}, 
           {RGBColor[1, 1, 0], PointBox[5973]}, 
           {RGBColor[1, 0, 0], PointBox[5974]}, 
           {RGBColor[1, 1, 0], PointBox[5975]}, 
           {RGBColor[1, 1, 0], PointBox[5976]}, 
           {RGBColor[1, 0, 0], PointBox[5977]}, 
           {RGBColor[0, 1, 0], PointBox[5978]}, 
           {RGBColor[0, 1, 0], PointBox[5979]}, 
           {RGBColor[1, 0, 0], PointBox[5980]}, 
           {RGBColor[1, 0, 0], PointBox[5981]}, 
           {RGBColor[1, 0, 0], PointBox[5982]}, 
           {RGBColor[1, 1, 0], PointBox[5983]}, 
           {RGBColor[1, 1, 0], PointBox[5984]}, 
           {RGBColor[1, 0, 0], PointBox[5985]}, 
           {RGBColor[1, 1, 0], PointBox[5986]}, 
           {RGBColor[1, 1, 0], PointBox[5987]}, 
           {RGBColor[1, 0, 0], PointBox[5988]}, 
           {RGBColor[1, 0, 0], PointBox[5989]}, 
           {RGBColor[1, 1, 0], PointBox[5990]}, 
           {RGBColor[1, 1, 0], PointBox[5991]}, 
           {RGBColor[1, 0, 0], PointBox[5992]}, 
           {RGBColor[1, 1, 0], PointBox[5993]}, 
           {RGBColor[1, 1, 0], PointBox[5994]}, 
           {RGBColor[1, 0, 0], PointBox[5995]}, 
           {RGBColor[1, 0, 0], PointBox[5996]}, 
           {RGBColor[1, 0, 0], PointBox[5997]}, 
           {RGBColor[1, 1, 0], PointBox[5998]}, 
           {RGBColor[1, 0, 0], PointBox[5999]}, 
           {RGBColor[1, 1, 0], PointBox[6000]}, 
           {RGBColor[1, 0, 0], PointBox[6001]}, 
           {RGBColor[1, 0, 0], PointBox[6002]}, 
           {RGBColor[1, 1, 0], PointBox[6003]}, 
           {RGBColor[1, 0, 0], PointBox[6004]}, 
           {RGBColor[1, 1, 0], PointBox[6005]}, 
           {RGBColor[1, 0, 0], PointBox[6006]}, 
           {RGBColor[0, 1, 0], PointBox[6007]}, 
           {RGBColor[1, 0, 0], PointBox[6008]}, 
           {RGBColor[1, 1, 0], PointBox[6009]}, 
           {RGBColor[1, 0, 0], PointBox[6010]}, 
           {RGBColor[1, 1, 0], PointBox[6011]}, 
           {RGBColor[1, 0, 0], PointBox[6012]}, 
           {RGBColor[1, 1, 0], PointBox[6013]}, 
           {RGBColor[1, 0, 0], PointBox[6014]}, 
           {RGBColor[0, 1, 0], PointBox[6015]}, 
           {RGBColor[0, 1, 0], PointBox[6016]}, 
           {RGBColor[0, 1, 0], PointBox[6017]}, 
           {RGBColor[1, 0, 0], PointBox[6018]}, 
           {RGBColor[1, 0, 0], PointBox[6019]}, 
           {RGBColor[1, 0, 0], PointBox[6020]}, 
           {RGBColor[1, 1, 0], PointBox[6021]}, 
           {RGBColor[1, 0, 0], PointBox[6022]}, 
           {RGBColor[1, 1, 0], PointBox[6023]}, 
           {RGBColor[1, 0, 0], PointBox[6024]}, 
           {RGBColor[1, 0, 0], PointBox[6025]}, 
           {RGBColor[1, 0, 0], PointBox[6026]}, 
           {RGBColor[0, 1, 0], PointBox[6027]}, 
           {RGBColor[1, 1, 0], PointBox[6028]}, 
           {RGBColor[1, 0, 0], PointBox[6029]}, 
           {RGBColor[0, 1, 0], PointBox[6030]}, 
           {RGBColor[1, 1, 0], PointBox[6031]}, 
           {RGBColor[1, 0, 0], PointBox[6032]}, 
           {RGBColor[1, 0, 0], PointBox[6033]}, 
           {RGBColor[0, 1, 0], PointBox[6034]}, 
           {RGBColor[0, 1, 0], PointBox[6035]}, 
           {RGBColor[0, 1, 0], PointBox[6036]}, 
           {RGBColor[1, 1, 0], PointBox[6037]}, 
           {RGBColor[1, 1, 0], PointBox[6038]}, 
           {RGBColor[0, 1, 0], PointBox[6039]}, 
           {RGBColor[0, 1, 0], PointBox[6040]}, 
           {RGBColor[0, 1, 0], PointBox[6041]}, 
           {RGBColor[0, 1, 0], PointBox[6042]}, 
           {RGBColor[0, 1, 0], PointBox[6043]}, 
           {RGBColor[0, 1, 0], PointBox[6044]}, 
           {RGBColor[1, 0, 0], PointBox[6045]}, 
           {RGBColor[1, 1, 0], PointBox[6046]}, 
           {RGBColor[1, 1, 0], PointBox[6047]}, 
           {RGBColor[0, 1, 0], PointBox[6048]}, 
           {RGBColor[1, 0, 0], PointBox[6049]}, 
           {RGBColor[0, 1, 0], PointBox[6050]}, 
           {RGBColor[0, 1, 0], PointBox[6051]}, 
           {RGBColor[1, 0, 0], PointBox[6052]}, 
           {RGBColor[0, 1, 0], PointBox[6053]}, 
           {RGBColor[1, 0, 0], PointBox[6054]}, 
           {RGBColor[0, 1, 0], PointBox[6055]}, 
           {RGBColor[1, 0, 0], PointBox[6056]}, 
           {RGBColor[1, 1, 0], PointBox[6057]}, 
           {RGBColor[1, 1, 0], PointBox[6058]}, 
           {RGBColor[1, 0, 0], PointBox[6059]}, 
           {RGBColor[0, 1, 0], PointBox[6060]}, 
           {RGBColor[1, 0, 0], PointBox[6061]}, 
           {RGBColor[0, 1, 0], PointBox[6062]}, 
           {RGBColor[0, 1, 0], PointBox[6063]}, 
           {RGBColor[1, 0, 0], PointBox[6064]}, 
           {RGBColor[1, 0, 0], PointBox[6065]}, 
           {RGBColor[1, 0, 0], PointBox[6066]}, 
           {RGBColor[1, 1, 0], PointBox[6067]}, 
           {RGBColor[1, 1, 0], PointBox[6068]}, 
           {RGBColor[1, 0, 0], PointBox[6069]}, 
           {RGBColor[1, 0, 0], PointBox[6070]}, 
           {RGBColor[1, 0, 0], PointBox[6071]}, 
           {RGBColor[1, 1, 0], PointBox[6072]}, 
           {RGBColor[1, 0, 0], PointBox[6073]}, 
           {RGBColor[0, 1, 0], PointBox[6074]}, 
           {RGBColor[1, 0, 0], PointBox[6075]}, 
           {RGBColor[0, 1, 0], PointBox[6076]}, 
           {RGBColor[1, 0, 0], PointBox[6077]}, 
           {RGBColor[0, 1, 0], PointBox[6078]}, 
           {RGBColor[0, 1, 0], PointBox[6079]}, 
           {RGBColor[1, 0, 0], PointBox[6080]}, 
           {RGBColor[1, 1, 0], PointBox[6081]}, 
           {RGBColor[1, 0, 0], PointBox[6082]}, 
           {RGBColor[0, 1, 0], PointBox[6083]}, 
           {RGBColor[1, 0, 0], PointBox[6084]}, 
           {RGBColor[0, 1, 0], PointBox[6085]}, 
           {RGBColor[0, 1, 0], PointBox[6086]}, 
           {RGBColor[0, 1, 0], PointBox[6087]}, 
           {RGBColor[1, 0, 0], PointBox[6088]}, 
           {RGBColor[0, 1, 0], PointBox[6089]}, 
           {RGBColor[0, 1, 0], PointBox[6090]}, 
           {RGBColor[0, 1, 0], PointBox[6091]}, 
           {RGBColor[1, 0, 0], PointBox[6092]}, 
           {RGBColor[1, 0, 0], PointBox[6093]}, 
           {RGBColor[1, 0, 0], PointBox[6094]}, 
           {RGBColor[0, 1, 0], PointBox[6095]}, 
           {RGBColor[1, 0, 0], PointBox[6096]}, 
           {RGBColor[1, 0, 0], PointBox[6097]}, 
           {RGBColor[1, 1, 0], PointBox[6098]}, 
           {RGBColor[1, 0, 0], PointBox[6099]}, 
           {RGBColor[1, 0, 0], PointBox[6100]}, 
           {RGBColor[1, 0, 0], PointBox[6101]}, 
           {RGBColor[0, 1, 0], PointBox[6102]}, 
           {RGBColor[0, 1, 0], PointBox[6103]}, 
           {RGBColor[1, 0, 0], PointBox[6104]}, 
           {RGBColor[1, 0, 0], PointBox[6105]}, 
           {RGBColor[0, 1, 0], PointBox[6106]}, 
           {RGBColor[0, 1, 0], PointBox[6107]}, 
           {RGBColor[1, 0, 0], PointBox[6108]}, 
           {RGBColor[1, 0, 0], PointBox[6109]}, 
           {RGBColor[1, 0, 0], PointBox[6110]}, 
           {RGBColor[1, 0, 0], PointBox[6111]}, 
           {RGBColor[0, 1, 0], PointBox[6112]}, 
           {RGBColor[0, 1, 0], PointBox[6113]}, 
           {RGBColor[0, 1, 0], PointBox[6114]}, 
           {RGBColor[1, 1, 0], PointBox[6115]}, 
           {RGBColor[1, 1, 0], PointBox[6116]}, 
           {RGBColor[0, 1, 0], PointBox[6117]}, 
           {RGBColor[1, 1, 0], PointBox[6118]}, 
           {RGBColor[1, 1, 0], PointBox[6119]}, 
           {RGBColor[0, 1, 0], PointBox[6120]}, 
           {RGBColor[0, 1, 0], PointBox[6121]}, 
           {RGBColor[1, 1, 0], PointBox[6122]}, 
           {RGBColor[1, 1, 0], PointBox[6123]}, 
           {RGBColor[0, 1, 0], PointBox[6124]}, 
           {RGBColor[1, 1, 0], PointBox[6125]}, 
           {RGBColor[1, 1, 0], PointBox[6126]}, 
           {RGBColor[0, 1, 0], PointBox[6127]}, 
           {RGBColor[0, 1, 0], PointBox[6128]}, 
           {RGBColor[0, 1, 0], PointBox[6129]}, 
           {RGBColor[1, 1, 0], PointBox[6130]}, 
           {RGBColor[0, 1, 0], PointBox[6131]}, 
           {RGBColor[1, 1, 0], PointBox[6132]}, 
           {RGBColor[0, 1, 0], PointBox[6133]}, 
           {RGBColor[0, 1, 0], PointBox[6134]}, 
           {RGBColor[1, 1, 0], PointBox[6135]}, 
           {RGBColor[0, 1, 0], PointBox[6136]}, 
           {RGBColor[0, 1, 0], PointBox[6137]}, 
           {RGBColor[1, 0, 0], PointBox[6138]}, 
           {RGBColor[0, 1, 0], PointBox[6139]}, 
           {RGBColor[1, 1, 0], PointBox[6140]}, 
           {RGBColor[0, 1, 0], PointBox[6141]}, 
           {RGBColor[1, 1, 0], PointBox[6142]}, 
           {RGBColor[1, 1, 0], PointBox[6143]}, 
           {RGBColor[1, 1, 0], PointBox[6144]}, 
           {RGBColor[0, 1, 0], PointBox[6145]}, 
           {RGBColor[1, 1, 0], PointBox[6146]}, 
           {RGBColor[1, 1, 0], PointBox[6147]}, 
           {RGBColor[0, 1, 0], PointBox[6148]}, 
           {RGBColor[1, 1, 0], PointBox[6149]}, 
           {RGBColor[0, 1, 0], PointBox[6150]}, 
           {RGBColor[1, 1, 0], PointBox[6151]}, 
           {RGBColor[1, 1, 0], PointBox[6152]}, 
           {RGBColor[0, 1, 0], PointBox[6153]}, 
           {RGBColor[0, 1, 0], PointBox[6154]}, 
           {RGBColor[1, 0, 0], PointBox[6155]}, 
           {RGBColor[1, 0, 0], PointBox[6156]}, 
           {RGBColor[1, 1, 0], PointBox[6157]}, 
           {RGBColor[0, 1, 0], PointBox[6158]}, 
           {RGBColor[1, 1, 0], PointBox[6159]}, 
           {RGBColor[1, 1, 0], PointBox[6160]}, 
           {RGBColor[1, 1, 0], PointBox[6161]}, 
           {RGBColor[1, 1, 0], PointBox[6162]}, 
           {RGBColor[1, 1, 0], PointBox[6163]}, 
           {RGBColor[0, 1, 0], PointBox[6164]}, 
           {RGBColor[1, 0, 0], PointBox[6165]}, 
           {RGBColor[1, 1, 0], PointBox[6166]}, 
           {RGBColor[1, 0, 0], PointBox[6167]}, 
           {RGBColor[0, 1, 0], PointBox[6168]}, 
           {RGBColor[1, 0, 0], PointBox[6169]}, 
           {RGBColor[1, 1, 0], PointBox[6170]}, 
           {RGBColor[1, 1, 0], PointBox[6171]}, 
           {RGBColor[1, 1, 0], PointBox[6172]}, 
           {RGBColor[1, 1, 0], PointBox[6173]}, 
           {RGBColor[1, 1, 0], PointBox[6174]}, 
           {RGBColor[1, 1, 0], PointBox[6175]}, 
           {RGBColor[1, 0, 0], PointBox[6176]}, 
           {RGBColor[1, 1, 0], PointBox[6177]}, 
           {RGBColor[1, 0, 0], PointBox[6178]}, 
           {RGBColor[1, 0, 0], PointBox[6179]}, 
           {RGBColor[0, 1, 0], PointBox[6180]}, 
           {RGBColor[0, 1, 0], PointBox[6181]}, 
           {RGBColor[0, 1, 0], PointBox[6182]}, 
           {RGBColor[1, 1, 0], PointBox[6183]}, 
           {RGBColor[0, 1, 0], PointBox[6184]}, 
           {RGBColor[1, 1, 0], PointBox[6185]}, 
           {RGBColor[0, 1, 0], PointBox[6186]}, 
           {RGBColor[0, 1, 0], PointBox[6187]}, 
           {RGBColor[1, 0, 0], PointBox[6188]}, 
           {RGBColor[0, 1, 0], PointBox[6189]}, 
           {RGBColor[1, 1, 0], PointBox[6190]}, 
           {RGBColor[1, 0, 0], PointBox[6191]}, 
           {RGBColor[0, 1, 0], PointBox[6192]}, 
           {RGBColor[0, 1, 0], PointBox[6193]}, 
           {RGBColor[1, 0, 0], PointBox[6194]}, 
           {RGBColor[0, 1, 0], PointBox[6195]}, 
           {RGBColor[1, 1, 0], PointBox[6196]}, 
           {RGBColor[0, 1, 0], PointBox[6197]}, 
           {RGBColor[1, 1, 0], PointBox[6198]}, 
           {RGBColor[0, 1, 0], PointBox[6199]}, 
           {RGBColor[1, 1, 0], PointBox[6200]}, 
           {RGBColor[1, 0, 0], PointBox[6201]}, 
           {RGBColor[0, 1, 0], PointBox[6202]}, 
           {RGBColor[0, 1, 0], PointBox[6203]}, 
           {RGBColor[1, 0, 0], PointBox[6204]}, 
           {RGBColor[1, 0, 0], PointBox[6205]}, 
           {RGBColor[1, 0, 0], PointBox[6206]}, 
           {RGBColor[1, 1, 0], PointBox[6207]}, 
           {RGBColor[1, 1, 0], PointBox[6208]}, 
           {RGBColor[0, 1, 0], PointBox[6209]}, 
           {RGBColor[1, 1, 0], PointBox[6210]}, 
           {RGBColor[1, 1, 0], PointBox[6211]}, 
           {RGBColor[1, 1, 0], PointBox[6212]}, 
           {RGBColor[1, 1, 0], PointBox[6213]}, 
           {RGBColor[0, 1, 0], PointBox[6214]}, 
           {RGBColor[0, 1, 0], PointBox[6215]}, 
           {RGBColor[1, 0, 0], PointBox[6216]}, 
           {RGBColor[1, 1, 0], PointBox[6217]}, 
           {RGBColor[1, 0, 0], PointBox[6218]}, 
           {RGBColor[0, 1, 0], PointBox[6219]}, 
           {RGBColor[1, 1, 0], PointBox[6220]}, 
           {RGBColor[1, 1, 0], PointBox[6221]}, 
           {RGBColor[0, 1, 0], PointBox[6222]}, 
           {RGBColor[1, 1, 0], PointBox[6223]}, 
           {RGBColor[1, 1, 0], PointBox[6224]}, 
           {RGBColor[1, 1, 0], PointBox[6225]}, 
           {RGBColor[1, 0, 0], PointBox[6226]}, 
           {RGBColor[0, 1, 0], PointBox[6227]}, 
           {RGBColor[1, 1, 0], PointBox[6228]}, 
           {RGBColor[0, 1, 0], PointBox[6229]}, 
           {RGBColor[0, 1, 0], PointBox[6230]}, 
           {RGBColor[1, 0, 0], PointBox[6231]}, 
           {RGBColor[1, 0, 0], PointBox[6232]}, 
           {RGBColor[1, 0, 0], PointBox[6233]}, 
           {RGBColor[1, 1, 0], PointBox[6234]}, 
           {RGBColor[1, 1, 0], PointBox[6235]}, 
           {RGBColor[1, 1, 0], PointBox[6236]}, 
           {RGBColor[1, 1, 0], PointBox[6237]}, 
           {RGBColor[1, 1, 0], PointBox[6238]}, 
           {RGBColor[1, 1, 0], PointBox[6239]}, 
           {RGBColor[1, 0, 0], PointBox[6240]}, 
           {RGBColor[1, 1, 0], PointBox[6241]}, 
           {RGBColor[1, 0, 0], PointBox[6242]}, 
           {RGBColor[1, 1, 0], PointBox[6243]}, 
           {RGBColor[1, 1, 0], PointBox[6244]}, 
           {RGBColor[1, 0, 0], PointBox[6245]}, 
           {RGBColor[0, 1, 0], PointBox[6246]}, 
           {RGBColor[1, 0, 0], PointBox[6247]}, 
           {RGBColor[1, 0, 0], PointBox[6248]}, 
           {RGBColor[1, 0, 0], PointBox[6249]}, 
           {RGBColor[1, 1, 0], PointBox[6250]}, 
           {RGBColor[1, 1, 0], PointBox[6251]}, 
           {RGBColor[1, 1, 0], PointBox[6252]}, 
           {RGBColor[1, 1, 0], PointBox[6253]}, 
           {RGBColor[1, 0, 0], PointBox[6254]}, 
           {RGBColor[1, 1, 0], PointBox[6255]}, 
           {RGBColor[1, 1, 0], PointBox[6256]}, 
           {RGBColor[1, 1, 0], PointBox[6257]}, 
           {RGBColor[1, 1, 0], PointBox[6258]}, 
           {RGBColor[1, 0, 0], PointBox[6259]}, 
           {RGBColor[1, 0, 0], PointBox[6260]}, 
           {RGBColor[1, 0, 0], PointBox[6261]}, 
           {RGBColor[1, 1, 0], PointBox[6262]}, 
           {RGBColor[1, 0, 0], PointBox[6263]}, 
           {RGBColor[1, 1, 0], PointBox[6264]}, 
           {RGBColor[1, 0, 0], PointBox[6265]}, 
           {RGBColor[1, 0, 0], PointBox[6266]}, 
           {RGBColor[1, 1, 0], PointBox[6267]}, 
           {RGBColor[1, 0, 0], PointBox[6268]}, 
           {RGBColor[1, 1, 0], PointBox[6269]}, 
           {RGBColor[1, 0, 0], PointBox[6270]}, 
           {RGBColor[1, 0, 0], PointBox[6271]}, 
           {RGBColor[1, 0, 0], PointBox[6272]}, 
           {RGBColor[1, 1, 0], PointBox[6273]}, 
           {RGBColor[0, 1, 0], PointBox[6274]}, 
           {RGBColor[1, 1, 0], PointBox[6275]}, 
           {RGBColor[1, 0, 0], PointBox[6276]}, 
           {RGBColor[1, 1, 0], PointBox[6277]}, 
           {RGBColor[1, 0, 0], PointBox[6278]}, 
           {RGBColor[0, 1, 0], PointBox[6279]}, 
           {RGBColor[0, 1, 0], PointBox[6280]}, 
           {RGBColor[1, 0, 0], PointBox[6281]}, 
           {RGBColor[1, 0, 0], PointBox[6282]}, 
           {RGBColor[1, 0, 0], PointBox[6283]}, 
           {RGBColor[0, 1, 0], PointBox[6284]}, 
           {RGBColor[1, 1, 0], PointBox[6285]}, 
           {RGBColor[0, 1, 0], PointBox[6286]}, 
           {RGBColor[1, 1, 0], PointBox[6287]}, 
           {RGBColor[1, 0, 0], PointBox[6288]}, 
           {RGBColor[1, 0, 0], PointBox[6289]}, 
           {RGBColor[1, 0, 0], PointBox[6290]}, 
           {RGBColor[0, 1, 0], PointBox[6291]}, 
           {RGBColor[1, 1, 0], PointBox[6292]}, 
           {RGBColor[1, 0, 0], PointBox[6293]}, 
           {RGBColor[0, 1, 0], PointBox[6294]}, 
           {RGBColor[1, 1, 0], PointBox[6295]}, 
           {RGBColor[1, 0, 0], PointBox[6296]}, 
           {RGBColor[1, 0, 0], PointBox[6297]}, 
           {RGBColor[1, 0, 0], PointBox[6298]}, 
           {RGBColor[0, 1, 0], PointBox[6299]}, 
           {RGBColor[0, 1, 0], PointBox[6300]}, 
           {RGBColor[0, 1, 0], PointBox[6301]}, 
           {RGBColor[1, 1, 0], PointBox[6302]}, 
           {RGBColor[1, 1, 0], PointBox[6303]}, 
           {RGBColor[0, 1, 0], PointBox[6304]}, 
           {RGBColor[0, 1, 0], PointBox[6305]}, 
           {RGBColor[0, 1, 0], PointBox[6306]}, 
           {RGBColor[0, 1, 0], PointBox[6307]}, 
           {RGBColor[1, 0, 0], PointBox[6308]}, 
           {RGBColor[0, 1, 0], PointBox[6309]}, 
           {RGBColor[1, 0, 0], PointBox[6310]}, 
           {RGBColor[0, 1, 0], PointBox[6311]}, 
           {RGBColor[1, 1, 0], PointBox[6312]}, 
           {RGBColor[1, 1, 0], PointBox[6313]}, 
           {RGBColor[0, 1, 0], PointBox[6314]}, 
           {RGBColor[1, 0, 0], PointBox[6315]}, 
           {RGBColor[0, 1, 0], PointBox[6316]}, 
           {RGBColor[0, 1, 0], PointBox[6317]}, 
           {RGBColor[1, 0, 0], PointBox[6318]}, 
           {RGBColor[1, 0, 0], PointBox[6319]}, 
           {RGBColor[1, 0, 0], PointBox[6320]}, 
           {RGBColor[0, 1, 0], PointBox[6321]}, 
           {RGBColor[1, 1, 0], PointBox[6322]}, 
           {RGBColor[1, 1, 0], PointBox[6323]}, 
           {RGBColor[1, 0, 0], PointBox[6324]}, 
           {RGBColor[0, 1, 0], PointBox[6325]}, 
           {RGBColor[1, 0, 0], PointBox[6326]}, 
           {RGBColor[0, 1, 0], PointBox[6327]}, 
           {RGBColor[1, 0, 0], PointBox[6328]}, 
           {RGBColor[1, 0, 0], PointBox[6329]}, 
           {RGBColor[1, 0, 0], PointBox[6330]}, 
           {RGBColor[1, 1, 0], PointBox[6331]}, 
           {RGBColor[1, 1, 0], PointBox[6332]}, 
           {RGBColor[1, 0, 0], PointBox[6333]}, 
           {RGBColor[1, 0, 0], PointBox[6334]}, 
           {RGBColor[1, 0, 0], PointBox[6335]}, 
           {RGBColor[1, 1, 0], PointBox[6336]}, 
           {RGBColor[1, 0, 0], PointBox[6337]}, 
           {RGBColor[1, 0, 0], PointBox[6338]}, 
           {RGBColor[1, 0, 0], PointBox[6339]}, 
           {RGBColor[0, 1, 0], PointBox[6340]}, 
           {RGBColor[0, 1, 0], PointBox[6341]}, 
           {RGBColor[0, 1, 0], PointBox[6342]}, 
           {RGBColor[0, 1, 0], PointBox[6343]}, 
           {RGBColor[0, 1, 0], PointBox[6344]}, 
           {RGBColor[1, 1, 0], PointBox[6345]}, 
           {RGBColor[1, 0, 0], PointBox[6346]}, 
           {RGBColor[0, 1, 0], PointBox[6347]}, 
           {RGBColor[1, 0, 0], PointBox[6348]}, 
           {RGBColor[0, 1, 0], PointBox[6349]}, 
           {RGBColor[0, 1, 0], PointBox[6350]}, 
           {RGBColor[0, 1, 0], PointBox[6351]}, 
           {RGBColor[1, 0, 0], PointBox[6352]}, 
           {RGBColor[0, 1, 0], PointBox[6353]}, 
           {RGBColor[0, 1, 0], PointBox[6354]}, 
           {RGBColor[1, 0, 0], PointBox[6355]}, 
           {RGBColor[1, 0, 0], PointBox[6356]}, 
           {RGBColor[1, 0, 0], PointBox[6357]}, 
           {RGBColor[0, 1, 0], PointBox[6358]}, 
           {RGBColor[0, 1, 0], PointBox[6359]}, 
           {RGBColor[1, 0, 0], PointBox[6360]}, 
           {RGBColor[0, 1, 0], PointBox[6361]}, 
           {RGBColor[1, 1, 0], PointBox[6362]}, 
           {RGBColor[1, 0, 0], PointBox[6363]}, 
           {RGBColor[1, 0, 0], PointBox[6364]}, 
           {RGBColor[1, 0, 0], PointBox[6365]}, 
           {RGBColor[0, 1, 0], PointBox[6366]}, 
           {RGBColor[0, 1, 0], PointBox[6367]}, 
           {RGBColor[1, 0, 0], PointBox[6368]}, 
           {RGBColor[1, 0, 0], PointBox[6369]}, 
           {RGBColor[0, 1, 0], PointBox[6370]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{1306., Automatic},
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"8184", ",", "\"11-11-4-4-4-4-4-4-4-4-4-4-4\""}], "}"}], 
      TraditionalForm],
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXm4nVV5/705mScgJAgIwnGoxim2WpvaahtnnKhTW+tU1Ko4a9QYERUQ
DCCTKCCDgAwSFAijB8IYZAiDQkAJiJjgFCrUVvn15eXih/vd37XWZ+/vc5/1
7HNA+75/vL/rysl+xvWs8R6+97Be965P7fHej7zrUx94z7tGX7nsXR/f4wPv
+eToKz62rHdpyhadzrQde39PG+3ouNvp8F+396/636j+01P/5/7/uf//h/t7
pgszVnS7K3WwrrtyiR5Y1129JJ2vXLm6M5Le2GHd6iUr870l+ZmVS1brzrp8
2p3w/rjf1St7deisW9Jdwq++1bs3Y92Slatrzx69R3ePcbW3C+9PFx6/orty
Zb8KK1aUpnX7TcrVXd283v9tdsHvu915+v1Dd3QLXf9Dd9MW6Xx0dFPpmT9s
2mI039oiPzK6xSbd+UM+7U54f9zvplG19g9bdLfgt/TM4/+wxeim2rMPT+1O
Tb24emWz9xmVeM4o6XdlZ4XfO7q7xx6xT62T/yVd+Ei/k22uVL8Y5sfvu/Pm
9Xth48bR3LndfqfmHtvUvN7/bQ7CQ93u9Cu63aWHdMeWXdFd2vtdsyydj42t
Wb94cXfDokXdQ9YsG8v3luVnxpatuWLp0u4hy5Z10+9E98f9rhm7YmnvG8u6
y/hdv7i7eMOi7qJDlo2tqT1738LuwjSSm0abM4CZEc+ZKfod7Wz0ew93p04d
N4Kpv1cvac6A5rlGddwo2oXd0oVnN4d1ZacxxOPWxui8uCaqzQoL4aHu9Ol0
9frly8c2bN7c6/5uf+jysPS6Lg1tud7/bQ717t3uiZ2n57rvOtbNQ7NmrDmU
DHE8Z8h7v+vHFi/fsHTRZu7d1124cNxQpDZt2qI5lM3z/vDQ/X1SJhK2csUQ
crZbHJJXpAtPGlDnSKq6lWEY7TSGZNyKGZseV0q1i8Lq2L174on/kKuza3ds
XO/lV9csa/Z+87zfo/RYn5SJhI1ubJCzvVZOHUbGju5RqNhP1nEvTBd2bmVr
rTQ+kpvuuE5b3x1bvKG7dFG/Ayvz8UP58/2OoiP61GHN2PrFY8s3LFq6uU8h
HhhdOIwyPLzX1PF0u9JBTdr9wtgxS9KFabUZ1eMwenb+OEbXSnPjwuwOFuST
0ne2nfl/P/SwjvQ79X//70e2/t3/elDnO22+73c6X3T3L+7T+Z/ffvdm/f7l
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
xpbG226aCslD3e709d1uj+90F+1usJaOs6vgdDoKMg+3yL5bs5AR8GlnDetR
0YfMh9NTc3WP9el+Z57+yYOoMlWdVkuEWCjuXLc8KAOET18nSdzLr02NaRct
RRNvaVInYSqP9pZkl6KBaiyVxpFfXYLnkRpvLLFhfUsZKjvbN9igW7hM/ev7
LgfHE4/wb1rxBsd5YjxZStMLb/rxPXxeyo7CEmKgbwy60rOnfOorZysRlY6H
pbbw0GwClX0fw366qNwdO0dXCvZBh+NpGQ6QwfNvwN92mLLm4rD7LriSOCLZ
t/MaHepxMWEAulpclsMmw0zgUYljpru7vd6LKWuhrDErBXWBHNA0KHmk1JCa
mIkiajh8zwE8zhGGOKd+hRPOHJ+qWO5FK1c0NLb9jAnua0yQFE5jnV0fWTqy
9pA1a/p0JoODL2H9oJhFJgdFjCHwsel0NRuuqnSd/9Wtd/4SIUNN1YqAOuu3
NxvviPap2g5EHgam5yXkwAR9aiCDfuiU827wZCdsKdGm55d8CKqGHH3EcykK
/YtQrKgHesJwqfqKwGcRKSFjBAoTjU3MbZdh68/dgmssUhvUeHAp3lo1gM73
5yJjT6EJ8zzpgZt83PINMq/RSpNz6yzVRx8/R+Wkk0UGON6e01TIkhK2Qyr7
6XA9tABoI7OT3IIJOrhr029cPWYhuweaW08QgWhj7d5kWGXnT8grX7xu/cbB
TJzquFsLr+zP+ZJdA3yVWpYEia6iOJEeSbXc0pM0wGnVF+i7yENxPDI33bbN
p+S+zEDHKZd9xbIYuvsBBOb2lTdi6Oyoqcjn1BbSSkbjlqr63Y/u/x3YnsdR
T4R99ncGyp34l0qnprRxOtPz2vQQ11stPy3DfsRdWKKSUl9RkmirXoqVhgi5
Qhml6Qhk6rtyr4KQ6nm5ZnkmqDZXwTphexZ0O6bI0KQQiER36POCc93DjFQb
njojbmNG9+q6dm6gW6K/Roy5irFX1K9k44YNRee9uCeNep/EguohXPHNWenB
maObXZXsu+Lva8xz73Q8Y2Dxmpcmq2/NWhjzv5KwhipGeBOOKGTEe0l+hfQO
6rOjvvLvhtOpbEF3qNtEnCEs6Jvy6IlpLybacyGmxYgBhXpGSY/g3DUXi2g9
dRhUE/FLh33rck12D51RTn7lII7s0NVSfVvp9OCLmrny4/WFA21VXRRaikzr
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
IsY1HYPv9P0YXCOquaLaGta3kjaMprO+mmAMMB3M84aCjPlgiNt1fZYSrXec
vu6Lon2p6ZaNK68NqR+sjptpleWkd51/XeqRZT3SuD7r+Pdek+5ZwIOguBJd
skGQolw9rzC8VViZ8ZEqRGY6MptKtZ/jH3pMFDVET0smcdWlEjswmFsR08qy
WIG6FoYss2oM82/kfOfB45E5kuPgeN6K3m4E6I2hxShWK1QPA89FFi2lZki6
u8kZTf1z6YK6tOQDNBP3C5i9C1lG9RYVRAzvmi4pQlaKHVnQ+Dla+yPXq1BR
VN/EvXIvTQyDw99Xf/SauxS7bOizCaElzHEz6RASlnAIZbLiRvfROjZGye5Q
NLbIXJc+4O3j1AR9w1NIqFIVBBBwDRT0ZVYlk+Y+B5PPb6Vrn/iNb3/fjh0g
eu7E7Rdc732fPt3KjxwDPHjj+zQSG3SKEscjdOg1POkv3bjbKOXDUcxnQRv6
uSsfmxRB2B6kOby9jMHgNe8semIuc2dHrpl7Sp7dmM3YzSMZTtmDs0T4cDLS
u6eFtz5LugdLb2l80TuwkLVClTGrtMyD9KLo7VHemhqp6d+93bGSKzwoiWPk
Fv3rysHA3y62+F+Ugz2xsdhatZx0LYIkv1tl2y/QJLVdJ4eYRg2vSREDLJYZ
a71uIex79K67v0GgZQVskHmUx8TArZqw3/Wu83ayUEyTPFRJoMtbavBq/6hX
cUQYlcA8u+X15VEQuN6tEjrmGyrsM3SdlhRB1yXuaNlAZxkO58+L4LgMjfXP
A53l0fkkduueGbkVASLqhJmUnnLfP36PjQBlJ9C5T1xRIe2IWdcKDStgB9Qj
ln79LuLFJtl9PPJDK1OFYxc9XyhY53nEB7qsjotzlEa5kB4eTMATSKeJiwBn
QsdFhR0p4nLOL6EfjebHWCUOK+N3z2cYjVBRF6WnevP8NJyxhormmV6D2nHG
tTR1c8t1N9LL+k3AOGlPykr83uPPumZif10wQeSeu2iS/XrUUc5ljVLfUS7N
7NeUjyk0jvpznvrysYogLvfzWDWFWFmFzTb2/Ww2WdTHqH5wnGiCZ9WVQvlx
F2eAO/fdXJAK7JhotlsDC3vKZqV2+lkXpWRgJE8C1q3CxZ0g7kEqRjHr5x3T
Ok2h1fMZX7r/O3oZJyV7p4p0001RoRkDyoi2oAhUTu80kd84ctNlBvTS1xi5
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
PX12AbR5+Y/McTrTVpENUFv3ufiZZ785f3aoLcigFMCDQW0dM1f/quA5gpO6
1q+9/X13+jWSz7pLJM5Rh+zs9KjGiMruuEDfqW0mZLT9jNMuvi7zj1TKlpmp
nvn7c179dttpHqNz5KRk2XHkMvJz6xGkxuWVzXnkEbGJV43UnZwukLltL3j+
S99KazHFkq91BQSMaGre97aBHTjboyg+TxIBLJFJfIWbYgi7nJyWySQ5J9vz
r4ypv6ebebMe/Pvkdo89xsDvCYGu3L8ui1sFSiiq5iU5usTJeu4WppzjAn+P
GNUKAZ956kVvdZf/wXzbJ60bhT99zf730Y9yuKmvRs7tRPPY5o6EjsUSj8m6
Fh3FKGUorfTd2m+fdutPLeN4kXMuFhgKWEa7ZDkpzFLUg/Dm02UtMXytL4ie
Czo+1FUemfgq7OhYSXv6YmhmfRhCYR5luDEKQH55Bi+StKbHXQFA15ADURC8
JsM9EEzK4AD5tVoIs43adazrYr9n9A2JI9OlOU+Pr9eMuDKR9G/tO2mlZZrW
0bv0//aAMVfkrrPup9gwe1SOrnJNQMcq+eHZJjjLJBNxPGuUF5Lfm0Ya/S7n
jel3GqUSFfGc1435rIflofOSv3vRfpZwn0k6R1yjWMYUZhBxmNSBMtpCbATy
kzdiEHPKWHgUo9w3DDwWrweUyKQYrLmO/ee3vOOjDMd5SZH4xHOSpJpPQ5Z3
79gd0RX628ktjE/bV3VO7+x3BzlLTVBr/cGc3hI8NMOpSygCoSpPGDf3KIxY
fSUveP27cKH0NcyrzMg3Zwda7ZhIl+yipHW8N9UB3zE4UvZJmritR2VJrqyG
NY9n4mO6oYGICKrz13eUt+JS4J69e2eLcoRUvZxxhSnjdQY8k7ZXCPCtJ5A0
ZsE5kT/JGzle0dNKsInp0r4LbJTZNiM1Pl/LHcy4EsnIZQkem8jZHbVWSXWq
pwqyhD1cXtOk7YRgCzoN2YeuOk0krOi3CnaBgfwRHIWPqdpH00/zALm/9XcD
vL9L3N2w9kxbk3OvLq6D+bh7s78Zn6c8wEnY7ihHt4yKkYIh2Tn+GUMof6Lt
GDdrwL7maadfwTXV3No42DkPlEtKBsNHXtZcyP528l99RI30SPQ5O/96VvY2
3znKDiuUzsRA5GManC1lsp+GKSdErRqg2+eIz9EA3Yw1dn7RF5lYStsp7jWP
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
J1fDGwo+TGNDPriD+cRf95TT3qBHiOVM6FIvVpu+/L9h8Dp8Z03rpHpF1ph+
WajJFsiWeWXwJvFUtvmxXPvUk5k2zb3s9kyeUI8/7J8+9+Xaez1NJQzQtrxe
asQwItQVJ734dTcX1dUJAjRkHzFYTbPTT7vkOlZ2egdgNWCptKcIxNCtCraP
acqVgcnUi5f87dlXoS1kPb4hbROo7vcdMWXot6wk14S1av9kQTSHkLrEG/78
+f9gG8Wugku80TmnXHhA+9n6LvWY7vi3F7z+HQbOW2rJBk7GrM8e6CW/VzGZ
js0DsB7hmZr3FpsvHQScayrZcFwAzo0Gvm2e1uIGWe8623JuQJ8fv513dH0+
nyqaAhf/bbW14CjlyBVuYFxSzS0HidFw7/eqp5/xRjlMGEA551dncR9UpUaq
KKPPiXKzM+8xc66mZBGZ5vr3ry+8/F3GGAfEKzBp088NYLtDFMj1dm8GYbW/
HJVTgpCCrfAXUt8oiZ1p4rshbs/lHvmJz9ydlVGdkJJqam0ZMU82eit2O1uP
W3r+N+NjEUwHdqglImPTw53UiPnWyqxlxNX9zX1//raPfk4rOaPIHUoegGVW
oezBue6adUDbpepU+cIV+koZosoU3TR1l14Uux/gjCv0YuU/rAtonBDE1sNp
cQa24OvFv5yTxbBG+V+3WB5S7gZfDG397aOhYZn66Js9jVNhf98dxSA93BGe
7iNzhaX1fBmH456YUkfPTzkoHAV5tXcXMxn2QqabY69cwBoUqBAuUEHnSsiI
x+B31KZxEOvub0fqvIqXzON50OBYlMNZkcPS1zZiHM9zq33wHzUlsgMvP9Q8
WnimkbvzUL/9laiJSr9nloovvLru763jhJyvqc2uJ7lml5YyixXqZNzpXkr1
wpLkfF0fI27FtA18hi1WlWhem9Cl6zfqgv9shuB6TdGpXPvTNziZbp6nVhbR
yAnWelUx6Jm6+luqPkxFvZJeh5VFTaBmHPFTaHqtyTSFyzlNWoar2YfuDm7k
EI3PulXOBAD3PMf50iYllAbS0Bfa+DuImiRr7tmrQlPrn5e/OZtNcinBL29d
Nuv9Y7qRbLfDzy4V0/Tt2socHmG37zyw2xHfarWhbIrBXoY7SFNedXsRf8Uf
Ueug2u05577mJllzFA2zKDEWUU4dT+DRoqlZYn68jsCScz0He66+yk3gtU52
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
aBNadXy/UifWJCzESwI1/bOvnCSOc6yO+dJkq8Rz1Sg8S1vJbUlxcZmfXBTP
zjRl/UwmRtWyfUnXsiq/EzsF0BLQABUINRJQQdcVX8SZtLqf/Fuu26nvWyWn
wergqClWk10jFQw3GqO0vbYnzwmD8q0yQgNY1v3cSmVCHFj64uw4K9b4kzAO
GaeaKuVfAxKOi12biPO88hpgGdOYMeV9Qx6t5BRcdeOHeROwKr3nOFG/qTr5
+99P6+u855z36pvcH+6p8/Sa0vQt8Xv709aXAUyOvzOjCbNo3v9Wemf/eY+f
9KuDRI8k9SgEN2Inq6aX78K8p3PSFKOHNsSEc7y+V7nbQxgV8hi53IRsEtfP
1IdOBHhWZVvltMPMq520Q9W1S62H9X0Y3E8P5uBphcbsiVyKmxcvbTgZcvFF
n616XrjJczQLi9XdVNaanW5VfFhwuZybL5upV4oFc+RZHREhfESy4PgC4YSL
1oMhE9vV/bZH0nUe8YlacIv57VCM5+B6ODtlp04982XXeyHsuku77VPOJ5Zl
EYyiJ6u9qZwGR7sQNjKF1jLsFNB1TO48dm7nwmdtPQ36sjepExv9+Ig9Ok9l
upct2Jrxu3e6OrusydFSJfXrWeftd8CpMfqgL3y52son1cGnCKpfU7eVSlbI
Gbzyr866UnESvn7C+vb1tDNe1km6eTFDX5Scx7uIxL2h1s6CzDYQniv4xhs/
+eVX3qoKLf7GamDtuo3j1VQ4eIUtE36kv7IAoytzWEQedSqzA6Wcju7IMj+K
yDPSN2jY1OvuzjR1t5u5qim0Qe7jrD09cmmgMpX3sMy4fy6jRpSSsnacQ7nu
taLQ1SG4K++rgD1N4ZITmWqW7VyuK+t52jq/L5fbsKF+YrlsOVBfz36gfkjX
YjwlAeVsxf/+umtuc7+R+goKp5rWPZIgK18L3VD36jw7qWbsDELfYeRdlqyT
LhfJ/SwXlz/hCW0JgU9L+DfL7ebYhWMtvYFQhLBkeOG1CMoGIlMBpMvqv22b
HkZEvEVBS4yLbqfaT1UvtTTNAwmBAStdyQFAlIVXHFzx6OK1jzLhgJqeh1s8
XHVIaNB++sH7XkrLVfS4FOJ6w9LItW1/DN6x/gW1oIagh+BFPHSfVdxwM3im
HA0lXA0K9WvAaEB2YhSmz5vwp118xS2GtO6jKa4OzQRo71B5JpXETOfp+lr0
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
gEh1tDW/lFnFXrJ9mtURmsOmd7bbGEQ5I8IBAGuCxukJN7ynaI/y1L3aXfn/
vfHmb8vefF9efQNQYwvLg0Subr+h/zr5afNatep7Mal5RAQnq+bW9qe87E3v
EZmVy3ktMuBIwxkBn7JadhkbNV+hAf5b9+27Uh31tXvu2au/u9JX4aTvWKaj
FNBYHjuAHOyU7JxPWYXu10/Y/YhMnMbQaAj6axcpz5dXqUOQ3s/940c/bxh8
1ZnT2WftCLQhwbW5oGS54zLHPkDP8vfn1KraXD8B6V3OuNERvcev33DrJ1xy
0d+12wfEvTuZxu92I8A5thFIIkd95SaXjddHRRpqNk999UwnMhu3TR35a29/
7ye9tDBl7XVD6vnEpfy9215seTIWTNS0t9pDySD2nvrtY9bHg4NP+UFdLyhz
zun/5pOPZxrJ7c+TKWWcxMLhW1dmRwfRR7UPogsGquMlrEIadHuUMLUd8816
og6MH3Iz6pg2bwF07KUnnXc1lT3lAWqlhK668cNiPDDbFIB0R61vI2i1eWa3
h+BDx71f7pAd95skmlyrkbsx6XYKg+1da73opRHrrqPTVnu85j3nXJ2wB+Qm
aFxzyWTfyrZQnKfiUwusr1ZV6ype48t7XrZ17dPOeNnbjIy/UnH+l/4FuBF7
KB8fbiWYvb4n0+XlUCWfU5cSddlbnMdZQKVPGfkbElPUqWrUEdPelIHISsTo
52wARWnkTcg4y/tXQ1wbKgsW3U+P+LSLr7glZ+z4HsLzwel7oKBHVN3Jpc8S
qKqvXp7ycFCra3hlJr5cu5mozvcmYYPWZHMR1BUo/qlS8AcOHP/t4467WaOy
DujD6ZORhM284IIv5IFvRxpvHGOvE3uiH8i5sVlwURmZIuqw8Oucp19yxbtJ
3PE2Lwv3RZeXurj6blHt1dE+T20/kpisx7axXufIALcCxhuXICk+HDGPNa+/
5+Wv0OhTGHOSp/TrJecxT0RR+/DxiuOteBZi7nPoOlqOxaW0Na6gTeW/KYF+
es+2HDudbZgXs3VCGuxQ3OIGpPdmc0Sl13/8Te/7JK1c6QtVbeff6cu/z0Jf
flqTMrPUi0j6wE9blS2k8rkrStdVZFtNmFz6WOKg5nSV0Wd97tn86M4yu8D6
COX/W9lugeK/s3fvZ/X3N084YXLfb5v6ikZxKBRqygNxxp6/EsA+e/D7p+yw
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
8X6hUB5KwzSBOlrdrNpuKGXhc1Lx/9OoN4smp7S8XNFAvZtaMkrpGl3UpQ0L
2N+ZC1YnOJcCgedKGveG013qaYfgSD/ImZ6otCyJbZKAjrIB1cn8dPUPxYy3
5EOZgi+49vZPMOi+rjVSruSMks9lCmSHmQ/CE+A9dwBPgE7VLZInQH+38QQM
SFstr0C3IQcl1YfQh10SS9cyRv/gkZqtRL7CrjbyLMVoBCgRqOEblqHnTUK2
TD35s+LYkZofzntxAexVQ//gjyeKNDOdCuzQwyTU0w58SPZ0jLjL3kcdSIr9
0FU4B4RaxGJz5gyRbvudmEOrZTpb0p+6KEuc4tv+xzk3Ub/F38S56e56qFFA
pR0/CviHJuVOgEWOEyeMqrdz0C/P83q6gtY/96E//Zx7eOWhF5QVHEaj7QOW
kfDlbqvuACqjXnulhgGccoF6pQqnpbpMgu1e865guq0X/SDX07aW0S3QB89w
pU2Q/Zlf/vr/FHRXuwlWdpM57eLdXUUYpfp374GNxVOAJIyF3p2j7HI4mTPF
ZlR0y2cb55Pfhzw/sdgpk0N4SMcQUsmy44+fpUDfZ3BLTVo+awplh0SLF5/1
AcF+ni8gDe+YeVUFf1bt9YyRhjDmYNbwjGxiy/4raS76HLIGOaGwGckfMg6+
6D03P2CIrfcJ1P1nb5aF2ozdcOIbRyq06mI6pXVZc3tNSkuyW1gtpyfCMSAC
lCeJ1ZvOY9Pv0DWw2W0ss3mebDGXLZczNrIyMNgdV7xMjo794h1WI2RPPdaZ
+mvnF/6kZ0rqO/dIvioSh8/gCHmwwReYHwRHNN3dm5TztpVzA970STxamIAn
ze4oFCHT1dmCOCvTUMtumuhC+zgNOCg5IZhCwhbfnUVCka4hJSFgrJCMXmS1
hw96n432FjEWHekj3oLFopLe5RGl7Wu+1zWMH7OM2AFP49Ewfvr+HUJ+zX8N
n0H+1v0J8vfc/pVTzrjkA5n8pElgZRF28HR5ENTlFJWgX9lWUXL0KD2ipbau
h9VI/Q3owXwgj4unJaGKoLuG3nT6xbe5leyfPvjpL3l4L7ckhMBph7mo1WCu
Zfp/t7gtLqWvu7owM3ykJcmFMHxNeYSNY0qO4dPSmsr5Vd1sK6/gojxAXQmk
CvyPIDmEVg/mf6w9I40okzKz2OpDs0dEzGbx10I9GIs/n4lWmII5C03wOY8+
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
BSP96P795yYzcJuzbnQX2jdPmsTpZTrSfv+RgV8wjUKw/Fxdy6uybstcRFFX
pMhOPEUUj1FV4meEMg4WcTVcnHLue28duox9RVohKYaRqbJJBUFGNZr1pWYL
o5EaNcpMyZ7awJtcigOCY0W23xl7TrKjq/2vsKPzbf/5k3d+QezomcwudnTs
aqLz1oy1aDuoLeKz2NGBxIHI2xTZXpE++Pv7rlB1iktee9bVP/nQo19dOKrA
VxVkSJzbaHwLLvcEm6O5VFCkt9ym93IF5Q3L6t7q2HUlbt88G9hcVizodtdK
Fn4HYM6iJGCOnyL4V9hHjbHKUIpcsgTMtWR+oCmAuX9XAHOvkZUe32FZbq/f
KYepAXN2QQp+ZYX5r619Coid/b5D2tcwnkSy363xk9EPzuSwUufUM22gLM8d
k0tq/yFYL2KfJyDX/sTnH/saW4Rh1fZo7CQ4u0lcyCoUZBHwwcfj31POed8t
ahbnyIzpooIWAGedO+I24vDgPcpi0cXKW1MCHRPAn6GMs5e4+FkojZ5iZqUG
G3mP2ezwORnZq2UCuODVl1x5lyjpLvc5f+VdIDYOA0pwPCr0FKXQ9RzQqKd0
/zzXWNwXyiEX2fuC2yMtX3gHfifs1paZ8vHpMcdM7Thn2TnxCtSM8yGoTAh+
MHihpQ9f72j0noXhwynOp7R2k17iI/g97rfgLkJoQlRiIuIj3M5epPF+B27L
CxnXmKnLmdeSBRY1CLTZYkQoMSNGoAu4+HyKTAdZF8l/lLSr2oSE3ZCOUaIv
s7z8qHDSlQ5OaN48l4GhXwRTd0S+cHEfKZnc0kfKFk3virOJxVWtA6VHiG1n
+LTyripJPXsPjKS+qkZDLnk0VlrUxC48e/s4fG+OlOChpwlpb+PPlxvqMUcJ
7KUqOKHnLkbQcZ4Qaz1x5JGS3GY3D4dsf84TPQ1yXHLnFGeRDp0ClmuaX9/I
bGtiYenl0RM22uHE7TOIbCFwdX7t3FPf/gmlFcD+ifs8fdxsetJysQnRMRLz
qKdzbuIGvbOumq6JuvHma7qm6yuy15DKILYS4zLl9ZORBClZm+KSVeaXP37r
50476903SWVWlIKOI5b4DKpspKsoAQ87WZeCDZR3Ru7xy2MXiLoIturlluOO
tzoLG9IYWc6qajaW0bY/+dAjX01hqSFvipxLQIcSRvwkmLy3r+Bkh9xV1sbP
f/CLX0Wbtb+ePXYn5wRU9Aw7LSsuUs5AwFDTgQJXxl6cMhZE6e3NohgVtDKg
Gn47NbFBa1OeCWPUaOgGx7mS8GmYd/u1CnVzNfCIufFzZMlU1B3cP3IYV22X
tTGWOTa9JAXqdl+BCphXBwZU0/OoP3WaU8/FGo92c3J1TdyXkLpdNM09BrUy
WxvqDjGgtpQVbJVgxE8H3XJYVZnI8Btnt/Tn7pz61EzmMI6y0VBF2MexRUof
p/iPGfM4quQpTOV3/+7+z3+5jXSL08zE/9a9fXiuhlkxTQwVWzLYNGHRWpjM
k9Y1AMrRqMsaN1eS30PK0j6S18hynGe/luM0GkiMA0twAKJB2k8KSSsFskYp
122flBh8o9zJnLlI22j+priujmQ2IUchekBGm2er+afp8jLROPNx4pn4PRuS
RYyb7K55KF3tWE8Th7tUqZ0hRPY54HDapWXvJd6BvpcTC3q6KcacEZjx18PG
YPKBx/hk6Zc3yeaYR0qhCbf7vtuI+DG1mSvwVijJc+ZvNwJKzM9D2x1t4ApT
cQ+aFCEMEOTkmYVAnTOBlGU1PRPgo8yNlWY9OoeZ0vE3YXjNTFknLKbZGu9l
axP4L3Ri+b8gGRjf/cjffPnvPK7ne7O5kJRwjnbM8aSsk4rEcGF69TuvvOul
V8VsU1xPmTvOd3lbMiDs8Y4/e9s1QF86X9U4ybX0W1tb0+hRW9jN8nGxY5/B
es3pwLJgrU2AXMnqyplajnO8m9aH7W6ZxQTFHMNJdhzwdsSTPcEt4FOzpfCa
n7v1vi/OaNGcmwUT2+FYHTkS4VEZAJ6pIDmTJwLHZTor3sKNVq/x93yuzezM
yMKtcIEgtGcsM8udyPSJ+2G7FSYLuBmQTGjYQ0zkIL3Ax6kRUe6He2qBxDUt
jW4kHO3W45kVHrVQAm/F8YMdqYJzeBodv9RwUeO62q8MuaIHIFIjj3WmOVXG
lkb9zzv1/GuRUVGD0n7vsqvvPfm8y28f3Jb2UihVIOAUV+Asv+jkcz5mGCq4
7w8bBcmZWAtStavu8Ts7MOmtScevNF4G+LtZXJNN1Znkxh9XLOO/SVbJGBEa
zOhe040CFVrNA8pcG90CpJnQebB/ixkY1htF55qhqwHGXjJ9k6+FBTp3zrai
86pl8c0r333V3UMKemGSzzMh7NOeFfj+NmMzMUzMEowgcJy9QyBtKKYxVqoA
0cIqHrxJ+v1y8bo5JuHgiUGF8cFY3JUmI2w3J5/3gdu1Cng1dF4EajYvJ4jn
aiXPKUpZfKfW9Z9myB3O/b0lgwKeWtGFQUmrZGKoHJQ9fJnxgnv5G7XZJNNC
aRQUJpHuscQwi2OyYAH/rQ/3t9q8gmMBjuH2Qgmcr2RXDJ1z6SaThFbS/DOF
xQpQrQMLV/FmRuRcNPS8wHhSWoZ4rvvm9NBDp5HEMuGWygEZ18iAzrW1s3zy
00DnXM/UvF2hc3aw6DQQ1ZBMJ+gcNF6FCLwVv7bjMufLP/UzitJYnqlHBfIN
aJ7TpEMa68m4UL1XyfWAj6+89Kq7x6HyaNwOTIXoA67bJII0qGYHn//1js5L
yDI4RH1qNGO36HMwEojeFxYlHD7zVwyfv7N/2zkM+xeemB53pOPzTk/6nzUD
EQE43NS0yONWpYpzHsNYhyISp2TF850yGelhQxUb8RxcQ+ZNRAMqvUl1HF5x
2dX3kLxikAkmZ2B0WPq4nIyDsI+R704mOSD0EB4huPDpANUhh4XCjeFWG0rx
CFxXN8wsXA/5idxUkRA70/pNiu3TNhkgdqhltCaq2HwWzYiuw6agS6q/tmJv
9lr8wLwVkA3i6jHTqOTCz5y3VGnh5xwIyj3YdabbugZ2ZV+72CmoB5Q3h398
CTHWb9l30SdlKWzYDIGJOLIRsvjR7O+39vryaKK8lFzja9R4xGbJO1VV/SSh
4jp96h2eQ1XhSr8a91DOKbWdoyQIcU2Ao1HCtqGduMKbzQmGc1mhl4oUoSv4
3dkiFtfuZ/Smeu4NS6Fmbl1bG8/NkjaFErMTGhK3U2/1fadKKmSPDqcjw0fB
6CfbqyNMw+l6JvA5LmccYLIoeV7Tszfm1zzgdGtJIGVYZNpvK0C+PKpx4v7b
Pz9AuiHh8FCjyuoi02B6v8zysjqr8pjAs18a5cB21oXdxhqmGYpo8DbrOVuR
h4N0DuPlhArDiN4YDePzTyIe/PBj0LwIvYjKPHpswEf/UiglbnuX6BtHvLZ6
ZyJ1PBrtrMlomXMLn9XqNna/7b99aEhvVzZytOpLrr/r4RHqOutoY58bHs+Y
ndNARAYInlLuhRDDqVDebF6cZMpa9raRYx3f7BZjB2Mnz2SJDO5YewZjiZUg
HzyiBvJ0sDtmNjiupiE1H+m94XfTSLAXKo8LpRivPsNwrg06posEhUTkV0xP
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
Pf4fGrByJ4llgFog5A5v9+EQcXUDQx7UXN8537MbnAGf/fIrrr8LnxtGYyYB
/vLTT3sbLHEgqPB7zmNS+dGRGZX5SnbYUGLnhe9XWmxGb947YdDGAEWNeKDi
i6PisITJQgZGxZqFBEQh1BC7M2yW0y7Lw6yjcA2La2ThPanbl1h0QdXUvONs
sKbWABT68zc9kZfUt1InnXqGVUQ2nEbRamw2kRelez0QTDiu6ji+9vhca7IY
0NL06hFebNjkR2ojqT5d0m6+LjZ8R/itx5IIxh0271hT0hiKo80El2plHlSe
r1yXqt9ovK8yXEacyl+TnQckOkT89lNvOP3z/kSM6SBjClU0cBWfjJA6j8mq
QfVTXEeyzxbJJoUweBzM/iPZlP/WDLoAnQxV1TDkGCX3cVRc4Qlt+v/+5X8S
5FDtosFS7nA0Lqj0WwZUxL658mb2489KsF5cU8+rvv4AhQ3NjHg5mF6drDef
k949UQP7Ve2BtS5rUuzP5vyBsJ+xeSK7hgkBlt3y8muDU0JUiKEnWS5drRen
N07w2Z5C33CscLgOGGwCLSZSSpbOQJWhRLSN+i1zO1pGAjzFYv/s76/5Rtqy
zgKJXPCWD1wJZysc6ZgmtupYZ53VMIH9Hj2D4gg6YXNBMN//eU8wt4lLtfho
SUE4hrD44rPXfCH5357TnzIr0T+rWvvxAayMysxTvx80aPOd9d0kYFmtTDWR
iU7x4OAqFTVABaOhZ4s2fqEzTW8cj54CbTTooBZDTx1HhEFALbLQH9RO44oI
U3SVTDo2+vGtcxx29mwjVjXQ5SG8J9ZjIRPQvhfkbes613hO7U38/a6zPnUj
zolzGJhSBVdSVEU/e2tSUHwNOrfQg1UU1Y8maszwtwHwWDQ1eFponJqvIqoA
Jre8GY1vez/MtmHi041UZfBHXVf4aVwKcW4iHoOAHNfBxMFAFvVbWTLPSyJV
KRcwzlxwoLkFJ6JJjKrg3C3K068cJHylo11hwUjFMtyIyyHCALtf4hf8DpEH
5BQJnnCWnKuaCMfdDZtTXoiIiKOR7ni5XmjSdtBBjFeHPaG3EV/OMSljM5xf
WS5Vho2zYmXAXGOTxGviU+ORVFsodJnFgFvWcmMKxBUcdkTNcuCzvnHf91H7
CMHHDCqXE5IrICNs0YRDhrzrjrwa0ysPpFYUqh/jufPfoXB7tKYwKdgrDaR0
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
Nl9xza2+o6oyCs6BJpc0DkKpqJ56tkBO7FJgyuaA093fKHUVs+rm4krHjf6u
MmaCi1cy0YDs5x9ffUuSblCdlE5t1rDLWa2c/I6XvD8XSStppsF0lodH68wt
BsUzIMy986OXbQPJus73eu8I7CS4M4jYqJWaLGMXFVNwBduzqmrRYe66Eilm
qMUC1EECrdSt/gLPjGgFuE7IK/zFpTmYGalmuzO5RAit45iAejyqnGoEBOPa
krIx6/vU/ECRWh0q3+gajzO61olUbS7+ng+vbJniWOTNYcG+CeLEB07beAs6
iIJaRyQhuzcqufDU//i6DVdc8pYzrk4tIRpPKQXFseKsvPIjNeGAs77s2tu+
ynkZtXsVqiHGBrOGIK1Ws0eVWAa+mb7R4DZpiQqH1TepVr85EE1xFyHYdkow
g5uMLD/ojXCXQx/VGb0fhHGQQsZOk64x11jjy4p54svF740/RKpOkkh/18du
YDjSQtgYWRTmQj0dVli21rFdSlUhs18ssV5cq3kw6Px6HqNByzOm9ibGbGXj
MVcWc0NZ1omWCbbG49WuYZyryj02d7bKKptpxWv1XeiNjWN/3DDpLffY4AAp
Mml7OLRgHGwZUkAyxWOYUiVTUS8ok5sjA5xgxF5nsxp8ofwEZ2dlmdl0pOL9
wUx8hXATi3+d9f3waGwwvEjps+e9xyjM8FIUD4RyELa88uMHP/wP2hn4mEjd
qOPcypEZ2sXtot7qir963z+e8pFLb0vaA9KDjcsS0spE11QkMzqPAmbkntiR
gtZsMQ+3ZYwZvxzj+Rr3Rgt1Y4Sc2ekYhcZ3ceNwTJCoxZ4B0psrfwVmGvZO
LHA8VZdRPK05Pk0l242rwgZ+SdV63QbyWziKJgAbMOzwBe/4SAo7tMRR9tTQ
MiSKu9uT42oMaChyjPT/sPbm0ZpX1bXoGec73+nPqSqaKuk7m4hdknvJvZiY
QG5iiEnU3CQvxqB3kOE1mBhjJCIoGESQVkEUFJACRJqiL6QoUChEAWkKDBoR
RESNKM+8MHxx3OuIw4zzvrn3mnvPvX7r953ijvdHKec73/m1e69mrrnm+n/+
XzoMRdkv2L/cxq+o741Y0LOqLqOevXW481jMzExU8I1LiZ+bf44/XlA/jKsm
iPyRD11wK2w2wpg3Mu6dqvYD+sGJAj1gEBHx0wuSJp5ouq9HXtSG9d3hK9Ba
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
EjuzNE0+wqlEPL6uFl+Hrux2Gw1m1jkljTdKG4kiVDrRUxqqq1MPlCrRSsWb
IcQs2hrbNKPA48bQSGjaGHOt8qtqZF063qqPimq1aB8VFcR9JzsYr3vZ5TcF
Wn/0SevZDppnJXNgMTrOKJxIjc/umQJbKdy4Tb9sleWXCUNM7g69kBMozKG8
RUwsI6yYDHamQeAf3u5Frz/u8wiwQWBg0iwVa1VxCTgmHnwRzl7lKylOUV2X
zShKoaQevzIlReszjMsgDoEBD5uKKBQ+EzYYpkKbuOOaFN6MUDtWYdZwiIhZ
KGAONzhK6vqscRKK7/HNW5NiAp/FPUZwBp2uh2ZXDS+paAdxWzx2AdwpHYyY
ylDJ1pu3A6TJ0t68XadSzkzP3rjovbaE1tHNXmLLk/It7CFQhMHoQatK6MPd
Um77OvtLavzZfYX7dsvrj7twBg/tDZkoQNyY8YBeVkfVc/ZyniPaIQsXR7Pt
75gREbgNdiYa6wAoAqKMgYE6DWcOFO6RPm2AAjJSopz6rlOviuSc+Bofz+Pi
OU/JRnO4bpJ2ziK1zD40zV+eOMt/24zx1IvYbvjgqkNr0ERoXOZUbKd6ODf1
NFJHjZcXXTRXlIWq7yZO5VBjlqWiy0RVxZbtZ5eX4s4mJi5QTZ9neK0mQEEQ
3cU22jsf48ov8/TlnOpL5kuQqzcY/IcvfcLOe3d1+YkkI1G9XKBnHtKlBEe1
EsR7hoiwo06rXRooHKF5yxittgL6OfgixhrKxAZAMzScyVduuf7r7L6GU/jZ
N31gC/owdpTJ9JnG1A1QpBkjOI2TROtvRfrPRH7R53Fq/WdKJvXpwR7kSeT1
qQNbDG/hFCcepA1Zviqqgp7Ukxy9dr2j/67Lt05od/tu4vfjK+AxeFzUxuwF
J/wXRed4zkQdaVTEhLa4LeyqjY4JOm+rqNECajwKG77Wvc1cUAoOhtmLTiW9
Qo2JeckMPUr4EXxm5c018q/e5iwkhaQn9RG0NtrthnmkcVlDQwAjFJExXn8t
sf/1S8Vgr9R8sZzuKzC0WL/ocTLay58qIFWitRoeXIEBC+G2nMpq2Bqq0Xhu
Dcnc9NbECXKJH+Lv1FvLfhZ10FJ02ZamcNkSCszUki187V5pJ+046mE96rol
dANbGBR1i/8WbhxjjjV4xsPy61lOg2+hRDqw3S2kWSxhyiKNWJUKDerYcXtr
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
/B2pEYYFRJDuq11FNGShLe231P6aIp0ZNLpRdfRsiW3BX/D5r/4jQJWvOf3i
qy2Qj57MPv+XVUWUHUyUMpTH8ltiIcN75oprURVy8636vyQSk9+eW5RLblr6
yLLDeCCtZa3saBN8hY0yMUe4JX43dtw0fqQpvFk1bk4roZYjFcGThpMDmBXc
VhR8K4mvNXn5HO1uQZO9EzvfwLWtTX4GY2p57yJIaspM6uqzVtQ2VyHlOCqN
1i7DC91cKw6j/noR2qAyzzvuQCs/kEskrU1eG/iUOFZwOVadypewAd+gv3hl
9lf5g018VVi28CxZ3X/wZ5ApvEBCzFaWcYbpIYl11G5rncOqnVaFLnip67TX
NLhTK9r44Bt/eqs9Gq3v1bpHFpPtYrqVniNSSgVKIIr4rdh3qivtebIsIzAl
sW7zjLN90D8ricajhFKsqboGNlDfcZlW6DJhoLjbsy5THwbtASkwbHUoXhaH
bsnLeowRQEpoFWiSx1/9w5+Gg9KXuFutwyPEOt1t66Hd+5Zf/rsNPUXBr9L4
cyaVwRZIT/zm924Oh/ziYtXnTP/W4LPkJbhapei65/o9L2N6dNNkzusnUkGV
hSTysZ54ZWwVkmPiORLcLc6JX/pp+LpRHWMyPLI+caGdE9ZbfCX9SKseKA2w
ObCIe95qzdtugMOC2JJeW18L9j6Dj5tFD5sBTYxs+BFXW7CEC2Utl/WpJq8D
Aq55E8YUeKwl5LAjdp1uf9aqLnE03QvoUjwOid70aPJNlGqoSMXpxNZBNxYe
A548jsqCRXOATmMj6yJOadwL38XpP/6w4y8BmOAf/ubQzyCh2ZZOUwsVdrMC
yqoUVn1SC9SJAWrXWhWZFG0gGjWtQ+lsY7PpHWwdGx0SK8jsVNZV9bLjlssJ
tu+N2BGmD0WU6EE3Dz65ucHZbzjqfMyo1BDnuqyO6zehaWiDadXeWscWZVix
OulnV5z7Txd7pV4dJA/edfxZgl3GSFFCes7rjjwfgZ+3rk0+tIdt3mFDgbqj
N9QJmWkanHtQwcJqmfWlQWzUTEPwDaJW11oiN+AtWa9HGt3qXuRFxbjHw2U3
nBq4CAcGTkC6zpVLPa98lvtgttE6E3wPdFLHHXGSlNt3211WRF0PK7sX4kht
UYEsDki8KddpjWkDSykBjRrsFqVtHHntvdU5iRSFKVsN4vjLljG83tTWKDA+
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
LbjBQECWFBEahLQhUY4KY00oenvNBiA+KKp5y96WED7sUkPAyL8McyevcTBO
oXYDw0xVPE+HKrrcLhkfBdTwVk66YNsdsFtYvjR1rdT3sl6KVh857L5mh+ZK
+2S5WWRTjnzk0Y1r8eePHxvNkY7OGU0u/s8/mJPgnkWY7+sALxiDXNQLrfyt
g2uPa493Wnt1SZTPqJfisxsJc0CPh2a7UTHplr2nBCB7pQt+M7VUzeYooRUt
Meu1x+Oqk/7iyf6Nav0z33rOlyHti8JIPGJExM37xErVh1Mpc3zbcMG6tLXd
JL7X+eXua96JuWPOomiwgyXakwm+rqpHFktz/+SYkMKNG1LBONHu8bkErcch
F5i5cAmSVN4G7AoUhSTbsVR3Zp10ykKuVIN4w7e8TBjara5mnelbPCx0bTBU
a+t0w5UIo+dmnovqcOBrOBV4drhuqH1NL+UXqoXCMXhIEa1t7OlvVJtYCt5N
nbVRoDs1f9Yoy9lxTcH7bwR2fNgel9yKJwYL7cn1OKJYM6wcU7kESyPhGmDI
gL7Kdtv1FTf2OU2a/Cvv+BFBinqhmOAN098ooURzMq+FOGxfNvdwIYaU3LVC
WmTqVfr2ttTQ2UuVL/sFppPSJ8VlYk7Jly/3+bNcz7qkqkReVGMxQEb30le9
/SI0n0IHC0nHJeQRfDJWc4MIhpKtEtWacfa58UO+8/1HfcJRjPPUYjarnNdo
TJ4gkADYhNNhsuE90xL5IM5HZVwca/7tBz/0gS/hVw4mbxWWCpvMSy6/7m4g
5jyeAaSBGGr3FVRGjQxdOTyZPdEjp532bjiVPz7xxI+aSaZl3vWyKzcg+/3Y
K84fmKP3C3ozWhimdoczFYMAqYbnXXPL/aEjNM5Au5bWccD64H6UefSBEt50
V7e6JRONuj5ap0LMTK9KDpfZNTG9yh1T08v3jPeEbnQQsUVxPWfgqM6uZ9x2
9z+iT/2RDzy0K/IbDA3XfchXgBLqUrxNqWjT09l7K+6sSBm+9Q497rKDEI/b
mFrJ/kGyJRkf3fzIsmswcQfkq5NfOW5Fya5Jeppx5q3DqcVtwSstsfsC50On
ZnSezjUrnAftIPpt2/avkEZl6VStaHvp5V+5G90eWAlu1qHtKmottyPPgy7x
0d+4719okX+hWl98lU6xIrCgvxFYZNFQLz1VzEo3vVLsOIoc6vkaTyAPbBF9
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
jET+CDy6e+Xe4n5lunLK04am7rz8Idg4qqBrUIeu5l6uNKtValBnXW67R8+M
bkUhZf0sbDnFbAKtBFUwNvIt6AvOUUvQkw/AZjYG8afaF7qj3ihefOsOPBzf
IEjdSH+QUrUVU6+ffjwtXOXxX/jKN1JMaIOzNcKSCm/ID6RcJlnZ5vLXiQaV
66ahnmYZuRrZ/gNS2bGCFWvHamMT+Z11Ox072WFNLLbi/9qxpbI1haTaKMnV
5SImK/dWDtLn6HtMcthNjtid3GcxJZ1EFv7Nz0sjZ+tKXc75RJCi0aLy/ZjH
IpcH+PQ0oR4UNy0jUsktQvMHIKrwTDFVBq88P+oPMy1dNx7EX5o3VPlpdtRp
/7cgiLvFbRjztHDxHEl3pLzjkXi1qrZmzhQ6mkVc6vfKkeI+1fyUQwRmFe95
4RkfBXFZuV2vjyXTxacGWPgZTG1UOsLlFZNVcmJYJVLXgDv3eL2kdI++khTA
qOZWlC8F2BkoA1tWUH8umHbwUas/595Nq6GSAquel+5V60z74itcJBmGnHOd
QkR57/F4g5iMhmlUB0nZ2D4P9c2EbyUknI4L7XGgW5BL1beLo8uc+zEehtTx
wtVauMSEPY8Na9BsxODB2ahIkw4pwLw8L4O7eENxHCZOBL/cidckf4XAsBEy
r9peqxC/DibqH/z4Z7BNsfzjOazIt7nKppH525mE6RgmqpwdJccXignND5Fn
49jeGm1F+9uFqorMe4tTTovlsqpNtFb8VpR3zs0dN4ZfMuucy51iBxjozMAt
RcEDw7g3ddNcojXx5MGi2TYEwjBb0AaywzJCnLJbgDf5d+VQaq0JjbVXPqsS
KnIz/K5y+T/Ehy5RYMmsfsnbP/RJrQjFh86ergjP6s7HIO1f0/xcy9k6nF0t
BpPMtSkQstpda2xvsWccB5+4nxmeEw19vOZ1510BnwkGUXCcWm7afMxxx2bK
DAldJbapPAOh6fff/bX/1vBmf8a6V9IIz3pxH+tjAnQ+0e4Dwk4aH5F0pvqc
61DCmpjzkmfdBudMpGuqURBlVLKt520r1Z4NThyMiJxt0TrF5OV+uuPDjc8G
StR815z0kDPYsxEn8dfIbNkT0o1mMVLPKL7u/wk3TJ5IqijrI8mM8d8yXCeM
GRz++vZUEn02N9mxmp77xL+++xvnnH7mxR6e7515Eq4J2vPVZ5x/pWoRvlfa
cxsRfUmNzBVJKbjrzOdOnh5kLNOHNI2HWVXtNV/A5xrY/EMbAWX+0C5WiVb2
kW2nHBSoN7bvFAWL7A68h5o+9UBzzTOLrFVElYvlo0esFHV+JF1I/RdHbF6i
RvZKMXNPdn67OTgf+5V7v6lBdG53YFOlxKUE4Q9oPKcypFXJNC0X8Bu8N694
83uvYVbh6pg00IO/ug3QEL+R3J2p7v7wCXPpmJGfPK46LNhZefkeLQs92K2L
BXtm6fCqYDYcW8oJHyViVYmldDOkn7dHbfMnfsLCHDhkIIPF7OaxmfvS2VYn
E2qcIOVS+ymAZjQdx+FceMNbeKS3KRejlhwu0EzPHvlOngyPwd92n/3jEhta
/4bo/Eqx4oo9tkbxA6Lo7MAca0dE2VmuiZ7WUcHWACOgstqjX5Isq6iMaDOw
gVWYMNHtelxo8nHeOaPooGzuHG125LuWS3vr8aFNRmqGz2Yjgb2i0ozUrHyO
HDxZ/n6gYy3WmJsWguIdN65lqClWsZEyNpxZAPhpuPZs8JqVY3tVzGYnn7RI
LvaPN/T0t77/ut89/yM3SdpZaX5fkZxrRa/aOA2pNrPBLi8pVR6wifCnrlJZ
og7AM4Y1GVYuDfMgNAHWknARDwcPDrLuEbJ2XJ0AJxoMCN5iNHYGjnoOFXtK
OV0sAU517OR94KF6apaFJnC/mGbBg+Hqgjkxjbpkbsy+uBA0ffh/KbvhmPN5
H778NtVYUNI/GQuprxcL8tgZ5JJgn6+/C6BI//hYnck0lp5d4rNAVJdPyjaB
fghBO83T+AkPcvfW7VXhJy+tsXZd8edSjuQOmbKufmWEtI0fHsfP5eCscS2+
7Z6cqq5hfixCqJwtWqBHUZkHWgCDIBsiPRDCE12C5Qmpoa4B/k70C2Icm/BU
z08YqMBInIM9lWx29mkNenTASdyZU456ZzwuM46aJ4+3tmI01eiQ6lAVQixi
NDOorGS3+D7/BudEYB+y3V+yUMLKeDHLIPucnOAg6XodfbhLzEPElfwclijZ
WrYKprM8FoeDZjCpLJqmFtgmD0g1YWfT1VQ1M5oupLOXVPjtZlenzE4h62kD
HIdoyC2npHPl1xwtKs4lKroRbJBmXSoASQDuZKzebnvM6U7BJlv9jMtv/JKA
Tf7kdyyDriqysZjYPC6ru3gVmC2owpOgEGELnhfHAtOTq0VnINiEMLPMtm6X
XmQ+rBEBArriNxbu4uVAnWPkVEv8AkwZFlTBojmVLiARUV6mMNpCetED33Zc
YMLMTJHoKODczYGOkFHVAkj7i5dt33hqLnLcKK5fsXobBQgxGjRoMSdjPVTD
UqJDcdJObjwLY9p7R0+6htV+EtKCZiOEb+6eyqayAX4a66DAuFYsbJUUbilN
GTnzFZkW/SIVq5L345wte8gDWli9NaHhnXzeIr44MH6LaaFd11hRdq7vWYtH
vlbcebGl0pfQRk7omKR6H/v1FdzQkkKVz/zEp77QwKmcBd7HCHbq+4RQxmv/
7PwrVarN8j9NP24zukq6/abs3cV7u338taLq8opMHPMGW7WPKBjFaKmM/Psb
0hhXPAHs4TFIBKICuOBwnFEgKtqJfCtXYlryKoYX/KOUliuMPiurpSpPXp/A
fI5O2+MT6Y4YeoOo3C2r9JO5R3lJVKi6yCJGdpxEvvIsQsw9J80rOyoLdE5y
ZyRtFOiMyTrmeP7rf3H40xhhHHkKeHhFAB6E17Elkhn7EXiIL33bB66Hplgd
zDMRuiiEzr9xd2qIpNabmgqkyUg4P2vPOLLlnVop0m9vNGLbwOdL+rd1WtK/
YXATbWY4H2u4IuecsE+g+FPX3Xo3Evb5YJexnAou83FKGjPSr+Y3CEADYYJK
Yz67RNeZCOhix9nhZ85iJtJOqi9AIiuq5OeQgjtjuTikvpebCN03Us2NQctt
GEULWBzQfNUL4nbhkQB79KFl3uLMmestqP2ncIHhRe4v91ziejE/xDnDUCY+
U69KbixjPUdnP5DC5nSE2FcyrU1QJueEXwhT4kJCmmtjKfE0yXhIdZcpCB7s
nsojCxbe8Cb460xJiza996Jm7IAbAprGdlIjJpxD8BIm3qUxQ5jkKZTYGH2D
Q9E3jiKr1dpEmq0UuXBk5C+qpOIqblloPRX/WF5SZsiIJXaN++Qiliw+16gc
fc5HrroDfSUU6PYW6vqGWKuyBJWZ48Zi2BHs4zcLFHTs4pvPUJLXNCgZZI8r
dYfwFHvHU1GMRjXlatFYc/xU+KcUINGl9UfgRO0hF9xpxBULACj7Ylrc54Gi
uyR64DRsRftWxuVVTQZaOBRyJpx7+824sU1isifDhiWVK9C+9icuXKrvLqX5
/krYORS0+vmkMIG/iVW8wSbNpfnydq7tOeS/vf2PzjqssSFAOshBNTEJn6E0
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
8ORcEH4nVJloT6kzTJVx6BfAOdRWxBH8t7E/bLwgWAvBitKxZtMk4mJOjbJt
h0ZyjW1zwWf5mzaMoWndlAPzZ03Mn0OXILJOJiQhtG2khH+ejN10V2gwWf/i
goD5UTAEvm02qGlUiu8VIr/KlHHZrrLhgopZ2CoGuTBgINBQ+my572BAKFg/
8HB7JNOXaELHb4XrcyrFuFrKZpJAO6/xMXSW7B+xcrAzAcXyiIo6GSR38hwZ
edem50492AGc+yRCJ9zTHGGr4HPXhK5nY6/K2Ruid9I231fwnYgJxewbnTZG
dDr62HNve+/Vtz/W7zYzB+AC3pcgwZHyK/APNHUgcKvABkkayEPj9Z7/Z8de
o4Ro9BPUwzUciQeHJVi8BLYL6PtQg9hc4+xHVzDJ6mDrqbiNlnTGb0Gp6H7x
tTEzShPiJ0z1hH6lrUtSBNpPM8qfFDGA2a30Y5yDbBkdIbjmgedcdZ8g+k3j
deZebMvcZ7Tkn9qU+C/cpDHtqTMkZH/YqItkFJxUhK2uDr2bBWs5I7lvcMi3
bPWKt3GFQJBbjc2yoOCSW7vV3lnSODP+4QkqO2X7Q12+ZBMWWUgtUEpSURcD
AFjtcCqXr1goilVmo4aGF9qbSET1htCCvpyQkDohRYPvSkhiOlYAGz5CL6Wq
68qC7aCEC+qxV+PSYPMDgMeH6QmBkwqHmn6Jv8lD55TCeYiMRPnQWnpjgWhT
xVsM8ZaHIgrlpco7q+sAVzbuQhVqG+IuSiPPD/suAYu3fqoD4B8wr53ueLh6
+SzqriekxE3VHa6GA58HK0tMOQbcVpUSKoVmfP3i/q6LGLsOyy88Z7wkxyXs
pM4HnQPFELkZ+tYRMIHZJWG5kTqFdVcw56vm3OpDiPtls246Sk6nLaL+3mh3
xrSf4sUur3uZ4ywWjFUZeGICZrvwlga70VJ4HjVbXKG2wmhcEiiHnQXHeYQo
O5QLXKfXBgdlhp6R/pandjyn1EGduSHbf5Pb6Aefm8vzMm0Ft2RnDjxbNXQb
UJeKqOROblqZmN1I8/wrlf24a+GJEs8eRN4g/KaaIauyXwyic6jhr+hAj1r6
HhEvchTpNhuYGhsiQZqoXj0eOB8xAA41sHokUulpqeJJdZVpGsC0nRMN++B4
r1GbTP1/OLeVpbXvgXv/7OwrvyL8JczxltYnMfU/2H7342XDXeBy/+i3kdle
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
iaeA8S6eBNsxpbs6RC5putMXnKvZvteoDQFTGK0f2xmFvlrgPj6Sv+Vnrn/X
X/hg5rvRatKAlY4NgUrrOeYkyy5nizwgqQp0Wb2R96GzmqdnZuu891C2rLvg
dqGudnUmndquL9E6P0rccIya75OCY6fdd/+nRcbxkvX87rkCbYujJ+1tyxYC
XdbsY8fhf8JO4W+T7cAORdRjQn1d8vxiUqlhd+vuUR5Y7AeBZb0VP7a9LjFd
QEwXBSnQsDOBZj+NxEyXv6QKw+N9m/SE9hqxxlgPROy6hHsLNOohP31CTDh0
i7upKJYq00qwNZJ/otInnjvNZko6XPcBazI2IeIE1xthaDZnMm6KgvqgXnKc
D513tyc25lZYRGQxkW4ssfOE69/94bIdxbD5PVNComIuoFPK8GTCSe/mCckk
c33vH1xzsJHcNlsaw5yNzTWcOHevz3mXIFxHP2nVt4RAU3M7r0Jrj2VQbzk3
R16s9f7lrT7ISjuHf4lNL7e74/XzDs3OuDls8BG/K/c435rm5l199vmvvklV
GJ2I8707feC2ed6Z6FofRKe2aI9zTLIok8DIUem2+YGPdE+WthzNtvkWATaS
5magz7sAvglN5OzOM1ZfV1LX7Vk2XA3NS/ExywdHBpXMjnXk5AidzzyCLN/S
KjDQINq1+QHTgbNhX9rQtcLc7lnTVNd9SXTiZricMKcPh3uEiz1fLb7MF+Xh
5JaS+ho1j87lNzfu69GcW7pG9bSUXHNm9bTCOuirlntd+uwL30w+mlikP3PD
bX+h8kLavpcqB2dVHJw+835X+jdXVBXcDFPypnC808q9tm61DZ9I53zLRx/4
jG7raDhn4OSvd646zjG+3FUrff90pJwK7OPPei68o6TbEXDLyGZo7/ItuB/e
2d5uvZfFhvJpR7n8K3Wud7SegjtqQhzl2q9xr0pOjiqDNOlioKZoCtNaBvkn
3nFXUX69iLIT4Z90zds/+HvGwtdvln7CLfZTQqtN2fwkl90tMfXPltZyJqUN
tqmu3J36E3KwthxeHB9iLlDQZxlbGE2/qvtTzorfgoCDUwTzIu+/CwHn6Zde
ddtTk2u9UwcS+4+35d+aptvkF3bT79q0RXtsp6tIifO6360rLqYlqxZZaIyV
mww7X4apfruz2czmU0govqxmytkiCx37P5Hn6mHtS5xh8bWbNJoi6k7sIds6
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
kxLtpshQ6yROP0tjyh10Ze3Zt+WhO/3YHdfgU9Q9feAtp++K/sSHkUv31Bat
ZhZxWMdSMtJ9laoSwH1FiRNdSfV/ORf34Pw3EAk2PpLXQEx4fD0AqPs2j9xS
7I+fdg+ukoUwwJbB2y8UAx0FqLrlfstczvk4taMnFPCXe/fgV8SjEaU50hor
1zkLnfVeouItH4suzjrHrLFhshn75f688e/l3QEH6VoKcLkHbiyBbpYyFYnD
4LKpLLo+Fd2ydIq2gUtGRtm4kIK2/1ig0lXr3My0JHnY6UXvNSAucbKTzTs0
bhJ9A8jPojPNfVssDC0ri/lhi65j3/6+j9ySyn8Vq3rsaRfcYmnk6q1nf+Xe
bzsZSp9phiZ0asSnyb97nIBb7dby+bbqNs57wylXAU97oaquZjH5I0buxm/e
8oWUI14Wqv107ROPP6dfo/0RfWHUGixxK9Z1xcd0H4xaesN7s1fxzCN6QyQt
MxP6HWu5d7osLaAp4eWAMkyriF/7dWmsZ7VY13f9sDvi3uO7w1RLhtc578/O
VdXabGO3hPlccqvgrwd/urzk1ZeoxuS5hcn3pbzDI394xL07jz8Marz+3tUd
ccS93WHps7t+eOTk/nYe5uoRJx3V9edLeXW51vZScox9L3Mt9LGS1syvqj7t
S4rmz9Yyu3zcMNO87zMDZ1DISFycZUYYdeD1/qK/PeFyRks+bAuHUWM7Lv0+
WGIQTINUJU/YBLE/a+x2/mgyVdOYLblmUUSN8ezMrlIW+Bc9R89z1JyC0PKe
xTCQFyNjpWScuwlxOo3X4dV1//TS677MvbZ4oZTo9sx24m9lEwXurECU6XKs
i83eioWEYlDzPHu+RG7jSEZsIrC8uqz1nMpWkhx9lUfNUuuwfhTmW9rXF8ax
HLtZ2esxU6rhOHtkFDtQM/3BrlvvAa+riX73+tvvZVXhes6aUX+IBhRH/5BQ
udFxChhOkD1yybxuo173ylF1ELROlh2wVn791IzTBty1c1se/F6oZzOllHDT
MYBppVZgd/rJXrCnejtRsmAWQX2Wn8xlBsbyDsbS6GjNE96780bX/XCHWcvx
1XKQsZ75cdpAiivJ2qYcqrSuxRS7PuV8OW3VkxBoZ0Kg+finkOnuEQBPIG5t
wGibKPgZvWYOe6IKlNpZPAy+V9uhyB2xgt8P/VOTbhfUzcpjghmYt7rb4nZW
B7tlSgybHZfsJnNERFiJSWGd+C2S5cVTxjqEbnP4WKrAalcLguokPEYJ0Wnv
JZODFZdkKPuusZQnjUD5uYZKgTJxeSXVZ6uGTm2tj0r4k3yKXisj7CNHvedy
LJFcZQj30LFOqIk00wjU3PPgQRQkEXkEir2wmDpthibPFNMNYzAqwS8Xw3Lf
Ud4V7qX6Xoz1l19x09/v+/18GQ2SV1xxcw/NWRQiuXwyH69W/S9j1PVq42XM
YUSDrBG+yUrZNAP1k9/1wevMtXnQb910x9fTtqmb5vRNQHTPgv+N3V+878y3
n7GL4/RwLOytPQntqepOGJ1+uFn2nYhRacjND5hI561jZsuVXlE3rY6ZocCB
/lWcaK7M5iWwI3sspq0w6tzP1V823c+BDECfM8xbpZdg1SL5FEv12zfdnvTz
OK1PGB/UdX9ucCAYXUyQ1Vw4ID1xyRPymBSMRF9ns23+VZ327De/7xOt1LpZ
3ic9iQZr6zgAzqnv/MB1ToFtrU9RwpqhtqcUcw8iuffJE8Lgg7F204Qa6ljj
KJqZ965pJG7W61leJ1dtSZ99b4gSpnUjLS7zPQxNcyIvjING3tx0xPCpBn6e
Dvjprv1J97nlrmuVtXkMPq0W7ooc/ln+tEhqj1rvswTNQwTxiOijopWiGMBK
CV+MHC0uqmFOs86C1Rg2FOZ4DoxY9EPJmFkOLXYTaYgCaNY4D0T77K6rc6ZS
+DC7nhaY5lwqn/6pblLBRdDMYznTaOgctzgtXi2qvzLpslLsvTARbgAdN7lp
aVm4o8/92O0+r2IWUaymCIp4w1mXfRqVPRWmspz9BX7L9ebrj+vaKv3HdTRx
HnyfHADFZS/H0B+XIrQaiHI4AcvG9vH6vfAD4Vf9JonemzNCjqEhnprH+GHR
MSd8pVJQeu3eJ9LNASxYkBaIYmmKOMxHjC9fahNlDMdzD7e5HgPNpkOnFljB
COIIgKz6sgwdPDbGmKDktUS6Tn53rm6nn7rktuJnL/7UHb1qk6oD6XXyvkwg
oS4f4aCaV9lKCGmdetwHr/u96z7dV/9sx8EWYkOWDpPNUkTavEdbneZEW8LC
0ipBO+tU2gGpISIAjWmmzuKSDaL0mhr5jGPOvNqTOloeUz3Jb9z2xfvMc7El
elnck+Pkd4c2AN2ei1VYHLH681g5+giLLBKHrxmAMFXWsng39LkeEcecX8pJ
3l7RRberYCfz0B/BnUkufT5oxQ51Dl1vIBnGbHvXRgEv/A0K8TiHr+xr+1LC
XRRQyl6ef+cDcSZlqnEcZsBLMWvp0m/0rDFUMLZcrtATdGgrVEdfvPjmO76O
8dcx2kwCnmh3aTiO6Q21iEUxk7/OnJ+H05SnbQFBvbjVhRu6lOS7aoi8Pd1A
0DPS60bkbSoVcIGySzRRvvz/GQNlTqlidLZSACJ5LAITRnl0GbUyBf933T9M
UNXiXanbJ/KmYnDNNyzuHopuoCrQfX6ZlQgWNLK0xOrIG5HnaFA5myKim5Y3
d09en6iSpGb5/Wt2fw07V1Wo7+pIk9tMX3+dAO7qHlzX7a7fH99nlbMll29R
D+MAMCeSkyMKwIkLUgE47E5iNE4UtpyhkNehOAykGPXWUoo5CjvFmmwMe8/g
cYFyMfyNcvGsqF2JsZbMAbs9nECRQI8RjFG36M/Q1JEDwjOq8Fv5fhkxK/qw
tVC1nEkO9uiJWsxrXmQdAgBlEZCgQI4P8Jy9Dm8Z27p2NlzLTu6mGwBIA+Cd
1xkkFmAum7USKtDeGuxD67An1m+u/tO3faRQixQmE6zSuzecdemnX3XJtalT
5FqSi0mv3fUUQQ2hjuziGwIWa31GestG150NlreffuGt5r/aqidW8Uh1Hh0O
ZtMKc/abs1KuOuC8N55ylQYmg2VqoDW2GUL6Qvx6rc9Oe+dZ15mMWNLsUPjY
J5DOq6a0zJD1fs4xcrqH0EoSMLaJW5yVBdMq/cP3+j3Rt7lVqc3XYV/8dqLC
m3Z3eW6n4baI/WMJy3zGtDNYhwbi8z535z85vvRHD+WpFmOkNXNd0y/nQUp5
bc7/f6AEn5HtcNdGOebw/3Lx1b03hraJAk+zvEtjWYhjXiipyfty2cuGNZbD
6QSzA2dRnpzWDkKgOT0XOgUeisOeJe3Zd/7Df2V50nHKo04e3mQkNuslGZ0t
31OUfGQPr1tRDxJpC+qVDy7/dGmoxzpgq/z6WSzoNc4SY1RxnXzOZzIPWgWf
ZzmZYg3keCxAYFaBlajLFIuz/DxkJt9gza1KiWiPYXK4s6nlXFKvvW+y8Lpc
Sfyr46JKeIv0xAR0r1Oa7KvrblHfTQtDHQYzwjcfLZ5iS12lhb0YaWoujTad
C6wjrIUHquXz9rlVu9L3Vw/+yeU33inLjHlxOOULjZsfXW7SG5+npXR7qq3C
msrl5ddI0z8b+0pQvHymr8VxStvT8Z34GmeF6/Ti9Yq8XlnlIDjF5wxUPYLK
MbsnwAOJFIZrcVsivQTvEpPKqw3EsJrzYjzP32ktHkj5/4l786jbqvLM98tp
v3OOBw49CoKWooQkmt6YREM0ahqSqEmlsYyXVCXWsVdENLagoCCgCAGkPdIo
fQ+CII0ojdiCDRJNmVQlGRnJdYy6qXGHYTDIvvu35nzWftaz59rfh6bq/nHO
t5u115prrjnf5nmf933zd9qU4j/XLEk97LxN7zPHkbJjrfroWq9CUS2qrnfN
cqsQFq8pd/GW6XasNvKrPnH9F4hmSemUwt6bvbA3/7gDtg2UXy0MXtdAE4dr
idIZjIiP7LMZ/2h/iWoxOZ0Lo+fhO050Jjl22jmchzlg4pRhJK3LMT5p/fOw
3FLqPBROWffZfqCIZC9oEvQbzwO6+lXvu1jPlVYEeBCd2pkahjJp+0yGyTA0
m0YaE37SMWfUdi27ocVOOvrMvoaqw8hupI+lOg7Kv9Zb4rtz33bSNZo2T4dl
+j767lOuF6BJxRHIwTI93RlwB86p+pwHmSonkm3cFYYvy0pLOTwynVlnNdj3
cVovMqN0t2PJz+VnP6vnpUKi/uw1eX7alsXYClJqlSd/0sWiYgK5x3TX/FVT
Ik2uH+caQpqjVudIwJLZ4JSbqglSQbjrETJZ5qTy3ZXRJuMomVe87kuslcv+
6CKw7bGAchlP8n7LY1CMG36rAOOe2jIinYjE00Kyy27VMb6gOhfOcH5nBnJ8
C4zLRiusGN731PcahTx9+6AqqBmDxTD8xZkF8v3JwctY8+onMYtCHijZyGrn
3w8KuqWhuBLnajVRyZlF/zOLSmy5UcTRb58uRC2UdCZaWBsVBrqKSA3nwktt
cRykAG1Rx948pxGf+Ocf+NbfaasqkKvfzRyv8X5sldL4k0ydnCMns7uY8Y2R
RqMsK4kL7xZKwm1WIpXVpvH6MnD5LNGl0rmZ8TjkvgxSn3hN7yZ1yOj7m0aU
UbdYZbvOqMVXP06kqH6spannUvMDkRNAD4orn3DsOTdr6rzMp1tnOrOmEamM
OipX2puL9yn2Iz/lNTN37l+cdI1idkBv3rdVK805Ut0Mdmp0k3+EPeH2niSm
8tGTgKRhaBHUiglaK06Tx7riEE/KyWDmmpmV/uZzrrh7ZhoubSZq+J+uve0B
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
0qPImBvnFOHIC9dyh4hdvtM2hS7IuYQ7autGI4Ftvk05Ro23xK7wLe8Y7TAf
Yb07UD2nqXy3ecxhEoVLJMEa8hqWFSjpbYqOdWQiw9cr2vMCNnfXyKMKRqKb
sH/c0PIyxxcdduzlqtbqiE9WjfAnQ+LuYbXqWkI9zATMI/E2uA7mkFabpsC7
brlCy9XZqkwg/a5VqXKWnNeRPz2Catas8xJFHFtCZPvpZ54WmCAJ+molKMhR
J+dQOJtZjgILVREzWUFbJ7VvTUbMXmam0MurKbSo7WChK+0k5D8tN0I4icLo
XmamzS/40MGE/H0L8OH7VlGoBHY0PdlpI/8OzJCLZoUH9B55433b3CiGdEhA
VvvVm9hIVlS6qhOUjj3h3E//p2tue8A3C0M89ahTb6B0pWcleIcAZcFJ3A1S
07pehN3u9LwLCqrREVYGC8h13cNbBvt6+omcHdW6v/fLFjgrBtF6YYkN6bre
924g6tt8oftrGS9etKDvlTGnEl/sjEzv8rKIvelQSyuIJpuTEDizmSwJL0ns
9qnbVsklEuzTZPSGHel1BQbqdzJe3lzYhdt5CRP59AYk5JiEiva6CnfDpNpA
mi0H8RJp8WYu/2dtoLkarZVI43O1WvZVb8OE+dNv6O7jA/yGXD+7iPe0Wr5X
kRMvMMbv0UQtpn8r9tQJgogpJc9aYxnaw3u3LHZfYc6N5u/Lr771fkd0PNCv
77Syqei1ttT9EqQRkUrfNwyahoZMlNamWzTuL2h1GZ6zdrCHGgF4JtJCzsOk
lY3V7FHZlcoPoCBiyeov7v8gyNV5iKXu/k9p0Ezdla85+hJZaD/z9W//w3lH
nHi1V2lwp+19J51/W0ack/tQksiK49ziXWAhwu2TlZowj2uk1HR8j3br0Mqu
F9vSU4h1qAnragsGSKglP8VNzY4WXcsDaWmp7HjLuDH7aXdea35asJC6s7rt
BSwkLMbhIN5vGDGANkwi5//lZgC9oiycVuO+e7eXto0ddahQhtaKz18kanfX
u7gVovGP4T8ZDZvp1u6MB7fCYjnPCQAtmu/8y/iACCUWeE/RnVyvTpSlkr17
Ud4UcpAUaXY1++JDHzjrU171Wq4JvGmHJ7WHOp+zO/Eejgu5mXPxm467HKfL
MzV8O3ZP9Kpb73/vR0qhaKSIHlk1hzZ7mXk++Ld/Hfb6I7kRU6hCQyL2Sqw4
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
YrrWkpTKTdh/Iyo5Bxf8L0R9/BM=\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1-1", "1-1#2-2", "1-1#2-2#3-3", "1-1#2-2#3-3#5-4", 
         "1-1#2-2#3-3#5-4#13-1", "1-1#2-2#3-3#5-4#13-1#4-1", 
         "1-1#2-2#3-3#5-4#13-1#4-1#6-1", "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1", 
         "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1", 
         "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1#9-2#10-2", 
         "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1#9-2#10-2#11-2", 
         "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1#9-2#10-2#11-2#12-2", 
         "1-1#2-2#3-4", "1-1#2-2#3-4#5-3", "1-1#2-2#3-4#5-3#13-1", 
         "1-1#2-2#3-4#5-3#13-1#4-1", "1-1#2-2#3-4#5-3#13-1#4-1#6-1", 
         "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1", 
         "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1", 
         "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1#9-2", 
         "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1#9-2#10-2", 
         "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1#9-2#10-2#11-2", 
         "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1#9-2#10-2#11-2#12-2", "1-1#2-3",
          "1-1#2-3#3-2", "1-1#2-3#3-2#5-4", "1-1#2-3#3-2#5-4#13-1", 
         "1-1#2-3#3-2#5-4#13-1#4-1", "1-1#2-3#3-2#5-4#13-1#4-1#6-1", 
         "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1", 
         "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1", 
         "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1#9-3#10-3", 
         "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1#9-3#10-3#11-3", 
         "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1#9-3#10-3#11-3#12-3", 
         "1-1#2-3#3-4", "1-1#2-3#3-4#5-2", "1-1#2-3#3-4#5-2#13-1", 
         "1-1#2-3#3-4#5-2#13-1#4-1", "1-1#2-3#3-4#5-2#13-1#4-1#6-1", 
         "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1", 
         "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1", 
         "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1#9-3", 
         "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1#9-3#10-3", 
         "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1#9-3#10-3#11-3", 
         "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1#9-3#10-3#11-3#12-3", "1-1#2-4",
          "1-1#2-4#3-2", "1-1#2-4#3-2#5-3", "1-1#2-4#3-2#5-3#13-1", 
         "1-1#2-4#3-2#5-3#13-1#4-1", "1-1#2-4#3-2#5-3#13-1#4-1#6-1", 
         "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1", 
         "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1", 
         "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1#9-4#10-4", 
         "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1#9-4#10-4#11-4", 
         "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1#9-4#10-4#11-4#12-4", 
         "1-1#2-4#3-3", "1-1#2-4#3-3#5-2", "1-1#2-4#3-3#5-2#13-1", 
         "1-1#2-4#3-3#5-2#13-1#4-1", "1-1#2-4#3-3#5-2#13-1#4-1#6-1", 
         "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1", 
         "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1", 
         "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1#9-4", 
         "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1#9-4#10-4", 
         "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1#9-4#10-4#11-4", 
         "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1#9-4#10-4#11-4#12-4"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
         9}, {9, 10}, {10, 11}, {11, 12}, {12, 13}, {2, 14}, {14, 15}, {15, 
         16}, {16, 17}, {17, 18}, {18, 19}, {19, 20}, {20, 21}, {21, 22}, {22,
          23}, {23, 24}, {1, 25}, {25, 26}, {26, 27}, {27, 28}, {28, 29}, {29,
          30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}, {34, 35}, {35, 36}, {
         25, 37}, {37, 38}, {38, 39}, {39, 40}, {40, 41}, {41, 42}, {42, 
         43}, {43, 44}, {44, 45}, {45, 46}, {46, 47}, {1, 48}, {48, 49}, {49, 
         50}, {50, 51}, {51, 52}, {52, 53}, {53, 54}, {54, 55}, {55, 56}, {56,
          57}, {57, 58}, {58, 59}, {48, 60}, {60, 61}, {61, 62}, {62, 63}, {
         63, 64}, {64, 65}, {65, 66}, {66, 67}, {67, 68}, {68, 69}, {69, 
         70}}}, {GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         PlotLabel -> {24, "12-12-4-4-4-4-4-4-4-4-4-3-3"}, 
         VertexStyle -> {
          "1-1#2-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1#9-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-2#3-3#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1#9-2#10-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-2#5-4#13-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-3#13-1#4-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1#9-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1#9-2#10-2#11-2#12-2" -> 
           RGBColor[0, 1, 0], "1-1#2-2#3-3#5-4#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-4#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-3#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3" -> RGBColor[0, 0, 1], "1-1#2-2#3-4#5-3" -> 
           RGBColor[0, 0, 1], "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1#9-3#10-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4" -> RGBColor[1, 1, 0], "1-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-2#13-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1#9-4#10-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1#9-4#10-4#11-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-2#13-1#4-1" -> RGBColor[1, 0, 0],
            "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1#9-3#10-3#11-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-3#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1#9-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3" -> RGBColor[0, 0, 1], 
           "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1#9-3#10-3#11-3#12-3" -> 
           RGBColor[0, 0, 1], "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1" -> 
           RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1#9-4#10-4#11-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-4#3-3#5-2#13-1#4-1#6-1#7-1#8-1#9-4#10-4#11-4#12-4" -> 
           RGBColor[1, 1, 0], "1-1#2-3#3-4#5-2#13-1#4-1" -> RGBColor[1, 0, 0],
            "1-1#2-2#3-3#5-4#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-3#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-3#3-2#5-4#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1#9-2#10-2#11-2#12-2" -> 
           RGBColor[0, 1, 0], 
           "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1#9-3#10-3#11-3" -> 
           RGBColor[0, 0, 1], "1-1#2-4#3-2#5-3#13-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-3#3-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-4" -> RGBColor[1, 1, 0], 
           "1-1#2-3#3-4#5-2#13-1#4-1#6-1#7-1#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-4#3-3#5-2#13-1" -> RGBColor[1, 0, 0], "1-1#2-3#3-4" -> 
           RGBColor[1, 1, 0], "1-1#2-2#3-4#5-3#13-1#4-1#6-1" -> 
           RGBColor[1, 0, 0], "1-1#2-4#3-2#5-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-4#5-2#13-1#4-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1#9-2#10-2#11-2" -> 
           RGBColor[0, 1, 0], "1-1#2-4#3-2" -> RGBColor[0, 1, 0], "1-1#2-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-2" -> RGBColor[0, 1, 0], 
           "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1#9-3" -> RGBColor[0, 0, 1], 
           "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-4#13-1#4-1#6-1#7-1#8-1#9-2" -> RGBColor[0, 1, 0], 
           "1-1#2-2#3-4#5-3#13-1#4-1#6-1#7-1#8-1#9-2#10-2" -> 
           RGBColor[0, 1, 0], "1-1#2-3#3-4#5-2#13-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-4#5-3#13-1#4-1" -> RGBColor[1, 0, 0], 
           "1-1#2-2#3-3#5-4#13-1#4-1#6-1" -> RGBColor[1, 0, 0], 
           "1-1#2-4#3-2#5-3#13-1#4-1#6-1#7-1#8-1#9-4#10-4" -> 
           RGBColor[1, 1, 0], 
           "1-1#2-3#3-2#5-4#13-1#4-1#6-1#7-1#8-1#9-3#10-3#11-3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxVk11Ik3EUxoeEXSQ5cmva1N6tjTm/9s6Z3jj2BGZhtdxWc8kYVg7MPmal
OdtFC8QbJcyQpllRIBReJBkVQRCUIl1EoGAf9mHZVWFdSBi5Pvz/z/uHDcZ4
ePee85zfOY/hUMQbTlOpVDX/v6u/2sMfW263W7Dvwy2s95jwYsTS53xmRvvn
3JHaXWbMNCzfkM+b8enApp9fxi0Y93c5l7pNKNBNv/SErej3ql8/6N2C1pme
0ccbi3DSPdwW6zfi/sXqbutUMepqC9SuhAFJd7JxoLMUcs290bRrEozpb6/G
tTLyu+IXendsxmRTZU/Fooy5WGIiy5eHI08vRb9N2nHl9NjKUEiPDOOP8M3r
ZWg4OuUwtuRgLL7bF4g6kM386+Bj/suFn/00j9Jf0bnUT9GDVN9PWkv1FM3r
ZQnN388UWsP+vxb1pCX2/K8rVX8XWkWfQEo/CzbMPukYCBoxTbw5Dwl3ibdq
7yq/fPTRfKcYbz1aifcC248ObpqX99OghHg/Z/XUyKb5o+z9dXhPvPk8azBM
PPg+f7uCxDvO9FdXJvHhUyxX+dlzq/B7JlKVCDUV4o+b+73M6hVRPT0edpgO
zgaKMU9+X7H+JXR/Gvw6l1FYt6eU6qmRw/zacIL85lWf7VyQZHjJL59PRjP5
de5cfCfp7Wgkv5yHXXAPSoPbtRYr2ui+E+RPuf83KX6UfdvovkywUT9fyn3Z
heb7KBOa349DaL7PcqH5vrcKvRQ6ln48ViE0v49KmteEeuI9T3mMEm8lj0M0
T4Ty+Ih4K3mco/lWKI9J4m1IyaMNE5RHiXg3Ux5lml/J4zbifYfy6CEeXsrj
P9AjvcY=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{1, 25}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{1, 48}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{2, 14}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{25, 37}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{48, 60}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{50, 51}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.09617813109650533]}, 
           {Arrowheads[0.], ArrowBox[{69, 70}, 0.09617813109650533]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[4, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[5, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[6, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[8, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[9, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[13, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[15, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[16, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[17, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[18, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[23, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[24, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[26, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[27, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[28, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[29, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[30, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[31, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[32, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[34, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[35, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[37, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[38, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[39, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[40, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[41, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[42, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[43, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[44, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[45, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[46, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[47, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[48, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[49, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[50, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[51, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[52, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[53, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[54, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[55, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[56, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[57, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[58, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[59, 0.09617813109650533]}, 
           {RGBColor[0, 0, 1], DiskBox[60, 0.09617813109650533]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[62, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[63, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[64, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[65, 0.09617813109650533]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[68, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[69, 0.09617813109650533]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.09617813109650533]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"24", ",", "\"12-12-4-4-4-4-4-4-4-4-4-3-3\""}], "}"}], 
      TraditionalForm]]}], "}"}]], "Output",
 CellChangeTimes->{{3.6626449217730417`*^9, 3.6626449521156893`*^9}, 
   3.6626450498542395`*^9, 3.6626452116316967`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Symbol", "[", 
     RowBox[{"\"\<x\>\"", "<>", 
      RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], ",", " ", 
   RowBox[{"FindHamiltonianPath", "[", 
    RowBox[{
     RowBox[{"ReadGrof", "[", "k", "]"}], ",", "1", ",", 
     RowBox[{"VertexCount", "[", 
      RowBox[{"ReadGrof", "[", "k", "]"}], "]"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6626473737393312`*^9, 3.6626473937272787`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SolutionTreeGraph", "[", "h_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"edges", ",", "order"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "we", " ", "first", " ", "take", " ", "a", " ", "hamiltonian", " ", 
      "path", " ", "to", " ", "make", " ", "sure", " ", "the", " ", "nodes", 
      " ", "in", " ", "the", " ", "3", " ", "have", " ", "different", " ", 
      "colors", " ", "when", " ", "they", " ", "are", " ", "next", " ", "to", 
      " ", "each", " ", "other"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"order", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Symbol", "[", 
          RowBox[{"\"\<x\>\"", "<>", 
           RowBox[{"ToString", "[", "#", "]"}]}], "]"}], "&"}], ",", " ", 
        RowBox[{"FindHamiltonianPath", "[", 
         RowBox[{"h", ",", "1", ",", 
          RowBox[{"VertexCount", "[", "h", "]"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"EdgeList", "[", 
          RowBox[{"PathGraph", "[", 
           RowBox[{"Map", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ToString", "[", "#", "]"}], "&"}], ",", 
             RowBox[{"Haccumulate", "[", " ", 
              RowBox[{"order", "/.", "#"}], "]"}]}], "]"}], "]"}], "]"}], 
         "&"}], ",", 
        RowBox[{"ToVarsLogical", "[", 
         RowBox[{"h", ",", 
          RowBox[{"x1", "\[Equal]", "1"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"With", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g", "=", 
         RowBox[{"Graph", "[", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Flatten", "[", "edges", "]"}], "]"}], "]"}]}], "}"}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"Graph", "[", 
        RowBox[{"g", ",", " ", 
         RowBox[{"GraphLayout", "\[Rule]", "\"\<RadialDrawing\>\""}], ",", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "->", 
              RowBox[{"IndexToColor", "[", " ", 
               RowBox[{"FromDigits", "[", " ", 
                RowBox[{"StringTake", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}]}], "&"}], ",", 
            " ", 
            RowBox[{"VertexList", "[", "g", "]"}]}], "]"}]}], ",", " ", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"ChromaticPolynomial", "[", 
              RowBox[{"h", ",", "4"}], "]"}], "/", "24"}], ",", 
            RowBox[{"GraphSignature2", "[", "h", "]"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.662645555193611*^9, 3.662645620472889*^9}, {
  3.662645698235589*^9, 3.662645698884261*^9}, {3.662645861848982*^9, 
  3.662645866739227*^9}, {3.662646038351238*^9, 3.662646038978321*^9}, {
  3.6626473974925213`*^9, 3.6626474775002136`*^9}, {3.662647508078374*^9, 
  3.6626475998747263`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SolutionTreeGraph", "[", 
  RowBox[{"JacobsThalGraph2", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6626456244349704`*^9, 3.6626456304595404`*^9}, {
  3.6626475155455027`*^9, 3.6626475194947867`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x1", ",", "x2", ",", "x3", ",", "x4"}], "}"}]], "Print",
 CellChangeTimes->{{3.6626475208280725`*^9, 3.662647539124562*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "1", "1#2", "1#2#3", "1#2#3#4", "1#2#4", "1#2#4#3", "1#3", "1#3#2", 
       "1#3#2#4", "1#3#4", "1#3#4#2", "1#4", "1#4#2", "1#4#2#3", "1#4#3", 
       "1#4#3#2"}, {
      Null, {{1, 2}, {2, 3}, {3, 4}, {2, 5}, {5, 6}, {1, 7}, {7, 8}, {8, 9}, {
       7, 10}, {10, 11}, {1, 12}, {12, 13}, {13, 14}, {12, 15}, {15, 16}}}, {
      GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
       ImageSize -> 400, PlotLabel -> {1, "3-3-3-3"}, 
       VertexStyle -> {
        "1#4#3#2" -> RGBColor[0, 1, 0], "1#4#2" -> RGBColor[0, 1, 0], "1#2" -> 
         RGBColor[0, 1, 0], "1#2#3" -> RGBColor[0, 0, 1], "1#3#4" -> 
         RGBColor[1, 1, 0], "1" -> RGBColor[1, 0, 0], "1#4#3" -> 
         RGBColor[0, 0, 1], "1#2#4#3" -> RGBColor[0, 0, 1], "1#2#4" -> 
         RGBColor[1, 1, 0], "1#4#2#3" -> RGBColor[0, 0, 1], "1#4" -> 
         RGBColor[1, 1, 0], "1#3#2#4" -> RGBColor[1, 1, 0], "1#3#2" -> 
         RGBColor[0, 1, 0], "1#3#4#2" -> RGBColor[0, 1, 0], "1#2#3#4" -> 
         RGBColor[1, 1, 0], "1#3" -> RGBColor[0, 0, 1]}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{2.7223730917948976`, 2.3576442560735678`}, {
       1.936491673103709, 2.811373104706051}, {1.8149153945299321`, 
       3.9294070934559455`}, {1.3611865458974495`, 4.715288512147135}, {
       0.907457697264966, 2.3576442560735686`}, {0., 2.357644256073569}, {
       2.7223730917948976`, 1.450186558808602}, {1.814915394529931, 
       0.7858814186911902}, {1.3611865458974477`, 1.3322676295501878`*^-15}, {
       3.629830789059862, 0.7858814186911891}, {4.083559637692344, 0.}, {
       3.508254510486087, 2.81137310470605}, {4.5372884863248295`, 
       2.3576442560735673`}, {5.444746183589795, 2.357644256073567}, {
       3.6298307890598642`, 3.929407093455945}, {4.083559637692348, 
       4.715288512147134}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{1, 7}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{1, 12}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{2, 5}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{3, 4}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{5, 6}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{7, 8}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{7, 10}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{8, 9}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{10, 11}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{12, 13}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{12, 15}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{13, 14}, 0.045532697021894705`]}, 
         {Arrowheads[0.], ArrowBox[{15, 16}, 0.045532697021894705`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         {RGBColor[1, 0, 0], DiskBox[1, 0.045532697021894705`]}, 
         {RGBColor[0, 1, 0], DiskBox[2, 0.045532697021894705`]}, 
         {RGBColor[0, 0, 1], DiskBox[3, 0.045532697021894705`]}, 
         {RGBColor[1, 1, 0], DiskBox[4, 0.045532697021894705`]}, 
         {RGBColor[1, 1, 0], DiskBox[5, 0.045532697021894705`]}, 
         {RGBColor[0, 0, 1], DiskBox[6, 0.045532697021894705`]}, 
         {RGBColor[0, 0, 1], DiskBox[7, 0.045532697021894705`]}, 
         {RGBColor[0, 1, 0], DiskBox[8, 0.045532697021894705`]}, 
         {RGBColor[1, 1, 0], DiskBox[9, 0.045532697021894705`]}, 
         {RGBColor[1, 1, 0], DiskBox[10, 0.045532697021894705`]}, 
         {RGBColor[0, 1, 0], DiskBox[11, 0.045532697021894705`]}, 
         {RGBColor[1, 1, 0], DiskBox[12, 0.045532697021894705`]}, 
         {RGBColor[0, 1, 0], DiskBox[13, 0.045532697021894705`]}, 
         {RGBColor[0, 0, 1], DiskBox[14, 0.045532697021894705`]}, 
         {RGBColor[0, 0, 1], DiskBox[15, 0.045532697021894705`]}, 
         {RGBColor[0, 1, 0], DiskBox[16, 0.045532697021894705`]}}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->400,
  PlotLabel->FormBox[
    RowBox[{"{", 
      RowBox[{"1", ",", "\"3-3-3-3\""}], "}"}], TraditionalForm]]], "Output",
 CellChangeTimes->{
  3.662645631206299*^9, {3.6626475214254274`*^9, 3.6626475391800547`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"SolutionTreeGraph", "[", 
    RowBox[{"ReadGrof", "[", "k", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "3", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6626456385449743`*^9, 3.6626456769071198`*^9}, 
   3.662645717634285*^9, {3.6626457779237175`*^9, 3.662645798927941*^9}, 
   3.662645875313691*^9, 3.6626474572800817`*^9, 3.6626475470480986`*^9, {
   3.662656893325775*^9, 3.6626568955318303`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1", "1#2", "1#2#4", "1#2#4#3", "1#2#4#3#2", "1#2#4#3#2#1", "1#2#3", 
         "1#2#3#4", "1#2#3#4#2", "1#2#3#4#2#1", "1#3", "1#3#4", "1#3#4#2", 
         "1#3#4#2#3", "1#3#4#2#3#1", "1#3#2", "1#3#2#4", "1#3#2#4#3", 
         "1#3#2#4#3#1", "1#4", "1#4#3", "1#4#3#2", "1#4#3#2#4", "1#4#3#2#4#1",
          "1#4#2", "1#4#2#3", "1#4#2#3#4", "1#4#2#3#4#1"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {2, 7}, {7, 8}, {8, 
         9}, {9, 10}, {1, 11}, {11, 12}, {12, 13}, {13, 14}, {14, 15}, {11, 
         16}, {16, 17}, {17, 18}, {18, 19}, {1, 20}, {20, 21}, {21, 22}, {22, 
         23}, {23, 24}, {20, 25}, {25, 26}, {26, 27}, {27, 28}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {1, "5-5-4-4-3-3"}, 
         VertexStyle -> {
          "1#4#3#2" -> RGBColor[0, 1, 0], "1#4#2" -> RGBColor[0, 1, 0], "1#2" -> 
           RGBColor[0, 1, 0], "1#2#3" -> RGBColor[0, 0, 1], "1#3#4" -> 
           RGBColor[1, 1, 0], "1" -> RGBColor[1, 0, 0], "1#4#3" -> 
           RGBColor[0, 0, 1], "1#3#4#2#3#1" -> RGBColor[1, 0, 0], 
           "1#2#3#4#2#1" -> RGBColor[1, 0, 0], "1#4#3#2#4" -> 
           RGBColor[1, 1, 0], "1#2#3#4#2" -> RGBColor[0, 1, 0], "1#2#4#3" -> 
           RGBColor[0, 0, 1], "1#2#4" -> RGBColor[1, 1, 0], "1#4#3#2#4#1" -> 
           RGBColor[1, 0, 0], "1#3#2#4#3" -> RGBColor[0, 0, 1], "1#4#2#3#4" -> 
           RGBColor[1, 1, 0], "1#2#4#3#2#1" -> RGBColor[1, 0, 0], 
           "1#4#2#3#4#1" -> RGBColor[1, 0, 0], "1#4#2#3" -> RGBColor[0, 0, 1],
            "1#3#2#4#3#1" -> RGBColor[1, 0, 0], "1#4" -> RGBColor[1, 1, 0], 
           "1#3#2#4" -> RGBColor[1, 1, 0], "1#2#4#3#2" -> RGBColor[0, 1, 0], 
           "1#3#2" -> RGBColor[0, 1, 0], "1#3#4#2#3" -> RGBColor[0, 0, 1], 
           "1#3#4#2" -> RGBColor[0, 1, 0], "1#2#3#4" -> RGBColor[1, 1, 0], 
           "1#3" -> RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQzfi3zeHVcyGHBR3GHrXxAg6HNY/9tXbmd2i3LpGu
dhZyyNTjNrlrz+fwIKL6tOgbMYc5Jzp7H5ZzOfx3kOdNMpJyuJDE8fzpejYH
ec3DfusqZB2YweYxQc1TcDgHlV8INT8DbN4/+0Uo/HdwPgMULIbyYe5b5pri
zKzP6ZAGdc+hguudJ5cyO8yAuofNEeSeX/anoPYJgPmv7P/8gbgHYuoDm7Ng
eTGHA1D9m0Q9dz2eLOHAANUPMU8Kyn9lX1d9KuF+tAzcXYpPtZrM9MQc2qDh
Mxuqfj6Kf+TgfCkvt9w3zIpwPsQ/SnD+eah77kPDdxvUPf+g4TsXar4cNHxb
oO6ZBw1fAOtXrV8=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{1, 11}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{1, 20}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{2, 7}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{11, 16}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{20, 25}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.06361795296221862]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.06361795296221862]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.06361795296221862]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.06361795296221862]}, 
           {RGBColor[1, 1, 0], DiskBox[3, 0.06361795296221862]}, 
           {RGBColor[0, 0, 1], DiskBox[4, 0.06361795296221862]}, 
           {RGBColor[0, 1, 0], DiskBox[5, 0.06361795296221862]}, 
           {RGBColor[1, 0, 0], DiskBox[6, 0.06361795296221862]}, 
           {RGBColor[0, 0, 1], DiskBox[7, 0.06361795296221862]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.06361795296221862]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.06361795296221862]}, 
           {RGBColor[1, 0, 0], DiskBox[10, 0.06361795296221862]}, 
           {RGBColor[0, 0, 1], DiskBox[11, 0.06361795296221862]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.06361795296221862]}, 
           {RGBColor[0, 1, 0], DiskBox[13, 0.06361795296221862]}, 
           {RGBColor[0, 0, 1], DiskBox[14, 0.06361795296221862]}, 
           {RGBColor[1, 0, 0], DiskBox[15, 0.06361795296221862]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.06361795296221862]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.06361795296221862]}, 
           {RGBColor[0, 0, 1], DiskBox[18, 0.06361795296221862]}, 
           {RGBColor[1, 0, 0], DiskBox[19, 0.06361795296221862]}, 
           {RGBColor[1, 1, 0], DiskBox[20, 0.06361795296221862]}, 
           {RGBColor[0, 0, 1], DiskBox[21, 0.06361795296221862]}, 
           {RGBColor[0, 1, 0], DiskBox[22, 0.06361795296221862]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.06361795296221862]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.06361795296221862]}, 
           {RGBColor[0, 1, 0], DiskBox[25, 0.06361795296221862]}, 
           {RGBColor[0, 0, 1], DiskBox[26, 0.06361795296221862]}, 
           {RGBColor[1, 1, 0], DiskBox[27, 0.06361795296221862]}, 
           {RGBColor[1, 0, 0], DiskBox[28, 0.06361795296221862]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"1", ",", "\"5-5-4-4-3-3\""}], "}"}], TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1", "1#2", "1#2#1", "1#2#1#3", "1#2#1#3#2", "1#2#1#3#2#3", "1#2#4", 
         "1#2#4#3", "1#2#4#3#2", "1#2#4#3#2#3", "1#2#1#3#2#4", "1#2#1#3#4", 
         "1#2#1#3#4#3", "1#2#1#4", "1#2#1#4#2", "1#2#1#4#2#3", "1#2#1#4#2#4", 
         "1#2#3", "1#2#3#4", "1#2#3#4#2", "1#2#3#4#2#4", "1#2#1#4#3", 
         "1#2#1#4#3#4", "1#3", "1#3#1", "1#3#1#2", "1#3#1#2#3", "1#3#1#2#3#2",
          "1#3#4", "1#3#4#2", "1#3#4#2#3", "1#3#4#2#3#2", "1#3#1#2#3#4", 
         "1#3#1#2#4", "1#3#1#2#4#2", "1#3#1#4", "1#3#1#4#2", "1#3#1#4#2#4", 
         "1#3#1#4#3", "1#3#1#4#3#2", "1#3#1#4#3#4", "1#3#2", "1#3#2#4", 
         "1#3#2#4#3", "1#3#2#4#3#4", "1#4", "1#4#1", "1#4#1#2", "1#4#1#2#3", 
         "1#4#1#2#3#2", "1#4#1#2#4", "1#4#1#2#4#2", "1#4#3", "1#4#3#2", 
         "1#4#3#2#4", "1#4#3#2#4#2", "1#4#1#2#4#3", "1#4#1#3", "1#4#1#3#2", 
         "1#4#1#3#2#3", "1#4#1#3#4", "1#4#1#3#4#2", "1#4#1#3#4#3", "1#4#2", 
         "1#4#2#3", "1#4#2#3#4", "1#4#2#3#4#3"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {2, 7}, {7, 8}, {8, 
         9}, {9, 10}, {5, 11}, {4, 12}, {12, 13}, {3, 14}, {14, 15}, {15, 
         16}, {15, 17}, {2, 18}, {18, 19}, {19, 20}, {20, 21}, {14, 22}, {22, 
         23}, {1, 24}, {24, 25}, {25, 26}, {26, 27}, {27, 28}, {24, 29}, {29, 
         30}, {30, 31}, {31, 32}, {27, 33}, {26, 34}, {34, 35}, {25, 36}, {36,
          37}, {37, 38}, {36, 39}, {39, 40}, {39, 41}, {24, 42}, {42, 43}, {
         43, 44}, {44, 45}, {1, 46}, {46, 47}, {47, 48}, {48, 49}, {49, 50}, {
         48, 51}, {51, 52}, {46, 53}, {53, 54}, {54, 55}, {55, 56}, {51, 
         57}, {47, 58}, {58, 59}, {59, 60}, {58, 61}, {61, 62}, {61, 63}, {46,
          64}, {64, 65}, {65, 66}, {66, 67}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {4, "4-4-4-4-4-4"}, 
         VertexStyle -> {
          "1#4#1#3" -> RGBColor[0, 0, 1], "1#3#4#2" -> RGBColor[0, 1, 0], 
           "1#4#1#2#4" -> RGBColor[1, 1, 0], "1#3" -> RGBColor[0, 0, 1], 
           "1#4#3" -> RGBColor[0, 0, 1], "1#3#4#2#3#2" -> RGBColor[0, 1, 0], 
           "1#4#3#2#4#2" -> RGBColor[0, 1, 0], "1#2#3" -> RGBColor[0, 0, 1], 
           "1#3#4" -> RGBColor[1, 1, 0], "1#3#1#2#3#2" -> RGBColor[0, 1, 0], 
           "1#4#1#2#4#2" -> RGBColor[0, 1, 0], "1#3#4#2#3" -> 
           RGBColor[0, 0, 1], "1#2#1#3#2#3" -> RGBColor[0, 0, 1], "1#2#1#4" -> 
           RGBColor[1, 1, 0], "1#4#2#3#4#3" -> RGBColor[0, 0, 1], "1#4#1#2" -> 
           RGBColor[0, 1, 0], "1#2#1#4#2#3" -> RGBColor[0, 0, 1], 
           "1#2#3#4#2#4" -> RGBColor[1, 1, 0], "1#2#1#4#3#4" -> 
           RGBColor[1, 1, 0], "1#2#4#3" -> RGBColor[0, 0, 1], "1#2#3#4" -> 
           RGBColor[1, 1, 0], "1#4#1" -> RGBColor[1, 0, 0], "1#3#1#4#3#2" -> 
           RGBColor[0, 1, 0], "1#4#1#3#4#3" -> RGBColor[0, 0, 1], "1" -> 
           RGBColor[1, 0, 0], "1#2#1#4#2#4" -> RGBColor[1, 1, 0], "1#4" -> 
           RGBColor[1, 1, 0], "1#3#1#2#4#2" -> RGBColor[0, 1, 0], 
           "1#4#1#3#4#2" -> RGBColor[0, 1, 0], "1#4#1#3#2#3" -> 
           RGBColor[0, 0, 1], "1#2#1#3" -> RGBColor[0, 0, 1], "1#2#3#4#2" -> 
           RGBColor[0, 1, 0], "1#4#2#3#4" -> RGBColor[1, 1, 0], "1#4#2" -> 
           RGBColor[0, 1, 0], "1#4#1#3#2" -> RGBColor[0, 1, 0], "1#4#2#3" -> 
           RGBColor[0, 0, 1], "1#4#1#2#3#2" -> RGBColor[0, 1, 0], "1#3#2" -> 
           RGBColor[0, 1, 0], "1#2#1#3#2#4" -> RGBColor[1, 1, 0], 
           "1#3#1#2#3#4" -> RGBColor[1, 1, 0], "1#2" -> RGBColor[0, 1, 0], 
           "1#4#3#2" -> RGBColor[0, 1, 0], "1#3#2#4" -> RGBColor[1, 1, 0], 
           "1#3#1#4#2" -> RGBColor[0, 1, 0], "1#2#4" -> RGBColor[1, 1, 0], 
           "1#3#1#2#3" -> RGBColor[0, 0, 1], "1#4#1#2#4#3" -> 
           RGBColor[0, 0, 1], "1#3#1" -> RGBColor[1, 0, 0], "1#2#4#3#2#3" -> 
           RGBColor[0, 0, 1], "1#3#1#4#3#4" -> RGBColor[1, 1, 0], "1#2#4#3#2" -> 
           RGBColor[0, 1, 0], "1#2#1#3#2" -> RGBColor[0, 1, 0], "1#2#1" -> 
           RGBColor[1, 0, 0], "1#2#1#3#4#3" -> RGBColor[0, 0, 1], "1#4#1#2#3" -> 
           RGBColor[0, 0, 1], "1#4#1#3#4" -> RGBColor[1, 1, 0], "1#3#1#4" -> 
           RGBColor[1, 1, 0], "1#3#2#4#3" -> RGBColor[0, 0, 1], "1#4#3#2#4" -> 
           RGBColor[1, 1, 0], "1#2#1#4#3" -> RGBColor[0, 0, 1], "1#3#1#2" -> 
           RGBColor[0, 1, 0], "1#3#1#4#2#4" -> RGBColor[1, 1, 0], "1#3#1#2#4" -> 
           RGBColor[1, 1, 0], "1#2#1#3#4" -> RGBColor[1, 1, 0], "1#3#2#4#3#4" -> 
           RGBColor[1, 1, 0], "1#3#1#4#3" -> RGBColor[0, 0, 1], "1#2#1#4#2" -> 
           RGBColor[0, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxVk3tIk2EUxucurum8zw2nzguKg0qnmIGNviOKLQnMtWBY6RhmZoKXrFiW
rRZuKpVhLNkKRVIaZVqZqXRjkqQtJyVqmXlJbagZltdGdsHzCX3wcXj/OOc9
v+d53iBlrvQwlUKhxP/9/1XjiNWl09kDyEpdnmC8D2aD0LG4errDE9hTM1vb
Dm0CkcV0sdHmDVlSUa00ygliIlUXjJV8uPLqee2nFSfgN/94/E0mAAfpgLjc
4ILzgkBLdMZrC+lwVV/IWQ11B8XvB42sRDvBm7gUEZrphucZgm2MipGrXYGC
HxXnfGJN2fvn6GB9GGDjnAqE2b3nW1VyB5C117VIFn2hOfs4kZ3yk6BFDilM
jQJY227IMLutETS9tlu5xoFu8dHSc6ULhFWlk8lneXAjP6Tfm5ghyibM5ZEa
X6hQMVpC9G+JpPa7NwNreHBE6qXOVTLgzsn9J9z72BvzMpFb9Nqlqy51nggM
d7Zeq2CCGvuHcM8M5LmfX0JRDHgiT684hht9NjHJa0NnWuiXvtUYZxjpiEjf
pnOF1umifGUPHYpnJSk7dQwIWk4TSNoc4JlPntqy6xdhxlqF+5PcW4qu15ft
8IbTE10FrHAmLEjs33P28cAP+59y04nkYz5wxstW6VK6QpQgtxrnNOGcGjwL
kCsKOQeRi9RJ+GZQo8rwhDT0kYa+ZSH3Usq6b+vco+KvH4huPyMHPsoV/p85
c4QIdSB9TkDds3D+kiVWqVVzwVXnPk1tZcGt+Dy2LdYHVKiLFH2fxBxQ0Pca
5GiJb6gKcORAGOZ3qGtsPLWJBwnDzJz8d+TevuCG+cvec9A0/sIfSO4ezBnJ
TeHEGactAjCgbwbMNck5Rlsc1TR4AZWrPyDL5AEdc0e+jzAhvzkumbtxD5kz
8h7ynUSjLvXIu4Q+5mBfMM7pxT5St65Wjb3qJR/MWB1RD9Lny1hJnW4LNzMr
5z2goPqJSjLMg/D//PSFR5jb3emmye57AhDjXiT3H/K4wk4=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{1, 24}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{1, 46}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{2, 7}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{2, 18}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{3, 14}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{4, 12}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{5, 11}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{7, 8}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{14, 22}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{15, 17}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{24, 29}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{24, 42}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{25, 36}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{26, 34}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{27, 33}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{36, 39}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{39, 41}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{42, 43}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{46, 53}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{46, 64}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{47, 58}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{48, 51}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{51, 57}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{58, 61}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{61, 63}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.0600031312883776]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.0600031312883776]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.0600031312883776]}, 
           {RGBColor[1, 0, 0], DiskBox[3, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[4, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[5, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[6, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[7, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[8, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[10, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[11, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[13, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[16, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[18, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[20, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[21, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[22, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[24, 0.0600031312883776]}, 
           {RGBColor[1, 0, 0], DiskBox[25, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[26, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[27, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[28, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[29, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[31, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[32, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[33, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[34, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[35, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[36, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[37, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[38, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[39, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[40, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[41, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[42, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[44, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[46, 0.0600031312883776]}, 
           {RGBColor[1, 0, 0], DiskBox[47, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[49, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[51, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[52, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[53, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[55, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[57, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[59, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[60, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[61, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[62, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[63, 0.0600031312883776]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.0600031312883776]}, 
           {RGBColor[1, 1, 0], DiskBox[66, 0.0600031312883776]}, 
           {RGBColor[0, 0, 1], DiskBox[67, 0.0600031312883776]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"4", ",", "\"4-4-4-4-4-4\""}], "}"}], TraditionalForm]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1", "1#2", "1#2#4", "1#2#4#2", "1#2#4#2#3", "1#2#4#2#3#1", 
         "1#2#4#2#3#1#4", "1#2#3", "1#2#3#2", "1#2#3#2#4", "1#2#3#2#4#1", 
         "1#2#3#2#4#1#3", "1#3", "1#3#4", "1#3#4#3", "1#3#4#3#2", 
         "1#3#4#3#2#1", "1#3#4#3#2#1#4", "1#3#2", "1#3#2#3", "1#3#2#3#4", 
         "1#3#2#3#4#1", "1#3#2#3#4#1#2", "1#4", "1#4#3", "1#4#3#4", 
         "1#4#3#4#2", "1#4#3#4#2#1", "1#4#3#4#2#1#3", "1#4#2", "1#4#2#4", 
         "1#4#2#4#3", "1#4#2#4#3#1", "1#4#2#4#3#1#2"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {2, 8}, {8, 
         9}, {9, 10}, {10, 11}, {11, 12}, {1, 13}, {13, 14}, {14, 15}, {15, 
         16}, {16, 17}, {17, 18}, {13, 19}, {19, 20}, {20, 21}, {21, 22}, {22,
          23}, {1, 24}, {24, 25}, {25, 26}, {26, 27}, {27, 28}, {28, 29}, {24,
          30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {1, "6-5-5-4-4-3-3"}, 
         VertexStyle -> {
          "1#3#2#3" -> RGBColor[0, 0, 1], "1#3" -> RGBColor[0, 0, 1], 
           "1#4#3#4#2#1" -> RGBColor[1, 0, 0], "1#2#3#2" -> RGBColor[0, 1, 0],
            "1#4#3" -> RGBColor[0, 0, 1], "1#2#3" -> RGBColor[0, 0, 1], 
           "1#3#4" -> RGBColor[1, 1, 0], "1#2#3#2#4" -> RGBColor[1, 1, 0], 
           "1#4#3#4" -> RGBColor[1, 1, 0], "1#4#2#4#3#1#2" -> 
           RGBColor[0, 1, 0], "1#4#2#4" -> RGBColor[1, 1, 0], "1#3#4#3#2#1" -> 
           RGBColor[1, 0, 0], "1#3#2#3#4" -> RGBColor[1, 1, 0], "1#2#4#2" -> 
           RGBColor[0, 1, 0], "1" -> RGBColor[1, 0, 0], "1#4" -> 
           RGBColor[1, 1, 0], "1#3#2#3#4#1#2" -> RGBColor[0, 1, 0], 
           "1#2#3#2#4#1" -> RGBColor[1, 0, 0], "1#4#2" -> RGBColor[0, 1, 0], 
           "1#4#3#4#2" -> RGBColor[0, 1, 0], "1#3#2" -> RGBColor[0, 1, 0], 
           "1#3#4#3#2" -> RGBColor[0, 1, 0], "1#2" -> RGBColor[0, 1, 0], 
           "1#3#2#3#4#1" -> RGBColor[1, 0, 0], "1#4#2#4#3#1" -> 
           RGBColor[1, 0, 0], "1#2#4" -> RGBColor[1, 1, 0], "1#3#4#3" -> 
           RGBColor[0, 0, 1], "1#3#4#3#2#1#4" -> RGBColor[1, 1, 0], 
           "1#4#2#4#3" -> RGBColor[0, 0, 1], "1#2#4#2#3#1" -> 
           RGBColor[1, 0, 0], "1#4#3#4#2#1#3" -> RGBColor[0, 0, 1], 
           "1#2#3#2#4#1#3" -> RGBColor[0, 0, 1], "1#2#4#2#3" -> 
           RGBColor[0, 0, 1], "1#2#4#2#3#1#4" -> RGBColor[1, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQLfKE89TLF2IOkTMrPmleF3a4Le99JmmWsAOb+BKJ
F/tFHfa82FSbKy7scFrx21vzEikHgez28PV6gg4sz7a83ndI1uHEre1Jj7r5
HOSv7vyyqEPBIf9+gljaLi4HG/OZxc/0lRzEweazOUSAzVd2OAZVHwW1TwQq
Hw3lQ+T/2cP4EPPf2cdA+QxQEIuiX8yBYZ7isrWsAg67oO49B3YvlwMf1L0Q
/cwOh6D2XwPL/7LPgLr3AZj/yp4P6h6ILS9sssHyUg5noOaJx/bYqCyWgYYX
zDw5qPwve/M1hS4BVgoOJ6Dm8YLtV4S722/FieMF5lIOrNDwPQrVHwH1Dz9U
PYy/G+wfZTg/I+3eYm0GVTgf4n81h3AoPw/qXlh8SUHdC4uv41D75KDxZQV1
rxU0vgSg9odD4wsAPBbwqA==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{1, 13}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{1, 24}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{2, 8}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{13, 19}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{24, 30}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.07049265508272014]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[3, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[4, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[5, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[6, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[7, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[8, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[9, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[11, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[12, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[13, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[15, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[17, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[18, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[19, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[20, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[21, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[22, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[23, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[26, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[27, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[28, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[29, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[31, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[33, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[34, 0.07049265508272014]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"1", ",", "\"6-5-5-4-4-3-3\""}], "}"}], TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1", "1#2", "1#2#3", "1#2#3#1", "1#2#3#1#4", "1#2#3#1#4#2", 
         "1#2#3#1#4#2#3", "1#2#3#4", "1#2#3#4#1", "1#2#3#4#1#2", 
         "1#2#3#4#1#2#3", "1#2#3#1#4#2#4", "1#2#3#1#2", "1#2#3#1#2#4", 
         "1#2#3#1#2#4#3", "1#2#4", "1#2#4#1", "1#2#4#1#3", "1#2#4#1#3#2", 
         "1#2#4#1#3#2#3", "1#2#4#1#3#2#4", "1#2#4#3", "1#2#4#3#1", 
         "1#2#4#3#1#2", "1#2#4#3#1#2#4", "1#2#4#1#2", "1#2#4#1#2#3", 
         "1#2#4#1#2#3#4", "1#3", "1#3#2", "1#3#2#1", "1#3#2#1#4", 
         "1#3#2#1#4#3", "1#3#2#1#4#3#2", "1#3#2#4", "1#3#2#4#1", 
         "1#3#2#4#1#3", "1#3#2#4#1#3#2", "1#3#2#1#4#3#4", "1#3#2#1#3", 
         "1#3#2#1#3#4", "1#3#2#1#3#4#2", "1#3#4", "1#3#4#1", "1#3#4#1#3", 
         "1#3#4#1#3#2", "1#3#4#1#3#2#4", "1#3#4#1#2", "1#3#4#1#2#3", 
         "1#3#4#1#2#3#2", "1#3#4#1#2#3#4", "1#3#4#2", "1#3#4#2#1", 
         "1#3#4#2#1#3", "1#3#4#2#1#3#4", "1#4", "1#4#2", "1#4#2#1", 
         "1#4#2#1#4", "1#4#2#1#4#3", "1#4#2#1#4#3#2", "1#4#2#1#3", 
         "1#4#2#1#3#4", "1#4#2#1#3#4#2", "1#4#2#3", "1#4#2#3#1", 
         "1#4#2#3#1#4", "1#4#2#3#1#4#2", "1#4#2#1#3#4#3", "1#4#3", "1#4#3#1", 
         "1#4#3#1#4", "1#4#3#1#4#2", "1#4#3#1#4#2#3", "1#4#3#1#2", 
         "1#4#3#1#2#4", "1#4#3#1#2#4#2", "1#4#3#1#2#4#3", "1#4#3#2", 
         "1#4#3#2#1", "1#4#3#2#1#4", "1#4#3#2#1#4#3"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {3, 8}, {8, 
         9}, {9, 10}, {10, 11}, {6, 12}, {4, 13}, {13, 14}, {14, 15}, {2, 
         16}, {16, 17}, {17, 18}, {18, 19}, {19, 20}, {19, 21}, {16, 22}, {22,
          23}, {23, 24}, {24, 25}, {17, 26}, {26, 27}, {27, 28}, {1, 29}, {29,
          30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}, {30, 35}, {35, 36}, {
         36, 37}, {37, 38}, {33, 39}, {31, 40}, {40, 41}, {41, 42}, {29, 
         43}, {43, 44}, {44, 45}, {45, 46}, {46, 47}, {44, 48}, {48, 49}, {49,
          50}, {49, 51}, {43, 52}, {52, 53}, {53, 54}, {54, 55}, {1, 56}, {56,
          57}, {57, 58}, {58, 59}, {59, 60}, {60, 61}, {58, 62}, {62, 63}, {
         63, 64}, {57, 65}, {65, 66}, {66, 67}, {67, 68}, {63, 69}, {56, 
         70}, {70, 71}, {71, 72}, {72, 73}, {73, 74}, {71, 75}, {75, 76}, {76,
          77}, {76, 78}, {70, 79}, {79, 80}, {80, 81}, {81, 82}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {4, "5-5-5-4-4-4-3"}, 
         VertexStyle -> {
          "1#2#4#3#1" -> RGBColor[1, 0, 0], "1#4#3" -> RGBColor[0, 0, 1], 
           "1#4#2#3#1#4#2" -> RGBColor[0, 1, 0], "1#4#2#1#3#4#3" -> 
           RGBColor[0, 0, 1], "1#2#3" -> RGBColor[0, 0, 1], "1#3#2#1#4" -> 
           RGBColor[1, 1, 0], "1#3#4#1#3#2#4" -> RGBColor[1, 1, 0], 
           "1#3#2#1#3#4#2" -> RGBColor[0, 1, 0], "1#2#3#4" -> 
           RGBColor[1, 1, 0], "1#2#3#1" -> RGBColor[1, 0, 0], "1#3#4#2#1#3#4" -> 
           RGBColor[1, 1, 0], "1#3#4#1#3#2" -> RGBColor[0, 1, 0], 
           "1#4#2#1#3#4#2" -> RGBColor[0, 1, 0], "1#2#3#4#1#2" -> 
           RGBColor[0, 1, 0], "1#2#4#1#3#2#4" -> RGBColor[1, 1, 0], "1#2#4" -> 
           RGBColor[1, 1, 0], "1#4#3#2#1" -> RGBColor[1, 0, 0], "1#4#2#1" -> 
           RGBColor[1, 0, 0], "1#4#3#2#1#4#3" -> RGBColor[0, 0, 1], "1#3#2#4" -> 
           RGBColor[1, 1, 0], "1#3#4#2" -> RGBColor[0, 1, 0], "1#3#4#1" -> 
           RGBColor[1, 0, 0], "1#4#2#1#3" -> RGBColor[0, 0, 1], "1#4#3#1#2#4" -> 
           RGBColor[1, 1, 0], "1#3#2#1#4#3" -> RGBColor[0, 0, 1], 
           "1#4#2#1#3#4" -> RGBColor[1, 1, 0], "1#3#4#2#1#3" -> 
           RGBColor[0, 0, 1], "1#2#3#1#2#4" -> RGBColor[1, 1, 0], "1#3" -> 
           RGBColor[0, 0, 1], "1#4#3#2" -> RGBColor[0, 1, 0], "1#4#2#3#1" -> 
           RGBColor[1, 0, 0], "1#2#4#3#1#2" -> RGBColor[0, 1, 0], 
           "1#3#4#1#2#3#4" -> RGBColor[1, 1, 0], "1#4#2#1#4" -> 
           RGBColor[1, 1, 0], "1#4" -> RGBColor[1, 1, 0], "1#2#4#1#3" -> 
           RGBColor[0, 0, 1], "1#3#2#4#1#3#2" -> RGBColor[0, 1, 0], 
           "1#3#2#1#3" -> RGBColor[0, 0, 1], "1" -> RGBColor[1, 0, 0], 
           "1#2#4#1#2#3" -> RGBColor[0, 0, 1], "1#4#3#1#4#2#3" -> 
           RGBColor[0, 0, 1], "1#2#4#1" -> RGBColor[1, 0, 0], "1#3#2" -> 
           RGBColor[0, 1, 0], "1#2#3#1#4#2#3" -> RGBColor[0, 0, 1], "1#3#4" -> 
           RGBColor[1, 1, 0], "1#4#3#1#4" -> RGBColor[1, 1, 0], 
           "1#2#3#1#2#4#3" -> RGBColor[0, 0, 1], "1#3#2#4#1" -> 
           RGBColor[1, 0, 0], "1#2#4#1#3#2#3" -> RGBColor[0, 0, 1], 
           "1#4#3#1#2#4#3" -> RGBColor[0, 0, 1], "1#3#4#2#1" -> 
           RGBColor[1, 0, 0], "1#3#4#1#2#3#2" -> RGBColor[0, 1, 0], "1#4#2#3" -> 
           RGBColor[0, 0, 1], "1#4#2#3#1#4" -> RGBColor[1, 1, 0], 
           "1#2#4#1#3#2" -> RGBColor[0, 1, 0], "1#2#4#3#1#2#4" -> 
           RGBColor[1, 1, 0], "1#2#3#1#2" -> RGBColor[0, 1, 0], "1#4#3#2#1#4" -> 
           RGBColor[1, 1, 0], "1#3#2#4#1#3" -> RGBColor[0, 0, 1], 
           "1#2#3#1#4#2#4" -> RGBColor[1, 1, 0], "1#2" -> RGBColor[0, 1, 0], 
           "1#3#4#1#3" -> RGBColor[0, 0, 1], "1#3#4#1#2#3" -> 
           RGBColor[0, 0, 1], "1#2#3#4#1" -> RGBColor[1, 0, 0], "1#3#2#1" -> 
           RGBColor[1, 0, 0], "1#4#2#1#4#3#2" -> RGBColor[0, 1, 0], 
           "1#4#2#1#4#3" -> RGBColor[0, 0, 1], "1#4#2" -> RGBColor[0, 1, 0], 
           "1#2#4#1#2#3#4" -> RGBColor[1, 1, 0], "1#4#3#1#2" -> 
           RGBColor[0, 1, 0], "1#3#2#1#3#4" -> RGBColor[1, 1, 0], "1#4#3#1" -> 
           RGBColor[1, 0, 0], "1#2#3#1#4#2" -> RGBColor[0, 1, 0], "1#2#4#1#2" -> 
           RGBColor[0, 1, 0], "1#3#2#1#4#3#2" -> RGBColor[0, 1, 0], 
           "1#2#3#4#1#2#3" -> RGBColor[0, 0, 1], "1#4#3#1#4#2" -> 
           RGBColor[0, 1, 0], "1#3#2#1#4#3#4" -> RGBColor[1, 1, 0], 
           "1#2#3#1#4" -> RGBColor[1, 1, 0], "1#3#4#1#2" -> RGBColor[0, 1, 0],
            "1#4#3#1#2#4#2" -> RGBColor[0, 1, 0], "1#2#4#3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxVlHtIU3EUx++cj6zN+Zhzc5s6Zxm9LM2pIdwDhlampRVJ9rIy/zAw02QR
aVDGUtQon/m2ohWaNiszyuxt+JrSwybFigws0zmdNXProec36MI4XLic8z2f
7/lOsi8lNtGKoqjYv79/lcu4e0Dk4wqkDqSxbAIcnSFounAB8xsP1A5m3qZi
J8gXcnzGIoUQbtjeVcFxAqXJo7fd5AGxqSk6WYYT+A/Ik5UpEkiI2nXhQY4j
iBzajQ6+Ugi1SewpiXfG/gth0NqQk77LHtSGZvP1WiEcasrofN/KBI7ezj+7
UwzTLTq3/GUzdPRofOIegyeIOJOle4d09NxcCej6x5LWTNmDh+lxhSrZBwK8
1CuSjPPAuFUzfjnQC1p8F3eorliD69fW2pwqCYT4nUwwx1CwKqss5rCdFLgh
ivNMJxa44r5z1Qassj427lbwwDHC+LL6konWnKPeMfr5cNIvq/GNeozuvOUs
O/5AANrMGnMw+y3dzJcXCaPEQM0+6lD9zPxfNSNuQNnXTY4V2sI65KS/rWp4
y6RA9SlF8fkgBzqenenOHNLTrzR+8oIbLGjHflO412FGzeDClTO0hvlmm2C9
C76P0Lmnxefj+p1xHkX9z9UVetGnHqyy7kcbLvxkQ9OsTraF+4Ined0Xl9sC
G2tYQFH0xCIGhGPlI2/CzfdUvkDz0MXCaQB1HUGdZ1GXHHWuQV2ESxD2IT42
IYcJ5NKHHLqQyyRyIFziJlJVwzf5sBr3+cTim8qDBcBAztHmsjTP3zwLt8oT
sUHao24WbiPEF3zKh5ZSLbQI6FKXru9KBtz/MO9qpa0HKH7JBTKrH3Q9+krm
h+HdsVD/vSzDqcwyMdxAruTuVuEdcvHumvEOV+LdBSKHmPz9T22C+SDDfFWh
HuJjFYNbsuSOJ/gg9+ItkccWSSWgRG47FtvlHnrhDR3ITYw5GEZu3KHebmWD
BFywn+xDfXpButTyTnIYiD6RHGuRaynO63UMzn5e6A47cV4bN449rhNackc4
kX7fkPMO9CsP/y/6MOeE2zTycsC885DXRsw7ySnJewXysRY2j2tbvaAN/ar7
qKh9HeYNEfgd4dyIuohOBuaacN2M9/KFWnvN7e/caryXGcps654ghVHcg+z1
B3alHiI=
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{1, 29}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{1, 56}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{2, 16}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{3, 8}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{4, 13}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{6, 12}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{16, 22}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{17, 26}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{19, 21}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{29, 43}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{30, 35}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{31, 40}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{33, 39}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{36, 37}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{40, 41}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{43, 44}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{43, 52}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{44, 48}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{45, 46}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{49, 51}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{54, 55}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{56, 57}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{56, 70}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{57, 65}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{58, 59}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{58, 62}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{59, 60}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{63, 69}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{65, 66}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{70, 79}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{71, 72}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{71, 75}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{73, 74}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{76, 78}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{79, 80}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.0675955336727864]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.0675955336727864]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[4, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[5, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[6, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[7, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[9, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[10, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[11, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[12, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[13, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[15, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[16, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[17, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[18, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[19, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[20, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[21, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[22, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[23, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[24, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[25, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[26, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[27, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[29, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[31, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[32, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[33, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[34, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[36, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[37, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[38, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[39, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[40, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[41, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[42, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[44, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[45, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[46, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[47, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[48, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[49, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[51, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[52, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[53, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[54, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[55, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[56, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[57, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[58, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[59, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[60, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[62, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[63, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[64, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[66, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[67, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[68, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[69, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[70, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[71, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[72, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[73, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[74, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[75, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[76, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[77, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[78, 0.0675955336727864]}, 
           {RGBColor[0, 1, 0], DiskBox[79, 0.0675955336727864]}, 
           {RGBColor[1, 0, 0], DiskBox[80, 0.0675955336727864]}, 
           {RGBColor[1, 1, 0], DiskBox[81, 0.0675955336727864]}, 
           {RGBColor[0, 0, 1], DiskBox[82, 0.0675955336727864]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"4", ",", "\"5-5-5-4-4-4-3\""}], "}"}], TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1", "1#2", "1#2#3", "1#2#3#1", "1#2#3#1#3", "1#2#3#1#3#4", 
         "1#2#3#1#3#4#2", "1#2#3#4", "1#2#3#4#3", "1#2#3#4#3#1", 
         "1#2#3#4#3#1#2", "1#2#3#1#3#2", "1#2#3#1#3#2#4", "1#2#3#4#3#1#4", 
         "1#2#3#4#3#2", "1#2#3#4#3#2#4", "1#2#4", "1#2#4#1", "1#2#4#1#4", 
         "1#2#4#1#4#3", "1#2#4#1#4#3#2", "1#2#4#3", "1#2#4#3#4", 
         "1#2#4#3#4#1", "1#2#4#3#4#1#2", "1#2#4#1#4#2", "1#2#4#1#4#2#3", 
         "1#2#4#3#4#1#3", "1#2#4#3#4#2", "1#2#4#3#4#2#3", "1#3", "1#3#2", 
         "1#3#2#1", "1#3#2#1#2", "1#3#2#1#2#4", "1#3#2#1#2#4#3", "1#3#2#4", 
         "1#3#2#4#2", "1#3#2#4#2#1", "1#3#2#4#2#1#3", "1#3#2#1#2#3", 
         "1#3#2#1#2#3#4", "1#3#2#4#2#1#4", "1#3#2#4#2#3", "1#3#2#4#2#3#4", 
         "1#3#4", "1#3#4#1", "1#3#4#1#4", "1#3#4#1#4#3", "1#3#4#1#4#3#2", 
         "1#3#4#2", "1#3#4#2#4", "1#3#4#2#4#1", "1#3#4#2#4#1#2", 
         "1#3#4#2#4#3", "1#3#4#2#4#3#2", "1#3#4#1#4#2", "1#3#4#1#4#2#3", 
         "1#3#4#2#4#1#3", "1#4", "1#4#2", "1#4#2#1", "1#4#2#1#2", 
         "1#4#2#1#2#4", "1#4#2#1#2#4#3", "1#4#2#3", "1#4#2#3#2", 
         "1#4#2#3#2#1", "1#4#2#3#2#1#3", "1#4#2#3#2#4", "1#4#2#3#2#4#3", 
         "1#4#2#1#2#3", "1#4#2#1#2#3#4", "1#4#2#3#2#1#4", "1#4#3", "1#4#3#1", 
         "1#4#3#1#3", "1#4#3#1#3#4", "1#4#3#1#3#4#2", "1#4#3#2", "1#4#3#2#3", 
         "1#4#3#2#3#1", "1#4#3#2#3#1#2", "1#4#3#2#3#4", "1#4#3#2#3#4#2", 
         "1#4#3#1#3#2", "1#4#3#1#3#2#4", "1#4#3#2#3#1#4"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {3, 8}, {8, 
         9}, {9, 10}, {10, 11}, {5, 12}, {12, 13}, {10, 14}, {9, 15}, {15, 
         16}, {2, 17}, {17, 18}, {18, 19}, {19, 20}, {20, 21}, {17, 22}, {22, 
         23}, {23, 24}, {24, 25}, {19, 26}, {26, 27}, {24, 28}, {23, 29}, {29,
          30}, {1, 31}, {31, 32}, {32, 33}, {33, 34}, {34, 35}, {35, 36}, {32,
          37}, {37, 38}, {38, 39}, {39, 40}, {34, 41}, {41, 42}, {39, 43}, {
         38, 44}, {44, 45}, {31, 46}, {46, 47}, {47, 48}, {48, 49}, {49, 
         50}, {46, 51}, {51, 52}, {52, 53}, {53, 54}, {52, 55}, {55, 56}, {48,
          57}, {57, 58}, {53, 59}, {1, 60}, {60, 61}, {61, 62}, {62, 63}, {63,
          64}, {64, 65}, {61, 66}, {66, 67}, {67, 68}, {68, 69}, {67, 70}, {
         70, 71}, {63, 72}, {72, 73}, {68, 74}, {60, 75}, {75, 76}, {76, 
         77}, {77, 78}, {78, 79}, {75, 80}, {80, 81}, {81, 82}, {82, 83}, {81,
          84}, {84, 85}, {77, 86}, {86, 87}, {82, 88}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {5, "5-5-4-4-4-4-4"}, 
         VertexStyle -> {
          "1#2#4#3#4#1#2" -> RGBColor[0, 1, 0], "1#4#3#1#3#4#2" -> 
           RGBColor[0, 1, 0], "1#4#2#1#2#4" -> RGBColor[1, 1, 0], "1#4#3" -> 
           RGBColor[0, 0, 1], "1#4#2#3#2#4" -> RGBColor[1, 1, 0], 
           "1#4#2#3#2#1" -> RGBColor[1, 0, 0], "1#3#2#4#2#3#4" -> 
           RGBColor[1, 1, 0], "1#2#3" -> RGBColor[0, 0, 1], "1#3#2#1#2#4#3" -> 
           RGBColor[0, 0, 1], "1#4#2#3#2#1#4" -> RGBColor[1, 1, 0], 
           "1#4#3#1#3#4" -> RGBColor[1, 1, 0], "1#2#4#3#4#2" -> 
           RGBColor[0, 1, 0], "1#3#4#2#4#1#2" -> RGBColor[0, 1, 0], "1#2#3#4" -> 
           RGBColor[1, 1, 0], "1#4#3#1#3#2" -> RGBColor[0, 1, 0], "1#4#2#1#2" -> 
           RGBColor[0, 1, 0], "1#2#3#1" -> RGBColor[1, 0, 0], "1#3#2#1#2#4" -> 
           RGBColor[1, 1, 0], "1#2#3#4#3#2#4" -> RGBColor[1, 1, 0], 
           "1#4#2#3#2" -> RGBColor[0, 1, 0], "1#2#3#1#3#4#2" -> 
           RGBColor[0, 1, 0], "1#2#4" -> RGBColor[1, 1, 0], "1#3#2#1#2" -> 
           RGBColor[0, 1, 0], "1#4#2#1" -> RGBColor[1, 0, 0], "1#2#4#3#4#1#3" -> 
           RGBColor[0, 0, 1], "1#3#4#2#4#1#3" -> RGBColor[0, 0, 1], "1#3#2#4" -> 
           RGBColor[1, 1, 0], "1#3#4#2" -> RGBColor[0, 1, 0], "1#3#4#1" -> 
           RGBColor[1, 0, 0], "1#3#2#4#2#1" -> RGBColor[1, 0, 0], 
           "1#2#4#3#4#2#3" -> RGBColor[0, 0, 1], "1#2#4#1#4#3" -> 
           RGBColor[0, 0, 1], "1#2#3#4#3#1#4" -> RGBColor[1, 1, 0], 
           "1#3#2#4#2#1#3" -> RGBColor[0, 0, 1], "1#4#3#1#3#2#4" -> 
           RGBColor[1, 1, 0], "1#3#2#4#2" -> RGBColor[0, 1, 0], 
           "1#3#4#1#4#3#2" -> RGBColor[0, 1, 0], "1#3#4#2#4#3#2" -> 
           RGBColor[0, 1, 0], "1#2#4#1#4#2" -> RGBColor[0, 1, 0], "1#3" -> 
           RGBColor[0, 0, 1], "1#4#3#2" -> RGBColor[0, 1, 0], "1#4#3#2#3#1#4" -> 
           RGBColor[1, 1, 0], "1#4" -> RGBColor[1, 1, 0], "1#4#2#1#2#3#4" -> 
           RGBColor[1, 1, 0], "1#4#3#2#3#1#2" -> RGBColor[0, 1, 0], 
           "1#2#3#4#3#1#2" -> RGBColor[0, 1, 0], "1#2#3#1#3#2#4" -> 
           RGBColor[1, 1, 0], "1" -> RGBColor[1, 0, 0], "1#4#2#1#2#3" -> 
           RGBColor[0, 0, 1], "1#2#3#4#3" -> RGBColor[0, 0, 1], "1#2#4#1" -> 
           RGBColor[1, 0, 0], "1#3#4#2#4" -> RGBColor[1, 1, 0], "1#3#2" -> 
           RGBColor[0, 1, 0], "1#3#4#1#4" -> RGBColor[1, 1, 0], "1#3#4" -> 
           RGBColor[1, 1, 0], "1#4#2#3#2#4#3" -> RGBColor[0, 0, 1], 
           "1#3#4#2#4#3" -> RGBColor[0, 0, 1], "1#2#4#1#4" -> 
           RGBColor[1, 1, 0], "1#3#4#2#4#1" -> RGBColor[1, 0, 0], 
           "1#4#2#1#2#4#3" -> RGBColor[0, 0, 1], "1#2#4#1#4#3#2" -> 
           RGBColor[0, 1, 0], "1#4#2#3" -> RGBColor[0, 0, 1], "1#4#2#3#2#1#3" -> 
           RGBColor[0, 0, 1], "1#4#3#2#3" -> RGBColor[0, 0, 1], "1#2" -> 
           RGBColor[0, 1, 0], "1#2#3#1#3#2" -> RGBColor[0, 1, 0], 
           "1#4#3#2#3#4" -> RGBColor[1, 1, 0], "1#4#3#1#3" -> 
           RGBColor[0, 0, 1], "1#2#3#1#3" -> RGBColor[0, 0, 1], "1#3#4#1#4#3" -> 
           RGBColor[0, 0, 1], "1#3#2#1" -> RGBColor[1, 0, 0], "1#3#2#1#2#3" -> 
           RGBColor[0, 0, 1], "1#4#2" -> RGBColor[0, 1, 0], "1#2#3#1#3#4" -> 
           RGBColor[1, 1, 0], "1#4#3#2#3#4#2" -> RGBColor[0, 1, 0], 
           "1#4#3#2#3#1" -> RGBColor[1, 0, 0], "1#2#4#3#4" -> 
           RGBColor[1, 1, 0], "1#2#4#1#4#2#3" -> RGBColor[0, 0, 1], "1#4#3#1" -> 
           RGBColor[1, 0, 0], "1#3#2#1#2#3#4" -> RGBColor[1, 1, 0], 
           "1#3#4#1#4#2" -> RGBColor[0, 1, 0], "1#3#2#4#2#1#4" -> 
           RGBColor[1, 1, 0], "1#3#2#4#2#3" -> RGBColor[0, 0, 1], 
           "1#2#3#4#3#1" -> RGBColor[1, 0, 0], "1#2#4#3#4#1" -> 
           RGBColor[1, 0, 0], "1#2#3#4#3#2" -> RGBColor[0, 1, 0], 
           "1#3#4#1#4#2#3" -> RGBColor[0, 0, 1], "1#2#4#3" -> 
           RGBColor[0, 0, 1]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9lHs01GkYxzFGljGZmdXMMBm/GVqLWKUkTb9vpdqjDhGtNpdZm+ymXFfX
6TJytFstcRS1qM3KZXVcWpdEW0ubTcrasPawrosRUcu65LJ2vfqd857fef95
3uf5fj/Pl/IPcQ/QUFNT85o7//1VdESE/ikDrJUff9MvN8BI2cqXlXu56Jqs
ylNa8pGs067TpeLAbP8kM/qSEVguZ7nTG3lodVt1wb1bDEHWmtfbormwc+v+
sqyQQuLW0k+LrvFw7mDMvqZkKYo7E+SNNI/UN4P2nSyjlm9Y6B09GvSDz1I8
PKRqCqlbhB4eN+ImwwQfy/K8BUNMbFMVO5wYojDwf39MzKxX6O2ZlaIoo0P9
rxeLUVZjqVy+SorOLcfWsor0cNM+y8VdZQpFd8N164gp+vHm8sH1tyRYs5rx
kqE5RR9WT0JInxjDeuzYsaBhOqs18I8qdQoXcq44BWWz4EjmfxDK2Rx4QQtH
gi8v++C2ACZRtHHW4Vm6c6nzuZSnQrR78POSYkboFodXZy1yRDi9d4WOrLyV
9g+4IbMXG+N8SvhDtzEm/ILjrjaZ8tD3T9IXwv5pOqgax5bt4yLUnL04IHyQ
7gm8/yJOyYMa+WTk/dOfXyo3rhmiNdI0U+WGQqi933TKQ/8ePbZpZwWnWYj7
5vN3pSLdoapPH7+Tfhz1dP/cZcOCnPRjU5wVLtv8Dhb8VVn0JVTUcJBE/EzL
He9I92LjiIdKK1ZTFzkTpZbxfizkDydyfAqYCCyZ6DVNXAQ7ot/UiR8P1BYy
MUD0c9ZxiU5WqCPX1uvDGisu/AsoT9EOLWyM+q7bl8OBP0O+njs7Q3/9ZLL2
2yAWzBvtn6mzR+hu4mc173XbjKCHVthZJDKYDMTW7rDqoNQQTPyL/W38oDx1
lK4n/sLssZ1lTy0dR/gat3B1dVAO0PmEr3kV69Y5RGq1yN4VIoXMV2Xr91x6
l4/lrVENWneZKG26NfL8qABWR0oTz4RN07I11meCfPlv6xmm7oxxvsd/64uL
lNu8Il8Ew0sTSzZV6yCk6tVkn4EYbrYZFDeSiYTQrd7Oc9weKpGyg8+/oQdD
Lu/aLjZBPplP0lw4GjdDYYLoZ3myQBkfJsVWot9I7miAtbYRxtMV9S98XtE+
3tm/XJWKcN10ft7dZ7yu5QxTOEn0aKsqHPe+IkAn2c95fkVv9zf8kY/TYIkY
U27yugw2Fxmu34cYXaSQcCP3gMPf+tjuefGE7KUENoSXh7nUeet4U0gILz8n
L9FYp24CA/dA75kUPlgb2p1qH1DQHi9S5O0RwN8nStKfKcVXXqt1t4BP+DLD
SvK+K6lfT/ajmtT/iOyHmyr7rG+UFGGS17sjM+d4jI94PLTRDArCczK59xPe
HYmfC/lzuSGsq/n4UqRtMvxEL0GECgbb5g7XBPe7J6Iqx4whJXofIvtuRfTO
JPv+nktsmuevAlT2Bjx5dEWM+OkNGj8NCPHUL++2tnIuD4SqWddqESIDEh9Y
tEkwTPycJvnjRHhZyDcp4WUh32oKP4t9VmGCRqvA/HAvCt7Ev2qSR/uJvxkk
r/4FWSBdnw==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{1, 31}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{1, 60}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{2, 17}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{3, 8}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{5, 12}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{9, 15}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{10, 14}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{12, 13}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{17, 22}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{18, 19}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{19, 26}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{23, 24}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{23, 29}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{24, 28}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{29, 30}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{31, 46}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{32, 37}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{34, 35}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{34, 41}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{35, 36}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{37, 38}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{38, 39}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{38, 44}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{39, 40}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{39, 43}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{41, 42}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{44, 45}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{46, 47}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{46, 51}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{47, 48}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{48, 49}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{48, 57}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{49, 50}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{51, 52}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{52, 53}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{52, 55}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{53, 54}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{53, 59}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{55, 56}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{57, 58}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{60, 61}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{60, 75}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{61, 62}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{61, 66}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{62, 63}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{63, 64}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{63, 72}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{64, 65}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{66, 67}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{67, 68}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{67, 70}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{68, 69}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{68, 74}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{70, 71}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{72, 73}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{75, 76}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{75, 80}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{76, 77}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{77, 78}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{77, 86}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{78, 79}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{80, 81}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{81, 82}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{81, 84}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{82, 83}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{82, 88}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{84, 85}, 0.0681942941000541]}, 
           {Arrowheads[0.], ArrowBox[{86, 87}, 0.0681942941000541]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[3, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[4, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[5, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[6, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[7, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[8, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[9, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[10, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[12, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[13, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[15, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[16, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[17, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[18, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[19, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[20, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[21, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[22, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[23, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[24, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[25, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[26, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[27, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[28, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[29, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[30, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[31, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[32, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[33, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[34, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[35, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[36, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[37, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[38, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[39, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[40, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[41, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[42, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[43, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[44, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[45, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[46, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[47, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[48, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[49, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[50, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[51, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[52, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[53, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[54, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[55, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[56, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[57, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[58, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[59, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[60, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[61, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[62, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[63, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[64, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[65, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[66, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[67, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[68, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[69, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[70, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[71, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[72, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[73, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[74, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[75, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[76, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[77, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[78, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[79, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[80, 0.0681942941000541]}, 
           {RGBColor[0, 0, 1], DiskBox[81, 0.0681942941000541]}, 
           {RGBColor[1, 0, 0], DiskBox[82, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[83, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[84, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[85, 0.0681942941000541]}, 
           {RGBColor[0, 1, 0], DiskBox[86, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[87, 0.0681942941000541]}, 
           {RGBColor[1, 1, 0], DiskBox[88, 0.0681942941000541]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"5", ",", "\"5-5-4-4-4-4-4\""}], "}"}], TraditionalForm]], 
   ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{
        "1", "1#2", "1#2#4", "1#2#4#1", "1#2#4#1#3", "1#2#4#1#3#2", 
         "1#2#4#1#3#2#1", "1#2#3", "1#2#3#1", "1#2#3#1#4", "1#2#3#1#4#2", 
         "1#2#3#1#4#2#1", "1#3", "1#3#4", "1#3#4#1", "1#3#4#1#2", 
         "1#3#4#1#2#3", "1#3#4#1#2#3#1", "1#3#2", "1#3#2#1", "1#3#2#1#4", 
         "1#3#2#1#4#3", "1#3#2#1#4#3#1", "1#4", "1#4#3", "1#4#3#1", 
         "1#4#3#1#2", "1#4#3#1#2#4", "1#4#3#1#2#4#1", "1#4#2", "1#4#2#1", 
         "1#4#2#1#3", "1#4#2#1#3#4", "1#4#2#1#3#4#1"}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {2, 8}, {8, 
         9}, {9, 10}, {10, 11}, {11, 12}, {1, 13}, {13, 14}, {14, 15}, {15, 
         16}, {16, 17}, {17, 18}, {13, 19}, {19, 20}, {20, 21}, {21, 22}, {22,
          23}, {1, 24}, {24, 25}, {25, 26}, {26, 27}, {27, 28}, {28, 29}, {24,
          30}, {30, 31}, {31, 32}, {32, 33}, {33, 34}}}, {
        GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "RadialDrawing"}, 
         ImageSize -> 400, PlotLabel -> {1, "6-6-4-4-4-3-3"}, 
         VertexStyle -> {
          "1#3#2#1" -> RGBColor[1, 0, 0], "1#3#4#1#2#3#1" -> 
           RGBColor[1, 0, 0], "1#4#3#1#2#4" -> RGBColor[1, 1, 0], 
           "1#2#3#1#4#2" -> RGBColor[0, 1, 0], "1#3" -> RGBColor[0, 0, 1], 
           "1#4#3" -> RGBColor[0, 0, 1], "1#2#3" -> RGBColor[0, 0, 1], 
           "1#3#4" -> RGBColor[1, 1, 0], "1#3#2#1#4" -> RGBColor[1, 1, 0], 
           "1#2#4#1" -> RGBColor[1, 0, 0], "1#3#4#1" -> RGBColor[1, 0, 0], 
           "1#2#4#1#3#2#1" -> RGBColor[1, 0, 0], "1#4#2#1#3" -> 
           RGBColor[0, 0, 1], "1#4#2#1#3#4" -> RGBColor[1, 1, 0], "1#2#4#1#3" -> 
           RGBColor[0, 0, 1], "1" -> RGBColor[1, 0, 0], "1#2#3#1#4#2#1" -> 
           RGBColor[1, 0, 0], "1#3#2#1#4#3" -> RGBColor[0, 0, 1], "1#4" -> 
           RGBColor[1, 1, 0], "1#4#2#1" -> RGBColor[1, 0, 0], "1#3#4#1#2#3" -> 
           RGBColor[0, 0, 1], "1#4#2#1#3#4#1" -> RGBColor[1, 0, 0], "1#4#2" -> 
           RGBColor[0, 1, 0], "1#2#3#1" -> RGBColor[1, 0, 0], "1#3#2" -> 
           RGBColor[0, 1, 0], "1#2#3#1#4" -> RGBColor[1, 1, 0], "1#3#4#1#2" -> 
           RGBColor[0, 1, 0], "1#2" -> RGBColor[0, 1, 0], "1#2#4#1#3#2" -> 
           RGBColor[0, 1, 0], "1#4#3#1#2#4#1" -> RGBColor[1, 0, 0], "1#2#4" -> 
           RGBColor[1, 1, 0], "1#3#2#1#4#3#1" -> RGBColor[1, 0, 0], "1#4#3#1" -> 
           RGBColor[1, 0, 0], "1#4#3#1#2" -> RGBColor[0, 1, 0]}}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQLfKE89TLF2IOkTMrPmleF3a4Le99JmmWsAOb+BKJ
F/tFHfa82FSbKy7scFrx21vzEikHgez28PV6gg4sz7a83ndI1uHEre1Jj7r5
HOSv7vyyqEPBIf9+gljaLi4HG/OZxc/0lRzEweazOUSAzVd2OAZVHwW1TwQq
Hw3lQ+T/2cP4EPPf2cdA+QxQEIuiX8yBYZ7isrWsAg67oO49B3YvlwMf1L0Q
/cwOh6D2XwPL/7LPgLr3AZj/yp4P6h6ILS9sssHyUg5noOaJx/bYqCyWgYYX
zDw5qPwve/M1hS4BVgoOJ6Dm8YLtV4S722/FieMF5lIOrNDwPQrVHwH1Dz9U
PYy/G+wfZTg/I+3eYm0GVTgf4n81h3AoPw/qXlh8SUHdC4uv41D75KDxZQV1
rxU0vgSg9odD4wsAPBbwqA==
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{1, 13}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{1, 24}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{2, 8}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{4, 5}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{5, 6}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{9, 10}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{10, 11}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{11, 12}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{13, 14}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{13, 19}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{14, 15}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{15, 16}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{16, 17}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{17, 18}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{19, 20}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{20, 21}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{21, 22}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{22, 23}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{24, 25}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{24, 30}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{25, 26}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{26, 27}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{27, 28}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{28, 29}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{30, 31}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{31, 32}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{32, 33}, 0.07049265508272014]}, 
           {Arrowheads[0.], ArrowBox[{33, 34}, 0.07049265508272014]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           {RGBColor[1, 0, 0], DiskBox[1, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[2, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[3, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[4, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[5, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[6, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[7, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[8, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[9, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[10, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[11, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[12, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[13, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[14, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[15, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[16, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[17, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[18, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[19, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[20, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[21, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[22, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[23, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[24, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[25, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[26, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[27, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[28, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[29, 0.07049265508272014]}, 
           {RGBColor[0, 1, 0], DiskBox[30, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[31, 0.07049265508272014]}, 
           {RGBColor[0, 0, 1], DiskBox[32, 0.07049265508272014]}, 
           {RGBColor[1, 1, 0], DiskBox[33, 0.07049265508272014]}, 
           {RGBColor[1, 0, 0], DiskBox[34, 0.07049265508272014]}}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    PlotLabel->FormBox[
      RowBox[{"{", 
        RowBox[{"1", ",", "\"6-6-4-4-4-3-3\""}], "}"}], TraditionalForm]]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6626456553131447`*^9, 3.6626457244180107`*^9}, {
   3.6626457878170614`*^9, 3.6626458175751963`*^9}, 3.6626458939116077`*^9, {
   3.66264745860509*^9, 3.6626474818321557`*^9}, 3.6626475502301855`*^9, 
   3.662656898874837*^9}]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 2584, 60, 212, "Input"],
Cell[3167, 84, 588148, 9130, 439, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[591352, 9219, 151, 3, 31, "Input"],
Cell[591506, 9224, 517, 11, 21, "Message"],
Cell[592026, 9237, 295, 7, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[592358, 9249, 203, 5, 31, "Input"],
Cell[592564, 9256, 3707, 93, 132, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[596308, 9354, 2629, 63, 232, "Input"],
Cell[598940, 9419, 3460490, 56296, 1994, "Output"]
}, Open  ]],
Cell[4059445, 65718, 482, 12, 31, "Input"],
Cell[4059930, 65732, 3414, 81, 252, "Input"],
Cell[CellGroupData[{
Cell[4063369, 65817, 236, 4, 31, "Input"],
Cell[4063608, 65823, 164, 3, 23, "Print"],
Cell[4063775, 65828, 4677, 79, 379, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4068489, 65912, 492, 10, 31, "Input"],
Cell[4068984, 65924, 78094, 1197, 910, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
