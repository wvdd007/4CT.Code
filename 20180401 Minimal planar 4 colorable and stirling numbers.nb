(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    415740,       8797]
NotebookOptionsPosition[    408761,       8619]
NotebookOutlinePosition[    409105,       8634]
CellTagsIndexPosition[    409062,       8631]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"k", "\[Rule]", 
     RowBox[{"Map", "[", 
      RowBox[{"Last", ",", 
       RowBox[{"Sort", "[", 
        RowBox[{"Tally", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"SymbolLevel", ",", " ", 
           RowBox[{"FindFullFormula", "[", 
            RowBox[{"MinimalGraph", "[", "k", "]"}], "]"}]}], "]"}], "]"}], 
        "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "4", ",", "10"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7315201554607134`*^9, 3.731520236232767*^9}, {
  3.7315208251284857`*^9, 
  3.7315208321444564`*^9}},ExpressionUUID->"37e993fe-5b7a-4690-8b9f-\
754d09880357"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"4", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}]}]},
     {
      RowBox[{"5", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3", ",", "1"}], "}"}]}]},
     {
      RowBox[{"6", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "7", ",", "6", ",", "1"}], "}"}]}]},
     {
      RowBox[{"7", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "15", ",", "25", ",", "10", ",", "1"}], "}"}]}]},
     {
      RowBox[{"8", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", "31", ",", "90", ",", "65", ",", "15", ",", "1"}], 
        "}"}]}]},
     {
      RowBox[{"9", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "63", ",", "301", ",", "350", ",", "140", ",", "21", ",", 
         "1"}], "}"}]}]},
     {
      RowBox[{"10", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "1", ",", "127", ",", "966", ",", "1701", ",", "1050", ",", "266", 
         ",", "28", ",", "1"}], "}"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7315201675160365`*^9, 3.731520241102997*^9}, 
   3.731520836189068*^9},ExpressionUUID->"6f678dbb-24e8-4be3-9582-\
bbeb990a51a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"StirlingS2", "[", 
    RowBox[{"5", ",", 
     RowBox[{"5", "-", "k"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7315712051970778`*^9, 
  3.7315712191203547`*^9}},ExpressionUUID->"70405db2-bd04-4816-8042-\
de8593f9f005"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "10", ",", "25", ",", "15", ",", "1", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7315712202283783`*^9},ExpressionUUID->"7e4a9097-8abf-4648-a597-\
5921e06e6438"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"StirlingS2", "[", 
    RowBox[{"6", ",", 
     RowBox[{"6", "-", "k"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "6"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.731571243965335*^9, 
  3.731571246693437*^9}},ExpressionUUID->"5feed2be-fdf3-4b00-8227-\
88f92f916df7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "15", ",", "65", ",", "90", ",", "31", ",", "1", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.731571247509373*^9},ExpressionUUID->"2beee418-77d3-4cdf-98c7-\
987e0a02fba3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexCount", "[", 
  RowBox[{"MinimalGraph", "[", "4", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7315711918751855`*^9, 
  3.7315711985473776`*^9}},ExpressionUUID->"4c70b008-62af-4e8f-8782-\
14da83a2529f"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.731571198921938*^9},ExpressionUUID->"53e92bf9-23a1-4af3-9eae-\
ddeb42ced6aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FormulaGraphReverse", "[", "formula_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sets", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SymbolToSets", "[", "#", "]"}], "&"}], ",", 
         RowBox[{"ListofVars", "[", "formula", "]"}]}], "]"}]}], ",", " ", 
      RowBox[{"edges", "=", 
       RowBox[{"{", "}"}]}], ",", "vertices", ",", 
      RowBox[{"vert", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"IsRefinement", "[", 
             RowBox[{"s1", ",", "s2"}], "]"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Length", "[", "s1", "]"}], "\[Equal]", 
              RowBox[{
               RowBox[{"Length", "[", "s2", "]"}], "-", "1"}]}], ")"}]}], ",",
            " ", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"edges", ",", 
             RowBox[{
              RowBox[{"SetsToSymbol", "[", "s1", "]"}], "->", 
              RowBox[{"SetsToSymbol", "[", "s2", "]"}]}]}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"s2", ",", 
           RowBox[{"Select", "[", 
            RowBox[{"sets", ",", 
             RowBox[{
              RowBox[{"#", "\[NotEqual]", "s1"}], "&"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"s1", ",", "sets"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vert", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"SetsToSymbol", "[", "s", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "sets"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vertices", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"SetsToSymbol", "[", "s", "]"}], "\[Rule]", " ", 
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"SymbolToLabel", "[", " ", 
            RowBox[{"SetsToSymbol", "[", "s", "]"}], "]"}], ",", 
           RowBox[{"Pi", "/", "6"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "sets"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", 
      RowBox[{"vert", ",", "edges", ",", 
       RowBox[{"VertexLabels", "\[Rule]", "vertices"}], ",", " ", 
       RowBox[{
       "GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7315209575656233`*^9, 3.7315209877672744`*^9}, {
  3.731521072169944*^9, 
  3.731521098071143*^9}},ExpressionUUID->"4dc5a5da-be1c-4b41-9b93-\
bb21bf2a804b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "3", "]"}]], "Input",ExpressionUUID->"d6195090-5236-4a27-b228-66e0c4e3aa56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7315600587047586`*^9},ExpressionUUID->"bdd6ebeb-10f8-4b7d-b73b-\
da90bc53ebe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"Range", "[", "3", "]"}], ",", 
   RowBox[{"{", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.731560062029193*^9, 
  3.7315600626787295`*^9}},ExpressionUUID->"a67f439e-61ac-4f40-a4a6-\
32c6d3fe0d5a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3}, {}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.000030000000000000004`, -0.00001}, {
       0.00001, -0.00001}, {0.00001, -0.000030000000000000004`}}, {{}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 2.5460000000000007*^-7], 
         DiskBox[2, 2.5460000000000007*^-7], 
         DiskBox[3, 2.5460000000000007*^-7]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.731560050573433*^9, 
  3.731560063412712*^9}},ExpressionUUID->"5ec0afbf-3c40-4c42-be0c-\
f731ba8b0147"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindEmptyFormula", "[", 
  RowBox[{"CompleteGraph", "[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7315599550711284`*^9, 3.7315599750698233`*^9}, {
  3.7315600688839684`*^9, 
  3.7315600966833963`*^9}},ExpressionUUID->"394c40d0-92dd-45a3-9bca-\
915a09ff6e84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"n1x2", ",", "n12"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7315599763172836`*^9, {3.731560043982687*^9, 3.731560097613784*^9}, 
   3.731560181247657*^9},ExpressionUUID->"17f782d0-6be1-4403-a7bf-\
0bdab98b2f5d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Labeled", "[", 
    RowBox[{
     RowBox[{"allGraphs2", "[", 
      RowBox[{"k", ",", "\"\<graph\>\""}], "]"}], ",", 
     RowBox[{"allGraphs2", "[", 
      RowBox[{"k", ",", "\"\<colofourrealnull\>\""}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"Keys", "[", "allGraphs2", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.731560104806028*^9, 
  3.7315601569522*^9}},ExpressionUUID->"9b291ebb-3dfc-4ba3-a168-839bf96b13aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2}, {}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {0., -1.}}, 
             VertexLabels -> {2 -> "2", 1 -> "1"}, VertexSize -> {0.1}, 
             VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.1], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.1, 1.1}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0., -1.}, 0.1], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.1, -0.9}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"n1x2"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1, 2}, {Null, {{1, 2}}}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}, {0., -1.}}, 
             VertexLabels -> {2 -> "2", 1 -> "1"}, VertexSize -> {0.1}, 
             VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            RGBColor[0, 
             NCache[
              Rational[4, 9], 0.4444444444444444], 0], {
             Arrowheads[0.], 
             ArrowBox[{{0., 1.}, {0., -1.}}, 0.1]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.1], 
             InsetBox[
              FormBox["\"1\"", TraditionalForm], 
              Offset[{2, 2}, {0.1, 1.1}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             DiskBox[{0., -1.}, 0.1], 
             InsetBox[
              FormBox["\"2\"", TraditionalForm], 
              Offset[{2, 2}, {0.1, -0.9}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],RowBox[{
       RowBox[{"-", "n12"}], "+", "n1x2"}]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           Graph[{1}, {}, {EdgeStyle -> {
               RGBColor[0, 
                Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
             VertexCoordinates -> {{0., 1.}}, VertexLabels -> {1 -> "1,2"}, 
             VertexSize -> {0.1}, VertexStyle -> {
               RGBColor[1, 0, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            RGBColor[1, 0, 0], {
             DiskBox[{0., 1.}, 0.05], 
             InsetBox[
              FormBox["\"1,2\"", TraditionalForm], 
              Offset[{2, 2}, {0.05, 1.05}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       ImageSize -> {50, 50}, PlotRangePadding -> 0.1, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],"n12"},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.7315601191599827`*^9, 
  3.7315601577536345`*^9}},ExpressionUUID->"90d32096-9561-4cb2-98e3-\
3cbc58f70436"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"k", "\[Rule]", 
     RowBox[{"Map", "[", 
      RowBox[{"Last", ",", 
       RowBox[{"Sort", "[", 
        RowBox[{"Tally", "[", 
         RowBox[{"Map", "[", 
          RowBox[{"SymbolLevel", ",", " ", 
           RowBox[{"FindEmptyFormula", "[", 
            RowBox[{"MinimalGraph", "[", "k", "]"}], "]"}]}], "]"}], "]"}], 
        "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "4", ",", "8"}], "}"}]}], "]"}], "\[IndentingNewLine]",
   "]"}]], "Input",
 CellChangeTimes->{3.7315602851779547`*^9, 
  3.7315603187681904`*^9},ExpressionUUID->"e19b8653-4f1a-4381-a5cf-\
1b545e031b7a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{"4", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"18", ",", "39", ",", "29", ",", "9", ",", "1"}], "}"}]}]},
     {
      RowBox[{"5", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "54", ",", "135", ",", "126", ",", "56", ",", "12", ",", "1"}], 
        "}"}]}]},
     {
      RowBox[{"6", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "162", ",", "459", ",", "513", ",", "294", ",", "92", ",", "15", ",", 
         "1"}], "}"}]}]},
     {
      RowBox[{"7", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "486", ",", "1539", ",", "1998", ",", "1395", ",", "570", ",", "137", 
         ",", "18", ",", "1"}], "}"}]}]},
     {
      RowBox[{"8", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "1458", ",", "5103", ",", "7533", ",", "6183", ",", "3105", ",", 
         "981", ",", "191", ",", "21", ",", "1"}], "}"}]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7315603157591705`*^9, 
  3.731560327990938*^9}},ExpressionUUID->"1f0f5775-444b-4cda-8cd5-\
20cadb8fc775"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"StirlingS2", "[", 
     RowBox[{"5", ",", "k"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "4"}], "}"}]}], "]"}], "//", 
  "Reverse"}]], "Input",
 CellChangeTimes->{{3.731560359369049*^9, 3.7315603725806184`*^9}, {
  3.731560430557969*^9, 
  3.731560447830821*^9}},ExpressionUUID->"92536c8f-d751-4050-8220-\
e4b1c17a8e76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "25", ",", "15", ",", "1", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.7315604316253166`*^9, 
  3.7315604480634804`*^9}},ExpressionUUID->"c82941d3-c563-431d-b021-\
896cccd97bdd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"18", ",", "39", ",", "29", ",", "9", ",", "1"}], "}"}], "+", 
  RowBox[{"{", 
   RowBox[{"10", ",", "25", ",", "15", ",", "1", ",", "0"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.731560389040125*^9, 3.731560412534161*^9}, {
  3.7315604428971786`*^9, 
  3.731560458495715*^9}},ExpressionUUID->"62ac553b-1ca0-414b-b17f-\
542489be9774"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"28", ",", "64", ",", "44", ",", "10", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.7315603900727863`*^9, 3.731560413181135*^9}, {
  3.731560443351857*^9, 
  3.731560458973153*^9}},ExpressionUUID->"0f843738-3123-48af-a9a5-\
b56238c1af60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", "=", 
     RowBox[{"MinimalGraph", "[", "4", "]"}]}], "}"}], ",", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "allGraphs5", "]"}], ",", 
     RowBox[{
      RowBox[{"IsomorphicGraphQ", "[", 
       RowBox[{
        RowBox[{"allGraphs5", "[", 
         RowBox[{"#", ",", "\"\<graph\>\""}], "]"}], ",", "m"}], "]"}], 
      "&"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7315604867773895`*^9, 
  3.73156054861191*^9}},ExpressionUUID->"cdd734ed-2588-4538-8ff1-\
192805b53c62"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "29523", ",", "29521", ",", "29515", ",", "29497", ",", "29443", ",", 
   "29281", ",", "28795", ",", "27337", ",", "22963", ",", "9841"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.731560478186133*^9, {3.7315605348066797`*^9, 
   3.731560549498959*^9}},ExpressionUUID->"8b2a3bc7-9714-4d24-b4a6-\
b350c1a9eb05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Intersection", "[", 
   RowBox[{
    RowBox[{"FindEmptyFormula", "[", 
     RowBox[{"MinimalGraph", "[", "4", "]"}], "]"}], ",", 
    RowBox[{"ListofVars", "[", 
     RowBox[{"allGraphs5", "[", 
      RowBox[{"29523", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}]}], 
   "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.731560558283086*^9, 3.7315605594221125`*^9}, {
  3.731560595667589*^9, 3.731560601302194*^9}, {3.73156064089007*^9, 
  3.7315606706062045`*^9}},ExpressionUUID->"207398c3-35e0-4e6f-aaa0-\
32a1dfdbcf92"],

Cell[BoxData["42"], "Output",
 CellChangeTimes->{
  3.7315605603309803`*^9, 3.731560602222543*^9, {3.731560641232668*^9, 
   3.7315606713446684`*^9}},ExpressionUUID->"87070435-379b-4aae-8eb8-\
112b76909feb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindEmptyFormula", "[", 
   RowBox[{"MinimalGraph", "[", "4", "]"}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.731560679789331*^9, 
  3.7315606808416643`*^9}},ExpressionUUID->"54953be0-35fc-47dc-a0da-\
bf133ece0a4f"],

Cell[BoxData["47"], "Output",
 CellChangeTimes->{
  3.731560681585972*^9},ExpressionUUID->"37d55e3c-2a04-42b9-9a54-\
c2cd0c2cd1c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListofVars", "[", 
  RowBox[{"allGraphs5", "[", 
   RowBox[{"29523", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.731560564465367*^9, 3.7315605916830254`*^9}, 
   3.7315606443676004`*^9},ExpressionUUID->"898e4f8f-1a4c-48de-b12a-\
2205b25d0b40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "n12x34x5", ",", "n12x35x4", ",", "n13x24x5", ",", "n13x25x4", ",", 
   "n145x2x3", ",", "n14x23x5", ",", "n14x25x3", ",", "n14x2x35", ",", 
   "n15x23x4", ",", "n15x24x3", ",", "n15x2x34", ",", "n1x245x3", ",", 
   "n1x24x35", ",", "n1x25x34", ",", "n1x2x345", ",", "n1x2x3x4x5", ",", 
   "n12345", ",", "n1234x5", ",", "n1235x4", ",", "n123x4x5", ",", "n1245x3", 
   ",", "n124x35", ",", "n124x3x5", ",", "n125x34", ",", "n125x3x4", ",", 
   "n12x345", ",", "n12x3x4x5", ",", "n1345x2", ",", "n134x25", ",", 
   "n134x2x5", ",", "n135x24", ",", "n135x2x4", ",", "n13x245", ",", 
   "n13x2x4x5", ",", "n145x23", ",", "n14x235", ",", "n14x2x3x5", ",", 
   "n15x234", ",", "n15x2x3x4", ",", "n1x2345", ",", "n1x234x5", ",", 
   "n1x235x4", ",", "n1x23x4x5", ",", "n1x24x3x5", ",", "n1x25x3x4", ",", 
   "n1x2x34x5", ",", "n1x2x35x4"}], "}"}]], "Output",
 CellChangeTimes->{{3.7315605872725873`*^9, 3.731560592503677*^9}, 
   3.7315606446643333`*^9},ExpressionUUID->"16986537-3e40-4fde-a955-\
ea8fecf5a986"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindEmptyFormula", "[", 
   RowBox[{"MinimalGraph", "[", "4", "]"}], "]"}], "//", 
  "FormulaGraphReverse"}]], "Input",
 CellChangeTimes->{{3.7315602055878897`*^9, 3.7315602230916133`*^9}, {
  3.7315602586857796`*^9, 
  3.7315602633428607`*^9}},ExpressionUUID->"22c8d07c-6ac7-45d5-abb0-\
a401e8f2f145"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v12345, $CellContext`v1234x5, $CellContext`v1235x4, \
$CellContext`v123x45, $CellContext`v123x4x5, $CellContext`v1245x3, \
$CellContext`v124x3x5, $CellContext`v125x34, $CellContext`v125x3x4, \
$CellContext`v12x345, $CellContext`v12x34x5, $CellContext`v12x3x45, \
$CellContext`v12x3x4x5, $CellContext`v1345x2, $CellContext`v134x25, \
$CellContext`v134x2x5, $CellContext`v135x24, $CellContext`v135x2x4, \
$CellContext`v13x245, $CellContext`v13x24x5, $CellContext`v13x25x4, \
$CellContext`v13x2x45, $CellContext`v13x2x4x5, $CellContext`v145x23, \
$CellContext`v145x2x3, $CellContext`v14x235, $CellContext`v14x23x5, \
$CellContext`v14x25x3, $CellContext`v14x2x3x5, $CellContext`v15x234, \
$CellContext`v15x23x4, $CellContext`v15x24x3, $CellContext`v15x2x34, \
$CellContext`v15x2x3x4, $CellContext`v1x2345, $CellContext`v1x234x5, \
$CellContext`v1x235x4, $CellContext`v1x23x45, $CellContext`v1x23x4x5, \
$CellContext`v1x245x3, $CellContext`v1x24x3x5, $CellContext`v1x25x34, \
$CellContext`v1x25x3x4, $CellContext`v1x2x345, $CellContext`v1x2x34x5, \
$CellContext`v1x2x3x45, $CellContext`v1x2x3x4x5}, {{{1, 2}, {1, 3}, {1, 4}, {
       1, 6}, {1, 8}, {1, 10}, {1, 14}, {1, 15}, {1, 17}, {1, 19}, {1, 24}, {
       1, 26}, {1, 30}, {1, 35}, {2, 5}, {2, 7}, {2, 11}, {2, 16}, {2, 20}, {
       2, 27}, {2, 36}, {3, 5}, {3, 9}, {3, 18}, {3, 21}, {3, 31}, {3, 37}, {
       4, 5}, {4, 12}, {4, 22}, {4, 38}, {5, 13}, {5, 23}, {5, 39}, {6, 7}, {
       6, 9}, {6, 12}, {6, 25}, {6, 28}, {6, 32}, {6, 40}, {7, 13}, {7, 29}, {
       7, 41}, {8, 9}, {8, 11}, {8, 33}, {8, 42}, {9, 13}, {9, 34}, {9, 43}, {
       10, 11}, {10, 12}, {10, 44}, {11, 13}, {11, 45}, {12, 13}, {12, 46}, {
       13, 47}, {14, 16}, {14, 18}, {14, 22}, {14, 25}, {14, 33}, {14, 44}, {
       15, 16}, {15, 21}, {15, 28}, {15, 42}, {16, 23}, {16, 29}, {16, 45}, {
       17, 18}, {17, 20}, {17, 32}, {18, 23}, {18, 34}, {19, 20}, {19, 21}, {
       19, 22}, {19, 40}, {20, 23}, {20, 41}, {21, 23}, {21, 43}, {22, 23}, {
       22, 46}, {23, 47}, {24, 25}, {24, 27}, {24, 31}, {24, 38}, {25, 29}, {
       25, 34}, {25, 46}, {26, 27}, {26, 28}, {26, 37}, {27, 29}, {27, 39}, {
       28, 29}, {28, 43}, {29, 47}, {30, 31}, {30, 32}, {30, 33}, {30, 36}, {
       31, 34}, {31, 39}, {32, 34}, {32, 41}, {33, 34}, {33, 45}, {34, 47}, {
       35, 36}, {35, 37}, {35, 38}, {35, 40}, {35, 42}, {35, 44}, {36, 39}, {
       36, 41}, {36, 45}, {37, 39}, {37, 43}, {38, 39}, {38, 46}, {39, 47}, {
       40, 41}, {40, 43}, {40, 46}, {41, 47}, {42, 43}, {42, 45}, {43, 47}, {
       44, 45}, {44, 46}, {45, 47}, {46, 47}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`v15x24x3 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
           Pi], $CellContext`v14x25x3 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
           Pi], $CellContext`v135x2x4 -> Rotate[
           Row[{"135", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
           Pi], $CellContext`v15x234 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "234"}], Rational[1, 6] 
           Pi], $CellContext`v125x34 -> Rotate[
           Row[{"125", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "34"}], Rational[1, 6] 
           Pi], $CellContext`v1235x4 -> Rotate[
           Row[{"1235", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
           Pi], $CellContext`v13x245 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "245"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x45 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "45"}], Rational[1, 6] 
           Pi], $CellContext`v124x3x5 -> Rotate[
           Row[{"124", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v12x3x45 -> Rotate[
           Row[{"12", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "45"}], Rational[1, 6] 
           Pi], $CellContext`v135x24 -> Rotate[
           Row[{"135", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24"}], Rational[1, 6] 
           Pi], $CellContext`v12x3x4x5 -> Rotate[
           Row[{"12", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v15x23x4 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "23", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
           Pi], $CellContext`v1345x2 -> Rotate[
           Row[{"1345", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2"}], Rational[1, 6] 
           Pi], $CellContext`v14x235 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "235"}], Rational[1, 6] 
           Pi], $CellContext`v12x345 -> Rotate[
           Row[{"12", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "345"}], Rational[1, 6] 
           Pi], $CellContext`v13x25x4 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x345 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "345"}], Rational[1, 6] 
           Pi], $CellContext`v14x2x3x5 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x245x3 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "245", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
           Pi], $CellContext`v12345 -> Rotate[
           Row[{"12345"}], Rational[1, 6] Pi], $CellContext`v15x2x34 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "34"}], Rational[1, 6] 
           Pi], $CellContext`v13x2x4x5 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x25x3x4 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
           Pi], $CellContext`v1x235x4 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "235", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
           Pi], $CellContext`v13x24x5 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v13x2x45 -> Rotate[
           Row[{"13", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "45"}], Rational[1, 6] 
           Pi], $CellContext`v12x34x5 -> Rotate[
           Row[{"12", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "34", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x25x34 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "34"}], Rational[1, 6] 
           Pi], $CellContext`v134x2x5 -> Rotate[
           Row[{"134", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x23x45 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "23", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "45"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x34x5 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "34", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x24x3x5 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "24", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1245x3 -> Rotate[
           Row[{"1245", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
           Pi], $CellContext`v15x2x3x4 -> Rotate[
           Row[{"15", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
           Pi], $CellContext`v145x2x3 -> Rotate[
           Row[{"145", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
           Pi], $CellContext`v14x23x5 -> Rotate[
           Row[{"14", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "23", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v123x45 -> Rotate[
           Row[{"123", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "45"}], Rational[1, 6] 
           Pi], $CellContext`v1234x5 -> Rotate[
           Row[{"1234", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x23x4x5 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "23", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v125x3x4 -> Rotate[
           Row[{"125", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
           Pi], $CellContext`v123x4x5 -> Rotate[
           Row[{"123", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v145x23 -> Rotate[
           Row[{"145", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "23"}], Rational[1, 6] 
           Pi], $CellContext`v1x234x5 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "234", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x2345 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2345"}], Rational[1, 6] 
           Pi], $CellContext`v134x25 -> Rotate[
           Row[{"134", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25"}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01099560861572555], 
        ArrowBox[{{0., 4.}, {-1.5134113445629396`, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {-4.513411350140927, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {-3.513411346947805, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {4.486588672033349, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {7.486588671168988, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {9.84337311525303, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {1.486588655548303, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {0.4865886613135899, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {-7.778118449609337, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {-6.513411334636487, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {-0.5134113419375126, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {-2.513411345094312, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {2.4865886609013614`, 3.}}, 0.0923631124039678], 
        ArrowBox[{{0., 4.}, {3.4865886640209283`, 3.}}, 0.0923631124039678], 
        ArrowBox[{{-1.5134113445629396`, 3.}, {-5.513411332992916, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-1.5134113445629396`, 3.}, {3.48658866871574, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-1.5134113445629396`, 3.}, {11.486588671857248`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-1.5134113445629396`, 3.}, {-0.5134113346443314, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-1.5134113445629396`, 3.}, {-9.513411335389549, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-1.5134113445629396`, 3.}, {-4.513411332737292, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-1.5134113445629396`, 3.}, {1.4865886698243571`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-4.513411350140927, 3.}, {-5.513411332992916, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-4.513411350140927, 3.}, {7.486588668376498, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-4.513411350140927, 3.}, {-8.513411334266209, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-4.513411350140927, 3.}, {-7.513411333689248, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-4.513411350140927, 3.}, {-3.5134113325194676`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-4.513411350140927, 3.}, {-2.5134113335196275`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-3.513411346947805, 3.}, {-5.513411332992916, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-3.513411346947805, 3.}, {10.486588670711967`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-3.513411346947805, 3.}, {-6.513411333293561, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-3.513411346947805, 3.}, {-1.5134113317433844`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-5.513411332992916, 2.}, {7.486588661897258, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-5.513411332992916, 2.}, {-6.513411335930073, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-5.513411332992916, 2.}, {-2.51341133239481, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588672033349, 3.}, {3.48658866871574, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588672033349, 3.}, {7.486588668376498, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588672033349, 3.}, {10.486588670711967`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588672033349, 3.}, {4.486588668891272, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588672033349, 3.}, {0.4865886648510127, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588672033349, 3.}, {2.4865886673933915`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588672033349, 3.}, {5.486588669019511, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.48658866871574, 2.}, {7.486588661897258, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.48658866871574, 2.}, {0.9225051401048745, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.48658866871574, 2.}, {2.0179184439190294`, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{7.486588671168988, 3.}, {7.486588668376498, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{7.486588671168988, 3.}, {11.486588671857248`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{7.486588671168988, 3.}, {6.486588669229718, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{7.486588671168988, 3.}, {8.486588669777234, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{7.486588668376498, 2.}, {7.486588661897258, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{7.486588668376498, 2.}, {3.017918446254839, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{7.486588668376498, 2.}, {4.017918448629189, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{9.84337311525303, 3.}, {11.486588671857248`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{9.84337311525303, 3.}, {10.486588670711967`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{9.84337311525303, 3.}, {9.486588670190145, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{11.486588671857248`, 2.}, {7.486588661897258, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{11.486588671857248`, 2.}, {6.48658865982236, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{10.486588670711967`, 2.}, {7.486588661897258, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{10.486588670711967`, 2.}, {5.017918452997947, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{7.486588661897258, 1.}, {3.0179184469495226`, 0.}}, 
         0.0923631124039678], 
        ArrowBox[{{1.486588655548303, 3.}, {-0.5134113346443314, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{1.486588655548303, 3.}, {-8.513411334266209, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{1.486588655548303, 3.}, {-6.513411333293561, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{1.486588655548303, 3.}, {4.486588668891272, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{1.486588655548303, 3.}, {6.486588669229718, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{1.486588655548303, 3.}, {9.486588670190145, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{0.4865886613135899, 3.}, {-0.5134113346443314, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{0.4865886613135899, 3.}, {-7.513411333689248, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{0.4865886613135899, 3.}, {0.4865886648510127, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{0.4865886613135899, 3.}, {8.486588669777234, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-0.5134113346443314, 2.}, {-6.513411335930073, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-0.5134113346443314, 2.}, {0.9225051401048745, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-0.5134113346443314, 2.}, {6.48658865982236, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-7.778118449609337, 3.}, {-8.513411334266209, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-7.778118449609337, 3.}, {-9.513411335389549, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-7.778118449609337, 3.}, {2.4865886673933915`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-8.513411334266209, 2.}, {-6.513411335930073, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-8.513411334266209, 2.}, {3.017918446254839, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-6.513411334636487, 3.}, {-9.513411335389549, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-6.513411334636487, 3.}, {-7.513411333689248, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-6.513411334636487, 3.}, {-6.513411333293561, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-6.513411334636487, 3.}, {5.486588669019511, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-9.513411335389549, 2.}, {-6.513411335930073, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-9.513411335389549, 2.}, {2.0179184439190294`, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-7.513411333689248, 2.}, {-6.513411335930073, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-7.513411333689248, 2.}, {4.017918448629189, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-6.513411333293561, 2.}, {-6.513411335930073, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-6.513411333293561, 2.}, {5.017918452997947, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-6.513411335930073, 1.}, {3.0179184469495226`, 0.}}, 
         0.0923631124039678], 
        ArrowBox[{{-0.5134113419375126, 3.}, {4.486588668891272, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-0.5134113419375126, 3.}, {-4.513411332737292, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-0.5134113419375126, 3.}, {-3.5134113325194676`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-0.5134113419375126, 3.}, {-1.5134113317433844`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588668891272, 2.}, {0.9225051401048745, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588668891272, 2.}, {3.017918446254839, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.486588668891272, 2.}, {5.017918452997947, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-2.513411345094312, 3.}, {-4.513411332737292, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-2.513411345094312, 3.}, {0.4865886648510127, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-2.513411345094312, 3.}, {-2.5134113335196275`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-4.513411332737292, 2.}, {0.9225051401048745, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-4.513411332737292, 2.}, {-2.51341133239481, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{0.4865886648510127, 2.}, {0.9225051401048745, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{0.4865886648510127, 2.}, {4.017918448629189, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{0.9225051401048745, 1.}, {3.0179184469495226`, 0.}}, 
         0.0923631124039678], 
        ArrowBox[{{2.4865886609013614`, 3.}, {-3.5134113325194676`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{2.4865886609013614`, 3.}, {2.4865886673933915`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{2.4865886609013614`, 3.}, {6.486588669229718, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{2.4865886609013614`, 3.}, {1.4865886698243571`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{-3.5134113325194676`, 2.}, {3.017918446254839, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-3.5134113325194676`, 2.}, {-2.51341133239481, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{2.4865886673933915`, 2.}, {3.017918446254839, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{2.4865886673933915`, 2.}, {2.0179184439190294`, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{6.486588669229718, 2.}, {3.017918446254839, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{6.486588669229718, 2.}, {6.48658865982236, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.017918446254839, 1.}, {3.0179184469495226`, 0.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.4865886640209283`, 3.}, {1.4865886698243571`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.4865886640209283`, 3.}, {-2.5134113335196275`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.4865886640209283`, 3.}, {-1.5134113317433844`, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.4865886640209283`, 3.}, {5.486588669019511, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.4865886640209283`, 3.}, {8.486588669777234, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{3.4865886640209283`, 3.}, {9.486588670190145, 2.}}, 
         0.0923631124039678], 
        ArrowBox[{{1.4865886698243571`, 2.}, {-2.51341133239481, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{1.4865886698243571`, 2.}, {2.0179184439190294`, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{1.4865886698243571`, 2.}, {6.48658865982236, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-2.5134113335196275`, 2.}, {-2.51341133239481, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-2.5134113335196275`, 2.}, {4.017918448629189, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-1.5134113317433844`, 2.}, {-2.51341133239481, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-1.5134113317433844`, 2.}, {5.017918452997947, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{-2.51341133239481, 1.}, {3.0179184469495226`, 0.}}, 
         0.0923631124039678], 
        ArrowBox[{{5.486588669019511, 2.}, {2.0179184439190294`, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{5.486588669019511, 2.}, {4.017918448629189, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{5.486588669019511, 2.}, {5.017918452997947, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{2.0179184439190294`, 1.}, {3.0179184469495226`, 0.}}, 
         0.0923631124039678], 
        ArrowBox[{{8.486588669777234, 2.}, {4.017918448629189, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{8.486588669777234, 2.}, {6.48658865982236, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{4.017918448629189, 1.}, {3.0179184469495226`, 0.}}, 
         0.0923631124039678], 
        ArrowBox[{{9.486588670190145, 2.}, {6.48658865982236, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{9.486588670190145, 2.}, {5.017918452997947, 1.}}, 
         0.0923631124039678], 
        ArrowBox[{{6.48658865982236, 1.}, {3.0179184469495226`, 0.}}, 
         0.0923631124039678], 
        ArrowBox[{{5.017918452997947, 1.}, {3.0179184469495226`, 0.}}, 
         0.0923631124039678]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 4.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"12345\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.0923631124039678, 4.092363112403968}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.5134113445629396, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1234\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.4210482321589717, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.513411350140927, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1235\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.42104823773696, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.513411346947805, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"123\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.4210482345438376, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-5.513411332992916, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"123\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-5.421048220588949, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.486588672033349, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1245\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.578951784437317, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.48658866871574, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"124\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.5789517811197076, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.486588671168988, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"125\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.578951783572956, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.486588668376498, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"125\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.578951780780466, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.84337311525303, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"12\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"345\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {9.935736227656998, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{11.486588671857248, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"12\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {11.578951784261216, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{10.486588670711967, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"12\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {10.578951783115935, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{7.486588661897258, 1.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"12\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {7.578951774301226, 1.0923631124039679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.486588655548303, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1345\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.5789517679522709, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.4865886613135899, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"134\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.5789517737175577, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5134113346443314, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"134\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.42104822224036365, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.778118449609337, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"135\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-7.68575533720537, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-8.513411334266209, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"135\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-8.421048221862241, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.513411334636487, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"245\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.421048222232519, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-9.513411335389549, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-9.421048222985581, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.513411333689248, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-7.421048221285281, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.513411333293561, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.421048220889594, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-6.513411335930073, 1.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-6.421048223526105, 1.0923631124039679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5134113419375126, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"145\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.4210482295335448, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.486588668891272, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"145\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.57895178129524, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.513411345094312, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"235\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.421048232690344, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-4.513411332737292, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-4.421048220333324, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.4865886648510127, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.5789517772549805, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9225051401048745, 1.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0148682525088424, 1.0923631124039679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4865886609013614, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"234\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.578951773305329, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-3.5134113325194676, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-3.4210482201155, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.4865886673933915, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.578951779797359, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.486588669229718, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.578951781633686, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.017918446254839, 1.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.110281558658807, 1.0923631124039679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.4865886640209283, 3.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2345\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.578951776424896, 3.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.4865886698243571, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"234\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.578951782228325, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.5134113335196275, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"235\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.42104822111566, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1.5134113317433844, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.4210482193394165, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-2.51341133239481, 1.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-2.4210482199908423, 1.0923631124039679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.486588669019511, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"245\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.578951781423479, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2.0179184439190294, 1.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.110281556322997, 1.0923631124039679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{8.486588669777234, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {8.578951782181202, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{4.017918448629189, 1.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.1102815610331564, 1.0923631124039679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{9.486588670190145, 2.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"345\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {9.578951782594112, 2.0923631124039677}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{6.48658865982236, 1.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {6.578951772226327, 1.0923631124039679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{5.017918452997947, 1.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"45\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.110281565401914, 1.0923631124039679}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3.0179184469495226, 0.}, 0.0923631124039678], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.1102815593534903, 0.0923631124039678}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{976., 976.}]], "Output",
 CellChangeTimes->{
  3.7315602072211337`*^9, {3.7315602494133377`*^9, 
   3.731560264328187*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXd4lNXW/z2/dCCB0FFAQcVeUFSQo4KAIoKAUqT33gkBQgmhhw6hQxJq
QmihN+lVmgpiQRTEggc7x+M5+pzn+b0v73z23mtmz+SeyQR9ruv9Ay+HJPfc
Zd9rr72+q+/XOyf26t6/c2Lvrp0r1U/oPKhX765DKr0yMMF9KPz/uFzh5/lU
cvH7TZdL/rnp/t/650P+4bvbR28fvX309tHbR28fvX309tHbR28fvX309tHb
R28fvX309tHbR28fvX309tHbR28fvX309tHbR28fvX309tHbR28fvX309tHb
R///dPRxdSCqde6mzSebNmt5qVadl99/7fWmA5ZmZEb95z//Uecs97/oMXUg
ZtyMWXN+6jNk7M3Faw/eXL3j3ZsZG4/9KyF5xorhI5M9Fy/zv/hRdSC87uHD
h7/t3DuRC10R6t9wLubJ6gx1cqb/1feoA5F13zl/ZeTidUdb7zj8YY1zF7+p
/M13N1yR+s7zRo8ZezNlxnL7zjcXZO090qJVu3zvHN7w0JlLFxr1WXjh9T4L
XWHvvTlgiSv6WOuhy9YNmrJ+Ycr87e23HvjghbMffXWi2Vvtbqat2OWK0k+A
ci5zK33XDP8n3KVp/cAX3/z42KWr3/EOjL/H2t3vXqnbNS3qu5ptp7siLtfr
mrap78Sctb0HDL85emp6pLp/5M1Zmdv2tuvYbfbkpXu29Bmfs3LYzM2usPRR
aVsjDrcfvtwVnttv4toyP9/4t3cAc/0HUEq/YvFff/udAfBxhTEEV/jQjI3H
J89csT9t4uJdrrBtvcatcUVNn5q5l2Mjlqw/Nix9w3EefarF4PRwNdCYr2p3
mnWuaf/Fq4bN3NRt/Z53O27af67vig37P2nRpvPN5VtOatJHft2x56C3tuzY
23/V9lOb+0xY+3XtjrNc+l3DZ6Uu3eNLtDxjLqIn3J9oPMwVxuhc4TmDp25g
xJokHNMvFc88cdGrR9/9nA8X8TUXcDK/c+b+jiNX/lCj9TSGdqVulznHWidm
7O80cpWmQ7k+2TvOxP77j/8MTl+xTr3c0HFzb06ev/Zm0qSFX7Rs263PytXZ
POapjy//nVsfaTts2d+fbzfjH9VapP7j6RapPz/z1pQfnmsz7e/Pt5+5v9Oo
VTyWocC4zIV6zzn+L/5/9GSV+ekf/wphsiJlsgau3HqKs5q9ffwTV5i6qmiR
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
l059cBWdh1tocRHp1g/T3NOz07YBpKuDyDhJmoSWgjib3XRG1h1tOzQTYrl0
r6ho2Jp2PgJiTkO63rbrgJ6r1m5dPmL2lnffHLjkm1odZjGfYQo2YtxTqboE
/efRJhN+e7L5JPfjstNNSppCHg2TEh0RB4f2pMXCV6LvMRhYGZSGlCxpVow9
KD8pwYrJHDlnK825DJKGI1KZDVseTtPmVMq8NYd5Ah2OWCScykWo125WXBum
clxiRsxLz3ZqKJUye/5SqKstpuKSniuJeEoRMlqAneYo68pRXOriwhKsPzUy
tx4KusvIGOm6gVPWi69nQOaq9U5DmzJ55kIlaDRr8e6QT8WpjLKz3T0xDIFJ
8VTDmLyo/AK2Yptrn5W6XymQTviG7yUBjGNN9uzZe+nNVh3tYf7QqFmHpUnj
Zol+tt0N+D+6ZcPvT+g2U+GKn8LdknfWtGnL9rbZfviCuGp1mqRRK40LmMeJ
nu2yet3wN1T65rU32tiP/0f9Jm33dOg7hsGjbF2p23WO0jt6pGSbpnII0LJu
gMpwS/r04ekbjtEjR9RiybwRT5v4usWbYruvIL8bZ1cyeyh6nhyOcK+KFkfb
sm8bNGntP8hDrXqOYtmj/Zxv3G/Rxv6T1x1tM2z5t24xYGRo9M/PvjX1+5pt
prHYNru1RrrgpU1YsnvKjOX7XWGKEYvbuaEMQLwYDIS577rh7fe/f67tdBpZ
fV2r46wzzQcvRafgfNXBSDXAUmOtkpy2eNW1Bk3zjPV0k45DkeOYavTboZEc
xHTblDMYKff+6dlWUz+t32Nubr+J69zvlbU8adaWOZOW7E6ev+bIrNSlu/c2
7zLs6weefPHLKo9U+/jJ6i99W+GuyjNHpEz1+JfcJKMXn4gHsR2MiyUaXvuk
RetO/kui65qcdeLcoHvgoQ4jVnzjfk8Da0Vy+09cl5U4bePJlgkZtLBx8+Ma
3mVWavrbeXxcOohRPJiMFV/WuLmrD7rnYV/qjBX7kE0iGmCeibNXHTDPD7/4
as956aPnbu2u1AklJcuLYryx9/DpP9dp0MKf3js79U/he+z27CHTNsLIbnxl
DlNBrX9VbTYJ2QzmDly19R1JerfbwEiWtVk0hYW550xcshs5eqb5oKX05pHk
JgHUcJvceSWQIne4V+9E1YaFDdREfunWqFYkzfIUIaj18IEWzzparpLNkCTj
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
1ESamgx9u3oZ3XcoEE46KqbGhLmrj+v7lddZ7CNDnBCzXhYmOyNu+5Qfi44t
/Z+okYW2dp83eXLCjpQVPdb34j3UVeSGIh6rBwVEQtEsbGZu9hud1CfHCXMx
NbOEz0hIhz7l3IujY+NX9BsyBovIoJVbVCGNhWOXr8KAvL9T4gyJqsLMerR+
SgMFhIyLi7Vfba6Twe806Dnv84a9F+D6PNZlzEpMXRgBfTnrWJDJUeGSsD8U
pTtZt37jsw7VveWhc5/hrCO+jRNRi3Go2di2HxUcVRrbVBbJjPraluIO4FHM
bvaRnUEOl4GcRYbAUBGd8He4FgVrLrSOXvx37rxFiDwGedk0Ir0KnihGX1tr
wz0pBhYhVdnSeq3vH8ikAkKFIXv608yTU7UJ5KNsReWbRtqIbjAX0pGQ0ZON
W3QEdwnT8uVv00FMYcIbJUJJNk99zaABT76oBV2Ev7RJWARn5uplEuaNizor
aBhlzZlpbraRp8FiuM7tN1/agwDh81bzGNs7Z5os/R0+MlxGsDETM3BiLl39
NBjpy3bIFpkINeiGrZGbX9xGVlF8SeyZ7KeY70EVYu/mPQn5U2UdhC8EueYu
EsDZndrUcQBHg0Yq3rz9pR29tWJA2qTfIsdECUISGCf5EtoLoPmOWDoJz8Jn
B82oSGlt9RMMCtaUqizKVOSOr5C0mYxfucXIpiMfal68/sXJRnPafVp1fOsJ
CzYeXdVz1RA0EGagxe/9+5LI73RKa6KIkmCvf4O3zA2IAoUwff62oXOPfl+8
XKPZ8c5j0mdOXbcaD5ogIfGOsCvshArTyOEHbZnAdPFlddx29hTIit2GlCAp
28gLRmUerJMbaTp9cNCoxBAp5h8EAdWV/6nYYur/Vmg25Z9KLaY8qtJ2xvWm
/ReddoAc4sHo8QBIe/f4pdvCg7UIKyurwImxocfS2O+eiXuDHVoQs2HKtyUn
l4I+Kl/7QnFFMpII1r72WtVaBCfboVCCI6QyMwaJXQOmrAfv/VOx+dQHb3ZQ
DYGllqmftlcRtj9bfItJ8fPWUdMN+l7Re0A0hYCNPmCnmsD9TKthMd2/fuXL
25y3A3JsuF/53ZgRadtV11xuklUbgu2mmgCKKNH5lgs4jyd2kjbjyHuCXcQq
iVsYsxyLFwjmqiGmsqao4vt7VJ58X7xUrQmV0KlcMX/I9qGcvHAJMYALw1Hx
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
6c2JSPikTHJFCqd8V3hk0TU9FkzBVygtLAAuGRlJnj9/+XPBl8YeRvoF8BLr
o9uAJK+cnlGB3r49qEopdMlIrXe/cRl0TZYpkABAjhFQxfbrgHpJdhZKMpfF
FC2eYhPY4NOvPB95Wej52m9+8K7kZbLLxC0GVnz9tyUffIy+R2R14xDc2G3O
NGqtfFx2bAUK9FEAkGqTim3j/KGmlkMlJD/qfOWq1ZNmLdlKVvaVyrWa/yN3
wVJfPFG7/Qc1mifw+w8PP9cKoiBjiKjV3/MPKPOXgoPKEv9GUoLX86vaCweA
MI/jBEApl3Q+ayMLAZPYF1VGlAkzyIy4hY2ulZtYETg1bcy65emq+Rrt6j1M
At2MTbuooAZ+2CEoa/1AHa5ILgyJptdrd5iMUfi74veXv/zsy+0Cn60h0veb
x+v2uFW26mufV27U/+/57n3go0ovtpuXPHcnJX6oSkJtb0IXP75//IMil/Vu
ZPeyeuacDXnrHbx0EsJouves6sMYYMH1Y2atOsLKczC48ViVOpTzp3ctK5E6
YMU0Mn3gI2ZCJT1kcHYfbGjSz221WOHDL1RRFAqWLBs8fhkUPSd57vbv7y1a
0jYMSgtE4+3L9kXJMfdv6jJ3LAW1qWxNraJDnZLW+AFBaePERkulWEMEBdh4
uyqrJAZ6q7JiFnu/4tQnCYTMTIqWRlFZ6exIbtjZZ6o8K55ouz6XNgTqAma2
v1SK1zrozzIeOejPANxwjlOvoBZ5E9JxauLaM0J/VosyYR15tJQ3s7NAvYmi
AgKhR2hQU6yegJyqBSvIGNIkFBKXTFI735ilmT10zMzLlZ57WS2ZRm5Z/Wrm
SkkdKW4iDbxkCxifJdUmxShvhqdxqUo/B0m1lBMFkMRTklaSNs2eRehMgEiJ
WrLEUhxUJ9WG+YEUbG+pVT9cgAc7YlY0yFOiJUEuniDHDiefJ82tZcwqS+eH
Tx4a9czN+4Y//l2RpJIkKRkcnVdSCuXsK9ZzeIbfxWbq1w6DMpJSnkc75vOH
MiYu6L1xsBALGw4Ml1OS8I2dI2KjO+lqG9QyV69WKSEAwbZi6Z7db9sgjGNY
6t6rNqrNbwUGlgEZbOs2JdXOH5H8R1ietivTpyw9jLOOv4nB/uWplpPxcS1I
nrc3pNHRnGf9MnHFOx/OWWk34REXkLXN6bCdlrb5kYCEKRI2fr1u17mAmwCQ
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
jc4en7ofuTNy/voT/D1l2vIjd9T5Tf37u7Xos9XvT/nFe86ctPgAEzjfdMDi
E62HLj/TYtDS0y0HL333lb6pMM26wdO2zhu3YP/ikXP3SAu/7b3GbzzcMWk1
/y8fNmtn4Pp6OABBx0utGDRs7K2eg5LTFm08nrZm7ztpS7ee+vuApGmrExKT
Bi7bdmrCzJXHmh48dXVJ0pzdgWdsCwjdPfteH73uQJeRa/Z0TV53qFPSaggB
HQzKa7Pr+CWh2sD4+450HLHqrZaDl0EgEVnU0kTB2Jv6T95yuOOI1bfTu0v9
+z/WWqVqienlmKlTlx1i48+0HLT06svd5114tV/qpy90Srlcv+eC9xr1Xsh6
ffl8+1kXG/dZ9FHtLnMuNOmX+n7dtsN/a9Ghb0Q0qxBxD2tw8tWOgwLEvJT7
rtTvOf/9Rr0XXHi1/6LAvFfxJjt6jd8QEE6r323SNzVwPZX9eKNt4grGP9Uq
YfnawVO3Qhist1+LIPUO6p+s1kutUr9nE7tLu51H34fV2WAWPDDxmT9Vfm3K
r080m/SvB56qnzZ6+goz6Vxp89ce/r18pRd+qdRi0q2nW075plrbGZ/V7JRy
o07XuYGNWM3CLxg9by/iwjaEalDrzCafNZtNWihy13svN2qRNnvl/ogY9bSo
Lys/WwNQzzvBb+4AxawBNhvtN3b8xLSkKUv0V9W/kWkzl+3e27FLN3dz1T8l
0n+76M2bN681a9UxbcXOs/Ltr9p36//c6dOnw3x7i/o9ttHBg4fVtxPGzEmb
OG9jWuKEBZ81b92l8/oNm6xvlrK+uVUjeZ6bmDJ7ztq+/QeNmTJtRpnr169b
3yhtfcP958r/g6uHXPTtxjk5dxZMd2e0twy8PhE638hvfeOg+j3OCZOwvkHg
nVhP/Olln36cmEyltroV2enUiOVUK3Eb3OcOmMcaUOvcSDkhK6OpOWdJNKKE
umlLabhR5KSs7tQpaVbhEWlvo9fJGSdnunFUny775JNF+bfUME4hUXP25DaW
TDwz2hPmDJ7DGvyw/obdhEkCZuQIyoHc6cDjjpI9/SiSM8Ld/K9GNMcM5iRF
RNgF/+kcUb/nlggNceGJH0m8X06PmDSdKim+JB7C7+7gcdbg+nAYlHvsdC8x
K8dqYeAOLhjqO9qb+r0YSXxEbgfPrPIAlsIxvKe58QPaAukMHGUNfMLlM4d7
rMhEu9ms2Okhe9km1sUdONIa+IwemJuZnt3Xy/Z88aOzDsKMEi+pczIFpgOr
2rUAWJOwg0gbMXksBAMpsqfivuNz/0HOB7OklOLWRibfpdXfiBRbpTaLOXfG
WHde0HcyFouuJ+ncGW3d+f9WCN+9evfq3at3r969evfq3at3r969evfq3at3
r969evfq3at3r969evfq3at3r969evfq3at3r969evfq3at3r969evfq3av/
P7oa8f/9H3/Q6J4=\
\>"],ExpressionUUID->"8858b9dd-4d1a-44b4-a360-57b201eed78b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"MinimalGraph", "[", "6", "]"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", " ", "->", " ", "Blue"}], ",", " ", 
      RowBox[{"6", " ", "->", " ", "Blue"}], ",", 
      RowBox[{"4", " ", "->", " ", "Red"}], ",", " ", 
      RowBox[{"7", " ", "->", " ", "Red"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7315832089797745`*^9, 
  3.7315832892432413`*^9}},ExpressionUUID->"e9899799-e01a-4d93-bed1-\
c01edea5ef5d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7}, {
      Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2, 5}, {
       4, 5}, {1, 6}, {2, 6}, {5, 6}, {1, 7}, {2, 7}, {6, 7}}}, {
      GraphLayout -> {"Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
       VertexLabels -> {"Name"}, 
       VertexStyle -> {
        6 -> RGBColor[0, 0, 1], 3 -> RGBColor[0, 0, 1], 4 -> 
         RGBColor[1, 0, 0], 7 -> RGBColor[1, 0, 0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {6., 0.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {1., 1.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {1., 2.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {1., 3.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {1., 4.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{0., 0.}, {0., 6.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{6., 0.}, {1., 1.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{6., 0.}, {1., 2.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{6., 0.}, {1., 3.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{6., 0.}, {1., 4.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{6., 0.}, {0., 6.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{1., 1.}, {1., 2.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{1., 2.}, {1., 3.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], ArrowBox[{{1., 3.}, {1., 4.}}, 0.04847715736040609]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1., 4.}, {0., 6.}}, 0.04847715736040609]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.}, 0.04847715736040609], 
         InsetBox["1", 
          Offset[{2, 2}, {0.04847715736040609, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{6., 0.}, 0.04847715736040609], 
         InsetBox["2", 
          Offset[{2, 2}, {6.048477157360406, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], DiskBox[{1., 1.}, 0.04847715736040609]}, 
         InsetBox["3", 
          Offset[{2, 2}, {1.0484771573604061, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.04847715736040609]}, 
         InsetBox["4", 
          Offset[{2, 2}, {1.0484771573604061, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.04847715736040609], 
         InsetBox["5", 
          Offset[{2, 2}, {1.0484771573604061, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 0, 1], DiskBox[{1., 4.}, 0.04847715736040609]}, 
         InsetBox["6", 
          Offset[{2, 2}, {1.0484771573604061, 4.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], DiskBox[{0., 6.}, 0.04847715736040609]}, 
         InsetBox["7", 
          Offset[{2, 2}, {0.04847715736040609, 6.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.731583197283622*^9, 
  3.7315832903875804`*^9}},ExpressionUUID->"99af3e79-df75-4cee-b866-\
cf037f7139b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindFullFormula", "[", 
   RowBox[{"MinimalGraph", "[", "6", "]"}], "]"}], "//", 
  "FormulaGraphReverse"}]], "Input",
 CellChangeTimes->{{3.73152089449607*^9, 3.731520920573094*^9}, 
   3.7315210171599984`*^9, {3.7315211266004357`*^9, 3.7315211360000963`*^9}, 
   3.731521795137097*^9},ExpressionUUID->"06efe200-ae9b-4b11-9a3a-\
1a5025fd3b9b"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v1x2x357x46, $CellContext`v1x2x357x4x6, \
$CellContext`v1x2x35x46x7, $CellContext`v1x2x35x47x6, \
$CellContext`v1x2x35x4x6x7, $CellContext`v1x2x36x47x5, \
$CellContext`v1x2x36x4x57, $CellContext`v1x2x36x4x5x7, \
$CellContext`v1x2x37x46x5, $CellContext`v1x2x37x4x5x6, \
$CellContext`v1x2x3x46x57, $CellContext`v1x2x3x46x5x7, \
$CellContext`v1x2x3x47x5x6, $CellContext`v1x2x3x4x57x6, \
$CellContext`v1x2x3x4x5x6x7}, {{{1, 2}, {1, 3}, {1, 9}, {1, 11}, {2, 5}, {2, 
       10}, {2, 14}, {3, 5}, {3, 12}, {4, 5}, {4, 13}, {5, 15}, {6, 8}, {6, 
       13}, {7, 8}, {7, 14}, {8, 15}, {9, 10}, {9, 12}, {10, 15}, {11, 12}, {
       11, 14}, {12, 15}, {13, 15}, {14, 15}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`v1x2x3x46x57 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x36x4x5x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "36", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x35x46x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x57x6 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x35x4x6x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x37x46x5 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x357x46 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "357", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x357x4x6 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "357", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x37x4x5x6 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "37", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x36x4x57 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "36", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x35x47x6 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "35", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x46x5x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x36x47x5 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "36", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x47x5x6 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "47", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 3.}, {-1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 3.}, {-2., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 3.}, {1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 1.}, {1., 0.}}, 0.04847715736040609], 
        ArrowBox[{{4., 2.}, {3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{4., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 2.}, {3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 1.}, {1., 0.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-2., 1.}, {1., 0.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {-1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 1.}, {1., 0.}}, 0.04847715736040609], 
        ArrowBox[{{2., 1.}, {1., 0.}}, 0.04847715736040609], 
        ArrowBox[{{1., 1.}, {1., 0.}}, 0.04847715736040609]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 3.}, 0.04847715736040609], InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"357\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.04847715736040609, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"357\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"36\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"36\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"36\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"37\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-1.9515228426395939, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0484771573604061, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9515228426395939, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"47\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0484771573604061, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0484771573604061, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1170.5495148582045`, Automatic}]], "Output",
 CellChangeTimes->{{3.731520975737565*^9, 3.7315210177342305`*^9}, {
   3.7315210876220512`*^9, 3.731521142633109*^9}, 
   3.7315217965406265`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXmcVcW1Nnxun56hB0AmmUUGBRQcAAcERQVEBETmqZmbeRJBkBlsUWQQ
mWRoQBSnBE2MGjXBmIGbSe41N+IUSWIS4tUEzecNX27e+/bbT1Wt2nU2T9Vu
8/nFf9780tJ9zt5Vaz3rqVWrVk0DJtxZPmX2hDunT5rQss+CCfPKp09a2PLm
uQuqP0r/SyqVvS2VypraMoXfq1Ip+U9V9f/j/9mJ/+CB//vV//0q6auO6oOc
dm+//XbfF198ceTjjz9+23PPPdfpzTffdJ6aGn/tYvVB4bgnnnzqFzf16f/B
sNGTP5sye2nVjEXr/2vavBW/GTFu2js9b7hpziN79+X+7W9/i16cFC+pvfog
u+mHH374TPmM2Z/OWrS2qvLZ47lVjz7/s1T68wXLN748fuLUmDwT46W0Ux+k
6/z5z3/+6bCR46ru3/W1VIEuomrrgRd+NWp8eayICZ4itt2zYlXVyo2V6uXC
qAhIAVWcN8riRbTVRfR+7bXXfj9h+p3q5dq6iDPzlt43/cDBR9UT0RvjPUUA
CijhFgFYAHZSEW10ERD2F337D8RrqWJdxPtDRoxv9cEHH8SKGOcpAo/iFfWy
KeJPk2Yu7v3qq6/WsIger7/++kdl5QvdIsASEK2GRYAa7w0aOtot4g/jpszr
fvz48aQiDJxv3DJgUNXeZ76vXi7SRbw7YPDwBh999FFSEedrgrb68I9nRj7/
2i/wM/7rr57IvvfBA6+mcg/e9eDRb5Svfhw/D2zY9/KRWXPvrFq79bCppGrX
E989PmjIsCSbNdFyLtr7zA+ktFSO+m/uKxOWHbxvY+Wrcw8+969LHj7wjXeG
j5kMm2pW5IJo/b/98ndmPPb8T/DT+0f/9ivIGpU9hldWXOuvZ/9714pt30Q1
r41dXPmTO+Y/8h+3ztjxQe+JW96/cdLWlycsO4TvUHHuf//9f4G+oHEtVXEO
tNy7aPFSFIavVz10+FgqS0v+zOz1TwIfANX9xMkPG3zy6eeOAMPjEjXWGOOx
277zr28/ObfiqXdvnrI1/cerRz+QyvnDtWM2/nTI3EcEGZSaytKv1Pn0s8+/
P2TEOPEb+Uq47L8tXvvwd8dNmHLLd370JoTTT6ehisU3W/03DQtC9k7vnPqj
I9IdcRkbqA/yRMat63a9sHfZ1ucmP/XSz4H3ym2PVauvBXbRw0/f13/2nhE4
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
WaEWEaEWJgmlV2alErbWLgwIdScR6i4r1F1EqDuThNIPpBI2w94ZEGoREWqx
FWoxEWpRklDaMKmELayLAkLdRYRaYoVaQoS6K0ko3a5SCZtP7woItZgIdbcV
6m4i1OIkobRbTCVsI10cEGoJEWqpFWopEWpJklC6V0sl7P5cEhDqbiLUMivU
MiLU3UlC6aAklbBn8+6AUEuJUPdYoe4hQi1NEkrHlKmEfZVLA0ItI0Itt0It
J0ItSxLKHPydsCNyWUCoe4hQK6xQK4hQ9yQJpUd0qYTtjPcEhFpOhFpphVpJ
hFqeJJQ5kjxhH+LygFAriFCrrFCriFArkoTS+ZRUwvbBFQGhVhKhVluhVhOh
ViYJZU7YTtj9tzIg1Coi1Bor1Boi1Kokocwh2Qmb9lYFhFpNhFprhVpLhFqd
JJROUKcS9tutDgi1hgi1zgq1jgi1JkkoPdOQStgKtyYg1Foi1Hor1Hoi1Nok
ofSUUSphE9vagFDriFD3WqHuJUKtSxLKHCGesAFtXUCo9USoCitUBRFqfZJQ
ehI3lbBrbH1AqHuJUPdZoe4jQt2bJJSejU8l7PW6NyBUBRFqgxVqAxGqIkko
vawilbAtqyIg1H1EqPutUPcToe5LEkqvj0klbKm6LyDUBiLUA1aoB4hQG5KE
0gudjOf3CrUhINT9RKiNVqiNRKj7k4TSK9ZSCduW7g8I9QAR6kEr1INEqAeS
hNLr/1IJu44eCAi1kQi1yQq1iQi1MUkovYY0lbBbaGNAqAeJUJutUJuJUA8m
CaUXA6cSNvk8GBBqExFqixVqCxFqU5JQeiliKmFfzqaAUJuJUFutUFuJUJuT
hNLr/1MJ+2k2B4TaQoR6yAr1EBFqS5JQej9IKmErzJaAUFuJUNusUNuIUFuT
hNKrIlMJW1m2BoR6iAj1sBXqYSLUQ0lC6Q1GqYQtKQ8FhNpGhNpuhdpOhNqW
JJTe95hK2HmyLSDUw0SoHVaoHUSoh5OE0gs0Uwm7Sx4OCLWdCLXTCrWTCLU9
SSi9LTuVsHNke0CoHUSoXVaoXUSoHUlC6U3/qYTdITsCQu0kQu22Qu0mQu1M
EkqvFU0lbALZGRBqFxHqESvUI0SoXUlC6cNKUgn7P3YFhNpNhNpjhdpDhNqd
JJQ++SaVsPVjd0CoR4hQe61Qe4lQjyQJpZetphJ2fTwSEGoPEWqfFWofEWpP
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
qpCqr54i5X+kCIbfjirIxTA4u9oWldaZsK6o8VL1163/F+dmxAd0RRHK2cRB
X3T/nqGr+FEQKSFLT6bzl2oG0nmXc9z8iN0REf3WXbquBl1oqVIgxUkoy0Z6
63GJLwn6WUTQgFwSCmJycVOk/ackMkqFRsn14uHyA+uf/ewxk0cqUUqZGL+c
t1emW5fuVtlylIxJYx02z/RPG/eCee6Vk9P94ehQVRJwkpSGl2KvdHA0rHya
vqR/UruPB18nrevOGNLrU2pZSI4/TWluLxw9aJakXOrcVZm2dEWlKIKk5dPX
TKV3P3JnROSA1E6SUn7e+VNQCiip9bohpRPHybooKhescmtcy9BKb3mpTyQd
IaIcl1/yikshSAEdGi6pwELRuQZAZ2ecm4Acr5teqsAdEYGT5TpIYSu5FtJ8
LU6mO+c2Sn9SE1N/JtTMoyW1WGT9k+7Iun1VSB9kfIQHQme1O958OGlyblIt
UPr5yP9JOiJX1PCj6w8z+U1WgiR6S8kB1dwqwZSm41zgsKXmRkS0gBRHlVq5
3qogLYNkDujWzSYP0A98PSJwGgWVKhKmqTIX4ZUOQjQQbrkAbznwa0KGDrH+
eJ8TjBKlr7K0oKGIal2REqgxA7klKvxiAd73aSFp+H6xvo5L4HX2akREP5NV
8j9VCVM/R9+7SSmYLE70pywnfKP6iN4mxMlPSdLOiaLKRfcnqJ9lz68e7sui
d1fQvSxls+jrBtGbno6a9ZXmBF0mv2mPN0FoEaC7hILRaejbnO6csAVCR+e0
ITcPW5LFTZ0V7lrgvsCFFf6hu4o0HJTzhJJp4vt9/IK8vuoXc44ZT0MibWSi
HCUnuqTRecpKIJV46HzpmXT+9HW6AOp9SnxocT0/+lsR0QNyiSiaapMghbEI
pZktPU+k4pKJ2apictpMhlRal9d6+VNWf5qbdIQ0/vef6nDFAhjxtdC571Ye
8GoA0yDT7So9PUyv5ZYWOlxp32YCv6kC842ZJt3odAEryTeXBdOsH36kcxGR
3LfGdNuG14H2K1cEuWgmt6aKHshtHagXO650wlVu6HylsjN9HQfi7/9SQsv0
NTfTedI50hHSwPD5wdHxkpJ0x3U6P/PgC+rBnBgQkDbLUl7XPPi8enDYb//T
9z3OQ/8FIg4DwA==\
\>"],ExpressionUUID->"e6333dac-9e87-47ed-8a6a-b35d5ddb6aa0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "6"}]}], "}"}], ",", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<TutteEmbedding\>\""}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7315216093545313`*^9, 3.7315216421584797`*^9}, 
   3.7315217174918485`*^9},ExpressionUUID->"a3812a70-9262-4629-9313-\
e06271819e83"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
      Null, {{1, 2}, {2, 3}, {1, 3}, {1, 4}, {2, 4}, {4, 3}, {1, 5}, {3, 5}, {
       4, 5}, {1, 6}, {2, 6}, {3, 6}}}, {
      GraphLayout -> "TutteEmbedding", VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{-1.8369701987210297`*^-16, 1.}, {
          0.8660254037844387, -0.4999999999999997}}, 0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.8369701987210297`*^-16, 1.}, {1.1102230246251566`*^-17,
           0.07691983539094646}}, 0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.8369701987210297`*^-16, 
          1.}, {-0.8660254037844385, -0.5000000000000004}}, 
          0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.8369701987210297`*^-16, 1.}, {-0.2886751345948129, 
          0.19230661179698202`}}, 0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-1.8369701987210297`*^-16, 1.}, {0.2886751345948128, 
          0.1923066117969822}}, 0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.8660254037844387, -0.4999999999999997}, {
          1.1102230246251566`*^-17, 0.07691983539094646}}, 
          0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{
          0.8660254037844387, -0.4999999999999997}, {-0.8660254037844385, \
-0.5000000000000004}}, 0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.8660254037844387, -0.4999999999999997}, {
          0.2886751345948128, 0.1923066117969822}}, 0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.1102230246251566`*^-17, 
          0.07691983539094646}, {-0.8660254037844385, -0.5000000000000004}}, 
          0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.1102230246251566`*^-17, 
          0.07691983539094646}, {-0.2886751345948129, 0.19230661179698202`}}, 
          0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{1.1102230246251566`*^-17, 0.07691983539094646}, {
          0.2886751345948128, 0.1923066117969822}}, 0.020399597244776385`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.8660254037844385, -0.5000000000000004}, \
{-0.2886751345948129, 0.19230661179698202`}}, 0.020399597244776385`]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-1.8369701987210297*^-16, 1.}, 0.020399597244776385], 
         InsetBox["1", 
          Offset[{2, 2}, {0.0203995972447762, 1.0203995972447764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.8660254037844387, -0.4999999999999997}, 
          0.020399597244776385], 
         InsetBox["2", 
          Offset[{2, 2}, {0.8864250010292151, -0.4796004027552233}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1.1102230246251566*^-17, 0.07691983539094646}, 
          0.020399597244776385], 
         InsetBox["3", 
          Offset[{2, 2}, {0.020399597244776396, 0.09731943263572285}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.8660254037844385, -0.5000000000000004}, 
          0.020399597244776385], 
         InsetBox["4", 
          Offset[{2, 2}, {-0.8456258065396621, -0.4796004027552241}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.2886751345948129, 0.19230661179698202}, 
          0.020399597244776385], 
         InsetBox["5", 
          Offset[{2, 2}, {-0.2682755373500365, 0.2127062090417584}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.2886751345948128, 0.1923066117969822}, 
          0.020399597244776385], 
         InsetBox["6", 
          Offset[{2, 2}, {0.3090747318395892, 0.21270620904175858}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.731521605106584*^9, 3.731521642679239*^9}, 
   3.7315217179499516`*^9},ExpressionUUID->"c0dfb6d8-c5ed-4b70-aa80-\
4ef0f3d2ad66"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetsToColors", "[", "sets_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"colors", "=", 
       RowBox[{"{", 
        RowBox[{
        "Red", ",", "Blue", ",", "Green", ",", "Yellow", ",", "White", ",", 
         "Black", ",", "Cyan"}], "}"}]}], ",", "i", ",", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "sets", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"result", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"v", "\[Rule]", 
             RowBox[{"colors", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"v", ",", 
              RowBox[{"sets", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "result"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7315833367414026`*^9, 3.731583464725952*^9}, {
  3.731584800868295*^9, 
  3.7315848068958435`*^9}},ExpressionUUID->"356b4784-9da5-47e0-893e-\
070df3e57029"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetsToColors", "[", 
  RowBox[{"SymbolToSets", "[", "v1x2x3x4x5x67", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.731583447478903*^9, 
  3.731583457428621*^9}},ExpressionUUID->"b840c4ea-3062-4063-aa8d-\
de8da663b616"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"2", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 0, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->GrayLevel[0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "GrayLevel[0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["GrayLevelColorValueSelector"], {
            0, {Left, Bottom}}, {Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     GrayLevel[0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"6", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"7", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 1]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 1],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7315834669982905`*^9},ExpressionUUID->"c568cb09-ab98-4678-8bbf-\
99e363213a2e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetsToColors", "[", "v17x25x3x46", "]"}]], "Input",ExpressionUUID->"371d8a3d-fe5f-4d09-ae79-dfff75a77862"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.731583496323764*^9},ExpressionUUID->"742035cf-14b1-44d7-8e07-\
f0fd5954e727"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{"FindFullFormula", "[", 
    RowBox[{"Graph", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
       RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
       RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
       RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
       RowBox[{"4", "\[UndirectedEdge]", "7"}]}], "}"}], "]"}], "]"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"SymbolLevel", "[", "#", "]"}], "\[Equal]", "5"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7315835841934953`*^9},ExpressionUUID->"acd62275-0e6c-41d6-961e-\
4a1755c5a68c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "v1x2x3x4x567", ",", "v1x2x3x46x57", ",", "v1x25x3x4x67", ",", 
   "v1x25x3x46x7", ",", "v17x2x3x4x56", ",", "v17x2x3x46x5", ",", 
   "v17x25x3x4x6"}], "}"}]], "Output",
 CellChangeTimes->{{3.73158357685189*^9, 
  3.7315835849233446`*^9}},ExpressionUUID->"87acfae8-dcea-4df8-a350-\
1b9ba8d4b196"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
        RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
        RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
        RowBox[{"4", "\[UndirectedEdge]", "7"}]}], "}"}], "]"}]}], "}"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Graph", "[", 
        RowBox[{"g", ",", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"SetsToColors", "[", 
           RowBox[{"SymbolToSets", "[", "s", "]"}], "]"}]}], ",", 
         RowBox[{"GraphLayout", "\[Rule]", "\"\<TutteEmbedding\>\""}], ",", 
         RowBox[{"VertexSize", " ", "\[Rule]", "Large"}]}], "]"}], ",", 
       RowBox[{"SymbolToLabel", "[", "s", "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"FindFullFormula", "[", "g", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"SymbolLevel", "[", "#", "]"}], "<=", "5"}], "&"}]}], 
        "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7315833154970393`*^9, 3.731583317678355*^9}, {
  3.7315834791983395`*^9, 3.731583639335505*^9}, {3.731584814609556*^9, 
  3.731584883001682*^9}},ExpressionUUID->"f8423916-df36-43ac-8f5f-\
7dd19053b6e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {2, 3}, {1, 3}, {1, 4}, {2, 4}, {4, 3}, {1, 5}, {3,
              5}, {4, 5}, {1, 6}, {2, 6}, {3, 6}, {3, 7}, {2, 7}, {4, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
             VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> GrayLevel[1], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> GrayLevel[1], 5 -> GrayLevel[1]}}]]}, 
        TagBox[
         GraphicsGroupBox[
          
          GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {
           0.8660254037844387, -0.4999999999999997}, {
           9.25185853854297*^-18, -5.551115123125783*^-17}, \
{-0.8660254037844385, -0.5000000000000004}, {-0.2886751345948129, 
           0.1666666666666665}, {0.2886751345948128, 0.16666666666666674`}, {
           7.401486830834377*^-17, -0.3333333333333334}}, {{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              Arrowheads[0.], 
              ArrowBox[{1, 2}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 7}, 0.06666666666666667]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], 
             StyleBox[
              DiskBox[1, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[2, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[3, 0.06666666666666667], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[4, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[5, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False], 
             StyleBox[
              DiskBox[6, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False], 
             StyleBox[
              DiskBox[7, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False]}}]], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"567\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {2, 3}, {1, 3}, {1, 4}, {2, 4}, {4, 3}, {1, 5}, {3,
              5}, {4, 5}, {1, 6}, {2, 6}, {3, 6}, {3, 7}, {2, 7}, {4, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
             VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> GrayLevel[1], 5 -> GrayLevel[1]}}]]}, 
        TagBox[
         GraphicsGroupBox[
          
          GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {
           0.8660254037844387, -0.4999999999999997}, {
           
           9.25185853854297*^-18, -5.551115123125783*^-17}, \
{-0.8660254037844385, -0.5000000000000004}, {-0.2886751345948129, 
           0.1666666666666665}, {0.2886751345948128, 0.16666666666666674`}, {
           7.401486830834377*^-17, -0.3333333333333334}}, {{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              Arrowheads[0.], 
              ArrowBox[{1, 2}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 7}, 0.06666666666666667]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], 
             StyleBox[
              DiskBox[1, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[2, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[3, 0.06666666666666667], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[4, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[5, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False], 
             StyleBox[
              DiskBox[6, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[7, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False]}}]], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {2, 3}, {1, 3}, {1, 4}, {2, 4}, {4, 3}, {1, 5}, {3,
              5}, {4, 5}, {1, 6}, {2, 6}, {3, 6}, {3, 7}, {2, 7}, {4, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
             VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> GrayLevel[1], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> GrayLevel[1], 5 -> 
               RGBColor[0, 0, 1]}}]]}, 
        TagBox[
         GraphicsGroupBox[
          
          GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {
           0.8660254037844387, -0.4999999999999997}, {
           9.25185853854297*^-18, -5.551115123125783*^-17}, \
{-0.8660254037844385, -0.5000000000000004}, {-0.2886751345948129, 
           0.1666666666666665}, {0.2886751345948128, 0.16666666666666674`}, {
           7.401486830834377*^-17, -0.3333333333333334}}, {{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              Arrowheads[0.], 
              ArrowBox[{1, 2}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 7}, 0.06666666666666667]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], 
             StyleBox[
              DiskBox[1, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[2, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[3, 0.06666666666666667], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[4, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[5, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[6, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False], 
             StyleBox[
              DiskBox[7, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False]}}]], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"67\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {2, 3}, {1, 3}, {1, 4}, {2, 4}, {4, 3}, {1, 5}, {3,
              5}, {4, 5}, {1, 6}, {2, 6}, {3, 6}, {3, 7}, {2, 7}, {4, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
             VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> GrayLevel[1], 5 -> 
               RGBColor[0, 0, 1]}}]]}, 
        TagBox[
         GraphicsGroupBox[
          
          GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {
           0.8660254037844387, -0.4999999999999997}, {
           9.25185853854297*^-18, -5.551115123125783*^-17}, \
{-0.8660254037844385, -0.5000000000000004}, {-0.2886751345948129, 
           0.1666666666666665}, {0.2886751345948128, 0.16666666666666674`}, {
           7.401486830834377*^-17, -0.3333333333333334}}, {{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              Arrowheads[0.], 
              ArrowBox[{1, 2}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 7}, 0.06666666666666667]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], 
             StyleBox[
              DiskBox[1, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[2, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[3, 0.06666666666666667], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[4, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[5, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[6, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[7, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False]}}]], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {2, 3}, {1, 3}, {1, 4}, {2, 4}, {4, 3}, {1, 5}, {3,
              5}, {4, 5}, {1, 6}, {2, 6}, {3, 6}, {3, 7}, {2, 7}, {4, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
             VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> GrayLevel[1], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> RGBColor[1, 0, 0], 5 -> 
               GrayLevel[1]}}]]}, 
        TagBox[
         GraphicsGroupBox[
          
          GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {
           0.8660254037844387, -0.4999999999999997}, {
           9.25185853854297*^-18, -5.551115123125783*^-17}, \
{-0.8660254037844385, -0.5000000000000004}, {-0.2886751345948129, 
           0.1666666666666665}, {0.2886751345948128, 0.16666666666666674`}, {
           7.401486830834377*^-17, -0.3333333333333334}}, {{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              Arrowheads[0.], 
              ArrowBox[{1, 2}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 7}, 0.06666666666666667]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], 
             StyleBox[
              DiskBox[1, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[2, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[3, 0.06666666666666667], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[4, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[5, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False], 
             StyleBox[
              DiskBox[6, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False], 
             StyleBox[
              DiskBox[7, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False]}}]], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"17\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"56\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {2, 3}, {1, 3}, {1, 4}, {2, 4}, {4, 3}, {1, 5}, {3,
              5}, {4, 5}, {1, 6}, {2, 6}, {3, 6}, {3, 7}, {2, 7}, {4, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
             VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> RGBColor[1, 0, 0], 5 -> 
               GrayLevel[1]}}]]}, 
        TagBox[
         GraphicsGroupBox[
          
          GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {
           0.8660254037844387, -0.4999999999999997}, {
           9.25185853854297*^-18, -5.551115123125783*^-17}, \
{-0.8660254037844385, -0.5000000000000004}, {-0.2886751345948129, 
           0.1666666666666665}, {0.2886751345948128, 0.16666666666666674`}, {
           7.401486830834377*^-17, -0.3333333333333334}}, {{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              Arrowheads[0.], 
              ArrowBox[{1, 2}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 7}, 0.06666666666666667]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], 
             StyleBox[
              DiskBox[1, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[2, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[3, 0.06666666666666667], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[4, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[5, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False], 
             StyleBox[
              DiskBox[6, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[7, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False]}}]], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"17\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {2, 3}, {1, 3}, {1, 4}, {2, 4}, {4, 3}, {1, 5}, {3,
              5}, {4, 5}, {1, 6}, {2, 6}, {3, 6}, {3, 7}, {2, 7}, {4, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
             VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> GrayLevel[1], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> RGBColor[1, 0, 0], 5 -> 
               RGBColor[0, 0, 1]}}]]}, 
        TagBox[
         GraphicsGroupBox[
          
          GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {
           0.8660254037844387, -0.4999999999999997}, {
           
           9.25185853854297*^-18, -5.551115123125783*^-17}, \
{-0.8660254037844385, -0.5000000000000004}, {-0.2886751345948129, 
           0.1666666666666665}, {0.2886751345948128, 0.16666666666666674`}, {
           7.401486830834377*^-17, -0.3333333333333334}}, {{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              Arrowheads[0.], 
              ArrowBox[{1, 2}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 7}, 0.06666666666666667]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], 
             StyleBox[
              DiskBox[1, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[2, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[3, 0.06666666666666667], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[4, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[5, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[6, 0.06666666666666667], 
              GrayLevel[1], StripOnInput -> False], 
             StyleBox[
              DiskBox[7, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False]}}]], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"17\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {2, 3}, {1, 3}, {1, 4}, {2, 4}, {4, 3}, {1, 5}, {3,
              5}, {4, 5}, {1, 6}, {2, 6}, {3, 6}, {3, 7}, {2, 7}, {4, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "TutteEmbedding"}, 
             VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> RGBColor[1, 0, 0], 5 -> 
               RGBColor[0, 0, 1]}}]]}, 
        TagBox[
         GraphicsGroupBox[
          
          GraphicsComplexBox[{{-1.8369701987210297`*^-16, 1.}, {
           0.8660254037844387, -0.4999999999999997}, {
           9.25185853854297*^-18, -5.551115123125783*^-17}, \
{-0.8660254037844385, -0.5000000000000004}, {-0.2886751345948129, 
           0.1666666666666665}, {0.2886751345948128, 0.16666666666666674`}, {
           7.401486830834377*^-17, -0.3333333333333334}}, {{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              Arrowheads[0.], 
              ArrowBox[{1, 2}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{1, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 3}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{2, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 4}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 6}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{3, 7}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 5}, 0.06666666666666667]}, {
              Arrowheads[0.], 
              ArrowBox[{4, 7}, 0.06666666666666667]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], 
             StyleBox[
              DiskBox[1, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[2, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[3, 0.06666666666666667], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[4, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[5, 0.06666666666666667], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             StyleBox[
              DiskBox[6, 0.06666666666666667], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             StyleBox[
              DiskBox[7, 0.06666666666666667], 
              RGBColor[1, 0, 0], StripOnInput -> False]}}]], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"17\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.731583487475335*^9, 3.731583522818372*^9}, {
   3.731583566984305*^9, 3.7315836404449253`*^9}, 3.7315848112140627`*^9, {
   3.7315848467871466`*^9, 
   3.731584884089019*^9}},ExpressionUUID->"acf27df7-3c06-4f74-85d9-\
e317745be59d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"MinimalGraph", "[", "6", "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Labeled", "[", 
      RowBox[{
       RowBox[{"Graph", "[", 
        RowBox[{"g", ",", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"SetsToColors", "[", 
           RowBox[{"SymbolToSets", "[", "s", "]"}], "]"}]}], ",", 
         RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}], ",", 
         RowBox[{"VertexSize", " ", "\[Rule]", "Large"}]}], "]"}], ",", 
       RowBox[{"SymbolToLabel", "[", "s", "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"FindFullFormula", "[", "g", "]"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"SymbolLevel", "[", "#", "]"}], "<=", "5"}], "&"}]}], 
        "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7315852307340727`*^9, 
  3.7315852581078796`*^9}},ExpressionUUID->"5ae5b01c-cc4c-4343-8317-\
407bfa4b2996"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2,
              5}, {4, 5}, {1, 6}, {2, 6}, {5, 6}, {1, 7}, {2, 7}, {6, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
             VertexLabels -> {"Name"}, VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> GrayLevel[1], 5 -> GrayLevel[1]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {6., 0.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 1.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 2.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 3.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 4.}, {0., 6.}}, 0.2]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             StyleBox[
              DiskBox[{0., 0.}, 0.2], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{6., 0.}, 0.2], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {6.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 1.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.2, 1.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 2.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.2, 2.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 3.}, 0.2], 
              GrayLevel[1], StripOnInput -> False], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.2, 3.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 4.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {1.2, 4.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{0., 6.}, 0.2], 
              GrayLevel[1], StripOnInput -> False], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.2, 6.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2,
              5}, {4, 5}, {1, 6}, {2, 6}, {5, 6}, {1, 7}, {2, 7}, {6, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
             VertexLabels -> {"Name"}, VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> RGBColor[0, 1, 0], 5 -> 
               GrayLevel[1]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {6., 0.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 1.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 2.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 3.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 4.}, {0., 6.}}, 0.2]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             StyleBox[
              DiskBox[{0., 0.}, 0.2], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{6., 0.}, 0.2], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {6.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 1.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.2, 1.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 2.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.2, 2.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 3.}, 0.2], 
              GrayLevel[1], StripOnInput -> False], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.2, 3.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 4.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {1.2, 4.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{0., 6.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.2, 6.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"37\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2,
              5}, {4, 5}, {1, 6}, {2, 6}, {5, 6}, {1, 7}, {2, 7}, {6, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
             VertexLabels -> {"Name"}, VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[0, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> GrayLevel[1], 5 -> GrayLevel[1]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {6., 0.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 1.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 2.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 3.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 4.}, {0., 6.}}, 0.2]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             StyleBox[
              DiskBox[{0., 0.}, 0.2], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{6., 0.}, 0.2], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {6.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 1.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.2, 1.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 2.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.2, 2.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 3.}, 0.2], 
              GrayLevel[1], StripOnInput -> False], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.2, 3.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 4.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {1.2, 4.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{0., 6.}, 0.2], 
              GrayLevel[1], StripOnInput -> False], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.2, 6.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"36\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"57\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2,
              5}, {4, 5}, {1, 6}, {2, 6}, {5, 6}, {1, 7}, {2, 7}, {6, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
             VertexLabels -> {"Name"}, VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[0, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> RGBColor[1, 1, 0], 5 -> 
               GrayLevel[1]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {6., 0.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 1.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 2.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 3.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 4.}, {0., 6.}}, 0.2]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             StyleBox[
              DiskBox[{0., 0.}, 0.2], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{6., 0.}, 0.2], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {6.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 1.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.2, 1.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 2.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.2, 2.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 3.}, 0.2], 
              GrayLevel[1], StripOnInput -> False], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.2, 3.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 4.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {1.2, 4.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{0., 6.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.2, 6.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"36\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2,
              5}, {4, 5}, {1, 6}, {2, 6}, {5, 6}, {1, 7}, {2, 7}, {6, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
             VertexLabels -> {"Name"}, VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> GrayLevel[1], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> RGBColor[0, 1, 0], 5 -> 
               RGBColor[0, 1, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {6., 0.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 1.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 2.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 3.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 4.}, {0., 6.}}, 0.2]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             StyleBox[
              DiskBox[{0., 0.}, 0.2], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{6., 0.}, 0.2], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {6.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 1.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.2, 1.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 2.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.2, 2.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 3.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.2, 3.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 4.}, 0.2], 
              GrayLevel[1], StripOnInput -> False], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {1.2, 4.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{0., 6.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.2, 6.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"357\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2,
              5}, {4, 5}, {1, 6}, {2, 6}, {5, 6}, {1, 7}, {2, 7}, {6, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
             VertexLabels -> {"Name"}, VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> GrayLevel[1], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> RGBColor[1, 1, 0], 5 -> 
               RGBColor[0, 1, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {6., 0.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 1.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 2.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 3.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 4.}, {0., 6.}}, 0.2]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             StyleBox[
              DiskBox[{0., 0.}, 0.2], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{6., 0.}, 0.2], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {6.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 1.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.2, 1.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 2.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.2, 2.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 3.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.2, 3.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 4.}, 0.2], 
              GrayLevel[1], StripOnInput -> False], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {1.2, 4.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{0., 6.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.2, 6.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"47\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"6\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2,
              5}, {4, 5}, {1, 6}, {2, 6}, {5, 6}, {1, 7}, {2, 7}, {6, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
             VertexLabels -> {"Name"}, VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> GrayLevel[1], 5 -> 
               RGBColor[0, 1, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {6., 0.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 1.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 2.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 3.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 4.}, {0., 6.}}, 0.2]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             StyleBox[
              DiskBox[{0., 0.}, 0.2], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{6., 0.}, 0.2], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {6.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 1.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.2, 1.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 2.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.2, 2.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 3.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.2, 3.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 4.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {1.2, 4.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{0., 6.}, 0.2], 
              GrayLevel[1], StripOnInput -> False], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.2, 6.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"7\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )], ",", 
   TemplateBox[{GraphicsBox[
      NamespaceBox["NetworkGraphics", 
       DynamicModuleBox[{Typeset`graph = HoldComplete[
           
           Graph[{1, 2, 3, 4, 5, 6, 7}, {
            Null, {{1, 2}, {1, 3}, {3, 2}, {1, 4}, {2, 4}, {3, 4}, {1, 5}, {2,
              5}, {4, 5}, {1, 6}, {2, 6}, {5, 6}, {1, 7}, {2, 7}, {6, 7}}}, {
            GraphLayout -> {
              "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
             VertexLabels -> {"Name"}, VertexSize -> {Large}, 
             VertexStyle -> {
              6 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 2 -> 
               RGBColor[0, 0, 1], 3 -> RGBColor[0, 1, 0], 4 -> 
               RGBColor[1, 1, 0], 7 -> RGBColor[0, 1, 0], 5 -> 
               RGBColor[0, 1, 0]}}]]}, 
        TagBox[
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {6., 0.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{0., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 1.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{6., 0.}, {0., 6.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 1.}, {1., 2.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 2.}, {1., 3.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 3.}, {1., 4.}}, 0.2]}, {
             Arrowheads[0.], 
             ArrowBox[{{1., 4.}, {0., 6.}}, 0.2]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], {
             StyleBox[
              DiskBox[{0., 0.}, 0.2], 
              RGBColor[1, 0, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["1", TraditionalForm], 
              Offset[{2, 2}, {0.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{6., 0.}, 0.2], 
              RGBColor[0, 0, 1], StripOnInput -> False], 
             InsetBox[
              FormBox["2", TraditionalForm], 
              Offset[{2, 2}, {6.2, 0.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 1.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["3", TraditionalForm], 
              Offset[{2, 2}, {1.2, 1.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 2.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["4", TraditionalForm], 
              Offset[{2, 2}, {1.2, 2.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 3.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["5", TraditionalForm], 
              Offset[{2, 2}, {1.2, 3.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{1., 4.}, 0.2], 
              RGBColor[1, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["6", TraditionalForm], 
              Offset[{2, 2}, {1.2, 4.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
             StyleBox[
              DiskBox[{0., 6.}, 0.2], 
              RGBColor[0, 1, 0], StripOnInput -> False], 
             InsetBox[
              FormBox["7", TraditionalForm], 
              Offset[{2, 2}, {0.2, 6.2}], 
              ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
         MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
        False]], {
      FormatType -> TraditionalForm, FrameTicks -> None, 
       DefaultBaseStyle -> {
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]}}],TemplateBox[{"\"1\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"357\"", 
       StyleBox["\"\[Earth]\"", 
        RGBColor[0, 
         Rational[4, 9], 0], 12, StripOnInput -> False], "\"46\""}, 
      "RowDefault"]},
    "Labeled",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"]}, {
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      BaselinePosition -> {1, 1}]& ),
    InterpretationFunction->(RowBox[{"Labeled", "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]], "Output",
 CellChangeTimes->{{3.731585237040265*^9, 
  3.731585259060534*^9}},ExpressionUUID->"343fa0a6-cc89-4cf8-a338-\
ae59727ee71e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindFullFormula", "[", 
  RowBox[{"Graph", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
     RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
     RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
     RowBox[{"4", "\[UndirectedEdge]", "7"}]}], "}"}], "]"}], "]"}]], "Input",\
ExpressionUUID->"18834093-f9c5-4930-9368-35c921360d2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "v1x2x3x4x5x6x7", ",", "v1x2x3x4x5x67", ",", "v1x2x3x4x57x6", ",", 
   "v1x2x3x4x56x7", ",", "v1x2x3x4x567", ",", "v1x2x3x46x5x7", ",", 
   "v1x2x3x46x57", ",", "v1x25x3x4x6x7", ",", "v1x25x3x4x67", ",", 
   "v1x25x3x46x7", ",", "v17x2x3x4x5x6", ",", "v17x2x3x4x56", ",", 
   "v17x2x3x46x5", ",", "v17x25x3x4x6", ",", "v17x25x3x46"}], "}"}]], "Output",
 CellChangeTimes->{
  3.731583329975622*^9},ExpressionUUID->"b938b4e2-2797-4f8d-a170-\
bc09e23a9d8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FindFullFormula", "[", 
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
      RowBox[{"4", "\[UndirectedEdge]", "3"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
      RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
      RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
      RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
      RowBox[{"4", "\[UndirectedEdge]", "7"}]}], "}"}], "]"}], "]"}], "//", 
  "FormulaGraphReverse"}]], "Input",
 CellChangeTimes->{{3.7315215722003174`*^9, 3.7315215968305416`*^9}, {
  3.73152166029652*^9, 
  3.7315217462255697`*^9}},ExpressionUUID->"dba5c3dd-39db-4741-ac46-\
88a6b6c15dad"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`v17x25x3x46, $CellContext`v17x25x3x4x6, \
$CellContext`v17x2x3x46x5, $CellContext`v17x2x3x4x56, \
$CellContext`v17x2x3x4x5x6, $CellContext`v1x25x3x46x7, \
$CellContext`v1x25x3x4x67, $CellContext`v1x25x3x4x6x7, \
$CellContext`v1x2x3x46x57, $CellContext`v1x2x3x46x5x7, \
$CellContext`v1x2x3x4x567, $CellContext`v1x2x3x4x56x7, \
$CellContext`v1x2x3x4x57x6, $CellContext`v1x2x3x4x5x67, \
$CellContext`v1x2x3x4x5x6x7}, {{{1, 2}, {1, 3}, {1, 6}, {2, 5}, {2, 8}, {3, 
       5}, {3, 10}, {4, 5}, {4, 12}, {5, 15}, {6, 8}, {6, 10}, {7, 8}, {7, 
       14}, {8, 15}, {9, 10}, {9, 13}, {10, 15}, {11, 12}, {11, 13}, {11, 
       14}, {12, 15}, {13, 15}, {14, 15}}, Null}, {
      GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`v1x2x3x46x57 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x57x6 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "57", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x56 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "56"}], Rational[1, 6] 
           Pi], $CellContext`v1x25x3x4x6x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x46x5 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x567 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "567"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x6x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v17x2x3x4x5x6 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v17x25x3x4x6 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x5x67 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
           Pi], $CellContext`v1x25x3x46x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x46x5x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "5", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] 
           Pi], $CellContext`v1x25x3x4x67 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "67"}], Rational[1, 6] 
           Pi], $CellContext`v17x25x3x46 -> Rotate[
           Row[{"17", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "25", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "46"}], Rational[1, 6] 
           Pi], $CellContext`v1x2x3x4x56x7 -> Rotate[
           Row[{"1", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "2", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "3", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "4", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "56", 
             Style["\[Earth]", 
              RGBColor[0, 
               Rational[4, 9], 0], 12], "7"}], Rational[1, 6] Pi]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 3.}, {-1., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.04847715736040609], 
        ArrowBox[{{0., 3.}, {2., 2.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{-1., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {0., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 2.}, {3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{0., 1.}, {3., 0.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 2.}, {1., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 2.}, {4., 1.}}, 0.04847715736040609], 
        ArrowBox[{{1., 1.}, {3., 0.}}, 0.04847715736040609], 
        ArrowBox[{{4., 2.}, {2., 1.}}, 0.04847715736040609], 
        ArrowBox[{{4., 2.}, {5., 1.}}, 0.04847715736040609], 
        ArrowBox[{{2., 1.}, {3., 0.}}, 0.04847715736040609], 
        ArrowBox[{{5., 2.}, {3., 1.}}, 0.04847715736040609], 
        ArrowBox[{{5., 2.}, {5., 1.}}, 0.04847715736040609], 
        ArrowBox[{{5., 2.}, {4., 1.}}, 0.04847715736040609], 
        ArrowBox[{{3., 1.}, {3., 0.}}, 0.04847715736040609], 
        ArrowBox[{{5., 1.}, {3., 0.}}, 0.04847715736040609], 
        ArrowBox[{{4., 1.}, {3., 0.}}, 0.04847715736040609]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 3.}, 0.04847715736040609], InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.04847715736040609, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {-0.9515228426395939, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"56\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0484771573604061, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"17\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {1.0484771573604061, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {2.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 2.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"567\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"56\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{5., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"57\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {5.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{4., 1.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"67\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {4.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 0.}, 0.04847715736040609], 
         InsetBox[
          RotationBox[
           TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\"",
             StyleBox["\"\[Earth]\"", 
              RGBColor[0, 
               Rational[4, 9], 0], 12, StripOnInput -> False],"\"7\""},
            "RowDefault"],
           BoxRotation->0.5235987755982988], 
          Offset[{2, 2}, {3.048477157360406, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1058., Automatic}]], "Output",
 CellChangeTimes->{{3.731521572862258*^9, 3.7315215977033567`*^9}, {
   3.731521679188193*^9, 3.7315217038976912`*^9}, 
   3.731521746896394*^9},ExpressionUUID->"89ff18f5-eae6-4bbb-8c09-\
37d5fa5ed142"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
    RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
    RowBox[{"1", "\[UndirectedEdge]", "3"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.7315215274179335`*^9, 
  3.7315215601627398`*^9}},ExpressionUUID->"bbb2093f-ec4f-43eb-9e8a-\
662c17dd413c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}, {1, 3}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{-0.8660254037844384, -0.49999999999999933`}, {
       0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
       1.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], ArrowBox[{1, 2}, 0.020399597244776385`]}, 
         {Arrowheads[0.], ArrowBox[{1, 3}, 0.020399597244776385`]}, 
         {Arrowheads[0.], ArrowBox[{2, 3}, 0.020399597244776385`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.020399597244776385], DiskBox[2, 0.020399597244776385], 
         DiskBox[3, 0.020399597244776385]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.7315215611124563`*^9},ExpressionUUID->"57f379fa-351d-455a-8d2c-\
266aab57184c"]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 770, 20, 69, "Input", "ExpressionUUID" -> \
"37e993fe-5b7a-4690-8b9f-754d09880357"],
Cell[1353, 44, 1685, 52, 145, "Output", "ExpressionUUID" -> \
"6f678dbb-24e8-4be3-9582-bbeb990a51a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3075, 101, 359, 10, 30, "Input", "ExpressionUUID" -> \
"70405db2-bd04-4816-8042-de8593f9f005"],
Cell[3437, 113, 223, 6, 30, "Output", "ExpressionUUID" -> \
"7e4a9097-8abf-4648-a597-5921e06e6438"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3697, 124, 355, 10, 30, "Input", "ExpressionUUID" -> \
"5feed2be-fdf3-4b00-8227-88f92f916df7"],
Cell[4055, 136, 235, 7, 63, "Output", "ExpressionUUID" -> \
"2beee418-77d3-4cdf-98c7-987e0a02fba3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4327, 148, 233, 5, 30, "Input", "ExpressionUUID" -> \
"4c70b008-62af-4e8f-8782-14da83a2529f"],
Cell[4563, 155, 130, 3, 30, "Output", "ExpressionUUID" -> \
"53e92bf9-23a1-4af3-9eae-ddeb42ced6aa"]
}, Open  ]],
Cell[4708, 161, 2991, 78, 221, "Input", "ExpressionUUID" -> \
"4dc5a5da-be1c-4b41-9b93-bb21bf2a804b"],
Cell[CellGroupData[{
Cell[7724, 243, 113, 1, 30, "Input", "ExpressionUUID" -> \
"d6195090-5236-4a27-b228-66e0c4e3aa56"],
Cell[7840, 246, 187, 5, 30, "Output", "ExpressionUUID" -> \
"bdd6ebeb-10f8-4b7d-b73b-da90bc53ebe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8064, 256, 261, 7, 30, "Input", "ExpressionUUID" -> \
"a67f439e-61ac-4f40-a4a6-32c6d3fe0d5a"],
Cell[8328, 265, 899, 21, 374, "Output", "ExpressionUUID" -> \
"5ec0afbf-3c40-4c42-be0c-f731ba8b0147"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9264, 291, 292, 6, 30, "Input", "ExpressionUUID" -> \
"394c40d0-92dd-45a3-9bca-915a09ff6e84"],
Cell[9559, 299, 254, 6, 30, "Output", "ExpressionUUID" -> \
"17f782d0-6be1-4403-a7bf-0bdab98b2f5d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9850, 310, 524, 13, 30, "Input", "ExpressionUUID" -> \
"9b291ebb-3dfc-4ba3-a168-839bf96b13aa"],
Cell[10377, 325, 6723, 164, 84, "Output", "ExpressionUUID" -> \
"90d32096-9561-4cb2-98e3-3cbc58f70436"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17137, 494, 717, 19, 69, "Input", "ExpressionUUID" -> \
"e19b8653-4f1a-4381-a5cf-1b545e031b7a"],
Cell[17857, 515, 1553, 47, 111, "Output", "ExpressionUUID" -> \
"1f0f5775-444b-4cda-8cd5-20cadb8fc775"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19447, 567, 418, 12, 30, "Input", "ExpressionUUID" -> \
"92536c8f-d751-4050-8220-e4b1c17a8e76"],
Cell[19868, 581, 236, 5, 30, "Output", "ExpressionUUID" -> \
"c82941d3-c563-431d-b021-896cccd97bdd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20141, 591, 386, 9, 30, InheritFromParent, "ExpressionUUID" -> \
"62ac553b-1ca0-414b-b17f-542489be9774"],
Cell[20530, 602, 284, 6, 30, "Output", "ExpressionUUID" -> \
"0f843738-3123-48af-a9a5-b56238c1af60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20851, 613, 588, 17, 30, "Input", "ExpressionUUID" -> \
"cdd734ed-2588-4538-8ff1-192805b53c62"],
Cell[21442, 632, 356, 9, 30, "Output", "ExpressionUUID" -> \
"8b2a3bc7-9714-4d24-b4a6-b350c1a9eb05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21835, 646, 566, 13, 30, "Input", "ExpressionUUID" -> \
"207398c3-35e0-4e6f-aaa0-32a1dfdbcf92"],
Cell[22404, 661, 207, 4, 30, "Output", "ExpressionUUID" -> \
"87070435-379b-4aae-8eb8-112b76909feb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22648, 670, 266, 6, 30, "Input", "ExpressionUUID" -> \
"54953be0-35fc-47dc-a0da-bf133ece0a4f"],
Cell[22917, 678, 131, 3, 30, "Output", "ExpressionUUID" -> \
"37d55e3c-2a04-42b9-9a54-c2cd0c2cd1c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23085, 686, 304, 6, 30, "Input", "ExpressionUUID" -> \
"898e4f8f-1a4c-48de-b12a-2205b25d0b40"],
Cell[23392, 694, 1047, 17, 69, "Output", "ExpressionUUID" -> \
"16986537-3e40-4fde-a955-ea8fecf5a986"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24476, 716, 337, 8, 30, "Input", "ExpressionUUID" -> \
"22c8d07c-6ac7-45d5-abb0-a401e8f2f145"],
Cell[24816, 726, 168639, 3079, 991, 58368, 1270, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "8858b9dd-4d1a-44b4-a360-57b201eed78b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193492, 3810, 534, 13, 30, "Input", "ExpressionUUID" -> \
"e9899799-e01a-4d93-bed1-c01edea5ef5d"],
Cell[194029, 3825, 3819, 72, 415, "Output", "ExpressionUUID" -> \
"99af3e79-df75-4cee-b866-cf037f7139b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197885, 3902, 379, 8, 30, "Input", "ExpressionUUID" -> \
"06efe200-ae9b-4b11-9a3a-1a5025fd3b9b"],
Cell[198267, 3912, 69359, 1311, 629, 25224, 587, "CachedBoxData", "BoxData", \
"Output", "ExpressionUUID" -> "e6333dac-9e87-47ed-8a6a-b35d5ddb6aa0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267663, 5228, 1012, 21, 30, "Input", "ExpressionUUID" -> \
"a3812a70-9262-4629-9313-e06271819e83"],
Cell[268678, 5251, 4468, 96, 337, "Output", "ExpressionUUID" -> \
"c0dfb6d8-c5ed-4b70-aa80-4ef0f3d2ad66"]
}, Open  ]],
Cell[273161, 5350, 1437, 38, 126, "Input", "ExpressionUUID" -> \
"356b4784-9da5-47e0-893e-070df3e57029"],
Cell[CellGroupData[{
Cell[274623, 5392, 242, 5, 30, "Input", "ExpressionUUID" -> \
"b840c4ea-3062-4063-aa8d-de8da663b616"],
Cell[274868, 5399, 10808, 292, 30, "Output", "ExpressionUUID" -> \
"c568cb09-ab98-4678-8bbf-99e363213a2e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285713, 5696, 130, 1, 30, "Input", "ExpressionUUID" -> \
"371d8a3d-fe5f-4d09-ae79-dfff75a77862"],
Cell[285846, 5699, 147, 4, 30, "Output", "ExpressionUUID" -> \
"742035cf-14b1-44d7-8e07-f0fd5954e727"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286030, 5708, 1201, 28, 30, "Input", "ExpressionUUID" -> \
"acd62275-0e6c-41d6-961e-4a1755c5a68c"],
Cell[287234, 5738, 338, 8, 30, "Output", "ExpressionUUID" -> \
"87acfae8-dcea-4df8-a350-1b9ba8d4b196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287609, 5751, 2148, 49, 107, "Input", "ExpressionUUID" -> \
"f8423916-df36-43ac-8f5f-7dd19053b6e9"],
Cell[289760, 5802, 41220, 956, 397, "Output", "ExpressionUUID" -> \
"acf27df7-3c06-4f74-85d9-e317745be59d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331017, 6763, 1201, 31, 107, "Input", "ExpressionUUID" -> \
"5ae5b01c-cc4c-4343-8317-407bfa4b2996"],
Cell[332221, 6796, 46929, 1120, 455, "Output", "ExpressionUUID" -> \
"343fa0a6-cc89-4cf8-a338-ae59727ee71e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379187, 7921, 966, 20, 30, "Input", "ExpressionUUID" -> \
"18834093-f9c5-4930-9368-35c921360d2d"],
Cell[380156, 7943, 496, 10, 83, "Output", "ExpressionUUID" -> \
"b938b4e2-2797-4f8d-a170-bc09e23a9d8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380689, 7958, 1152, 25, 30, "Input", "ExpressionUUID" -> \
"dba5c3dd-39db-4741-ac46-88a6b6c15dad"],
Cell[381844, 7985, 25322, 590, 567, "Output", "ExpressionUUID" -> \
"89ff18f5-eae6-4bbb-8c09-37d5fa5ed142"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407203, 8580, 368, 9, 30, "Input", "ExpressionUUID" -> \
"bbb2093f-ec4f-43eb-9e8a-662c17dd413c"],
Cell[407574, 8591, 1171, 25, 329, "Output", "ExpressionUUID" -> \
"57f379fa-351d-455a-8d2c-266aab57184c"]
}, Open  ]]
}
]
*)

