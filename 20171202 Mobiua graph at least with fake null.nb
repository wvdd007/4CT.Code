(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1259626,      26596]
NotebookOptionsPosition[   1254880,      26479]
NotebookOutlinePosition[   1255222,      26494]
CellTagsIndexPosition[   1255179,      26491]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Now for five and real colofours", "Section",
 CellChangeTimes->{{3.7208974693440104`*^9, 
  3.7208974780884843`*^9}},ExpressionUUID->"bcd74ef6-5dae-460a-87a7-\
96efdedb7e1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyColors", "=", 
   RowBox[{"Association", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720890191208723*^9, 
  3.7208902136037164`*^9}},ExpressionUUID->"5e1684e0-305d-423c-a158-\
76c07af13ffd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MyColors", "[", "Greater", "]"}], "=", "Green"}], ";", 
  RowBox[{
   RowBox[{"MyColors", "[", "GreaterEqual", "]"}], "=", "Orange"}], ";", 
  RowBox[{
   RowBox[{"MyColors", "[", "Equal", "]"}], "=", "Red"}], ";", 
  "MyColors"}]], "Input",
 CellChangeTimes->{{3.720890217100402*^9, 3.7208902338582716`*^9}, {
  3.7208982081523447`*^9, 
  3.720898211019512*^9}},ExpressionUUID->"934e3838-e825-4582-9df9-\
28099cc4f05b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"Greater", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"GreaterEqual", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0.5, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"Equal", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7208902346729226`*^9, 3.7208913020185966`*^9, {3.7208982046910243`*^9, 
   3.720898211578695*^9}, 3.720953238588958*^9, 3.7209535519883513`*^9, 
   3.721055810690405*^9, 3.7211570919637055`*^9, 
   3.7212075394608135`*^9},ExpressionUUID->"0ca11c72-5a42-4b52-ad88-\
472b6419a65d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChangeSYmbol", "[", "s_", "]"}], ":=", 
  RowBox[{"Symbol", "[", 
   RowBox[{"\"\<n\>\"", "<>", 
    RowBox[{"StringDrop", "[", 
     RowBox[{
      RowBox[{"SymbolName", "[", "s", "]"}], ",", "1"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.720897278652465*^9, 
  3.720897310564635*^9}},ExpressionUUID->"ad4d8832-88dc-4516-8312-\
50e714c20caf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vertexLabels", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofournull\>\""}], "]"}], "]"}], "\[Rule]", 
       " ", 
       RowBox[{"Tooltip", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"allGraphs5", "[", 
              RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}], ",", 
             RowBox[{"Pi", "/", "4"}]}], "]"}], ",", "Red", ",", "Bold", ",", 
           "14"}], "]"}], ",", 
         RowBox[{"Labeled", "[", 
          RowBox[{
           RowBox[{"ShowGraph", "[", 
            RowBox[{"allGraphs5", ",", "k"}], "]"}], ",", 
           RowBox[{"allGraphs5", "[", 
            RowBox[{"k", ",", "\"\<compwhy\>\""}], "]"}]}], "]"}]}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5FakeAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.72089749010003*^9, 3.7208976215966034`*^9}, {
  3.7208977967618484`*^9, 3.720897804314616*^9}, {3.7208978580768857`*^9, 
  3.72089785908768*^9}, {3.720898311692405*^9, 3.7208983257896495`*^9}, {
  3.720898366957579*^9, 3.7208983863823557`*^9}, {3.7208984573053303`*^9, 
  3.720898472787612*^9}, {3.720899830323249*^9, 3.7208998310740595`*^9}, {
  3.720928452415261*^9, 3.720928469509611*^9}, {3.72115714286215*^9, 
  3.721157146983141*^9}, {3.7212283786347904`*^9, 
  3.7212284048760147`*^9}},ExpressionUUID->"25595298-69d2-44a1-a7c0-\
df65a477b9f6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["36",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["0", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[0, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["23",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["1", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[1, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["26",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["3", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[3, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["23",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["9", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[9, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["10",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["13", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[13, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["26",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["27", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[27, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["17",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["36", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[36, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["26",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["81", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[81, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["18",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["84", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x84== x19767(Greater) + 41637 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[84, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x84== x19767(Greater) + 41637 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["11",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["109", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[109, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["23",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["243", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[243, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["15",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["244", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[244, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["11",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["273", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[273, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["10",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["333", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[333, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2345", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["2",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["364", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x364(Greater)== x1093(Greater) + 30253 \
(GreaterEqual) (greater propagated)\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[364, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x364(Greater)== x1093(Greater) + 30253 \
(GreaterEqual) (greater propagated)"], "Tooltip"]& ]}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["23",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["729", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[729, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["15",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["738", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[738, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["17",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["810", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[810, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["15",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["972", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[972, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x234", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["1062", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[1062, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["26",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2187", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2187, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["18",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2190", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x2190== x21873(Greater) + 41637 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2190, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x2190== x21873(Greater) + 41637 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["18",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2214", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x2214== x21897(Greater) + 42390 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2214, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x2214== x21897(Greater) + 42390 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["17",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2430", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2430, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x235", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2460", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x2460== x22143(Greater) + 49197 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2460, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x2460== x22143(Greater) + 49197 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["10",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2917", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2917, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n145x23", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["3160", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[3160, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["26",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6561", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6561, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["17",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6562", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6562, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["18",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6588", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x6588== x26271(Greater) + 46926 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6588, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x6588== x26271(Greater) + 46926 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["18",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6642", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x6642== x26325(Greater) + 48438 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6642, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x6642== x26325(Greater) + 48438 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x245", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6670", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x6670== x26353(Greater) + 49195 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6670, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x6670== x26353(Greater) + 49195 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["11",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["7293", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[7293, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n135x24", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["7374", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x7374== x27057(Greater) + 49197 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[7374, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x7374== x27057(Greater) + 49197 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["11",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["8757", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[8757, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n134x25", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["8784", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x8784== x28467(Greater) + 49203 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[8784, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x8784== x28467(Greater) + 49203 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1345x2", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["2",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["9490", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x9490(Greater)== x9517(Greater) + 29551 \
(GreaterEqual) (greater propagated)\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[9490, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x9490(Greater)== x9517(Greater) + 29551 \
(GreaterEqual) (greater propagated)"], "Tooltip"]& ]}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["23",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19683", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19683, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["15",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19684", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19684, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["17",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19686", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19686, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["15",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19692", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19692, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x345", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19696", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19696, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["10",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["20439", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[20439, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n125x34", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["20448", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[20448, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["11",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["21951", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[21951, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n124x35", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["21954", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x21954== x28515(Greater) + 36057 (GreaterEqual)\
\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[21954, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x21954== x28515(Greater) + 36057 (GreaterEqual)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1245x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["2",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["22708", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x22708(Greater)== x22711(Greater) + 29527 \
(Greater) (greater propagated)\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[22708, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x22708(Greater)== x22711(Greater) + 29527 \
(Greater) (greater propagated)"], "Tooltip"]& ]}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["10",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["26487", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[26487, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n123x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["7",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["26488", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[26488, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1235x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["2",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["27246", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x27246(Greater)== x27255(Greater) + 29533 \
(GreaterEqual) (greater propagated)\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[27246, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x27246(Greater)== x27255(Greater) + 29533 \
(GreaterEqual) (greater propagated)"], "Tooltip"]& ]}], ",", 
   RowBox[{"n1234x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["2",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["28764", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x28764(Greater)== x28767(GreaterEqual) + 29527 \
(Greater) (greater propagated)\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[28764, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x28764(Greater)== x28767(GreaterEqual) + 29527 \
(Greater) (greater propagated)"], "Tooltip"]& ]}], ",", 
   RowBox[{"n12345", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["0",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 
                  5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["29524", 
           RGBColor[
            Rational[2, 3], 0, 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This graph contains Clique of size5\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 
          4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[29524, 
         RGBColor[
          Rational[2, 3], 0, 0]]], "This graph contains Clique of size5"], 
      "Tooltip"]& ]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.720897659339305*^9, 3.720897820765293*^9, 3.7208978752880163`*^9, 
   3.7208983434460945`*^9, 3.7208984036715794`*^9, 3.7208984891345863`*^9, 
   3.720899847307654*^9, 3.7209284861026597`*^9, 3.7209532535639043`*^9, 
   3.720953567895443*^9, 3.721055822759076*^9, 3.7211571500388975`*^9, 
   3.7212075399460945`*^9, {3.7212283958517*^9, 
   3.7212284062140217`*^9}},ExpressionUUID->"e943e971-37a3-423b-8b15-\
1686026bafa4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vertexStyle", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofournull\>\""}], "]"}], "]"}], "\[Rule]", 
       " ", 
       RowBox[{"MyColors", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<comp\>\""}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5FakeAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7208982242696996`*^9, 3.720898242826764*^9}, {
  3.721228388302325*^9, 
  3.721228412185589*^9}},ExpressionUUID->"8e25d486-5968-4806-8195-\
40a41776c29c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x234", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x235", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n145x23", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x245", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n135x24", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n134x25", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1345x2", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n125x34", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n124x35", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1245x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n123x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1235x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1234x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7208982463147573`*^9, 3.7209532542393856`*^9, 3.720953569268033*^9, 
   3.7210558231758685`*^9, 3.7211571633134985`*^9, 3.7212075400949907`*^9, {
   3.7212283973809786`*^9, 
   3.72122841484214*^9}},ExpressionUUID->"90245f75-0f0e-4623-a901-\
409690082e90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"EdgeList", "[", 
     RowBox[{"MobiusGraph5", "[", 
      RowBox[{"K5Key", ",", "allGraphs5"}], "]"}], "]"}], ",", 
    RowBox[{"VertexLabels", "\[Rule]", "vertexLabels"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], 
    ",", " ", 
    RowBox[{"VertexStyle", "\[Rule]", "vertexStyle"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.720897671054759*^9, 3.720897732658266*^9}, 
   3.7208977837094126`*^9, {3.720898021550186*^9, 3.720898022347364*^9}, {
   3.720898250887332*^9, 3.7208982596819534`*^9}, {3.720898489372738*^9, 
   3.720898493591878*^9}},ExpressionUUID->"cdcf99dc-619f-4fe7-94c1-\
c27e47b98e82"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`n1234x5, $CellContext`n12345, $CellContext`n1235x4, \
$CellContext`n123x45, $CellContext`n1245x3, $CellContext`n124x35, \
$CellContext`n125x34, $CellContext`n12x345, $CellContext`n1345x2, \
$CellContext`n134x25, $CellContext`n135x24, $CellContext`n13x245, \
$CellContext`n145x23, $CellContext`n14x235, $CellContext`n15x234, \
$CellContext`n1x2345, $CellContext`n12x34x5, $CellContext`n13x24x5, \
$CellContext`n14x23x5, $CellContext`n123x4x5, $CellContext`n124x3x5, \
$CellContext`n134x2x5, $CellContext`n1x234x5, $CellContext`n12x35x4, \
$CellContext`n13x25x4, $CellContext`n15x23x4, $CellContext`n125x3x4, \
$CellContext`n135x2x4, $CellContext`n1x235x4, $CellContext`n12x3x45, \
$CellContext`n13x2x45, $CellContext`n1x23x45, $CellContext`n14x25x3, \
$CellContext`n15x24x3, $CellContext`n145x2x3, $CellContext`n1x245x3, \
$CellContext`n14x2x35, $CellContext`n1x24x35, $CellContext`n15x2x34, \
$CellContext`n1x25x34, $CellContext`n1x2x345, $CellContext`n12x3x4x5, \
$CellContext`n1x2x34x5, $CellContext`n1x2x35x4, $CellContext`n1x2x3x45, \
$CellContext`n13x2x4x5, $CellContext`n1x24x3x5, $CellContext`n1x25x3x4, \
$CellContext`n14x2x3x5, $CellContext`n1x23x4x5, $CellContext`n15x2x3x4, \
$CellContext`n1x2x3x4x5}, {CompressedData["
1:eJwVxdV5hTAYAFDyhwBBg7u7WybpCHeBrtRR2z6c79Sf768PCILw8+d/BBhE
ICCBDApQUEEDHQwwwQIGNnKQizzkowCFKMIxTrCHU5zhHBdiKVaiJxakJg3x
SUpa0pFI6qVB8iVbHuVJTmVbiZRCmZWS9nSkAc1oS2caq7U6qYHqaI02aJnm
6LFe6p3uGolRGa3hmrXZm7mZWI01WqFVsYFNLGQ569jMFnu1l2iLlmIvDud0
jviKj3Ivb/dx7/qq737r3+RJ3uZs3nEdn2qvzmEbrmmdFu/wHm/xb//0l/RN
r/QI7mANjuzNtuxu33Zvn/AM1/DJr3zLz+7q9m6dt3mf+cIPfvOXP/zkF1/5
xvdfSYYjbw==
       "], Null}, {
      AspectRatio -> 1, GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`n1x24x35 -> Tooltip[
           Style[
            Rotate[18, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[84, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x84== x19767(Greater) + 41637 (Greater)"]], \
$CellContext`n1x23x4x5 -> Tooltip[
           Style[
            Rotate[23, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[243, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x23x45 -> Tooltip[
           Style[
            Rotate[15, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[244, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x34x5 -> Tooltip[
           Style[
            Rotate[15, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19692, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x2x35 -> Tooltip[
           Style[
            Rotate[18, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2190, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x2190== x21873(Greater) + 41637 (Greater)"]], \
$CellContext`n15x2x3x4 -> Tooltip[
           Style[
            Rotate[23, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[729, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1234x5 -> Tooltip[
           Style[
            Rotate[2, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[28764, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x28764(Greater)== x28767(GreaterEqual) + \
29527 (Greater) (greater propagated)"]], $CellContext`n15x2x34 -> Tooltip[
           Style[
            Rotate[15, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[738, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x3x4x5 -> 
         Tooltip[
           Style[
            Rotate[23, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19683, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x35x4 -> 
         Tooltip[
           Style[
            Rotate[26, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[3, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n125x3x4 -> Tooltip[
           Style[
            Rotate[10, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[20439, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x2x45 -> Tooltip[
           Style[
            Rotate[17, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6562, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x245 -> Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6670, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x6670== x26353(Greater) + 49195 (Greater)"]], \
$CellContext`n13x25x4 -> Tooltip[
           Style[
            Rotate[18, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6588, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x6588== x26271(Greater) + 46926 (Greater)"]], \
$CellContext`n12x35x4 -> Tooltip[
           Style[
            Rotate[17, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19686, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x245x3 -> Tooltip[
           Style[
            Rotate[11, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[109, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n135x24 -> Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[7374, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x7374== x27057(Greater) + 49197 (Greater)"]], \
$CellContext`n1245x3 -> Tooltip[
           Style[
            Rotate[2, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[22708, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x22708(Greater)== x22711(Greater) + 29527 \
(Greater) (greater propagated)"]], $CellContext`n1x2x3x45 -> Tooltip[
           Style[
            Rotate[23, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[1, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n145x2x3 -> Tooltip[
           Style[
            Rotate[10, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2917, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x25x34 -> Tooltip[
           Style[
            Rotate[17, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[36, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x345 -> Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19696, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x25x3 -> Tooltip[
           Style[
            Rotate[18, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2214, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x2214== x21897(Greater) + 42390 (Greater)"]], \
$CellContext`n1x2x34x5 -> Tooltip[
           Style[
            Rotate[23, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[9, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n134x2x5 -> Tooltip[
           Style[
            Rotate[11, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[8757, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x23x5 -> Tooltip[
           Style[
            Rotate[17, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2430, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12345 -> Tooltip[
           Style[
            Rotate[0, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {
               3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[29524, 
              RGBColor[
               Rational[2, 3], 0, 0]]], 
            "This graph contains Clique of size5"]], $CellContext`n15x234 -> 
         Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[1062, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x235 -> Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2460, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x2460== x22143(Greater) + 49197 (Greater)"]], \
$CellContext`n15x24x3 -> Tooltip[
           Style[
            Rotate[17, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[810, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x3x4x5 -> 
         Tooltip[
           Style[
            Rotate[36, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[0, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x3x45 -> Tooltip[
           Style[
            Rotate[15, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19684, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n123x4x5 -> Tooltip[
           Style[
            Rotate[10, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[26487, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n124x3x5 -> Tooltip[
           Style[
            Rotate[11, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[21951, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x24x5 -> Tooltip[
           Style[
            Rotate[18, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6642, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x6642== x26325(Greater) + 48438 (Greater)"]], \
$CellContext`n1x2345 -> Tooltip[
           Style[
            Rotate[2, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[364, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x364(Greater)== x1093(Greater) + 30253 \
(GreaterEqual) (greater propagated)"]], $CellContext`n14x2x3x5 -> Tooltip[
           Style[
            Rotate[26, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2187, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n15x23x4 -> Tooltip[
           Style[
            Rotate[15, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[972, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x345 -> Tooltip[
           Style[
            Rotate[10, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[13, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x234x5 -> Tooltip[
           Style[
            Rotate[10, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[333, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n124x35 -> Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[21954, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x21954== x28515(Greater) + 36057 \
(GreaterEqual)"]], $CellContext`n123x45 -> Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[26488, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n145x23 -> Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[3160, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x2x4x5 -> 
         Tooltip[
           Style[
            Rotate[26, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6561, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x24x3x5 -> 
         Tooltip[
           Style[
            Rotate[26, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[81, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n135x2x4 -> Tooltip[
           Style[
            Rotate[11, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[7293, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x25x3x4 -> 
         Tooltip[
           Style[
            Rotate[26, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[27, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1345x2 -> Tooltip[
           Style[
            Rotate[2, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[9490, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x9490(Greater)== x9517(Greater) + 29551 \
(GreaterEqual) (greater propagated)"]], $CellContext`n1235x4 -> Tooltip[
           Style[
            Rotate[2, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[27246, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x27246(Greater)== x27255(Greater) + 29533 \
(GreaterEqual) (greater propagated)"]], $CellContext`n134x25 -> Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[8784, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x8784== x28467(Greater) + 49203 (Greater)"]], \
$CellContext`n125x34 -> Tooltip[
           Style[
            Rotate[7, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[20448, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x235x4 -> Tooltip[
           Style[
            Rotate[11, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[273, 
              RGBColor[0, 
               Rational[2, 3], 0]]], "This is a planar contraction"]]}, 
       VertexStyle -> {$CellContext`n1245x3 -> 
         RGBColor[0, 1, 0], $CellContext`n12345 -> 
         RGBColor[1, 0, 0], $CellContext`n15x2x3x4 -> 
         RGBColor[0, 1, 0], $CellContext`n13x25x4 -> 
         RGBColor[0, 1, 0], $CellContext`n12x3x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n15x24x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x23x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n14x25x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x245x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x25x34 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2345 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x35x4 -> 
         RGBColor[0, 1, 0], $CellContext`n1x235x4 -> 
         RGBColor[0, 1, 0], $CellContext`n13x24x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x24x35 -> 
         RGBColor[0, 1, 0], $CellContext`n14x23x5 -> 
         RGBColor[0, 1, 0], $CellContext`n12x35x4 -> 
         RGBColor[0, 1, 0], $CellContext`n15x234 -> 
         RGBColor[0, 1, 0], $CellContext`n13x2x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n123x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n125x34 -> 
         RGBColor[0, 1, 0], $CellContext`n12x3x45 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x3x45 -> 
         RGBColor[0, 1, 0], $CellContext`n134x2x5 -> 
         RGBColor[0, 1, 0], $CellContext`n124x3x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x34x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x3x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n12x34x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x23x45 -> 
         RGBColor[0, 1, 0], $CellContext`n13x245 -> 
         RGBColor[0, 1, 0], $CellContext`n14x235 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x345 -> 
         RGBColor[0, 1, 0], $CellContext`n14x2x35 -> 
         RGBColor[0, 1, 0], $CellContext`n15x23x4 -> 
         RGBColor[0, 1, 0], $CellContext`n124x35 -> 
         RGBColor[0, 1, 0], $CellContext`n134x25 -> 
         RGBColor[0, 1, 0], $CellContext`n1234x5 -> 
         RGBColor[0, 1, 0], $CellContext`n145x23 -> 
         RGBColor[0, 1, 0], $CellContext`n123x45 -> 
         RGBColor[0, 1, 0], $CellContext`n135x24 -> 
         RGBColor[0, 1, 0], $CellContext`n145x2x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x25x3x4 -> 
         RGBColor[0, 1, 0], $CellContext`n1x24x3x5 -> 
         RGBColor[0, 1, 0], $CellContext`n125x3x4 -> 
         RGBColor[0, 1, 0], $CellContext`n15x2x34 -> 
         RGBColor[0, 1, 0], $CellContext`n12x345 -> 
         RGBColor[0, 1, 0], $CellContext`n1x234x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1345x2 -> 
         RGBColor[0, 1, 0], $CellContext`n135x2x4 -> 
         RGBColor[0, 1, 0], $CellContext`n13x2x45 -> 
         RGBColor[0, 1, 0], $CellContext`n14x2x3x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1235x4 -> RGBColor[0, 1, 0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.010098916887693297`], 
        ArrowBox[{{0., 1.}, {2.9999999999849365`, 0.}}, 0.09694960212210157], 
        ArrowBox[{{1.999999999989086, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000043144, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.000000000005173, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.999999999994202, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000047521, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.000000000008356, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.999999999998181, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000011141, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{1.00000000000108, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.9999999999787406, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000054456`, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-1.9999999999932356`, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000053092`, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000008015, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.000000000028422, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{6.000000000028422, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.000000000028422, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-5.0000000000056275`, 2.}, {0., 1.}}, 0.09694960212210157],
         ArrowBox[{{-5.0000000000056275`, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-5.0000000000056275`, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-1.0000000000067644`, 2.}, {0., 1.}}, 0.09694960212210157],
         ArrowBox[{{-1.0000000000067644`, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-1.0000000000067644`, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.000000000004377, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{2.000000000004377, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.000000000004377, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.000000000008299, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{-3.000000000008299, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.000000000008299, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-7.000000000008015, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{-7.000000000008015, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-7.000000000008015, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{9.000000000055252, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{9.000000000055252, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{9.000000000055252, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.0000000000073896`, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.0000000000073896`, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.0000000000073896`, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000010914, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000010914, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000010914, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{15.00000000005133, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{15.00000000005133, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{15.00000000005133, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000044281, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000044281, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000044281, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.1032064978498966`*^-12, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.1032064978498966`*^-12, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.1032064978498966`*^-12, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.9999999999945999, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.9999999999945999, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.9999999999945999, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{10.000000000044224`, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{10.000000000044224`, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{10.000000000044224`, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.9999999999953957`, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.9999999999953957`, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.9999999999953957`, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{13.000000000052694`, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{13.000000000052694`, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{13.000000000052694`, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-8.0000000000108, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-8.0000000000108, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-8.0000000000108, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000050932`, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000050932`, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000050932`, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000045418`, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000045418`, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000045418`, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.00000000002467, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.00000000002467, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.00000000002467, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-9.00000000000955, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-9.00000000000955, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-9.00000000000955, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-4.000000000002899, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-4.000000000002899, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-4.000000000002899, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{14.000000000050875`, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{14.000000000050875`, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{14.000000000050875`, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000015348, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000015348, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000015348, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000022794, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000022794, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000022794, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {6.000000000028422, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {2.000000000004377, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {-3.000000000008299, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {-2.0000000000073896`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {8.000000000044281, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {10.000000000044224`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {6.000000000028422, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {-7.000000000008015, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {9.000000000055252, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {14.000000000050875`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {4.000000000015348, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {7.000000000022794, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {-2.0000000000073896`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {2.1032064978498966`*^-12, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {0.9999999999945999, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {-9.00000000000955, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {-4.000000000002899, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {7.000000000022794, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {10.000000000044224`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {2.9999999999953957`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {13.000000000052694`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {11.000000000045418`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {5.00000000002467, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {7.000000000022794, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {-5.0000000000056275`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {2.000000000004377, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {-7.000000000008015, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {-6.000000000010914, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {2.1032064978498966`*^-12, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {2.9999999999953957`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {-5.0000000000056275`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {-3.000000000008299, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {9.000000000055252, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {12.000000000050932`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {5.00000000002467, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {-4.000000000002899, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {-6.000000000010914, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {8.000000000044281, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {0.9999999999945999, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {-8.0000000000108, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {5.00000000002467, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {4.000000000015348, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-1.0000000000067644`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-3.000000000008299, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-7.000000000008015, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-8.0000000000108, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {11.000000000045418`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-9.00000000000955, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {-1.0000000000067644`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {2.000000000004377, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {9.000000000055252, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {15.00000000005133, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {0.9999999999945999, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {13.000000000052694`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {15.00000000005133, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {8.000000000044281, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {2.1032064978498966`*^-12, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {12.000000000050932`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {11.000000000045418`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {14.000000000050875`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {4.3727600233632415`, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {5.372760023366482, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {0.289838800390271, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {7.372760023365004, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {-0.710161199606091, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {3.372760023364833, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {2.372760023366652, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {-3.0000000000096065`, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {6.372760023364265, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {11.000000000046157`, 3.}}, 
         0.09694960212210157]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 1, 0], DiskBox[{0., 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["2",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["28764", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x28764(Greater)== x28767(GreaterEqual) + \
29527 (Greater) (greater propagated)\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[28764, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x28764(Greater)== x28767(GreaterEqual) + \
29527 (Greater) (greater propagated)"], "Tooltip"]& ], 
          Offset[{2, 2}, {0.09694960212210157, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{2.9999999999849365, 0.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["0",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2,
                     5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["29524", 
                 RGBColor[
                  Rational[2, 3], 0, 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This graph contains Clique of size5\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 
                5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[29524, 
               RGBColor[
                Rational[2, 3], 0, 0]]], 
             "This graph contains Clique of size5"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.096949602107038, 0.09694960212210157}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{1.999999999989086, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["2",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["27246", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x27246(Greater)== x27255(Greater) + 29533 \
(GreaterEqual) (greater propagated)\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[27246, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x27246(Greater)== x27255(Greater) + 29533 \
(GreaterEqual) (greater propagated)"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.0969496021111875, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{7.000000000043144, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["26488", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[26488, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {7.096949602165246, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{6.000000000005173, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["2",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["22708", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x22708(Greater)== x22711(Greater) + 29527 \
(Greater) (greater propagated)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[22708, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x22708(Greater)== x22711(Greater) + 29527 \
(Greater) (greater propagated)"], "Tooltip"]& ], 
          Offset[{2, 2}, {6.096949602127275, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-2.999999999994202, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["21954", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x21954== x28515(Greater) + 36057 \
(GreaterEqual)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[21954, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x21954== x28515(Greater) + 36057 \
(GreaterEqual)"], "Tooltip"]& ], 
          Offset[{2, 2}, {-2.9030503978721005, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{8.000000000047521, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["20448", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[20448, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {8.096949602169623, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{5.000000000008356, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19696", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19696, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {5.096949602130458, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.999999999998181, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["2",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["9490", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x9490(Greater)== x9517(Greater) + 29551 \
(GreaterEqual) (greater propagated)\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[9490, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x9490(Greater)== x9517(Greater) + 29551 \
(GreaterEqual) (greater propagated)"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.0969496021202825, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-6.000000000011141, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["8784", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x8784== x28467(Greater) + 49203 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[8784, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x8784== x28467(Greater) + 49203 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-5.903050397889039, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{1.00000000000108, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["7374", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x7374== x27057(Greater) + 49197 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[7374, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x7374== x27057(Greater) + 49197 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {1.0969496021231815, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-0.9999999999787406, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6670", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x6670== x26353(Greater) + 49195 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6670, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x6670== x26353(Greater) + 49195 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-0.903050397856639, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{11.000000000054456, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["3160", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[3160, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {11.096949602176558, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-1.9999999999932356, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2460", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x2460== x22143(Greater) + 49197 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2460, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x2460== x22143(Greater) + 49197 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-1.9030503978711342, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{12.000000000053092, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["7",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["1062", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[1062, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {12.096949602175194, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{4.000000000008015, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["2",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["364", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x364(Greater)== x1093(Greater) + 30253 \
(GreaterEqual) (greater propagated)\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[364, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x364(Greater)== x1093(Greater) + 30253 \
(GreaterEqual) (greater propagated)"], "Tooltip"]& ], 
          Offset[{2, 2}, {4.096949602130117, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{6.000000000028422, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["15",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19692", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19692, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {6.096949602150524, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-5.0000000000056275, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["18",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6642", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x6642== x26325(Greater) + 48438 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6642, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x6642== x26325(Greater) + 48438 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-4.903050397883526, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-1.0000000000067644, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["17",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2430", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2430, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-0.9030503978846628, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.000000000004377, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["10",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["26487", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[26487, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {2.0969496021264784, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-3.000000000008299, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["11",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["21951", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[21951, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-2.9030503978861977, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-7.000000000008015, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["11",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["8757", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[8757, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-6.903050397885913, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{9.000000000055252, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["10",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["333", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[333, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {9.096949602177354, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-2.0000000000073896, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["17",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19686", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19686, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-1.9030503978852882, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-6.000000000010914, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["18",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6588", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x6588== x26271(Greater) + 46926 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6588, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x6588== x26271(Greater) + 46926 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-5.903050397888812, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{15.00000000005133, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["15",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["972", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[972, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {15.096949602173432, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{8.000000000044281, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["10",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["20439", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[20439, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {8.096949602166383, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.1032064978498966*^-12, 2.}, 0.09694960212210157]}, 
         InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["11",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["7293", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[7293, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {0.09694960212420478, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.9999999999945999, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["11",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["273", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[273, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {1.0969496021167013, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{10.000000000044224, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["15",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19684", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19684, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {10.096949602166326, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.9999999999953957, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["17",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6562", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6562, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.096949602117497, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{13.000000000052694, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["15",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["244", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[244, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {13.096949602174796, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-8.0000000000108, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["18",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2214", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x2214== x21897(Greater) + 42390 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2214, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x2214== x21897(Greater) + 42390 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-7.903050397888698, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{12.000000000050932, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["17",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["810", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[810, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {12.096949602173034, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{11.000000000045418, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["10",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2917", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2917, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {11.09694960216752, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{5.00000000002467, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["11",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["109", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[109, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {5.096949602146772, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-9.00000000000955, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["18",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2190", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x2190== x21873(Greater) + 41637 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2190, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x2190== x21873(Greater) + 41637 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-8.903050397887448, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-4.000000000002899, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["18",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["84", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x84== x19767(Greater) + 41637 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[84, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x84== x19767(Greater) + 41637 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-3.9030503978807976, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{14.000000000050875, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["15",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["738", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[738, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {14.096949602172977, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{4.000000000015348, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["17",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["36", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[36, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {4.09694960213745, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{7.000000000022794, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["10",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["13", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[13, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {7.096949602144896, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{4.3727600233632415, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["23",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19683", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19683, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {4.4697096254853435, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{5.372760023366482, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["23",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["9", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[9, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {5.4697096254885835, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.289838800390271, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["26",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["3", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[3, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {0.38678840251237256, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{7.372760023365004, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["23",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["1", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[1, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {7.469709625487106, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-0.710161199606091, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["26",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6561", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6561, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-0.6132115974839895, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{3.372760023364833, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["26",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["81", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[81, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.4697096254869346, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.372760023366652, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["26",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["27", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[27, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {2.4697096254887536, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-3.0000000000096065, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["26",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2187", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2187, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-2.903050397887505, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{6.372760023364265, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["23",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["243", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[243, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {6.469709625486367, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{11.000000000046157, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["23",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["729", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[729, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {11.096949602168259, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{3.840715577974777, 4.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["36",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["0", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[0, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.9376651800968783, 4.096949602122102}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AspectRatio->1,
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1117.7777777777783`, Automatic}]], "Output",
 CellChangeTimes->{{3.720897677839465*^9, 3.7208976935908194`*^9}, 
   3.7208977344826174`*^9, 3.7208977851498146`*^9, 3.7208978218882785`*^9, 
   3.720897876364879*^9, 3.720898024297272*^9, 3.720898261051751*^9, 
   3.720898344987789*^9, 3.720898405367107*^9, 3.7208984967822065`*^9, 
   3.7208998499498377`*^9, 3.7209284879802704`*^9, 3.7209532559039793`*^9, 
   3.720953572165723*^9, 3.7210558245857477`*^9, 3.721157169695305*^9, 
   3.7212075415022345`*^9, 
   3.7212284245869417`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsfQe8VdWZ75l7zzm30nvvaGxRY9SY2HvviiAdFRQQBRUbxYYUBalSBAQE
FVRQKSI2LCjGEuwloMFoSCxxYuIzM2/OO/+11rfW9+397X1PZpI3r+Q3c81l
31X/6/+1VU/tP2rwRcP6jxoysH/H46/sP2LwkIEjOx53+ZXFT+X/kslk+xR/
+nbM4PdCJkP/KRT/P/qfAfgPEvzzT//8U11/+rH5UH705k2bNg459tjTN61e
zf66bzT5PuZDrtHXX3/99sA99yzszGQ+Ht6lS6ft27fHCo1nGzl/ypQf1uTz
5o/bMpll1/bqVXe2/JY+Bx9c+Nqw3fx80Kd7d7QgmpDl3Nt2a+9t27Z9em37
9vhjpsz8t/zbWfXrn7B+/XqTIpojXsTZq1at+uviXI4XUdicyUyeNGpUiUXM
uHXo0MIW23ZfxK5M5rmBhx1WYhFIiiwus/nv+z12263mu+++ixSxV7QI+6E8
/8MPP7x/9m67mcxZW8T2UZ067fb++++XWASGGcPNi9g1qXnzQzdv3lxiEQdv
2bLl81tbteJFFJZnMhcsX768xCJOW7NmzZ/nV1eLIjZlMuOnjRlTYhGDFs+f
X1jl4KQiPCFLKgLjDx6IIoriACkqsQjUhlpFEd9lMq/32G+/EosQvMg5XhQH
GYMdKWLPhCK4dFERHw7s1q35rl27Sizig1O7dyfh/DsWAcmFBNdVhP1QDpUA
1WAy5/9TRaDBaDgvAmwFa/8LRXw1rXHjozdt2vT/WxFtd+7c+dGQrl3/7+3I
HraIvT/Y8bsr5t//5PZ+nbtkKqy8oojRU2ffO/zeNS932vm7b6KZWCndzYeK
/F//7d8PfuO9nZcXc6y4YuLKRwePX3722qe3bu/rS61AqSevXbdhw8Abl75z
0uCZj18y7r5BD254DTWwEneLVtHFfMjW/OX7vx790pu/vmrBqhdWDbv1gXLU
kSm/YfaKzcuuuHXpby7s0MnVVL1zbNu2fZc/tK7NF19+u/WcEfN+d0ivyTsP
73vnG2cMu3vlsNsevPS+x7ei36GOrtFKOznB+/ZPfxk3fdkzpq6s+W/u2d7X
LNrY//p7n7vwmoWbe46au+Ms38cchPLCB9c8OXvcrMfP3Pjiu+hnphz1Z3If
HzPwrpfOH7lg6agpD6MFwCxWI/vQ2XyoQUPvvfqOR1A5fjb1u+7eD46/eMa7
Jw+e/fYpl87ecVT/qctGTX7os2M8AHkYv2H3LF+79OopDyNPsTlrPzzuoulZ
05LyT47oN7WI23N1tcAiXzNg1cY3NvW97t63TxkyCwV8cmS/qTsP63Mnft9x
1IBp6weNWfbRKd13L/zgWVgBVp686YU3iq1dsu3US2ejFRiKT4/oe2emzDZj
18E9J99z3dTVGNlYv2Ptqrfb9p1/AK7zr5++5vXiSO4qFvL7YhEobNfPek76
6sDzb3/vxEtmIs0Hp+29P4yHa049NOf6GUvWLykC+cHxF8348LhB04vNXvrr
o/tP/cPBF0xCGVvPuWLexEmLNt51y93rUFcaMh3MhwYAsO/Dm96YPPGejXt+
9Okfzn7ihXdf7DFqwbc/Oee2XYf0nIyi/7LPmbegea+cc8X8p3uPXryl92FH
Fbb7pjWAeTjtqZfff/6CUfe8evbl8yyq/ac+U0z7+c97T/7Tvmff2n/Vxtch
WhPuWLxp2q1zN6DOyOB1iDaxvWXw/u98/DkQQdMyZXZAIUZgIqoCat/vfcbN
3xxw3u0fHzvoLnADkrn86gv7FF7zFqsR7OjWCw88aK8PP/nd+kE3Lv3s0D5T
Pj2inyHBZ4f2vqPYvXm/KcrYo0PGLwdlD3317U9R77Cla14BomhHrHXsQ9sg
5egphK75l3/8rty2GOMx46bZax+59Ob7/8dep9/85x+fdQvA/eKQXlPePO2y
ORCQdQMvGARnybW4BiBvHHz8CQNXPvEa6AehIa78znDngknzr79rTdsv/vCt
QyYPecdgXrbssa1oApqCJkXbyRrexuJM/QW2maz5Vos+T5y88MnxxZK2Hz1g
2udFnIB3EesJaMHTfUYvnnnTnLWvHXPOUHiK1PAi7AtvHDAAjV5y9ZSHaKiI
VW+ePnTOx8cMmn7+uufedlXlLnj82bfQ8DM2bXkXzUBzYo1kH1pZuEm/Qani
d1taPTT8ursf2Fz75+9/wJ/P2vjiO9NvuXv9n/c589Y/HHTBJPBz7cVj7nu6
z7X3bugxeCwCD9/69ZnM6FkTJqD1m3tdvXDdRWOXff6LC6d89dPzby9y+bYx
M5Y/c966zW+j3EzOwk6ifdKzr36IpuBvaE60vawDLS3sJ2z+5UfIaehlS6tP
rYeEoDRg0WbXl98Ct22nXjYbWELSoD2LPVi84tLrpsNk2A7UIiRCaLSgyA1A
/8bpw+ZAjyNbsYjZL5935XxwAlVDj7s+4BNqA2UO+tUHn6FVSBJtMutDczsI
ICDGDoWhFFtgAzAJQJCSMRJc/EuREg9DHQPg90+4eMZL54+aD4Afv3jcfdPG
T18FXecGox55eGgMDAf68Muzhs99++Qhs5D/hR6j7rlv1KSHUK6vI287hPoh
uVBsaBqaiKZG28861NR2CC1GSaRJbYENUSDQwb+Sfi8y7d3Fo+98eOdhfe+E
wUQjgSq0pO1TfYrKbysqQ/wZ2ueTI/tPvefaaWtOefqVD1AMijOSWPwdVIBv
4rpFaKOBaBwaid9DL5pFu9XEdotSk/a1BTbmzefUg/pCcgwp/g0+jZm5/JnX
zhw+983Ths5B25HvhX5HHA1dZWPfhrCi75y/x56Hbt22nVwPmCtYz+IwvIJi
UByKxbBCTvBvwBHAriDWoIgWX37zJ/yO5BHL1iTa10ZhCMmyAbEKq9EAFPUV
fhsqtea7UMDv0Pz4HQZt4qSFT5ZZl+mJATcsxW/QUq+cfXJPo6bLndda7Pqm
S449HtlRNPk4NmsV/BSUhlJROpLhd9QKdIFyxrauAuiTraFhVkxlo2ifGwZT
CXSNEFRaIUSLUYTJ54yDqdJ1Eg4s/e3uMTMeLTq/q9Bw9Dhju1Be5O+LL5/c
+5o/zaxXz/W6MbTktPFXX48Uo+c++Dz+FwIM04rf77lu2uqF105bbZteKKAe
goG6Bghcz0mPU2/RBXQlYnUbRnteP251UZTpfBn6nqnBrygSNVpX3bYAQMda
58zo/BumP3rV/FUvoCfLr5y06om+V9/9SZ9OnW3nKzCxMmLOwvvx5/uvuN1E
C0OWP/7qzKKFd0VU8w6jGlRnLLXjAWlGO04V6DBxlcAg4x3rL/tQzw49ZNhb
7yrzbS+0wEDgkqJIi2ccEFRJgkkAoTz83mvNM79CrIBePjvw2BML77v5vqKg
v9Vjr73OeuL5t/A32JoTiwYQeZCXehstGxIMKaB/w7xBRdpmV6BJAIvUn+ha
tOPsQ430CAAefrel5vFPGg4+4mWeKXbcsnzcAouqSRFTFHPL7RNn/HF+gwZo
A+ZNMX8K8lqRyZJYITMrnJvBSMXl+E6S6qS3EhCh5YAHTECHOM+jvWdwVIdS
vX9RHbAgdLkesA2pwPiAG/RnMX6usfg31Ijhj41k871XP/n600OOPBKzd68O
OeAATPqgKgcJYl4URdRyJZFlwZ9I/FC71fO2BdRg2/4KclUpCYUIdtgiCLAP
FtQs16wAtSo0xCPjoIDZxahTQ5AGNRkNatNURgnD4cPfHDrwQIDI8DkzZnX/
6OMdZHHsn7MkqNR1F+lwFa0pLvwvGsiGt5LUPBWJPqKMuP9TGUUoH4wncpP/
Ux0QQmUMoXIhzA41dBWeYwqBvCTgb2E2JE9gowobAlhd4lBCmETmwUhbIocq
yLulRgAFQsAahUwlBR0mnxs69BnfUWYUGIaU9XGz0RwRpMywuEaCM74y9w1/
N3EE/uW+kbvHvlWh38iHYQQSa4sxCXwM/E4ORabMODaGzTSFhegAVhm/g0po
A4DK2LC0XNDLAcfNBH5Eux1wFO/QEEUJE8WJAWdrNhab+2c1ycCJkXPf0BhU
xsEkw8E605x7XAAVZYAZIxY/sgXVGzAcYPQ7wMLfrp9z/2Z0EHkIEPIRk4ln
mgZsjOVmTUMXjATYrlbxeIubXa6aYrixD4xCfn6kViLGUUQVGFrj4brhp+Cy
DvqVC4G233JRh85YAucud/xs1zdk/b1Zc3UKuSxLpGE5eQX8mxAX11eK8mz9
itGLIsY+WG+BG1QGIIbamjf7TVjNslA5hRMpNJQ8seXlonJm1LUDkFtnb4PK
A7+gD6Lle3cupb0CaNdXHk+Sdo56oAwyC99/hP5736xeEnbGyykPWpCCSmqp
Rjkx1A4xCCkFaySMhJgfhQJzXrNSo/UorFgxrjB27AmF9eujqPJolL4Jy27R
8nElEYYRAQMcnNT/YGj9u45qPWkY+OAJYrlvPD5VyZY88HlBmoK1hjC7Fr08
/xN+8Cf01JXY67V1z331p+Z2Zditkk8ojB7t5c6l49pWHdx6YXD9nGpZMAgx
1/bfGYj/FmTbR4b1A4Ko1+gc1haKsVRz574JMWTiBEgYSXOCkE4saUWFoij8
RHRR1b6FN9744380aIh+vPwfBx0EEm4pHHww/n3+e2ufMSTMKoTTRLu+JBJF
y0xmfPzPMLO/20XnbHReIQKh8WzLpWbgsiocUPdNeMnlivp2EEadWWMGLISN
uAfNCdyxsGPHN4WGBr7X3j/iRKIS5BjfAGeUhiLcZlrTz300CFSKOBaxeSMG
nYXxe5mO4pAGQR6jMIqqy5VRdaPvu8FgFBbafstH3WsMOfKWTZm4YGOmMVrE
YxZCvbLw/ffvFXbfHT1ZVOjXj0aoZeGLL74otGyJ7/idRtO1Sjj4GjFYz33Y
7py86IQjA9CC+ZdQB01jZhomI8mnCS1qxrRkk2mIHDAbpvU2nYgu8Z08FRvp
NyALQviR4J9ReOQRNPyZwhFHUNaHrhu3+M3/+PGP8X1FoUcPEloRwJZHGypU
U4PAJx7pMzrymWiGmkXwu6A9+Rx3BEQzUFlFIZeHAfAhfwodhVly6YRVjva1
hgzPnMLgwWj0wQW7XaNh4ZtvfvtlR7Py/0Zh333BTtWoZZMQjbSmYdA7fm6g
XKo8SIH3Zr5jIP4p6E9a9cg0kvTnCAo1zYjmZwY0QmYVc8PEiSbbGK1t6FQF
fK/+6+QpaC20Xr/CokUkr1/8vkNXaMi0sRUaO5TeSConw/1sMJPSff4TA+vb
YIP4UlejgGEUL6H33TehxFIYh3Io6k/GleFlmLLPjo8/M3Lq9uM98D/PP3/Z
dRMf5K3SWCaCk6yigl0vxcRBeQCEL0UysCxwfwys9bFz44AaLbtQvcLhSPmm
tVn7JuYXYyzj4zGiMHXq6MKECbsX3nsP//b2OKewLIXXIuRsHOTJ9z4rZTY4
z39ksH0dhJg7zynIiWg7G3juJwyyoX0+KnN9E062xoAY3zSshSOcwjcxV5AN
jPdeSeOg3vlcAZtE4ZsNGF4Wu6/C0Ht/u0mgoTdCrmox1ZNL6rwu0CLCyCkC
HQNOGB33jSa6eMka3YR7qbWe9dK3ggmRnzFhMNnfrYXJEofIdWHlRQ2gCHhz
yek0ugkk3TcKvnTUUBtMAs+hKVOggV6aklw6ERlq/l2TYDL8lIBNpzvGf2DA
7ZLpyGNpmg6In+zLhWb7+YEUkIQ/oElYzgOXT6aWRkFh3dkQ+9kBl05YoSay
82QUHXak9IQfvIth97vQHO8HNwuy64HTxjFFcWmM81PALK+QphhwQrW7HLT+
E9UAfpo/pyhCbTibBpn0GiontVZY8f8dg+xzqQKJlg41vuzNy4t+06ilpdO+
icW8GGqCRok59HTaNyHjbp9KdB7A0Y3EV8zefc6w+61UhIZKzaMdiJMi4kvm
lGF3efnyr+o1xOAS+iGXJM86yUS8r5GWiZK3rExRS1/3twyonRJnEuvmYZj8
AjsjvDerrH0+2E+hh4gDEpHkqAmEUrDXahOKX2tpc1kH8wA9IBhT7+vuZMD9
RkG3RVBe0bYIrZ+P9jLOMP5XfIXJDBiU/lfhFap/9RM3zYOG53E6MwbShf0N
Q+OTIJe0Swh5GSBRbS52B+XDgHljpdEor+hmTZRCRyuSKaORUWhL900YYlab
DwJbBHXiA/OcVN6gkvcpPmHA7QiCi9Yb+9YiDKxHjg22nx9i33xgnkgoHV3h
2sdQEwotBQ1hhfOKIs0HdexDmRaSgkbNsHTeS2Aw2d+dc0fdIdPAUPNL+Cn9
ENYmhWvCoiWm46hpOYR1TeFafDwi39ymWhGe54Lgkv/qZ9J+zYD7SE/XUgJn
NFlKV0SEzrS0j0ddXuGNajYrBpywx/mgN70zxwjv6VaRVHKk9S2DEPjoPK8z
iYFlgftQoWWrZNS0QRR6OIWWwp1MRJKjJtSY+yZc5RS6iejc5RXhcMugxnh0
zljttRZDyv7+vq4CWwX971fwKxRqac3RnIKKZHkWkWSFB85uCpJRaIr8aXTT
qComg1rbbyI6d3SLGkkGlgXuPZtXWNzWoUc+Eq8IaHhbVBHq9c5mCt20vgk7
EUNNzHgwGvmZkYrQeh88um/CD2Bj5P2A1oHSPjpnPZJu7HsMsncstFGvLQU1
sRzIvnknjaEb5ZrGUyFeMdQEizWVVZGMrgjNtZa2lnqdfPi8xEQsO7/DsHs7
UN8D3CZU473lCgXMSkXfaHTTCKAJbgw4YThTyK3RTdOlIiZoI/V6VBVJd/dt
Btm2IMn8WAhDzS/WVyYPdpwyOt3EYr0rT7hhMdQ0NMQ6gybMLp1wbjR110by
Sp61iE1XMLwsdr8KA+vnPtoqMlmZRI+Ib5nSFdFsl04s5sWAE+5GZTKRNYBF
kK7Rt2345oN0Rkvp8f6KQeZWNKKTbG2l/ueoaWIjQl+NKCm6Smj4cPagKglT
HXttjIRAamPOeumD9Aqp8cTa8RsMuNdkOkK9XTJwcUB4R7UOiAX4yqA9vIGI
lRKXXb0Uob9ipQiN0jZ0lMfuDqfoVD/DxuL0S6n0DAvbS5C48tHGTHgNKewS
yrtSUYSxjgo2aBzV5DRRTUYMWPvAVh+7MxmS52J/ySDbKtUdLVC1lwhx1ITN
rgzD7mN3jWSa+UjEgKMWx1SjZcTgVCbrV6Gb2wet4GN3dvYgtrFyKwPulcAD
b2A7hPZFURP+YQojNK4Jk5eILkdNQ0iY36pkronYgaHrA2PXSxG7V0o0wqHg
Vxhk9vqP2MEfhpqfVWFt9rFIHX3zNqtK6Yf7JmKlGGoiznLfhKuncU1TYxpP
OwSJ8ghVBkBih5G3MOBeCrLgXduOCmpVyVpFBO6abLlvwgVmcuRD8yqPmjtC
IcJ6TeWncE0E7tq4dQjqiQfuDGC/D4ghZX9/IUgy31TUMVDVz/+7qsVMS0qz
RbhZFbriXYsqRZhjwAnKVCWDqdFNuCVa61kvvaqoDGDGjlm/wIBz+3WiW9o6
hSK95av6275pjIt/CyBxuIRDr2nQquR0Qoq1ge0YmO4j9qogsdKnfZ5h9ZzF
KrqBMgUrTWKFTWXH3DzJHAbCD9D6ESOZpgWFj8Po62famT70ETtrlZ+57xSI
wiP2SvmZHBKGl8XumcBH7tbaa1nkenpVEAVvWasVjZXCMxETubxiPSWGncDJ
fRNrNimM0zSg8AE6BzZ476xKaizh5z7DgHtaqj/DTHuFjlxPZ2Prl8fYcdNo
Oo1xSen8Ul1MToUVrU5WrIJxKTIu9jBb1GJBe1VorDyM/jRDbVOgGz+/0CXa
ARFgVodGeFdSa2wioSL6O8BVk5xDI54GjXB7qgPxvF3rEnDxoXqVhFA4uJsY
XE8GFeYPzHQNbfHr6SnWTENSG3bhYLhvwsLFUBNKLwV7rTYR9mm1dZHjZnpe
HdCQ82lPMsie0KF1qIn19BQOCWFJTMfRiOco9a/abxGh7xK0OY/JGY1ip4Ge
YJhsUESzWwDEW+VqRXOn6GExsDWKbtZoGYMmTjKdjEIzurzCFlcrPeoa6vAx
ebXU3OEg/AYGmdt5GjUDXUNbfD2uLcLRZG32MXlNMt0Eui6dcENjqAmF5r6J
eDRlLDVFKhYfu4Xx9TF5ddDcsfPx6xhwjweq8vm0brIaDpzQBTXJtNTopsmp
MH4xuRKGU5O1FLoJR47V5vW6vSBRhuUOOPW4/OMMuMdkOrQJ6bop4+Oaoxw2
l/GuBmYiuzQWGuBqk9kl/LkahXE1SRog0vruoQU+Mq8OTIodl3+MAbdGZ2b3
ZOCU6w1kcJ4iZMKp1HgRA05MBaQoLo1xIjhnrfITQd1D53lwXh1XX97BWMOw
W63owt0kSBw4MRfkuifcAM01cN9EnKjpwhhwQiwTodYZJ6yKJhuulyI4Z+pA
rg+vZpA9bKGNThgx1PyMcG2y/ImoNIVughSuPBFtxVATdojRyE+MaPKcoikE
uq6XIkZX7hLyXHuYAfdQ6LmX8d2TUOM9EpF5Cuu0Gw/EelIMK+FnJKKrYyoi
81qFz7sF/cUjc0YAeQj+IYaVNV5Z9JxjurtUnZxkglApXREkSyFonDIGOHco
XUziapROIZnQoNpw7h6G04flNUHPxVzdlQy4BxUR/lFAza+l14a2+EhNUzsp
dBOT+bVJFOSoaWiIhQVNhDVqsRZ4HvxIiiF5rEw25HH3Bxlq99u8UW83Apzx
YiMXYfDOC78yEZCIbq5VtEwMOGE7XA7hU6TQTQTotYHcfjZmjzDsEadAP8dz
PwNuuUxHMcYeQdaiwImqa5Vx1LiieRK1SdBw4LQ7TDT4NcYJv1wbdtZLH6O7
mz/Uw+zLGXD3hTr8xO6eyaiJKU/XN+H7p/RDrIe7vML/iqGmkVYrRejXWClC
t+wRiMIjeMaz2Mn1+xhcS6X6Iz5GEDOjUk/RWGxEvYOfwjOhyTWNH+ursBb1
ktkqrE/iWERasGfgrQ/ia6XGEqfVlzLgloQR9XNGe0l+c9SUW2xkEF9P4Vm9
ZIUkHIx6HjV3j4hwTjQGp4ylULah5L2kljGhO9MF0q1dwoBabAFFRlRHBnav
gF8UK6Fb3DfhSaQwTFi9REw5VhpLhAWul8wwETRo7HS9FHF7bQAkdlJ9MQNu
UWAs0DXjtHdAzS8zabol5ZvQ0in9EN5KDDXB55Qx0i4e0vgsAsC9gxx5h561
Xs7RLmKQ3ROEl3u3KaiJmJfpHB+x1wvt8+FSfUVLa6MfQ03DWRsjjWsiYme3
fHnXYu+gynnEXis1vDilfg/DbkEYdu8c7xMo6A1O5L4sDog22JowC6VeXxHm
GHDCwLhvYqYphW4a4UXkx3rpW8EGR55SX8Agm2ehjZ7NYOVFjZ2IR+snp9Po
piEpnIf6UdTEhKX7Jtw6Nh5+ArR+sjALx22fYC58xG7T6d7tPAbc3fF0KPvH
6YD42TZ2W5YfRA0kTcNrEhaAa5BMLRFdpmhBEb67dMIC7SM7TwaxXiBT7JT6
3Qy7OaE53sHdN8iuB04b7xTFpTFOzMLWV6QpBpxQ7S6HWLlJYZwGsBjOHweZ
9BqqvtRa4ZT6HAbZLKkCKVZ3qIlVdVZeKd80umnpREgRQ03QKDGHnk77Jsbc
ohYL3x3d1FPqsxh2MwODvd3dL9qBOCkifmT9MOzehrm8YmVXMyQxuLTaNAOh
kUwE7RppmSh5y8oUtfRzZzKgpkuc6XjPfmGY/Ko6I7w3q6x9PmJPoYfw/xOR
5KgJjZeCvVabUPxaS/eTdRiW1NcBYWBZ4O5S0N3ffhOr6prWb5AsLGL0G0TR
EKt1f+NfhYaP/VVMau0XdD2PzplZkM7sXQyXqbqEMmi8fWb23u9BaqAIhkao
BoqW1oQqdLRhMnk0Wgod6b4Jk1w/kMeHgvsHUfehufLMhPcupjLg7gwi7G3C
/mFgPXJssP0UEPvmQ/MGSYTS0RVOfgw1odpcDuH7MvHy9riBolLdNxHU7B9a
6oN0lk7udLyTQTbFQhudXWOo+cV11w8R6DRQOJnCNSGuiek4aloOYWdTuBYf
j8i3n9hvIkivHwQ3dl59CgNuUjwdRvInEjij01K6ImJApkf81VEur/BLNesV
A054nqxk79Yxwnu6NUwqOdL6nwQh8HF6g8Ck2DbHSQy4iaHnPsA6IBk1bRBF
nJ4iXsKxTESSoybUWENFZaXQTfg4mrD8JKgxHqczVsvz6hMZahPiKhCjeUDQ
/35lnT1H5KmVApJwD1w64Ucy4+djyoYeOHclo5jMTZE/oV/ZpaHerdN080/t
NxGnO7qp59UnMOBuC3V4i/vT0CMfk2tXtjYM9UYvOtWQ1EQpTkGOmtD/jEZ+
jkQT5obJOlf4AT8NlPZxOuuRdGhvY5DdYqGNzlOmoCZcH/bNu2sM3SjXNJ4K
8YqhJoTK5RCRbcNkdIULp7X0p1KvU5DeQGIiVotvYdjdHKjvAT4wVOP95oaB
Mv5bo+SuCLppBNAENwacMJwp5NbopulSER0cGIbTB+lsiKW7ezODbHyQZH5e
naHm19hdP4R9apjcN41uYoa/kaLhY6hpaIjVBk2YXTrh3Gjq7kDJK7KaDaS6
F/Np4xl2YwNbudd7kCKWjZIYEnEvU1goWu7SiRWnGHZCmaWMnoaxiNg1Bh8U
vvmInTFTOr3jGGpjLGpRp/cgaQI4ahq7NNkV/UhRV3FcDGqNkzDVsdcYJ2RS
G3PWSx+xN5RKTywaj2HA3SDTEeoHJwOnASJcyZSuiDludsG1txYx4OKCrJci
ordQSqOQw7uhB4cu80DeIaYeXr+BIXZ9aLbfLPMzCRfXRNroxRurwyo0ucbb
GFyCFxpb3TdhfRJ1ZsQ1+FngrQ/kWavk4fXrGWTXSt1HpvZnEiGOmjDgbBC9
o9lYIZmmjRIx4KgJ5yRlPIT1aZSsaYWW/lnQDz6Qd2+qqofXr2XAjQ488Nb2
kMC/KGpiDdH1TfgUKX0T9i8RXY5aXHAjtrhxMtdEIMHQ9eu3rpcikG8k0QiH
10czyK620EYPrzPU/BQLa3P0VnXRtxSuiX64dCJwiqEmgq6UMRJca5zMbNHS
Q4JEeYQaBUBih9evZsBdFSTZ+7k/V1BrnKxVRBSvyZb7JjwRJkc+Tm/sUXMX
aIsYX+t5CtdEFN9YGbdDgnriUTyrRh5ev4qhNjJIMt9E//NAVb8s4KoWtjKl
2SL2bBy64p2Mxoowx4ATlGmcDKYQvsZB0XsHxX0T7i/rpReORgHM2OH1kQy4
K2y66MmNX4QiveVr/Ld90xgnrGYEJA6X6J5mUzUYNCnWBvbngek+fGevOEjv
9kqG1QiLVfR4UApWmsSKWcjGCskcBsIP0PoRI5mmBUV0yejrp92ZPvThO2uV
nyr6RSAKD98jz5KLw+sjGHbDAx/5yZ9DAy+i2In9q00UjZXCMzEf6/KKxZUY
dsIXdN/EAk4K4zSMxYTRoYEN3jtrHNdY3s8dzoAbJtWfqfsw+00ss7Ox9XuW
myRJncY4joZYrYv9VdjOJsnqVPAsRbLFSFusYnE7UyDyyPowhtVlIS93cA/T
uucDzCaK5g1dbppEnohrUFIOjWQaICJAbxJI5m3YYQGNiKOpn+25jIF0aVBX
3pk9PLTFL6mnWC4NP22whTPhvglrFkNNKLgUMdRq0178ELUdJsfN9LyJggaD
yf4+WIfWoSaW1LVR1UTkb0wX/8ZRS/+rEP/IX81vhwcdziNxRqjYOZ7BDJ1L
FNE8IkDjbXETRV8zcnsNqhGqqUIFjaCxzsfpptNS6EOXV1jgJkqPDg91+Ei8
iaKvGUz294sstFHlf3hoi6/HtUV5lUVG4k2TCSXUjksnnM8YakK1aQotZSxF
JM5a6id+jgjj6yNx986MemT9IgbcwEBV7m4cIavhwAm93jSZlhrdNDCF8Wsa
BU4YzkT50+km3DdWm9fwR9pvIhh3wEWPojOwLHADAhW8g3ukMjiuLWIvskZB
DaFEamkUNKi5B0xESN8ktMC7cE0VujVNEv9I648MLfDBeORZIzEtO4Ch1i/Q
kkdRKcCJAWsaqOXj8RQJE1pQI0UMOBH9p2gtjW4iHteE5cjQeR6PN4nrLu9n
9GPY9ZWK0IRuR0mQOHBi+sd1T3gDmofgvilvCCnM5MAJmUxhVxz+iEnRZMP1
UsTjTBfI9eG+DLLeFtroHBFDzU8CN1M0mfYkWQrdxCShK08EWDHUNA0g5kI0
eW6aTFWBuOulCMsj70EJn7Y3A+7C0HMv40cnocZ7JILxFNaJSS6XTiwmxbAS
TkYiujqmIhhvpvD5KKm/iCiMAPK8+oUMq55BfjmmR0vVyUkmCJ/SFUGyFILG
KWOAc+8yiXlbTQxTSCY0qDacR4fh9JF406DnYn5uTwbcBUGEfd5jAmp+Lb1Z
aIsP2DS1k0I3sbTWLImCHDUNDbGWoIlws2T1KUK8Y6QYkrvKZEOe6LmAoXa+
zRtdz4sAZ1xYJjl+OqBZoJY3TO6b8ClSqCq0TAw40XmXQ3tkTQNYxOnNArn9
BMyxYdgjTkHsGkcGlgXuXCnj5KMcGwCJAieqbqaMo8YVzZPQeBEDLg5rxPSk
ME6E6tqws176UN2m08+rn8uAOyfU4V3d45JRE7Ocrm8ioE7ph5Awl1f4XzHU
NEMipL15EgWjpfh55WMDUXj43jR8jp1XP4fBdZZUf8THCGJmVJorGotpO695
U3gmGKJp/FhfhbVonsxWzfpoYytacFxQGz6CdzxTz6ufxYA7U6o/w9HjJb85
asKAs/b5CL65wrNENkQcjPDKpXsQTTgnmnJMGUsRwYeSj5daxsTtTBdIt/ZM
BtTp0nyQgT0+4BfFSth79014EikME4F8IqYcK+HLsJHxznHkxUjeAq2lgp2u
lyJobyYBocVxBpYF7rTAWI/uCYoG0HRLCpu0b1o/hLcSQ03wOWWMBMOapyPu
A8ATghx5h765RCN4t6cxyE4Jwst3L6egJlwLpnN8xN5ckVWNOdrox1DTcNbG
TeOaiNjdNzHfcEJQ5TxibyY1vDivfgrD7uQw7H6//IkBdO/MuqrFLEuL5MEW
joKm1FsowhwDTnh7bEj8tEaLJPh1xSe2NrFe+lawwZHe7ckMMpsx5pOw8qLG
TsSjLZLTaX2LC2RkxrFFFDUxW+m+CbeOjYdXmilICsftxGAufMRu0+nn1U9k
wB0fTwdETkoHxM+2tQiD6MP3Fgrd3Dfhk2kSFoBzL0aKSUyXQ/g4KVpQhO8t
FJ17ouw8GcTmgUyx8+rHM+yOC8z0Di6TXQ+cNt4piktjnJiFZS/eemmKASdc
lRbJYGqM0wAWw3mS7DmnQvy8+nEMsmPiKhC0dKiJhXRN1lK+xenG0RCBRAl/
1b8JkqWMqvhmsYoF7Y5k0UMBDCWL2NGBt97anhLtQJwKEXvK1JCXCJdXrCdp
5iMGl1abMAvsceEotUSorlGVCZC3p8xmS+/2aAbUkRJnOpR9Shg6v6TOaO6N
KWufj9NbJg+78PoTkeSoCT3nvol11BSSCXWvtfQUWYdhSQsdEAaWBe4IBd1T
7TexpM5UkTfYKQIkRj8lnTCNLaOoCbMa+2ucz/yvYlLrlKDreXTOzIJ0Zo9g
CB2myyoDyTvbrFN+21FLRatq1EohhRCv0NFWySKsEVQzySI0Z1T1oeCpQeh9
aN5CV+MMLAsc21bmbcKpoV6PXMvktgh3v2UyteIIaW93c9SEkktRhsIetwzo
+tDcfRNBzamhpT5IZ+nk5sZDGWR2V2TM+WCo+ZV11w/lyWjJyRSulfYtoMbx
E1ZYY1jiKES+ufBahOYtgrhyv5RBZOH6WTwdxuY0CZfRaa0UHdQyiL/3CjWS
ubzCgdKsV4xkWsnCmWM09yRzeYVzqGnQ0wL1fXTeMvAnNjv7MwbcwYGMPqw6
PRk1bRBFdJ5CRqH4EpHkqAnl5b6J2CGFbiI611p1WlBePDpvKXVVOKV+MEPt
wLjiw2ieHrS+X09vFQD2kwopmke4By6d8COZyfPmMsike2tbTOGmgCTcsFZB
w3u3TtPIZ9hvIjp3dFNPqR/IgGMn3L2dPSP0yEfirQIa3gK1Cnl9TJWCpJgy
TBwFjpqY8WA08jMjmjCnEF5Y/zMCpX103kqiERzanzLI3G0K0dnJFNSEw8O+
+dCcoRvlmsZTwZwYaqLnmspqlYyucNxYS71jeYbU6xSat5SYiDXinzDs9g8d
8ACfGarxfnOrQBn/rXVyVwTd3DdhajXBjQEnDKemX1PopulSER2w1RAfmrMh
lk7u/gyyfYMk8+UWhppfWXf9EJZPcwpS6CbW2lorGj6GmkZQse6nCXPieETU
3ZmSV2Q1W0p1TwAwvCx27OJDfnrnLEUsWye3SETsrZMZJ1ru0ol1phh2Qpml
jJ7GOGEqNAafFb75iJ2xVbq6P2aouWtdo+d4zpImgKOmsUuTXdGPFHUVx8Wg
1iYJ04gRSmGckEltzFkvfcTeSio9sVS8NwNuz0BL7vSenQycBohwJVO6oglZ
vDwOXFyQdYEXiiGU0jrk8G7o2QEaHr47xNRT6nsyxPaQGtB0+xwJlxnp1smj
JzRvCqwaQwRvY3AJXmhsTdEFwkFrHQbMuwbnBJ3hw3fWKnlKfQ8G2e5S95Gp
PUcixFETBpwNog/f2ygk07RRIgYcNeGctE7WjHGSRcJ31novNucE/eDDd5tO
P6W+OwOOPZPkd/+dG/gXRU2sHLq+CZ8ihWsiRk1El6OmsVg4zG0Urrl0wkdh
6Hqb5XopAnkmFf6udwaT/d2+2BbbX8pQ8xMrrM1+lbqNglAK10Q/XDoROMVQ
E0FXyhgJrrl0wo/UfJlzg0T5KL51AIQ/LcDAssB1DZLsz/ycp6DWJlmriCi+
jaLDUvoh4vQ2HrW29q8ixtd6nsI1EcW3Ucbt3KCeeBTPqpGn1Lsy1DoHSeZW
47zQeb8s4KoWtrJNssoS0zhtQle8k5FIVQ5cqSULNdZGUYHum5jRY730c7Kt
A5ixU+qdGXD2vfGYg3J+MmtK/Sa0eZvAam81EweCAyc6qllXDRBNNjRmnhdA
hyyYVrQJsiv93E4MtQ4WtejZoBTUNNkVgXwbhRQOA+F8af2IoabpQ2EnGJGj
1kYE8qxV3ic5X1KGNFlr+VmcV+/AsGsXmMkPpPUIDIliJ/avpmCiMU7MzLq8
Ykkghp1YdtD0XgrjNIzF1FGPwAbvp7XRdRcDywLXVipCU7fbOS+W2dnY+j3L
bZPlL844joZYrSvhr7piFTxrmyzFYqQtVt6FAN7Iz1SJnGlry7Bi1paf97lA
64APNd034QC1VaiVSKOIuxDgapecQ6ObRi0RtLcNdPN27YLQ0ojzGXtBkUFk
4YrMXhql2TO0xS+za9YspX3asAsHw30TFi6GmlB1LodYUU0hmQj7tNoukONm
3L+2Eo0wudaKQdZCh9ahJpbZtVHVhOW/nI6jpuXQvsWZHUoxv/UMeh29wmig
o22ChMXO9rRgOLEdr15cewWQvL+dImhCq2rUaqeQQqNqDKQ48XSCalZZ2MR2
So8cFWgjgkmn6XAGk/3dnS+IGoSeoV5fT7tQh3c+XR3C7rRLppZQQC6dsHcx
1ISS01RbylgKB5ch6aeFeoXx9XG6TaefYW/KgGscqMpdkF6yGg6c0PXaIKbQ
TQNThJXtosCJGTP1r55k7ptw5FgdXsO785kUoDNjr59cb8zgYpc1elf3QmVI
XFvErmSNeBouiYTSiGfQaG//KsL8tqEF3plrp5DMfROBbVul9RfKnht711aS
R0zVNmKoJdxzmwKcGLB2gVA+Rm+nyEY7RfdppIgBJ6Iel0N4y5pOY63yMbom
IheGzvMYvW1cY3k/owHDrr5Uf0bKekuQOHBiSqi9otA1D8F9E+5lIjM5cMI5
bpf8TYR3miHRZKN3yOtjdFaH9GTrM8jYC4x83oih5ieG2yv6K6XNmhoXE4ft
FfLEUNM0gJgf0eS5XTJVhTz3DoLhA/R2AZCYT1vLgGMPcvtpyj5JqPEeibC8
fTLDxMSXSycWmGJYCdeivaKrUrSqCMvbK3zuLfUXEYURQJ5cr2FYVQX55Xs+
+kjVyUkmCJ9IlAjJUggap4wBzk4cyLlcTQumkExoUG04+4Th9DE5m6SIebdV
DLjKIMJ+i1HfgJpfX28f2uIDNk3tpNBNOA/tkyjIUdPGQzgymgi3T1afIlju
K8WQonMmG/JsTyVDLW/zRt9diQBnfBkmOX5ioH2gljdM7FuUbhpVhZaJASc6
r9mdFLqJOLh9AN17Z/1CCyJOgX5yPc+Ay0oZpwHuFzofBU5U3V5posYVzZPQ
eBEDLg5rxPSkME6E6tqws176UL19YFJsb2SWAVce5M+7uv2TUROxneubCJ5T
+iEW1zsoRImhphkSrRShFdRS/Axzv0AUHrS3C59jJ9fLGVz/ItUfqbEIYmZU
EtsW0byJSEQYomn8WF+FteiQzFZNHWhjK1rQP4ytj9sdz9ST6//CgIucO2B3
g0UBE7abDboP2TsoFOuQrIuEb9HBA2bXd6RfounFlGEUYUkoeYBUMCZQZ2pA
erSZzP+U9oLOrgwI5I0iJAy8+yZchxRKCTOXiCRHSPhhjCre5HZQKJXSUkFH
10sRpbeXgNBmUItT5t8DMT2SAxVB11RICnO0b1rrhVMSw0pwN2VkBJs6pOPs
47yBQWZ8bN5BomHqsQhl/iolk1zXFKyE38AUig/HO4RWeXdHY4k20jGsNHS1
0dJ4JcLxDkFHeL9hYNDTPBxvL9U37Wm3UGV+CEPsQ9FBAWDvn7oKxcRJR0UB
abZf09MdFXGNwSUmhdhA+KC0YzLdNIUmdjCxXvqesyHxDqtFKPO9hTHqXLBS
olZLBJYdk9OJuZeOSSIXWV/rGMVKTDa6b8I/Y6PglWHHJNJGPLBBQfn70Nst
e3P3E3+3OGX+HP8rcLgoHQY/WdYxDJiPvjsq1HLfhMOqyVCAy67cyzlIl0O4
KCnaTUTfHRVdOkh2ngJGtlGAn/2yUGW+U7h3cWCDh0sb2xQYNHaJqdOOirzE
4BIy3jEZQo1dGqyC3xeFnvuYm6Xz0mkRyvyrrtAcVmL1W6st5VucWhwD4fOX
8NcIeVK+aWMpvrmLjKPxtSNU9OCqBSjzbRhYbycviTY7PuwRm9hRoZHLK5Z5
XDph5WMgabUJJd8xmUYiUNVoeXEYRG8Tmd31npNtb+YbiSm9EnlJGE6/0s1a
6lViSqs0KgiPPBE/jpXQX+6bWNRMIVRSS70Hc4msw3CjowSEnHKLU+ZrBUl7
Pbkxv9H+ClObgosY6ZR0wrx1imIlTGNKKXEW81LEXNMlQYfzoJmpey9UFprM
l7o0MpC8j8I65UO8Toq27KQMcQoVhCiF7nVOFleNlpqBFXEyI6gP0wZLXEy6
jnFFjfosTpnfB4C5lh+SDJfWCA1CjVNxaCLeeAwuoclSNJ6mGUWU7L4JP39w
aKmPl1k6Py1lTXlml8Uq6nwODi1AyQYv13rh0nVSME2hVmnfAlbabxEaJSIe
+eZGX8TGkV2ppMMsJpkv4n8F+kMCNN6p7Kwohk6Bt95902jk8gqfRzNCMRpp
JQv/i6kwTyOXVwSYmlobEsjtw+NOOlcsTpnPA8n8e46XJmOlDZgIj1064a1o
miwRP46V0Ebum/BpNQ3FWuXDY00IhgRtxMNjl10s2liQMp/F9RdquTRoHnSP
wyVmGDon0SNi21MgFFYvSFgX+1cxLcr64d1aRi1v+V1twhNj6bx+tW/ZyPDY
USu6MmhxyuwMOfzi4mUSK1NKZ8V8dA55faCToofFJADD3uvXGFZiooFRxk9I
aOKaokuF3bks0NeHx6xH3l+yfcjYgmKL1hGs+GgJz4R987ExwzTKqzguEQGK
YSX6q6mizsmYitiYtdT7gpdJfU1C1UliQp9tGzKfBHJ7MIdKaDhcgvBdFD2i
Uct9E0ZSE80YXELkNL2ZQi1NR4p14aFhEH1szAbW+6AWocz2IKF8742GVRdF
PXVO7pFGLTElnogzx0ojo7CzmrgmjkJEjQ2VHKIouZNU47R+ZaHKfBz4yM92
D1MEr0tyO0TI3CWZXaK9Lp1YjokhJpRUyphp7BLBqcbWYUEd+JCZsdC7oVYa
MrbLsRPdw6T641jFFY3eKiEHKWoojobBqmsSkhGTkqILRMisjfQwKQfM2Y5t
E7QZMh8E4vGdqsMlZThcYhDdN+HwpYiHWCROLI/DpcGglSJEP5TSJQyndxuH
B0B41Oxwip7jtgBl3pf6zIQZl4eqvZPQJXmkNP5oYGpsEBIRA0lwQGNmirQL
h6pLANjr4MtDS33UzFrlNb5FKPNuUHDcIU3BSphe1gLvunRVCKVpmcSec6yE
tHdJ1nhxQkVCZtZ6v9p0edAAPmS26WJnti1OmXfCmHs7OSJwze8lYbh4Leh6
JLyBFF4JvZSIKcdKTEgwUfL2tKvCK5dOeBcMU2+BXC9FGN1FomHKtAhl3gq8
4jAyrHxQw1rqF2m7Krik8Eq03qUToUwMKxEGpYyM4JVLJxxXzQsZEcbDx9Bd
AiB8n63FKbMtSKg/lX2FglXXZG0hYugU/LTWiyi5q8fKnhuXEbbW3xReiRi6
qzJa7mnmaAzNqvGnsi1ImTeDhHLNf0Ugo4SLd0VTQGKapGtQE346pauidkou
2ceUrGQfYyWWHJkdY33zkXOXABw/gW3Rybxu/0puBJmCK0NBhDRVKOyYNlKa
Rma3CXh7574JJyMGl+ieZhc1GDT2a9y7IrDaB89MR3of1LY385ryp5HJoGgC
qY2q4JXrtvCPtKbHgNKGQLgmXYOg+ZCHKTkfObNWeQfiSskSUkpddPJYnDKv
6sQbGegRRUxss0xBQqOWUE0ur5gzjyEmVLamwlKolYSsN3kjAwe8K9VVV0gW
p8xWRZONst/Q6Gh/RW3don2Lcyr6V79mVcJfdQwEk7oli6YYVYtLLFBm+sHP
slhAMi+HHPwI9Sit2X7mhQ2x90y6KeRJJIpGD1Nb9+Qcwq9KAU5Eod0CofzM
y6jQ0ohXGDvna9HJbAlqyB+cviroV7+c3C1JleitEr5CitgI9RfDStTmcog1
REYo7wN0C5j6iMt9E2ZwlGyV8cu6STTMN4tQZpH706bNmzYeO+TY01dvWp3k
yvdSkrqLm8WycwMlXcrj3yJdAyVdCyVdjZKurZIuH8Y8ugAt0pUlsxPp3vhJ
z0NunLhgbsaOYIUor/gjytJWh3JKndrBqiolXbhjUEM2PMOp4dk3WCQ+CdAh
EYJYRNtFSWpJk1lou9bo66+/fnvPgXsWMjszH3cZ3qXT9u3bM5G1HKPALkxJ
rz2e2SAlfSMFvCYp6espdqpFSvoqRae3TUmfU8TYolyppi/+hTzfrinFWsmt
5BKupWO7hbwqyqYUqx01rUxJr91RXC8lvfbqeMOU9O4IiZh8aZeS3h0bEdNU
nVLSLxSEHTll/pQf8mvyBeyBL0ZHy3pd24v2UEbnxXqnZEnppZq+Yehl5P1b
Pb09Nam9cKCnr0pUinr6rGKmLZMq1fTFv5A/2DWlWMdZTkYtnbaPozylWE1d
VqSkZxec+8ms2rpHU0ynpI1m/6AhIhcipKEdm4LukJJF0Da/5eA+Bxeww8n9
3wfd+3QH2xMOyPdNz9VIdtcQuHF6lvpBy3gnsll6lhpFRFqmZ6lQNG+79CxO
HSh7Nyu0LG0+/2KXmcPqll6suyuRJsQoWRnSZMopVVD1xgpnSxksqXkr0rNo
91bXpGdhzyF7h7lBehbtKEzr9CzW5sXus6hjsO6xpL7HGeRt27Z92v7a9gZT
h+y39WfVP2H9+vUmBbsT1k8y9Csxb4MAtl8WaVxiXqd8xbx3sxLzOkWsXfNf
Z958ohKvO6/zYtUN9Ql5By1a+oBR/l1LrIPNJp/w5DMvIm2mXEnXIahfPw1R
VmId2j01uRLzatfjV5WYt6ky5vVKzMuOFPq561LHPKdr8DYlZl8gJOrsVatW
/TW3OMeTFzKbM5NHTRrFmJh0iLTO7PUVoWpSYt4aRS81LzFvZbALPgRvVWLe
XKJN0fLmRd7iD0UNndKrW3XByEFGQ3ctsVlsXvaGiVPvRlqSJZHO2rK8mPor
/lD5WhbNzuRKbBa7st1PP1SVmFd7vb62xLwJp+ZKJYg1o7ENN6VyRErRjKG3
Di1gkkQk35V57rCB9tktNyshdv4MLDFvvSAGftti0xLzVivi16LEvE6EtPcI
6szryKPdgKHkzYu8xR/yADulV/fR7mfuZ1y4riU2i02UPnnSkB5IG0SIpXMi
JBZcij9UvpZFu0IoW2KztFvSK0vM6/guwsSaEvOyQ31+watZiXmrApR+zrll
iXml8OAz/kwJ8d/3d+uxW813333HDG1si+GgErMzM+KnI5qVmNf1UntKsM68
zjfTbmevM295UIzRmw+UvDnKK5ZCOyXX9VWzk9rt+/YHYmW7zjaxXRTbu5/+
Y6TNZJV01pfLi8Xd4g+Vr2VxwiM2HZSX2CztUYKKEvNqL3BXl5jXCY9Y/mz6
N9Eqtm+jeYnZ51v5WeCU+w8//PD+bmfvZhI6dLd3GtVpt/ffl1PnfEfzRSXm
rZbCY0anWYl5jQoTj4bWlcOZDbHO27rEvOXJJkfJm6W8tMWiU3I1n3YY2cFX
07nE5nQJ6T7qdmb3xHTukAxFIFRuTkmq3StWVmJz2KMWfq06X2Je7QHcyhLz
2rOdsbXvRiVmZ9e/+aMJTUvMK6UEM7uY4eXJdzWf1PzQzZstkrZJsTMSF5eY
vSpQ1wtK8xLzVij2v2WJeZ3ICG+/dYl5y5KtjJI3S3lJ1XYqsZrOJabrUmI6
JzJkWCl9Tklqe5MXhqX4k5ZFuwQ+V2LLtKdHK0rM684Eij0PDUvM666XjB54
alxidikpB2/ZsuXzVre24skLmeWZC5YvX25SuFaJk1eDS8xbqYhJixLz5sPI
+MX+ViXmzXpb1LbEHGWKPWmfmDeLvL2XLl1G20A7lVhN5xLTdSkxHTsMDk+Q
0ueUpE44hD0p/qRl0W79z5bYMrYs6HeaVJSYd0joFd/4Ur/E7JEba42v1qjE
vFI4TluzZs2fq+dXy+SbMuPHTBvDqoqd4hxSYvYKKR/8de068zotJXYMtS4x
Lws4Yq8mxPPmRV4oVGdCOqZXt+ii6y83Fq5zic0qNV2XEtOxk79XzJy7GGkz
OSWdjWFy3G5Q2Wp6NoHmdwFlS2wTm0Dzayn5EvO6o4dir1O9EvOyK7D5AewG
JWaXcjFo/uL5hcyqjEweloLJREUPg19WYvZ84Hb0Jd0687qBECvjbUrMW6YM
bLvEvHmRtxB2bXRMr+7NA3sda4xM5xKbVWq6LiWmc3IB//r+ASOuQ9rAc5bO
yQXfl05lq+kdVGIfWnmJbWJvmXl1lisx79Cgzvy+ttoS8zbSNXi9ErNLucCE
MSaOZfKdGeyOMilqgmnyK5bDSsybC72MrMLWnbc8ENvPirUtMa+2/61dYt4c
z+udjU7pdf2240k/5gek62xTqem6lJiOHYt++8DzzkDawHCWzvlb5CZSuVrS
cAFqeYmN0J4dy5aYd1hQuHwzX3WJ2dkrHPyWl9oSs0spgHBASGTy7zKv79dj
P5OiKtgifuPM8BKzZ4Mg+IN0bUrMq80btU3Mmxd5C2G1r0NilhzP4j2KTunN
+3W3U/fgvK6zG6Wm6/K3lffCEQNPTk3n+E+alsrNKUm1q3vLSmwOe83Jb5Uu
LzGvdlizqsS8kVd86Mrg6hKzSzEQE7sOIUxhYSrLpKiQLeUHH+vMyyZzvAy0
TcybF3lhxp0y11YZbJYcZdEuOE5q3qFbt203+r5zid3QVi3+K+n+3vWy6/Le
2P+Cg8wqSF5J54JrsaGwEFZBtCza+15lJTZLO2RbWWJeN58v7nuuKjHvPEFw
vouLkn/YbWC35rt27WIeS+yquisSs1eI7MUfcQC4XWK+HM/nl+A6JKbPUnpa
6uuY3qN5105ezm8uqbPnnf7O6f7e9bJN4V+0O2F3pCWSinQuAuCrmlS2mt7t
7xPLcyyPlsWxQWwuzJfYjeaSYHQfd0WJ2SWdP+h+qlm4SUzu/A5xt+LIxLx5
npf7dO0Ts3haUsTVMb1lpz2x+XUzwdIpOd0nnfp2vmbOsic4jersaUp5/6l0
/6B6f9/yyPap6SI3gKPcTEUibXNif3fxS2J6d+RXbOjLldj2lsG38VY/X2Le
ugmLzYDYFMjMSeyqy1GJ2XOUXbuDXSMs0mOrJ80iphB2Z9vR7ZYNu3E2v4Cx
zh6kEEekK7W8/9PrZdetghwfdjvFE1CkY7fF00weytaSjgxJ+c658hJb1Cpk
59c4Z0vM7hg73/Xr66+/xl5vqyDNfytE8uKPuEv6qsR8hnqDlq5cRzTtkJi0
SL1r2s0fdct8dk+lmm5Xy5Gtz3pswzNiKJR02tDWma7U8v4vqfekp17a9knH
C7okpnPjAczvvv7OBz/s1lunsh3ivNiWVrBH2dAOLQubKPELPGUlNl8SEpoV
GpYlz2N9COtE0Qvgr07MUv5Vk3HNp46ZtMCoy47J6f7YaEzTs9asfZIDrqWj
JvxN6Tr9ncv7f6zeQ159473ftb6gfWI6O745vsWLyibiivQ2gMtHr7SlPFqW
OsmX/arx1MYTx02eS6WNTu7kd7WTGxy9adOmukD7qvG0xv+wdCmD8M96S0h3
jTWvnkS3zn7ko64DulYoSdm7aVBLwxateqqYtJuWtE6elX9fPbHeuNvvsscH
r/1vAvP/t8H+76rXje8xz7+ybWe7CzvWVd6ABx574ctm57VNTFc3vbTq/0mv
/0fr/XuP7z/p9c96/7fRq+3OnTs/6jqka13V15mu439Tuk7/rPe/VN7fe3z/
qb3+We8/jePfBe6pjXutWLm6jvJyKG/E7AXLEbBj5t5MMLu1QoTQWCXZ3rlf
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
zluqrl7nN3hjOWXmc/hQZygK1CRvBchezLx84T0rT5hxSxKsScGpjWBUQGlG
cH921r89QHzAgwGDkmMjr0wNknHLmdeKpCi3Inp1FHSnvEbTQ6NyHKr1MpOu
VUJ7Eq3g6858HwJ/AROasfsSUFmHYvXh5EkPaPgF6QdLT7781stnyJlplezU
UhjcX68RPsXAD1xz7/fqlLQoeuQ+kwxbHakqm0lzIzugLmB37bvbn6hmnPdm
gBdEExxgS2m5v+Zk1FxJPapx4gBjSYb8ENi5qM9Vel3Kp2DvCxGyMGVnM5Dp
SIUaKOfBKofFr6eIgGdAR6rz2ihdsib2wU+/uWrTd6jAz5hnqtCxC4FKKfSF
Vy+6f/qcZZv1mpenOuVtgt9Y/M0mK6cgKP5q6ElzLt7I1OkqG8aV+10BfE0p
0Gdy98YAaT8Y/DaqvyImc8uRkL3DkJHfkHxqkzuDh4Ptsx30OWyIcCXCn/d3
hj48yyjII+irmoyqmEUJ4pHXMULniEYwYvOvYrzcw8BdLOLVqeOPVV1x1KrQ
AUp/OYv4mXahlxCiejUSQFy/+hFoMfh7lDs2WJ7E1AmiKent5dTSMagb3aOz
1PQ5daFV0QQ3gjUiV7a9IyIAkLBeHafF9/H3DYdMX3rf/mfehCKAXK1CaX8N
rTgG3lTVw66KlfVHUWDYA4SPJdFMf+VwpvNN4TeZuu/iM41FS+9uXVZ2I0R5
bRF9co+/MXVHJVtRA0tKZe1DKVYh9kFZLY1byBa5pRdboO5s5sLvkdYgHApO
rxIxqXCzV8GmrubvCfBu27LylmEQYeUHOmNllDHnpF6UX100ndakQKij3Jyz
HFw62Y5MxAiz3ufhMslcRUFOjUl8RptkKao4a/GYmr0DnSHSiXPEJU3oXHNl
Oas6okqT5wX1796yHhesKKWJm+zkMQ8xmQVrQRpowDLtee/W53WDI71PjG8c
FKysvkJufM6Os4QkEc2o+5RziEwJVpsuLrvjojzsrgIe+K2W/0esUfnVQ6qA
oOSdGcr1kfoodaEW9VIsM/xRy5btmAiRMHJ90BwMbCp4EKUxY9HTndmVE4/1
/qzo2J1SMSXY58EiI/Y5Bf3UUVD34OTstm26kiR1m9yVlYxL/kWxxjM2fvOc
xUtOvuzWYkv0snGkefWFt9nrrkTabIk43YHUR7kohdiqSsklQyNpwHAjKx9g
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
FEWmveqTzUAuxbmto1ZrmYx0O9TEhnzbURcsgxcCf55kCyObzkoz++OaBdNH
NUQR0KyZftl04zgWlYU6ughOUYoC8RVudsybiejAo0LG/s646bBvDNyMskgd
mI0rAmFXp8dN91iinzQ333g/7fQ3yl2w14m57pxc0W//rgypU4sOEi5L33Zq
TH8w1ahsJY8zmdOzL7xuw3HiTVLnFF3u3DudOBxVHS7e1VEcNl3lfB25LNdr
qDEdjiniMKZegQZHGfSTp0BBmtNsIueM6M6YBxz0/HW7X4htzGyOwQB9SrAj
rtZwc5KsbcxHuzIV/5hlbaetoqTjOqg2+nSk9+9WrhnL5I6io+MD2OkqglJn
AAY6mfcNSqKynh1k3tfkEIFH1IoFa2eh1IywbqBlDXYGI9iR2LVe0pxrqsmV
AUdSj2K6nh+p4IpzERvMF6w8IjpJzTwiY2EUWYSr8SZi4ZqqwRHm/i/AM4lM
lNMTgacwKkbpng7ldgzGF6VvRkrnYRk8zwxAjJjwzaUSAeD4YIrble+ZEyP6
7VuCkzJQ3lvXj6JIHl7KtHUDwW+7gzMjJhvSV5DPgfZemH4aE9UBBk0NsKKI
oKZbtzI1iSihBx5PMO4hhol/j7IPx5VTX/UmiGKdzprSIufQ0qFeII989ZQb
9MKPeAIipBsIZEyGCqyCzpu7AAQAIb+99Rj0eZM25ZSurQtaiiR8ILDR6Rgk
lHyVf5BeQVFa9PjOguCaqUYpfxFCyfyRmI/MGuaIcHaABFtq66j2FVJSDWRX
A3npsRSZM5wuuZkdapaipP/+YM8E8EO/JuVxLD5t1hpoxjv+8te/pzdqDI7I
ICOKCHdMo2rIyKaIMhMjmt2ezvAQIWXEpeyQMupiGXEajC9waGqmR0p3juXr
LrYSoR2Rf5kHYruyZKaFjy/DtN++NRg6UQHYZUWcZYjpoE+mLpkzSnsC7Bkp
kopEiCe/dMI8ZL/RmIzPTKtRRArQ+a2NgNfzijpGCBIsfI5+u0cvXvdElEgy
PtiQgQDXZbSYgTZQMOacaGWoNfC8c2av23DIuUv0+LvnRiGCqBOmHMOH9jvt
xlNuuHUL/zZQJpN0IH0S95B+T9OokiRQaq5hZHcgWaV9yGvKSE0f7e4MkE6t
KpWFkaowRv48+gRu3v/Mm/jAOytafhvQ2fWzH1ChSzPP0f6I/H8+dBtxSlTa
eDrkdHLqU4I927rPyQugQ0S3rHmeRFTPmHfLwxBTL+k9eqNqgC1iselc7O0h
hfoK1dDoch0jaKRApNlCg8FYhD02KkZ30BgR6Ua1GZESeaiDRveI6OsRNFLC
t0HjtkUQjDRaDonLk/z7QOCaHYXIQqSaZTQQnNlI3RH/Gz7TNA70fU8rM7nI
ndXzZmOzl88Gl/rLaNT1fcqCNVvgRYquvIkBSkZ8MlL7i7eoU0lTisJ+1E2P
6UcsX58qx8l4rBnTXEoZ3eyVjdGjHhf1NUT2Zdb1Eqz1IQtTHZ0aBjO+yuzV
7qsJy0d7HNKKZ36lkMvAQFEW1JUC1YDY68S+VahXJxQxwsOgJpacsKjWJare
SNxL8Bzikj139rIHMEbbYKpKt+ur5bv51Syg6TSIguGq2cVAwEwQ6dFQSp7F
YOiAbP8LGtKdPXf5Q0Hyb7fGyNiodpgT3erRjUL4ZxGmKGcy418ve755Q4Y6
w15EOBbBniuqHeMKdfAtsHdGsOgTgldFsBfxfQvsOWLnCSacbwtEiqwIi5SJ
I4QZcezN/cFIopxRoVZh6gf8Rm/XbQvcgNoTlrLaGtt05Y6fdjHLvugZZqqV
4rbxLgzqX2zHXEYekXHhNdz7IH0/6itE7ZrZqlJRiTKlI5VGbhh3KectbrLk
8CJ7tqJ+lXEFGZ2VO1/blltHLzKbzZBJReYLaTBHQQ12UQmZ6y9MFWsKMgbt
E8qa6b/xvpTyw+ieoIJ2zTvAwn/6gSd/iMFiACCrSY6nobKZGjaxM0zs5lZ6
LXqD0zkktqKHz5VqZ6Eaz25DEJJjHLB/6/yk6D4CzkR85ZRWZhBBjvBO6Y9p
2IV7thL4MbAt4qt0gLNLcMzle04dHB8ckkMctjl9WrDNBYojbBvy80yyt22B
VtuSCQWqDd0F5YLGLVHKWa9rzkSHjjgMDd0j76t4gSMaBzMDs6E+Xs+7buma
Yy5ecfPpV6wx538rR94wHDvEgnz4O9nnxrcyBg2HC11R6xqNi9cVjg62+vxn
HZva9wa7TM5yU+7onrFoXt69vpqXB3O54tLrN868fOE9nKSiTjG1suBg+/Z5
c9erOSVUrlge/HTpKZffanQP6Xxk3g/zUN14xpVrwWgxMRCOqHyLrDjQ7epl
I/jWSeWLDLpIpe0qGzSKeEH0fTX54Yp+33ee+5mcEgwaFeYJsase7el6kZvM
eQJEbJ3XvlX6cKfXZsukXy9mOGtXnDAjAbPWwtR8iDrEB79++kLdOycvXeXE
mnL1v0C6mjF21swFKWFgG0owN5AT30aUQOtALqK6iQL2kVfJg5xzYpC+Z0s7
IZCnwc4g59oQyG9deuPbyrGomlO6nDtFFLOBu4NxRLXZEWBSWwJmYSBWEEsI
ytMYqlP2MNz79j/jJnQkV8tAr3VMWYrj6zQPdwtvF2BwVD8mqWX4jWbaaAMB
3lCzUom7yOyk6MaTVXar1cr2lQEbpRGaG1B2Mbr2QTxtqqtUf6hho1KloPXs
Hkdf+96nn/+5BO5Q/gY4SHJekC6flJ497n/sB2iTpwgZubhkPjU7Jh6IGl64
7EJSB3Ii1Xy+AXlak9ciIlWQ0G6yQ2Yv3bxl31MWqPeMvXobv5lCao9vQw0U
OAOB8iPt7PUFsyYEtpXPV+kIZg6Yu/fAaYvUGOD6G5VMfP7iJw+drXEqqqkx
oYr0uiH/6o75hfTZ5vaZSX7iMdAuivVHaOc8+VGoL6IR/WZGu9OD/ZWvu8s+
QjsiPbXlmVKmaNSDEYHf2/NnQYH1KLl1pm9PMI5IYWkGn5GPjbkXSAcz9wpN
w6LYIvZYRXwPlSup3Gzeyoef/8wRc2ZetvAe/FYQz2kCctpNEKZ2nH3Y4Iiz
ZPR6xmcTDR16y9nBtFT7pRinqY3NYLpdwQ5FKThZCvqdfdUqDZec61rsPCyX
dR1q5Zxxzbew63yHAhX4DPafSVTx5WUItKR8Ts5WhTeof+jTrAwkluJ3eLqZ
WpQTZlHgyGGVV2jAmSCtnJWN/k+aia3YJ/l++OPiU2atAR8C+87E1arrrf+n
1hy2xIPBuZetibzzbgEE/jQqgM477Nmr2W2BQZzNFNVrk9PPztVQwZBOmS5J
6kVZ13VVb3Bk1L6m47XjV2LXYNbyPacrRvoeI2CSr8ixHuFexbme7vMpRY6M
VTDKI3xnAO3kA7bT08r+adMXonxYSvOtMpGadUvjmqGB8uQsIJKnMM5ldraK
soklwb9hOM9/+vA5F1696H6k0QIgTBIFsOr6Fp2+JHYGzqcmmw/K1K412nj0
5OBeI4Jai5sSz4RdXnIa64tFgYSuefNSZVnYtu5mxyN3SX6C8Hi8ys6orNxW
cerlhejlY8QxvhLUzZjXx3qa3ocWEYmazUiyJJB708FnL3rXMy++rL/1jA8V
wlN5QqUDNnnumr6CQ6vesXyOrbYpKvBT/mxWHRkiqOOGlmeqlhFJvnOyRxRK
ItIcKK5TBJXK9ocfP+Qa9Q9yEjyXsneMN1Er1AgBjfH6deVasNumVRxUUcQ2
B7Bc3BD/KQq+yt8k+s8d8exgAr0KIyNzJoK/ZjDZKQWKzM1F8Gc61LvyZ0F0
ddQCu35DkfOGRNWUBYlR6L2h2QRK9BAlwuahD7mbqlX6lqsoaz3u8pNmpuY9
4txRPMKqffyRp3+Uwx22BTsG91OjYCQeqtkqWsJMqqeF8ikxxWqFI3oDmX5t
bau1G10i4uuqvUY6YknVUA/Btr/53R/wf5U1V6rVHQjV1IJNVXWb95KUVL+q
3Vr6W+WKSnsUdSQUjQ+TQyCWb1NbJ/ldQKUyULst8e+fv/fxF9VOvOPIC5Yh
UToDZ7O+T2oPGiV5WAVgNPeRYHcpY8ES2UsqYNSJcIr9a37HYJ3p9+B+py3U
aBve68okRShrHURXpGKl75iH8ppgYLR5dYnDaKSjCXhNb7cCnaaxyIWGxZ0Y
3FuCdaflf4p4e50GHWFdxT3KWOcYACusSwL67vxZkA3VyyVMaipjzaKU3p4i
HVWv6oY623764QOvQooescT4Wz0rT8NcMa7eJ6aM0WAh/s1+L/kP+He0ozty
2Z1P4t/1/EjI3Kl0go2aefLSJw695sJvLb6PTV93y1Rc2mmazeB7A2X1zN/R
KoQPEQnohCLXpg62ih4nd88H25N58kvHz3vr8z96RXOMrYI/am0yNZBzMrZN
cktpXARrVXq0vjHqXJ13tZ8VRtfPt1VUAq4oNtyR33PIFvNfevJlt8Kxrx6F
lM1MiammD1M7EUhmRLrAbJEWcCCCK0PuKIgQpQ5GzKGTy9jsBpcKOU3f++cP
HXAl1gjXMeYKKdUuYeYvIKlWbwtjx/8W714VXG+US1uXTUaaXd1sQrcxx3V7
ncC0/9MVmhhAxUEO8BxiRDlOEeARk08NeI5ieAzAc1nxAnispHGiQ5R7EiXc
NAv6M88Cyt6wnRGpaJaUAT6OTKlQUzNEjg0ZPAT9vNlLH8DnqBdBZxFMKEOf
s7W5ChhObSRdE1FfnVHrPD1Rv1fJ4ePf2j0W1brlbW7wLGx4VMGF37/92Zf+
BWSQoFckuiwHc0Sea+JNDKS+YXtHmKN+QFVZv4f33nJwTDPr8qcgFTwQrslj
gjzG5n633/8MTF/lv6nXb3xwT0oRJOQES3bbURcsv+iqm++jQ2GOFukuUXtc
oznQ9WbOLCqOr33nzkbPIxpcf+i5Szgxb58NDz+nmTPoGuZI1ogQTk+Dabbk
74yAzU7PbsEFV1F4clKBA7Zs5TZYkG2DXjN6bCaskuLlVIkDHaS5sN2EYFkj
VCQ3mdmTdI0Yk3DVyyEJ9nvKb82ZL8urwu94YyJnRZSbLT1s2EdiWWqtotFE
MQEJ4fMOKoyAfAjTsZ2N0oflJtdVxvIh5QIhOvNU7VSGhzZMtx5z8QpLPWgV
zYOMuyr+NCqKJwvjrDWiMNAnG/pEpQ4Cbkah9KdR7d77sJjZvnnltxgx+lna
oo+BcBH1tLvbRlF7BtTFjk8a6yiH3JmVUVMtqQljCa2zM4NMjwFmJlh5/KW3
4Pdsx+tvxgeYRLF0JM0gu6au03UX1rgyjLokP9ATI2vF8zZMCaaVfzvEWMLe
OrDW6MWPmIuGLbrHEIsK7kp2XcUzTZHUmr03quWO4I7v3BruWO02fW9ScDgF
7k4NZGxi8PUI7qgytYY7xww40S9Nwov3dryBjWHDmb2DneEuYBhrMN1u3Xoh
6ibpJDDPoalzABc93gG7F7SveCYRqwWRowFdutqHoDEvpSuZWs4GZBNPPufb
yx+8YdpVt4WjzRjS5zSJVlE00ipEWQzDRTgUoyqWJ6/YSBtxRW4dg8xO7zIs
rAuNtrK7XjctarlEfRtqzkIXDioeqAgFm2XXavqtoAubj0D3egjESGw9q8RF
yqkZGsUx0CKFt/1nvW9UeikOWDGQ9LG6otNSV1kYEq5yLJMaK4sbZKWGrVEd
m9aUYMujeor82Th176FYBpf3ddNnrzt6ybonLr7ypvssNNTybcMNbsf7w19y
8YjGJ+JfC2u2IzRkQbcZvbZssurRtuqR8neAQ0NnKwh6OXMtQsPuYNhV37z0
+ggN35dvL7cMraJLO3s46zKjQowqi8SKpgBorAPRdUsVENWwm+pe0avxhJtu
2zo6t6AZRS4584EkWkcjEthUEi+tXdPHKAxErMcZQUbl7rjs/KHgBhMzSrFS
9yQiZc0SMgjXguut0yo5rvvdsflZrUdmdcTFqiJ/3raBxFOVr8WvSllYBIBS
XKWu1ape3mXhkLPQrqKmPx4oDa6ZCZzfS7I3sV1MIyB2vp4kHYXaK5R7avdz
qdgQC1hzpABkGFtnDotRfATkNOEMBN3h4SLtZkSSelIHSoJKshF19MF5ee25
c+4EZUH7gn4ACKioywurK1FRk9QJyAbsOwW3IfW2tQPZEwwxl970KOTp/zMq
9ihcKYREKqCA3illsCbpk4LbJQK9rs5rzAR9+luXwPf+fJDZ6YrhYX3NUg7a
r7MN2F3ATiNnlgAQNZ3vCg6p9JDTzw5evem7yNCHpWr8U9Iamy9uveBMYyHL
TENz2A+q+Ga6fXYN1wl8+poMFb2svXDVZUTun0+KpXGzk9s0iry3A6q3sqah
PaRQFKxg2htsXRR/pcC8ua6GAgQoIesI2AY9Siu8SvTEeWVaXuOQTerRjfyY
kEwWTVIQR0P12AaMttfDiF42+q4oRzXiIOktGKn+MvL2ukA5cQlboSIlYDKD
vuJg1IkxS27D2VAt6QCcEX5I3dgAMLQvXHv0RSsWnHX17Zp3rLKFWrQUFOoM
XI4sescAH6JKjIilQIBLD5ACl7QeV+9SOrMCJU5V29+hltuWSLMTzs9aXYgQ
y1HjEWJZ6t0H8h6pZKTTcsn8jTgxWAXhN48qL9VZxUX8+J7QE7MKxY7ayQUB
0PPyuulz1i067Yo1qkuKKsgNUPHg46TYQ5QEjUVo7as4w3QFOCNEK71YWm1s
UhGq++Wkd1wgD4JFOp/jFt3+uHpBKl28qbiv9w+egRZxN0y7+jaMjfw6pjNH
xs6U4LBJC4MwbylCIGo8bAlGomnUyYb6niGPPKfPX/VIqUjpdyghG4x/1nSh
NHrZK7zx0PaRP3rpuiew8BPLGrIWyl4eTcDTR6pvwWHjBL+A6b4QdwsvjOFr
1G9CmhvzHuNcC1cvHoHmqOjmhTjv2qMuXIEh6eyRwJ7chgVhLFntTQG4bV/Q
xO7GYf8ZpwlHCKNqFVyOBWF6tCpTP45UIw8yTnYo/8N8kfkRTk356KOF41je
gF0xJtxJHl/SXARfVH3HZ+0TcDuWtWiV/ZzHrW+rS+XV48Mmvkmv3Bv4zcoT
Z6xCw8iVJ8y4JVlYQm6kSgH+f/XF8+5KpryIuUbXtMSGqkM1YopX5UL8Anu6
Y+nAlrcgewpvsvyC8QGIjy8jbmPgnVC/zbkp+hsX9uH03H7kBcuQOEzew15n
c7dKDKDKKST06nbcDx0xI6/awCgGkZYn09fjlL8+jFfjWCw5ZdatCmF8sjXp
RtUJmkpa0SWnXLb6+va/4ZVZnFzbAXvzYAER7o+NunPzkgvQsBWtV6vNdEIA
8vm9PZxniqOYxS8RElx85c33PvWl4+c98/mj50IF2evuLc/PluZJEW/4Gz0Y
pPM1NcB1Ig2zAySQpICC0eMaSScg1wSkOADY55NETw6e+4189E8ux9z0sUmB
nMgC1Idysj/e6en0cxvxB/MsgJLtc7YRC4TFIaKvpLqgj6JmteC3VikupnHd
2l2OONwwj37l5AXf+eJx8w5bcddTaRbyEzwKB6StEi5HT0Txj2DCajrgzT1l
gJpukDg4fm2U2Gn7jlm87rGEnlOK0gE3NuQbA+ucFZJMVZCiHbv49sfxaBk7
8rhQNbzk1MtXbzh0+pIkICMFaxTaTAGILv8EHD2dju34ssC6uExWTP7LlNwx
75zZd8A0xCf4tz3vffSFutxa9HS4Sb/7+WOuJYOrh610/H+kgJK2izto9aan
oU3iM+EtZt8+XoRSPgwuans92c8xHQXRwrBCCC0895kj5vx494OuWnrKzNWb
Djrr5gSFf+UYmp68bSD/473ug//jvXSlo6FxGp48Em5jVIfSzekf6U+gM28m
df4Mr/r2+XMTrYeuhCPRjo7fh/LoP3f/4y9+r71dqIS3cresyT+2z0nXK8hy
sjn2YP7Z19yRVClRjb5wz9Yf/Mv7vz5r+YkzVuPxE4oeglO48eBzFuPpco/j
Y83/f/MPf/oLFUOmm2bi8XsPnHbzN1dt+o6+LWc/XbISUVXK03LxKJlz+xyt
BKdc0hfl5/j7Sx879BowNeLxxKAFgQIsYA6Tgw2SN0FqZ1947YZ0P0bnK8+/
oVmHALYVbb0m2Wty4eB1SH65+pL5d9125AXLXcBufHn3K+/b7/Ivb3z4Od1Z
GLSwDog204J+SCJAsxjOU9KA+a3HXLJy8/5n3JyeX+Vh0OoklzO2ntUPfO/U
G1Zv+ecP7n/Ff/zDly8BAyP3DxqzKXqEThPKJYH3o2hY1xHvevZzR83lal7M
77G9T7z+w+h1HF1dX3cHJ7invUI/SbFqyWb0hODPHIdAdXDSZx8qw2xf7Ncu
P/Gy1YpzGE57mPMxfNKv91n/4PfRDJckKAnb0pMuW/3L93z1si/es/UF+Spy
KH/39n0ufcsPfvKKbiA25/xrFt//j589ci50OxSE6chA5gHaxPrRK9raLe5/
0sGdli+f7b712R//9h1fmcGA1P7Og//95s9fsEcbGZgRCrRp8CyF6y/fw5nA
a1kW3LmQ7+298ZHn2++9FM04dJrY41PaMvaff/fFi2ZryFK+/7MPH3TV6TrN
SXoOLl+NDeSp4xltJFy/tY05EAD56gVXL77v5Q/sfyUHwVxklKb5448efDXx
FvWcPXdFezm+cMG/ttENChyJU6cO2h3hfVKRZpRCcWIYTBHzZcrzEHVqb/hy
/q17nkj9SWX0ZpdFm0TgNfOyG1Ntmz7W0flMKldIJfXpsgNoPfLVUxfi3yeU
60IB/M7DzluKhAF+zOVt82Tl8TNu0X3a566HnnvhU4fNbiPx9SgZJl0agH33
QWcvwmLKdaF8sxwrU2ejMeUJosBiXClsK0zAgCbVS06+/FZFowgO8CwwKMyY
deM9qqJBFHDV/OCTh825++CzF8nPERCGep/WNuqEN7k8sv24ZBeFB0J0HVUi
Fp8661ZwEyooZ03JUsIxY1x6+6+975lH9z15QSo5lNE/077FoS3yVmOVLrvs
hrvTsEQ/PXz5hqfad8hqVaRlong8hBDefyxMJQQsGPfvf8ZN1We9SBX5xXu+
dvmv37XvzGf3OGbuvnc+mPal0OhRu2YLx8swo+zz9YdNX2oWq6wcyryhqPAh
wUtA1pFIZiOp388dksCN7BPiy4Bj0n1VwJN9ObnMqTopqYJ+TVuTQHacORJF
JeWSOc2iU25UhUPGp8o5lZ4NE/ipvY6fN2/6nHW0ESnTBQYEtBglylSfCJ5R
dz7mfpiqjGPtZLowW+wxoijhEXAhQQshJ0JwIaR+HhAF3Fv4N9H81dQCCXr7
SXff2VaKwX85pfwKN6GGhCP69cmd9un1wSnLD2iyF0RHyxVa4tDj04ZH7771
mZ+ozr3Xpi3Pt7d1RYny9oiGukjnSLqfRlorSy15HrHhGISp13LWFca/ueru
72iEy0rWxkhQc82CxTUEiMKzbj/iwmU/+tgh34IOhZR50h09sW/UCjMi+5eN
Sl5QyvsTTwOE465DpieVXy84dLUHY09ahugy8+fUQQJdz1b0IKvMHHYmBsS+
bexndFTtjpajmsqyzp2zDuYZOlCnAEw+MgPqOtKkcHW26P2h75QaKKdQt4rn
cbjAPN6+rn1Hrj3qohU4qHiDGP64geFzxAvNDKfyhFGdeJvlVlZRwprKcVd7
yAXZhwu8aB2Yuc62DfCwMsbxLEiUxqGlIB3/PPe8OXe2rdulMCmxLZhJumJF
6DleYQZ3xClSqiwzOHFV4+s6nu4BFhm+3jVVRGNHkheuIKCnHJ/yme0qsoxf
JntifNkLmHS4K43lMGq7miYxpZxr9Vfo8PH3hGh5GY3uiVUJLuuKMrImlKPI
gY98ZvrxdGgMeNpn73/ixU0Hn7346fZ1CQuu/aYt6e3jymMNRiMkGBfgsGyu
RiFctptAMf4OnYojHsK+tzFtIlmeluz0tQwHJ5Zb1wpwIpoKaXXn2N4IEqjr
d23vBoiQ4orTrl3xkHqkrAwwT7YukaKkfNfOtgYk57KKKPMk20Jr4RHxhNIK
M8fCsxIZlYP7uB5sXQ1qc6dxMWs5KwHBuixLZsWuJfOgS8hUE+HwFgs8U7Ng
g2VRB3lWWoSPRc4T7NcJIqQBX2mixxaUgmc2SU+WrN66G61Cx0gnYeTyZlcg
+NoAO8aXDWcaSl0LbTckqR3/j7L3gLazus5FNU7Z+/Rz1I4qiI4lOwnXN3Fc
4hb3ghsYMBhMMxhTTC+mmmKwTZcookggIVFEFwJM72CwMcVgsBMIMbm2303I
y33JyMi97439zlxrzrm+ufa3t+RxBzfWPnv//ypzfXOuWb4ZWxD0WXqomdIs
obinQLR4hKfUYDJp1JKTNRJFL+vna57/Fuom5T+D87zsA7WqsZRgC3bnpR5C
XwgCe11UxZgpJuLZDsnBmksjb7PKL9lBufnJZO7f58RrNxxw6hqBz2L4dWwZ
69GYUaIPNBsIA52YprFdWfVd7n7s5SSayuRnMQwJi8nSwgXcFWIEGlIGFD+D
6FhM7OE844Gaa1b5ntelfKTspsxg53sf/5UvRqvkLg2WY91WzAT1n16HA+jD
ivDgeFQdVxrW2+S0i9c8LPi39633Py+PUTVmP6lbZaesS80wryo0n8Xy/dBe
dqgdLTDgP1jgEOucQi0U88zr5QNzpmQxetLm9GIuhLFSWErHCZff+Dguv90S
7FF61WEcqSFeytpRTjo4QcK0g9M2BJxALzMKRp+vXuEscUOemyhG04N6kaXE
fh5EGrLDbJkLwDZMbmR5xPVoBwd4hGrW9mBA6pKFinUFRRmZ3YPlc23xGpR9
tWahOEpFinS670ew8MlmuRi1tcNFkN9Lla4YreJFl3zX0L5rpDOABVK2EaKW
NHG7bnkYcs2ycuoz28kirwpk8krxcNjUwW3n5s43ApAFJTSLfB26iDqYMeZH
6MdsFBqUPlvjucgk6Uk4LJtdsYLWKylTSp25VFlzrIdUOBdK0mqmkejeE5bf
9Lg84isPPJVz+qC1tAxX7n8ViU6D5V4mPEnWZ69HrAB6MBdWVkJr62vSIEN3
LfwI1Uw9BLYnCWznO8FgzWFgh0jS+CuOo2Gsodx9/SMvIcOaLaBj+iSBvJLL
PtxJ3OtGV/6OrQnQjRG4ZP3/NBv/Sw88/dqTux519ZSRsep9L732dj+BIk1K
teWT6Yro6UXcxmsbYidDDwVjfQwoPFk2zD2hQDeOFwOV5ToN06y5vjj2dDwY
0bIahTWG2DHPcjdmJ6bWzkbkcMyVNz8hDO/SRgnbdkCRoVsmrLkq6wCq5b2s
VWHIddumIJyM2MBAGUftVhGyqPW+G+w1hbnDy588yX020QcjZSReYcI4uoAt
WUaY9qELzOFN0k81az4EvSjbqpJY1+IutmQnZrbqeAxYYZ+M77OPPfcbgxQ5
kbLqs8uQ7KS7vFRc4jbs0BQ1Jyi2tXBVauGaRS9kcAKNsOcWsxmzkvEZRImo
IWHDNVDRRbejKJrTbFY7puj/TRYfgblSiTTYSe7TX6G6zH0lrEHmKEEN1pM1
z6pZFx1ZlC2pA4BHV7PNolLNPvZ2rOqoszQk053haA3XMwq8OXM6grSTZLGi
Y9YnIMxWN6SucYLOWg4/6iKvQTAUNUE42SZW5aIPms9fQmFyYRXDTyz/0JKr
S6vAQFk0SKbEIFEPLKE2ckg0YVlS9rYQhMq6MrNvt4CHhJozMnqAOReJFzgB
byjgBJKiGg/xnuvD0ymH1LeeAj7dCpf8fsdaL4yQrdE5BPTRc2TRJitfDwWT
4KINxHeoh1TKzzrvWuGAWBcwPBMUtXVpZdYLq2sHejJLT5ffQLmWJynMJecJ
cuEqmo4RNBLRUracJFlNSYQ1sgKdJBrQfkFi4AgNrfwmCawebnPOdVCpeK/S
pLYkMDlCJq/KBa3huprJwMjUn7mksigAiseCJvlDPusDmEDGvKGsTzrjCZ9D
NlpbV1uY1WpPkusNoIoZm6Be6rKTsJaszQFz9ChCevs1VCFAdCDDlPX/6LMv
vWlezqnf/ByZfTfSatpBEtqEuLDMJcPtJyCZRSQk9DuiqfGINoHvBDMeI1iG
TdM7cqggZmDZJIA0UFRjzb4Swqta5mB3bhMOE5S+djGU/+rSKdY+lcGkjj4Q
IOTRD9cXUaxskCuwl8r4EQEKXxeWFpR5KbIYgZY8THwpWxV5Lm1ao2rB8UeV
R+Se9RifS9Qcq11UDkPMk7Ir1kFrNzxnd3Us6DbzHafp6o2hIrBJ1eRYAQ4K
Klb0p2mXtiCoCH2PvARIDT5pfXDuOVfdG+qq9G9IvOKgxZjhACEH0cbDbQqG
FpCXuEeu2WmqlOas3+JAKUq1dE0KRiB1idueXVqvhi1mfQ5YK0lgZDZswIVV
rWwnR14nCU7Zodov/YGQ9Bdtl3AHYJ1VgWTABX0eGXWjIKH7uLZoR0JfVe3Y
iiJj5V4lrzu6zHbNYPg9st6ziQDCDdm52xiZLjQOijnAScKyvegFSTXdmXpL
TADr6i5GhsSclkNFXhyQC0/stCE7bRYsCxjTykFG+aZ25ELZQf71uvup/W3r
Il7YldCGqJO0UyIrhIVgjAhnLtFOrOePdoSxAYsES+GGVJlIoqVREwBJR1sR
vokXgzem/Bh0z/O1Hohgn560qLN0hRA5dLeSxZDzIUlW4IkSw/k/JYtMIsky
2aGiYTEWZm1XQQbSVELObAuoAgYIaDFeBT26pLljsumlyZiEE0o9EaMcpg1W
g63EuhYAvYlTmGi2Dg4b1b8yXZo2tkCR/FlOgtCVyitDQ1/oEtcJ2EBTRqll
wAY8shU1XAA2z+54d/4bandfGsZIHlEtGNKzyRAHCUZvpFuzc3QAo41PJZt4
zXBvVtRwt6a6sY9YeetTkglm6QNw7/GsIuaqBNIcdw/nz4aFzUCOiCFO7VQx
bEt4oYkEqBPkO8ZGGS+G8SqrvlyD0VsPOfMGCSToxOSrktYh/8liM//8vCJW
dQ81i9pDKGhAMp1v++4Z19uayoAvO3XZekuLUUgNdmGrlPAzLAPd5ck1PZ2E
GO+PwSW1eWcsI7S3XvNmlXMSUU0WVRYys8hC3wDFtLBUrRINU6bK2qRHhxQe
kAYZsE6MWdVByhpFr8kEzIljAsyCyyy0Bc0YqtQn6jIjyX7NcKtr5Sy5iutz
BD0dsu5GuCT/FuInJPuV6TESW9ZQlfVwnE+GX5TNIi6dJo5qu9UtSE2psB4z
uwSUYwH3YNwPxGmgg5PZUmY3JenVsxNS6xTlwoW3VfXB1bQCs4i1wuWFMSJr
XVAuaFbtPSLDkHph6Y5kKs6DZ4wbU3NXTDCtu+kUyt0oxkNaOuZA1KC8kJHf
dvAZ11uxCeQiCCds6rgM+sGPy3xyHhTjgkNG7/1yRiRH7JE9j7tG7BpzO0h1
oCxVZRubmNhpnEMwDnJ6zBZHsZ3vEgp9Jh3aNuuMFCT0nvxudX9S243gAlb2
vDpibWEJ2QFZitKuhkWIdDHqaJNhLgNyIHN3g2mIbNG8eAggcj4UzIlWYZ+w
NHPbC7VO68ylUaIYWJuWfnKE9cpaMyWaIClZpzlFTfTraDSS/Yog9UXMS3PN
mNcIXq9WsY0XkAHrJALF22Yc9Ex0tOtardWC85+5txX5Dst/Cr4yRSpmYQcS
L3aL1DMd6qYB+RxKFPmMBNuEOiAr0PPJs+w+Y88Fnh2XJRaC6XwHGanpdOV8
Sd69O2JaJb1InqkZSGJFSdWO5PUZzYGwDyW7QVcq2BEZAIcTvPzzv/4/drxF
6IzTxRJIfdVK1HQBmQCj0tBmShY7sptQ8n3c++Qr8m8LRrthXDEwmviYH4GB
4VBRSDJwKeVxecZkliArCwkIMq8H9ONpS2fSQxbG2iRgBK0RMNu4SVQLQKKL
ITPUNQRW41Y4USwyCc4eT8WbH7ECp0YSZjylSv6bmuIG7Jsj7/HfQIqG3ya7
oGJwODKEKDx7+VSNYb6T3SEtXG0Bu7qTF0ThCDj22+GSE+UvZsg4VBSRy8pC
joyGZfnG25b4bkjPzMGvAyimmav8B4baqtcs8sUyakt5nxeeQcc8l5MPl8+M
FBttY9cdKoOWvuCEzyqHSVaB4MqvyczZxBzMeV6jdT6KwbIUvQkBiEF1yAhQ
Ol5ZE6F+FCoMKYsxWY5VFRGy8x14ILjkVIFJZcsvv3zo5VL5ryvCknyC7ltA
ThIkgrmXqoqKJGDVz8Qx/czXj7yqRoh6Z9lYwoqy67Ke3A89/+o/Cj2EhI6n
FehUOQo8dQsIdGqPrLoHHk0HUHkNVhDrvAZJRfJ7jNIFl0M1e/ws+EA3dZVY
bFXXIdxa5pcdq99Lghx9VjkstxsZF4TxZBmT2T1S4LmiNqZRhI12qmeXpvzb
GTJsi1bb8bGlNg0n729zHLYiJz7Ua0sShTAQmHINQ2bGmUoSKayJ97XFLo+9
ZEKsQTUCJ6dUDO5e1q57tMAbJnjK2rpfifW6/3B5lt+1Nf0Oh43F4mmiLNMZ
AtVuIjArhWUcqtPOYnHmGNaOxFZ+KMFcO3GI7lq6mvp3TQn9mqN+cotQOAj/
Fs2HbJIRZCSdXl8FrPJZSFHlcysTkL/V3i139qtIBcU30b5DRkHkJoFmEsp3
5J3y++nOs9yWuG2v7yUQ1Rk8E1nZEdfc/rSZT+X+PVoOtOPnfIKfeQMH0Aar
y9VlOVhXHNY2SwuIa08Z63uryfA1csdKOdYTpI3DM0SRWW7rgrIXeKIgnpQi
x3fvf8oa8Zd4yFsNfHMkmPECZr3nE7GeWqXDWkerkuaCzLAXYjkekpuZRrO6
UXQ6ojX2rrIb8lpJTZQ1YGZlZbehfd6Oksi/QTYoqhGmHnbOKHko0SaTRbl5
FL5ypELqplME2+0REynC0n44vgvv1blo8r5f1HX5/UTAde+Dv4oBIwy5CtN4
xRr0jBlA8TKj0Coqi8u2aX+W3bTbQk0lHpBwgGyS9jcyFxVW7ttwzLSWz8zX
J38xXAK2fVdlSqBgI7ZHJLWjNzjZf5Muhzjw9pmfpmp/GG1YBofQZNac+Iho
JeIyFmExifU8Aov95YHycglkYm3/cGchDWAEtoevRaPTqSo1C6Y605Z0SXpF
yXQLcawIv9v4eb9CBz+3c9Sli/uGDr6hsjreDHa4fOYxEtZlCxwNfhHvYi2G
CuQsuZ5a7d1BWqVnt/slVZWgL/Jzj+Q6BRGD7Yv0mdvIDSIWZwEV4pppXsdd
iza3oiJJG2Z14tHAiqgYIEaFPtwXmat1vGg6ITo1r2wXQAy3cj2Ln3ri+b9f
pQWLzkfA+rUOkZmxYDfrMqzOqQ49XUNfabWlZNjCqWKboCw8lFAVTgTzlg2S
Q5WTbPpkIMIdZJFhhQI0ZyVIs+NDz74ub9iMQAGwHMrVRBgITEehrMv38bod
9KCmjBkU2ugZGnRGxGbt3Q++tpIzOB4HleRjLtlbzV6UN688/vzbZbDOnztK
dEI/OTXKfV0bzKzBGNAiyCNk72FDWVGd/HTvWx94ARtmhbv9wvKZsO8lpajZ
2nX3h9qjp8TytkiWaTVUzlHVqZFEbysPArtBQvsjPytqVttV2USzJy6lPKKE
zfvNAyn5Fzccfs66dIXatuxSVZYaA7IsmXqsiLrj4lyyw71kfxYTAGMNihg5
1E4BF0Na7iTZYtaHa8Jf9fNH9zh2BUZjQv7hh8uQqhyOdJqPvXLdE8J2IxQb
aQyKI+E6B+k0fotksfHe+H64i6cdRQIm1npaPxO/mfCDQlGnk7UgB+40drVk
JuMQgcutiug/uNf3rz3r/GsflP8NdFFLz7h8wx8/sPtPJP9EITGoeN2AM6eg
8LGpDUiLDVc83wDW6Eu/J1VV55191b34WTBsOweso7xXDo/03VJ8xzpOzSFY
COD0+DeOWSEMjsBzF/wFrDEuZBu725VlnsJgZZuTm7Sv81ZKKbMwOSK8BGha
WKYn+U+SM4a5kpVbuL/2zqW/DZYN9sDJEDngrNkW/LYWDlLIFC9Q0IZFPrNg
JVDimKosDqdUGSZtaGX1xCWfzu3WBHoAjjz7jhXewc45DM7pDINhRaCWxU1G
CLPVYahwCL+WYfAQIotzyNerzkoIg9qU6VaJTCAMuqfob8pnfqmuApJS9X3P
/ievnvyXf/0PuxAEq3ewaJU6CshiCCFRV3dUPrMQceFDasuCqGre7jzwB2tK
ckRoCWvJOjS5lNmJLPMu1w95Y62H9jxhpbwufzW1NL75sB/eKBmPJqDmbw4H
diwKszDdiUj1lu11raDmRDC9YYkEeow7kyF6F1wMBwBMML9QFO6FqqFVUnea
8Vln3lgal2QrH7r6zmc0whgMArDz3RyaXvYX4/as4KKnfFX2224wnUsi09un
LjW3pL1lPWVVbYm5dMVJF9+BepvYF4E6yUNMlZGXNpsVx7BuXkMEQ8YJNrAG
8RAV9ls6cI3JwbLnGixOnVshg5b+AV6jrHVCQVuWrm8MDKEBm9eETXYGw3A7
WELEgsE+swkjGIa11dbO4YrUypkcEQh7kjLulWp+RyOo2qvQcMgscjP0kIJB
CKiFr1I+g8Iqj+Oyev/OjbgHaqKamp0akovcvgNiCPMo+MoCI598FprE9pOh
MREbJkcry0uf0S+I8Vey1Tw+YoZW6Fs7n6CtkgNi4p43sAMbyncRCoCrYGuf
DdOgiSljhosD5ASwIF0pQIKaAQ/FaX6ovRyJFw5au+FZ6GXSdkMPzjJtH2xO
MDfAWjGvTY80+rY90RDC+7HponIdhz3WkxbEb0F8eLigM7HW8J/ZCeb3hCus
NfssV4hobXcBx+BdZbjAFHsp7UlBKetFquWbtkl1Gon8W5iqMbvRsvPDpql4
hMLc2WQK04u0ugSz/uGsJHUxmVbJi2PW4lczQB5c1tc9DAqQdVlwMGiVHijQ
17RKjQA0ZXL3pcKkOfTk8XUahpBHmXCPRAyrT5/nbKq/iAbvsrDZI7zJbF85
7G5DaX5fOMStEtEYKOjZ1ly2WUbqFa9Al+OXfKCR8KOWBaZR8zHYdwaLavFD
1SpV0GYJmU5Xb0tQbcMRI8xARFFJuWcyUy3HRTu9Dqa6kcn4wrogZvgeS5It
BOvQ6MVRRnlexUGjOVOJg8HOtnbaqSlMe0pNZdMuC1gl5VuhRC34+1oS3DTR
aELdbNJOF1g8vssLfPQOC/hzADm3NpWbEE+ITBYq/71+lBVb9BCAYQYF6wHY
R0BMf2vEjGBRjFjasdW2IlazLEdI63QTDvLdalMrTGEGwchZnTEyyAP09qkd
0MHEZBThES3D3maZD1USiJT6NLP4kYo5bATrgpsRs2E2jZSEY+KFPiY4F0fI
xAc6fm8Qh2BuIKsirjgJYjF8fxwumhJBCWnhvbHJW2IXeK2jS59xF4yQjYOw
StXYOf5WiRDr1FczCdUatFROE+HZZdNcA1YlFqY41LayxTLvf7nZqR0VMFch
JET3AELmEhgF2ga3ZVmz3pn+ztkERrM0DsqLja1bmNIvPHP5PTUoGfE3KmD8
ex7kICaPy+RpX0yF1xpSzQkarq8sGgrX3Cr5uY0s084hcy9V7QvMEdiMy5jk
G/S9R1la2vNyjGg0Bhr95NwNRykSUZF3AJRa7p3UP/iFQfVRnfPIunWy+OpM
AqXQE8MvAzM7Q2m48Szp/L1QNDFBvveVAKVhf4qTvaKGrOj001gZAw20eXM5
yyCaKl0lKxvZHewZwXE2SrQfywyv0jBlfhLIFW4UZ55hTEqQ+ePRBXDqucxD
WAmb/SaJq6gx0AkYzohKagg2ZPWbLlpIAsESWFnyey8ROUXRul0xawQ3GFcE
s3/M6Y2EF+aZMCQmkdB+k2C5PHh4oguEhqFXNJwJQme4GEJBlrv8szbyRi3m
Npa32P4haswu22iDc6jLENY0egTJ1rLLgh8ZzdA1JWmWj/yt5r0LE9MjEzxf
LJOJOT6AW8bNHOgvjd7CilACmID60MAT5IHcKq9A6mJ+BuU4GsUmHVY1LSwh
Se7iwrYMGT9+eALRIutBzUxj6HPkoKm2ZmDgnkFATg9jSMtX+zOYZv3ks3Ey
PgXN75al8YsC6ABpDZyGDwEzZ2JgwUNo++nT+VBZOunGKpkBnsPBzOoxMlXw
iLkuUHp3eb90nJM+I1dqV9dCFdLGyslq5LV8GR2oLMcHctQrhpeIaDqBcAeY
V/bZPJOUObURv4dXf0JUH1o+yyKy/jp6eizEH/NfkitV2kvadgGB9JErb32q
OD3yUyWgmYRoHsFD5h6FQg8X6NKirijooSIldWNmUwc5RHXVfaah1DmArZWt
Ztdcb9I/TJtzrytC4U2opfOoxIsSePWT0Y8TgJtHgJAFyJtleG5PDpeZoAsQ
qlzclKgwEzpCRxztYiiGAvDRIjGY6g0ZVhbMufa4825LjU2hrwI6JUuf1bZr
YjCyphO8g2YKDhDTO+NdABegsvCSzgYBi3Eyvi8HvAsJCp55dPpawRE8wvIK
5zlkFc4ViyXgXd/npuTguZ2+t1wwr5Af0L0LIsLSdTV0K1lAb/ztvheKVEO+
eAj+MY5SzSiU2dy3z0mrpMWoRXHkM1bUz4w/ZgHMLQDuVogOITgNGbuEfo+E
hPtqlwHLrIP9sJ6P9tm9+528Wkgt0ux1L/e6/YEXHv3mcStQbEI/TmbhNYgo
QaWLi92E41jNi8hZJaCvgOTypI3W91966rK7JMCe/rWozPHxPY5Z8dKOB19q
VXZaNX/Tz3Y+4gqgxWE2W5CvOWUnXOWzU8SKFxVDzEEn21HksC1NAqgkX9rx
u5fiiMJTx4vKcX0Jou1hXj0FuVVfvhXILADTZX2ldfKZF6x6EFRnP/MaUrOI
ZRxOEBibjDCGIX4GYwGylpDFBsD2OAQbX4Qx5iqX6+ILXz7kMpyOOSJQrwQY
GyOg8cGy15J+LO0qPvqzl99k+ALZvB6AhppWt0RGi5yIcf2bT3/74qu/f+Ed
ICc1hoQYum6m5dfIgt6z3ynXSWJ0HgLSkQaLbJx8NlkGgywQYIC5p65RP5xE
a/vqoBBr7wb8CFitBuB45gXXPvDgt064xqTpiBW3PSWYjWt66Kr1zwjCdbyX
drFkQtyzLJraNIELG+pk2gghdCTi6lt75I9vRgGUvwsnkdCpWerSx559+R+m
FNdF4haU5+kAf/zjq+979XMHLkUOdzbo4E6ZUyTD9WijvNqPI6MJ02oFy26w
EgAwNhyE9OcvfOngy1w5gVXggspOKQhvFd/sxWxqLFwVYX54rxOukUOg91Ba
kzzaGeXZ6wJozSGgNU5Aq0HQZTFBDVaPyWyvL2XQOqisnntV5hS585sFgJHv
Bqt4A8YFh4gP5KUzm0CaYLn6YFkVLLbGKuk0tc/8M/Jcvxv3dQWS0DpIfS+s
H7xbQazRIMh37ekI4ezZ5TM3iSDAV98PWCicuCn76mwguAg7TwuEwM0Njjyi
suI/mJpyKf7wKlEx1BLVYxEdX9su6Bb0J8uhHnN0yx7KAeS0ZnwNzSKMknef
UGNuOQsHr17/bJLzLYswSDui64/80Tox2KCeMSU+pYbRh/3wprpLRTgbY2Qn
9FAwz2kQ3gZZHO1wbrEYSwgFF4JTMEDNiA9pnAyHHenOdyHPL43KrW//dff+
YsUJF9xu7EtAoN3mUBsiowA+dD/tYwTkgGfYQY4x9jHwAoYHR6gm2QxAKMf8
CHJhYUpKK+faCJzGLNoCeR6OZu8vSGel1mI7JPOmSdaAlUEyx6i22bHyS/mu
NR/1MUF0wWGmAy+K3X4svwXzrYLXj7VEaRJImihzc1tTnajm1sBCGVYeEHJo
WL0GpI5hNvgQ2XZ1TZmo2p1EiZ+RRNePqZ4Tm5WtgoKlpcrYcWMZMCxbErIC
vWHZqAue5tQJGdmth5x1IzIt2Gwx7iRSM6dgvyXHJFs2nwC7wMkMxJZHlxLm
zBnxmoFgF9OUcZeEowgdfSrXRrQQtTAcAypVT6c2hgX9uO5BXgxkZua10S2Y
2ZGEXAFO/iwGu6yhu70bZcnRsaYqOFwZZhQs9EmzPinz4plPVtNoZ9wLC7uk
KLnauxKYFZgm2DHgXlDKGqnC+hbfp5Gia73ujRVrQOG7w8L78urb/prqkHJD
S341a4b1GmKOW1JkPGhRfcueQbjyMfaU33tRc4atAeQstXQVGWsSmHLrCFqu
c8eTiFAqFaxjSKBXGCY7y3zVQwRptfipLg1UCltUZOhTxj5uptjkET5NLRnE
6XgiDjgqzbBEl0jHFnfVmWH5fqU1XD4pDWM+lacdfdUtT5gYaqIGcg34HXKy
jN0AzseagXEcvVh28MyvL/VvEpOVv5lkmsmatqefbEMxY1nzVGjy5heYPiJY
2WfPa0gqdQ6Ud96FOEQS4BrsUMOggVGdTRShsvyoEoxqWLpezUrbKHvS5sZj
ynAW0RSss8r8CJpp5iMENJkRuJjsRrOspPscwAfnx1dB8zvkT9rJLdRGg7hA
5aRTFjIKRNb8768yLmECiIXY8LI9QPCBFVSxHBNoeG4FFSYOVWqsE+kEvNLs
ukQncdkNjwkjLOapQF6rXzw7dkrh3TfZtdHKJZDMM5QW9pJTNkw2D8J7SDGh
4mtKxv6MM5a/uSJslUw3TYuvizYi1UQbs74dho6tj1lnd1Y6CWVYfXb6KrJ8
VHPGrx/0VyuT26dra/5znTxpa52reyYwcIS5nCINV5x08Z22Vai07UDI8FmC
mZ7C4NadTTBLd5W0l48Sofnh5rkxRIJSPaRsSKBTEY3gDTaE9tntEohtPPVg
RtnIKoM61C4k3oZ0QHuRZxjLt9q8jDrUoFQhy8U9EKyry4IyVPd8DHfG1HCm
4ALusSl2lsfIZ18MmBo2kNkDOsVgQUH+sBMaMno3uKO75P9l/gsqWCSSDHd8
RsaqQfWQWQeVytV9NRBm2VlBjyWwAV7yg0vvsiOjxs0edzz8otwDZfaWa0Zr
qgFwa1rGcLxYX9exckRk5eR0yv8GsuS6sWgIf+nCs8TtQGim/iXpvnbBD6+4
16x18IHIHoFzLu45eJFr/lRGixDkipGOzuoMueE4gZPPLx6lYcDsArkyIbsg
Qg6BC17V8QIT54NqntV5AgEBNydI2VOETlIkDKoMyn704xX3i7pmKZ+Mc2WM
SNrMsl8eKdW9ae/VgGrJUgXMsQgV2TLO+/Y5cRWaKp6dMkbka4ysBwiSp8bO
iKJthM1AZoeVY6bv5bGlz3ijdn1+7adP/lq+MpcALWsuA8QaDrSspBt0h4Pq
ErJT8D2PbjHjNQJteBU4ofzRwDrjDjuFkMCNyOIeVdgnvf6/ZwijYUmV5+BV
YPGPmWVaXgDSOV/ZvXvG3wo8bO5vBH6AKcDdIOhaciDSjVaeevOhP7xJ+ICq
1JsgcKy6hinBmeRAj8aFTRNh9gRjOBgtm+cpPxCxb6fWTTj0qy8edMludz36
MipPr15lVwR2xoCjzA8/Aw5G98kAlxFgzytg4qnXAw4meTH7jEjCpHogAi4K
Wbj+sonOLEBapW1GRNucDFa/99jux64QCnac1LenFkTygNCTLoJZ+qCSM6uL
ziwOlgjCNicohIxRqfAFHZvw1Tc+se+FQLcZ78ksIDNa5MdTfFlB18yyJX6J
gtIN14tVDYFdNfVIy1clTcZuqHOj9GJoIIDuZhF00wFjzcfYJXpxGblbvICE
XifFrNsvZNA9kAAX4wNgLiBI/HFX5TiRAZYg9N520PUG8hWvcDpcg2Ras4ic
s4MKUWMRGPM5gB6pilIdn8WNJ0OGBAoZrayU5LT+4OLVD9mVP5xAFmdiVi64
ler8ZmOkwJyQIPLMpmRpSZrVbilC5/xkxf3nT5m1QkUoDD8gL25OMocuM2v1
e8ED0kM+6wJmDGWDWVsIwQu2Ti8n0cygVNmYZxoiuq1Sis5654GoO/Qy/9/m
BO5UVlKHp3X3/qKiski39IN+sBb5GmyCsrCuMnqIrAB0OcnWTLKwzHGqix1s
4ayqBs0LisAiPRWQzgKoNcBWc8YKBiUMclT91Y786nhi5YFdQM2DmM9c075K
XbVV1iTQ7kaQ3bysk5tjA51BNogIcyEMsjXyUx2hNchMRUEFcb1odkEms9up
E+TAQ7WIf/bfClhZwUntmQ9EQNDD03Wi0r/UTZLCfRpam2IXrD4yRT0TiGlV
7L9hKUymCfa+9f4XIBIaoI/VyOgsggE6qwyl8u56vMDi69oQoW44GRaFcZ1q
8Elms+57Z98k/5106fWPSomIaYFA+AOr49LEbKS+zogfvA0s3Kgtj+tuSSZg
anGEznQlIRX4l42jXWBDfS92h7QMjv5OmJqeBTnXbujlozgY9qkV67bdnlHn
p0FZoHYoMNXFPA3hhenle27qQPKH2/895NxmH6TTxMnoHtj7+ymJFokumP+G
+ftGyZAZExGwJ2EyiHyKLpveonLa8hOYyw94Jds8tVBP4zdp1hpiCzJVVmky
SIRWITXYF4Nkx1ih8+cDuIavs5y9ziUhkRtyBtmlfnJQdijnAIkuqtB7WjXo
o+2ypfGKWvrt6CukmkhZemT+eALXq6bjkc9s8PI3i8d5ipSdFuAncTuOEagN
ku+pumUOXat7Te9SAAqA1irRa9auLVu9A3Wun3wqjlhh3C2ZzGk7LS0WS9j9
FsSsVcgFwAb3XvdcpMe9VQRJEf03LxOJQgMNwNKptOxJuzMaFsnVWygmMfOI
9HaOphWrhtIqRbSccSL5wI/UpHy4QTXfQ4RXtHXCvukASUPfRk0JZdZsXrVh
2S+505sTM5Bb6Pg9NMUILRg6MG5esGW8aL9Vwseglptoy9jh82d1SzBlpIus
n8SWBTV9zIxinpGbLibyod8LLiFQLm6rKWoeUMDd7xWgAp3DukmGxExH5vEp
pG6AlchpAam+7jYAxnHf8+yO70eZ9hf1lUdb2WsidsqSh6obmS1UTwpF1x0H
nb42tFsA1e1XM7gdOmJAzwpP5lcnecC7SfKZOiLkN0hsoak0iDIudDPLENzm
1LhaqPzIUxuU30idjJxFFHYTzCRMLPmE+Y01ywAPnQtfkyzD9C7z2KKrpAwV
qKwZK3QTvLNMYCVhV3qwAhzHdbTBsbCQqwM7cpDX6XaTDTf/bShwPUx9In+y
yeGGsb4SrERZtU0IKk19YjaO4qbgSe2DRHKLEFeC0lKv82DGJ2P4Vdy0FH9T
ybbYoLM8C0zy8aW4TBJ0MQ2YFHsHqGTdJrYqEOgHkhFLgmfQPZMajQpG5yDR
VCwk/DmASqTTDwNWq4cF15E90vQCC/yGuMGf5+nZ1pv7G/yI7gZghM4KlWYS
BJc3tNhAVNC22d4svcIkAw2LjEtR3kVnLL+HdUaeRU4Xi2ixdPc5ZTH8/lqV
6ibMUqovDPqh0mPrrPJX919Sbg70o5ka+dFPVt5/yWmXbgDamAAPowRuNDMV
bWcXJ5aWMRFBMgD7lnEWxWNT9/kzG8UJLZSKN8Bxq2KIZF7YCXLuWZaltt/C
rfPnKAbgAazanw2iGzA4f3C1WAxnvIiRGyzaXxNdI/6MjJEjCCToVxQuZjND
UDSBvKe+QgQTTCU4+GD1Soep+pgmqjpflLLAkfkvMhrxBNTpBXDqriIBIbd2
0WC4qGMNXqDFmzgnSKlx4URcrO6AVU+6OqnHlV5PgWDXILPJyQVbzEHhz/I6
mnPfsmshmcKbUbEOh4qQ6Iry1QJWRudFy8MfNUDe8ne/f8dpdhR7zHViLRnq
aqaAkapM64t/UNY67mCDKT4GPyBwHDnmzo6HMORXTRJ8BuetHczCGzNYUxbK
Mggd0qpjz7vVKbxZwdsoeZUiJLo8HW+Y10c9kCa4dra3LoISQ7LQ176NGyNN
oqJ6BmY2yg7KeB3DZwzWF0ZQCgaXQoDJozPF5Ych+4QR+RPrkRFwhRFohpd9
ZgcvI+JoAI5Wtk/N1BZXuzRSkTcLg2tVpBy1A1CdelAIcshd6JR01vzs8t8O
v37j93bjgwu3TdQCFp7jrRhJ3ZTM18dY13Or0Eht3tMZLQNmKFoGy5KxuDMr
8rMZLb+d/xQ84GNRHMFX2IcKKCVdyrznFAWDSWAGLwqMFgy16/NAebMrEcYh
pySpprHZ1dmbwORnOtf3Vx546tf5pP/+HaM6MAAtKaNh4JhToPPCN+J26mCD
tTiXfAZ5Ulgtr2wcdmxEAKADCGPcDwkgGbSGQ5JZKxsartmrwJfZrQHjR8j7
dLNtAw38IA7nxjtg4YLf//O/2VHZpogL1saCLcDT2WYXbVndvRpBHFvFvAMq
Fgc0FqpYGEHOJgfgb093x2WzCICs+xQMPS+P+9p9T74qI4e7q+dwMWafybic
dqw3I2jQW1DHdu60i9c8fP7ZV/5UsqLSZCBrza9x7IQPEQ2S5bPfDo5kRdds
sKRtbJ+V59rdTIGPehoZ7QqjUt+2LC6ihq0O1AU6MOmtOViMrDcksw4j3jG6
2hCkV4ePLYaZb0nL6CIibLgp9Z68YOZTsOjkYNHStTUVzsi8IqQHrb3ruSyR
v3+nJ0cb3Z5NQpK1c5b7ZXcJQ9pxV6x7QhjTzJNfeqv245XN7TedCB4Tn4iu
YbC6tY4QHftIvKHgJ+s1NfjEZKY/GQj2Vis682VWA0UuzbMkoJjkEAjSMDuK
ZVAy667SXOYRYaW3Y0W+9r35vl8m0N+O7BJEdV35h/pC1gwYyNEM2txoGyfA
DGX6fj/RBGh55nfW3v3zJPDQsU/mvez0SzeUolWvS5JCgTMuWv2QOMDAaAvb
O0qOnKac20wOuW79zyBEHw501cV3aqFvXnfYD28859yVDwBaBmOFHVRQq34H
UxvApEZcIEtPv2yDgUDAfr042O8t7WgoHkxz9o0V+PdUwpaSlL+r/Zy7ScZq
5hYTbNHZhKvWCAHazwR4Cgg3QnBcy+5kK755x0MvGi7PK5MUegyjRXh3+dig
QZZHj0C47bLVzzWj/Sdfcv0jNxx+9s1CW+SR1KGisIT2UdoVXvX9C+8ITQqa
cVR2IuYVwbVYcolKRt2tI7BzHWgvNMtZiMMluSUtjwIVPgNzM1QWZAMkT0Qm
Koug6r7Ofbf9HyUD0+USUBF5x8/Y0Vp97Lm3SFfHBBK5Z/qgcZxYPhHy9LjH
ZS4RI3Ufmq1k2zhGFCIM073BWrUmXQ3l1oz3JNm5Gw4/5yYgSu+zBCI5GYet
utNWoz1rBCrO+7L34Kr7bjkka4yFBDYAF4VW49E9jlshBI+JTK08kBk4nRVo
2kPpMHjLIWfeaEmx8ltdM9PDpp5V21Nn10hBQFt+Gf/isizysQHDiI94CUFT
6FvneAUY6HEcRYP9O0NmqJXRz8QBIuyC6TMt9JYL+13a91IByqNYZrZhvY1p
3nSTh6u0W4kqNpJJ/sg3j1sJnAtpC5/4xtFX//ZT+18sWbxYnyPsukJdmD7T
Z0z9/hppA4/zak+tndb7g4uve0hOV3qX/vaZrx9x5c73Pv4KfK9PWF6Fb8+y
WXW1pWXB7d89/fpkj4M0a5v5dcJPwAwH/fnZ511z/3VTZxY/Y2V7j+9+zIo9
b3/ohfQvVR3yLCnHuvmws26yTBybVfCNAIe+wKj8h2Ewv8nrKoXrxfyyc69+
7sBlWNIv4n/ipTc8Au9IdtTyk5eu/91H9zrvAy/8+ncgf3UcgaToJjUkzJgf
e/alN6ex86z2iHxPyBL/8ME9fnzKsrUPw2s8E5ipf9Z9Z16RWyGWefmLB11y
97dPvQ6iTe5dMHnWE01dMyMFTJ/a9airUHcn2tlvHLMCFzH49peQlVGhCC44
psU+HU416w3FTrV8R0qOpob+n7jXAtwJFVTWRD7MYeZhFwAcv77Aqvt9en7B
xbVH/mjdHz64+0/k97qKslknXnrjY29/eK/z7v72Kddh8aw8WmJvstd2OOUx
IiPv+c0//IGuxPyiozYccOp1xwkI6G9FroSCEr8nw54S5RuWTdl8+Lxndzr8
yg8+/+o/GkZL527RH1NAsD71diOv1p9LU+71B5y2puNmwUl//bMHLBXnhq20
LId8T/Dv0T2OXQlGEr2Hvu+l196uhSr49vSz4MacX6Tk/r1PXIXf++SUkE7h
3xWICKdO7e4/fXjPcxOLuX4WrhPMW6VLLl4A6TmfztMCcqTV2vyLX7/xh7c+
tvcFT+521FXgAAu5Pcy21c+CXawCN4UMj77+mQOWik0pvx8u8Ix0pUCV3+Zv
0FHIEakzkYSjsB5ZgM70PbQvwqFkKulT4QyHMAREjytzOhkPshtCnijQobM3
003snsTnVKbZFkAdifuXZIdd4vRObxxGQjV5+3fPvEGMIWPesIS/rADPWffk
bkdfKZVCI3FUIhYyKh2s3SSl0bv8mq3O3DIBK4D/+DMvvpkO1fxyoIQ/cspA
MO+AX1Jlu81NWujnUsRAPpoa602lnr5hKqJmrYIK/qqqM52IKWtoLbQHoN3T
ZdUlTSR9L++Kp1Zbbpns0GGr7viZWUZzC/Z5csxogVXZCLv5wMWra6YHtNCY
MmCS2Y1WgYww2d76GrFSnpjCGamckt8w1xgLPQJ/xb37nbxKblIUBkaKaP10
35NX/+Kr31u+9PRLN4BdRe3zThvh0JRXrmH5PqLoxHBZefz5t8lqqVjWBJ8A
FXihhxJGz8xRW12+ssvdj/3KLguQpuaGmCJH0PmgMN3hylSGYsN+RRDcHAB+
zwob3CEky+GPm1cOkllLftPapvyuzX8Od1S3Ixi0aX9a9DPLb+T5h19z+9NJ
XDT8h5FkOftChyAyf9rSNY+UVQx+LR8qTMNS4lxCmHJWSQjF3K0czC6wmYRH
+pikx4CDCvMNe4i6A1e/PAKDkLpIAzVPD5KClmSJKOZwdxA1lo4VhAY8FxDY
5WS9RTnJ5xoqqeuwsYF06JUEJWWevKxeLBO54OSFOFtNuBPSSeYV/SgFQsjM
LPcCSXJPz1MUsPGKQ1EuXmnakCXrxUO6z8GltZBs5HyCOHkZE3Hd1C5suOGI
s2+6+dAf3lh51cOmdbH5wt0ji9oAngoZrrgV5XZkyYTDRWbaKleGy6q3eQ00
pG6zMeeWWpA24lAJCpFbd/guKZviRgt0dfaUe6aMPxngiNWyhNcPl7X2pN2p
Twwd9WiGyFyrJDxv1Q5KXi4NpfhexMnUXT7KAzX3tm2lbZWmbBm/kAV0d3j1
734v/xazpZ5UHTu0UeukgmC0IPOerOqcMhkPFvWWY+LutTlFPcmbbPk1Fshz
/mJmTX9Ri87N1Cqpa6ylK7Rmtx3Agj7XwrojEsiRO1q6Ro4RtaXuMlt5O8Nb
FcjC8uaSLp1fih5rqD+oyFUb+Eb0w0O9i28O67tR+s9Qp2ufzM7y6mT2aj7K
Pz8ytaYSWxWvQkUGGMxClsKbQyDOFmxrNI/AWF7apgxMnOhix1126rL1ErZz
/xtwntbeniB/I2QhJ8tvPWEa2velcNHUFUOem6RopPxNlk0+99CVghp1nLAc
v7Tw2ZUdWO7Q1GEcPYvLOYrdUno6BQEUz/YlOgbwzD3B0G67oqyJ1idrbMOo
CxaVhWmrWoYyd7Ms7DPCOjhZN06RT9GliFIs75PnGZ044rKMd4dXc85SyqyP
U8GcsTAVTWypy98MStj1RHGrrkruI/ppsiyUGSj+dyURrNNtWScUIPTwA8Aq
X5kVD21G5FxWJD7Eegt5l+7c0y0MlyXgObc0NDdttiiYj6XJpXa5J25QmhNj
eJggWMxKdwviakpucEjoRqCh4H/XcmlTS6bxtMrR2TR1oOJkayd7j/ajnsFg
Z2SMDJmVVfJBBJMM704nZlUkkniDzhDWi4HZfZDYUREHRAjQCn9TPuKClL9b
38iRIvtm28irAUXbnFKaWVYnNVoBTnYpNOvbRnAdsXKQxQXoXeezSnJmuHwi
wCej5GHwGYjFGKtf1d4wfc76Squ6rOuSJ8qM7BJct8NJr55d9gC75OU3TSCS
ycLYDoYwdCsWJUuvY7MJGXCySUwSQGDGH9RmuM01WRbZo+es45yeWpQNfzYw
QdnUTE4YgZWsplcwMgK0YSI7GgU3Oh55Lmb2MbWGxbfBS6JgiWNzsARsaKs+
Lkw6VRo0NvYgLNu0LzMjQQ2XJ30eY/LH2bjRqZQaqEaqtCkv3kGJwvpe1myS
ERHk5Oh+ezxJYI4Ampdh0ATU7g7ybzPgrVswzQZlwAFFRe7YnFmOKCtflw2X
Z5qwywaPlhNsACAyofq3duOlWbF+y5ovHaATnD1+fBmb1RLyW0h6cvfIcBES
N/cjfDIaSfm3LxCE050iDG5iHmll3WHZtBcU+MRS5elxH9IhrtK3ocKgrXmy
Jrnbm0Qsdl//8Mt//4n9LjQCclOOWKYsn5iEV3GljhOYTdQZqwpizQxh9FgC
yL46u/1sui+XcJiW4FIzyHIr19m65mM9FyC/1l3FEI2WQKk4x+R1paNBXk63
NqHJiqs6ZTivx2PAuaAgU1spcmEwBwoRx03WW3A6wU0dAFaaIw6qwRr8ydD4
xD6rkhvbrvmW7JIFaAinawabfFZX93bpOx0msaiIrdk5mMcyScAzr8UQAqLV
LYsGNMYS8/8BPZ8n8zArlCVk6RqSavamXSLl9FgpUlUu3WchLyvDVRA1T+Rb
H9v7fPdEMjtma3LwejuDaNCMi8lBHiOfsWKxv80gug8BQsbBCCfMGR1YO6VZ
BcN96Kydtmal1UXMM8oGOWBCxaAv/qxyuK0eqkhk8jFK7oSkOIoOl6QGSVSF
lP66ftmFmGVdsgnoRFnzxnAcwXXm5gUskhctD5LnaSFzUIit4nasGj8lJahS
KcOU/APjLGI8MAWhIG4kOcvSrNqLG9XvXzsoDBNYdVkv/4mhJkSieGgd+cAw
7GYGQpDtGQRwCq8O7yRC+PkDJsp/prYUMuviHjNIspE5VLPj1H55u2awumpG
sbGoSKpLjSorb98wuyNujsjvnBtFRys7JueKuRqBUrluMRL0LGPynSAoMFjU
lk3JhiC/BYI4pJhU6Pzpviet7tQUIlR0bkWgs6/glOMPwzO4vrtNOk4glvEQ
ROhkbIMMOoP3jNXDgiHvKZ7seRrOqKub9eehlwtcBF0clG0TL5XyKqU6kK/K
257b6XvLVx5//u121bEjAyTLXuPMfHksA4dNppo0BOwoyWV4B3CQ+8KyyB3w
4viNjbkvVSzNsWpJ57qI0uFNUm2TPdIoy1BnFId8RDVoUSPUfhMLjIXftUq0
L5+vRnAMtLKDSmatiBJiutAprK3Audi/Vd9qrPoMQDCTYJb+VjrV3n7Q6dfj
90jnr2iYAbGtA7OibF1LbvZxHtZgbYfXSJsfnwbej4/xx4Iy9oBFJtJohuG0
ss3sV8hZBGqzLhkJ0R8dk5w/M5JrVyWb/RBZ4fGOqxTtOJUweZ19z1z6suJw
DfWGHkaNlFd12GZFvaetYm6kldiSYG5/xFxwN8WSsCUEXxlvMDNXPx4wNzhK
+stRrjE31NM0C0BW9KcRppi6UJ9nXTgN4m0F0aYPgzpXEuo6CKLlt5jWs+KE
C++Q1BUzohA5DOgKS1+83UDbta6TmRH3C3VkOLzMMwYXd6yg1iBh8LwWbtcu
DR/MBZIEYrzIqcxT8lHAeGVzDQAM2O86Xam56jAfJCY62y9EhNyJoLgU6qxb
hQyRge+sAr5tOWETviTglvayRNZidhaBBgippYSodZngEoTRLdWZRBh1noRH
oxmOpiKJq8x8LJu1WR/0hwZbzENl77Qzx4JVW5IZskjpTILBM8uWeVQp/3YY
q+VNN6CzMxT5MMQB28l3iHUzUTdz4GlvFVPd4nSKwUYcYGYXa/OQZ9Cs/bAh
JrQFweFGWQ3ftAY5eovJ6rKuAcz2VRzem8A7UODWxTSBg5W1mAHnqYv+ABmm
Gq91TTewtthqwVkDDtkqFadpTOJ23Q2UJkoBKf+WjCbEOxq8qNpedpwEcDa5
9TJADi8otpoUHmu9TSpZu+GA5yxmqKm7KK0yBsU9WRLzkiCsssbXjBWFdfZV
9KpTy1jeQW9HpPJkLptgH0FiZYOkZeFFOYEqqArEo4ac3RGJA+ulLFnaacWm
YNYzgnoWtBwn61bdvFDiCMeJ2yTIqW/udlmwjz770ptJMhhC6M06mOMlC5Yh
8SxyHmDE8lmSCijVN6/pV+97Mjl2aV0MZJn5WelYMI/GhrmI0bCQ02LBTZkX
4ypXFyJmkkqlvWTiyyAWEdxtkjH2k51eTECTWYuMIvZjAXe7UqNGgrMhIoYT
BajcmzRInjy9nDUsVp9d9tqxZILMV9st14nbWQQG7XZq2VS2lcHm0GN9z/6n
rL7ypIvvxL5eQemzjsOdZxRFhwV7oSekm5LTC8C5b5odVKCbcgND5xH8r5qE
bon/FjTMeis5Pvr9u61CNmuiRW6BEf4GyRya8Z1mDDFpZT0nJ8rySeEQblF4
9UQ55W3187NcXCsi5yT/cOeoOelIYGzjXY6mk8WCRBe/c8KG1w0fwgoAutRG
TkDQqi8VcI55wvEDe3//2uJ5iyGYrYus1dkt4TXTCYLp8SStrjzZz+Kt+rGs
snwkrhxx6TBzGNg1XfpZiG28AuLgTiumhYNKbOETZ9IoYiQbIH9bf+Bpa6S2
1Nr0BCAGI8qBmK3uErKSjLsK1KsbhRGIWeuqwEIMpOtOrQYJCX75BEh2AOvM
i8N5AyaLvLoRDck47s3SHaiL9VQ1yxBkZeTR7jVkrQP1s6md+dlLX/zupfi9
EKuD2reuU2P8soxwlPVmrKQzjZG1G2Dv6C1b5K6EwXhUzUitrJH0CNbwmzXt
ZonrzD6G2iTbHRHALjvAQOtTTzz/d0/tdtRVmCweILqKwZh7co4fX0aX00u2
g6EzDMwRFjJRPD7B+uFNkHf0ltPhfoMJsp5dOL+JV8jRGZJrEkReduqyu4Q+
Bzr/BUWzNXk1PNJDLQydJ4kCgem5L0yHI/9bCDZMGbJWKxCBq9sMhLuefg+p
5zElwR024xFjjBEI9WSYEpBNH7R2w3MCBkIRmt67sPOOGEggZ3GQtsVk6Vly
ITtFH80w/a3Omy+vqnuBMFK4sMvjBKYZUyYkJLcRQcwpw3V3wkRUE1CrNST/
27z5GGK2TE3LDmMtYXoK0ifv59W3PClfZ7IKiOzHk82MBfxZJTPrtAVOJk+R
m9F9lf24M4NPrVlbIds5WEyvz2e9ncBGq1q+0UYxYSp5g5vmqjZ2BPnUkYs1
axkv59JablN4HikKCLOL5jk8a+lUODCtkscCJfA1KrPYTVDOzBeon7GcQZYN
ENYUYvL1hS2sM4ilZV3pZ6ny+bqjz70FParyFzNRtyVLyGyRCQJfeh6JTdBn
N2kZZsmTSAGbG7939k2SLCMjxQQtdtNgGf7BaGYdxcB8xhRJ9dRj9ow7tVrK
lqfoIwAsfDBSE+xu0flECKoMWSRIDkOH9pZuS0/fxAMTATnIESungeZMbssy
PiJo3O7yO0JWE2hL2pKO5hRBkXelaUADQE/GyO8aNF2ZAhpT77M6CuN3x8SN
4ARQ6THntZxtz2dglzvmwGBzY1mNI+Szzt1jPRHX+MhZLAlCtU64xRzBEOTx
jjfTy2e+nKwyg3EFqHSyBi0kYNNvdCoWysZxsqsUpVxlgT1NKK7JRxY4JEPu
nbzccHEegWLobuCi3Cxr5KLMAk76WXAEswICXfNwCWHp4Oy09pMjqWEpe57V
UHzo+Vf/0d2Z2/piQFJA7S0L6KuKKpj7UDvtyK2RRTswFj4wVy4LH7ALIOvu
1LEzWRHidF4mCoZgYX2aTt57b6ry0Z+9/GYbEcEcAr1AzFJTNIcslSVkQ1j3
KqZXP4LQGyqD5af2SPDGOd8v6+BcsU2mmTEGSr0V0Dj43CLCslp4WZLnVQmf
g0gDKu2iLLZrpRcQVuzDFUre5jSgvjrPt0QzIFUksmfyPqwhwgG7jnlJ4ShV
ZLtpbJME0hgdD3P1Agcz2gXTy5nxvObBeGZseKYUWNpR5/tlWsIDbrjn57/9
9P4XiZxChq6ff20gj8cLE6R6CKzqvtWkK5v5BqkQnn7h6gdvOOKcrIsypjbr
pN2AiVUlOnJdBPOUVW32E5hgrmS2QawfY/7eMGZpyX9oOsvYp9bx1lsPOevG
NNZtyyFxvxT0jnUhHOuMqiwkZVubxqGYjphQO2ZpVjuz+lhnWOjY4zqtr4iT
/D7e2ry0Vwon5GfKBoShWEaIMJtgK3DNOKE0S79bXATFTV3WTJUpSsXWvbLc
oycOXwseD+d+ZNnGXay78Bl0sGmjeAFzw5Unq3HJmmdAnmFc7lJbbgQHFlzP
IBH4mxHKNEcCD4qPVPFFzjCz12ubltAoNcJBbZUgGGSPecrhHDJJtqBqKgS7
iLnBQCHJb4Epq1Hn5duwWGtEZqpq90tZyMtPWXaXNb1Jw+nrLBckpNNWt2DY
2iywisQwixxW1Vo1Cd/zjgdfLHTRbSVippIhQdjvZYyxtxRyqMUVQp8QSq07
+YXrBTtxKvuYb+Upe+rvkrVDlpVtyY4ztBolSApcu1VB06iZSqZdggC3St8k
5kANU2LHk5U5TsYxg6XeFqlQNBVyQBFe8x9lQRoMs2l1SP2dSSB1tMg/Glom
LUvKkXHLtWTaMNv0w4if/aYPO6VFujtPTd9gQKlohg7b4+T8a9YtZY+ZX57h
4s2KLPNUBjCOfvDq9c+K4BkbgPx2uKgFk2mELB2JHY327AXsKcooNkLyuV5P
TMpDOGC4KFfkjJlLziEQMLgwgzejSpdtC++C40SmCUVpoRLY4Y3x1DEjNO9C
Ey9zbT2ngGuhZtkk2Rj9OG03SfU81cQxW/p2qOO1PuzyJxkIc7wirW1IcezC
DszauAdTcAaZbBcymPaixFwglyTZbF+0X8wwsAuGBr2Ct5dV5YwQEJ1P5q44
biWcgVdTrQrq5GReLHZ3ZPkrc8v61ABap+FoBqRNw+Kkdl2tTglwrbTRoLL2
zRpiQwx1LFMQZYWL4Y7CaBUCnCa6NSGVMyiFXlyO/tCx2D19QDjj28pQCNJH
kEgGSGzdkzCT7AaYlsKgLn1xpErfksHUPyeDl2g24padYDsQIW5WkHM6GTP4
uqs4bZ/pX/u/YOvIfia4Ytziw2SDtYK89gyErEQoPvGNhfwOMzBdMFiJMLMu
mcLSi17oW9rKJoq78kGB+rb3lfGYj8mhsqf8rY02pvSbBVXl9xHob1YR+jhx
KrviEj5vmokVPGLNIvR1vIVQ0rK+LjEpqFmws8+WysS6CuSnVd6qIIWXlTTJ
ER8muLmA7Djc/Swa5vpDizjRQ2nPR5hQXRqCG63Yh94E3fk3C2S3JYureq8Z
tpI89yQl2OsmbLWqVZoWJ3BlzZ7VvrUgvsm6YmfQvrrZzDcUhOdvMnbumZ8s
i3LN8effZhkK8Av3JjHGjlJVr6uM6FNzxlh6REgomhlXHo55IiJZfvLSOyU5
RfqlyNhloJBTZzys8nPdLxH9My5a/aDt9WCRdM9T6wKVLKhgjOvp9AwVDWq0
CiJCC8ghY9zkynJlr64LZ2aU8+vCOlEeI12jkuIa6nx+wxDYtUaL7aw0164Z
NnOAFT8f2v3YwNsopO3OF7hgSlSEaR8Wm9J6Q2OrNzCrau0L0QyvjgsaoOAW
1EPXnB/BTB7suFn98pgTlt/0uOgmX0lw7CFTihZ4EWYzWmofYETPBwnhpFYE
S8+4/G5pp1ASSH0PZQNk72wN8qT70VLwiS2M5xgLJ0N9IjNte8tOmZ9F3gEe
v8oB27URTpBKcLIeufLWp1J6TO4fFy++jNWCdV4IANcrTc4k4RfLjyz1ImHi
TLL9Oi35u0OHltmI/ErnGaRzUWa5SIrFSv41WCSZvct+cOmGl3Y8+FJhH0iw
o9aZ8P48vOfxK60SQzdo17sf/dXd+596XZoGIJtjAMutgGnUpcAy7Pv2PWkV
dJWORC2blaXyuzB8z1WMxjXED3XhWcvvsenPLADqVxC4vqw69txbxCWI92I/
pIxkXZ8XyoeqvotCcCw9SbuAr6zC49845uoDr7/75+j8375GrqAMKkKHNEYo
WL1335NWJ43GCo5hyaqsW9pAPRi4OufgG2MFzOwQQEHeI3sct1J6GeFvjaLE
CizJYsXiBIZamxHxgndI6cSK4y+43cBU1kPWVfJ05DlpHWcWXBGJF/0i44cD
VUFVmyeGjUwlwy7dZq5XFhkQYnJOVcYiPaMI9sN7HX9N2uQlRA/NJNA/QBb7
QxmtvlmG9ouvHnb5B54vfRTMfk3yqHIXTGrgD6+Oecqrldwoaegk/3vzcvrd
yoDqYk9haBY1MnVM17/2mQOWCmBhlEX+9zNfP/KqQ1ff+YyJtBhs0ia2Hpaj
FMtBGCC4rt+TZRCQxO+Z3yHtkNapBZc3E19FKRFL6WN1zNU3PwlGl+mDhPW6
woevvO3pOw46fS2+OlyHWYLbzLJjnqmur5bfvvbZA5aKPpL3sbQgaEwpQ3nn
fbv+6JSlax5JfyuNoxiqw9o43Opgvnbfk6940znY6xqiQuQCav3qFudhrWcS
uBzoPL4g+fqZ9BB6dqfDr4D3egGPecw277iuMXWNlZlvTpAVMmpvPfiM6y8/
ddldRdcmhbLmqB/fIvoW6C+Ep0HaC+NTO1Vye+tFNiLoTotKCNbcgwID5avo
axsgwKSjlKR+cTGlfy0m2gJk1IsWmAZRYNqjSIwo7OuOPvfW+r6RTphGppn5
SzhC+pFiZGoBfp7QQBfVLp8oxcHCVMyWZ66aEgdpxCa2x3TpVwgeOGn0l0hG
wDe8/junrUnPqJgp0vggjO/oxNLVZhWRemjP468B37UzhpihsEUn6YOgYT9e
JdYd+sObgILEYTkdr9lkIgOdjyBL/yL37T4hEDzrgmsftMsE83dnldqs85xu
mDLIVh5/QU6LKRjF+ABY8SpwBNx4+Dk3nS+COztOHCfJTCF2Ew5W66wiVe4E
ge/V7yBmVN+UdN37xG5HXy29NOTv+nF9h9+MHEs4KzVQMJgKvv2BgoZ3fuf0
tcLtKJ9DVynBI1k0PxoT5ScJW9blIr1F8cRCJncbOS2rFlc5qQmdIV5WhTG5
h4tVCqhYylLev8+Jubuc2lMhf0q/x1RwkNMPZtjaPY/YFN0RK297SgSgWZ7i
to6Gm8PVokFkKy+t85VYyEw+dTlfWFbEL5izyCoBg6d8Rw699CqW5nayEjML
LshPpJ+wNI2BC1eatFy6kphXYJaQZpIcQUgfrah3nDrIjhikYHlJzlbkJDWI
ilF8Rv+wB16qQhisfJZ/77Lh0XRhRAvE0+6YyTWLyIC6EQ3qMPcHat2CcaMt
niiJRivHTXe698lX0koWmGPKYYR8NlEwWhYu3fqghY6fXuYwZxyKLHI8iyxO
5wt7XLD8jobdUi0GZeMHp7BHdZjLijXFYXCyqGxAjUaWK2RMGnpxt9HW/ieN
I6FE+pldVPRIbeuGdgYNMsKhArFIwowoZocNWtZznxerR9LNksXe7a5HXy5i
VdnNswgOsZuDot43yjBsyg6ijfJ4r3wDGXS7GqbndAWqVWqGDEb0DE1Xa7Ml
iDVQaMlrJAax9PTL7pYIqXym9GIGPwbYeJkzSbdTwLTRHDLC/jhCYL3pM/Az
Y0qzk2TrXV1sTc4ZrJm7lcFgwvwC+dTBEsIRsl9QptNn6siGxFhFmVXEHARZ
OofQm4q55nV6X2+RojZaC/UDm1SZe+NdDomQw1GVeEYiFi3MNlgzZ1hVpITk
XsQcjbcY1n0WOKhrAr2gxuBQeUgV0kf6bd0J9UqbR2o+UV2swxUDni0KaHna
jXqNZSCSvojMFroOA3WmZu35Gi7C6EkUrRwK9QBNZ7xs657F2rJVLd6CBgV2
Ci951MRc6nib+ovB5eyyCVH4tyc7Cz3/XLOzq8gHMlzuloeMBPR+NCHt3zkv
Ia+mLtgNqNONvaIzS3xkGsqINIRCanl1Vg4thE1WAqbtEJC1xxXJQJmmRSL8
jMA03VU5lwwRpuk4rO9EJPThAsukfD/tX5dM/wBXUL3lDQRZmhOwErlfPuNH
P2o0H5+et+CSZWkTzJXBUp7zHIdsnMInL/5rO1w154RaxQadIQO4BCCYdoJ4
aJVT148A6AGFqiwCw6+MyJ+FJ4MVogvSTqvPGcKIahwwryEGejDpAuryPTN9
/iYOj3HqAN2mE8KoLYkyjFwU/UTNaOqXDctcdSzZEAjpPAEIILWKpLT1Y+0h
kwCmbuPTlZGwqkUVB3QUivynrcnb18DUHHQUK5AGvy7jY2XWxvszkO6a34BA
Kp/E/rmRt1IxjxGEBCwdLWqljWKCsf6q7IdGZIqlBnqy9GbYyLulihHZDWaV
9XKWnVbJ/h6IfzaVayJZ9cFJOzCvM6KSHmCDuMR4YAOjxPbkULJqdrXYjAjf
jBTW1QZ6iMv6J9HWQonwyFZpjMFogZigdIEQQt6Q6v4lSVJaGplLwKPtAxFI
bWWSPitAyjQW48HWriAIZD6ieWVBfJ9gxnUXZNaNhuwv1SyBe5mtYF6Z0LVI
/kO/L2Z2DBXsQO8e0+060uBBZhbeVuVoVdwkTfQw1GwSeKzdRtU7BuYRee1I
g8gUQIgfukXle35XGCoYb5XbttIyFw2L2tXGPFtAy1MdhuTIfOSbOYIeyf1i
swKsVtnOhXCSnDKmJRVHdyHyqYqhnaQ0nxyXkflkF0EnecCb2OkOqIyKAXh8
3G+gOCXPk/Dd5acsXW+VclK4jIRe+t1mwK5WbMiFzr6qEp52mQy3w/lkzL1k
2XXMYdlb2aheffS5tyItxLR3kfMHTD9utgFNoqdON8gZh9I/41PQcbdVLdv5
ZpDSuf1cNKr1dcF/rv4WGfYth5x1g/haHtv92BUiViWRqxF+0irOtCLRTG2x
li76wDB+gKj5BRMqp3h0xDM64BFyIpiLifE6scOnaZHBpgSdUvV6xKzswJsw
p0ypzjUP92wGrazqRKG1FpBAF8GuRZDLbgfcOFzs3aygOSSqgYfWD1rFoS3P
2PDtU6+bVT42LS3ThCPoKXRaVidPFJur9pRqJnFYhFa2gNzlsm05SZ5mPrss
svtumAb96wyyX89/wnbxCKiMvMRTw3OybzM8tlWaA0CjG84IwURydllrt7oU
rGQqx12x7olXP3fgssOvue1pu0Ehqa35LmtuG0Y3xFykanHVfXmCVl1Ahs3a
IU3y5ZFlef0z375YWrVRVtL8rIHwmWIhxlebBCCGy8755i8gYNBFnZCKFtpI
OYBGBqHRGjTkO5IQKIFZNCdDAZ+e7BpsQzykJFMzIlBAfb9wNQlUMrmuoBfJ
poPSYg00oMrFy6gmiSCMkNVmnDQ9fCVkbF4mWeFv2pHhIvNIrjBJZIvVkDJ6
x23IedGNCgLSKjo6CRdrN5AhdVDeKQJSRxODZcs0UgW/6d0jZZnf/Nt9Lkhn
V4++LY19t7C+KK0EToA5XIEq2u80VbM85OoIIgE06V7IxOak6Ltzeayjr0JQ
3ZsqUEfmeGMDL5ConYbaQdepIhjNDWulkT8bMteBMLHf/t3Tr9/i7T+mXa1b
OcDEnfGml0yc5amo3Idz1MoV/n5Z1RmHYbfKRSObGwO1PWuF1xJElaFluB2u
rQh8qnn33TyH1DoXBz1GgXV5YccT3dZL2J7Fos+MK1aJJ21xLV1M6nsEWtGY
CQ1PFL6J6RtBcBs/IkyPzYnSgY77kKDD+lxCWWhFx9IXIDwe0ZhAMRnPHkJq
uH+oR7OWgapbCJG8aKsDCyeSK+gZYYR7IT7FXJfbxFWo241Uv00dQJFjAgVd
xbFRu0FtNVn9DgCo31R0lpKjLJ9ZjyyNYtgeYlrPNKiEZ5VUbXmZ4+SrlfSl
2W1DJH7SJYLZru/L6LlTEQw3ifX6gjrTkFHWJCelNfCCaHItT9d8LUoTwWgl
oE2iDzAb7p7NhK0u5DU9+awkal5ddDzzzmwDnCFRwuHi2cBzgudzs3a0RJWU
3zeIXoeaJcLVT4bMQTx9KLOhfgKSGutiZXtmuphpeh/x1vajkeQSwZI8FJWC
dTNSpv3q57+zTKroMIEBslLbO/JRHtmAUaW8Of/Zj+T8CJClthV9BAEW8/4M
IhbhrZXwzcVbLUtV0e8RbRuYmnxjge2wco9HqFeksJtWVdMUjFP1Eobht5Sf
dvsCQnWGF/FWNZAiQj6xKWgMXkZ2+kXXPfzLLx96OVRrhv1aRFBXr6OGzvJT
j7BNljfL24zk16jTWcV/f4HLtvxOxlzbW/SNw9/WZC8niXplZqQC4dcIEKrj
w7Y30C7m8+ex6iC4mk9U8zuwijqoQXSjOCfxDFtDCfO3mGtKPvv8I8/9JjTD
zbNtI6pRAQ3XJpb/pzO1hQ7CqzO1YQePuUbHTVUGygdmB+WUtAHcKHnP+156
7W15tl27GKMC1Fo5F5yCYPBV6lTQXvRVYv7OOUQ55hOSkmCQoeHAG+7+uYiy
PVsPUt0SmrE1QsjCvQoIhsFZtoCAIWucx2AxL0nTYNG0W3gxoyfVZQiuEIVD
4vEJy+t+U4iQuY5hjcVHy7ohH8IM8jr9KgqrAM+7ylOrErOozVQjIumDH/6h
oi2/9MDTr6Gv0TRucEpXWJjOk3YRRksV09/TbJWgw257cr6+8sDTryLVH0l6
4KmfrFVrXwREzCkMz50sh8XdOU2CD3+VAfGrBa084UHLIGXokipuxzWvTJ9I
shTC2j5D9ROSN8wiMJggLzfv6nVzpux/iNZb4wazmfdb99Nf/OTHV91nmeFz
CpJ7BTpLkmqU01NPUE7Gt6f+M/+OTlB+Lh06bN6KfvJLydM5DMKi9CaX7cB+
OWO73PPYK6dfuPoh15zsrFUOOEyqY9mi8u/PTSmG5MfuYu+FgEKG1SGMmzr/
Qiuzq8oYI7ePmxZ2dA3rmOt/K5COKQC186r2NRozCFKsLUeee2J/kqpHmYNj
GLspMeJoYLKto4Uyxz3ueOjF9D6VDpZHFsirFEsD3wGwtrtZCN+TRUuIsZis
FsSq/c6iUim/le8Jc4P8BtLw0DOS1UXmj3GnGohJSGDYIoJaxxJDcN45Ob0m
FpuGPO/sK++V08Gq7QfLMW7LzWRY2xdXJu2SZgsEY3AO+YxRmiumfYXAAPCY
SfzSaBJ0YeT+I6OFjPc+QwzLH2GFMazjlZKXWbaQPFbEF6j1+iQm89gex66w
czVZBmcUMfIxkMR7igfLk9bPLjxz+T0CUOkzndhnHvvFb+/Z7+RUj2o5Tvvc
fN/z9+578mpslxg8ihnA+laecMHtL3zp4EtlrURAVbaDCQXNx30Ht4hnAIVS
hi2OFMlHhjv6XLKXUGDflm+Qr4wrjz//ttGCzXY2793v5NVlH9PzVaYETdYf
eNpayLHrs637wcWrH0oXEgJIOiF50i++etjyVG2oru9gSEHKgxtcY+R5ILqP
TklBOo3svbA3biBCbl9728CoB8YLtj2zy5FXpn8xMmdGiwhlXNLK5YqTl66n
XBPA7yL7b14wgDcXiy07qz5GGVPnjk+WnZbFvfvbp14nfOepeLdJsEgv47Wr
jV2k4Zy58bplmYGbYHPJaxpkUf4yw9CXO78qq8Dl96S68C2LOMglfYdX3/i9
wZW5wiwLh6VhVQ0v0siAiNYWwGIN5b6YLPPlUzv74LdOSK0250RsSTLMlhbk
0kNjINPS4Sw1odSJCSXXRWcsvwfPiODSr75w0LIdfj01WX1HSMx4V/ne7z7y
rfNPXbb2ETtzwRkG2bfuBNb3MjIWocgR/MPfsj1m12bjV7BgDhBd9Urdvxh6
sCPpjD6529FXWf0ty/CB24ZMS9qL2vDltiwEDJgdxGBJpvz3n9zvojOmEMzO
fHCRzCXaU7/H8qFlLM9/9bDLP/7Mi2/SrWGwBC5f5zAA/HHbSj97/TMHLHUr
YHHZwqqyMP62vyD2ffuceK3ZUhVxP/zc6b3NoQFayJUngyVWYQNM0mYSFwdx
UlMnX7L2UQHar9335KtwzYhnR2s8qB8MUoC9AKjRGZuCKTWnbLwXNjETSbHp
S/lPsve1iWT7KsdWjsEW5SliJt3+3dNvMDsG2RhkRiynbrRolypwFO6+bif2
lwUVaRDiCMnoTRMCO9CtEGAiq62N4BRs4Diuug+RVw6z8BikMU+WVZANkmiu
XIIHyJpvl19m2RTXHnfebReddfm9SYjHi6hVPisvZ0rf0ys8SQNI8Cx1jYZN
rNMEo6juKXDVlkjULJsp94t0h1RmbPnf0uIgxFvgLuQm6KJyYmTVkmdri7Jr
8j3L5sRbOcGu5GI47+yr7j33R1f9VCQBKv7cFNEpshaI4Y4DlSpiCSeJb5Ll
aUT4SkMcL5uOWc+jZOT6aklhc/RjRE6stlNhSX5z68FnXm8BAua+BQYXu6zL
iCAU4f5rQDBPmWO1LXBSPGSvl7uPPfvSm1MjukFOmpwu1ikWupZ3qlVmGjdc
o7cgAME0LrOq/ntGrh3Lma3Ou1+Rd3j1737vALqorLlM592/fStF4aBCB1kZ
FpIBQgaNO+81OiKDNlZ7oyuwm4v5Wfa8/aEXHLordLE0FTiWtYsgrAGYhfK5
NBeT129RJmN6TP6vhqhNZYlCr8sbg8jmNJ2GCciOD+WMUTt5KvkkB9Zz6dPm
b10k38lUVPLtIFYVPsECy8UTAzhvRq+gXnkDZBuoNoCsizxCJT7Lfk1+quS9
yovZQFnGwBjzxmcZa5gI2/+1plmjRYDcwIFaO793s07FqmntsbYqjD6DEUFB
i00nLtDhBJtOTVbBCzQ1lnSUQcbc0WdOdmNh6CFf1RQ8cydZciPjBChdBRic
VWQ6dhNWg0xmLFk/4moxfiKauJnDER3riW0vIS7lsA/ZIg438wgSMgtV0eyL
PkUg/Dc7yRcjv2gQC+FtXDW3ggXLOrG6y2dJCCHzTV6PyReWH4QJqHLPNlU7
WbbVOV4YM1Kjo1rsRwXm50Idv+iq92kosQNSKvhzB8l5ziA0YKInwDPyH//5
X6aK7dyxfs1Vl82kJ7chW0gKcx3EWFaElsTJEOSOX3MkDBUBMHj1GeVhDrB8
V8zpZg3oFxD12gPcTqwHqtUdYG4iCT8O4G0Dl8Z2TTVnuMXNI+gz0XEXGhjF
wJgWS9ir6IwAANu8Sawnt17NsKeFwzD09o03Cji7A84ooi8zM9LMH3BWthWv
9ZABFfxjtR9V6XOabT6ZA+Y2khRU2VtzYRvwaf4G+sZEDGydu2BdwDXQYW5X
MAas92as+0I5E5Wd2gh8v63S/2bzMh/7s/wnrH2PfPO4a+xez8xKaI4lk4CQ
R7+lXIgMuiNHc7blcVaHZnUNfp4myyZ5PJrRavYTQNKZhlbirZJklGfaCK4J
OEkzyuicF6FVZYQPEm2b7wZNFH/zPfmpZJWC2rqzrqwIBGjbEgDRWYYxtEpF
N2t7nwGhb7s3/+mff/WFgy4x95EeFrwYu1drnBz+3gJJoY5Qf2dRtuyi6Avh
YDtlQBfqPhSdUJDnVqlHU5WFiOt2b0+RSq+A1EMbfIDzCGrn2GLoRmvrD7Vl
7ZoVmV4NB5EmvKYPYDJT4aD85xfyJWWJ3JvDAo7KDIaGozwjt4W/bENG5QEL
7lgtnO2GiZ3GbUKLRJY1XPXvkreWFN0m5pBZloI4VoXhVjHM/XFP73LUVccv
v+kxCJpHT8HmROhZC2vmW1Yc/HyBSN+8yjWUzjccFvfl5nB60wBRrDJTJbIi
co+3CCqjfDKdBmlSyWdjXcE96QJIHo1QV/aR9QeFkginPWAl+l2YRMIRYfVD
C4nY9ZBpTpTdcdONnRU4IX5F3aKMz9N0e8iYe8hx1XgLFsPJFtqctuuoI4bq
4pWaasmGPbecX9l4IcK/7qif3KIOM9L6kuZDBMRUaLOUbHMxmWirVAeNVCqE
NicvUYMYsdIlQL8fVGLVMh1BruLKijGfeWQ5FTCDo7JVVDdTPBANqDn27Rym
aSh0WozZBGuQLKnKQd3rx2a9hCwpjMLztZT8pk75EAZ8cW0aQ4Iyi6Kj1yJ8
XjWcwaA/9O9uaaIxOHQ8QakqDTM7pOdK8RQnoXc3teZFfXLqZxu+feqa4BBk
vghoDeF5SfMJoDA/93/L0Pm5Ap2ujcGH5MyBzMOTMWQgZbotXfOIpCBgUoGZ
Pww9IaHY4QcyJC3NQ16VBFl9U2aaWxm1CmG45kCxjCMWXNcrWsDoG2Lpbjrz
kJcApUWuoJm/ZawIOqkIDmdH70/h6G5WdIY50eVvXQgQwhZrUMgw2ayXpAo1
Gsz8UITgwhuP2QGaU5BOhNoqw0w8WGIL0y4MRJvlfNlWu3RCTM7FptcRdDMi
o6p25QnyJBvwZgQjesmSgLqqiVQDyrE2fdCnxlxp7tRi29VPJIA1mVL0xPJ/
eXZJ/mEN2tltWK/gJJGTUTx6UTiqRuRAUIVhRDeyqeIgtz9vVY6w7b+McILL
eD7FgyZv5kKVsZo9YWnjVuwu408pZ//yr//R5nhkBfebkcWdV77nad/M8lT4
/Ez5uj8G3Ll+AFj4J4PIgOQ0T4HLzRIpcudFK+dDC+hsTc6NziZc8rUsy3x8
RiFt+ksRtKYbZXWyM+OWGGoNd1YVrD4zKEiIarjlvZCcNwaio3E907sZfcYw
ed7CMj1XyPpbku8eoUPznSyyaxi3mBxTFsKArCuRGnGdy8/VHDDNFyrFKX7T
8FAAE4aimuNq1w0JuksbIODYja63UjO2kEAjkP1JQk2ao56ecKvoJSgDVGie
T9QgM4OevW6izSxbesjqO59JIsEiXCpywQ4Aca3b2lpXUkwECnDOGrMz9bCY
iCvLUdGYk4152emXbpB5Vn7xJJ2qNcxrJpInd/y0bGBJifTedcBpa2xK4ZKl
TDB2KsXCLTKWRA97p2ZxGKjvTXWeH2PbXlhe7re5+eW4esENM0B3yAj66fhY
RNBAHQhI43wz+VUp4iJJ1E/vetRVzjXQW4bhfhhmiTI/AXRstzJa+T6Ykmkr
kcq+j8x6ZhxCmho70xVRIeZeBEdNH/ntArKyfWSaI+WEuCOWnaQRcoLnlymj
M4i9BvLP/RDrI/e48+GXHv/G0Ven6S0uU/ZgLWPT1OdJTckD3zrhWlRPliol
w4EdCF4EfXWwQ7t8LyCobnTChVOX3fX4N45ZUQyTCAMFPOFi4NCqDxfglP6H
ZdswEMsEIlBzMIgDAhl3ukBXoed2+t7yDz3/ylv0+LHzBNGlqtuib77lMTFj
tXO7yrggS+rJByICwM/Vx557KzzF71GmR3RssrXnn33FPZbbCfSIv/7cgcuS
XM8oT0C3PbThkl8LGZaBdU01C/X2lY7nuYcwc3d8gHh44XKbKITzqCj5qYiS
mAUW+ACZlMwtaCaL99BeJ1wr5gB+P9g9DCWhOLtyCYSMHXlvmhS06LVwqnyP
7fdMgkyMYoPxexcPfaPz8WB09SSY31YDrF8lVf7UWW0XVtwbJtjhtAIN2foD
T1uz+/qHX7aIQNBcMHkXHH2etEKSI5cWaXqRXVnzqnog3OyBR6YKqVGikYCN
ahqfftHqh4QY1q6g0ECWBFGKoEMWoCBi2pwuZgPjKQ/uNGbRLyAANaOI1d37
n7Im4S3rX6CftTNHptGDg6m+UxDmnAiHoOo90V/3m+k9cgbTmZIk1jVH/+QW
ENNAWqAqUoryHtnzuJXmZNS8RimR8WujfhXTOuRzXSoxHaUqCC6xPNo+g0gY
mFGd8hvDpJnrElSc6w+dcbBR/iLj5CcJSMCaO61fk+yw5jkh+8BZF6x6MEln
k0g2w8lsYg+Gpkqt2DDAc4L0ENnGWTIdFAM4u2SlhG2T9By12yKs/hL7JIWT
ovjFKphY/D9wFbCE+FHymWbFms9KRicT1J+z+p9wcNV5YQ0GBPJkwksIhDFq
EdXoNiJTCNAdAtkKaiJcN1CBQ9RLwsCv5C74zojZb34lqZixumuLGrQXY6Yt
Y8Co1f1mi8iEZORzy2DceaUTYSU+AUMZe94CIl8qijZYO8DMb9hHPhutYDQ4
/oAEgtmlpHokRn4gp6judk+8uu7UtlNd1dglE1gbwMnhPWXZ2oeD31EToWVY
6N2ANodePqZ6WVb7Q7945S275vUXqWhjiJ0gkAMlnG0eTqAZrVPDGC1a8O8w
AgpF1E9EOEJEDSzKzCsOoS8kMkBurXD0M6KO1ER78m/zA8gxsEwjgUEZAzjq
jDhMPm4QaQBvidtqYwTrmD4HEje/HTEqTai99cASK5KEFrtWoywzZNQSUHzv
KAPEXR7nYjwt7HmajmqcMCZfhlis+oLZWKrgPYUaxWe4iHYbPwLru86oa5i2
GibgqkFiW3GplZF32emDRoCuEkq0hHn8oabMBuhbx2qSmRhk8WtiBEM+CXu4
0EehOGMGSYhUdqGHCQ51FWQjjUr/mhUFHnMwGJ9sgFhG9AGOG7dONPIQbms6
UxlvTzb4MAcDAxgeyFPyOrNc0E1ZeC88iSo4R4D6Wj6LNdzeUSI42ICQDZlh
VReHy1cW12btEJVP3VWiWjrYv4q0zDwJYv7nGWn/tixtpHKrSJUHKhXarHkV
5FOZUxqYnrUQvs44O4hopF6EJ7/40M9eF0HxW76aGjIpPFMD5GhCZjCSLowV
beGJJDovUhRM2wgH6wU4QT1zkvUWq4gd0mGFrC23TcfJ4YVbEdamMmZnfSSp
iPPcU/MzmjX57vyT4IIEd5HDgx6sgJMARUAO0kbowOAUsiAcR3T0wf3IIHbM
hS5bVLWyxU6orvWKpCrIhlvJWJFeNrv0hC7tj4LoAfeTxSF9jzcjU4TkJrcy
WyW5qos1S2qPGaFxAz2NIgf2LGbLQjNkPw2LiZRXvHryLx8iCyA2C5jJSqTV
0rxnlD3zFrnwZOAKSVd4V4Du7JURFdJrDcjk382CIphYNUYkbagIPfpUJbsI
JCnMcyHZGtbrRoH2452BNvAJqkiHm6ga8jWNBBjfDgKMvHnrokoEbaX8+/JT
lq0PuU5jRfj8ishy4icIvk10XgnGgMewNljw0AXU1T3rTQNuVcdR/V4wPMfJ
2YVsQDwwrP5pkBwUKIb2IbIyOTVqg4bu7ayGWO4SqSnnHBajBO6GCKbAHN2t
y9BXq5WCxdYqzUXNdQQFwrGaAjmBWO01a7che+lewhlFDrwwBZpR+x1J060M
h7/04M9el4WFdCsXrenk5yxLiR1k1pOHcSTrBdTU+NR3fyYthhgGD5DhLO54
clJCmVCp2JB6yCgh5VsWwZRaPqODQbBb2Vy2M+9u1Yx2zTr9NXhuZhdsFeiy
e6QSt9cFD3bnS6gN2yWjMwOSBYEJw8Rlpy67a/91U6LMCAUgwdz96sz4/bOM
yR+Logs8xoTcEIq73YpT47Mm0GB+ZnBk+n0wA3P/aReveeitj+19gXRm8kje
WMF87B7CcHCiCKaDBavFg3iax4eqpotpuAoawXaZjN9LGzlExtJbxE++Z+LH
WtazIUKhs98chxxMhshTYHtrt2I4qSz4zxgbWG5a5884PYeiQkBOSEn3s8oS
LYc6InG8zKg7sQ52srSOsoCgWR1RJwgaV+lT6YXTOwt1WJjBMti79z/1uoPW
3vUc5T/X9zKVF1CKnV/I7PMb/gTRIOCukrwEoUKgTodBMrfFnQVBni0hyCNW
3PYUHR+cUneTTZR18axF5XjBy5QXUM0h46xytyAR1Y9MGj+j7oa19ROsIQ7z
lRpfNjtnY2WospyP7XHsylsPOevGtEVziMwqFAcrh2lVheKPxtXBjgCBlrFz
xW8bCQgzN5k9tEVRMkr2ef2LOx5y6dIzpmaujDJGGm2JwsD777IG5DPICcLY
IGBivo0VECc8YpOd7DwrEhSM1f0sWXWCiPlYmQpGSYbKIyseiGY42a1sV8gK
pEVmmUCMwZClmTLDOH82gJ8xahEFrOCEYt1CWBMHhsKgZit++4E6Mc+WwA7a
cI3AxIUVEZgxBI2TIwUc037f088k+Vc+S2u0GVnHLuRWTFyZMRy8SZUoAQL3
ffOOh168f+8TV5mTlLHWVvWu6bFLyH4BkAn9VzqnzFs9VKZnTCa0lzqYLNg8
apIMkbWLAC4gmZ1dBxmxLjvj0BDc7vZQlhbcAGptHn3VLU88+s3jVppLeDZB
ic2ImPWStXxPRt+PkHn1luXziGKXtJyawQR2xDkoGJGEUuDb6ZNHnHnhqock
tU4aBiY8Gy1LbGWsfqqqaCy40h32ppeh1IVTIcWj2h7Il4iQqQtOEr+bdRQR
iU4MfolPkCaCm6sLNXoI0Wj3FzzTdtECDtxwRBlJIyt/YBavFprKZ2edf+0D
NfEJ5Dk5EgF7Q53sG1wirAhzOhm++iKxnuToq295MglTyZWaJDg5nWAslDK7
/IyWEfsNcqSjIumT72z35tv/Yrb2QnLuxn1gLF+QeYPYjgBNuYOrMoOZwhTX
gPtGBwh8KSIGx1pG2IG6OZn9u+prTxSn+9DMBzBeRlonw9Su2FlkkKy6Z045
1V5vwGL5VbomnJw2buMSi9UQoHz5nHNX3l/n1M4gJ3SzspB+jwL0cJRReP1w
1DoIr6EYdaRM0w0s5RMyR41lX9SUDQ5YKsDh7pld6/2YECY789cvvv72NHV1
yDdc3qCTj9/CITvWx6s7HUBuBtFGjFewpyyhH/FRovQ6t6HzIseQO6PPCIaO
jikYqVX+rT2HqSh9nQ3frkVJ6hiz7mLyDMbpxLKfIGtMtlTIlfe44+EXZ5Mz
paDJqrfCq7uAa4iea3D6tIvXPPzgt064xnKCiu06m2DjDIKrkJ/nRtYImf8I
EVXt9of5yhjSWUAQdJxIDcvxY8sNUuhXjhlxrcHd2bDh11UpjGl4uOCYH44l
tsTlMSlZIZvZ6Jidxny7kFPiyZAsj0/5JWsP6wwyyoo0Ha7zjuvmweiSNxlu
owq4XVibHUc1Lmi1ZQt+/8//1pa0O51s72ZE6pjJkmPe0/6mM/4GxnEWQYGa
Rksp8pAlq+8dI1ijXJjWS0KeYWlkaLCxYvXBor2Q3WOEKBtIeagyCelCEbLh
2HIY8r+8dABC456do9Z5cr+csfweywdn7flmkhMPV3I3XoBt2uFOXyNDFop2
28hmASU3O5eQ1zAani6+XmNoSf6vntwl278DUyGBqGjuMvJhhsh6OElU0AlJ
axqf4tedTY4mQ2aIYTgyDxEA6XwQmsE4aVWhnflk38bKgtYcp8Gh3WUzguFQ
zQtSsdpuX6ECm5GPjpT1qDgC++xoHb/8pseB84yRN5De525XGMnLGDl0wCON
3tcJMtCKPz6d97nl51hEwVJGWBPq6t5uoNZHzo6SqyKjD8sGLhedRUR+mPrN
B3Xah4hYgv5zslPVdcHY6tZgBvLpnfkL+mxUCQdDlpNvqWjGYiB/RTcIu55B
rgny1unbCMtU5IqB5qJ+vWdRrAqnEfdZDXtwjYwWwb7kB5duuOOg09dCphzJ
RIv7pzOsGUDgwuyWpD7yhOU3Pn7fvietSm8fINCgOB0u1j2dZx1WR+NfNRkM
s7NnEhRhxNksMWiAfDaTnCbo8+yKUYdYc1HWqZRxrkxjV7RvaSCQOON4BEk8
dbZHp/V0u2Ve2cc6tzeAFkt67GJZB302k5xzkHxPQdSFq+lZegkwMkvBOrW9
/Yd3Xtrx4MvEqrQhssQPkoTdixQz9hnJ/QtuWzjvLNEunNl5ZThuyfcS4B4o
oubp/3qOzRq17mOMlmpmWR13GlWU+eZFHi0axpMTNycLxNS0wvgH859sTRDG
Razks3ReWP4PJDZZZrSH0ysCxwSYjMVe3WEyTLtFeH4bc7ewekdoMIeUzOME
LqBPNDLWzOqMDmQffGWSWLAID2RBebBQRcAgXyIC8j5GIziLYAJMEis5WJ4c
TFI+P2LlbU8JBLM42mKCIEymq0Io+VcipUyy0ItpQ9g+ulZtAWzgEuCGN+uN
1BnNm2F9W7Hnuy0YMql7JSFUUkQ0ZmnEg+V7fhNlZaGsgwpTWSyipNjCmgOH
ibNUyR4iQQCTjtCzIpInrc/ULCSS1GycASOZ5spscd7e1SCls0ixIHbkuYEr
rSNJdcOW38v2dEnXC0CkyXKWIWABTvnUh1guapp+bicP+1k48oKvzz0T3Tgf
hon8bB6hGG8r4eDkMzvtA+WVNXIHrtkJgm0kEcoZGQbjgnXMTNNCJOPesQzk
On/Pl4MRKqjntG4TMk4kC/zsLhqzO0s+u5eEnEFWNQlBR5cVJcO21rAiMz4F
ZoZDHVUdSakZoFkiqsYHA6Xm1CcGDCrNwchnSU+sOBZo/eWzTz3x/N/Z4YFC
HVLDGx1jrMKdFUMx3J5VjoRtjuP3QNl0C+cDJ8QMsjWzCVgPlYk7WJenTBTZ
9oRC1l6MxaTmkiM70nkEjHSTGdvhXAJEV9VutC0iZsLLbxLwMW6N7YpUma5F
uwakpU4yDUOuWErtaI+UVfXd1FCNeXPMoTxEELoCHHBK9Vs4HTsoTCvBjSx2
jToVT4ol5JsAyhUDCKeaYHnqi/xlzIhWKH5/RH80FY22Py3KRBErz+LvKQMy
MltPJ6yEOe2Dbi9JRnJD3BrKYFm7GYNIUkFyz5zew+ibWKoZowiDOJNLfU8c
PlKHh89Y1sB0gkaar1GTW8inPpVRMjUYmxu5cF3FWhJI+PSTAA5HPw2sMpbZ
hIuJSLFLnw5H+Coe3/2YFRbwZkmdLPuElRuyGEyTYLKujnRalNQs5K6z9Crz
8RcG3Rn+vyYJBEIYzeWWFRfpEINvkAVnWcRK30uCvvEzlsDThVs+fDa7s7CG
M9woZ0eW/5dfOfRySGYMMqyN3sJUQH6Zm5IZynAsnctnhMiuxvVqh3GXRJPg
YAJCP/lMqO2ElULfFDgHx8tX5S3SCvyiM5ffPVkk2DEY+oy2kVOw0BB06q3z
vsJhy5ePaX/dGY2xM4DuZBN3XA6KRfsw+y1IsipkohlDexuZGkYczWkATR5C
8MMKp31K08vSeaCjarcRW+E2g6S1cjqrG7wMeRkZk4pWuIMPlyWtXV9BVBnx
jTKA49UWS0V0COFqqI8JLW96ydlWYQm3ZkVckrfSRM4EGfaKEy68XahApf+N
KY6N5lkzlozpjobM6FUUkd4m6w4760bgreu3G6gXR6fRpupAApcMarV4Kwio
7ry7/3SJg36FVqy1JRywSQfPrmJBakbIb3s6S6VD52RniA3P0mV/bqfvXeF5
PGBOuZSzbnFdgufMkRIO9kQ5vB6gB6vf4wbqc6sdvF2STALQao6MUHvfePg5
N5XkyIoeW9OJxU3+7M5HXGmuztkEZZsF+tFnzDJCFGCD+dBDFlIB9n0FvLCR
k00I6ZDkGO5y9+OvyOce1QW3dY1EwWE1UvSErWvVJSd2ClSaA3nHkStue0r2
2uuiZ5R31rm9AdXmEFRTOQ7np5VrK/2+Ax7fuqloCON0yL9kbm3GzKCNP2TZ
pEm9RVowiy98H6pRXO+xtFCIVbu/IEcIhsNxaGUdefkpS9fblsgYpNFuehaL
a044OrJyTJaqycxUdR3YIQ5aUX00Zg3Jd/a+9f4XkiACSDggziFAOlqEzYDU
r9DqJSUMW9RTHCI/zKMMglelyrB4aVwv/SzoQQDRupi0ncsoM+PUDDjmwgm5
olsTkMzS09aejl38gt7UfQ5EPqDn6zxR5m01yWXpIKFmYX48JWZVpb0HItUK
VVMruU9qKaIDwqy4B+Cq6srmGw79FuQzpoC2z/j6VwVfMTMmsKgp74wM8eUv
HHSJEMXL55Ap4dA6M84AYKjfsttEHYt0I0FLsL4Utg5Zvf6ZJ6YuAabeAPV8
gQHhkK0MyHiqethmTSjPYs2sBz2r/rJUh6ToGTkl47ZR155Qw9+3z0mrkgyx
6BDk4su+4TsYKSaJtw6jK1Wes/SMy+5+eK/jr7GbWUhPZ8G9cSI3rF85C7mx
zq0qSEE2WyHy4THH+/c5cZVk208QCGKQOlaWS3pYLT956fppLH2iQRRSCb/M
Kk+pCTaDhThGRqAu79oCte9AF9U6nBvkQ1nwEHeQ0wZq8jxxZ0ty6MAV5zyD
XVwRLB0+MPToKgRHEqixturkLkG8sJJ5WQJFD1ZxAIK6TTHeDlkydJmSPwYo
1B2bMtYMUndsq2rJt2X7sOw9MjQ1TjWd8RMPPPbAfZ866FNfvv2B21U42wA1
kO8Ok99p3MbERRhBpP/teNnbuqwi/Jyl06go2RVUfo9pa4owwU+hZq1h+p17
HXXm60t2fl96BZjNLlIVEiKNcRjeOF9PO4YskNZlluFEj8UVQvAMzD86rEOW
X3f9K3++y1+n57Fyb63XNLfH5acuu0u6y/eQ4YyVFfG9rfzoQEPaDI4mOddk
auGAbdNxCZpmw+LhE8x892//4Y+UdgtsLpfyoc5LHFy5rLP9LDLe/vK8f9j2
y+/d4/q7bsIUo7qQOzjUFEzkty/vsNsH7tn1yJP8ssVypBVP97j+jjt+u/hr
fwn7kVzJ0kxAakTlvZrBUWcms2m3u3NBLzTQC4G/hjx/dzZkxdUIjgBAEF2C
4NfoJ9sx3lltsG6K8tu3t/zCDjCnNg4eUF5+pZ5BXs3YAMCV4xaqKr7azWwz
ZWAHPJdIQjREJjZWzo6FB+QtYaIs7WCyvFbk44Crb16DnCiWJy9CMVSw0524
YE944Y8ePRNDC5yw/QqKJz+/yXzQfs9vkFWaW46s11MxU36Q/DarJs0+6Z/+
zjvv/Ord+727Ne130/5u68O23vKNN95Qd1vTehn6sQBiY5WBEfr7Vs7LMoeP
3VDgakDwfKDTo+ygaL42aunvWZujypsFVKIDGD760HMvvF6/ogs7DdESfMGU
0TdAni6CDAfMq02dtCH0GJGaQX5Gug0QmNvcnsznYNgcVDI6BMLOE0VGJUt+
Ar67IfOEd5qb3SS26S5Ckhpy6yFn3iAbLW9892/fStYfpD+6vmLpBhrdYI/3
yiTmR4d+1u6F6uuythAhqQL88d42wnf8I089+wLGuuF651ewuRuVPW+6HBy6
GbyH8dbSabVd5apKDWG1ioWTPoN1hmJurw63Idu6/i5TrVQeVmUQChT+DMgr
dFcw40Wd6PIMxkmm0hbinq3sjq49aWHqA13eAxkSlXs5+u3VopB3nHDpmvv/
ZfKri/A5oATd4Ji10SXyeg0L7wEPXa0MCQ9aYnu4/MTzb/r9gq9viY8HPeim
MVQUyUTXHvnjmy/44RX3dpMFvR7Wtynbk8EuP50XNOBR51557n817mhM/Xzq
/7007bo9TtjDysLkECCgW0cPOM8j9e8f+PR3voxkUvItNBag34jDRd6hATqU
qb/Y8qpcYwsrT3YcicuadkPvtSGZbeoT+priHwf1gkR8A12WK798ONy0Wvlq
63HDVo64eibmRuZseDQazzzoGadqSW6IwS7Dg6Q+v8zlHR5FIbczi3DZZbqM
dT0y8mYoHzLY7DRV05/bcIG6eeejdxUkfnSP41acc+5KX02zi9idDqr0XUcq
QrFROJKxBjlqL4c7WW+X1WZ0dY2yOq5Uss021GlV6nRcxqM9d6My2Qx+j1Yk
11K9NmRX2k5DMYNmrMyiYldp2urTR7DWbErpXR8ZW3lGCdy38UW3Q4uqkVAI
82f0lYMv07OsumLzTXT5MasJyJ81ahiwSbHAUjeUgcI1eVzSZZ3zxNMz/nf/
7f6MDTsetpMdDO83IP+a2eWd0KHQa8wrRYgEACw/Vp77f/pu77fnrtvlmF0x
ou/jVktOgkXPf+XQ5ZIY4gGdni5jzIqsUQfDbCu6LWlQhY2n37/X+1vT3pnW
0v/3+nZ7bScatOTZ5TlZ5Xa5oLT99I9zv7b5Dr96/U2WnwNkFO6pzvsy1mkE
6HQyMhpLMJXnQKm430aULbjmwe3pPtcxspEDUd8A+1rHx+Q/DwcHYKuqDQKN
CJeYgU6PNBRSUQuJADrCwKezkRFCQpirCA3DmBvEjE4FBgMSe2KPPG5arz0Q
1WAwe4FuxrgtLYXMYDM+ss8eaXGqbfjK/N8zdlyw84aHfm4N1nRrMbKE02MB
dHXAskX6/INPvZREQFcqREImiULr3STJCiLB0v5VdDo9xpQYcvfaEEmjz41I
aPQhQVGYh7GV797QhGz+lm/97n8k7zUQ6da5QrZQ3WSHlYvlPWvzrNge6k9C
LHEj2wB30pr6ilBPdXwM8Ph7fdoo0fMd8NEeo1c80tCkET5rtdl7QdM2u79l
IJ5r8/eq9IV0pHF+IP5l9lcWnn/mJbeVlDeoXtzIIqU6dixxg4r+muYpbH4f
H4sc+8NW3vwwRqeDAZD3YUD2QSj965heNxnUIF3wvlQwsrHFzkap+Wj/7KWX
Xnpr8xM2T+/SN/7b2CVjn73nnnvggDREos0isQ0Bzfbe53/5wv81eeT8jo/p
IUgCGT41GTcZ1oA874vr79ogqIs5xLZuUClW5/cZU0FVcL/RybMkxs66bOPP
Uw8kHuSQFtLK9wpbjc6LkR678y233pGAjbHaQI6452QOb+IwGa+xdqrEGLcM
sb/s6y63bXhQHjutt+PM6RDtbKRXjRbFdeY5y9bWz/vm2htvSRlw25SpvL3g
2IUwlaa9F40yv6iw2yg0efdD1Oi+VOeefPYlaQeZW3FOeV5VSrPxpe9iPQVV
OLiJz4NQmpwXw6Be8sh5m/jIQTJEXYYQpYA69SMuv/b2eisPWb5iTQqsTi/n
tkqVSCbtyiN+sLyjWLHsgew6GUSHQNha0FXTNhUIKq2c1Cdzs2zqNgNRAVqy
ECfyTIXRTXwkMwPzEAfRPKlNfr/eNv+07Q8JwRWPC+Sbsuf1y/O+c9U1azEY
iZyb7gWb+NPmHoiFYUy1Fmd8nWyc/2vqHaedc+GVoYkMBFg9K4Q4cyxoeuc+
R1/4zszD51LxVS9xyDFoFfNxIyDkj5kTVPpON9988//uv6Yfv96a9ti0nxz9
46PhYKa4t2EgtkQEUmr58wM77Xvc/9u7si+PvxGepEdLUA5uza7MZ3QcUL88
5t4dv7vXL7986OWerw5hMndjV50l7YLbv4lzZVTaQNJWlyts9HlZqoYwnhNO
ayvHoQ3IOq9Aeuy1+3z/oLTxUC3q9wjoY1eXr210mNDQtApCer2iGR3NAtM/
OfnMC+WxJqtk5ixX2lc3rQD4Ou745ndPrp+3ds/jDkxnZOvyvTUHHnnG/9e7
og+/d96R5xyVYqB6a0bLAac1myj0jQjHk5/Ye9cEW/0EMklen/xnz2Irwyoq
ITWj9tNs4uY1a2pM+dSHNf9PktfoCGCkeeBXWnXQ0WfWu3bHzt/bJwkmFNrX
UTb5309/fvcjO0oQuwOosg4Zz4CA8r+96qF3E+cM1aey9lCjGHwvG9tWvTvU
NISMa3xTjyWzFvPqDaL0hLh8q7hKTc9t9D0VB7RxNTbJEe489CY+0hJmZEHT
AgKxjTtTxjdxeMApiMU5jMSTVYH0bHzINLUXYnUug2BxVSxt6fn/p29lX8dp
zOuOTJuqoqL2XnrIWYe0pj09LX79j9Me/ch+HwF5CVlr8nZbMRV0XADZ/isO
OO078ljX4vBEfYLMA9KW/XjP7D6wf1r0+fd8/7IbHrNjh95322kkXJdnNjZx
ruAE9CRiUIt1nuVGn5d/Oxjcv62S8WPaOwn0rO7P/NWf7/KXyU5l9TlqtMh7
kEFtU4fZR3Ra1UAufQ5FKE/+7b47yTML8LZNO/JOABY4jIGz6jc77PTZ+nmv
LdnpvenWlJPMnaFGfr9ut6P3rr//s7/e64OZZjh/HyN9vuST5Z3u0ervvk5/
2OwzS9L3+gic6qGsEy/sWWx5WIkAK9VtbuL2NaLQS9eXw1bd+cyCP0lIY3IW
FM25BxgyNV58/zd2rFf/je2+/BdphRlXoqL3y+/b7YvVWJo1NIRM0rxbodd5
fbd2t0vPJs6XsY6WypZNfQrw0vi1FFLa63rWjT6P2Yb5fAyiAYNCE4yYjciw
v2ek6FE/hyoBJB1h489Th4+lJ5jxyChfxv60pQ3QA7rakRmqxirmHvaOASZo
RrQmU4diT4+EDLcrvw6n++W/2PWv0kYoIIQkv1ad0LfxRYhaWj6WP9sX5f9/
bfvdth/+93//d9gu1wCW+piaklimJaMEnfqLPTsbHv342Ei8V7YzTVQV1uMf
3vfD9dD+MH/HRbtseDi0lbBLG2RxO7GRSc3AJs4W8nedfKSDDhzbxEcyOpsc
4+81gyUJ8uzOz/vjvC9u/oUHn34ZhTgke1TpRMjhutHxsTRfoHeR6ZpdCwRF
b2/x+ffIY3Vz6ZSDdwrK/jxvSw0tUYP1EP/nnC9s9vGnnn89fUM7kBkvGF5p
bXo6joF/3PyrWx5zxY3Jvkbfhi3N3DIMd871dV6p/zX90/N9WowkTQ9l0C1t
oh9Xh7VkBYvejYfmnyRgfdLk6r59TrxWioPlKMz/0+QzpJ3pRofsHQgc/s/5
n1qMm//OrM8ufPfrb/wTakGWtfPmtl/6i2osARUc1NV3gfoJbUjUpxudH2jl
quFOI9AQbNKueZ/Rqk1iOI1DmzgyxjGnXcBDmBXxEleifxPfU1GaJXRgvI5/
2riTWWi3MiAGDFA+uomPhFxYdOk1CsJXtTxtmrPb3kHsyFqQCi6BRFfNHtsc
2fHpfX+ct+OiNUecfb1FbFVeQ1kH4GkXgAnjzEaphd0a//Vf//Xa9jttn1+Z
v/7Glkdvuf1rr+F+NWz8shp2Z03pyunPnPa1p+Mr+uwVVpfBWtdCce9+N937
7L/N+PiCadkv0PvWoqMWvedXr7ySvgFFA24T9kfdYrgzuImTZsSl/eUQ1upv
o8/Lvx3AQ4hTtfKM2Z0f99bmRy6qhxfyz6CpYH1D3ejwWJgXyig8LXukPO+3
23x1241MlzGqp3PgHYFndH5emG9up+itpIxetrN8/f/svXe8XlWVN34/9yn3
ufem915oIjozOo5l7KKMIkUEFZAuSAfpTTpBSiAJJCSEQEJCSAghBQIESAgQ
ehekgwQEKUoRyzDIzDy/+91nfdde+9x1nvvE8X1ffzPzRyD35px19l579b1K
7aWxR477xM8fewJPWCbmiQ6Lq9ESqlKT2PdakWTeqk70IoxKMW0lwry4FX6z
tFW21iQOvzVIlpIW9+JPA/rqDjLov5gu3ODsE+yYZsX5sGR4d+PvbmLerdjv
qv7JTqfTRmCspLPFXNxLi4dqWQvoTS0MM7EzCP8GJ2XCe5op6tlVtSbR6pl2
mXXabvPrLVsnBnMDAk2+Yya8WF/Ca+nR7NJNd2AWoKgT5kVBO5uEK45fQZ6M
UyhZSe4SGx2+5LniXWAA4LHtXHFpEAztcXd0xXOgqwANgZKv7B2qDJIdj8rQ
Zg8rVccoaUJpk338zSHnDvnS2rVrDflWrZtPkwuYkSY8buvfcuEnyvwE4zNm
roMK8ExYh45YrFc6YO7iW14cf8gGxH+y0t4RRq6SMhmrAcXS2eTmPXvS5PRr
5+B+TcKTwWpWziQ9rE0z2mbXlpTMGyvEttYsXl5bArKeu9vqHSnaege912u3
qdVQiasG9oLvMrBJeNLJlY1gmZpSTGa6O8tomlEzItJLfsZ7M5hKIlZiMPCW
ge97ZNrmYMUrQC7eVgov6k7xYPIlC4PX77gSO0GMsiTrp6NJeF5Dx+J3VSQw
Y2WEo/gyuRd2TAuboFyRMFhxI1qY8qbRAZlJekxKNcG2hFzamkQFm7x09zZq
Fj3230kLpSY/YUb4aDqKMYE17ldrEl5uvh0jyzYUkFxZNEsVZrCPTa3z5sHK
mfFeqtGZ5UYa0rDzemxJNjuvhVOotTyX51uPDo7qkCi10rxYfqTrTZXw5+69
997Xhp853D5eb1nQsvOCBQvMmhMlzLAhMGaiOLbzc1sh9DKhk4tM1nQuu6/G
gimKXIauCLbirNfYPOp7iW7Cum1hZq8mUeDVgJrp7lbd9W8SpNiYtE+TJLQg
NJo9HtOnRzPNKpFH9MJrQCG8agKvHv3G3tHa0ArCvuu1P3dSfdJzdlCT8KRx
K7ZJHawj4auFMNoIw0af1CcYEVGnfnFr82iiNB4dpQryRL505113F9GmaTWk
cQvTgkxVenn9sJyozUrUFbwuaxrLJWct/SK83ITmnuF53euL31XJQEbLAg3t
9paMB0VlSjAtHrqHqAoWwUtnupH8MGPItPuxNzaoCaqz5ppSWCbFax5FWge4
mBDT5XoNtivp72xuTJPivmxjnNiyp3abpYI+UUXYhgXGRFe1m1OQjc5JHqWL
TBAdjtptSx9tBLXR0DGptrZuilpkzR5Xqny3vfbaa//UMasjfXx1y2knTznZ
rLxKgQH026FgtdT0YIJ7e2Pok4/42bHhkiZOZZXCcwgSWzuVTI3vaa0m+5EB
c2pJCgAs0rRr6xGkUWS5YWCpchvYJLxsK9rI0jKINp0e1iQs70q2FFWBrVYs
Xl7FglTvsFd3hjGudJO7dG9kk1mgg5uENzjqXtu0PJk61h1GlTCIIW4v81er
yfKgTgVEJX07Lz/HRLQfd/7US/FGlP3dSSexiwY56rJZ6vZUo8gVUDwkFuNS
A9YPpNf+JPHWinGcwmNYrXurbe/dMt+lHS7a1gZ1eEb0iwnGxbh8HkyUGxEe
rsIPuGT2FYXv9k0xmStA8OrJGlFc3kKT0liaFdZpUuS3NonkXB92m2yYGPHV
JuGZfGx7k2oSqxRks3Rgpk2q3V6OwlmVrZnnHBrdJgzorjI/MNRr2G8GUP1w
4aLFPTCoP0kuQ3KN55fYT91ERQo2VbD7zLp8Vr3lmpYUV7E/jg01AC8YZaNj
3oyFAQrMBdWLQN/11b23Csgw1TO5Odbhc8wB1TGV1SaXnOvhFiRbKaUi/r5f
kyCNZ6ZFekaX2T70g5oEKY1FmfjY60/vf8DaQrXNhjcJqxIxmWtykParH1wI
r+I1JcsPE2HsasB6bTHNxi1H8aB28pAm4Q2MxGHz820ZuQOjChgLdj7uhyxS
oLQUPZvPaCeISnfEqEoeG62FpbsefAwejzzc/WASGyjGPUtN7tsbTSVhJWs4
YgPNEjQrN+0d88BUtZqGCD3DE6MwuaPr4V00PwsXt1l8oMa1WGGGn0+dcP75
8TzczybWgEn7m7v/0ScVno2ZgKVtPkywSAt9K40pi/DssrNlaa8CmudJyXg3
SvNoPW2EV46Hpi0VileXwhOTOX8B6lX6Nnvm/aNMtTdQpVSThiiWGbhz+JQZ
0wrPRFaZn+oa/TBz6TftyFPOKATUFkVFtxGA0teNoTdrZ3PPLsxUc6IGCbVI
KXpeaUE3Zqu/iYdPPP3i6zqeL+dws+Vp78agX9lwm08Gu9ok+Kq8NxPfaCfh
/+H5WpNLrkWxplzMykFn2FWP8EpRKuTn7CXTA4Y0CU/qWfOdp6kvRzQJRvjI
6fCU9oUuXlaZ8GhkdDjCZFDh623Jcuq5zgLGkwKrWqe7x631764iw7Q/YL5X
IYwKYDz42d2+hO/ppV7mSVbsJR/fjcox+3ZigI6N63/iMz/YzjzvHkNitcgw
xyQ12HzXA+OpspwcYYCgT/MnkuRFD47EoUZLtckTGe5oxh7e/fk/7vz5UBgj
WejEECUVCHfVVvvvWojZ4Y5aNDHPhqcywLf5vJBpuTFBEaQK2Iw/2/NsawVw
jsDSpWUM1a07uvCL06Cx59PpE80oezfpldM2e+DGjNIxrzmdaLv/A8koES/c
tSyRiWe0eNtUJ1aj7HngK7t9vxBQRwRkb02lLRiNk67/v09WbngaqTqEloS2
TNHyx5ZHPrnTJ82JVKgLvmxrUKuRXe1kgb6NQb+0wVabWtJOQtqSiswZOFRd
NtGhxyW3RdWndQWS2M3bD8bqBzYJsjUlBCvvE9VTjNWOBF49ltGBMLa/5e6n
mMg2ssklmbbpuXHG3TiteFVlgkxbk2rHWQasBvcMgfuyLhLFTjCehje5sYx8
NBudwwZsJxoHRgUwnt/kOx9L5rFnOq3Mn/leJV06JZkM57r96/tu0wzqEzkt
if35PgbpF9vyyErUVW6sGkNmvQv3XM2DIysNdWij0iT6R6TGn/Wlit795cbb
bBY0iyg+BpPHv/L6O9gFxtKu3XyfrfFulEndv5koavkmwk4N1yvaJX+pYEI/
qgpKjakHIBOLSBQfE1M+/txLb+CwRr7+1nt8hrDcbQ2J21KKLCmPlJs8EOnX
SUMJPhsgmUo+1ezNnrHRyLYbhWn3qVkpAhLoXbPFftsW7lW41k0ulqUmAywE
7n1f3HPLhksV/8i9uJQhL+RDsnHKc96RUE4ndTbyOBJ9kfBr5H6FVuD2N9/9
lHpElVQvM3Wyf5OgS472a4+fAx0nA3W8AikPbjkeInRAMEhbI49wupSR6g7I
qgVp6cFoGDuKwKsRluwvQiKhQtftv/DGBzVFqPDVtmRf9dwAUNOPXSMtw4tx
9MsNv7PRtNOmXWcthGTkSDFJlLkO3iiU4qeVr70iSu94esUjpr+vOYD9GsP4
0gOPvxg8unHR7sLPfL6aPfrsJtt/ZPZxk5YEIh3fPHYTbSGjcq2vrQW02Xcq
9n2NlJrgkq3Z6uwZufQDhju6yyuL85A7IpodaqY1+26mu6qWTCFMcsj1Psdz
WK+lDo5Gav4yyzHpCuFtf/OdWXZhxkY13nJ+/pGnfsU4TU/bGBJFvF45eNKp
h6UoPKEBZjIwxm00iXrU64ktMmxYYgNt1SO8flFbMd7CshXCSGZKNLvO3il3
J5d/wvmg8c3vfWwdvnnP5/f8gmEpb8+US7a3sXy6/bmN9954yJtvvkkOppo6
ZN6K+3Jj3cs2uxA0PrAQbFseLC9fbJkNaZSYs52fHZilBGZGXLXEO6jHbhjk
h+KdVyw4vV/JaQSbC1m0zZGv/jrcQ3cp9qfRs14JaXThe1X7bRtXaY1WjtoI
xZ8vvTvweyP/6dEnnjPWULf8+GGFr5e5el6BmbawOhFwZJPnkSs4SmysAY1h
XHL8xAVBzIqiAcM/+smd/wnPkqrfGL7zmN2WrLw7PDG+OcTanAMpBOH9H1+t
RkTgLeoPsW2pqznErb0xKjd54cWXecczIgobzVEoNYlKQbkXKOjx3cxZrTAw
4KHS+1aiLpr9lkzOzZchSYv9/NTvFOWlFzbca6MrD5swL3wx4xQds7bvVSsf
2vHGO54AET346V0+U7j6jLtr+ZwyK3BMfXCPGxoYbSKKOYDLJWPaq5EmcVRj
H1bbstyKxHKT4AZE05k9cEw3niSY0OwKxelyr8s64r+BsDG78Vfjt9qs8DxS
dfPsJtuEEt8ivYBPnDNx9qozJ81dbQwGP5lucCHMhOetJufoTFMoAXwHmT6g
EFy6I0nVSAJC9ayPjjZ1Gl4ISwUL+dGT7yMb7+yQOdfcesCC6x+ccubMm86Y
Mm8Ndjam8BXV58m1ktEy4UppVPHufzt0x9G6+3Kkq7w2LMLcsTPm32w1KZSx
2hENvptg3eTu4l3G0otpoPTS+D02wKetfgCmXh/x9bEZLrPn3hn0/ZFQefY5
B54aB8mlhyh0hsuf23jrTRCO8+S/yEaWfdEwbGuMgIlnTl8WTAdBlOes9oi8
Uan6CDlQzb6beYUhJ/G7Xc4LsCc7dL/B7Ib1Wt+wlKjMJUnZ3gcCjnz61VG7
jtvp2lsyuSZXk9gW2GHSWbNu3nPp6p+/OnqL8e5SM+5sT3Ki690HSOBz7vuD
U9uXdzDmfluV9PphoI2+P8ON+K06S6UmYQ2KVh9rEoxCSaYDNLu8AXHH9rKo
PT3ztwd/ZVQDhDVQAlV0ZUd3diBtyoSZKy86dfoNcdJThS3Uie7Ae8XgKgSX
eHGSvAgc0x7VrP1BhbA6CYtWCxiYkrpbZ+liUdgGOHssXHYzbyWTrumji/fy
2oijR80/5OQZkPaTfnbJTYF7xxY+X+N6bRqwrTUt/lQp2WouukdbroFuen34
0aOmH3fWZWQmYB6nVqyb0i+a3nl4FYjFwovPOX19gyafK5bxZTyHCTxUk4Jm
rOI3w742xqoNPDrrqAmzTFeSbr31q8UrenPokSMwlyU8kR1JJZHtOQGU7GB0
5Ap7yoXPj4uSKWipTbZuCJd3Aj2uY3iUNE7An9G7wtfHRo04YfLc1ThvLM17
NOOrWr5+1OYSGe2QvDqkuwmpVwi5QDwtox423Ma7NL2ytmK6gUx11lWme0ya
EYs36QvfaEmD4pl1u8kQ2wLSCcowT74KQ+SzROww2wozrszjQQh+a9Vtd888
aep1WKkdeNwt+3ZYIZzAYJ958MFHmPcgbTZYqMoMb9YvDi6E1G43AHIAteEK
jYkbYYUjC9+vQqxCWOEztgX26OLFvz3wsGHX7Hf81Kmnz7jBSAfn0SDswd48
Cttsp6X4E215ZZN04R1V+F4FS/vCPfc9mIyFHlP4fHr8EsuzXahNI6weXx/f
5HPjGj+HwwjbNM+9MXyHxFbHhKpjps1eamSCjiTLT2RyPvPOwJ8MhXg3VqNO
JdjkhZdexfMej8mjtCa+eu/DTxc9KsjATMlfjd1xg0JkmK9j4SNfe/3NIpAZ
EbclXYPrmV979tkzr1s3fucNG0l9kNCMEycvLnxOMt9tezgsa+qpU5c+u8lu
7pIkpdkNdItUCFmuTzy7rvGuaozIsQUKs1h5fMVfD5YJ7YQY0ykzcDX0zd/8
tgjCkCj3uwXUJXKC138z7LujmxSasHVh81oR9Zshpw9dteOBZ04859Jb2LGr
W5/iEYXvl14fNmH43ENPmhpUjOgFZvQyKBOclWGFMNpQXvu12++4ExhBAI0d
QoKAGF34XuX3fU4cuMXqNXckgmtM8Vp/1+/kQSt2P+ycIHbHFcN9a9BpQ046
b/qVSTPQsYXPV7F+lAkz8ErNX7z0Ml7ZZdHSG1h4WAy9ROjW4M13+W1wQMnr
45t8rhg5XfLp1MEHz5p3TU/PJfAy9tUhN2Qk/Jbvku2T9wQtwNCU0y685pcb
7rVRo+eA9DMnXnLty2N338B9rtn9C7zg6XV99/mNfuR/V8RSviXruJd/9erb
g78/qsESfjp13soXx++5YeESjL1NGtzy1rsefX3ED8e6SxHrMx9jpajDNvA9
79XsU6F8lxdQALHf/GV3AEsNvkbVoGUT9ewyHYfQhTT31UwQ+JHbUpPn06Nc
a/ugdnav6cecNnXoW+/+oVtn11HF8vAPfc7ru8vCxctp3PBWKUnHLGa36rv9
Jw9YsP8xE/dfcONDtjFNQ7E0qd/SvQ77WRAzDTjqj70mxqUVP1d+e8CUAaee
fcFspcZGj04ecM6pE2cyWaGBGHqvz/n95h58/PkBAcUg2/D1r69eHbLa8x1P
GyC+ZN9rxKfJcw2w9Rc9J1E6+mD4f14+eXA3e+b5dWDMnr6PEC6uBP9a+8Yl
6q9H7VL8XbHgGLL70aIVdxm2/Is+bexMsO1pky9bAfHogRTpmA/yQToCC94r
cgC2QuvgudeseXGDPTd0D0A+webJzET7xp33P/7KmN3Ge6+IqZqPE3q6KHmv
R5lTAYtcdOzpU5O2lcWMXwX47a5bcQMT3mDDYCcN7IZ3+03qf8MuB0/g3W4D
wv5T57l9drp6yXV/LUb5Xd9J/SArwq4aUMv7Hef0hvjpCR628s2bbr6lh+cq
WN9RF868wjZpbGTl/U0IkkyQaq/2OUefPR/GSwMZ8lf79F97y8a2wqUe7BqX
P9bzu9vevPaRZmQXY09It3hp3O4bNEAhWBqYfsGYiR5IqiXYYEWyy4QZGbLC
XQ6k518mHQI/go57Ut+QIrfsuP9pzC1qoJOhvvecv3DJ/1NSb/jdyX/V70IE
QcCG65D/V/ywnt/9xC+efgFE9rdxHv+174L6/29/t0cbZ3y0rZqBt8MNax6A
HOlJ3oHGcDX/5rCdxvyFHN/8tv8CNvmbZPf/g9/9W1/f/373v/d3U3Yf9cor
rzy/0QE9SvW/2nPj/4d99299ff/73f/e3/1ravf/H0m5/9Xu//vd/4nf/b9u
zIco/T6Xz18c+ro1jNL/98R4D8/tsPTa63uKNP63xMvf+nclfM7MUtyPsbod
1ws9XZX8ze6/RwlQxtXe+SedPQNbBmmOLXw0xKzPPHPSpbhcAHbC5VcPMWvE
wkPlUet1+5+2oKWCd/EzbhLwvilO9uPpXcuDQGlm14dNv3RBgNfDc1vdcONN
PZ/KXzfIR1z08Fwb1wc8MakAR2NrHv5mueh/2nel4TjOhtKCt+otlUDvIQeM
cFwJIvwWEgduWPPAL4ui/M2uifyLrtg3r32kMLTf7Hd7TkoAi+4xf9HSaw45
cxE2zcZHIadrVM/Lzub0ZeiiaAlpF8ViQe0M5hZXs9dZVhZys4Y2lmQXnHDm
RaxECM8XS7Lw/MEz5yzEFnFtE7Ili58vUxoxBaQB4b3X9/x+i/Y56pxQNN2D
BdaEIAyfPm7y9LlMUSuW52UeAIsfszMoAym4iQVesfjhf+Nc+H/IhgMJ4nKs
Gd3f8AphPa8aegz5CyvigHFg2aFl2hX37Rxj1FDqZGxZ5UA1sCwg0NZpsF1Q
BARLT6DZlh9KDB2fceNRBLpgNagxL3qlZ8Pm1ZEnj5x36MnT91588yPgW5Ew
bKIRWL6YtMPr373uxlvxRCjrzV4HJPBKyEIrljDVV0adMmqbG1fdjhMJE2Ie
ffoVvCtgtH+0OVCPMN8c+tPh3192/arQUTMzoUJJPt63Baveu1jCPz788MNZ
c43sXSwndEYzOfpFy8e7JDK2dWiQ9/HqyFNG3rLzIef8fNuDZlxxzHlLmJfW
IO8DXzn9nGlXMtGuWFbpgkgbLB5ukEjLV/AEE3taRFGAIrWxaQP8vzbi5JEH
Xzq/p+y0kv1W0881EHB/EbxmnzNVm8A8aALlspajk+fHRs6XxKiGz+HQD591
1SokZrrPyTpBw3nnKnlO2GvSWZfcpIIuo+OqtsQQHuKePTDD47IoXWhuwGLL
y8kiVIHi1ux+/Nxdlt18T+HzpssshZ8suQzuh93wFy41FF82WmoqETv/+Mc/
PvORnT5iGQJJ9PtcsfhGAOxigGtu3+3YObRTdR6mYYgiGBecNPFyVgaH9M5K
tL50tHkxjFBq85W199yPLeFNvPeDG+98MnShl+0uPvRnV+tAvqGFsMq/6oK1
5MfHXog2FZcfN2lZpghL7OUQ3MFhxa+/Muq40btcfe0qPAGbpxyxESx3eF0N
XidGObugNSJC03JHFr4eCka3Wblq7ePbHDj9tS/uet6j3zlkxvIDT7+Ktlvx
q1XWS+JTNLrBoKMbLxY1FFgVeN4sFrRqc4Cd170S1dQGaY0aUofgNDg5UhIT
esc2/vThF89NpHDRczgO2ymtx630AG+9n8uMmTZOsCJ6wkhteben0lKIJbzz
tXseebbweUn7ghSFNvvpRVeuxrPFj1aYMBuGxb77u/cKQQ+KS2HSMOqfb/jx
KfN5yqENIQ2Y1iZRQ5lgxVsmO8rsbE4YxeVSbdRbEF/rNt9r8pKDJ1zVcDvU
71Yoy2fZC63RZ5tc9Qsb/WBj7/We+7Bw9DzJ5b4fHDHr6S33m3bzj066gvjG
ETOhlxLJqwQHrK/ffvcDNNrAWVi1iNXVe54w7wuPPPlyD2DKAHPilEuXfvax
Z1+NsqJ28clTr1v0k7OuJlGD+GzhYoPGAID4g2U33o7XFh/ys6tv2vukeVQc
OuPbiIwiGDOPPXsOK96CVVxxLLoeYBxw+aKV0BCfeOqF1yGuqHTo3gclVtxQ
oIMHdui86+4DBb7x+V0mvvql3c97ePtDZ96w78lX0jht0J6FIIKklM+zsV54
q7jav8x38QSYoRwxEAwagCjug1Oyr3PSINiZh3r9vqdeed3+py/QusIeyO3z
9z34KGM/LBIrbjwQVn/ExVesoAlnrMZXRyWl0mUSMygwzDFvclN/7efkHFms
bLRdWVs81ZMuKcnr4t5SUpM1saNfbvjtjRq8QomNV4DikW++9d6vxnxzg+JX
2tgSwLIoF9fivScdRticgx5ia9ZaS2zFTPZIgSYXbuV8ApLl7FLvYCMUOrbL
4MxdlvRqphpduc9JV0AmgtVgLlEWFr4vawB/YUt2DTrloqc1mEaaoFYLgxOS
2JYX+HBhpOL/Fx/f4eP1lg8SUoNFD8s+a1uT+TcPf/fQmbAI4UxDZl92wpRr
gfbhhWC0mxc9ZNALdpq1RsjWftD8FQ+w5zR2Vbyq0EQJBSd48bDLl92byah2
CIfbdz12DpQvZRXbhuiYhcGFYDu5SlL1HbseO/uJrQ+4CLYFfsY5o5twoJHi
3YZuXIhb4x0pGwnjEkSUopON+ofDCsGE1lLwfYEsGPB7XXPLI1ajqCHbAwxs
CRIMmg3n1tIKQm0pQys88L3DL7l+v1OvBFcV70jbk+VcEW26ZvzDRqsgUWcD
luNO8s5UI0rMJEL4bw1wKEsgfmwZZmgE0jO4bPBw9DYUqaN6Phi8RfEvJrJO
x35h4202xXvVFAMkrRCiG9fkbsf/lZ8zjbXooomar+JntXa6/hBW1QEzIkrc
vObZZs0DzwJU7nWUiWhTNdM/GSRlX0dPWYB8PkGi15AyyEsqLvzJohpNIiJr
aah9RiDLbZ+R1mib57reh3YCzgYdNFch127+0YlXcIVEcWm9TqvGEhoIOUpg
8PHLX91zEnqbNbtner1dK1h4RIY3QXub7cKJP8DBU5t9dzPAa7DDzhOnL7yD
MhJ/2NuOPfGwbK7LhZPqIa9xt308WADZiqFtgYRnv/njCw9YcMMDQATHrTTq
u09wWQ+FTHtgpTtdf0cQKNTg7K6hnbyKu9gri1OjLz1owlWikUuPbnfIxWdO
uvzWfHshGjUa4xjQ85rD2kQVQ3y/+qXdzr9nxyMvveSkqdexXU1xb3rtREyr
GK984qkXXwcTURDCldJO3MXt9qt5tQ4YM06ZtkLAgCZU2RX3rE/UA3aH3bSU
gpIqgcyXHXjGVUFFFG8rgcFJy8Q+tqrDoYu34zX0rNK2wh/sBy2pcFINuv8n
YDJ5UQM2gzcnrMUKXTY2LKYrJX28Yu6KWI9qdS8Y9tF/3Pmzps23nhGNXYCA
3S3yE4Ydjg1/7vzSj75kO4Tz1axNZ/ys2sijm0SCKKb7P7v755t5rkd4Zkg3
SU/OuqqmhPzJ9aL39GCigTLsVi7oIlt63LlZBCWkI6ABp8W8VUNMJ1r0k7MW
zz5+ynKQIrfursNMIQA92HXohWmXsLjrC3u5xxPedprB6zSPQIOtODWZN0lq
xJP53TmIrrLfFINA2Cm+1KBTvQOmzM4ad+xyzGyorYzFqzDX2TmspyPLeW9H
XbbkbkF3DT/ntRd+d+8/Z33vi8H1Zl9oTgGjmsYesTJaSRAiDfGVKrLrtzp0
q3rLi4mcCv6crJDBbupf+BpPfnv/aSBGeEDJvIYhhTDLFibwW4qW9VGXLrnL
9Pkosx8xm2QMLITaSagM+ML7eWzbg6bDXaA05Eo5yNQ2HtCZkv2aX7moNar1
LuQs/djzL73JhpjDCiGV7GpJEUDAD25c+wTvIHjRyo6Excek4ALqZVWInt22
+/GX46crj5q4BMYGwi4jesYh/2AVOGVs7s3P/3DirXucMPfYSxbfZT1Kj2pe
2GirjS2crPNrdsxzjpu8TKOvxTBKyVpEu1FTAtIlJ154LWOlzYKpRsmVA92t
g2ExpSVUAOoxMUPNRZCjB8Hd88W9NgcIlccbfHsjsFJAgrk8VTUlUgyrpIwG
HC6lmq4Cr0E4mowG9XFHNYkXVr52MXB+tS9usOWGurLxTcLLzqPylQceX3ej
MbSD81puEoZQO7Ckmkq8vrU/PGY22Bs/AUspZgIYKhTNK5GuoRbM6j1PmHvL
XifOw0/o1f7EP+z4hRwYXY2cZ3JJJ2B4ccHO5M5qFIyMcAQbgqvZ5zLY0jKx
C0KbnyjYnILL5Hdbfr4bQIAkojZtGt/aHvCh7X9y8W8+t/O5WfClhOtUjc+2
NglSlseemGQ7qmYzlKHMXsY977Y9GUhcz6IzoBDoDfIMzT8IDIJsAJNUcune
p+xdb3k425FOXHunBcMGzM7D6Cee0U1dhNjlyz3InVDXU2oPKgRdSUDXM2eC
cSY788HOrmSnQiB1QCHosgUNhImNh+uwF7/+oyngnumnTsvaMGZd6ZMBy3r3
0Wc9V5/xRFuXgzsV8TtSJAcDBOU7pPllZ6K1bcLkebeqR1SPfm5I9CwG122J
1npZs/txlz+x1QEX7bl01c8ZeVYxPGy96CF09F30k7OvxgUWjAF4YdutvucZ
jtXoAdyzH/3uP9j2iHTilhx85lVTz0iHqF2+54l7NVySNKOFJU4bkG2scRrN
7kwGbubbU/YvfL2aR3bOAUzaU4qwAQvjXxftdMxuAFeJx4bpLjSCwrGZnEPl
CyNgGB/AH5AFV2hh2tUFw8tYnuqIjWwSQZnODK1ium8hPPrYP+z4qSAzN2gS
5PB4dNjmlrc/+BzjU2ZsZ5NgOkE1mNtETYkoHG5V6VWHcZ4FWKKbGiLf2WF1
0lheIQb1mi7bEoEs/B3X6zfuc/KVq7+1/w4GXrqujII7cVqwR3laWAtTnUhq
uXWlcGTMFuefsDFWUC8y+dlG2nG6zl5TmGbknPbDbo3WohqslfU6gzaMRUVg
7YEdDpsFRQoBgZ8DBZeahGVGIdge9rI8jR8a/UQfKAwZabTtQVHp2zE+rdH2
wu6D6JWMdrqtBOtBTQeJnnbylJPrLatz+3uxBXo5eyJbNIPyX7vvsXU67sCM
/WMmGKeR9whXnAbCFYm6CLSBTVYjWoFSSrh+hdArCXTgAEl2ollf+MbeFzz/
Lz++cJN1v34LXBKSeoRSgV6YDHbGnIy8a3YXZe4CbuysEy+4ThCTGEODm196
qKvJtGvtuJlXr7X3yHZENv4+qHmwYddiAyDYO/+o85aSt5ngYhRAs7RRw7u3
7PXTeTC0sGXAwRhHHloxuDLA3fuFPTfnPYZQBdQyJA87zYL0QWXiSl73vUN+
3HBhlSho1N2qZ63OderAkCY3KVOM871S+64XhVSs44CUT5NwGRwOytoJJ046
EfCizH+xZeWWB3+b8j6cYTkqbc0EyviuZr9jdQnXWfFJIxuWnYG1thxjAD1u
c2y2FZATlX1uK+Gsb/mXA79Fw2d8k6Dl6guaiWN/sCPmQVWaBJMpuA7wzjnn
zl71820PnvHKl/eYxAgUHcUUUQrC1hYkNQ0ZW3dgdXBTEY7ENQPikAD9/BZ7
X4Bbtsv2PfEwB6xVvSAJTGC54pjzlqpDLmyLn6E3uDoXjoweA6Ngl4lNl1Fx
zbrI1EENdm0oq9uc8s71Or42duL92PMv/3bKmRff9OqXdz8fVn4wYspNwhLl
kvismYNUtUYFqKvnHaXiWciIytneIHPMZyOQqVbdecGCBfWWBbmNPNwCvWwk
Z5jZG4R9PR0iV041P42e/k1CF5lD6xcMCdoMdlJ7Ks7wRZxsn0LQlQQ01Uhr
jNLAdGUKCVAZNFP2FXZp5UzEjvXbACCSN3XMYA43dMUHNr+BIODkbMGbWDxA
Az9lh8LWA3TMJWspATTnE9kRr2rCDmkSG+XIu1Ze4/g2Wffq2/h/yOEvBFcG
uGU7HLEzkSnkh7e8wZBCxfjn5bvufwKgRaI3C5PjZF/4sKnBTW5KsvHyrX97
rxeFVOmAMrBKnz7DRUgrtHfTBFtJT48hzK/c/4t1JAyYcqizAI1hkUIELOWw
8oGqI4XurbfNmrtw1XCmIWHe1CTsc9nsyxvuXQZ+4x1eJoFW97x87hXO5igB
wumMaxK9QgHYPJZoJ7mpxRFJs8RPF8KTmDMnGHWpnbuhJe/Z8chZxCJzBAqw
GEIAwlnq8EVhXqV8wP9xK4IcSjzdir9kLx40feZlhbQsPqElIuj5UELQJV6C
DmiNBhJX6cLKsBJidrwjA2uZOfMlBrVMrFr1TCM6GhBZU1muWZ6RwbV4F5+G
M0RruMvLuBNbNZGMHsHJtPS855vp47a8IQrmboi0/qlcp7crq+EgMnufTdvW
4swFnSrnb61cufK9Phf1STe2suW4sy46yxxfVSu8jHIGdVWiBsUiYTFgdX2b
hG4caqYW6vyFTKCGsBWIhuOuehWCriSg69n4aV5ZruryyU6YkVkUDEKwsCNa
cCH9zNY21NZrIyVt6h3EHMwwMaUYBw6MPaAQaHt+CwxNYhOzj5+8PLBFW0ps
wAy20L/JtYqfztjtvGPOW3LGBVfcKitlblnQ1IObBCl2JxP6gALQLdBh/PKi
Mzv3uHNOIWsEBMkgNQ4nCj9JAIhO1cVHnTIFsCrOasQap/gKLkrxEtJ3B0Wq
A1UyEbdzveggXI1Rhtsh6IOiYOXtMD0PgmY6GcFSS+L5syfOXpUpWwDMBKfK
/v7RWiPFUJhyKfyGh7Scb37FUectnXTWJSsDK46MpDHlhAlTzTJTGDJFnGzM
7YEMcu9V+R6VNoMeme9cOnHihZf9odfU3oWIHpyqjkAmHXGZE848/5LCZQ6L
Cvibax9+niFkXDkRYxQRBRjLpslnKE5KHzPW7gXyoYjEU/CAERXC5SSiq0jE
C/liDQ5E0lOToecifQGW5pzoYawgR0Lu+YIamRwJaR1k5ICITE+v5JHhwu8X
+dN6xn2aZBwZ044lcUqsLRDD/yH7Kk2C6xeZQV2XzNur8UzyUaFGZ9Evmnvq
JGdCKritAAmEMlcXCG5dr41TH6OwGwXe9vE/Vy6v7HDNNdcYSVtixk3gbEkW
oXkVdESfJuGJwNKuXIJr+hCiFjlPidVhHU1CF6LDq1l65IPPsYaGKpOsEk46
U+46kpYas7p+m7F59vgDBRm6eWTQOfeOX+23fpvhzQ82wZlnPBZWmgapuZ5w
KbiBdq6YR5vMcB/YJNz2iA3GjFlYhTUXg6kCzA8XLFxkWQSviF4GgzIgJ7Kj
Qmzg8bPOvGAeQFJOJKvqFU1bMDsvsgc0uSkZ45ofBt5e/PqH5Tnl3a+YvyBS
SKupQUiGAMsiyADGrw0nS+j5fQWfNzzXml0As2o4RCkyTVX7chdXLj14wlXE
J4mUQD1ctcYTxCtgUisYR0QzaeJpk+bapXVturLjokVXW7Vsw3n4c/qUK25d
tvfRk7wt2dYzdOnDn1FRx67Y4/Dz3xh24nD3mAdFVAJWkEmd0Ug+4YJLri4k
kUwWtqt8E5mE7SNaffOPskyobI2FB1+2MHPZm2qjZzzaxiGWFIHg312vXfNY
l56+jFVduJ0OfNTgwEwOl+psM6deaxJN0k+OqGqEZ2tnVA7qjN4qEYLhuLzn
hu4uxke6UvHQEt+5WYGVnW2V5gL0jt1xA15MwEjiRt5nNlPu88GlcOI98Eyf
KF+s6ywXnLySw00iYIZISrM4S1V10nFHHk8m+3VE9tSaj0rcM+Q59g2U9WoS
pAhg61IIV+kwdEhFcFt7kyBbIyGE64fwO/zNXGirgOzd3YjU6WDewEPvg7VC
tJTo65sEiWY3EJJQydZYH1V0LUVZCNivJ2hmKuInG6IQ5cwKcWtKN0kcVRtL
4RIBrwkwoepFBAkTbzKg0RbReGXmHFZsxT9nYlIEJ8uj2S434UGQ9W9ya8Oi
zUgVDeJpK379N4NPH/qzM6dcbukjEcnyaTonVoba7kr5rZic9SouIE+YuehO
ajLSn5hBzInN6rGx59YmtysxLBuHpU0rgdRgz2IVmNIFWBVn25li7XZnjYuT
rqUvuPKwCfPMq1xBuLMsOXfV4rIDAzfvcczFGBPkHvTAyB6qB0wszBKK97pp
S6jMLPYsZBzOH91EWJbeUozUsoULeOZiX/MW+ji0IYkXM0+aeh3uUJG49Ny/
7HMhb4n5qQar99S1tWepfkK+bj32HZPLhTeGnjHs9LOnzktKg4ZHSQkwQAKA
ZBVfTVJWJm27udTN8qFcBjCgFxjF7LRjvVaRutId8RzysSb2CGqEdwGZuNMZ
yIr1qvj3plWLKGivdUkp++8LGx664fgXX3wxPNEZiVd5pxpp3zq8nU2CFOHF
1nGBQHulOp+ZQLUmQZqKEop4q4RETbMEzORCa9EQCFOLhlrXbyf2Jr7FJKLR
YjMxnh5BViMl6f1tezQ/NO16PeElsaJqqu6DVB6wXvRQZWyFzdxwaEBjE2Bs
Mzt7RW23roJLiuSpHPgHIgLfqDgr7JsyTrBe+ze5u+GRwaiaQRQWax6MV0Yf
OHblHkdlgwqNba5VgdmayvYyGErLuDh4INQy5LYU+F5aqzCrOYmqSGwBz6lY
6VpGVqTV5LbF7NCICn6SpG7Kd8A2GH9t5P5jsGPbatXzRpDrgTYtwKRzYCbD
sKR3zgCWue3hzowg0UjGO+8BUZxoo4TOeI6sE8I5eggOTwaH0Vj0IYBFa0Wz
AovRWbPQWE9y5ZHnLpl/5MQlvf70/gf9IopySrl9h5vufhIZxXgFWdgPfO+w
S5iUVEQVcdExfBCsMpF0DNd7jiFhCsjf999j2AFzF99iWjKGkgUSG6NHTRNT
ryit1Foa1OS72VlWeVWK/1t13Gu9hFQ3r1k8M5zH4kN+tgg1HkBN1tNg/XaX
lMAItSXsU8/iMTyQHuGmajkpxmrlSx+0/OLjO328+sEHH9A6wCfVIxXNk08C
62gSpDwHz4pZfrSubPIXzqHaJEjjitPVJEJ4rIFqJc/f1iyFrq5dz2i9V6l4
ycmVeFvUIvmEhx7X67nd7Y4dtp7w1NUxWs5W8VA99QgvU/pVG1sGwTEP26t1
bqUhGMHg8bKTGGPqaTVw0jtiWLv1iNYChhqeTv9UPgXMFS8xfTfz9LSKDUJc
gyhezanZ5vMbb7/p9fuePA/Y7XCsKbmE+0bX72afMPlaqB04LV4ZpIM8sId0
e2CqD160JN7PofpmOabmULTkplmvFzghrFJc5LoNttsEWwdxZKK8A/wFUb7d
6nufWnrQGQvRDAiZVHD1bYlmqftWoceETpLOTGIk2dQ0pGkX0sGAKFiYjy1i
tMqSMX9PKZhuOjqRVGIWNSCO9gRaPcuJxMnjoFR29y1U1KFkCnXqX3j4yZfB
OIsP/dkilP9g8bzcbsgQxQq7jaHqYMWce+kt6DoDuFmHsCaJZ6RD7c0SnqjM
vB8tS75t8323aPi6KG52oA0plUZxNyswO+MOcjHOkHTBBv16N9QsZjojS7Kd
AzU5l2wN4R7hDU20dZKGro+bZO8+Srq1FM1pDlzPgDoVkHgUoEMbQPQS4z1A
zNnqYnFtvOVp5n7RkKZDdNN2B+4dSgpKRQvMkXibT1pePUCDpSZOT0dq6jCn
u1mQ7dF6UoOtLZqtGsr3anY8eH2jhKa/b3Oci8F0WDCstYCInnPcpOW0uEyE
noZxcEeEgJ0KhEDUWvrhnZOENG0CGkMKPe52TLSu2W4lNFIufL3Cqi2b20nj
jXxtEBnKEnkVby7sHNBlu7JYGl+GXN783sfWARHh145olGOxzg7FZbMUlIRV
JHENeLFNAcGtubNIEAJhFhAi0W1S5VWHn70YgVpmfhFGqTvl0PMGKGglaEZs
KQ4pqtomB/hz3lHnHBehpZvrH1lBEyp6xc3Z4mxncymsQTmtHUQDZHuwnNqa
RLeEyxkeYNg8rKx3yhrGCujE6pkkTSOc8Vhabj2v3hVn7awkGPfqm++y8weJ
cNU2++1VCNO0nmSvwqbx0BFPJl8VgvXc8409di38bnaqSVkc015MQU+TlN/N
t+4bFQWwQexmXbz/C7vr5VBNs9oy1dJJlpk+brLMRB5o1aRRPjRIbOZtj/Bk
6Yk3KQKOupShcy8RzgPZ7ogsw1e8wqDJfdyki+Z80Da5o6clJpc7tXgKGuHo
WL/1Ja6PKOUku3s94SUXj+b6AN8Iv/MyKD14/SIPULOCopgBXQymzYIBdUDC
o6VDiGb3ittWMSEmig2KIjtGFDRoW1NFS85KRfLYZDRKOrz3+0a7HBdlNTvx
0NHfesX1N5hvhtTySw848WibhmysTLkk4cVJ+KkuVWvFNFuzq6E6BCLIChWH
M7g5a5E2y2kdEVkaZ8ksnLZ8ASt2lUO8j4TMmWpnmzzWXKMtNzVyDk6ybRwY
K44ZTDaSP5/ltNOia5Y1I5x47xIEVHY6bTbYW7DFFNZAPV9TxKpFys0iXd5N
jOjOqIvViJZqxOQ+pOsPG/1TSzQrAgc6KjkTCe3WlIRaRnYaRA4+ddSFF88t
RIgcjDUXmkZDzqOjdyMJUFjSndvucXzhp0UisQ42OEZma16RUPEqUsfZmHGq
z7zc8PXYVW+Hcb3yHw9kqo2Te2p5/M0h5w750tq1aw1iSkSMXRUFG5CEFVaa
BNkr8pBe10pyIzPDNDe8buZElhxY7ZGX1YqrpPADhrxEBFnbO/3PGqjwekdN
rA6Fcfo09OylrHl79bwrkwVnc7tr6wcyUe61uGzQSRAivZuEl6GmzcabmfGc
czs8WDULC6hmYhudx5xtE+ylDHvteBTbGPL2u39asd+pC9haNoStGp364BQF
gVLMEl8b+cOxhdvN+kaFJrlMjz9++vyb8t86bMbsq6xmSEL0XuBCvm9vLDWU
0wPa8IcymFRmiFjDLb0cYm+WajqdJQtT2Ft9bjdctjpHcNo5F861z9mevZQp
gI8RGTbDIERLUngJCrBPwqKKGhG1Yn55mz3z/DoMEijcbp+onlgdbzOy8vBC
XnAjijP1uyrETbegUONmpHCPx2EqGNWD7ijU2lXeoDO7LEclPX7OVE3lDPgO
uoroscuu0VptZcSvhxXTtFptimYxYAJ96mUKPCwBmYBhkKf3XbG4Eiusnt30
5kKmPa/DSRQKcwucA6r+F7YmxJdcljSrRERlSwjpmh2O2qHe8kzwt200fEC0
PXIpS2U6aez4XG4MyTCPOj0ZPjpAgFg/fg+oRSA6ne0akYYFBiUlyicP5o0R
W46/+KQLllu+TfhCTBCbOo+l1RpvzJPR8rskn7s5MAmmzYJsrVCvxpDEO0ri
yV2/Adpy8eVCEOW4fnW6TLSGo95EuvTiolmNyjy9IvBD46ExuUx0SVj18x/b
/oveay1Zq+oannlku0Mufv5jO3R7butb731K1IP1at1iBCMb9dlqY8QIuWlw
wohsLzCSEEV7UwSQXA/3j59jXhkL+pka4oHbbfmqRwQJSfN6g/dwsbRYRxR1
ZPPvpKiowdEJAkDV2hPBdOHvngEXir0f/uxuX3dPtE805Mj9toKFCV4RXI2n
tz4Sq+xoqo7Gp+GlzRmbXWVGho+QtmEnrPHgeyAno0LVa5FKnYOvWHEf2mcD
BZBqJvZdCM5M61DF3sM+RVPlncEMUju7RuHPim1+sl2DM2xj1ostWVPFOaCZ
VbidlpyLvPXdTJ+odtXE7WwMaZjVjpXvLb528e/6zuobnqleWz3yvFnnMYrn
qUZ8FPzJHNVSAzA0KYQDQhA8w1Ybi7Wu3PfY03/f+5I+yXviiSVxDUEj9IRm
jmVRhg7v214ZU69ofWmORC5NygTK/S31jppCU7J7+xZRtQGYPo7IlqUkdTmd
DWCYvutKi/Vo6gZCa/S+MS/06sPkTSm9e8H7RqcubojN8KJ+wOndtfWPjsy/
k7VCr9HTOPekcyf/W216Jx75c2V5BY+EqzjHtRRFR+/ZYjIJDzY6DS95veIY
ZO3O7zp6PuWE/jOa7YNTY+LM+WfNWnn2eXNWMQiKJzx4RSjIbtL6cPlAA8BC
RKCEFOFcqj4PrKkp05BLUHut4bg7PvP4M68ir4ea+p8ef/7X3iH2SVkpqNBs
t72BAe52+inTVpx1/uVht6R9F3uetpNTSdzKRidQc8RjW7GqSy5j69mFAXij
kUTw9Jw8j9exTAihO3Y9dk6P0kVYJ9G4jbZXjehQxym7AKjZNLcjLpx1qX9a
2geMvJNotoE9So9uQm9gRLi6gbX13EE/h6UbCbLhiUKDilvztQO+Vm+5puXB
fzrgn/q/8847DIDxEtmEDzooP7EDXv96MPpHslESEQR96YHHX3x1/LZ/j8cf
/tR+nwqfNJoinzcARtbLoj4Nlm3K7Wyxj9HyqR8jOpqRUuYXVRp8wnCttu/o
E7Gl1x1NwHBSndJylo4GMIak9MjwHl2yIBcbvW+6aahJZbRsLttcL7MyhDWA
K8mJSe/H7BhDOAUpGUhdvf0r+32V733smedfbslUWh9ecsF3I+w3Rn5v4zMm
zb5hv4U3PoR/Q2sZNBjF31nt2+lIFSPMlLfaekYJMz5sNZCXQpZQamcDuH0j
SjQDMePZ/vZb2rS9gKFYsGy3H3zVzEDtkzii9VjVS24oglt10JTJhg6rucGA
h89edg9Ob+2X9/2KBdE7KvpcA5FOgGMzf/AeDVS7kuc23ePvhr75m9/avl15
FcZZQMal9rHd7qhnA0MNC3HH7P0k/vCkGxGK6dWYqwesMlTJrI+vPvD4Ovxc
awBuuCMpG+1QOt3mXRu5ybZ+Gv5A2HYDkR1YG3U6yYZtLIL0GdTjElInbbDD
Ko22XbAN0WZJgkCvHrGn6VZdv9pn1uWzRr3yyivaSMo6MBJbSjJ9un6TvDfQ
URWiukCm04485YyFh5w2WysVejsM3ha3oWGwPs4aRU+wAoLT542/nrKDKTdW
zFccuP0cNujjY7xc/HoSyOqIck8LPTriu4dPmTEtvDssfc7WXWGLmoja7nzX
lBKxAbZN2FKKqET05n+XwBsdhZv2P8xYNelE+ulHn3ge74xft+6lgOosvNgX
7/GZ0DPdwMa+bguFfIfP2n35rY8xboi1m+IHL6vQjSUl6645zxkHNF8GlTjG
vRx4QWSFXJB+DrFKHmXyhmgQCDLMN+Sz2EWghiEOk8gpQ95rGUmpeHfJqjOq
STodUXfYEwrvC8Mlmase04qI4bdPmTz7Ougf0xEvX0CRGNEeIk0tmkYBchn1
gXeFyBICredSWr2D93SL2FucnYP3dZ2C8iS67MEV+ZioO7M/Zd5yRK3abxkT
1Xh9zj/BuDDfEKXCLjm2S6NuZYiztNwMNrpGgx27pMN53Vtxf0d8edI3w0rL
pwsVhfoGvKga4sjVQfFRzlvGWQiVellXoEL90lDRbqb4Al8MbkG78q1Zj8XS
UOf8cw2tAqChDs2L0ZxUBwjtAIsqeEwsWaNcZtqQGp7Cgknki5lNVg+WHVrM
7H+93+KzklVmvXNakPgELcuNsrftsAdAEMbBk1vd9sCzwCzKrke++RZDLekl
pHdrPsjRSF63hYojVzdwEBKLhCS6DxTa4SXhqzLcJBFH9SyLA6sVCZZcV0mv
Ic4Uxk9AlTecxJSUaFhokEOtsk98QgN4fRw5a7o/6XMjHUZpjXjLCco05GQa
cen6RjmEbuoFqKvYMZV6J0HRxpEYc/GEmq0wpKC2RtLoCM7LZdFXRQja9Ptu
QnBURKHacMKficKXLPK8vTbAYZ+PZYLsM1GQqSNmGonia7mSv+SD2e/KzF3i
F4xzne/ymVQRS4sn2tYAYbq7eBmkfDRwx5DIkXpXkLNDg80pqEqsBxPdUW42
0SOl1Iwq25IQRz0LXLLfmC1kVarol8ptS6UMeoafPhqf0wv27Ln2fHMTRixp
hwYcbBh1ge2KHfJ/qvHfuuTENYt/ctbVGt0yoXPlrLJKGsFsIk2qDh+XnIPe
MPInfhcMnj5RLmjEodOhyiEOD7bqqvo7ULI3umWi2x6cKhHwx/gk7L+os0WN
IGT4Fc+xgsokuiaK31Tua3gn49i2fNlLgm6JciW3cML5+k4Gp5uRy3bFQB6b
W1KhJGS+kSMsTWQaW7Md/fFMOIyx2ZEzuobSQzZoBlsKCI71sEtXoTUyYtBm
lQ6NR6zBC6+hZkxG/7tMVH02e4iBVNuGIJlJP9iR+0OiSMNHgXLTxiuJzeYu
6sNJSdcZgOPoNvzd86VMixE8lhOeyZek4UA+Zch0Z88nWtouhyQ7gFMrQEoF
E89XzsVOvu0XP6GUJmVgiSaoZ6PusLqPpXxGzJoeehVSAokmrEDkUz7IFNrB
yY08Vov5vGzxwTCJl/rc6qzccyw9t9mM0tTLH+GPxAgzWa0awe7lwBviEFpr
PBQ14LwAlRBkvjuTJN4kXYNNSaleJJnme6pJJIGBI4Fp+XqX8oKdxHTL7BUt
p3ckVZpWKTtNzDWjLNmUs1sGZ1vErprMYmYlklB6mrDj/Ldvf/A568aMjQIW
WwBjYRmHX778Xl422bx+HYdhCCgnqdJKtOHO4Rb0FDRT4JS3RWZ9LhUmRmYF
mwkbwqbN3LEkz0gsdOCElph2+TUegcIPCB4Z6cD2ga84GzfiM527FYAPiPvS
1A1PjpmwlWbklVP1SXNldGQFde5a4+80naGfw279UwlEsRAQ9fH4OWwOyWlx
KHWFnE0DKXD1hpFT8/Z50gNfGnFYCUG/Xct7MzxWk2OuZ4YansulzpmbSh33
YbPtVS1uokfhJXiaPFGVF14IpDUeD5tw2qCR3lyJSLKiCwQnIkld2aBgUh0e
jsAUNqk8EJFkA6c4dlP5mRdJSe76mKggMUENI1Xwqba4eM1UE0M0MQ0zrV0F
wg4TscCEONMrO6GxjRxBJ04VVorRI3ftfPRs/PtG3dGF/5tGF5rnL4tL7ITh
kWLtTbK52lFz1uPSQREHaiT8fSZz/jmVCaapZYmCJOzXZBKo5zEsYpyBQzzr
dR8yaklpQLozMTfMKnPrKigM2RkzBOx440SD9veRNcghud7xdypNZGiTtUHA
VGMiUvIuWjJesa9zJgPi7i87YfLy+Uedt6TlHzKWPu+cS2/BrLj5R09ccqPY
zNqItxTLfJWbRJUBCzSNlh94+gJm1QbMmqtmNfZkW9gitCv7bcjdF9uooqud
Sp1hKlHkos0aV8o8mzpH4OVAG8GvksWLErRGRKt/PMB5jheIZpOUUFmry/Yo
8vRaVi6PHFe1YgtgdcabacOZFz4JN42Nm8M8J2RUUe4lFqSJa6oYHh6Re+WR
E6+5Za8T52HjAZkmNqKidyNHovWNp/uLrQ68CKMIIQTFVEpuTMzMLk2ELpY5
qZ0jtk9i5zTu+ZQcmciczbJ/Gldft07J2vTfyMkhDXxTcLQ5r+d6z5t4UcXq
32h596u/+66XTt8eD1Lt52HOB1vjoXXLBWpNYQQu6R1lpR2WIEyxaf3ppxU0
L0xtSGRgehhhWeHdsJGqcyy9I2OrbKpnl260XGwvT5JFshLTxkwtldZUEZh2
Z2UbnAGyxG6At9YlohbaQOSw+uuvY+WGk8PNzhZ3PfLCwiPOWTxlwsyV+Fnr
I0tOdKbdOZeBUTxStYOZR77+1nvqMLQ5EktuiXCeQNG8GafODJHziIHLTpiy
/IjZy+4hXVmPD9up1d9/34a90Lg1LFcmjuPfdanmKkDPuMNhVmGLxFKpONs2
hgQHarpMLX1+7XUD4IS1Z//WYWUT/g70AVWr9vzpPNrEZkQRCEBFYzluFSgJ
PxnrUZWRpL+wGWRy95IzF//uwyeeyH4XNNHYyNRh2s3rDz6myKnGN1X1ChKS
uKHciHFiOZoxXHjBhUs/8vsX1lmLIOeopghvkOAGZC867OyrMZSdrKaRwnrU
jgmrDYoEoWGEzhQTQdGYQ/3OA3c+GnhoWJST1uDp63ym3UGRfCaxGPs6W5bD
9a6gEnbOtsdY9an1U055v16rfau+cqWOA7HhAhEeNKJyaSOfqD/66Lv1fv3m
1Pfc02anKMmJ3c5LhUnTpi9/6oOPffzR+ic+YWR8Ek4xMh6vBKob4qw2Y7T2
fPKMG57NpVsHR4/9abpgAWbYQtVB4sB4ft3H85SxC+yGO6rE1efa0GscEV8H
bwnx2Ym1XBQWoxs1ybQKshQJXJ1v0Sl0LLkxII3xSUgVjAcnYuXOB4S0rj5u
HDchgfidrr/jF5ArjOOg7rqlgQ+JVYMaQBUM5icsU5cGnmZ+mtpecl27Z33O
HNDnrQ99by81gAQrSw+asPD0C8SVEzmPnXz3ydX3Yvkr69/6VpCVJuXvtt2O
m7P9LXc/JQ1zyvh3PMd1eidursHVfxUKSsJsHHQtS8b/aUcnEkoOK7mTkJQy
fPP7L92wGsvR5Us5rP2WzadgZ0xQPZjNVPvoJ8vpboEdo/OT3Zorj3zwJLkX
lWQ12oBnfvjTk3TXZtqA2mpmIjme3+qN1Wuxy+vf/u73g3hwdKeZRafyb3Bk
cyZIgA1Pu3D+7XvffP09IFnuztrj6iaNdESHp4qcwiSYRkLuqqKNhEokx+Ao
/DTaYASiujhSDEQNYUUHpVxi0/dzBILAdYpKu9n5fdOlBlngNenbwBcEoiwy
J7KMt/EjF2JK1jRiaVq64AhMmlKZygIgAMpcA2sgLNMXFXz76X/b7ON49Ndv
jdt43O9ffZ1cnRiGpnkYiDWgbFC6WnK6tChlpg2n1LRmilv9EkMLzEehyhYI
RCb3EX4dzB9TOaEX221xR8AqXlJGr0ZBk6snCN8+YcZVa5/89v7TzBgJ3XiU
U2XQht2oiWdoNEdEUDKii4m1XV9afdmPT+aWAkObmRwUgcQxRJJIL5JLsikR
/KDAHW+84wneVU06a9bNMuSiZKeoM7DIXZCZhzhC2MQMctfWqje4g2AnhflV
uT4ichlMGDQ9JIa39XO33//ue4OHAQxWJIsjzfH/mWyrULzadbcYy1vFcSSR
vg7Ri3fDLZC9PGnmJbYIve/2zLKb3v+gsxeXPsDROl7WgglH6S16pfv+VEqJ
Dklsa0l4ZFQOBAv7OgnWmLIxqz+4W3MFqkQuuYe8R6EKIeNRd5SLdW4iIzOq
7WTGkE23xtFQnSS79SqHRvgCxtNowmNJrnw9a4zmzsep+SJmsLNDUwKrZVoy
+BcEvcM9tz2cFzgmV9G6Iv18OWLKffMc6JSgJWsGKcupJA7u+AZyQ3RNdpdT
wyOT64cdRszkdY8n5KTP1+wP9t5nwkVzbsb2vvzHu++zJJOJdpMX04mlbldf
FgxUK6Tx/y0fufcXzCsLyoH5zN0ryNPCqd5xE+GruU0Qw1J8bnOmuv7+Ii+N
RAgn9kDXb4CthfWddmr1acUrQc4Ovnc+kwG/xf53qi9cmN+/nosZ6ZwrJgjN
sO/a6ajLXvjG3hcgrYTR+IzVa9hiMI5k+3kCM161RvMEw8ncqkyi1rjvsKqu
32Djf/73apUEJ6aHF9FNKuHlcIArHrxHkFkcosPS79Zr7n/2mW/tOxXBpnnH
nL8UCprFPqW457Pqxx2X3zPVw9CoiHOl0sFSXnLCqZcr5uV0WvF+Sy3oZcqJ
enZDBR4E1ZgOealBjU1LAA/7/Vw9mxBn93v1v+60CyuYrFqy0a9MOwbG4+Y8
3dfuCF1PrpuEtXlnnL0Ah0ojMa8EvdvSUhRCGnEU3ge6g/vZ9ZO1N6/88y67
2Yse1X4CK/GITPhPu+22RgwcVp88OY8B6gv5RNIWRZQjuxx+4qkXX+esDaY7
EDyQuKy+3XY9KMkEG9lFXQd2PvrPr7wK5O/8yxWrEqlXj72xjQjTa+WSg5hM
zffGv3PODjPU9vn3yy4DEgqVZi+HFAc3JxK9AnsRk/kaAfwW/zfzS5Q/SqnI
4O/zsnJIFA/q1Wfyrhe+bvOuQJhfrd92W37TqW5NnbfeUSbYPeflYIeDroKB
Cr3ivmbU99/f25fRvYmUGRPFHjnEE3sZskUNt0EFAzD+Ja+C3c7pkk0IQYNn
IWBBjf/2fnunUqPYwEmKUAarF4OJeU3M8CVvs3nzXXI2KgoZB6UkJK3tgTN8
wqM8FpfzRnL28VOWzzhl2gqT1dhBywl/dvrg6mvwPogiT1csVbEXCBmtdVjT
Ca8A757e9Zx8yU3B72C8Tjlz5srHtznwIiQDx4Z9bSB4nlme1GyetUZXS+nv
gkwVoQXLAO/j/3aTt1y3x+H0BBIPoxSRnys1qWGXjJd4lJcFyjuspgDifnDD
HaGBDnph0H4O+XXZCvE2oHrK1jaNVFKQpt1rbvzhwTy+qGVLiZaVKBpz9bEh
fLnV0RleQmKGnxrC7wAO4rP7Xv3aVt/Fqoy6yRdBJJ/INtN2b/1znwMI1/k0
KdEaKzYhab3aF3X54M3b7I73wa55zevebpUcbZ7xRg03GaR/q3rvfPmb2wIl
A5yzKDn6zAxyTcMXrU/XN920wCn1VLvgImiHVC+0wYjB+xfNOm9+XsfaohRl
3lGpWLv5vp3366ZkxfnKl+KTg2VfTpFHuKdmciXwkA3fzj75en3YsCff+sSn
GynaJOo4pAlR55X9e3OZBF306yFicVfMZAw73QqoKxKHvFdO7vlM3AFwA07k
e3j3xhe/t5unZ+19jHVi+0ThB27w9KzbQ96Ea3L9NFX44d28hrV5AMq1Y1JB
h617gq6XVbFVqEj8CLvP0qFEhfDX2+pf/Sqlpildy6Uv9AZsqhRS5rKnd9/P
oh3CCDjCM4HaTQQ1V/1fxYoYDbZkx8pa6S3BksdWR613RuyyMSTNOcobrMae
krNvLFrENtZ3yUlTV9y581GXglRFkOGvl5193iKiOaE+gQgBhS3hD6jUK9rL
mKdGs+uJtz/5GYsBnqA4K/grRAnWCYPYu/wTnU0djoV2Yehu4PqYWYvvqqTI
oGAjMoalTBKMVFPzmm/Aj9PJowCgSQEib4GJ4+pnJfM3PA8oGdMsx4a9QhDn
idokF0D0WKnshSBBPLhbPOmihbczNAgUWk6gVhvuSE5h5WNvmLuCq2jxVLjU
JVCq8YY4J5STIFVWLo8jb+nFXYIKE2nZ9QiUAegLyz5+zsI1YWxkeBfWD4s4
RfTmNbVg2FrjtuezXgd4lrzMEzh3xZR5nuAQ0DRs7IEWFXxp6oe0zMUqYWdQ
inD74SZXTjXJ0vNc8lJUTmlZWkuVbkVejwunQvBCLOAx0KoXBBACSG7PRQNv
9971QRWt/nCLLbpL1CpIFIgB7vFrHn4WbQ7tsBFHf+iPn/281e9yQX3wy7Ov
vP3+7ffYvz5jhqLTKAOlEHEnOBKTCea28/Ytb2yz/Xvv9x+YF7CCBtAJ2BRf
hwj0EsmGpErEF6ZVkCq4EueILRNER5Tk1rMWlQ5CZDoFrSj8HCIb5YhMnqQV
uszs6PoYfgS26C8kR2ZEZsgYguIQ0A++/sXNf/2HMePzwldeAXFoVos3gKhf
KlrJJjk9AzYBavAHaJKFOzldiiYIEROfpdDFB6zQlQ/g5HCKT//yU1/82Wun
nz0uylFeXndXLcHKBdIAFG+HnVat4VDByuty5aXGqzAd6SFIRJGLKvGDsRDx
rjGu7HftJHoeJX7LS4BDl11z+xv/OXRYSymDiV0wVml7Y2lGlNwU0hSzVM66
iUl/OPq402fPvpHmTHIxbVhfNZG0NrN7VBNPCJ6mm8UP5LS0VsLN/uJDf3Z1
ktUuDIvP2leNCREyqXjERCtOSFEgzyVuoCS0PfzaF75GmGrMynIpB/kHRAHB
500BMMVUFIa2s06pAXLkgECcqnSEKZMIuQmKKh+YiJpdKTUM71GNZQQFUhfz
ubjLaIkDIINglKMlrya4MioTvw+BaNFFjo9XBnLOP2vWTcyPEsSAqSya7Z1t
gph+jrSV5eFeqBsSZGYg3rcWCPMNFh129uJb9vrpXNsvIoEt12jEWl3UrthL
TBgBZsh8v3l35BiVgEIqiWcuV/G0q5ItGyuBTNniBV+9PFWZGPvjh665uZsA
ElmJdVG0gWt4eI7RkBglUh5CmZ/DglefiS9pdNV06FGbxnO8TaGa0p5cejM2
kIgqUf6WT8FV4T7F6/Eu63As35ALedm802fmMVeKB0IJTBFz253f30fJe2Tc
Ij751oeDh8hzVRtkxh8gHvQk9PLaixt9fNh7v33HIj+x2DqjBGRKJbjH9rgD
Ddz+1LY75TEkggxK2XIGdmIEWZK3IHKRgYNEUgm+obIsuOVr9znSdkbTQEW7
IwckdyOvzmTjYAJSGfEcvIichkx6v+R6CQanWqwVIOyeX2++ZV5sySsUOyFq
L2ZXPoTRv4HoFoTk8Rtubr2ylYqDJIHvinCBD+r74D+qbfy3cHkytoFQlnO3
7E4xE9leLJZul3tiZ1LkQU7hWGBU4OfAXWYonta6dkYZY09WwM194cAj8Ctk
GvK6qU6F4Q31zZRImZ8lScu1M00X/DM1IrgCI+IhbU0bCXXHJRuPgpenKAuE
+wwUAB1YIPcfcsE7Izntd9WND7E2huUrklCC17j1+9ZuvUugxFxwkxEj0kyw
/8wIBC3dG5rK3Jde+Nintr3rnicY/JOYJ1bJSBh/zsjMjJFsS3y0enbtqDaE
GAfk6lxmHqkDvzZ3qclVgrmp1FlkJr3QkrTETxNVUI+x0JBcIqIEgo6ODm0B
O+ae54mD687bZWAI54l/xq/7x0VqMFr4i4ZhkognG+A5UUUXoEXsksRBEYGy
5e9WrbEoaIuYoRQEg4slhNDL8TMX3Unyypd25ubnlWwwgObg5r+695G33xo+
Gr9HpHqPD+bNv3f1d/Ygv3mVNFKcDElot5szHIBQILbN0a6tjnYV82m/t+bM
tyJGTBoycdCQFUcZCV8kBqqcIw1+u+/8pEt7g2cuAJ1Gi9VkJ/Ws6Sw+K4dF
KZsq1jbWeuBXEPo4RyA83IkYq0frEDM50pFkItRjWcS+f7jscosn2Ze1jrGS
b3y4+tZXXtrk7+tixklVMPbwjccfeNJKX6IG1IaV4fdYHU7kVzd/+l/wM8Ab
CtO0RrGrWfPDej1TXa/+Tj5kJJkT4DsKcDp7UKSMTcj5JsHpob6Uln1o1VjX
T8D4pz986OE3fzXuI//WBdGwZz524t06CWnzIpAYkw+Byslb2BWWTVmAD3tN
14xjqGJE6IvWux82CUElIAVHhAWZGlqNnAz05XS23s48YqC2cNB4jHVlKp3K
PpYG+DLbOJmB2rq2tXzhIWcA9RQX+OIYXxznWAXrAm4ZCwi2TGKQBN8Beix6
Lq0gIpEvZIagOE2fnZwdEoSLmt6i40FUoJSTZ81fjY1/6p3HA7cAvO33roFe
ETZYCVYUvA5BR1IjVu9+ryX6A3QNjpp9/OTl262+5+ne6VfsWHUav8G0lLQB
/Gyz9agoTVlLG8Wj9RC06Eq8B2LDpq7wMpNVGCQf3hkHw9sY12qaSdIE1oBn
+vz5D3+0Gfn4V9IQJKIcHC1Rw3ypY+wFlGWJSTe4epYjo6gSzYnD0QrKepYb
5N4+mLEcGr0SKmVxAfs48VrbWONVohvfBtpAGHjO8KwqIa99jJw2sWdrDmiD
BtoaUKStgmWXgUkyMgXtwAvwk13PR2msNgvpR4g7KZ4VJsCiXnnuo/946B+m
X0zmsQRvjRerga11xWooG84zzYE0jUB8CVChUro06LMBqyf//PG/w7bC8Ty8
4Dr9tFcsJqnZFh18jiIrJAzK2L/kbrAeJxANiALprZfGbLLdB9euIBga3EF0
eHcAogwSc6i/s1UjTvisl2clB5PES8R8pdNLKRj+vRaXmZNcIV6q9aHyOxo4
4Tnv8jGTI+2WYW0xZyKzM5jtNoZASQyCWPXStj+o05PMAicVG8lSyS1wrBsL
dONnnNAz533nIIUt++he4JEVPrOfHzgzCBFJ77XCxuJKTiV/c4PfgijxM5jV
y9s0rQ9URMlNMKDbxLngRz532PH4BAwMb9KaSEUniJKqOGEZfJaGns1Zpr4N
alOMF+9ikC347I2YRZIVW7IMWniQ9ayVKOgk48jtEJXG7yhH5a6Fdg6g5q/0
EgQNiiIrJ6prcHZwVHPnnDKDuRbUTDDmxjiimHgQBzuIiVIUz0xjkU9IFV4F
7GvDoziCltYgd0q0iEJee66beKD5TAK2UzLxD47sc089ue7pRz/3DZV2XunL
4ChCsFuaWnmLRKw+fHq3a2997PFtDpy+67VrHjNtRHITSDvyu2IAyRIZzkdS
aq0dn6/oA1j50k6r1jz6/HOf/Hw9BvlCvBFcQYYLgQCvIappsXLH9Tsd9IcP
e/chDObe0kIMR+XljRWnr5fzjRxFxJJGaUcU2haD4pI1hG3q6XM9lrXXGqND
tpLUm4aaVNaI4uRlQUDZQGdror8Tbhf9rJmllXSfLMEo3KdJeNL0xV7OusV+
4zU3GTCxHYqvApJsJsD02sQMTLnnl3/c5KNHLl50K7UXXdN4HRTsp9FRatDx
osNrPQBF2kBHxYsRS5o1dnuqEcrx8DT0lLm5NfA46BQbxzVuXu0LuycBA+Fj
cNb4V994h/afSBF7G0JJYN3LIORig0MJXfIKyGkE3kF7QXVtPTM8F805dpKF
OsI5/2q6KKuRpp09dfnzf9p0M1UdImWdS/7AJ6wO1EaX3jAWuV6gCEidsRLZ
LLBKySG7TCG02xsO0A0+j+XydIxO7+ZE93b0tRhPNGUtFkJRtSgIk/CexkRM
K9B83xhnwmmJKi5cS5q24BpKyAJGnfZSLUieembdULSjj4y2y2r1tyvNMKku
8eeOV771HVlxYmxvGPU9zTl8SR7lBUuMYGuJO+MuYDRALGcCKZjeRLHRq0qA
0nvD3qaCfkMCrty+/enPvXpfMeX0y4J1YLq65JrwtxGloIZuGawSdPr048++
ctOPTrzi4pOnhpz4XpHtlablkoQg8H/8kR2FA+OOTHNVjW2IlsLuIEnw+9gO
Xu+oXn91/KZLX9z1x3ajjCwZLklJf1jUAGDqf/2gs/fKn++0z2P/8ff/0CLL
o1awws9xEtxpYUn3UaFdOiGFWmZI+g37bjKWT7QMaBi8RLGHf4fbGAwBLxxr
+utpvo3wEH2wbG3Z7xh8CYce22dXnF2bi1y1po29CwyDqotqHLxpEsXhEc0J
zqtWLwNOykDZtYt5wvitFf7S7oRZ0yAfFLKhUx9eQX1iXWLJ2JBImSSek41g
NYkCZMQgDYQT6LDxzUzPVq0fB8ykgeVAOUFQGApzXGNnJGwWBMQqUIX81msj
x1M02MryRFUL/NV7njAvZ3u1U89gLUAT4OBceQhhp14lmeweJ4A5KDRm5F6F
+ifoKRG8yE74/X/06VsXJ65Y23YwgMfDwW9hdD/+xqeD0f3irzf7pMkNd/JP
q6wwxIbZmxi/a9BZlsGr4NbLom2NA1Zl4j96/Sc6l+E03p+89J9jxz304Bbb
v/Lh6DGqzDz/r6+jcDOUt9tbUqtwbRSezbTyFSKtpgrIE2iegKCiMhUr3Txh
jhqRpQXZ1Jq5KtDH1L3YLqm31dm1FJhaZfrqaxt+lCKVPjltMylroD7mPwMB
+F2rI+BLiQ5OfN86U7FLmkaKXw92SDIjmN7ETDD06lkcG2vF/0HNvFgAvcHA
M3ln6fVf0MetUbOpEpbZPRDIB81fEYLR6iKYVn8qoTLgNbxv94W/AztYmKlf
TyKWpgINv2OZfLYCdUQ2/vCFF2BGPPDwv+zwu//s25dbDXLGa/gr89aoxfE8
0Lj88sNUGGhmen4KlTs6LWmyK1Fy0JVNvgnkOyKqG80RzTbZSZwxcZIczQvi
PR647va8pEsEijeQXXrjWnWl6q8VzDrIoSTP4DX99fIbtZny+gFvJJ0Z/aAp
RRKDspeQdbqrnrqRpFnAAFwaJsl404yS2qkEWbI/96SJVz/+xBe/acWkbben
cWmpgrHyiy41YEF2gotkOz+dcdXalXufND+I2GzbHTZjlRYoNR+XBeoz6d/a
GdNLFcwUapW2MbH0XJdTB5CykqSPoBzYV+7/xbqfb3vwDNPNsEonFSCwERwY
fjZpYJrRawYJ5ydIHHb5snuvOuzsxYFTs+e0ooEGMO4PYOBS0Hq6NDvSDl6a
UMht/PbLv375+c0+RR74zGuPP4sjkvBrfnitHaAO8LYrt6dEeRudlc6kSpTH
44W6pUyC8Zu6hA8Dh/3bgEHSrQJC3F7j5J25fsWqlCaJ15UEeAhSrU80Hmx/
aV5KeNq02kgU4APViCz1X81uqfygcpmlKRSD3UIIB0OuNevUlLQqkIkcFNhP
PfbPW2z4xqtvBsNSYACcasWsH5vmRrLeN4smZM/b+v80RKxZmKAkUhW4cHgk
vlwhVZVMCRqlcwOWMD6V4qTDYdDMR4k70TTqTL4kwxEoQ3WKfG6Qk3GOqhQe
2IrNoRwYX8lN8CuzWzqNSZGYVHZ4Gzv87YeDh/z+3YFDw5aMMa53z0OjFOQl
DN67/sOttwGciTefN9vYqV5buoT8zLAUbc0sbEcbiSQ5Kq5GLQFpd2rnNVoF
ySpmpEoQn84MFo1amJu7quUI6iEw4SBnZ+XII3r1bC7u2d+UO7MhfeysuM1/
JbkcFvVP3rB5CW7dmlAxb7/xB8inQ9w3HiXv0U9855xJSOehOgEDyFEmeRlS
YJXXhfg7JKeZfn7PTkdeampeOvKZh1YPkkNNy9gEJ2VnjxI2sWU/6KV74ZSp
Synnk5hxKRLh1NOn3zDlzJk3iWVQs1XJxC1+F27AutwFz9Izlu3yA05feOi8
a+8XOq/ZDNvpHxx08L9/WKlSmEBsidxJqmIy2htoM0DA3799Z8QY0jRlCO0f
G6OwZXWAaQfhJdpO5A/gwUMBfVNHMwfXUpSmpImvmO82AKWMQmMkxgFbwU7w
vCavMkUcAZ4g4GI9NlsulnjrjQ1lXDjYisN/DhtTVILOxIfIe4djombLx8xh
GrQG/yn8MynT7k9ywnnyf/ywdx8V+dmrJZshIwqt5ilf/A5vxFRgTq2wSRkU
BWxhFf7IBTgWp8VLcrWSz5QPRrA4ytg+UQGONS6SylvJUGPFF3WaNOBJOt3W
s7Jum0ebq6o3rkgVEBmGJxWabmjOtYjeSbCG1EbX8vs8+c9nTODeTD5i4oeY
GyGawXWJXQA8/Ruvi42n2URV22bUFJU44zGpqjZT69WvBTpDRmR2xlved/9T
esZmoEeuTDmcu4bPJQXDUlhdzFjelSYZMsahy/VC7pabRVEZKNYbnSGDX/Op
vTwbmzyUiHkz3wVomHTWJTd1MdgNpuVQFZxsD+mtt4eP3nbd6ru8VvhS72V1
FYUAe9piS7iKJ/GaPtS2t2xYsXBcuLB0lK+KSk8mSfk7jS76fgx9eZNTJGjN
QZSb3/vYujBQLft1XmV5l1emrgYb+nEXXoCb9mJpYlv1mYk6UoRh3SEySJCN
2XEz2P2zyXNXH39xlkiv9VL9HF1kbG1LokAwfufV+ouctVL69d+M3egrzzzC
bindOtMPdDSPbCgvLNh8SpLn8eUJXZvhKVUK99CNzYLTaupG1VkY330D6l9L
7ANwrzjmvKVnT5x9i3pM4yJr3HnPdqFLkfoVEijMK5NktEGZFdQ4RGB3VO50
wx2BBhWlwoNTTWBSYFltjlAWzQ5fQFWepKUkAYh6lprCxET8m8m3UEOorfty
oePkQiqZmSMiju2CbF0QxRkYjgFF2iXJXBovuy/TB+0sltLQYT2mfWrLUC9j
r+YohY5IUmHI6G8e+QX0zbjI+BqjkwRkOxGVnPfLP2+0cYgjtTu8IQfBxoom
uJGQBkzMQQ5PeMXV7L8rV4ib/+7Oe4BJbzyoNHZJBHA9u9WGUWfaG6mg7Bu1
HsborNznpCsw+kbsvQPWLl4166GjT8Pp6z77OF+WAhor5kE5IuGp5Hga8fZQ
2JN+iE269q4dEhKRcQv4DklDiV1KTRKSqMeG4XbWNWAOSAU67R9RaIkb2B4F
BA0zXalw8Y9fuvKa5av2PTZYmyN0rwLtk+///BdI3vrMHx7WGkqZxX3la1/a
7TydGG8mI2g3ZQnzATLYKlgSXpNnM1rivt998as8D4/7Bjt0KJ9h4bjNyD52
5tVrr+1ytmwft0QaZ++2W3KngYx/x/b0OtskRVASQ4bJMlENhmEZYZmZ0K7a
TgzkSGRGfDRlMkanstNq+XYGEKegxpmQLNfEqLWI12TYpgytSSyS3Hg8vK7X
IK0AuEEEpCM3JfTPWgXwhdYq1CJAqzqNI6BlNWOilNHEem/eZJvDSZ2pEA8c
PD5+QwMxIgHt2FUIYSBYKU3W1j3qlqsvaEvJyT7n3TUnvzMtvzXjYYhD8SaR
U5MG5N1EHortdtAVKx64//uHX4KzA8qlmgSfBnnRiUpkpWlQovcS0kYuqfjP
YFWTO5V6NkkNaPFKG0QOwvbTEUrFbV/SjLhR8fTywScb3rD9bFodYpFlMeZi
5YDTb72aZObUYzNfk2mi2VNRBma6ozO51JS12aHzXXteibGG1rNKOFKEVuJC
ZlRcw7/PnDBl6d7/OmcuYdsgwxBH3okJANTcvtuxc75232PrXNkmIX4QMlvX
kDCB5k0yIoLgYUYZvnjmpMtvvWvnoy8b+eZb74ksqSZOQj3LUMd7m0VWUUIQ
IbZV5HrlZqkX5IhTCg1zbaDujzB50h1Q4jBALZ7DH/y95nxpvIMO0YUchGOz
na0BppeTZuhibiZPyaLRvR/2ZJnJYNJc3g0iaauolzxKO7VVZYLpEKTXfWZy
jhq6oxyu9eSVuTjID51N7AixopLOU7LvpPZbBvBh3xefMu16qgybIuDopTSw
mSu7C9/LJn225W3FRM+YtEKs08pUr7NDgocxjogReqFEIx2Yi+vUeR6vcsME
r1ToeA1p253dD89Jn15WnHlD5OlEY7gY1m7y0VQAeea3mChWuNmLu2GO4Ml8
6TLWip0jeRIrMFcaymziENNeYYxKDB8GQk+fcsUarHmDKNHUOfl8Jke2djhp
WPwdB/1qrZd1IMc7YCVwRj+VGtUwrO7Be70zbsBmdYrXxAsnOnueGBjTHTNm
AckFmtet3tQD6fGOdySgSBFeFX7iqRdeV4nh4WpIJBstLRnpfL/icFmvSMc6
PHpAlCxaddDXkQBtDodK+1QwAapfOLaMrrqHVVPdpVkGgqpEaGyU/S4xAlsd
QS/CJDFnPAOy4qByTESlGnfGlsb6GLA0PR1TtMiRJjkKJpCbyzL2vpXa8sOd
dUrQFf+O4VK7XHvbY3iec+HDexJhYp6106DRlTTJekTSUJDlTZzhjqQRJsFS
yUugtrKzs35RXahKzsRMMvAA5gxX7hkXX8jEzTaF4kbvf+jEVBzpPd7RC3Jn
wqmVvOHwureNd04pY65uGWxtkedVA8rvktyYsRE9GlL0eM6LY/SNOksZYXx8
Tv18094Ry4PmD0moDl0PjbymKX/R4G5zSKFXXKwmKvSPUNRn6atQag7vDtZ/
zSxA/I0zEGyNRnJX43WZ8+JJG0TGzDdNS/AppOp5vQnDeDXKYwsFQlBGF502
/XqSkSw7uawZ54hjT5549U8159PDnO1JHgLenXr6jBsweFjzqExBo3qo9TTU
lMiRoQ4jSUSbwaxt1jzwbH50e0I5mRFc5R0irRzKoZLz2b5xmd3NFm2CTOnP
g/QiLiJPtnXYRUblka1yI4GdLaejJs0cRoZlDLfRwIzyxBiTSWoPPpKbOxrk
mAm8qmQZl4pAUppXnNKA8JOuU8ZFU7elEreGa5Q1ux9/ucFMotyHR5Dqdcnv
vCaZiefSO911wLa5blIntG+KUgvPuQ5us3KX1ZBqn3oeg9dUuk88cQ3bbOCs
reLI+r4OPK/9k7Hh9PLQBBXU2JV35x1z3tILJsxcaW3HooBE/l2vz4InhBKV
5wkXueklDq48auKSm/Y+6Yqhb737B946e96hCpviBLW05iYjy/IPV9z2iyuP
nLgkVwqQbHtkfD035qotf4/lCBnPYql5I5rs8jwD4YuZpPlOJBL1YIZHfqKh
gH83d9DKO+MdWjdBXiyIEc1c+69AouMd1pN+wHgOZJEkXxh9YAVtJeVM64Yl
1wAVZwee4OkfP2PzEcbFHagVLoS97KAzrrr45GnX2ynhCWGNiESsQ/eEYBPP
QOAlWtjkEDJMTWpIjtT0bFSDQuA5WrgjH57jgeHb+D2Zpla8pCTaMt4R6wbj
+ar2hJ+9yShe2xdzj5nLgygzsn/f94+4xGiZRPyPd8Rftfh3Tjex1Pz3RE4W
sApZChzHzBPWkxbx5U3h9oaNJvfgwxw0C1q+0bWOJ7Y+4KJvrn34efqTyR5y
ZSCmw3TVwrNyxwxG7m7beGNr3JUlrPmlTPRs54gemfEaEpO6kBUSUboQaboC
NJQdkk7A9TPRrJyi0XokiabJzQVKkhxz19bmBj09/vFR+nXv7Z8qkpLz+sDI
13riBoe6fCF64Pm4mVffSRnd6rC76VysSXGiw5yBiV57x5KNKtMOSjzYfs53
vebDw+Na8iXP+GbXVtY+sdUB07a465EXvAGo3hjnccVbSbDd13nOu3KvOtsb
7/wulwa059JVj2D7bSmd2NeTmLdnibUVP+d0UPSyAWt2yrLestezxF3A8Jx4
L7msVix5Ev0yNmIBn71912PnfPWBx9eNdYTP8FSemyCWNqdIDB6jY3IGTzfu
8ro0GVWhyv7LmeT5bpQ8+jXhEuCJoSw7t1vJyIBVP0fCu7Q1GB0upTgMK8gl
4tgG0XgFR5bcmJdS/NKw9AbobBCpQm8cys5xm7RppZ5BKa6DPzrOWX45Kjch
lfexpDDYmc7/2Lg2ZRa5HUr8Kc80MfkguodeDgd4MZGyI9FHOEQg5YM4pT2X
rv45nlcf3LND+jm4HhNxkw94eH6ZV+aY3MZ5BsF45xuGIoG3rDeCiYElHzf2
qgpgT+x4Bp5XcDI0/i6X9hCiK/Zy2zqvSXCsrVhRJJLeSHAVFsOd58akrHfU
pUvuwt7GOfLHGGu54QOh084m6379Fj8lOV0FRg9lhPUpusdfwrF8JRM420f2
ygmccJUPUtQoZT2bMc24z7j0VZN+VCbCmTWZ650Uljcu/Z3JsdcrbZy7XmmX
4hlr4wijHzTdQbKa8ldXYkzmcx8oa4akqwniYZyzamlLZ5EKbF551LlL9r1q
5UPyCj6qzs/ASGxq7guxJRG2AfE5rZrqdIiyX7GiTBhKwoUJgusxXCgpVFR6
zD7wqMa4b/ksqMTN87KgejsyvQFbJVjKjrLdys2kwXHXz4oZL+4ip5E01fH0
U7uDZc/08MSMVGR4N9muSKsWiz4vh94TM8lzo+MpUw2jMxfFmiduhka0aJqs
iBuAWXbghIWpuHEtHX4RlGKi9MnGPBEhgmeH+LgKHqFY3u2QdWkhxuhv77gE
2iUmsSrJJTZMrA7awKga7MW3HUnArBbaca3OTjaKeMxNNKgmrGLEzLAoH/Rm
eWxctXpB0hM4n0G75OAzr7rshMnLw6fGRYpnlQ1lSGLjC2c4eYIaR+L7wgiJ
md8vIlCDIl7wVyqaGT1EHnOuE7kmKWDrcWJzulr5XOKWS8O8xH4yOSlqP/WO
PKN2icfH3oV7JmtqlKrYltJlPctjw/Zr8QDVhBznCPOS85yXMORFJoY4YkbS
H7Ase6dt0yoSYvHC1Q2mOSVl02KaJuFvYc2kFL4esyrHO2JmcMQ8HgsSWJaF
Hgz37HjkpabhZ5FJk3zR25VhH6W3rDdby/eijNGwqJApA2AAr/rBc8wyOzkE
soEM9UHqWTyeGbs5lyR8KkNAmRNPaEN4xaFeiG2jyAlYfSCj1qhtyB1KxaId
kovlcVEDKRlKSJ9GNS+dkz7n5gZE5VR/hyy8G/rB8TnFurma1SybTFa15Zsf
JR7O2IhW1Bjvt/DGh3hfiH3SQDSRuARcP4fRTdApNxsjdadFmHizar0y/kQW
ytGt3vOEuaddOH+NyTzpGX1jI0eqE1ZSzee5nK2RzFXzejJE3EvbFwRwbHJo
wkUmhSvnSnY7tMTIHOmcRCZT2vLRAvxW5dYGjhAZFLGhKt2sa/GhP1t0+Oxl
99hc6SJDhd/0MhSE3hPvQITI9yMbKmcbXQeoWNlRly25O7zqxZUzA7qNxg6e
p2WgpcrGJ85lH/XK33KTTfA7rcOqx8nyWXZpe16i4rckXSXhEamUMdwf8tft
/SPlpKSdUATansWk3iSAJVyYmOEe5edyrYKENxf6mhmTCY5urhx1qNztA8wl
J05dcc7E2atiKUeVBh/jWGkRUrogwU2iWE36Tr6Nk8eUCRPIppNM5A3jd6ee
PiMkT7gjFj2PcayzllYVFb0dKN6qBsddakqH6BnO3+F9Q2zOYhOTEuNF0GzX
ZIXDSGfJIyLNqKY3przKI08+mEIW9dHNIB6Q9LGXLL4r1lo2ZWeIcenZGQkx
fC0TET9IFxFExJiopZBXjHJWfMIY7eqm9ososyPJOefMc6IyF67TXkWzTSLd
kdCc1Xo9Uh9BEWlNOAanKLpt3ZFIg5CNQD+BOhqTZWxwJum0OjZlZ9NvK5Wz
QtnOiFwV+1Hg5AJ/AyJTUyFb+0EyrOjYO9VgwVPD1oB5JOdiCnDYokOAI5yV
9nZ4QIqr8/kbJPpaPFB1e6QwhXc22JDdiLCDN5cuMVDk0iMvGmPKVPibZ21K
I3+rfvDHXhRDtpmOdardTCMjNdyE2fDMx55/+bdk/1EOY+XSUammo82zocP3
A1JtGYSZmbnB32lIJ1fI1sg+MINz1D4wRpnmrW2eMf+OKfOHlYyJkA+6csUD
933/8FldJ/qi5yj2j7TCiCkuyclpRp+qHSdZEmyjS+G8ybpX38Z+gTIrLDaJ
hM5tIsto6UETFp4ydcHtoyMx5Fi3Ys3/SWddsnL+kROXkA2TCxljpuvtvVww
JGGH2ANfWAl/1ZC3ESIqGyUibG1QZT8jmCybFRVJ4Vt3/vDo2WefNyeZsJXQ
8nBHQZo2kuoWCosnRNL1h0db041u4Cgo0a7WXlBAQn3JfdRYh9MD8JgjnIVY
LAtmDK02Jwomul2/9nEIMp6ReEWox0NdXsDHKIc5hjkatOzg1uPj/vFdVZ1t
URbawDXNJpMv2pMe73RoUJCZGGvCyjs5rCwS9fOPPPWrB3Y4bFYXYd6PRYyJ
Mk9zbgbEdWNh+D0KXclB8uHEeczIrWYvWIPVvfimh7Gvva655RGQtkx64d5Q
mn3HrsfOscGx5GJSFk2sTpg879ZFPzlrsYmx49dBX41NfxfIQAg+SUgw+flq
xBvDLRcATXWkRBuxO4QFGYczUkOrfs0oILUPRZdAj2BgOod69XfwaTIg9Rah
b/yMOvdyL06SIjl7FwG53DqTmVSxtqAiphZVhcZLRZ5aL0alnMxOt9tQ9Zjx
cBUXgAuOOPcae4cJbHlJJybSkpumWWaEef5R515jlHHCCUN8nejNzPPY2QRc
VKwXsDPPyKSl9KSZvQFEQkRJWOXrGTvvHE8iz874O/oowDQHuDEOlIFR9eB3
87rWOqsLozZm7yRStlmr6cxJc1dfcuKF18L6Dwe6adzYZSdcsPzOHx4zuwv2
3Uaa6NWfWelTW+43bfGhZy3CUgRdtrdWi2moBVSFL/Vy9IgX984s/mp+yiGJ
wnRDhtQxDkEqVb1kVekMBLCYT5Gkj3tpEkMcGP2idFOvS8iZXML/e4w3LlKM
NkOWqy5KrERlu2afDgrgyiQLlz9yEYMil3fh6o7Htz5wOg430F3/eMKaceDl
kZkGJ8zCUXI3+dlqZ5s4n2o9r8xyI4dZ+0ZRnRcfCc+YviXqeBXkO3tKWLRJ
YlJ56vMbGdf+MF2B0WdB/509cfYqYEMjiKMdKZadRJkXiWu72Gyz53/1mwAm
mDamlAZrnH38lOVIlH70OwfPgLDdNB7wRadNvwHtA1CObEpd7a1ZtoJwkz5l
wsyVK/Y7dQGaYdaiTMnfmvN4A6Obrnqqs7wGSqMiaTDkhjLHgCBh063X3P/s
3Tsddan1v52Wx6kWl4aYVvbRtdAwnEn01kMZ4iC+v2K4I34JNlPYmdezyUjS
3J16YDu4TwyDm3FCSodjoyzCCYWNDojngeAf1aC4EmwUOue4ycuWH3j6wiFv
v/snhpG85KPECqql52fvbhJxONwRb4Mi9Vil5k2J29jhVuOF6HWO16rBjH/J
D1ikbGukY3sX69hE+wu37pJya0CAcCstHPyOPir9h8SRFptj29X3PvPzLgY8
elaWUDDGORNhNZzhjT8++Yo3vrDLxC4cP/SRjLhJ6qiNhc99yLwVIbvBaHe9
kRJuYqQEORMQ2GF/plOGdukRHOB57SzqBXI8IjW5MvgGvkWORZ4fuizlpWKq
JPJdGNSyk2wFHCxOi5l35iJcTV6vDcYA52BrUePe8OOT5wfybXeOYkxESG7q
aVjiLXv+dC4sBr7rVZTjuTW7HT/nCNzgDHS+m2n/NkZDeWP1DenkbJI53P5z
CRF7rOulTXm5xLkkVNO9NcWJx7emTUqu86tbqepdIoBz9BLHU7F9i1Vsgvct
Mqbd1fl8Rt9abEHFTpdypINl6S6KU1h60ISrFh129mIm/LkpG6I+T5y+cC0G
gN6581GXbnHXI7+UXihWT+GLSw6esGja6dNvCEIt14IgrFjs7YQfun5z6tQr
b7/0hCnXhs8am1B71AgnM7xuCTfRTDVny/Lumt2Pu1yDXwMj8q/b77QrA3ON
cQ6zPTKMxma9GxRJrGYIj2aYd/E00BFAJt0wb2ki7PfLb+w9pdef3v+gxcv1
MdJZK4xFkWOuRdfJ3RGXHYSSIAS6d+XeJ8+3K0DI5PFtDpoefpI0Cl4o4at4
PbSEMtcmAyNlqs3U7hC3V+rtVbdLPCAxscU8yJuu3nFv4vCzyRXQRGePn6WF
m112t96Zxh20Otirex0TdZIG1P4lY+fdCtk5aUDMCIbOOBrhEKTwNP4d/eFP
nrbgNs22HVX4nSowdtRlS+5BUs+ygyYsZIRCunwnNmg96/wINc9wdc6BDQp2
eKQYVaT17BIFeoXZAO1RROqFs4BLmt94yU+e/h4ThRqlisbKxO/juRC5o6NE
1pV2OtrBy6cwIyqYGWfaIXdvEReYztzY5hO+8DTUpyVLJytYQw3hEOVrEOCI
VljcONZX2OjSgydctf0tdz/VYjh26hkX37jk4DMXsbYZZ8EuITr83NQJqAoX
9eqMA3AbwSRr8tJOh8Q1qWYwmZFqAhuLStPHP+KwfEf8hqphj+UlF5gxF3sT
66ptrynP6AhXTfpvZny+e/wntSTGOI8LipmEH9BuUodVsMoMJW5h29X3P0sj
0qj8JBSQfa5G5cIZwEu7Th0+NKgPz4+LDKhsL5ceZBrQsSJTdoHfabrZUOew
xdylzsK/Gcs4CYGPiTI0V1Ph5St43dO6Zd8y5mY7a/DsKFeMjFTS86ap1hxl
VY3iBWBZ+eBlugo1J4Hq2BKmGjVcSHVZnKUYRa1tbnE0pi0hccaoCdprEpW9
XuZFG07eKG96noGFJAbIgQVMj7dJA54oSG7qvWwML3/Iyw41yYhq2BX0cutw
pJAnDdojJ2tMsYE0AOh5x5y/tBnF3z9ybuorhVP7ViYG9iyWzEx5Cag0PXKx
dXwDvx8WBWEunaSNoSWApVJkrrbtE6DpHDITxTJKaJV48tTrYCvyOiugyCjl
nEyoWphWQBseVhlpsorTQQHZNWj4q5r2uSr1YOWMSZVnWJtXoFcsGLw9aHAh
yDPpHGQtAjUyhPcSq8vEdvB8UN5e3Zw0sMjnsJmlqrvvpe2LSE3cfQnk2mCN
aa2QPGqu+5RfJXk7HyH3YmcjU6nBm0BzzcJbQL20qEYNBcj5ibCmXlFRP9iR
jCaeo0mEngDxbI7Bjo72Gp50OoJrU0d61CKLa7adkKnTZa2EMRKYI1VoQwxw
FI7p6qosLsJjr2LhkUwWKMXDsoV8Q5XTMoOijSoYP9kEtgAk19MoioyMVwMq
+FVUz+144x1PYBPUEKMcdpPKGLs3CvL8lUBypzXIUQQCK4m8iwhTv6EWlYXt
uDI6PW6rzxJSMYpBE98jCsop5s3FXdXKIhuLGhHPVn0W07cklwyVuvftkVkp
mmNCRSppvKtlc7mukQURH9wzxY3X13dESvkmyV6nzSRU7GXLjoiClSekylIE
ibVUNGOmHIUMqDMZiVl1sDfYUcRedaPXosUbtucNfy3oX9LLEWCeIDEXwfkl
Og5SmTQ245RpIc+xwAKRhToDPlPfYctMnPwoflBtJpOQohKulO6VVrpx1NS0
Fb8f7MF9MUeTmR/4eVhkwJzf35korXqWmpGZua+/Q3801BNqs0a3PtVNLMvN
AS3nE+AHOIcv4BITWsSlMoKJkueqDFSt27tYZyhGSh2jHUow6lKDoca1VZUn
30jQaKLiSgP9Izy1CL0LRvEB6BLbpqF8PmEqrzXBsEhU6pKJ9ZgwVdcf4srr
bGfu5XJtY5PJsfiNRsLjLtWQyoimmpB4PebtSCJYomu6/tAaEk/YTiyk4+ze
vw+Oclcvy9vj7/JtqRLLstN5Tng8sXa9Qt/ejhD8qENrpnwZ2w3naAYb5SRR
xYZFdA3iaCUsNijCzZs2yR5FFu2d/RPITm/ohA2SkyinApEVvoJlJxs0THHS
Sul6VtAA8mBk1HOpjEemyjI7+FpyDVvPOuDgZ5r+Xu8uGe6XnFk9jldg1GR0
KkbCV80YeaVvr1NjrqN7eNeb/yHFT/bKV5lDyC3JOhrtiBMjJlR6eyGRWM0S
+8jnSj6C2DEt0JTMTRSSfUXz3XETh0vETmIxZQRQTcRZPab5epM8vKL/ofFz
IdKGZ2WcXz6+TX/TK3wSmzvRefXUPLRCWS/YRVDinS888uTLFMIcTWcmvqvM
8ZI72vUIqvq3Pg4GzMgQ1SkFRb69HdG2mSNiyukSw5I8ESOqtttFi5G+cknb
zfIR/vcsn0TrZNOMWvb5/xh7z2g7q+tcWEPn7H2qjnTUhUTHGAQ22ImTm/gb
yb2JndhximPHuNtgMMX0YnqRaaIjkCgqCJCQQAiJIgRCFNEEmGaDDRgbm9gh
gzjXsUfGNzIyvl/7O3OtOed65trPu50fDGCfvd93ldnLM/0IdovHUjp706qY
JTmvfM/9DI3WyPUb7o9wHYOcYPkGnQGP52tEbP66F/OwOjtgIBdXUIvrjcq7
RoGQLDbmKzBIC8i2u89U0V4SibuWC5I9C457Cmvkr4Yq+F3JZwPl0nyJDHUD
hhP65QKctyuBmeWzCtiXqdAUbzPlIEfCgLhHyXI0PGKPtL+xgmgGiD27vMZd
SVZkyaqV2ORTZl+zmR+Z2YfqjiP5jhRrSzGctxtU01lQ0ARiZpUuLeeyqUTW
jxNxBcO7XdtOJd9j8gZC0+6INcubvpDpgdZFd/n3Kbt0ycCyVLsS6Z0nD036
dv6TnEAtn5i/Z/kROWghXTa7fV5Zld+xemo20EFOSk6ByYxdCXkBpEfVy9my
IiVsVsSBZXWRIhnRFeD15PeQzZTVpmWwxiMGnQh37O4V5AA8EQUpnWsvXbFN
arkn9ZBFLNoXAtAsCwUwHHW0tjvHU3El496pRZvIUZmhykTeiDPWgiJ35UCk
eB1+FKJkELhy66SauIJlzwxEIUg0Vj4+h+yVwaroCHscx2Gpz6T2Llr+sDwX
Jgy7yQcs6AlgJYFgB/T7GcGgab88JpAamo2nEml3AKEbgBtyd5vlp5QtanuH
1bXtFVdkZg+AQbmFy0qqVQodWU6nKkxm2QuvazB/HzDO3N6DiKbb8+qjGZ6d
RSpnkcXC2z2G1DDhXgURNk664826iUorHODpupwH8eedGCOFj2sExZBIquzZ
JKdgMLtnMxaU47bGPftekAsLyDuABDFyPZlQq26PwQIEw5VZo2xQ4rRClvI9
K9kr3twI0Ua6B2kVkSpZfHiQHwzEvKqISd8dbz734OOV7CGTOGx7mYuTsS3Q
6hded8eOgPvWKdEju62QGZ5DOFm/FzJmZWXAN35pU4koYm3O4P+7kDsw03eQ
OZ0ckvSdF5wHZuUoyYTIyp7k7XPJyllUJs9Fm3QUYUOoSnTGqIaGGIVNJz8H
aPFavmBIUs5wFrkYYC1PrgIUgZejak+gmf8W5UxkxjwklmGtQlMmzheU86q1
QWBPVqtRBX3Rcw7zQtT9MGoycMChZkYlsChtWY77dp2uICrph4iUARap60fG
74odJXcq38Pl+X+Da+myGGS2NMWm5zFEyD6y7ZnlEj1sP53cQjEW9MnBN5pF
yIkNKdJhp5b6lmbFx7951m1mOBfRwIYzgiDzZDSolxo2NBztDHJVUJ/ggSZI
jKKFM05YKEubNkob7PcpgqbBnGHW++789azxBpwENzryXLRJR0fGTBsDhq/q
exz93zDHmNu5S7xgxMS3uLFcstwDNFc65S0g1wQuXTe2eAhwem0Vg10dLOfg
kQgIxNZGR8hKMzkADW7VOEqaC7DPEqVpBgUDKMZY8j1WysWqATR/bIbux195
45d1OoRMYowSkmUAAbDYZYdOcTSxJ888+K1fvG9HyXpOFhSdYMvyLbEZCxA6
qHtPrEuzMYMDcSY/gj7yvZmFPuvweViLSnRDi5NnnnPjhqfXn5LX1SKig1Xl
q/4P1qoSRLCpemC/h2jIlOb3BrsDAGJcBH4oH5TJIfl9qlWp5E80dJhSZWOT
dyHnz1IfKnmOKft1U3oBWfNQ+Z4HVKaRc6mqdaECMcSU5dkzyI4WELlZhbPB
s3JUdQNghApSNvyBjhwLaTCw8Tw3DbhCHnhgoUGohKhyzhHVJpNiF3ZhCH+x
go4FTh9QaCPIgzcuWvYgZmw9dDODSEZw5ZxwleiJgeBVwFcvXrlNuopZ7bt2
MeMjMRkPpfY1TD8B0XL5nO4Dcq/1xKbuBF3FyixBp78NmlLnEVkdBILMOcew
XnYY6FeLmWCI9ahtCM+bTW4GokVOZ1BWjSbHDCLhsqTpe/DIRes84VfEjOZ6
ajOnuSOr653zCbsuIEeQxzVO+k659VrYBH2lBWIWN+kVtQJ54wRRBX1sRhJA
qXl8iEVtKtw+Oxa1fiz2Yo8YIjdZLEkCEgQVhSHvzDTZMDlfQMCpIC5irkmN
71CiU8GHo9Jl1l/4bKyIXDXxvu+xaWWFEDVgUBMlR8nAYvOKU7RtxzfOuk1Q
/aAzPQRfAD23akKO5Q+acg6H0Cn+IEzT9nwu62piqQCGhTediBxWP6gQcfI7
8/vrPn4magKTMBXBJi8qRFhdsmHPn0tOkmnQCm8NpXMg2Q+VI33nE4dfl16Z
nxdaa+WfYN9AUs711wLyzgVki+ApeLo0z22cdGyzyCGc5lAdxvSaxAmaEWjP
sYAHC+liSStYSJ5pZIGcwcLTVa7YwbPMBWLgOSyMWRmjaZUQMXFN2U/UBgRm
PK0CUCBeawaQIZ5WmkXuEQadWR4QwhPMOtWwA14RBqSZzBonn2lbaJ0Vts3q
HE/pKZaRBlYw3ke2z7RaX/ci5R/jtMlEblVjBRDAJIQVVECgQPVELrNroNig
ElotOvCsx+Sh8Ax20CoxgkDJlNAORwZCZpdGjosmW1Wfa9fNQnQfiicpGOdM
znSV4EA63gvXd+GvZYllYH43GPKcxknHFVHjBRrMnxkpzO71LBDZ8tAqZNUr
uvCAsY1an1YOqEIWoVgCBiKeHjtQJB+mxZkvDlWcVU9/V45rfiFSWVE9Lc4d
gVHC/IBdErMA3ZhHMwirtuKrCxoNSpvAlXD6tTURgtM9ZnAHozQnIFrINf6b
LHOG5B0Cm/T1+574ocXozTxwNtmVsEheQ6jARLbyhvHCzE4Rc8jjVNCwR0wC
6yj2G0NU2burw2AzZpswvHsW81bxEmydTHgtZCM/cGYKDpFnQEmIGxOziSg7
sPCDnZxEalTC4d2jumZFyvPIGwFBxGMrxbHPcxcnHV++5Ayg7ByiJdorK0vE
YbAwhMBF3K5FyVS4A6FSTB4NQJUeeGYOQUPkXSnKstuidjy7zWxbBigCva0u
IhUhsM4jWxJ+ChF3kIZ0TTlSvueMMZ3wcNWO0zgeRU8mlBoz8CoYAOTRZyj9
cYEIQ86qWXLeUhRIXWvDbY8Tn/03lhkL8pgIgeZ4/iAqHeROo2UGpjmHrHyw
CAQLVrstMR5PM4mffDtDwfLsZI1tw4U9lc1sE9YZy0YWNHs4bbQo0EVgHkJ+
3WDdPlOT/2xy0FmktOphTikAPBTlSm2vsMLmOZzxdifCbH7kgEShKmROIEIG
ZKnXTgFjmbmRebZUHVeFOBq+sSyVXfhY7xfWKWUTm8l0yIc/wLLaLkzYUUEk
CVNWmmW2/gTB4IMy8EApw3HVMM42TghhPfMDRWQ5Ukan2ALgynpgWTcRdDRE
hlwgM+eCHYCKDgxS+t8VuaqO2wqIksAzCYqjiTfSNTGA7rZFN5z4VIyF4X6s
oUQvyDw0E9/McdYBzuhZsjlk0OpaYzeFWlgW9GZp2xIv5fXv4UX5xgdqPPZg
cEMXhlPZgeW4vIhLFxiKY9pFkhhCgsvPaeSqZkdewnmipOo77iXPZJ10Yvm6
K0yAgPXPYBiinJ/JD8i6usME+AVVLMGDtpbanlIEv39V3x7CPZV/YG4I6CTT
itddvPwhySBSMFGIfHmuSV/35y++/q7giGGTTiCU4aKPKjSTOEBE7yn4+8oG
5utVEiJYcsy4UEET2iE6JRIxRh4D7Sey+z95NXdX6NBdVCIKd7vdlLIQ3zxC
Q4NRk8kV/PFrb79neZsKODSlyDQuQPDp+jEtJ99lzeXa0fn5bTvfWHfqlfeE
SWKFbUcIH+Hwh7CJkSIvZa8yqt0Zns05UmgIPC90C+YSOjmgCJ4aGZX0M6Ym
84uuW/v4RUvWPGH6y7RNCCoDsCuaBVoNx8yCIPuU3U8qzOU2MzCcRza0bdxI
rkoeBd5UdjfzOv1cXReDEDH3dzR+FRfLIhHmICTiAczqM5ff/fTzh5y6ynPC
DIlUl1DneTQoKCs6dPOjPzSxPaWRWNxBTmah7iBgSI0RMocy6guWrktGEg3Z
MNhqlWoYd3UlDmzmUuiDhdfls2suXbFN1prpfxhztUiohjhvJs4cQkggty65
ds3jp6/c+KysaEo5GDd85hOShRjgxJU9g30TRPU73sLzXzx11aKlirLBRgHp
1VpuRi5D/mETAfWr8uoLl6x9wph9T/JVHbptToP08SPhQKuSU8jCchuOZNki
vA6TaW85e8l9Mg8A6kiDhViBwCYVshd5NYNKzdOOJ51cuKHm8WDhgBFnQ0rN
lCIz5mPL7kiRRnL0ZqGNEmbWVwenbaSQrNCgCb5Kx1gyVlYsb+8xFS/kVvJV
tdF6xl4bhn1R9W2khcLrnFCmNP/2+LUPvPDooeesQSMm9BCwfrzKsFl89W2P
ChztFFdv+5fLFBqRdhmrojW3z5DR+opqtUIcOTUIrzuVwWtlTsejh559uyx1
tLzMUUcZoYEd9eBRi9YnedGMLhWGVdjoCE+s6u+CXQuNT0fd9dDLya6aTyhT
13vHaVdtkhL5dPJ7ESJR/pPfyVwmI5RdiBTYv5yWC/02YWk9bLEgHv/m2bcL
uLRscwbRcA1QsHsTgQvwZ15zlecLTzolcnVaMNOdU4vekxVEUzkecxWtRKgt
+YkQpMXnIKtRD+YJXgVUhHpoL1NBFzyrtQFY6pOhkYL0dwcLnB43d6Hby2PZ
LM0N0yrdOK+gdpMK1/eG7P9IYS+ZamZilOHbjpKr1c/k8W996qhle7z3a/cf
gnJbWJbz5qePWioo83bPkk2Q2WJZXeblGF/KPcvSppNT9IDG+7/93ccOWXzA
T3/573XfainJxQHAsqAff+aYG2WsFwWYzJwxSJOQnTJvjNUJ6+OkdfeUWzc/
hxRFABb6PvfIzrdkPlgyLvYhjKvlTjKfTpZ8+MZHXoHrCWJj/0j3iGTF+uMk
YvLCIaesFHdnEmvgH49nmShrH0Kleo3BUFTuPrWZu0kbolvGkOKLledsVp66
8Ba4M4phHX8wr9cJEzrP5aeyeyjRJfBpnnS0klKGMTqFC0cG1guJe2dUiD84
UONY+W1VadcFpMQiR4roYYHnkPBVx5ikaaJa1yXI7zacuPjuJARYR506izLI
RSaPY6eiCJP7j7lwPda8WSuQwWWynlDQ4e984ojrJvTdo/bqEKHelSxHfysy
RmRN+j/WWqamsnxmkt6Sg/JZ1yBxBksQMKTnE4EJ5/rS509cLoPZNKwxUIMx
CYlsOXrRugQdzwYYKceHzj0NOiPHy2+WTphfYsZJqsV0TRDuUznFfoDIpF3K
ubvHlyd9Tzot/yn4QUw+aJOjfA8xzVjFajVkL93qWCQc2Yj8nUG4sQ6FsXJX
bl2zNLkGM+QcMCuYzh46U905h5CVJwHUdAo6F/rKPK3GqiZhnR6PHi185G4L
w+iEFgRLNBkvA5JtKH4cIeSqJy2kKCiTFg8EJE5PHBxYJOmm4y6+S0I/EJqQ
X8o0TFuAJmLlRVYILx+zFgU13uRqJhzxe1aee/0D8t9Qf+bhZ8CA8EIufeT2
w85Z46fDGr/6ym3LngznMB2PEiYz55kHaFRkNK9ESMoDkiCYWNbWtDSdxSNn
JLFNYULR+OIKQX1KuKD9Ct1WgHjeMyZ/m3AmNkttqvydgSNUpJu0075k1WDL
uFbOI7wnfTfyfno0GNPuPqnjYHaKFbC1iJjYPT4yXZMKKuugsO541mrCIrVj
hVcsDkLbiaDa1VAvvSWViSlApMRYPpvBB+MGahYO6hY6Xz26MRrvCdGOg3c2
JZKA/INWk5JAKACAwsiqT7qNy8exwww67MOF3y08IZ8DYL4F1zHBO1QYB+e4
g5r2tJP2rcmtHr3+oZdloIXb+tBC5/F6NstNRYpJR6MaSMNVpc2OOIhZO+xf
8Va3EXIbGqDHJbjYmFee4c4xOGXJC1q6LkUXsnhoHbN+60sy7EvOzx85nyjl
/YqEdP2h6YeHjzhvrSxP+u+vvHxVtgPnEqpoAB9TzEFmFwQhqbLhdMLIEBVw
7xYgVH10Sj85oD2iXEkHCRaMpc3kogbiV9PKGB575tR26ObslLy3nhsm5YRI
G7sRoO+jHjXFphiFLohBcrjwPLfbwQ6VU012Q5to5swxXYgFoVkIgDI9nsZi
F3kdA8jH8omZYlieHWSxigVjCzvWOd0CRv6x5QP8qYHYetEhs0FU7MnKZDZh
+jdYaAAV5FXwe5DLU6I3N9c0oNrW9lU5K+EJS+HVSCSuNEGKeXlUZSnYxgEf
PNLJcJFYclAHv/mL9+VZWUcH0D4RiCG6y8JvHySCEqTUu39x2LV/98SLb7tf
NbeozcrEjDbDfmT7u5CL+mKWC2cQgVs1gafX6xRsWbp8z+Yx9BFZu2e5z4po
PfxnuBMMvbpC1En0rWOmcaN+b6PdFOoJPCifcw0Fno98z3IEEIaqq3hCp8IA
OUu1MULAc0phXTeOlS1D9EG/xxquLBGWhDAkcDzwwwyGHDQaCDqgU2wPHGMU
VNXB+VjMH7H9zSYSaDJhWJATJp19nF6bSNN83GFKjf3dSbeatpRoc09yXEoB
tp1whZppl7VKvM3Gt1mr5mjjVijATXe/exIXcxvvpoXZMj9EDTeE5FInu4cS
1kmbZ8n2fYn01ApjhFfY8fUzbzO5MY+IAwi6e3Ha/uSO5hWR49G6L2WxcWaz
2AiMO7PIB48r9pGd7VnIzOGPlVENJkX+gS6eUEXEorHVoBwZQX/W8rufmVrE
PuYAJ5O9AqqWJx2ajcuuLgMwhWuAW9MWdamkCyk9o+A46fcYnJTdQ6II1r/N
ghtl3LG2JGEUU6YtWmjtI+R0cZQbg0IIIne0iFxDY5CH9RPaLBnK7ETjiu2/
Q4B9zyJ73W9jMYy6++DmC5Y9+NC3L7jDZ7tNJcc7FAU72O8U5Yc1ZoeSCmVW
FAoovHPqrgkQT/KBniSDLgEXOfsSeQkNCEbDOYR7+HXy5l2KKKhGanetYn9y
WzCYzSMOX84S4qzyJ3cQWBQmS4hBY1Ovn+vkImmjIU2/hrmnOtHQhIsFIQGQ
yM0XfXMI3BQ0xJef/fJ3VwM4xYDlEOUfRHhJr9bwiUncKuYfVAmwtsuqFhF/
0PXsintKFBVpGcpcIXDExAL4Qy5OxxuvOqY5ppNL0iOV9UoM+7OPPf/mpI9m
ygquNzAp9BvWAHZN6R+r0ZbjY2Mc8leHUdygkLNd3HL2kqT793JRok3oqNHd
zdLogqUaX/z8SSul1hM8UlZZEa8AGk9qZEEmEhi3haoaW/fe5ft1mFzWdOuZ
19yb1gVs6KJm3/K9qiBqoIZisnc/8q1z19JkAWs0hhold6l28ZV/JQuBcwhP
zCOHkBVJ22jdhryadNu7nKWfr3KhNZFZFLIvbhuzayHYkLkhuVoTW90pK/TC
Ow1ECN1hmtF2MaMwg58GxDickaZG6oEMV6QoaJhza39KYS5HlJn4xJIYY4Q7
2kVC1o5JkDWsFAuWULVfJ+kquSsLdirbhyvtlGgawzBkqVxlSev3kqdLKj4d
Sv7bSFhNBzoMO7l5UWqWpKgpHfZejfKiHUh54h9xz49bu+WFyUlx9gm3p6YF
EJLhcNgMeMbxus0QSQHAPJsPh1yIaIPBbclWTZcO1uIMU2P277mEpT5QVuhy
RXshgkGrB2vfkRAVK3hs8wUdQM4LTBP3A1QenNssD8ggZx8Cm76LEtE2Dwqr
HwOD8oM+ckVsacrtSJ04NEAFhaUgJRMkKWEpepkEfcSeylA2JDM744RoBs0K
WEZuzY+Vu5Ulb50wWU2yMOQGOTKPN+j3gtUDEXantplkLYqBgvIdw5wfIYJs
MnndNPIZ6/NVt0yet/1b564RN1i2xip8dGWy+jNWbHwWkR7kNXsSWZYP0YMi
5oxLkZAMfs/I9zCehTWWh4wb4/92IS43yZX/QyB2sCzQNTPrEd2j3HwF7xE6
ENGamk3EzQfKEXp+Mi9huDYEamEg/y8CAZKINZ5WWN2BhLbY7OavZmlwXqED
D7SwShgd6y6Pk+9KXnvphTdtTa/cO4q5OlZpugVcfObAhHOfWqQkBobrwxov
GkymwUtRnYymgxVEYEpl+KCNlOFD2T8MwHZ1A1ibbs8ra/z593/07o8/c8wN
UJZBGd7SZ1gnQdoD4lHoe1n0L4THYJSQz5jOAcUuwLoQMlLpEKJ5AJDmBAPN
5bmGXlgmKdk+bAI21VobJ/Lshw8/7w7pFjBfPeyJ9ejkMxqUQmS5Q8RbF946
9o4tL4LECLzBRqICPIVLDAauzkZ9Momh2whuXy687VLS2ucVdtwpntpswnL7
lEt2HgAsH7ceqhBtWgnrQGRdDg140R8idMhsBBUi55eVOmtA77b7Q/kz7ZW4
9r6tR15wx+h//ff/t3dZmBtj+Qp8UpUFHuVTFwq7kEMbI8oKIkPuMmaub31m
x4tv337G1feKUe+ZzOlFiXhKpxlYdSCkmZTS3RufVaSLSxINxYk8FGBGS2tA
AbMzToV+iVX1gWGVLkIlk8LN1gV1dv+Av+7y8SAi9yaTixyLy8IlhMCC8m9N
9YZtkkyFieepyMAdGTVLwiBdJERZPcy1OzmxkaKo5OLkIt74m6OXQXFT31WX
r9q+4rzrH0j/xwargpzw8CLUpngYEqwSTxfPKHLC84w9ZEd4rxbtM/TYQFRs
AgOTWXuXM3MFD9AhqEkh3eXUwFob55LXMNDbD5dX12ZIONavZQlygfwL075B
mqnckIctuWT5w49986zbhYT2LhTnxzqriBgsocFHh4pVJi8ahGI2NtoGgo+J
zoJb3rYgqrGrPTlL+HbIAXaKzw7eVj0LxJ6Qrz7xZZ9XpoCQYAm0IFOh6dGt
cgY6rZEgJGvkfhgs6EFRuG6PvUCdgV9PSS2wbB6Ucjhd62WYkLUSSW2nR2Vm
umLS5Mxg2MaPStID0spuJNuQ4k6Wp5Tb3PO9f/ut/LdWv6cZWhtzpFRWySDv
IRzlwTkQIhU+VuQy1UBB17LBrsyBXcCpl4WcmBkGYSiXX3uXzzyPwCwRduP9
jUJkMJivnW7Et4PIkueS5X09y5BF+U9hvhkbQqe1uOK+rFT+lc/3ioInLV69
HqvEksWKQkqHNY/oQOYqV04a1D8MhmhoJ1s28h5LiGpyRf5TPp4gwM1yzrlc
qIWpwgN/+s9JoxpEhYgX92YKqC34NS5cy1+hvcApikEgs8qsfFL9xksWBgPt
5THUDxOq64uHD+1q8TXDhDFY/5qGyqxJ3dRAga6sonJsKjarq1lAjkOLZOV3
ODYMqjyGalQRJGkX2zOIOFKmJwiTkabZ2FxoXfJYCAglt6L6yfcA5thVOitD
ZTMDmPAC5vLuU0Br7h5KEYUIa7zWTuAm/IaDiaBQlg0+oQqP7xVZ45w7lxBA
/qxlgSjxHyzYaZsMoAKzC3FY2t3myU0qE4mZ3NCrMnsaJzERoOT+Ol2qpRdS
ACj5NAnYyCLUlDIJcPP5Sx+AUmjjCYTiC2ZFNVaujMnBbYQCVwboN0A+U2gs
eduXHnzqR+ZCDBdCdGI/sJyMl+FBwtmRlhgwMTSDOwMwwtaUoBl5Bgush509
k60vWjCHjckosoZhkpGuGodM0woJPB6nDLgAZ1Y2pwyEhLsrTHCMEqED875c
Y7HJHGyG7S6RqU2V98ClDnqAdQrsFbeCywnzs6qReElwsPZuZWEhnY+9/va/
BozZj5A1MfCrb2SpcSH5ExskoLLKvmd1jxXQS8g5zCkHKZgoz33p1FWHPPS0
+TCsByesogHicSohRRjYKm+X85RHaXbQ9hEQHaHYznvz5sZrQns3rLaS7+CU
xmWBMDGXi35PSSFEgeaUE3n0sHPWpHePFtKqg+VhfRXkNaYamLMSPApmZOuQ
CrkJA0rQHpr/fvGfTlqRaIRNEGiRtbHmAkgSWYTL8nXyWbsIfHmVbaF56CI9
XZKHjCektxUCUNNcAvaQHsE0gj7FGmA5rIC13AD8pkutvYqYcK2gB2I8aD1K
THqwxnGAcHz+kFNWGSl9lKwIJhd60uqbWXBcVDbq7r5+Pdh6OnEGLZYatwnb
QGRDyeZSNb/vu//6m+e+eOqqaxav2CYHAlMGPALCpAcAOToyMEtkqqaSw5Lf
WnweohehCLor16XrESAEaez/3PadPu8xeCEDREu1ynHV0yxYn6t5S1hAzoYV
BXrUtYhBsvNLp61CuWSuSnqepuDZjPVgq6n8YvVpLABJqrWTJSk5rrc+fdTS
Hd848zYsewhrBx7xu1YI6xDF7uRgq/VwyNqSbBwq57vo+nXpzuyZrPCeZZeD
JGnHc0v3yGpolM5CHJkN7GETIZXsazprBt6LSxxzgbVX2aiDF7aLMPGCiBZZ
2CCRGuoey6akNO6hIy64Q37zB417iGeiUuPi/Cdz7lFqBJ8ms9Vg8H06OYhn
LpKsVM0OuUlP28wpVCbUIPA71ptqFSHBOGNhPECAQgkLCt2DHhrGs2IA1toU
ouuQynElrhJZTuDyK1Y/avJ0ThTojWg/MKHFzUtWLTWNnBazgNmQKzDm5EJk
9Jesq2qXtSrW/QtRVT0UNHUZghYM3pLNoNG6LCuAklXJoLBqhkCIJ7DaKtVP
WAiFk7gwNnHD9258cOKfrfgsVqvHKhyCWmWChCknVqHD+JW9A2x+N0T0ecHQ
HCBXBUXDLsCgt8IFJ8z0RDZhSxwidKuZDmNoe/QfNO8myLpDs0i5hNAVwNy6
j8xiITCFDEHs1R4JKU/tcLQ7s9kJ1p40ywUvkydTouBFSLKgXaFbXR5lOV3k
n3AEmlqwmIEZVPlgW0bnoScEhIo7JWz4bpUMxe8F/hkvZ1Wln6jBS4yTrkLE
aUV1uR+2v5/vQFEh9chV1nYfaEDPkMDKDGE7iFlpVvtjw2rpTOS2r2xOuT0Z
i7j9sHPXOP0DBTzz5e+uxoZ/hhXCJoAF0QCDRlyE6LkF24xlB9kgQjZfeHaR
+WiLTCWHzdxGNl5l93IpPhuXWSXMXGJpphxxbtd5FztSZp3MIcLtsCxKLo2i
BA38oPNVlIT4cF8hS8MWML8mpERBjqTn/cfv/ss6VuS3s8ihQaKqxqkwNq76
T8nwAG9tDYAobAIXS/eoRDHnOGRO58Q7TTvvI2Q8FL+HUyjC96D42y1X/V4w
FFgLjLIgCgc/i/FIt+l49yu6xi00NuWshEIhVOlBE1aPr84O5mj87wpRI59Z
vMr18WTA5QlUkEk9tZhYXvepr56xeuHPfvXvCKQkDxQI1zIOhYJ/BZbQk2TO
XxAw4+S3U8oJupPGSnOBo93OmF1O2m2UcSLs2MRb5vRXODNJuDXYKEzAMLDu
6ZEZco1v/iyYUR8px+BGC7NCvpUlzeIiaTwABXNNnLLgEc6L/WVHQvvVCI7g
WuWfD2Ccy5CVPYk1g7yWSZxp8bIwIhnoVKOFmAk20eIGRoXUDQMduyb5WtJV
A9DBeemUtMJo+bWnfzqlVEwfHs5bX5As9cbba9cuqD2xGt+JqAmBdgdccvST
wxonnMdSMTozxnqXbP12WJqLsSZnecXntu98I4lUcEKdQbVBERO+VtLjdzRW
BJjRkztTTD6xKGc/YVzWeT3dD2mMiA6Gy8KCHwpCz0us2WBS2qETDqpCqkyE
3Cq86/YKg61i4kRzmg29uQFdTiVKd1gkndPhWY5cViR8LUfC2Ar9LCTdVDLW
Y0cBMd8RajQcE3ysTg7kymsN8ZE1fTJtOl4uSn5ubx4mF6Bq1GIb8vWzlm94
JpVJAE40ZogAuNzve3IR4/U5Bc8FksAtzLM4V6ghhGO9XL2yeN4cQrusVEMX
HWLB+5abqIo423XhkQkylXN1uaotf7S8pdTjEV7WDIP8vwzxeu3vj71RAvEA
clQVDDncXpicxfpRwC4yUvL0Nsu0Q5LKfVOWd2XZjxmN7//9k0Z1ryFgPyOq
wMTprHCOTU5ntQi7Fa5k2h3tFRZ3HyUCBmDz62bfUEXAOq+YkFA5c3mznAmO
eBFQMCrc8ft3i09J5zqH3DkUhFgJLAhyFhkM4mUGOQOYUl6RbqJyQVCWgn55
TjWlNR33dCKMJ5dH1pFc09MCvF4y0S7wJBuTCCt/bOfx9489/xP5FcsNziHr
7yNKB4rBPRa8LyFldQqRnvwKVIgEu7VTOj2g2ETOA9FYSP9KvzThSY+5fFde
XwwiAKqyCK5D8inNMiOo1kJGw8xLYCMfmLfGpMdM8lvgbOfYHtIjUHWF+GDm
CZTbe3k8GyjJxhDuVl7jbNlftIabJz1QJYL0ABDu7obh+OqPkAuaTU7niCxA
roiHjqwfyh7hEU57VZmdvFL+e9coTTC6STo9A7SXp3h7BAnDM5QW7GASzZey
UwXms3IumkyGaYAo11m5UFVKmoIbICYlHf5Hr//kPURKFJUrTSLy39C+ufnY
i+9K7Wqt3kft5d0lzjGr7Njjv9oESqzmfpOMRmJqJ5ktJ9XnLsuGIrNhaJlM
YnVjxgbcyyvAhSepqxZNB4PL7zIK0Hu9yGxyYSA3uyCVXI9mIOUEbLB4lC2z
yHbL1LAWedsQeTKDlmIjAHoMdgy8CgM1XcD2cbplEmWMSBQQwDXMRVjiwUQo
K82HAJ+Kkysji6A4YRAAIdgLstnRxHYtz/MWsWLLgE1mw4rl19BP6pETlned
Xa7TdbKeX3cVHFS586RyNZ84kZ5KEQLq1ZWa1cVIAlda9zBx8OyXTrvFXXL9
nqCF33/MhXdid0TQsHMIrbI80azyW4/+an9oMHSGyrKFBu899uI7ZT2Qud90
3MUbkhCrokjonJNBrIN1GyEtra8i/VoeZCaHZfywJ44VEwQ7mcF6Qayhhmll
Ffys5yXIkx6FDYH2i3yvCqTS/2l0orZQ4Or82qcSAdbyhydBMllWzKyRYSI7
phLZMdy9HFnDIOHzg4ksnk3k+Lez+LiKiA9Qhx4RnkOOf7AIA+NoOcQF8Vbw
58RP7bfYv/18jJwnA38CH00uNT2WRfhgSFUlETy7jLSPu8J8EuCGuN0AJVR+
eJrKlwChBArMHlMLRUhaJmTI6mSH+m2RA3/x/GvvWsUwCxfMJnqBQSLCTXmd
5N6EzpTxZJEytyPJDLh5qUeTtjhkbheJbXKmYMu4b10ZnAYsBcJgELP+1uiL
A8gYZDPACEZjHyeNsrwJMy6DzGWdyZAm9RaFYaK0+nquALDv3UJhNrpqIGY3
Bfm1IDJpOpsGC4WBVU4jUmaILJHBsx1EKHF2uX3PERyZRczVRcS4RQFfd8k9
h5yp6kCTzda6Mb/83A+ZxRdb8ecWnZ1CDoTpJuhVlu/aeTL/c4goETXBZZWY
bsZqelYdzQqkQpOOpvpRZeLharrCmNMOKeWKFB3SrtPqjM03M6XGsDYHyPVU
MjhRyF7kJKAD59h1W160K59VPpbztUeD2+kIK1Ao5sHPkUZWCaj27niqNDpm
/YMvytgV6wVK99E84DWKGRbiYAjppZGKYccDDoNr2LlkhwwqrUvMkKR2l+Ey
l2xvGll2H2F3YDavdIB+SjdmitE+nQiXhg5BZuodRE5MKTKEHVW+XFPYprYC
QwvZ7PI9L+GHflN3IWAKu3fwMJNId2Tek8km1pXGhMsu5AhLRJC52TBSRCjE
8snVyVqoig03rPDh05PzZQ0Efu3kPIp3PmpYJ+j7Tp6cUsHGDYTMXSfHSq2U
l8a5WO3X3Hilybjdq5FDWyY4QiY1i7qWfT/YhMqTlvDCCtxgc+ldBgM7S4BB
c4FlBpEElixzfMvZ190nFDpG2JkJlDYhdmaysjYChjvPRAtghvn4PIbC1jUQ
jtW3BJXF4NAzIbRroCoTYmq4mDEDcG1dhkuRKDOIRGmT9QDqhHuTB5E1Qr2N
M+RRWZxcG3kExUkIjrFHwDBzeZXtA0Yre8UGuJKViu232n6HyCqk5Ch0k8nb
58dTNOQwVuqpxM4Gp2KCWc4U0leu4xlq+2CRWBXya08CTXKPVc8AvJzTCXSz
OiGrbJXeRZn9k06nCtnWwa4Krq4LaR6qFV3t6ozk4Gp1Kng/pfw6vGKGIuzc
SWGomf1Jg+2QJZdlCRtPuPTuO0+5/B453RCq6dGBHpbL+gFZOQgMLnWmAowh
t/eZ6JlPGFefx1KILMUU7GGYe4xmBIMP09tAIkVppyszvYfQEUEnj7oQmkn2
0s/XA0XOziAHkeOGIUUuhY/OcmhJlEOJL1ggh1lGo+V7FqizmwiQKrPKOzwe
C/EPi7gKQQPwPaI42v/vVjjdhTEUTnpUWIVR8J3UZrUyHWtarrCJErv00Iwh
0QvJfzc0wLc3n8eex5qaA7oTNLJ5DEDdCeN2y3QnMp1Jngv4KR4ggSFnToRQ
Ge6ShqEsTC5Kya2JcSLry1yVCvZniLyIFZnkAxm1sbQhO60iUKhP7u2QrU/9
yKI5PQzQIIb0XIILwFif1U/lMxgIBlqnAsVUgyPoOqi0r1pgaGM4y3YFu2N+
uQt3xbQIz/ZvDJq/OhiG/HayvY22TxE7s4jY6SNrYDT/YUI3swltqsy5rpCo
i1JAM3NlCHLDpX81IdpsBRgl46cKKN5OBYDbLys11yl/HKoz/IJ2j7LX8jos
gcoq5HUIFuao5W+J1lpFWMZEFWYMQkZ4jLwBUjD1iAiSK+2aes2UiCIEoBLB
+sTp5LKGid6p6DWtZPey2rqoiPV3BGOYdcLoPUhuTapeEq01Fx+5cynXiUPo
0u+0DE+eLycnObsLlq7bAb62tx72EDHBbtTTJb0/XWD8ZiOwKUILiEaCsLzX
E/SQLiGdRFI9sq0FhGxmlkOfsAM3JhrJFzsQZggrjbhFM6WRowfZREVcxjRy
Ah8m9MVy78dkGXN92bSLaDYVbRah/rFCBjjXYl45W6/zBRfAi3f1bC2VEeqw
cpbCCgD8mvYsZ1VXEbLwcbhK7VORV1hBqGc/AKiLZa/czq5KzNJh6v0FYxda
lTyiwSolYZqmdwdox0Cgh05xWyp+xzw5i6WFY4FcoMegofbRZQVLKEHC1O0q
BsitWQ85SoHAkuLFpqyHlujKNpaft/QBnFyHxPHk1864Vf5W8GxplSzRX9FC
hMbWKinQRmsHYwBsFqCWZASjLi+hq/rZ6BYGrddV/cFm2JWQHEQmpBj000++
9FMNViY7yzRZbbBQt1ORUlGs4PunE9GheNUExTT689/J4mRpFCeJKmYTKtFH
BE02tTCDdR0isK2bZ7MiB0C9VL85PBb9hbkestK/fvqVn8lh7FU+xnJC8Jjr
WHGQe1BD1pWvhuoWkqQiZaNxTrd+FsB+wNKuAQpY60lITo1wwrR1wMgqj65N
JUpFlxUiRyo4cF63EXAwZlkTN8NNaPZ12midd0/1jqcFg5StqlLSSxL0ttYh
+ZvYQCKb5PUF9wyr3EL4mllKrHotb7Zdh+/NC2DyZLfGM2sHEu+UeWBsmJ9G
K2Vv8hUzEXYjclcZSBYks76T2Fe4CXmT3KYxpRFTWi3r2dbGVhEpXRhEGiYO
UBcfIoc2k/DdsVmeLIvyJC1jFvk6fOZVg1A1JCdiQ30BYc3ZDqwbZzGYe2kJ
qZS7LIcguBvpILReLIwcZbDI7PoBFgZxr9O9srxeD9YJFf/D5PAHy/PcCisw
AVD7lar+hVyUm1AY1G1FpnfTWxkeEGPs3ctKnBQWECHTX2RkHQBlwUk2yiMY
36yUh82pUNx8m5uHQwx8/5kL2+h3yi3Z7bUIpbMSORZfZgYDIOymFYcERAfQ
btnEcRUoaLQgsbMqLwCCdHW8eyERDwSpNkRZVal+HwYmz7KIhItWJlWUR6Wi
3I0jKHV3k06lSbfvlM7puCxDbiTnMZPI+FlFMFQAoA56b6gqmjkNRvgsQr4Q
H8cCXSWNgNuzT3m7tx5reAGvBZ3rbAYmTwmz0CyHZ9knfXOIvkGWztO7PZyf
sOlSWgkc6NymCWGkOieNCnQdG91DIGuM6Lqq+zWRJtQJ1BjKbD4VmVI5EMha
z1oOL32vByAVATEJoJHWrSWfMcAInd+FjzGz3O3KyeRCmDQZJdsDnD6PLOej
GUSrA4/JmAWm3TvvqFGGTIeyZCqRew1gB3sQMTerm2Zc4ur4BITEQX6ZSq4D
8MHkrT/+22NugNLhIPDYfC8mE1Ss3NQsVkKYo8gjbbSqY7IVvgL2YQTBBk1Q
FpOV7yoViG/z1ISnnIyP3BAzhLLW2B27VpKc0rFKltk1ZoRqBhfBRQVV+GrG
8WxI3Eg5E6dSptbBx3ATTo1aE1emoiFV4ukThl/Pmvb3KCvH6K4Gxtncr8A3
pblKu4CQ0yywAvmykApmnUFayW9hKdYZRCpXh3FPVtCLIS1jgsZRIdz5JgbU
IKbIULvZWZVJxCoZMA5FJANp9o8mLoA214zI5ieFfWia2Ry1+e//5j8JSnNw
56E31ihd3JnZvi02swt8FqfW47NguLlQndeX6NcD9gFze2YUHpclmytVFegm
iV3kSt7UkJn/hhZneuSCpeuf9DhN7rkdMHAFU0vy1CuuuOWRpEr3KM+zDLAZ
/3XPA9VLUwsnR0OBWkfRgWC1eaNRqiZWUGQRzCE47Y6QC2BVwkxfADype4cw
OMkdhMnkefDeKsLbDuW8vykT7AcLS1hQA8FJqok/LRtzaNmx9DcG3c0gm6H8
38JWq8++9n5RHFhA4mKCRXdZZmlyWZuZmaUIxcfagoBwdzL42wzttqGEHi6p
HiLZXUFXuSswGlsed/Cb77zv9va0Ih18WbOLTKuHibqUqFZ9QLP8CrJK5cVy
Px7mQoBJ4UwMHeA+IgNEhBtyzVHWAWtaFeEoozasBiNR0AfznvHYD37r5++/
/dffvl6mCubjHxQikGViqhb7KRkcVUU/6ciU3oPJyuZdsJxdBWWffq8a1RxF
UrAUETRZx+k0Qud7F171+GoWDWFUCooiltVUyWWHjcasGTGkrW4QJY115lhS
Vo6nQodI/zeN0E5+XIJYeuELp6y47cxr7pXXyb26EGYmvA5WCmmPTnEUjMYS
HWdfdqiuTjKtSwZUx5Nmca99yJpmkuNl6cC8n5YcmSBfHL5x+yteR9DM83QC
V0jJ6vtD/JnNDJ9Z3uFWxwmZ+VdE5kcxwDCkjCUtzAhxT7eEZ5FTUa63YOYD
R1+4/uYLlqUgitNuRglLsY7Nx158590nXrZRXpUPfhjzpvKIfd997z8weWKu
1HjkyFzoROTQWFGMvvJOSXNOK0LBEz+TywLlJ3bFY0UbeORBqSCY87qy4Hrv
XTSExzwV0a2uG7VbnlKO3DPm6t8KcX7ukZ1vmb/Faq40ppOK9ZdveAZH4clP
4Onuc0A7fVVq5YkG+anMT5MUofxbjy/EeaYVye/aZeIfuVAZs5yES6K/7D2G
EdGmyw5+6xfv233kZXWNIK2VtTJuOM6Z5DOGLqMZYgvEnLH87qddWY8TxtUW
plpZs0l5MNnYi1CY4p5Z6NmtmhMz764kygRmWddRgZDh0ZWazS7PkNfOKj93
uoWVOsHpSMzPPvb8mxtPWHy3rOzjr775K/M0lZUvu3L1o8vPW7pl83GXbBAl
r2EBq+mxxOU37nvsh1kFvf9b3/d0oFNA9jNa1sCoLdTH6BZl5ZmITnZDRPIa
SYOH4A+HAkrPeU0nDPSBIuB9Gre6cBYkNEsdrGAhh3T4alLK49aeftVmI51M
aWFuoPy3CJXX/+7YG6VsSlY7Tq4SjgLLlHKovm3X9gnlJosBM1AK1bFIf3Ic
yy68cassyoZyqw+HFoGcxre1aQ9KT7tCmkGl7ks2A8TmpMB6ghQjSd513g13
Pnn5Fbdud5XazJlRpbKZATMKFbg5cEDRBW4gMtWvbLmq6IMaeitQAvMYFPnK
fCRZgiw162Z5OTjtbrWpYDV5aajtwnkTD94KfncyqQ1NSRwvoa0/f/H1d/VK
MQso7RMrzr3+/qUX3pQFnhYwYQuGW0MA0zdxHU+lo1MORrge2dNVl696JIWV
859r6FF7JMOo27ewrV+2nphdjh3CtCI23aFUDn/00HPWpLlWHTdMWnIG8vna
067afNotm3ZuPP7Su/OGIXI6GEz0iU/MNTCxCLD58pFZ6dCx4/67Ho7RtCz/
pguWbbnk2jWPp/BbVK+yfKkYsIPSX5t5Uau8fQkRzyRMBK0czqRa+CSLFQKS
UkJ5xfTySL+tBlxRNltpRrk51/0LydsZtthJma1uIX8CjDAnCPaIOeVibKXy
2pmFsXs+MhPJYO1PyN1Ko5HUd8jj1G6pK+cO+Nk///qVfzxh+eEbH3lFNqms
aO7q6rOW3Hffdy5a/5NPHbVMnjKjXIAs4LFvnn27LEbXJRB53//CSStAPbUs
Cr7puEs3bDv8/LWgP/uNBr51z/YfgPwIpJGJLca3wJKRyxEZW9Ruy9TUHu/9
+neimu77zoXrbSQ8Zp5ErslPxSS009ONEGhzh6sX8PcNJ152t/FVq+xFfhKr
wdmTWsZrMgr4sUPPvk2UvzoY/jdhKJGP0K/aMr3zvyfkgespBl/M9EQpCdfy
dUHT2HLUonUrzs24481M5L5m41CQGUXCumW2kPD0DKJVTs4ctLpwhjsqgHLt
WRqm26qxKelcgNNcz8LzvBiSZdjVDJL+WNmm2Z/qD5HWvxQfl3ihKQi1MWWF
P/z7Y2+UqVkTB/HyDCfc//7BPxx3k+VXpheuevCoRevN6tPlPvOV765+euKf
tFz9TADkf/APx98sl2jmQ6hm+WCRFB770e/JXMeHDz/vDiCtfnmeFBTIloWM
Rgs1dkGyQaGOJOnTaYNg8oYh3aw8bsV5Sx948MgL7pDz0KYtq2y2pDybEKJP
FSZ9/+NfuyKFbvYvvC8zObZ969y1IJgOefjpN0TimbJhowKUMkKwhMFQ6or+
cfvONwV1RoQUcpYzib4a9Zz8d/Pkixj1279Z0wRKUz65tZxTTdfBO4AbqQYR
+0pNhQD8qBcrzohiN33GqmYBxEIs8aPueuhlC3laqiocvvaPyO9FWxguo0o/
2dX1F930kEzPfOELJ6/8GynoVbFu0ixkH5R85ZDRVtOP3/7UkUs/s+Oln5qt
ox/Ltz7+yhu/NAuJnfb+RftWF933d0+88BNZXPo/WJx8728m3jZhtt4ENfwh
L+HTqSCPIZFjCRhRwtR3ioq+9cxrsdbEk9JVTVXwBPTnd59w6YZf/+lXr8St
iej4zz/4wmLJAtr35DTe/Jujl31+2843eglwlptmM45ke+L97PziqbfIFpvZ
hzSyct4JUZv9/4dLPCXzzm3lVTXvhGgLLMlDkjphuAZeV61pah53FNixGdO2
bRHfOb/53f8rGsH8qt0bz7Vttr4EJTCDm6234CP/3RMvvv3Ml0+7RTD5LKGp
4UXcMwbulabt9AP867Ty0wmllipQzY0RwtM/4zZNBQkbFKflgHJuHgvRs5Q/
P3zEeWvRfcSJLF3uvIIXWeBfdm6BfyuSyB0Xyx60SD8DAJ9eRNPDE4aqmI7y
s9Gi4bGYva/5CSK13vnE4Uue/NoZtxUllNT7k18/41ZBbJQ1jEdpvOrsJfdf
dN3ax5nnMYN8xjqydFGy7O2HnXP7hPV+Py27md6tsiC+ymapBM3OVBYoDE+n
nJrZ7vbIdsgjgbj1sxAJn1+EmlugYKk6Xc6I74AiZQZO0I9CMvWyJD7vQxAQ
ezXrZUHWxirwzH9DSBRWRSlhRsknuQbI9zcQTkC/79F2ZSeMyiN8lobwJBCy
4aTLEMcuYlsAWpeb3VC/4wOgKmGW/k8ZNeAajxdFJYyYlq91Fja6NMXAgT7C
xajRgFORHN2q+CnVzbE5FRqmke989f4drxk1WE35lHLExrp2jO4/qG8l65uw
vddtO+L8teaOqhGdrGBZ4yXX3P6Yl1pOK78zteWKe2EzcQc/bUo3Ccj5SAru
8W+cffuRGx5+xdiXgHdElcmwOKcXceBpT6Yypxda8DTnaZl315RX1fqt6REe
hFpQ5B4OahyPO0onxkIwbCZjFvWhMlP+sVJ5ER3yil3KKzyoNcAPO/SF7VOE
WIWdkFTaLWcvuU/SLFYb0NS7B7rBfVmtY61xqYzd026gQcCqDRFj20M+KvpZ
ajeMWgIMGs+X5ULOLoThsaJDLQTrP9GhrWGKaKfu2xkwa8kyAzifyAaI4L15
SoBpGFX79h0U1y4AIEmKBX5LLlm+TSh4vCxLDlMixaYnXWnloFiKAsvIlHWn
XbnJhKQctL6hVpPGTwuJBmbmJCxUvvex19/+Fxk1ueHExRtlc4zDK9ugAp5n
TB4Ce/sVDRkdwiRYv5tZe235Us3aBJwmSpFdC79a78+kiq+hZK+xubPi64iG
q1EY2ZjdrWxEgz3BzckxhYG60iS0Zyhvk+iNt2AIbvYXH3rqx6HPaJAI7v6y
fZd2yryBwaFyTI4UWCGtQ0JC6QhaRe54QSGDatRjCtOPGAortH54kaGmi/HY
3dICcAJHaAUDwalbq9nyOpc/9OI/nbzS5wapMgtsrDLWz0hJKdSEqOTB2KHf
0WQiXKFPUc5B3FWZ65toXGPhcu8SNJKIxGH3bH/VSM8E5j5lqam5fqUONcVX
V9N/k6SaTEhhf8J+08nRaS5HPpuQUA/v+PqZt0n8F5NtRALE9zOwyunkiFhM
mHGxCoI7iCCALXgqr0iQ3Yp4khfbN6q8Vhm1hC10DOuLgB17mtGK+OYQ2gGc
IvcEoLkHez33KixbNdANGF7cgT/9538zN0++kzbdJuwF7Oo5CYYLB0gLbmNr
8MacF9lhkmzxq4liYXcewgMwXjenWXn6h8udej2eKmHMxXuKAMa4VcipQyi8
MXci2/nc9p1vpr+NkeOdHKUaluuEeoApTiL5RtD4YG3n2rsqMQKD/ZJnZY4d
Mk/j6/c//pr1X5suczrbuxCJ/P+fqSBnDD5cvoqqeHI84PR/CwmtMP5UEWae
o/QZv/KPJ9wsq6CyYBpfAkOanE7I8INkqcxePz2Lg3Xx6+hxhJZA5jUozpHt
zKAGoNbEO5VnEEpg3auDTh3qu8si5K9G16z3EQYleDElA6KCbgovJ1fUVOvJ
MaVkyt6OVm2AUDEHfS2edWG4bYDx5Ma65kWM9uxcoIDdo94M6gjG8HkQn3Wu
HhRldNqdAiGErUz8Y5EPwIJ1XaB1xBKTPvnWe58LCaKCzTqF3DFrYphGPiuo
YpPJNgD5zjvI1cVCr89oxaABbdCtEYYEwWVPUuHr/s5kwsa57aNlx2a/w9KN
sMtq4Ev6vJ9c2/5kb0xVq3Ul67OA76fVuvvks6++k34LKZ8qXhvXwVDaphNq
/iCRhtPJHlRurCeSa3rUlGhaBLWgzY4hzAdCQ442vY5FUVijKZvUUyXqhUs8
741IwqTA3MtI5HNZ0B5Equfnj+IVmaFiesfL+jtl+udw2bpbXwx5jdn+GvlG
ye5bhgKEGg6KNeZ4kSLg4wRbXmfHhcAidOg4pTKkZ8AwdNLQIGAC/jx7yf0v
ff6k5Q5wxAQcw9PsJ5wHA54i/D402cQnMxQ+hoeklqXh/lmeRgNLaD6b5PSD
ZiOBdo8iRX7vTi3LLgDkMqLn6OpDXGMhIf/xwk4uudRkwgl5FsC1SgKXglC7
XsHhdBkms4mAgYHOngzuYZiE3NsZWcDc2SxgQnh5OjnsPSIf20qnFnJwRQwH
5SXFPWRMiFnoHZm4tXgkG/XF6t+h9dd5dndySBWaETinLcMdlHdJTFx8YORx
fy6DXGNoStqSg8FG3wd4DZ4cAIu9jo2YBYGfBS37kcKJ/r2CPcSA6/Lqhq1j
zXQX5gLlc6kUBIg0pqrDAUPbU+V2kElCODujG1wRDSEyKSrpI5v/XuzKQRQn
GFwwkQC9yz6BNLvlbWRRBEIpdllFP0nEsEHY+zczaIi/qWdpjrR8X/6W1txH
tj61UZZES2VusyAJAoJZKiCv3Hs+MwuSu4ogcVE4nXA4c6b2jMtM9rMuPahm
Ji7ZnEEGnqWugEXRLfLJdBJoarf5qvBEEmwqRQiyfn+dBYE5htdeumKbKOYE
7V9KWmI2kMGtAdC1syVMMsOq+3S5iutoWQnLmlhQcCq5sNEiul2Tf7Ts3OOo
bKYAU6/5s2Ebsy7/ZwhHOH7HeAHQLl1LDBHWACAod1SmEnKFwE5VXBU9Wzbb
iFXg5PeOGV3JLZiYRdEScsKd0sjFfJUF5ZJ8y50CjcJwK6AOCG1iiHa5JF/Y
zMMBzUmdVcQnFO/NplozZKmqYRYauLtMl3nNEodV+zPJGNJyKnF0/oMpyrot
oW7DC7eyV1kpIqNA4aonGUHouDRgAwmLPQwTji3YKmtnYOJjRfx4TAWcElfY
u5IXVu5wOh5NrMqxnjDxPQvlWWIVZopiorLo1EpyYoICGdsdAb1xebfUPN+w
6MbUfQJBa4PhopUjf1Bo1iO0MH3U/aT82WjwPzo5qCm/k/wSpketJqs59Bhl
zCDhfwa5z1DSWHitB4hcsGxHCEXktYxYilW2I1VTXTUWeAstwjjzuWAxF5Kp
Tah08qZHhvUApUrudijjhSSnzozA0TEmLmQZPYAFiVSJRgybKzJOxOu+RHKx
7tazski5m7yeSSD2CA1/mz1uhTEwwd5d/Cqri9CLDGQwWMwAEG5TF4RmlaxD
JedUZ+vKNk03CxMkPUybnzJa53mQQOX/zQuQo5bFw5w63089kHMIYdxqe8Ut
Na++WrplzelXbUpcW/mOCL4UBMLHCql6ZwMLnGgs2khVNrR0wqG7ZvHKbXIQ
lnwFqFo3FBh5QnzanQY9EDY/i+Fek2o6iiHHphoHulSIKDmWO069cpP0m8pz
pblFnje53FMNRhFMuaywB2rZEcx+PcXgMqhIRqtkiNAlK5caJxelKHk1arJZ
rOhxB9ENIt57LxXLrDZNFjTLkXAiHyCyitkVZ2c5sjHSSVrBOFkVky37FDL2
mYSQOK8abmOGuceUgWAsjxRZJb81TGKWOWYNyIpybXddzTkjbbuOdSVpetmp
+i3yBKtF8ewwBEA9zcpiffpo29hpqzbvFMHEWF7rNOznlktKXhzci2HSGAWF
wEMWL+0w7LRTSq4Ud0mua92pV2yS7pb1p1x+j4EmsUgAmNBu6LUIoUEjjasB
VYoht8CsUjYiukDKsTnGaoAE5TTxiTQPS13Iyavvfc442Q0rJsfmRrGNiDpk
SkobiQ71FCvZYbXSLDShAiTMruuUBH0Z68L6+qqls9qV3ZqlR2gcU+nBrJBw
9Co97ilbcS0A26vb3sOW86vCCEK5wdGyS881jxeCdt+j0zVDgJhnPvPU6vbZ
eB2Qjm7vDpIz3IWcP6DYSpeL9G67m5KdDfmqSdEK2BWAbKkglEZBaScSpYiQ
zVXgjc5bDOAU44Wlq6K5GLf5o0zmGNB1dQhgjPKMCUq6898+/tUr/3bHi2Ee
iFM5BG2ipVWdPthHLvSVggneWWNiyTU7S7gPEiHJ5gxqQaDsTxw1U2xSSyKS
EtpNYvBCYXGCIdQp03h0bItwws3nL90S0oNsNPT+RIUwlyE/d7C2OuRTi6HL
ktmQ9wEiN5SWa8NjdyI6AD3LLc4ehkfYyTlZdGwiKwBvw2mBBXz3jdyZ+AiQ
EOU+Qey0MD3kfMbKptT0sns3SGtWC8laxQfjARr7zSNXrGct3PWVLU++bjJf
zRWznixhrASEyVffB3QRSCu7+x0dKPBkc3ggMF8n+QLoAJs2/Md5mXIgAqnx
zJdPW1XOKdVcG/jdoqV37LjsytXbv7Jlx4+S6Cn1POyy+wijjjRK9ygMYSSm
Z6+a4VmouA+qkI3nyu9wB9G+K2s/feXGZ3/4D8fd5EPcmR2loO81Hk7Iyuqa
//TVN3/1488cswyJO1Db/oQq9UxDjoCNxQWsfz8rULy110fEBIWlZTIi3Bsz
LxgS37lZRmyOr0+OB2zRbYHmeIpb/rLUFNYpt+onruX2xlL2b6hAqYzZAQs1
WMBUPnUJVdDqwCL0uhY1NoNnq0FteZMBbqFQ10wN5naLHe9jkD+x8wc/l3Xm
+wldoOgxmBBgLamteDh43pZiRdIOpPK/sgQVMrvk6tsfkz4MKcy2FKw8y5Ir
8oxgKzCdqrgbwWnUc5GzHGvk7AD+ZBfjVK6cHuqIGXdBS4JHDplEUIkVXPDJ
RVyL3LPQdiJNyM655gRkM5cKzNxrRZK+ZvHKR7Z++/w7mLXE6tKhH8hJH6ZA
oQmRJ7HKwlmyCrrXXSqMRN1XwdEywRC2xpDwYL3Of+dlwXBv+ZNomnRq470f
4W7UfnHLFjlUXg2JADBfrl68alvik2lEbWl1v0U65feXXXXrowg+G+xRTW7U
6ESzy2rdAwaI+KonLR1grJPI5rk8TmjW07YQH7zjtCvuESApo3kGGi7X/vg3
zroN7VNW5mKnb7kZKDasmrOj85+th0GZayentOm4SzY89s2zbpPxbSaoZGt9
hPJa5UKq1soW4of732G8g5MQCFs7ZZQQg+V+PV475hKdSb5WpJx0bH3keBVe
FpWfHKchh2KRaLDUWKk0jFByz09LdULovBMy7L+/Xp3xJiBL1AaEiQBoV6aj
VUPYEKqzawhbJifCb/cmDD3ut3N+lg73kwNjG5tWFlI3yAYwoSoRh2pRQNFu
P0P1A7N4tHhfmkte/9vv3Lho6bon5dJgnHqdY7Mmi3TOKhKYxxw8ouaEWJJK
poKS3Q1QAVLILNZ7Yhbmiur3nv/iKasSThW8n4TzIzZ8dbxYnBKY+g/zU807
k2OfMHxvlDCefJaCS0vX7RDLSP7Oqlj1sUGrKwSc8fZFS9Y8If9dFZPAySdk
mEMeevrHJgpgU87EUwmDsgpSyA17/gUw1xkOezW8pt9kuXmBrBB+OiH1PrJE
6KrC8IM+MuQ82LQQVqcOitBFkBZ8NEyPtMNIN88SCs2l9GHl4w5oRwVGIOC9
icZgfK+i44Gygmr8NhnJnWROlqLelmJ15RCYdQsF+hwEDwKtFoLJ3bZQlxwX
AhjAwIyqjLvr4Bmk3jCh6qpQx1hYA+xYHmKJVPmL6cjQnQK1X1W7hreXB18C
Iq11DC/kVcBNdIZi1Qu5CKxdD40R7GlZD5S3yUGJ1+4lav1EirD6RRXKIqAE
mSltYxq5FD3pU1Zvfu6+Yy68s2Q0+OQIVrdDDIgoU/rJ81iCPkvIAfMhZe9m
jjr3M1pkz2LKhhXAQol0z9r0aeQzfUcwOqAgzj/LxlG7TtObCBkmS/0gER3g
67vpDbaGe6XgUPjA9Auy6NhSxEQNwcDmPASb9ICiq6wtFBSQbMYfqXVMdiF2
8czT0X7oIGIn/jG4BAtvMvhGCLDV6KVBvA6R37YLK7gJlb83jFlUWf0fvv6z
fzUrG8vTB8irdIISSm10NVgMAZBvKlAdOlknKISD8wXSsTIdiK12ShLQhIZd
oyydpYP7yO5mFzF4x2lXbko8XwxbSP0Jt4oViVapV8Ww4Fip++4hP5jtEuhG
/Ut7svxzwpr7v5/IsihD6EZxs3Zy1C1GTi3C9KwYhRWhs4ZBADhGDVhdbWJY
BZC115isIJaGPG2/ZnERFtXD0gimg4qLB/3QGB40C4oeUNZnANxycnpoAWq/
QnsIkRr2aMjve2UQDBiyAKpQA+v7rQqGAJKbYn8QwupKmmTqHjRgpbf/+sil
RiaYnoQZaW49aF9/PczBSBf9kKY5b15SW7UqYGlA0BUZcsPnnuP0GcucmmrE
id3YyOoR18nkMli/+ZxIxoYl0KMMxoKpAmIMzYcEpTjemyZ26rQFEyRB/uop
h+iPcpm88+bzlz4g/QWCY1hCLC3+sqDCWRn8IFkAqyqf2iijorUBKC9+XbPL
b5//4qmr0nywoSJhfH0Lm2VGIMu9yJohjOYkvSjLjK21zCA4AfHmDixSUb5n
kUY9K5sDAPmfLvBGu+DGJm0OsScrslhowWNiaf4gcFPJJaF/PeQQZoeed8+u
ZM9h8Kmvnr5aFm5gFvIM7CxhsUU2awvYrvbiySzkiAhUTdhACJlAt5lWWpY1
lS17mEZDehb9DfO6lU/qKKx86mKNlZXrVHX0clzhTiO8AaCHmIgx64VZgFn2
D9eATLhtVEmtInhd7feTU9akuQwj2HTcJXcZRlNpZ9AjQXlWa3Na9/I/LR2v
cMnk/7qKL8An9atS8BpZ4opzr38gbRKC6Li+A5olRzjivciSmWT7XpYcD5UV
OKeCEeMXy1yxDxUu9zg1A6LR9FuQBipEakCCcPrq7QcnCYBbDSZcfs8irNCY
4t2wDGdGl0xiXV2JmEzTo6a35NGYeA3TOzulSo/1rWvQP7gbnQoXq0LbTiwD
B1WG7sr1KVa2NYYKGzu4mG5RYHkEBj2JsbyXQYzMohVhomVukc/1IE/WX08g
m2h9b+BpXV7we/LehwKRdEojWrBcWfNI3WTbNr1poWSr/KuBZNp4BaSM8/fS
DqsN18gdng7aFGB1OtPO8XVVkZJWpOtEBR9qlg5B2LIxwSydotLh4cLNtXQI
ZggIGA9gZ6ipLlT5gfJzpwkG6QmJLDdk2IRW6DWv58Fgjae8h1V2NfT7sbHL
UBrn088A+76q5x+tIT0xAyvwuNKBb/IqmSJE2lXJguxlwLhDqwJPDK0ZJflv
2aLRWq53SQAA9noH5xsqj3nya2fcKnViJq0xxmqM6SfHalVYdqG078B1enaF
hVChx8y166yyIgteiASWKtgaiSGIENYXolVxKEYs7GWoVPY70mPSkq1I1Wd3
qWbaJYtxs0rvqVHSfOz1t/8VbQVwmeQ4k86YWx8lGTveZTR8uFkshGD2no0i
KzLlhVksbGsWCywnFr6XgaYCFJisul0YztmdIQMylaKvCYELlqLT+Wt4516U
BzMka2SHMOaGjXltl/d7KYbKldoK1K8G2QBJELkAKSh+4JjvrRcoSGOHcFlQ
7SNtlTJ0SP5bbckAGKSrVZtzp3xVw1E+yklWZ+aRfAaztAT79uEjzl8rH6sT
aCEWgdE8a/ndzxhFzyW6BnA5qhiTA/6yIvDA+qw1NfvaqRPm2HVbXsShS3YV
wfqFMgzvxs3XEzAM5R9Zq3UGWqydFuK3yvVKk5/IcvldgSxkJg0r31aoHPmJ
oCpUBoEB65UCQYjXDoSuiU4VCTmYsD5UvbgGg2ksrETfffKLMus/Ug6jBpoM
boh+FoyKgwrhmvEjG4PSGacFBnsA+X1PEjIJw/rpoHdOjt660qaQjQKqIpr+
U8jlsTYDqCdxG4WFtFWhyKPF9ZOhhpuPu/gumU5m32dVx0INl1xz++PpoOeW
E/HoFJzIc186ddUBP/vl/zWUOmvRCKh86jtb5bLMBZG96GPEInjnk4dfd+z6
LS9iO1SFihhrB5WmhaRkBsE1i1c8LK9msq9NyEQF2eVX3vrom58+ahnyNSsO
DXGzscLrVby6jclquUWJ0ckpqIi57zsX3nnrmdfcly6MTf+C7FXPUmvdvU7Q
u1lQ++XvFfpKOiiGWd1fpJscfjA0PtLM08FS7aHOAw0qT+cfudWCjBUEOhyu
i52PFEGIYP5QMOwikMlyFqbXVwc/i1XdTiuaSpZpans07ib9H9Qqy8oB9jaS
CmsCHC8XVye1CUP79NgEPrLynp1Sqi9jSRESMqiidrlwEyxmwk8C59txdfR4
Llyy9omNJ1y6IXFhxtbgI6U05WPV4GZmJMKYWiTya3937E0PHrlovexzDiF1
6BGvwVJkeSsnXmmdD+3mCwwRf33NkktWbJtg9KVJKLQJ3bHnMSLpL3Ln6sUr
tz375e/eIn8DzpuwFTamqrxpRHawVzOVDcJBGFzmfqFw8AAQjB+s6V2q/iYI
4waZIm0IIoyrg/m6B5GBU8n6Ls5c/WhhLedqVvbK/PmPluMxSGc0o5zuGb+w
z+C9rhTbRPjpACI7RrkaD+TS5sx+M0jNwB4hCqWEgmYUeifVbt0/mjRST2qX
5QgVbTz+0g1yrLJUjztBH0Dddmn5ZAj7dmHYqJFinGphr9wmxudYqSMZ+nU6
JUo2tcgWQbNfc/rVmz2QqCmrYLWx3keY+WifObn1AH8ICklTC/Kd01ZtevaC
peufdE+NFRroOrqhQGgVsaemLMRi5p16xbI9SSmKpQ6wi6xQ9PfWQUNfr3CL
TLoUzwoOwqvGGP+rdkcC9EkEPeRAoEIGMjsWlVQ62EuyHHgs8ndaGmhyD64C
5mUFnJZsYfncDBcIS8kjEzkxNB7oMHMWZ3BRLFCjVbomgiw4A+WTdZg8JGlZ
BrtFdEZ+jRcP2ef2HRB6tT1p+TX5mXjKglYiGSgWx4NiOWdTiKG5ylBeM/sg
NKOp2ys76pqOpQPBQvy4U+ow9c8mFWRpH3/1zV/JUuTrswidQ7eDx+uqTph0
9iyR2F9+6ymDIoOzLGjbCVt1ghEOQ/McIMw5ThYNnZ6uyrREweab33L2tffJ
EGU5Oilcx6xQEFmsEIRVO+uVmWkpLflVhtTbZvHaiVQYCP57J0cj/Aw+2iwd
AqlpV3awEkD9OjldmqXD45FPUDoEr5hp8Fyf3xXKq+I+2L7C/HQGJseq4gI5
zS4a1HSi/GaIiMEqiZZepZQcwmrMpp9V+NGyA6fdsmkn2kMk1NS2nNqpqzfv
3HzsxXdZtWNz/W2iWYdCnxvpHad0mPdsdg9g8ITUnyGUIcKGx5JZE5JGxJC2
8b+tlDutD8Y+uDc2XNbs3xss766rJILqYeVA/UQn5OsYRAGO/GmfM4gWpop0
FFidlw4Wsyps+Z2IjeXnLd2y+qxr77txQtDbMQTC7AG7HbaiwHJ1gtlMUFBV
vlwmORraN1hxaY/gQbCzdidashRhLc5i4wly22NFlHh8jkUnPlauQo4ISuGq
rDbZLwNqHiMqaLIvGIZbW7OTfIsFGGcWgVRXhRD00hjImlPYWKZUn718wzO0
8i3T4bAciPQ2Hr/2gRfkPdiaKQN/TYVUmg/9ygAWo72LeC5onakfIG+y3gfP
AQIVe46RNQ/kYx5GhRt21omV2gxfENo33PZjcYUW+V6PfoYQTskyYrT221BH
1gl+uWw2GULRhTDeibIBug4sxTNpcl7rhpMuu1tyM/JVqJELAlM39HtrmlVS
mIFhmzAjp7LF0+0rsAibjBJsDAjeetMCExNs7gPDn2fcrgJjRxQYiWLYcKgi
aTLmkHtashH571y1XgZMUtjsYBExLGz9bTAAdJQ3xhNluQzHemY8TMS7DpK/
nxxmZt/+Qzc/+kMJ8JvkhziBC5osfIZk/LMJB/nEQngvf+6E5d+7/o4nsb0q
uAzzikBzyCcFFKuVXrDWoBPaUoQWBoK+EEsZ1FW+nhsYIyRSBHNV4JHOkJWi
AKxIpZWj0GB4ND2aLALVzfRV5b8OBreik6uhlmWEzUfkc7Bs3C/U4JK86OTb
7nu+EhOkS3oATV/D27GYF53cywCHWClzXt5gbV3YRRuz98UrSBwzjxx3Q3UB
wxdmaUdlwOCL705WDTl4F0eXZfHxZCS59KexcrBuI7E0/h+XZToolObcEdDI
OQIgax3lEkazmUbydL9OPTTlV6VAgsc0qxyk6F+rNmJZMGAPNy7z3Qya3Y7p
DCSJzOIjWLVjFadyrZdcc9vjlgiTv6XDBOnlOhDUSG0PhWX1FQnp3WgAO2F4
OJ5ynFVIzHVBi9BIo2FXSdnJ8VTj7OLoVQCUcT2PMAgTNmmJtVrA1l05lNGW
bBbcZNNQ63asO/XKTcCukZFUyMo0rxcOOWUlbrShizqAT6ljIBu17lw5M91/
yCwzzbM/uWYwmd0Q6SsaprbbQ218s1SJFonq7yB+D2oWKWHNu5H7URoIrqCK
lKei8EOREq5TXxViCopzZi1Q5tnp/VgU2DLMzYjg/bYBO8A94rVZ1LOfrAEa
A72bkqVTJxPOUnRkNAKM8y9csvZxqe7Rq5iCxCvLEi0oeQTzfLCaSp6FuZ0Q
IJ4X94B1yaQcKratqRdu+7L8ZpIceg42oArRZQJZwj16lVYPp4LEZeMZauoF
zxBLnSBY6lZnX7M8CC54mT0HZpVX7MC8MdmIRTFZ/0L27Xxo0JWXr/LmbrRH
WKxFK5ysKddqaNm4NbYFVgStzWa1VQIlfS6+IJLrzKnaL8iQTncjB4MF7CFC
gmjYjdADoOY6T12eRcjTRISABeJVaSyqmWHRBs1X8uLTTnbtJg5zsySWoFO5
Nnzk8bKj9Fku+fCAqE1fZ3HX2UV4yWd2DZpLq8uW7acKcss059YjL1gnwTFE
Mw++ouVXV97zrIRD09H2F1kpi7VcaiseH7qzlnBJRzhAbkpHZMltGoFg0tSc
wrmFNF3AsL7yKYSE+wkx9Ee9kxislARrntoKh40mVKKEEIdOPgkxiE7pIil2
BVTXVD0ZLdtkMDsHCNOOR9Eg9yUHKZksUoocQsVq26HkT0MSinvZrv0n48aF
hZzrOq5gV2gxTZBISozuyaoSq+VBKNQZI/fKiqKnEAm4a7xX/F7opLoiC4Nn
yqX465onDMVI05/krRjnGkVPkN7LEk1EzIKQkdPPDn7znfcFcCRd7t5FymKp
I7NU55CTV8MxeFVGd1kGDNU4ina5IcWSiWQonF6nQB+HzgXVNfIcwxCQ/4Yg
uPsV84oo9VNozsS0Dtn61I8ePvz8O6So2rOlFax7Ym7m18Bl18TKMkd2y2mt
w4SgAIrjnuMv3fDdW+7ZWduB4bhLrGQ64UICOi//mIBWmRtMRoYxqUmQuotT
YK6ldO1jr7/tuf3Q3pM32LKqSlM46T0DXJAZW6gQIGWPXbaByoGw8U4ukPOM
6ryyA8TeDRW4GkwJRkEPORAstF2JqtHvBY9d5cCzhOd78G441D/NW5HPDPr+
s489/6bUD7r2B0wFv7DRoqoko5DoIQNhDVri29fSiTGgzAwjdvDYLdyEnaOR
0i7Ss/tV0gt5FKVWvABMR0OfvW9KpYK8RX5iTo5yW/APVCqEwRaVWk7/p3E3
eTMO2xI565GIueVevFaKdaKUWn8WeYQJaK6wAOXfTSNtiEBz0Y9Zg05IZH7k
rGGcdeLrTI+6ed/qd1kLFgPPyo8O1gJGIcSyAcOExG9dH0WQ4hZylW9uYRGU
HuYES9Z1lW4OWUh+Y1nEXbpFW1dXNisjYc2UZfJCyeDsSg5vCrmDK7Ng2Nks
GILsYo/4eN6p7Pqhb1+wdvVZS+7HSD9EWD31qshv5pVZnU1uBxywaKW8Qf4c
DNHMTkPCIs5OHZiV0oGW/XzILdQpznLQqy//nxQtoy50dUMzQ7s8XBYaOrZg
EpT3088rt+Q5BS2uMZFOc6BVBC3J2dnxs3RdDOFylBArywVBtNylIquf1GKt
emaEHb7O5kb7Xv7bAGdCRoIJBDXeUfm6C8zwFvqIoMna1OeDyzvrATXOKMxj
ggYRu1Y5To3yoInqJLeQkU15DNoMA1Fshsyoai4UCbhyyGy5zughDcKmdiWS
hA2uuipLg+eiNKgH9PhjmaWh0kDiixJD1hbSf7GMB3uM+mW1yrZrzdB3LYNy
EH485OGn30hHnc8sTBP549fefs8ebV6lCgK0oP32oGURZ9Srz2r0xmzVkB5U
n0I+k98YIgqGJz0EOK+8EgFe9JUrzlu6RQo2La2JvUzBg5tZztJDPBphCkbi
KKFPFpFTKRCioKwulfU3VNjKQDIDeHR2p66XmBjQkSTG+uaWAVie588YrJUG
P+12Dn7zF+93g6sN1DgvIbOntf6GBySrh5ptowljxQx/MlDHFYI5oLjGRve2
OFBTzvj7vvvef+CCNSUVFnxgM+MH12VBEey1GRCkpjL+84Xxq1uM1ANZA++2
yozvcXvTTSfddu/zEtvFZ5HbHgixThXSHsZQESCnYQ7dbWdec286jvlFaciW
BENETjcdzfwihYUh7cI0BR3SEyASzDEGtBvM3ekEI/Mu5cGWqsTBvnqrwkUy
t/f4NVtSFdWEt3+PgKsCvIHLWBjo7rJCGToIRz3G4OgPEvUA6GL1/N8QEGep
JYjuO7cpWoldX41FyBpeFTnNIMjNWhkoPOrKp1MKh6YWeS0v/9Y9232GtHlr
9WRMy6doGtswY43KFayElEwPIHN0VSUMFsqT4xbsT7e4VKsY38rYDF/lHHId
PZg2qNAFzdo6cOHVmWlfaBS90VpihkF26gfrihs5Ipn6tfrMa++Tv00hogXE
sVfV9BFi3a/woMgCaSb+xMQjlTXlsB4+4ry1E297UFQzTAx1gaf2gSUF5Kxu
XLTsQalSkvsEbOiqR3ugTgD+yauZuyHU5pOfNpx02UbJFnzy2Vff8Q1ApsxR
9FVlWZynnC0g+kSJyzLHuqkQLOwU/6RHoylx0pJdetzaLS8Y4hPmYsKFQ+zv
+LVawJuX0sIlO+GMFU6UKb4iydw/VWPW3hccRe2ksIMUqfy96+94wjwOxY8z
SRtUpaI8yGu+e8umnXY6YMPdfP6yB5deVKr6zbcKKpKBko2Si5hPLgzmsrnR
d03mtu9HbksUwYbZ6COCwPkTIiDBURAqlICwdF1NKUTmWeJG3FDEdP/zF19/
95kvf3e1JEtkj1o5KIW70hH6whdOXinv0l0L67kXqF65bOlnf3XEdVuPWrQu
uW35qwHYXCOsdm+XXHP7Y9LBBmbpiPkvOExJ/mK8JHGZODO1aKpEelPiZ5gz
CaFrdqkML76C1c72o5wcU3+qOkNuU6NFpgu2H3buGpjqFHI9emYbj7/0bunu
gz269Whso52V8p+bjrt4g6ASyNJUcZrAt93pdUr7/dt//e3rZQS1/HL/oork
fUGFDReNKEACFoTZhb93PlFcPVgpVOvMJzcBFWuuOK/NrPRivOB09hCxcLMD
PvOgOWMljdPLRTz2zbNuF8wS+c0oud5+8hlDwtBzlVu4YOm6HfJ6K1cyL07c
tfWnXL7RLElNRj/3xVNXyZREOIRkRcitSaeGB7NHolSHkvmUdJKZZPIskQQ6
GlIOxYryPXGkqxd6Fvb/o9d/8h6G3l1tD8fXJa6ElksP/rLhO3CXrvJHivyS
50nbv5weM0BgamrVwZsk7S/+8rBrz7nxrqcw1OAMpd/76V8dcT0bRC4F7fJq
A1MRH0qyjmJ1y98BiU3YNoGJZWptS7zg1QnJKHrf7IQUdcw/ueXsJfdN8Mdd
OEZw+2Hn3C4zJNP/KR+Jm/nCF05ZZW9kmRmGsMtmZc0nxF0sjCWZe14mJAyD
r+r6oFD4/r/ICyAOctMFyx586mtn3AqQFSHkx7xuQMFwty3vt21nYPU6hl6k
NsJZyzc8IzlH7GST/55Tnvj2p45cOv/93/yn4f1+7pGdb04wxUr5P4wEjxat
6ZkNJVBhiO3fOneNNMfLvvVJVkcuT7AmW/lM5b/0yoiOTGILHOy6UTCMd2B+
0CghB2DPeqC74McJ15+5/O6nXQejfclSbC/808krNk1sD0mBMdHnt+18Q5Cg
cRFfevCpH+34+pm3os/52ceee0sGraNgltt4/hBFkc50OihpPZnpZzRtkTpD
sdSsvzxaDAV5NZRrycqkQkdMeqN8cfjkzTJP1MqxgzHWg5OCIbdLeYcHwBlD
KE+9UnjKjTZgUG+CLMzIOEnjBnKkT3/l9NVSBCe/AnFVx69C5ZKG4QiYT0DV
smCIT2nUOa2iWB479Ow15lEEiLjZheQemrixelrenRN6TCbfNlXzwhFHhMHM
SIuvvu3RmydkB+ZCYI40jrZJDAVqTgjDwOQBobue3hlATHrg8rLCGKLK3OcJ
6LhDfruA6+CezXCRk098/axb7/3OxXfJ22HAWc1vcrIyw/CaCYMEfQW5hUSp
MFpRCuC3fevctTLkDL4qtSKJWIGgJy7rHtFO1jBAa560aNeIQAgqjVgsLCmr
evCoRevl5/PKtYunt+XIRetE7DLMpv2bODAdnPJxCFcAv3ug9brMd6/mP4Ux
NBD4qvKGtIWCRZDlduWEJFZY7qgdHOiJTyz40jzJY7DOTchVyWoNJ25m0ZKi
MtImGlJAgPMiNyUIZPL0kULMIvST1wLo7vJy5NYQpFddJr8R8wMH55UiVkdg
CnmFKeVITJUjMDtoEdc2kO32KKWmqkNUcYQcJysw01tBNjZW9TniOHw7sJjG
LlKL+mW3bF991pL73M2AkKgvfko55pNuu+/5JHRHC//YGbjfrbJcFrby3Osf
kOeXpHYImbjXA60pItVSwqlVXmEy2yYZabivjebPnu/922/NLQfQS9mZ0Is8
WlnVyvJkMKm8fa8ictyvb2TVyh6BWtZaWYYwhjLtD/xi2EiFik7TQv6IfA8v
8PJVAqu002ld/2YOg+AP1sMVgihY6CvSSkE5ETnPdKYT/60BdjkwsdfT1QA5
uwWn+R8TX0auw0WYyhONSBjoNUgqD73nYxo2+9EqH2RLJ6y5//kjNua0oQEo
aYsvetMIiF41LGPraChBG2/UfhSuiwQuB+q6awvhJDFXI1jFJ2QebGPQY+HP
fvXvFvSv8DWBRftN5NolqJBryhJrgt6krdCR0BMESduBsPU0hbCV7mVNonZT
MwNM+LEeMVmIJnXqzJEFxiHUkopKHns+QV/lSHPLrKkj73r4ZQvP2RDZICX3
a2bYkPOBgtNay4Yg4fWZYX8YGRZZNzziY4RNVUibJfTn3/9RgpIxVw5KVDcf
e/Gdcvq2kpDjYZP0+gpXYXxFIRQtwGQOaH8Uh2aZTi0C1q7YcypD5W9mePjf
2kUb46TOkXIsXnynY1pM70ncQDT1E9846/anv3r6rQI5LDeTZcdA3eQfwqdq
fZY2tPd/6/ASM+q7Ydi1gZQBWabuHpLHuJKGqiQPis4kd63JOeN6U8zG1wBH
VvFsC0N0fgB5G6GhWP4JkQItfbB4stVwQH9r14GG6MOcKJnl/4R7wLDG+r7s
BQ2ixjWZgAcLeRGli//2M1fUOCvQkSp3Nyk/QKQrY2lwCL2BiulgNs58aWbp
18o115qXuUWB7/6wUWu3bfSSiEMb2yZnq2wu0TaxhDBY0IQrXwFO9Vttq0mO
KUVuW/GiPwpgGF0LakIKBZbvVC8MKaWafBAHeIOL4apfn2F4Rfcee9GdEk/9
5LOv2iSk0Bckv2EDXqAX2JSYvU7MmJ1fPPWWr96/4zXjP2IQRxoYJ7KA4b+o
oYnTHP2CAYW9mpM+iJVRSBB2lAzavsBhZBHuMpUlZPJ5DGKBhDlF4zArgcEy
9BENqYBzaL66kQIGszze/IgZRTE6ATAMhsFCYOZl+KtnF/Yw5SOrN87/IFkp
G9w6THbZQ5eH4gBl/NcbdXQEBwDZ4ZX8jPFVSJupLUszOD6zVY22TK6JkK4T
XixEQHAO+614xiSyGncYk0PyhykG3sSjggOpzL2Uwe7HyT/mng6VRaD8hySB
l/XlN6ficku52DRptLzVhjFVYRU9gFZXo3AZ8gFWmZhRI7Fqh9ZXnyUUz4J5
4sQyXlbvVeAMbh6AYAUsVlBCM/FB+94UtBGQTIO71SmTxABTpR1cPhDBI42H
0b7k2jWPSzOZdQeaOGATLUAUOfPkop923dBlIgFw5OXJsiA5jqmcDPrJS3MQ
Ip11XzgTlQhYqIupzv3Kpbgp0EMihDjwXPLbEcK6y7JE+FGzRJAdVvHa+L0/
IJ9p9ab91pI/pvwAOrGF1OJakMXqioOu/pWVWZtlrG5GPQbV1F7D/DmYqeQK
OL6oHfLPSshidEFRlBk5emojdXmu/cxgh+T7li6qZ7+kk1ZXxSKY9n0NQQWn
GuZ2VgX4jrxpXp+J93QByvRh56wNXoUIgy4PdrRG6+XZkraQq/FEtdJjsCvz
tkfrYlosPzb/T8weE5daols34dmSGYlqexQaDlZW6lVvDHGcZfUVWDfspFNC
Cdr3iGOj5V6BVGpQi3D+cK7ewjmZyJQK/BMw2vp8R50Ox3nft1mGBBMR+slZ
Gt798huyDPlxOXjX7PB1L1RjhslHyaXlkxwMxVKdHD/KF4gY513kYI/6nwYS
BoqYl8+FTOTpg0VEY9ew6aFqFC44Ev11RXcRKIgSFvzuCoPbgv4g1ySxcvIE
b+Gkk4F4xumdam2Z5WFpPrwTVr4SBjKyccAMzpJVGw4T0gYb2oNLbNCMii5W
Vlr1Mg4EGupUbr0yfS1ePv3kSz998utn3IpYZERYMPYYqd9XYxdKoZwMpxGw
ZJwd2HO0ywzyPdYFObVoBKEtg2DUdFVtiMBYnQr6xMt30qkwkKS8ooG69SkU
CR9QBJX7mT0ESygBmUN2zIIMKljeiMSERBy6+8Bg8cYCJlggDCaXAHODW+bh
C6/LZZZOr8S0/9NwhYoAk/ZWy8DGpU4m56NXKgskV8pCBaSBPmZPGII4zPvw
a1ZnwtJ9Ute85ejvrfs/L7z2bm0QQqdqcj7k/SF9zKBooQzZURKgR9rNJQA6
queTBNuEVUfPJN9jHYCsJLZCE02kqKVGgfw7patXe4KQg8wTFlENldB0BHvw
uTSEZiZQrQlgnoecTHKMpxICAivCmXMGOQE271ZxXQy2Uf4m24HDcgOGwddX
xIeFKgbslC5YEZzqUHwtZz5ExNMHmsVMyCHPITseJs+7MYuZN8sOazHDCvID
2XyEkPp44XavSwBS33b4eWvPX7Z+ByVNpqP3J+9V50V+ZxCQsu5+QhOsWgi2
4vAsrebfkpK/qGCYNFK1VV905pohwzHC3KX8JWQJITbl2EnqbFgeFEvGMEpR
gfyllLekzyTJJEsZKvTgSU8oK3XTDPSNB4VmEVpqEdkDncJOWIA84iFeTQug
0+v2uMK3GqthGSx+nzXVTiZL1xJ8E2EM+jB2aEL1YKAgNutgvFxX3dzTjSc5
aaiu+LPrD9kVK6nshsXyjSESXaBeQOyuRVKQ6R8mUpPJGui+84pnZtIMR1GY
Prspy5q3Ii9DqX0kp+EiQ9xiOJgwo7roATtEEw7iMkj3jeFMs+p1NnxmYaNY
ColtoQY99JBeZoi+UDgmq6m0GovbB1pjkF0Mp1MRwDDzUw+XkeVA0XsFIt1n
lld6pJpE8nc5CHO9Ggc8QPb/xguWPSgpbSE5mAVeB77ZlQdKn0Woiw2jYZJm
sNyjh4wBKU/YXypo5ZRg6MLGEy69WxAx5fGgvt2FZpUCDHPF+lY2bnsFQcGp
jMmfsWxWMOmHymG43TRODjIDqsv1wmBdOSrRulKPBd46Pcbg+TKC1CqD2krr
Izd4EFngPs2yhQwZi5wIhOpO/81Ztii8RZh8M9z7Ec70TLaomEY8Ejwtg59O
z2WjkZkYhPmiVafOgFVfuPk98ak3CrHZApr+qX1xO/7+eBxIqSGxpd8LqnO8
sP7X7n/itR/8w/E3S7sTFIb0mZ2MMCrBa1Ff0LSc5X0ZkSjsj5lKOEhaTh+s
NU+bDBOmGSLydA7ZHZuW00ckCOQXPL6steASlxU0NdS9si5pPwCQmnj6QHhe
y8vQcwCcSk7+H7fvfJP2XrHJO0xxMsnKSmKgctZjfpokkndIbHvDiYs3Svtc
VcLEAGbSjEJza2GpLs8AxcLpl23zYLLUHiIkXOtswoPDLh+XZ8HxdqGbWnAE
e4rJqIOI4IBJd9azWSKfPrimQkoLImGYPBUQvF0badWfB2+Xrttx/zEXrmew
gFOizD5t1eadoucYTDtjUTZMK9PQII67kYOXwixMNIGmsWYFtPnc/dC6yTod
LJ/W8ymtog6wnroQJ4biV6HDPWZvmIqYQ26anQpEl+r+hRBSzlyULP5zbsz4
CuYlmS1ywpr7v1+Vhg4Vqeo2Xj/5bCBerbh4Ysb0aNcM4cNBslkW8GO1rgyO
OJP/UF3uidULjvkF7qAbeH1FhNUTmoJYG4vbNiuEbZtFQ/duFiGkaibeO5ME
Kkx+GoUJWm7BaClSiIkQmKggKkA6Mw0NGafzme2NzRk9Qijh6vT4PvfIzrcE
XsLwwBmjaxRvxbnXPXDfdy5cj2iMQcawUAsLDFRthDaOxvLCVSwSk0t1qwWo
ysq5aGEGWarGkkkAqccabTbgw0N1qFcosukoYJM7/Sp8aZ0HIzkaOm7NvMRE
+8pLRnwmVGb/x+/+y9blortNbq6Sl8hzBCWjhbrY6bH4E6x2DkKuTtssWc+A
m8HfcHqZXrRkd31JAEGWBSoWYJ2mtHQ/guAFZoUUQAVRHc/lD8mq92oWHOHs
Z5Wzd3OUmYArsuD4GdFXQF71Z8Fe+HCjCEltaXecdtUm0zmtcmLoNYT+8v9p
WERbBIwjzM+0aCwTB1C5Kl8VW0F2Vgoiczmdu6SdCG9q5EZi4Hw0DRS/IDmB
rVhL6eBmaJeT5ZN//peHL/nsY88FvMowqrvKDCRaAPvH6aNNTpOp+yxL2jVc
svE8EyMQEvDPMlMNY7jmgJ/98v+KtyL/rsUTaGXP2vTIqwaqV47swoTqQMlx
wcFmrgkM2a3HQLHPQiiGmbPQAef2SJZko1buakMk7SCw4cWYT34PwwwqYdcA
dB2lyceIBukhTUJ0jQHa6feCVaTS5J1IdMjWgVrYgN0PNUqTlhFnKNlqxSs3
HgueCnsPC4bk0xxBFWNRV7k88+FDjD3/ZrjudRD6ciehUxBMWfKPDWCAToau
GTUQBvRlVTUxyPtBqKvUlH6Ai6/NrY7yXMH5ki1UWCNJFEDkvZ7PHpQs+DdO
wrn7ajiYHx0Aq+rkwkyjiBmFgzxpkD31EeQq07CHPPT0j136daChE3rPnRNZ
ILtNtgFjlevsTBy1A7UJIQoCMWJPvEIq2k01hkHFzIWGotf86gRfKo+Q18ug
QCNcs9bwPIIEGyX7ZJOOtFs7WCF7ErkB+EseIe5hhQTJuTLLjZ9HuQEdpayF
OJqCBzbKjTCEBgu2NPJnfISiRQ6bwbSzOAgDBdH6OGtcs8CifQdgBirP0z0s
O387Y6NlhjWhBrSldS3iCRWWiXpkJaYh4LY8Fcr8jtJ3OKk1/9e/+c97v3PR
nZJE97zhSCEZT+iAJPDUMZu7zu5RUQbxNOU4JqfV9LnqkC/NjOSStNDUst6h
unYESc6fX4oDWXxakUMDZlanG3SSVbhj9jaEPFi2VMMbIVLMgDFYkh3QzNzE
0HJd+a3gx8nnn9u+8w1TA/AYF1EAC4Vba/v5KIBXMCB6CILA4MyAABJ0Qy8j
3Ez6RVmfyzDGjszzOYB8DybsulitBjXiCABT+rIsCYCb4Bkit6QSIfgZrFVf
fUijBFmGALgxCGC1Yq1mXg5REI2C3zZAdqm1/RRsbAaR9hBw8lg5tAW7WaSa
Rk5Y7AY7LcvNmsuDKYCAN6PAmfIdr8nplLiq/iQo4SwFBrDyImGNYvOKdpDW
oVc1ia033ASAplntwIyKtdS4LmS2K87HPBCqDjoZGzy67tpVF+5Ru2vqaTxG
KuOEKFknKOB0uWIFYEO0CRTt3zYnk0ikFVJC80XhRckD0X7fUZGJGSI6Kv89
mnk+bHUmkV+Mg5Tn3438iDzPeiiDmO7B8yw7ZFGuxJxQg26RfzkvsHrdsltI
bofVQmqLujxeopvn3njnU2BQBANZ3y7H/pNPHbn0uouXb5WdDvoNaI2sdbfa
kJn0/jlRZMtWIS8mB+wRlMF4umnnunThkrc+ddRS+TciE2HyFG8jANmon4I1
MBUKcFQYGWQvwcgeuvnRV0NCQpGSQiwUqlc2nHjZ3cbNMKTr2HVbXky8qSUj
qE9cBw0WfWh2m9yi1WZA9FJ4JtGQpqFtNyEQNJ1cOovGDhJWqUBN00VqXab8
/zHrH3zJslL1FG9WDjEUacDUdmHh/yf/KKjjHiwc/PmZZJ+swPiWzML/3MzC
gePZIxY2s3CoLwWUc7ctQfo8cPSF6yeY6GF0iN3yAp/fGUOvgxQTtQxCKCSN
2HgmLXPcdPwld0tUy6hKlYeJCwNUk8f5rBiA3arKwWMSj5nUg0V2JJyhS1ds
S8O7i/SRR5q6hic4vo0Sj9y3AGMIh4GdE649M27KKz/+jbNvkzsRklwQhTxA
DfcJ4OCDRy1aV1RKrvtydEZdv/xGqkPNtoFtCeyq2bQw70pQ3BKRQLxe3n7G
io2psWAGuSOWXRskdw9tAJhHnl72KTibScernVZPxWZ1U0G9FuH+Z/mvwVDc
vZk3Q/yzGbsnuqerM2/+shyf9xEASXj7eQ8blxQoRT90oOjHanR7kk/rTrti
k3hS5ZLpmPAQpgO95QaYCnMLw0k+CmdTQpzU1Sz8RFKagiqPNpw60GtPu2rz
rWdec1/AW9stcmPaGKzKGyqGyOa1I8ymScvrnQCB+i1TKEuCg/EkIdT7PjlB
fOhjB+tRlyoAgL/7w0MWH/STd9+3z0wmZ884fybVGgKphqQjufsJUfBM+Wzy
0gtv2gr9TgIXufXbF6yTlemPjlv7wAvC6UgYsmdB1023OKNciYcBgfg8mKoL
C67AQNSXBXEnb+rxb551u+DoG6EZZK3g139mx4tvD3L9OFhW6dHAP4uy7Pdx
YwgKzGjWlMG3UG78VRTnyI3B4mQ+cg9uDMp7sIjceojQ4qtue1QuDEptoxBi
72CNJ/nCAtKPBSRdWDGrJb9zTN4vkJV2PHhLdrSWWRMi+f4XTlohCLN7l625
l6nbCEMf4QiqYruEb4ZZLZOjms+TXcpqQxNnO5Ii5vjkcRJ+tVezidKqQmVD
KyceK7DWsto9yiI9gtYuwkSUHTKH3Mnm4y7ZAA0ZDl9mr2sXFZrA/q9d8zik
0MMTANxSniAQuPLWmYSgmOnDTAXApUYVOqMoJxEpG09cfDdiCQoYeOhkaxHV
yYJA/5sc9W6EbWFYlheN9FCiYZu3Zrb9l2a2DTqXhcD2I0ufTmRgVZ0GS+oX
G+2Sq29/TJafcCuIxGA+KuthZPWq2rxrOkW+a2LYL1iXYkpaDDfhXk2fyysF
kviaxSu2Yc4qXcQHiCTXkwoZH1XWWPtsJw7IRsEk0LIb7IiUxyMdEZAYh6LB
OJN9P5yMuq120kfd+dDLR9310MspBrtnOV0XRlAH5uU/gHIkUFxGQNVSwmWq
rKpTP3a5yv12r6Y2Cx5dfoDTAhtIyLoWWX1zP7m8mUX6yHfFbpALyvc3Bd0s
Wn/XIdObGIP/H7LsHgzO+t+7oWEqO/O2zODvRQZH75KVLQbx+MFmBg+CALAy
HCYZME/kvZ/WEEiVz/+9zmybiC4WoALwI8OYXrR03ZP58Mfs3tEHkFVYbkkc
TRl3aF2FFp3dN8p9o1aASnD+UykiT7/ourWPy8gMMN3DWrUKRp5kBTbWTGRB
dQsBm7RoqOUxEZ0ezZoasjM7gPEL+75rlz0j8aTz0SJg4zMbjquxK1mCmOTm
YuU3j9Rh4XC5nYICX4pWqsitqlnLjEr4TlakOAI1plOgE+UKVk/Dum5J2XGX
ds+yoGW407KaGAaDHFvbytDlGyI1TL+z0vO/JGvYtZn7QwR+OtnTQOEbzy3d
nrn/X8ufXGYO9n6EJ2R6cH/QxYBJ42YqQTxC0CYIdvb0lXv0NAc/B7hGYAYE
bkC+r/NQ8auycgnTdqWTlAjksGXFn9j5g5/LbvYrm6v61bvSNO2iO9ZMPNlC
+WwPY0X5mgjyfFMFw4SYygxfJGT7AAvASTWLgEEUAWhoGBnkwqlBDKbhLZsE
VbPE/hQCo+ztGn23sHZoxmX9nv2F6SxH6VQygyjxyYRqppcTrOumgxzWDoka
gikYBLPKybsrg8W74cWA/ywTLCTyILD/WM4UrvAT+TNil1FBQHrKorIsUmlN
Zv/3CbsyqQIRCQ+97EsWDC/1qMdY+a3XfkKS0aSpWXmGiGR0/nuddPa9YbIO
hfGzPaBALv17g5ZkE8hMec3TXz199T3HX3q3FcuDqSwdt6vPvvZ+XZWXKxkd
DBRB5AkfXYTJQvkMLXHW35EznCE/JRedq0Py4+wRtv/Yk9i2oJ3RhiUXAdTf
ebRTIK2UdUIuIkuB1lWXr3pky1GL1lvwNwmLLOeH6lpCrAn0S4IO4hcOOWWl
hNNok3NfOS8sezMWn95MD010WbffEUPVkeBrja/VVQhdj49k0S+tcaq7Rq1M
ym4NAKp8n3+VPwsWN4werbk/iC7WqMyYWOXAvxU54DpogLy+5Nh6cH+Qq9V0
GqjkGAzFsp1s/skmrNkR1IVHAhcSZu8j+x8hi9erqIG6LHpnxR9ayCZuvqzY
+vCPvWPLi0Wu90uX4U0XLNtim4KWn1hUUFWoAnRJjXkean9Y8ZgGrizLbXQG
+XKDMnEegpkeciV/+8T333YG0EQcUdFdqIOmDPby+891PbIMGfsj783sPxiU
Vad0OggemnyNOPhSZWcSkIU61LmphUCQ7oAsW9fQE9ghWiMRCEM9GdnqKbdu
fs70/awiSBy4gUGbsWIlaEjtbqDrGgbNOqT/umyyMt+iRGComUwEMqt+bZYI
vy7nVCW2GiGgnHY/0CwbgokyjdC9yoZQ9qR3bSDvhebZ/LEYG+wjOoxVGTJs
ELUIbJyXnJCkWKzn3JYG1l7L5E0odVDzgJYZZra1wnNhseSIVAE8rMgOmSIN
R9kxmHuuuzl95cZnpRgKPK6+mydk1opzr38g/R8M6vJsqDJb0MKdHLZymtvD
9w0y+tFDz1lz3g13PmmgvPUTJCAgPfzC7djJW3v8ISrA4CvhrrzJbnIRv+6z
jhP2B3J1q3iciFpGDyoS5LdXXbbqEdlvMQq8WQBLf4PnwoZPVscA0fUBu1Mb
CxQEwaeJFJvfLAjCNnqYBuGoVBD8u981lCPUTZrBy9mHsP+08lsHCJ8eiTxR
H2TcqrttWZE2tjhNgqnS7TqcJP+WjKUWJdYNotFIHrBomyxPOm/f+eTh103w
4vdRQ4eYgvowKA3rqDX6Kx55gmkud5102d3rTr1iExRkBVudtc7oXBDM1snf
xB6RqW62S+jzkNB9ugiY2+G5HFbH3Udk9W5OBqqvJKAvuIMWgczcMVJbV0Ji
39bxVFK2EI5H/ZM6Ltir3Y4NWphGlAFzv3VYVdBfnZIsUP422b3o+nVJVs8q
4sHJlEEQVbVPlB70FfJ2yRnJrFdpyfybwgkuY3uwMwEHono9uDZ58umkHPlM
qVf37ttxh1htHa5m72bGZql5k4hoCwcppqagebV1KCmzdZii4nqATFjxauH8
2CnyKsPisqScLFGKtCyoZiTkyx8kgpsJadXp9exRMG5lF3JRmCTTYnuzxs0z
sbdrJ7t1SYqyPGb91pcE/MaRPJRlkPKwG382YfGCK8tQcjSeFMI9VVhB/g/D
jTm6Ehx9/OohDz39o5c+f+KKNH5XQ6woFpBWAm/3F5nlFg4A59QFjIQNwrkg
Ow2Vk0eH3jgECrfdEmUjFvQC8QDRhJlS/ixPtXorC90yrb1LM5uHGvBphB+Z
RZErkib9ptyqsyUYA1UcPoYs9mpm8yA6Z5arccNngFxN5fHJAR/ws3/+tS05
s3m/UYhdSebwYbQY7OCsMlwu1845M+lQPXnPonxyDUev3/pyWhSrZtL8YO2c
ZT4fsKi/yQQGOxvyY5oCMFBWY4982ynWvum4S+6y7N7hGx955fwb1u+wTIFW
JdQWi7XGppuD03dOb24Qj2TMZrerGVTr4hBazFw0jIcsf5OedlNzAkluwogZ
25qkZ3wfDPBpLrRYs6Ei4plbZ3+rWoLROw+EATlqrzjsL9xRVQq0bQMCC4Pq
nI05r8ZvWdMg89x7sP7vxQ5jxVbK+v9BLrcZ/z5W8TDWZ/jyCtgU4oX6PJZ3
sws558a7npS42sLCbFaBJT/Jb0oW1Gcfe/5NKY86RYcQ2DwjRP6rQN28QEcc
dDCBQxdRu2zQSopUl7fs5k++dfNzHqqE2nsvIVfetnl25udm7T2CZ4f5u2Xf
u3Gr9JLJcjwEWynk9EqokKoZO0TFWI50F3J/TChAbtDRj6FgWN7xxYee+rEg
WJpuYylG5Q87+BPWPCC50x8aM7AVTo3CMlHTaNmxd+Aph8vpHb5x+ytWK9Yw
XKevPNXDBOOFHr3opEXYpl2uUxwo2y9MeasEFR9i/ldEac9r5vBgYU4lIq5N
zjs/ZdJvmzmc9fqH7+3ZzOHhtzCUJfoJMIErXYNsVsZiydktLPJXalyFhKwl
UL4qefV3/+KwJZuPzePoIZ8Wjk2D1kKtUjVq/UAopkMSAwru0RjPqfl+MUOl
h1sqbqATOJSbw0mJT5ZU+Lwi49z5nlw2I6clEuqZL5+2SpK4UMwT0DpY4JMV
nkANv8ds5zWzc/geQAy7faCHcsOiG7a++tkTbr5oyZonCrATo5Oksx7/xtm3
r1Gt2kMXhTKaKUSRgNKQot+j73zoJVrWzoBAphWSYLMmnMF12WJ9yLJth4xx
Bwrjdo02/wRRr4xx4eB9EmqP2SvhOO7MjPu7cp8ukpix3yY0s0cz4wbRrktn
ln/IhikLyzIlRnz14pVJNWnESqCaL79i9aNZp+WHyFdFHogsFr08wcrXStET
CzLmzwbwvqxpyIH0GF7VUFm929c51RiyrhhfZyXq5QB3yh2m16lEC2FpPYTD
7nn0B7/+069cIeF9OUigSncH2fghlmBiZz2nWWCzqVyWCE3vhYEYP//E4dfd
IlxS0rBAbL/634dec8y6rS/S7A8T8Qxgcqz89qXPn7T8k8+++k5TcTu8xvkB
fi5Xmgh6gCg32JQ0J4liwEzx/9/ed0BZWV0L3zdz7507hWFowwBDrzGo2KLR
2DViQbFEMcZegrEr9oIasYGiIiqigkqxYMGGUWJXLE9N1ESMBhMxMSRGU0yM
yXvv/rPP2fXc/V1u8ifvX+tfWa5B+OaU3c8+++yzD+utUwgexthBTDg7Fh3Z
KuvUlnHXWqNHqLK/E0g5buUZRq+Gl6eyqiwOO6VqO5bO4SwbYZ2775jv3gEX
NYGhY8QmQwF+dWugRO/rEOGAkPB/uI0Q7k7Hrk6MozlNJaW1nm6KwTcOGjWL
eeYiSsMdWVC7bL2R8vLVEVkAa8GUy5dQ6lB7prHhrI0Lr779iScOOnM+3Y7D
Jc/cA+zmaC4Kqgk/ebat3dEbT8iTB9PUGVeBCHDLGTPvn33BdQ+GnWnJGQPT
4yg0e/dxF991w3mzHlB1wOzOVokXlwrwjry7CQ6USuDmuzc6WtUi9KQgJ+Fq
FsK8ZfaCKdPvmXLzPc93F7Lw+qiKulFOFpBrOxEhXpqr6Lmxbl79Ka8o1B1R
z3/v6Lla8Xlf4u2kB2fruZmqU4jObpqag3d7eDIc2s1aGKJCvAxhxjnYjqEf
/uoTsjXq2eOKZ25Q5oiKcP7KZ3BeDXLFSzZR9TI+gAOydckV8x8Pmqoqc+j1
YYiICQXpNPWSOqAZGe0FWsXA0eAIXJ9k/WsyXC5HX+PGc2Y9eNn0eY+TMKmU
IqJ2UEmvAIl38c+7kdzbkZqSY0bit0ZKGwE8iQZwYxP+D2wJe/uocs1pCg6Z
ADhGh/XWSSz1cogzk0KTEoD8jiT9H0mlOUqBd4OaeviSSSN5pipdF5CEsA7b
JfXwNAc/cNtPRyAUecT7MGbB75ttCDw6eP6HoWH0YHJ/EJayG6LCL5xZ4vl5
g7INgRGbgdZyp4YgKWLHC5suRQ3thouKkAfGi0G9ED59kIbCGJqaLCUq74zr
ZHmLgIq5wQXtW86ceT+ArKp/AaSBMoOshAQPS92udqp4mtx2xIScM+OUo/4Z
x82LKERhbqbjOshFgym1WwQtSD91bTijh+rGLZvLksN09QZpaheMX9UkdgFS
SkLkssuqa6Fi3wwrV9ARDKlNXYxT0pAEBloEE2byKriqK6q8GkeVLul2JCv6
dfsWxxo0WcOprymbVRwDKakjSGLomQbMfqQ8OcoE29oZvYppMCdY3WSl49XD
08O7omn4owh3qraGfmoIjlF7pkEFTlgiBlsC6uuZJpkai8AaS16OHjmMFVCM
0fwmEzQpx0KtEKal4kq0OmOQRPMzMSfu+y8OlQsw7A7Pv/4eoADoBq4oPwEE
nHg+wJqM9P13GCpMmVxSlVdlMR8V/qp9/J5CtTRm7uSBN+vKFtoPZatZjsks
Qe9lA+5dHPUEXh05VS3qiQfV2gmHv9922ox7ICZT5yxmJREFcBchMYc2c8y/
jLxeEj21b2eJxbwX53aceesY6Na1AsyH102UP+GKCuVCqHuvTemBY/qOhT0P
tiahXUwCfCNF2Mqha3u2STDJod7G0FtR0CR8JkKZmgTKAtBWxUQiBmaZhCBY
Qy2+OhZkaBC/lYwBKss1Y2AV/H1IpU2nh2Te2O07110089bvyzvk3tu/Bb2U
MMzNDgnRNOnjdUrx4dMS7516jFya59DUxhC+keeTXGyhDOUkccy4+d7lBO+A
CsMfuqiGPsajg0iKr4r7rc2Bib15L960OebAewMp2uSWdG8FX+HbrO/e8Ag/
ilaWy3pYpCSaw5tC6nJ6u0efZbDdVb9vdYS+Pdv66K0SOQm3nXbFvXDjgHxg
z0iacv6RAk0kaRXpc4g1mSi1frI6RCHKU9I2VfLbMjY1ga4+jklQsSJeNNQx
P28GPX2OrXN/siZBr+CVwheEJtMQJP5bYhKCtVU7Gbas3vGSSpCmys/oa5SA
RVdfNOcR/S4MPEpOsYWSQzu0CaQ5Jt6ENsF7m9bEFNS1aqACBRbRTSDm09YA
Zc+83t0m3zj0jx4InYXBPb70GRjj5rdlG3xj1aImNpuyHSiPlItEtS9YnsU9
8R54ahJ2svuXXJfSdsHYFO8sDTP39eaECt1C5q2qGFlx2Zf+Tn1V2JEWFV7z
uzkgdjgKjvmw5NJrJrEqtTrEj75VeB8pQkFEM4uF9yCrCkyyoYwxt4pnxrdw
+FHFHpgYq1fFXuWJsAO1JNqDP2fbA6cGst14dDqWwXs2erhgzvdFvAoaXnxE
XUuiJQb6DBARgM/PTZpyc5dnuVTXt3IqsluKYrif9ldQzAdEocWxbd65vnqE
CJZd4B9g5pXxV+XWgFCBqL2saVTnzXk6YaMXaVX8LKll7Joxr6yQKfaB+gMg
wjRQ1BGmktvhiIOJHqGN8Haoxr9sdqifcUbnRXOQ3xRjgTNPlRbh3AbME2qQ
7g9ikxedggs/lJuDsJpIV4fY/eRaXoglLz75siVXXjL3e+TXkYV2yqG4Fpo8
vCDMuHBcd/61D114tbyLom44sL1qcZCNqyE/oErL2uYORL2zLYXxJVtk6tRz
MNigpfjcSpK2FKa5eguOo5deSmeLYyNHWMKFMdVpLC9dyhqxr6Gy+SjPBigY
oy3F9OEWOHznWh76sNpLT4WDyxvPnfWAhttrZzwoVVCDHsIJC5qYDV0jWl1B
4nTldqFQWsgKqP/oYefcHkpDKnudUtdjrlNFoqIaSL1YIlDNd3c8YtYVF899
1HvLzXMe1OxsGLxMWe9QzwuFqQw6SKbRF/LNiqSo88w3T7tFJQjUT5218EnI
iNLwmSO5/pmGqx5eMIfKLPqtw0pZVrlntq43zjbhiZffgfLjWqqNOWq2fQNG
MUqWp4Q+kurNHKJX0XtjyREcz0Mwwdd7ot7/xeq9lkIvC3StGZ9eYHakjAft
9Et9XvUEL55Jp/8BpV5ixCseYPFeWPeyUL27Z2oDBuUSoUyKG1HyzG1JVArG
4+rE0pQ9dxVN4jOJDqsq6l3psFguO+K820l5lYRyiKdZqJT6dJ77aGq+K38B
tvRPHXj6PKhRFOTY2ybgGGaDokLvSfjEu85U4SpkblFz9XBECbVTA6G9p9fR
sMOJK7g6Oqkf7iXef/SFi9WzGjY7oZMVGy0iAAM+wYvfOPnGlj99/oUXs/Xe
EFEWjNmsaumDhEPlXLBYXr6AZxriYlmg1BcTwfIeieqVbR88M+QJvvGU7o32
4QsrrNoOG3A9HfNSSJtF0NnXHiNmjO/7ezrm2WaVlwQiQY5X3MuGx1n0EaTO
qzcmyjtKyX4bO08Wl8ZAmTDn3d65OK7H1JWqjTSJ+JBzoxdZdg/6i/roUwyV
2AMbbfPSpTL9HKOpUnDSIBsNVTcSFWqr6Q/Iw82CaVfe+n0gMp9oenc4JcBc
xV54V+GNB+HdPIvfStRXP4ipjQXmJQOgm7zxzmramqLyw2gbv/HuL0gAmhym
xnBZgyYdBReOXvTwy+qOhmW8OlRKi6SRKgRZVJd0wUrB7RT4v0pSS0NdRgtH
iyRQWIvrf3ovUlYxGiZXNfuJJfsNjcZfHdDU4p7eezJaV8VoGIpisjDdhBGQ
tKPmZccCbWmfQJVs6VYfvfei88qcGxTmqif8kIqo2wO05vI64W0lPRqqUg+U
Lx5Kfsiykzz1ZJ+4HihYJtUtuOitKQqk7p6xFKpDxKSEmV032mSJi+Ui4q11
DAbSZ7iWRyeagFEAs9YjcZW5wChGu9SgRaTikMKrKoGFH8loA/pwcnjlJTcu
kyc7monfackfHT9m/nuP7sTj9lDU4eazZt4PThWABv5EeofOBNIihxuMF1SO
+WRJUnJF7gJphnfHSIVwudDKOrJq6pzHTZyFoaejBertPo6oextFb8GOrXN/
yzYRJlriDdGRbSKMV6oeueGwvSoVzXKh3Eo+jUoue9GFPcxTcB+X8ZJssDaP
tlw8Nd56TQ/BjPh7tcS8W7XqrJLClcDB5PUjnRNvDr9i/KkpPffQVKJjUAnC
2acrvXLQ3v40noWGUNfCU6bfQwULsUAaSWmoifFnqWJNR5/qFCW9X+BcrLPh
LPQJqV1WYfSkjEeRq/x3zdXl5iyHdDPABqsLpLnqWn2T80438d/sLSIfigAS
JJ7DhkaP2egYTbQIGnKYggQesybIydDcTJKl3QMis9VaV4SMMtigz0bOylDF
anjVuY0sq8AxewX3R6vxX2I1OJ3eC27gN+O6eRdhmhy249O20C+NSHql/5z3
c7g0B0itCHeBSvGYB288ENBqUAAUfNWUWU6KoWP2tS9kHDp8p5YccCp82mit
Hu0ilB6zMz9M9DgUOFj8yCuy9vMrl3ojZc6OvRRWtawwulg3R8umrmoSIWvi
enjlylNRwJGo61Xr8RJbugsD4JWio+5Y9p/pyyfGbOPDGrTb0SYjVxe2+fXk
RmhMnRdS+clMsr3K4qXEM+ZkoBU9OtXAmgdGwbxEG9yZEkTE6iYrEEQEOVxW
scL0QQNjO8bFgajgJZ2nbehIbo9s22GCLk0OGgiO8WDQdvy3A5UXZVBSyPvL
KrbDSPC6Yot4t+0FrTyvBvNmaBuy+/KX3qGaYNBG57c5/YL8Lj/4zFv3XfbM
j1xPyjO/YiS85BN87422EhTTRECBvjpZjg43AjFGylIx/dKbH3t+0pSbZKfN
OdZBd1TVzfT82IRoqlTfMq66VxJFGU0Ouil9g3Ygbsfd/sCLKH0mbJkYMHVb
oH7CEy+ufGXvE+YE6yPkVAGOpw847RadNmCCr97REraDYV6YdMpNqQnlNdHb
kamKShyIVHUouZ33OCrCDJc8Xpt43A2Bj54DWe/09YJdag4W/I1k3QFZIT0d
56BSxQyYdT37xQ1rLqKHlvufbHX0CrMadWnPVj8Yjx8VWt+qny4e4m14nDT/
cHkC3up46Rsn3XjnCZfcDVWL1HPrTWKkgECh9qW3L8gL73lb1ChymDzTZRmA
BT7JIFGwEgGk/QEgCHl+gZAYyYUn6+G5bS1+5n1NJUJp3UrjT3ui5um8VypF
VRvg3R9G+uB0B059CZ7uzjKgCiMnbgGvhlCFHEozq/Ate4JNwlp+UixRWF3N
z1uBgHqPHDF1QVA6z8v1ik/Hs/gKNwC7g0TBWzIBG7FW6jFdqFTRxb7bcokr
aB0uF14jPJ7yfyUOSd4X5UeithgfoC1b+Q26XvzFc8zj4X6ubKFS23DXtzdr
u3ptIVV+w5VxMj2fqCrl55sVXtQhrntN+mQTxiW46HSR6kd4CeONzFW5vEUk
JHsoxVS8J2C8ApMR+bzekkOfkphzqNyxYMqMewDGaAbCQxwQwdaCmJb/UU+7
FrUXDz8kZJ7MdXesgIpscKwwItNMuznaAGkrA3oGv2NnBosIQ1u+rFqODg6b
bnXARBxhwfTOV1CdiFUkbUlCQWCbFyyoF646sStdDtlQaYCsg2mSKmmrydHz
XtVusBYF+oFalsRIpUcznu/kaa1BJOY8cLIkPcK9rmNbqhgHU1fPey1Rbaf4
PPNBZRz+Q37P4ClN5S2YVwusioUwqG4gS4tXc5+XG8+Q1YncUQwmOdhkk03c
9VKa1KVgWlg1eiZpz6tlhmh5fqtzUZZDRrTs4TUNXQSPUqYo9kilV/RwdDFC
pReaB0gxzgLIUxeOlXmeUKtjRJI6forZ/NoWzMVMxt/RhRY6BFXRW/9BIlWb
Sq+vRGXPMHuypKpjF/Sbpuwi44VbzX1e6pLfORUCKxwJTKDUHjhzyHu/LHK6
SHciaDdHwajq9V28Zd17D9VQJKZX56nkD10BHOsA190xJF7Vd+99JC8JXBuS
eo9ZoknpvsCEgno783lnchvZ1SMtqp3oRQgtQJ08itlRQNgLXZIaetfuMZE/
vT2XPlJacijuxdm9jT1epSEsYAyOOyV19eqFWKywMfxgLgbBj7eNNZcqcH8A
YEDC+J0nXHqXClt41YpMiEXlGCXp2PxmMJwgyMJfoBM4UHk+G22ULpBQTCZD
PWbFSHiVEUsCBQew8GqnkdayXFpD5lNkFfZG6plZExQqxwhrUsQ9T7PBDgOG
6S/mmanrFWrxQtclMctpRJ+y3nQRLy9K5B3ueH6AgcWzJvE+Z0Vm9jpO9yrW
xHvx2GxqPSvwkLImKlKQXJ6w16/EHaxiQ8yqvbHYEK79H6FpTB81oFPP1yYe
N2fmxTc+Gnw8FZLkQure7eyGbKyn3HTPc/BCtobRo5hnNYzg4L0RumgGzDr+
tqUrQpQDE7bJ6aL1LKbZldIHQ9ITkCQaoDQ7rABQhkLH6ZyzWS/ZqaLwDE6D
z5VcB+UFqX6g3noBYkHi1bMYEITcCpinhnauY3glJSq/qZxIu+KUROagRPzu
33/pHffFec/NxnYHLH3ih0Cv8K8Ou+oQV7xyVGrjyHtoFDSvZL65JIuny4Yt
5cqskZJwipcNT848usV30bk+K0XMAre/5KDTmmUtdETGi0iZLcfDykaoC1ac
RqkqUPOC6fGmV7a1MMHWTaQvfFfbo3C9+8Zzoe7RLY/TCSfc/SNmRYQ5H5b8
eHVSn2RN2AhlnawzMDrd8EBCOdclrQvnKWansOz202bc+8iR5y3gypzqJUqO
zgx3REF5EUm6VQspNyVuw1dgzknz71/BhqAsi7BXPDRudUumKA12gXehyXNX
B8Z0l4COPvWuEIaAS6LwuxZZcdLLGcYYNji2V2yEl/aL3IOsbQ7Geq/JoNyY
XREqZTByd0c57ms5ETwJFV1ME9Sch8MrHnmha3q4OdHQa3pkv8fsLk8mWrh9
pdXmbSE+Xmych0xzkMxfZRk1xNWGQcJ9yldO01C9V2pNO7XWcFQsBm1C1XTy
XunMcs65sx64dMa8x7Vrw3zBQDr53nS04F1ZqHIDnCyTCaGKbHr5WPWOhEev
oYF2ZUBqupAK/XQuKBEpaMswx0YndQfJVY0AN+mjP1qzdLUd4rTnMfS0a1Ms
QRMDgnTyGr5FoW2m7RAMSbKt/XZzXtUkKsYha6/KgBI+h97FhPIlHTHSQVly
2FX5EIp5aR0itewtlh+wJB+hySG/d0sJ/SeaGC7l85kTRjPI8fUKznnPvwHR
8KHePysC7CTMp6zK8CCfrMtpDUxP3Y0z46XRqzeBeHv0iFJ37GOeWRLPwguj
9MhWd/MtqntY6ReecvmSF79x0lx63Yh4DGN6U6ijM3pLEYbxDJKXSYivkqR5
18ZoqZqnrO9ePUnFRN7VDhDtSvzVPNUGo9hlUTBxSk5699JNyUn1sBgckcJT
LPqsEe4xwXVtd9cQNaFEe7VlR5x7u1414ZukiodtEHSFC03wXKye3ikW64f6
tCU10QMpQ+XxCwsweAEYwA5KSml+QaLj7POve1hvyzl2oRYjpmKzswx675Lg
t7Ovu/OZRSdfvkQ/BwaRGHhGO2DkXV9FWDIeId5FpIMygcGEjBQEeG3Hp5mM
spfljcDsGnWWDsuUjqtigOlC7kUcjX/mPZvmPa+6iUgbOZVUrg3oQZurCtPi
HOSG8DhF99lPV7JV8d6Q5+CsFeIGn9AkhQNEHfmMRd3jpkCjqkhg0mYHC5+S
WiilisOLrq9wcxEepwAeIRugBPEdJ156d2BFUrw0INouQvXMN0+bZ90He0Eu
Lk8hYfrKS2589NoLr39YZ2PRspXsY6REaiIUqtg0hzPVI/LJy5PWeGYb7PqD
7l/+gwe7NgJBqZTlBDNHN5nUHpUtZ3chhKYrqqkJNSiIOC6gsIFZgkFN7DZk
Vhx15yOvtjgKm9zMSjR/QhwIJtLPqI9wTEhLdYFUdajS1d0okdZ8zL4zuoD6
wtc71HrC2WKe1hcd3GM8kA8YYdXkcJPSwyTdzjw9CT+GHdGCF8iCk0AFq+q9
F+lZXi9XyjsmyrABNH5/kWmOI2O8HYah6Jo6m0rv2gxytCcyskWfQRADQdbg
71BjWfuf8LukfEugVV+hFcxq3mNAupg7b3HqJhOTL0uBPdp4wgsl8DtVO9cJ
uHlqbW4Pe8/6eMfs3pNAuGujkypKEVeb9wIlqBgzpAJ67M+qqDP7BK0OHCpL
gTefqi40UZ37eCUrVNGchvQAxQTRxERMlFUFmELX/IcJlXn7kGEiyMRVOTMx
THhUmYgmayJ0/grvbrwxumebCMPImL8Qjq7pSoM+SlReL3uuaCWMVStHf5D5
0lP0DaZ6fr9Tbt6Z79kUva5BROJsZk/qXa3BYUygsOuHEOsn1pvxxKI+5PxQ
bFCVrOGSFAOZ9ZH4LSBV4HhD7SpQefgKLaGsy6FLHnuNhIfS0JQzzKYgBsdN
4VTyFtRL68Yaez4wZihAV0DvkSPOW3jHSZferY/QjHvgPXFa6xNfXr1JrGrp
qQ77UWX7yivJi8lDKSd3MjNvvVT6Da3OQuFlWGBdSiIpuXKENkKVbv10E3dn
4lkw9RQYr/17RehJKygqOtRp2uybDSIy7r/SBEDjEXxPmYxmMRn6zqtxThEL
cx6AhD12zoLFP1pv3033uH/5/e6LNuuLDAKVzKUGdUWNRb+cnDJ7FIzmqrT9
8meWP7bj0TuGubu+LDr5siVQ/dOmvlZsRY3B8J6Sz34cq/jIASdd+NQ2R25H
U1KbvsJ7oFKgfHexanSRFKinnAtAkgQVtyjeSafBMyJVgnb3HHvRnbR+BZ3q
wh/eaVEmguKzcU7H0vRwpogQtngno4CcPtXQr4pk37yHCOvnTx50xnwo+3bq
3CXPwY6f80I9LL2xvFIIniXy7iPTPTw1B4/tBfbRHJiYa1lyyjA9Ig1KeSeU
xlHJO6g2OsasudL+64fIEDodydV+C4avoOfs0y+9lmbC/UN6JOJl/Bl6fiMO
RyF7yshRm+L0Igng9+HQXccF/JC8ZruuWJn6NsZ4aEMV1+Tm9HJ+mqpgAifR
WSz0+OSTT9768uFfLudW594bfvzwoatWrXKLw64X2+sHrPi6ZjexJtpYmUMs
D4fYr8mDgXJWqcaViFY+dXoyz4a9twwxyRKm/E3fvYboKdmG440WAj98Qz+M
9rfk/6uKXSzJ/aU7bxvqqlAbE0vIXtIu5NIZ85ZTqbz0yNBsdrxLGT3WOp9X
2bPBVMkpyyls5okaniUCPNdcdP2yByefvxAqzkEbSU2rKmROpXL3bU6voJpT
FqeYznXd2dMXABre9rnerjcXdMk1TI0ykkYTjDph4CT1qfJVEPbeMFJPMEDV
jamzFj0FMoALIdwfvmranGX2nklhmxWvvr2m395DzejICZP3pcyyZ70mxVko
Mwi+Q9dBjirR4ZWHV9dviInJ+zgEBHkojyubhfHf1GbRuuGd50RiFU6ZMXfG
F8WlxTIMlHsjt+CAMw9w3836MjLj984bXFFBms0+F02kzilwTGYxnf/ufU/d
D8ZGAYSuutA/BR3VGUdaSdpJDvYKUTV4mHMkAhPtTbk1vKFCqk6BXFXHVx8e
xu1eYxp1dukdVaenbgtDwM4OarvQDsBcOynH4g/Ebr089KzCWknfw8fFTKme
cowcaqaRhYprQivAAjABbCRmZLDpJNib2LvBpba5LJZetda4BWhKtTGd5ifr
7bONSuF1ShsH4wQR80un3/K4uJJFI+hlOWb0FqRiFeI2OBZXFXyHfBo4D1KJ
CEB9KOED9xlp6HOmXXvp3/L3F5yhK8pC0Rbas0gHxJkJekosxarbxp8qZasE
r7ziYpvH6MyORtukVrFJnDyqaOstIeiOrtjsoM3K8A44/vfOqINGgbFEGTLh
Qnze3n0JLB5mNpFqkISbLadal7v5s78/7JvDZ50/615VFxrICY+MAi51DlBo
iYyb7lWgREvk4bv4+ItuV0jUm+sNHRYUCicrs81Gq8NfRGjKOpgvVyAKk5UO
jmrErJVELi3wYu6v4GIz7cr534eruqDmvaoz06MbFtnThYCIYTAT1L0WU1TQ
eLLRrxfSwBAfDt75S4JnUeOp11LvTSvPEsWtdsVDQwk1/9C2W7++a379G1KP
kNyByk3yXvkKsrpiV0q98tQzaqhOW2/bg+s9ObYgT0nxoIqbQtSuUH029FP0
6qXjz57LeWAERmcTciorBiicDBtXUTZ5/a2Q8ZQ+J0iLKMXOlyvTFNnYZDIf
yjF1UnclUaACOm+88cbPB505KDAZBer3rbNbxy9btowYRU403k/VVf/4mdCo
kiWTU4ULr4ZGv6zhTF3/WfOslptOPPsKZUmKcAT07DdPvQXiwjAeEVE9XJgc
Urh5ft50f+jC9NndDz4ztFDJvHzG1b+Sp5yPmNzQD9EuPIbSKxrNm6uPiqSp
mwprKm50gFYXEClSDj38am4XKF0ceBh+0zMTQzMbr3pNIlVUbQhq9UBITOp9
NqSHXfCV3Zq8TPnL/qd2VhMfq3E2Mqju57M9wtwHrVspDT8vXdVMU7BO4abM
7FrVyhhsW2zTqG2dXtCMU1TKlhuDolcGQ5UL5nMu3OrS3OblbS+MVkVunfmL
Kd5klD2H9BARa0qz5RTufs6yUawOyjnTr7k5RPHRqBr3qSyB3u8rcxW53Jga
CB3pYowo0XLJkiV/LcwvqOnz5dwzuelTLp9CWAcDE+/AhrvadBjP5QajJeaD
X5ICk+qvhDZ76nqY+tZDzzpaM0G/+wp5at8/+Mz5EL9tdey/Jzd11adbus8J
h4YWPUWX+KwSS1lRHmXylro5eekjlpwCUDQlqlhJE1b7/uRYYgkxfZwHUJw4
/74V8JI7PP6sd109MhEr6JnYk0SvGf5N9UIoCAMsU/Xt2V1DRN1bLZXTFmHa
e/c96TDaaFJ2dpVymsZM9RDfgyJMCQ0NZumNanMEjg4efAN22pr1DZr8UNTu
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\
\>"],ExpressionUUID->"60c6de66-f30a-448e-ac65-334cfd238970"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"repEmpty", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofournull\>\""}], "]"}], "]"}], "\[Rule]", 
       " ", 
       RowBox[{"allGraphs5", "[", 
        RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5FakeAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7209648455882854`*^9, 3.7209648515439177`*^9}, 
   3.7211572903356056`*^9, {3.721228486991238*^9, 
   3.721228498152562*^9}},ExpressionUUID->"f02f7945-0ee5-46d3-b614-\
acf77718ba38"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", "36"}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", "23"}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", "26"}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", "23"}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", "26"}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", "17"}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", "26"}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", "18"}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", "11"}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", "23"}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", "15"}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", "11"}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x2345", "\[Rule]", "2"}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", "23"}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", "15"}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", "17"}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", "15"}], ",", 
   RowBox[{"n15x234", "\[Rule]", "7"}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", "26"}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", "18"}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", "18"}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", "17"}], ",", 
   RowBox[{"n14x235", "\[Rule]", "7"}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", "10"}], ",", 
   RowBox[{"n145x23", "\[Rule]", "7"}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", "26"}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", "17"}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", "18"}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", "18"}], ",", 
   RowBox[{"n13x245", "\[Rule]", "7"}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", "11"}], ",", 
   RowBox[{"n135x24", "\[Rule]", "7"}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", "11"}], ",", 
   RowBox[{"n134x25", "\[Rule]", "7"}], ",", 
   RowBox[{"n1345x2", "\[Rule]", "2"}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", "23"}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", "15"}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", "17"}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", "15"}], ",", 
   RowBox[{"n12x345", "\[Rule]", "7"}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", "10"}], ",", 
   RowBox[{"n125x34", "\[Rule]", "7"}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", "11"}], ",", 
   RowBox[{"n124x35", "\[Rule]", "7"}], ",", 
   RowBox[{"n1245x3", "\[Rule]", "2"}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n123x45", "\[Rule]", "7"}], ",", 
   RowBox[{"n1235x4", "\[Rule]", "2"}], ",", 
   RowBox[{"n1234x5", "\[Rule]", "2"}], ",", 
   RowBox[{"n12345", "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7209648632619085`*^9, 3.7210558399045773`*^9, 
  3.7211572915706673`*^9, 3.721207541738863*^9, 
  3.7212284993256254`*^9},ExpressionUUID->"b749028b-98f4-4ce4-b34d-\
bc3dbb50d63f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", 
        RowBox[{"e", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/.", "repEmpty"}], ")"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"e", ",", 
      RowBox[{"EdgeList", "[", "gr", "]"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.720964810520938*^9, 3.7209648271163607`*^9}, {
  3.7209648687081842`*^9, 3.7209649004062123`*^9}, {3.7209652419653482`*^9, 
  3.720965248079199*^9}, {3.7212285125724545`*^9, 3.7212285177750783`*^9}, {
  3.721228556807517*^9, 
  3.721228566597582*^9}},ExpressionUUID->"bfc5b90d-7426-4c8b-8100-\
ba1e0aa76052"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["17", "23"], ",", 
   FractionBox["17", "23"], ",", 
   FractionBox["17", "23"], ",", 
   FractionBox["17", "23"], ",", 
   FractionBox["17", "23"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7209648123478937`*^9, {3.720964864526767*^9, 3.7209649014351826`*^9}, {
   3.720965243532425*^9, 3.720965248888527*^9}, 3.7210558400534697`*^9, 
   3.7211572967299976`*^9, 3.7212075418065414`*^9, {3.7212285055460396`*^9, 
   3.72122851854955*^9}, {3.7212285585856543`*^9, 
   3.721228567289648*^9}},ExpressionUUID->"0dfd24e4-165b-4dc5-afa0-\
8623694026a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"e", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "/", 
         RowBox[{"e", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/.", "repEmpty"}], ")"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"e", ",", 
       RowBox[{"EdgeList", "[", "gr", "]"}]}], "}"}]}], "]"}], "//", "Sort"}],
   "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.720898034907129*^9, 3.720898062268249*^9}, 
   3.721157334506832*^9, 
   3.721228542968628*^9},ExpressionUUID->"f67f2c8a-0aca-467e-93ef-\
d746daedcd34"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1LtrFFEYxuEXK0tFIRaLrCIqIuLdXNR8ahKNmjVG42XjxnGitkEQC6uv
tUmvIkxlb69yBCVYio0XDAsRRUlh4R/gzuSMcH4fZxgeXt45ZxiYLfn81J01
koreVd5X58+w0rGUa+F18EZ4E9yAm/BWeBu8Hd4J74J3w3vgvdZYvNdbL+N7
74P3wwfgg/Ah21zN6+jD8BG4Hx6AB219NW+ih+Cj8DH4ODxsY32d+x9GF6Mt
tcM6gRzWSeSwTiGHNYJ8xJ48Lud9zEdTO6wx5LBOI4d1BjmsceTj9vnRs0+9
FfOzqR3WOeSwztvAwnL/wnKdw5pADquFHNYF5LAmUxvsk9au5suqA6yLqQ12
OMCaQh92OMC6ZEMvNvTW19iHHQ6wLqMPOxxgTaMP+7S9+jUx//Bj3Yd1JbXB
DgdYV9GHHQ6wrtnSt2piH3Y4wLqOPuxwgNVGH/a2/S6P+3Qp9mHNpDbY4TBj
5d+mr/M99m+kNtjhAKsT//91H3Y4wJpFf9Za1XHrPhxg3UxtsMMBVpa6CRuc
ZfautfK2tVI/Hy7gAHdh3bIH+Y7e+hH3hw3OYIcLOMBdWDn2hy23u9XU+8MO
F3CAu7lVn7vxM+4/l7oJG5zBPmfl1/n7PLqAA9yFdfu//wFKm9Fs
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 160.}, {0, 0.7391304347826086}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7208980356826506`*^9, 3.720898063228505*^9}, 
   3.7209532598845243`*^9, 3.7209535759815564`*^9, 3.721055840513694*^9, {
   3.7211573296291456`*^9, 3.7211573353148417`*^9}, 3.721207541927864*^9, 
   3.72122854364219*^9},ExpressionUUID->"2c4a5118-85d2-4881-afed-\
7efef8660286"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rep5Bis", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}], 
       "\[Rule]", " ", 
       RowBox[{"allGraphs5", "[", 
        RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5NullAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.72089916087191*^9, 3.7208991790002384`*^9}, {
  3.7211573633213773`*^9, 
  3.721157365013023*^9}},ExpressionUUID->"e0a867ce-115f-48d0-a19b-\
9930d64bbbe2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", "36"}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", "13"}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", "13"}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", "5"}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", "4"}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", "2"}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", "4"}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", "13"}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", "5"}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", "4"}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", "5"}], ",", 
   RowBox[{"n1x2345", "\[Rule]", "2"}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", "13"}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", "5"}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", "4"}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", "5"}], ",", 
   RowBox[{"n15x234", "\[Rule]", "2"}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", "2"}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", "2"}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", "4"}], ",", 
   RowBox[{"n14x235", "\[Rule]", "1"}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", "5"}], ",", 
   RowBox[{"n145x23", "\[Rule]", "2"}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", "4"}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", "2"}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", "2"}], ",", 
   RowBox[{"n13x245", "\[Rule]", "1"}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", "4"}], ",", 
   RowBox[{"n135x24", "\[Rule]", "1"}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", "4"}], ",", 
   RowBox[{"n134x25", "\[Rule]", "1"}], ",", 
   RowBox[{"n1345x2", "\[Rule]", "2"}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", "13"}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", "5"}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", "4"}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", "5"}], ",", 
   RowBox[{"n12x345", "\[Rule]", "2"}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", "5"}], ",", 
   RowBox[{"n125x34", "\[Rule]", "2"}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", "4"}], ",", 
   RowBox[{"n124x35", "\[Rule]", "1"}], ",", 
   RowBox[{"n1245x3", "\[Rule]", "2"}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", "5"}], ",", 
   RowBox[{"n123x45", "\[Rule]", "2"}], ",", 
   RowBox[{"n1235x4", "\[Rule]", "2"}], ",", 
   RowBox[{"n1234x5", "\[Rule]", "2"}], ",", 
   RowBox[{"n12345", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7208991809171095`*^9, 3.7209532602801456`*^9, 
  3.720953576349124*^9, 3.721055840709213*^9, 3.7211573658382745`*^9, 
  3.721207542055707*^9, 
  3.7212285732129116`*^9},ExpressionUUID->"6c061181-6f22-4b11-ac06-\
1edd19983457"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Fold", "[", 
    RowBox[{"And", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ">=", 
           RowBox[{"e", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/.", "rep5Bis"}], ")"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"e", ",", 
         RowBox[{"EdgeList", "[", "gr", "]"}]}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.720899196846371*^9, 3.7208992230467253`*^9}, {
  3.720899258245349*^9, 3.720899259475852*^9}, {3.7211573851924653`*^9, 
  3.721157396279318*^9}},ExpressionUUID->"03a75bce-b4ed-4b98-a8d0-\
35c872ee4661"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7208991982522073`*^9, 3.7208992252606688`*^9}, 
   3.7208992606711435`*^9, 3.7209532603744097`*^9, 3.7209535764483995`*^9, 
   3.7210558419705825`*^9, {3.721157372656931*^9, 3.721157397447324*^9}, 
   3.721207542094308*^9, 
   3.721228616278861*^9},ExpressionUUID->"78b0e1b2-d29b-4548-bb46-\
fb42dfdf56e7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{"Fold", "[", "\[IndentingNewLine]", 
    RowBox[{"And", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"allGraphs5", "[", 
          RowBox[{"k", ",", "\"\<colofour\>\""}], "]"}], "\[GreaterEqual]", 
         " ", 
         RowBox[{"allGraphs5", "[", 
          RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "allGraphs5FakeAtomKeys"}], "}"}]}], "]"}], "//", 
      "Flatten"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720899265345046*^9, 3.720899324235589*^9}, {
  3.721157425528905*^9, 3.72115744966778*^9}, {3.7212286027255793`*^9, 
  3.7212286094126935`*^9}},ExpressionUUID->"e3efae56-24f4-45ed-aa2e-\
7ac57bb702b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zero", "=", 
  RowBox[{"{", 
   RowBox[{
   "alfa1Key", ",", "beta1Key", ",", "gamma1Key", ",", "delta1Key", ",", 
    "epsilon1Key", ",", "K5Key"}], "}"}]}]], "Input",ExpressionUUID->\
"ad94b81d-86df-405e-91d0-b9a576e957d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "36166", ",", "31738", ",", "29608", ",", "36112", ",", "31714", ",", 
   "29524"}], "}"}]], "Output",
 CellChangeTimes->{3.720899376988055*^9, 3.7209532605228148`*^9, 
  3.7209535766294084`*^9, 3.7210558423841825`*^9, 
  3.7212075421720133`*^9},ExpressionUUID->"3d7231f5-9ff1-4b1c-9001-\
fc174b94b46e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq3", "=", 
  RowBox[{"Fold", "[", "\[IndentingNewLine]", 
   RowBox[{"And", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofour\>\""}], "]"}], "\[Equal]", "0"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "Zero"}], "}"}]}], "]"}], "//", "Flatten"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7208993782776265`*^9, 
  3.72089940510211*^9}},ExpressionUUID->"e6d27964-c4c7-42bc-9af3-\
f24c69f66360"],

Cell[BoxData[
 RowBox[{
  RowBox[{"v13x24x5", "\[Equal]", "0"}], "&&", 
  RowBox[{"v14x25x3", "\[Equal]", "0"}], "&&", 
  RowBox[{"v1x24x35", "\[Equal]", "0"}], "&&", 
  RowBox[{"v13x25x4", "\[Equal]", "0"}], "&&", 
  RowBox[{"v14x2x35", "\[Equal]", "0"}], "&&", 
  RowBox[{"v1x2x3x4x5", "\[Equal]", "0"}]}]], "Output",
 CellChangeTimes->{{3.7208993953034143`*^9, 3.720899406432922*^9}, 
   3.720953260616073*^9, 3.7209535767046165`*^9, 3.721055842441334*^9, 
   3.7211574639742994`*^9, 3.7212075422191525`*^9, 
   3.7212286392640696`*^9},ExpressionUUID->"ebff3bc3-9926-4616-b5da-\
f0229aef03a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "long", "]"}]], "Input",
 CellChangeTimes->{{3.721158402166585*^9, 
  3.721158405737449*^9}},ExpressionUUID->"f3dc6e61-f460-44a2-b26c-\
a0400856e7b9"],

Cell[BoxData["1895"], "Output",
 CellChangeTimes->{3.7211584066673665`*^9, 
  3.721207746794382*^9},ExpressionUUID->"87cedfcc-231b-42db-a0c3-\
f681e634051d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"allGraphs5", "[", 
            RowBox[{"child", ",", "\"\<atleast\>\""}], "]"}], "/", 
           RowBox[{"allGraphs5", "[", 
            RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"child", ",", 
            RowBox[{"Rest", "[", "children", "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"children", ",", 
          RowBox[{"allGraphs5", "[", 
           RowBox[{"k", ",", "\"\<children\>\""}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Keys", "[", "allGraphs5", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "//", "Flatten"}], "//", "Sort"}], "//", 
  "ListPlot"}]], "Input",
 CellChangeTimes->{{3.7212289179341555`*^9, 3.7212289539848814`*^9}, {
  3.7212292765870905`*^9, 
  3.721229419942458*^9}},ExpressionUUID->"179a623c-7dc3-4903-85a8-\
c7b7e710d61e"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,692,134,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 
   3.721229420550125*^9}},ExpressionUUID->"97a11d11-7935-43b1-bdfe-\
be10aaf63296"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,692,135,27549250405993487452,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 
   3.721229420629835*^9}},ExpressionUUID->"aafe47f0-f4dc-4f9d-bac4-\
adfc2234a539"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,692,136,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 
   3.7212294207170672`*^9}},ExpressionUUID->"f4819f22-3dcc-4ef6-ab9d-\
73195184eb8c"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,692,137,27549250405993487452,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 
   3.721229420811319*^9}},ExpressionUUID->"bea44dab-deb3-4b19-bb3a-\
e17765920290"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,692,138,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 
   3.7212294209050665`*^9}},ExpressionUUID->"2e21a30d-4195-4de2-a616-\
f64b26a0dd02"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,692,139,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 
   3.721229421001824*^9}},ExpressionUUID->"f953947c-4b42-4f8e-a0a6-\
d8b7e0a43509"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,692,140,27549250405993487452,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 
   3.721229421076021*^9}},ExpressionUUID->"d1ed71fe-6b26-4220-b363-\
16bc74abdbb4"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,692,141,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 
   3.7212294211537294`*^9}},ExpressionUUID->"9810336d-677f-4b59-954d-\
d251a8153973"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxc3XF01fP/OPArySSZTCaTyWQymUwmkyuTSTKZTCaTyWQymUySK5NJMkkm
yZXJZDJJJpMryWQySSaTSTJJJsmkT37fz0e/P/Z4ntc57/M4z/M8z3vOe8/z
PPee+747bvStw2/oEAgELusVCPz3+m+0nhtoH8H2jMLROAbH4jgcj3vhBNwb
J+I+OAn3xcn4NNwPn45T8Bm4Pz4Tp+Kz8AB8Nk7D5+CB+FwcbO8QDpxHHgcG
kceB88njQDp5HLiAPA4MJo8DF5LHgQzyOHAReRwYQh4HLiaPA0PJ48Al5HFg
GHkcuJQ8DmS2dxCHcAQHLqMeh3AEB4ZTj0M4ggOXU49DOIIDWdTjEI7gwBXU
4xCO4MAI6nEIR3DgSupxCEdwIJt6HMIRHLiKehzCERwYST0O4QgOXE09DuEI
DuRQj0M4ggPXUI9DOIIDo6jHIRzBgWupxyEcwYHc9o7HQZyLQziMI7gZB66j
Pw7iXBzCYRzBzTgwmv44iHNxCIdxBDfjwPX0x0Gci0M4jCO4GQfy6I+DOBeH
cBhHcDMO3EB/HMS5OITDOIKbcWAM/XEQ5+IQDuMIbsaBG+mPgzgXh3AYR3Az
DuTTHwdxLg7hMI7gZhy4if44iHNxCIdxBDfjwFj64yDOxSEcxhHcjAM30x8H
cS4O4TCO4GYcKKA/DuJcHMJhHMHNOHAL/XEQ5+IQDuMIbsaBcfTHQZyLQziM
I7gZB26lPw7iXBzCYRzBzThQ2N7ROB4n4yDOxLm4EIdwGQ7jahzBDbgZt+LA
be0djeNxMg7iTJyLC3EIl+EwrsYR3ICbcSsOjG/vaByPk3EQZ+JcXIhDuAyH
cTWO4AbcjFtx4Pb2jsbxOBkHcSbOxYU4hMtwGFfjCG7AzbgVB4raOxrH42Qc
xJk4FxfiEC7DYVyNI7gBN+NWHLijvaNxPE7GQZyJc3EhDuEyHMbVOIIbcDNu
xYEJ7R2N43EyDuJMnIsLcQiX4TCuxhHcgJtxKw7c2d7ROB4n4yDOxLm4EIdw
GQ7jahzBDbgZt+JAcXtH43icjIM4E+fiQhzCZTiMq3EEN+Bm3IoDd7V3NI7H
yTiIM3EuLsQhXIbDuBpHcANuxq04MLG9o3E8TsZBnIlzcSEO4TIcxtU4ghtw
M27FgbvbOxrH42QcxJk4FxfiEC7DYVyNI7gBN+NWHJjU3tE4HifjIM7EubgQ
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
lY7bjY7bnY7bg47bk44bTcftRcftTcftQ8ftS8ftR8ftT8cdQMeNoY/57/4/
cagfOLUHcAfRcQfTcYfQcYfScYfRcYfTcUfQcUfScUfR/+dJQ/3oqT2AO4aO
O5aOO46OO56OO4GOO5GOO4mOO5mOO4WOO5WOO42OO52OO4OOO5OOO4uOO5uO
O4eOO5eOO4+OO5+Ou4COu5COu4iOu5iOu4SOu5SOG6TjLqPjLqfjrqDjrqTj
rqLjrqbjrqHjrqXjrqPjrqfjbqDjbqTjbqLjbqbjbqHjbqXjxtJxt9Fxt9Nx
d9Bxd9Jxd9Fxd9Nx99Bx99Jx99Fx99NxD9BxD9JxD9FxD9Nxj9Bx4+i48XTc
BDruUTruMTrucTruCTpuIh33JB33FB33NB33DB33LB33HB33PB03iY57gY57
kY57iY57mY57hY57lY57jY57nY57g457k457i457m457h457l457j44nf/BT
d9w0dNy0dNx0dNz0dNwMdNyMdNxMdNzMdNwsdNysdNxsdNzsdNwcdNycdNxc
dNzcdNw8dNy8dNx8dNz8dNwCdNyCdNwwOm4hOm5hOm4ROm5ROm4xOm5xOm4J
Om5JOm4pOm5pOm4ZOm5ZOm44HbccHbc8HbcCHbci/f/8b9W5/Bo=
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{969., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 8785.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.721229288274704*^9, 3.721229307471426*^9}, {
  3.7212293425189486`*^9, 
  3.721229421604927*^9}},ExpressionUUID->"84eface3-c9d9-448a-8e78-\
7e98d567df1d"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1520, 781},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 180, 3, 70, "Section", "ExpressionUUID" -> \
"bcd74ef6-5dae-460a-87a7-96efdedb7e1d"],
Cell[763, 27, 236, 6, 30, "Input", "ExpressionUUID" -> \
"5e1684e0-305d-423c-a158-76c07af13ffd"],
Cell[CellGroupData[{
Cell[1024, 37, 467, 12, 30, "Input", "ExpressionUUID" -> \
"934e3838-e825-4582-9df9-28099cc4f05b"],
Cell[1494, 51, 4999, 131, 30, "Output", "ExpressionUUID" -> \
"0ca11c72-5a42-4b52-ad88-472b6419a65d"]
}, Open  ]],
Cell[6508, 185, 392, 11, 30, "Input", "ExpressionUUID" -> \
"ad4d8832-88dc-4516-8312-50e714c20caf"],
Cell[CellGroupData[{
Cell[6925, 200, 1829, 44, 69, "Input", "ExpressionUUID" -> \
"25595298-69d2-44a1-a7c0-df65a477b9f6"],
Cell[8757, 246, 368160, 8276, 107, "Output", "ExpressionUUID" -> \
"e943e971-37a3-423b-8b15-1686026bafa4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[376954, 8527, 914, 25, 30, "Input", "ExpressionUUID" -> \
"8e25d486-5968-4806-8195-40a41776c29c"],
Cell[377871, 8554, 79733, 2140, 88, "Output", "ExpressionUUID" -> \
"90245f75-0f0e-4623-a901-409690082e90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[457641, 10699, 780, 16, 30, "Input", "ExpressionUUID" -> \
"cdcf99dc-619f-4fe7-94c1-c27e47b98e82"],
Cell[458424, 10717, 748250, 14667, 1134, 493161, 10486, "CachedBoxData", \
"BoxData", "Output", "ExpressionUUID" -> \
"60c6de66-f30a-448e-ac65-334cfd238970"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1206711, 25389, 900, 24, 30, "Input", "ExpressionUUID" -> \
"f02f7945-0ee5-46d3-b614-acf77718ba38"],
Cell[1207614, 25415, 2729, 58, 88, "Output", "ExpressionUUID" -> \
"b749028b-98f4-4ce4-b34d-bc3dbb50d63f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210380, 25478, 787, 21, 30, "Input", "ExpressionUUID" -> \
"bfc5b90d-7426-4c8b-8100-ba1e0aa76052"],
Cell[1211170, 25501, 5416, 156, 188, "Output", "ExpressionUUID" -> \
"0dfd24e4-165b-4dc5-afa0-8623694026a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1216623, 25662, 675, 21, 30, "Input", "ExpressionUUID" -> \
"f67f2c8a-0aca-467e-93ef-d746daedcd34"],
Cell[1217301, 25685, 2120, 49, 243, "Output", "ExpressionUUID" -> \
"2c4a5118-85d2-4881-afed-7efef8660286"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1219458, 25739, 876, 24, 30, "Input", "ExpressionUUID" -> \
"e0a867ce-115f-48d0-a19b-9930d64bbbe2"],
Cell[1220337, 25765, 2751, 59, 88, "Output", "ExpressionUUID" -> \
"6c061181-6f22-4b11-ac06-1edd19983457"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1223125, 25829, 820, 23, 30, "Input", "ExpressionUUID" -> \
"03a75bce-b4ed-4b98-a8d0-35c872ee4661"],
Cell[1223948, 25854, 360, 6, 30, "Output", "ExpressionUUID" -> \
"78b0e1b2-d29b-4548-bb46-fb42dfdf56e7"]
}, Open  ]],
Cell[1224323, 25863, 874, 21, 107, "Input", "ExpressionUUID" -> \
"e3efae56-24f4-45ed-aa2e-7ac57bb702b1"],
Cell[CellGroupData[{
Cell[1225222, 25888, 249, 6, 30, "Input", "ExpressionUUID" -> \
"ad94b81d-86df-405e-91d0-b9a576e957d1"],
Cell[1225474, 25896, 345, 8, 30, "Output", "ExpressionUUID" -> \
"3d7231f5-9ff1-4b1c-9001-fc174b94b46e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1225856, 25909, 639, 16, 126, "Input", "ExpressionUUID" -> \
"e6d27964-c4c7-42bc-9af3-f24c69f66360"],
Cell[1226498, 25927, 596, 12, 30, "Output", "ExpressionUUID" -> \
"ebff3bc3-9926-4616-b5da-f0229aef03a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227131, 25944, 188, 4, 30, "Input", "ExpressionUUID" -> \
"f3dc6e61-f460-44a2-b26c-a0400856e7b9"],
Cell[1227322, 25950, 157, 3, 30, "Output", "ExpressionUUID" -> \
"87cedfcc-231b-42db-a0c3-f681e634051d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227516, 25958, 1328, 33, 202, "Input", "ExpressionUUID" -> \
"179a623c-7dc3-4903-85a8-c7b7e710d61e"],
Cell[1228847, 25993, 369, 9, 47, "Message", "ExpressionUUID" -> \
"97a11d11-7935-43b1-bdfe-be10aaf63296"],
Cell[1229219, 26004, 404, 10, 21, "Message", "ExpressionUUID" -> \
"aafe47f0-f4dc-4f9d-bac4-adfc2234a539"],
Cell[1229626, 26016, 371, 9, 47, "Message", "ExpressionUUID" -> \
"f4819f22-3dcc-4ef6-ab9d-73195184eb8c"],
Cell[1230000, 26027, 404, 10, 21, "Message", "ExpressionUUID" -> \
"bea44dab-deb3-4b19-bb3a-e17765920290"],
Cell[1230407, 26039, 371, 9, 47, "Message", "ExpressionUUID" -> \
"2e21a30d-4195-4de2-a616-f64b26a0dd02"],
Cell[1230781, 26050, 449, 10, 21, "Message", "ExpressionUUID" -> \
"f953947c-4b42-4f8e-a0a6-d8b7e0a43509"],
Cell[1231233, 26062, 404, 10, 21, "Message", "ExpressionUUID" -> \
"d1ed71fe-6b26-4220-b363-16bc74abdbb4"],
Cell[1231640, 26074, 455, 10, 21, "Message", "ExpressionUUID" -> \
"9810336d-677f-4b59-954d-d251a8153973"],
Cell[1232098, 26086, 22754, 389, 651, "Output", "ExpressionUUID" -> \
"84eface3-c9d9-448a-8e78-7e98d567df1d"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

