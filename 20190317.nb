(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    947467,      18876]
NotebookOptionsPosition[    947043,      18856]
NotebookOutlinePosition[    947384,      18871]
CellTagsIndexPosition[    947341,      18868]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"SetsToSymbol", ",", 
   RowBox[{"FindFiner", "[", 
    RowBox[{"SymbolToSets", "[", "v12x34x5x6", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7616659965937185`*^9, 3.7616660569617*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"v1x2x34x5x6", ",", "v12x3x4x5x6"}], "}"}]], "Output",
 CellChangeTimes->{{3.761666007541214*^9, 3.761666057479786*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HandleGraph", "[", 
  RowBox[{"JacobsThalGraph", "[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7616659622734823`*^9, 3.761665965977538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v12x34x5x6, $CellContext`v12x3x4x5x6, \
$CellContext`v16x25x34, $CellContext`v16x25x3x4, $CellContext`v16x2x34x5, \
$CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, $CellContext`v1x25x3x4x6, \
$CellContext`v1x2x34x5x6, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {4, 3}, {5, 
              3}, {6, 4}, {6, 5}, {7, 3}, {8, 4}, {8, 7}, {9, 1}, {9, 5}, {9, 
              7}, {10, 2}, {10, 6}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v12x3x4x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v12x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v12x3x4x5x6, \
$CellContext`v12x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v12x3x4x5x6 -> Rotate[
                  Row[{"12", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v12x34x5x6 -> Rotate[
                  Framed[
                   Row[{"12", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v12x3x4x5x6 -> 
                RGBColor[0, 0, 1], $CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v12x34x5x6 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 3.}, {2., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 3.}, {3., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 3.}, {1., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[0, 0, 1], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"12\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"12\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 0.030239520958083826`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 3.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400,
         ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1fQuc1VW1/2nOnHk/QXFUHiMgD0EZQHFEFBChEURH8DGKEuULlJAUC9RC
U5pCDcmMFLujXpNbYQNGjhKJ4bVJTTH0il4qTOpPdBWuaZHVvb//fPfa399v
nzNr7zl07/Xj4cz5nd9Za/3Wa6+99tprz/zkkvlXfvqTSxZc/sn6j1//ycXz
F1x+Q/20667vupT+WCr1sXu6XjfWp/B3lErxn6jr/2g1/sGVf/zv181buu+e
PXvMX3g9LV/tMG+ZKdu2bHmlZfToXQsGD35t9siRF2987DHe8gvzVnz8jh07
frOsf//oQ0NZKvooldq/srb2nI6NG1NPubemH102Z060Q25LFZh/0/gZMJg7
OrJu75zb2Bjtt7en5d+35g4ZUrt//35zx5NZt9+5csmSaFsO9D2p1OYFU6e6
0F81byXl0Ycffmrft771woJx48zPQFhnKvXWoiFDPrPjq1+1pG83b+XnRBs3
rotaWqZEW7YAP5A9ueyss+5dsXAh+HdFtHbtN6IFC8ZEL79Mul42b4W4hK+e
iGbOXB0tWlRgLpcCPz6S87XR/v3ro9mzcdtN0YoVfaJ9+1KbBNJLVlDRnj23
RsuX45ZUgfm36Jjo178miMaosxNXAVqwFIFuXMIL0D8RPfRQUfTRR08I4BcF
MKjnXRZw8XXRPffEWtH1wmd8AyQpgZ4GpIejuXOd36Xx+bRo2zZzxwYXTdER
0e9//0B05ZXfj847jwThsdMC7cHo8stx2WCWa0V8JLzao+bmpVFrKx5vowB+
Qe4CHWRMWzRvHt7x5AKkEHwjECApFOUG9zdFM2Z8Lzr/fHwF2aYs4J+JcruA
If4h0Vtv3RktWYLrlsSMy2K8jODsI0E6EKYBbRlk/iZjvy/oOnV0FC6eOGWp
BjgXXVPU0WG/KwIz8RdQPL132rT9jbW1+LtdsPxUIKhYihJOQoJfipYtuzda
uPCL0ec/D4zFwsl/bT711BfbTzqJ7LLkPx8AbH5ZYBhWSB0yVtRFqyBNT9ra
9d+kSZNcLn2h/bbblra2ttbv3r079T1B868BNGUCysWQyojtrpk/fz7+2t7Q
9d/27dvJoV1LBw/e21xXB1SdjY2Nw3bu3Jn6rqB6LoCq3IsqvWrx4sUdTU1N
eLdGUtTU0dHxQU1FBQV2x7qbb8aTWUzbApgq/JgaOzs799Z1/bd3716LqQIP
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
cmq0eXOtYmZaqYPNVeam2riaW9t9bEsaL6mcPDEJLLb9fdJpsU3tHVbTcqBj
nW0dwWahbIyi8dHTibYkMVqcnEME4Oct0e23WwTQC9dsJulcLPHIPcpkvhZ9
+tMmcq5KTN4dtzRu2qPl3cSSumpf2X1sggQCtR/SbrIIzfvff6++ioT++KOm
M5wGCbkAtUqhoTpb7XrKadG2bXuivn2J4JVo9GgYf2W28pslDQ9PnbqrV6NR
owiJZSqVyqij9dIal8hZm3dZMJx6m36OpX7+Sf/+dO8PD777/BOt42HYlIy7
I5K/pTLADlJaTeAQnYuWKtNlqOsSNvsQjbutkQ0Pcgcpz2HptlgDEeoHUUVF
rpHakTa365jGVJu28y2BlnX3/FD1AF9tN0RkDdbesveKd7bM68cH5jCacqKx
3PaOGms9vY3FsM3uMOyfQuD29yid5hNzycLJV7rDioezToYQThh2r6pFUWJf
DLTgxLWiRslIdSswZWa0JFv9zUpcoBRRzvMoZFbmuSWdE/b9qrGPdtJQTjhn
Jp11Cn8H6/y1rj7eA9U1dsMROIdTxUdgZbKNxPTb8jDYmaPgsBUnkk/H56U5
cRUNguOCxuBTE5/tXbfKmTGxtVWA0SK2rEWlZ+5fN3nff9X1IcFZx1YVZI8z
PNpIY/ggneESkWatE/04OuOMf4uOO44Ys86tKtDHodN1xtu2cuQcxPnzaOxY
TXEKEpNhKJFssc/mvRwW4F25KcweJYz1l/t5LpKscnmOE2nu/HD5Ei2Rm9v3
Tts54OmkbWvgc9dLEDDgkYUrRe7SCrMiuOZhsTjYrEUOHGLnHKxW5KoMpxiA
rNXpiwWV55ayuTv23LNPnKyeylzJWxZ1OxLi3d0/TyZVGRBLScZQNcYeozP2
CJ2xiGbhHpxJOwdxDk8pzzFfonalLlfx+LkLdSZusNocmwhemsuQGLokdw4G
kro3elS5KcSqu7Y48+FRxzxkz7w0f1Cvs1K4Xqyt6TFNRxTxsIqX56wuW4Cb
uwTHeCqdjHK5xGaxTubmaTdCdv1h/NuAJor5lPoKk5kgNuC07WqefudH+/mF
b4wYCmBJEpDHlI7X+dW3u96xOo7hEp28utPrzCTCgai4fBDYfyUGrx76h2/A
8qTHk1YF6GlgGio9SMcDWIAV/bPHjuxigWwImiObptwXMK1J3UfemA3adlpP
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\
\>"]],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"1", "\[UndirectedEdge]", "2"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 2}, {6, 
                    3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {1, 2}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{4., 1.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081631`, 
                    150.00000000000006`}, {-81.99999999999997, 
                    73.12244897959229}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[1, 2]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000003`}, {-81.9999999999999, 
                    73.12244897959197}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{3, 4, 5, 6, 1}, {
                   Null, {{4, 1}, {3, 2}, {3, 1}, {4, 3}, {4, 2}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.}, {-81.99999999999982, 73.12244897959202}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v13x25x4x6, $CellContext`v13x2x4x5x6, \
$CellContext`v16x25x34, $CellContext`v16x25x3x4, $CellContext`v16x2x34x5, \
$CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, $CellContext`v1x25x3x4x6, \
$CellContext`v1x2x34x5x6, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {4, 3}, {5, 
              3}, {6, 4}, {6, 5}, {7, 3}, {8, 1}, {8, 4}, {8, 7}, {9, 5}, {9, 
              7}, {10, 2}, {10, 6}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v13x25x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v13x2x4x5x6, \
$CellContext`v13x25x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v13x2x4x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v13x2x4x5x6 -> Rotate[
                  Row[{"13", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v13x25x4x6 -> Rotate[
                  Framed[
                   Row[{"13", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v13x25x4x6 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v13x2x4x5x6 -> 
                RGBColor[0, 0, 1], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {2., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {3., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[0, 0, 1], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"13\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 0.030239520958083826`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 3.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400,
         ImageCache->GraphicsData["CompressedBitmap", "\<\
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
CFdTqY9TO/l8TjT90zz0D1ToH6jTP8RDf4SJD9Xp11qleOj/lId+TfcG6PQP
89B/kk7/cJ1+7bSvh/7pHvr7K/RHtC8f4aF/gk7/SJ1+zTt46D/FQ782Ex+l
0z/KQ3/EHXhVOv2aTXvon+GhX5v+KnT6qz30n6DTf4xOvzaNeeif6aE/+ghg
F/qP9dBfq9M/Wqdfi2A89J/qoV9LAPXV6T/OQ/8Ynf7jdfq1xIOH/lke+rW8
YB+d/jEe+iMuZKvR6dcyex76Z3vo17L1EQ3Haz30H6vTP1anX0uhe+g/zUO/
tjPXS6f/BA/91Tr943T6ta0aD/1zPPRrG/8RbbrHe+iPuJXsRJ1+bXPWQ/+n
PfRrJTE9dPoneOiPuLWrTqdfqy7x0D/XQ79Wy1iu03+Sh/5hOv0Tdfq1Cj8P
/ad76NdqziNacZ/soX+ITv8knX6tbNZD/xke+ksV+kt1+id76I+43GmKTr92
z6WH/gYP/SUK/SU6/VM99A/S6a/X6dduTvXQf6aH/mKF/ogG29M89A/Q6f+U
Tr92366H/rM89Bcp9Bfp9E/30H+UTv8pOv3a1cwe+ud56C9U6C/U6Z/hoT/i
2peZOv3ald0e+s/20F+g0B/RJftUD/19dPpn6fQXHBn953joTyr0J3X6Z3vo
76XTf5pOf/LI6D/XQ3++Qn9EL+k5Hvp76PR/Wqc//8joP89Df55Cf0Qzprke
+iNuejhdpz/vyOhv9NCfq9Af0bPnDA/9JTr9DTr9uUdG//ke+hMK/RFNoc/0
0F+k03+WTn/iyOi/wEN/XKE/rtM/z0N/RC/9s3X640dG/3wP/TkK/RHnsM7x
0B/Rrv1cnf6cI6P/QvNeaVQaOI32oGsL5/M8dOfqdIvFdWn+g3ddorvS/NyM
GfsMzQvMe8UazaD3uX0zZoDeTFrFVCI7fAzct28ffkaeCBLC8zMJx99A6XJa
JoHc6du373yztrbxveHDl7w9evS88x9+eKulvtCl/otf3v6lNxtra99bMnz4
nnlVVT/amqrAFgUrdKm+Y+e11/Lxt+eNHv3MVilHBbUXphP56M5zznEfPX9r
J5Gi+Tynfdzu3bt/PXjwqs53DtutqY8P9uix9vStW9sssWaXYPHG3Rt/vWrw
4OCwPBR8HIv999qysuVt69fbx0DkVbu//vXMxw6u7dFjRdu6dQsF4+LdGzd+
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\
\>"]],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"1", "\[UndirectedEdge]", "3"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {1, 4}, {2, 4}, {5, 1}, {6, 2}, {6, 
                    3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {1, 3}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{4., 1.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    149.99999999999997`}, {-81.99999999999997, 
                    73.12244897959167}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[1, 3]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000006`}, {-82.00000000000001, 
                    73.12244897959185}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{2, 4, 5, 6, 1}, {
                   Null, {{1, 2}, {4, 1}, {3, 2}, {4, 3}, {4, 2}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081645`, 
                    150.}, {-81.99999999999999, 73.12244897959194}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v14x25x3x6, $CellContext`v14x2x3x5x6, \
$CellContext`v16x25x34, $CellContext`v16x25x3x4, $CellContext`v16x2x34x5, \
$CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, $CellContext`v1x25x3x4x6, \
$CellContext`v1x2x34x5x6, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {4, 3}, {5, 
              3}, {6, 4}, {6, 5}, {7, 3}, {8, 1}, {8, 4}, {8, 7}, {9, 5}, {9, 
              7}, {10, 2}, {10, 6}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v14x2x3x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v14x25x3x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v14x2x3x5x6, \
$CellContext`v14x25x3x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v14x2x3x5x6 -> Rotate[
                  Row[{"14", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v14x25x3x6 -> Rotate[
                  Framed[
                   Row[{"14", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v14x2x3x5x6 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v14x25x3x6 -> 
                RGBColor[0, 0, 1]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {2., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {3., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[0, 0, 1], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"14\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 0.030239520958083826`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 3.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400,
         ImageCache->GraphicsData["CompressedBitmap", "\<\
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
gkGhq3G/72HoEvu3/wdzpEcn\
\>"]],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"1", "\[UndirectedEdge]", "4"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {2, 4}, {5, 1}, {6, 2}, {6, 
                    3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {1, 4}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{4., 1.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081631`, 
                    150.00000000000006`}, {-82.00000000000004, 
                    73.12244897959188}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[1, 4]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081622`, 
                    149.9999999999999}, {-81.99999999999993, 
                    73.1224489795918}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{2, 3, 5, 6, 1}, {
                   Null, {{2, 1}, {4, 1}, {4, 2}, {3, 2}, {4, 3}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.}, {-81.99999999999996, 73.12244897959188}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v15x2x34x6, $CellContext`v15x2x3x4x6, \
$CellContext`v16x25x34, $CellContext`v16x25x3x4, $CellContext`v16x2x34x5, \
$CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, $CellContext`v1x25x3x4x6, \
$CellContext`v1x2x34x5x6, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {4, 3}, {5, 
              3}, {6, 4}, {6, 5}, {7, 3}, {8, 4}, {8, 7}, {9, 1}, {9, 5}, {9, 
              7}, {10, 2}, {10, 6}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v15x2x3x4x6, \
$CellContext`v15x2x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v15x2x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v15x2x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v15x2x34x6 -> Rotate[
                  Framed[
                   Row[{"15", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] 
                  Pi], $CellContext`v15x2x3x4x6 -> Rotate[
                  Row[{"15", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v15x2x3x4x6 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v15x2x34x6 -> 
                RGBColor[0, 0, 1]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 3.}, {2., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 3.}, {3., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 3.}, {1., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[0, 0, 1], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"15\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 0.030239520958083826`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 3.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400,
         ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy1fQuc1VW1/2nOnHnPMAOKo7xGQB6CMoCPEUFAhEYQGMHHKEoUPkCJSLFA
LTSkKXygmZFiF/Wa3AoDjBwlEqNrk6Zi5BWNDBPvJbrKXNMiq3t///nutb+/
3z5n1t5z6H+vHw9nzu/8zlprr/dv77XXnv7JpQuu/PQnly6c/8m6j1/3ySUL
Fs6/vm7KZ67ruJT+WCr1sbs7XjfUpfB3lErxn6jj/+ge/IMr//jfr5q3dO/9
+/ebv/B6Wr7abd4yk3Zu3/5y88iRexcOHPir2cOHX7Llscd4yy/NW/FJu3fv
/t3yvn2jDw1lqeijVOrQ6pqaGa1btqSecm9NP7p8zpxot9yWKjD/pvEzYDB3
tGbd3ja3oSE6ZG9Py79vzB00qObQoUPmjiezbr999dKl0c4c6PtTqW0LJ092
ob9i3krKow8//NTBb33r+YWnnWZ+BsLaUqk3Fg8a9Nndd91lSd9l3spnRFu2
bIiamydF27cDP5A9ufzcc+9dtWgR+HdFtG7dN6KFC0dFL71Eul4yb4W4hK+e
iKZPvydavLjAXC4Ffnwk52uiQ4c2RrNn47Ybo1WrekYHD6a2CqRfWEFF+/ff
Eq1YgVtSBebfouOj3/6WIBqitjZcBWjBUgS6cQkvQP9E9NBDRdFHHz0hgF8Q
wKCed1nAxZ+J7r471oqOFz7jGyBJCfQ0ID0czZ3r/C6Nz+OinTvNHZtdNEXH
RL///QPRlVd+Pzr/fBKEYacF2oPR/Pm4bDDLtSIOCa9NUVPTsqilBcPbIoCf
l7tABxmzPpo3D+8YuQApBN8IBEgKRbnB/a3RtGnfiy64AF9BtikL+Oei3C5g
iH9Q9MYbt0dLl+K6JTHjshgvIzg7JEgHwjSgLYPM32Ts9wVdm46OwsWIU5Zq
gHPRNUatrfa7IjATfwHF0wemTDnUUFODvzcJlp8JBBVLUcJJSPDL0fLl90aL
Fn0p+sIXgLFYOPmvTWee+cKmU08luyz5zwUAm18WGIYVUoeMFXXQKkjTE3Z0
/DdhwgSXS1/cdOuty1paWur27duX+p6g+dcAmjIB5WJIZcR21y5YsAB/7arv
+G/Xrl3k0N5lAwceaKqtBaq2hoaGIXv27El9V1D9NICq3IsqvWbJkiWtjY2N
eLdGUtTY2tr6QXVFBQV224abbsLILKadAUwVfkwNbW1tB2o7/jtw4IDFVIEB
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
FdkdB53rtd97EUQhnCRhpBTuDzQxsUeGgGwBTEXmYObYnORS24XWS9FJS6Rv
BsSjk5z040IWTRocc+co4Qqgh3ABcU5tCwdzdbJAp4RBeGTedt49Vz8hU0Zn
Jn2cZYVl0XJ4iAkUFLpiCc1V0AKdkqyIrE1JHxU2f5tlgAgGcLDNyh+00+Lh
p/CZugA9NqshSuLpWnelX1eP1rWcRiSmWp6rq1j9gLhBEGIjU0NDjK3D4bkE
bsT2PTcdqyiopcw3J2Ipy1VQLINAvBA9V7zYAJ+UIUbFPd49MzIZPQoySI/M
x8SLXH0c3972LBItY9qmViXtNsFX+897ZmI8e04ZobVluKOTn7j5Z/YKRAbI
WSbFLv2c8IKoIXJOxoGxyEecMkWtIqrCr3rHdFZamkVSQlOaq3p93v7b27Bd
0IF346vtXl8EF3gezNvSNyamlOYRFRLM5Ce+CZFjFI20BPvmQyzBWhiHXYBg
aKGZPrIEg9mYl8WLxcIJwRkQ3GlWpiQJe7nTrmDbSN2gmfbZzkFaJOfyHSKO
pQ/0gJlgKusScujrtJW+JDH1XI8CLmlVLseETd2eNsR1Omom1+xg3jB5ScYP
H4YDVarMNVMGkWV+DZXnt2ItRsYO3+7lUDswiP1WYAaMIRvpCD7jb0gdn2nv
PDbIWcvTNoz2VFSzNglN3tlOZ9dJp94NtngfD4k8fgL+W+qEjUsoxsMkKMd3
LzWPGoWNRbFSBmZb4yA9Mh9777QTz/pFaGDsFwtMzVopl4FAGebBzaLysuZm
LAbG6uiZZaWda4Wkx4bt3K7qwZaRfsMx4m87EQsrgp+XrKi9nYsbMCMQWZmY
r7aIUeLXxuN0PQaJgBZSRDHncnftLF5hjOQZB74fFsOHN9vQqFOIYwQ8StHC
45Ioo02nhBRQKKyEglHMEDIzM1AKZQSV79T36oWpmFj5utjRNDKxYu9ESpGu
fLZ6BRRxGhtyNDK1cRE5Iwz5N/UDBvy1OpPBYXfJ7lxvxZZWFW9zRxoRfhKY
6SxGBMaUJt6hdVBEZBcmwFizAd/i+W0bqn31WUV+1eutKy0tIhNQPWFTDxZ8
8IRCxmL4FrCWi0GsMsZ3CO9cY4OTx0DNA4ezqqeVFHdXVLN3EpW0SZdMQDXt
CEAxVJATbcxtOTIEaqzMvd3cp8+VOx4wW2zwYInQxFVC5MnurgBEPG1WdqTf
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
vJ5PUh/7f8NUC/M=\
\>"]],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"1", "\[UndirectedEdge]", "5"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {6, 2}, {6, 
                    3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {1, 5}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{4., 1.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000006`}, {-81.99999999999991, 
                    73.1224489795919}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[1, 5]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081622`, 
                    149.99999999999991`}, {-82.00000000000016, 
                    73.12244897959162}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{2, 3, 4, 6, 1}, {
                   Null, {{2, 1}, {1, 3}, {4, 1}, {4, 2}, {4, 3}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.}, {-82.00000000000036, 73.12244897959182}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, \
$CellContext`v1x25x3x4x6, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {4, 2}, {4, 3}, {5, 1}, {6, 
              2}, {6, 5}, {7, 3}, {7, 5}, {8, 4}, {8, 6}, {8, 7}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[0, 0, 1], $CellContext`v16x25x34 -> 
                RGBColor[0, 0, 1], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[0, 0, 1], DiskBox[{0., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, \
{0.030239520958083826`, 0.030239520958083826`}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], 
                 DiskBox[{-1., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], 
                 DiskBox[{-1., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400,
         ImageCache->GraphicsData["CompressedBitmap", "\<\
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
3U+VmqGJ0d+SxNiBjQldj6fakikqZ/DnBw8cPlxZRsBfny0fCCHa5peaASTP
U/P7EoKE5yXip2e7dHCWYd2kXok9BK1qfllYcyHqD5un5EFCL22VpNbd3laK
Yfm3v9V8C9onl5iYtEQ6sWTrNEnufBKQ5JY56ODhXigBhm2sYaeerM/TJTAq
lIDdahUVdilo3WEmTEqtvwCGuwXh3s/+pTSHv2aQxPaN7tF2AOd6JFDP0oKt
6J9cybqhDnbyqYfSI0RxeSiK0XaMFBEY423i9iszQvUszNs7ZSkH5C07/OMF
ZU6KS8hXqpvcm8ISYz5ByBUaeRDEruoz036zpWHAn/9WWpQq4pSBrEngFSGE
0aEQJCll5A7niC7SI4fwmGRimvrK/funtpwZX0HtUcLmyYxkQ2aCuhyPPOyF
H24awZc+WjBDE3VGa3vG+1xdLGNCsYxLOIrIsF9G6x4McvLs57G73VKn8PM/
3v4c6i0VyOGc1J1QJrIs6CKR20KSdtXM27v/eZO0ysK6iUHZ1cFWImQxNpSF
nEAviApI4FsGD1BGUXT9xdiKUuvf/+iZg+5KENwyJzpA9FX8YRFpauiQoXep
e3jCOjmpVqs6jwvrLAmB81JTCIGN24V56motSAvXUJLMhZ6UxDnTU1m526RV
wlHXStnGwkypzpgwtbrjw+raiyu1veQxz77D8dKzRW0/4YTVTEyyPfV6LOHg
UndwU1bQQoTWJoTVsLcPc9pBbXtqEGZXiNwdkRmmw074E70WTyS7JdZCg8nU
azIxrEml8iOPsU30VMMn+Cd1yhGCnhTSuzGayiQPFZ9tN+pUIkx3cjpUJOtJ
YZR5qjSe9imxFY0r0qFxhd5K+v728yOtiv+K3hJSy52STrlTkj3Qrmn/O+NX
F/2qZvekuUfC8tYlu8/3Zvxu0M92r7qM5UxNpxybMKjoz2fPvj5uz+qPO++d
8bvee2su+cUnR2JylW3Wlq3NtR/P2Nv5DzN+cd6C3f+xsfLv4i9q2jXtmrPv
DNu5+tUpf02o0fKnfPZuXTvijRn/Zyzllhb/UD/J5nDBR//V2mxEP9mp+ogM
jv59dqrYY6Cv5dFOU4lErKSlZadhy1Vo+HYENOpUIjZjpCWRiR4qvg1tT+pU
IvaPpeXPfPl3fBuwn9Cp5OlUJqZDZbyHSr6HymM6lQKdyoR0qPiy2hR6qDyq
UynSqYxPh8pYD5ViD5WHdSolOpVx6VAZ46HSzkPlIZ1KqU5lbDpUfNlq2nuo
rNKpdNCpjEmHyuUeKh09VFbqVM7RqYxOh8ooD5VzPVTqdSqddCqXp0PFl4am
s4fKF3UqXXQqo9KhUuGhcp6HyjKdyvk6lcvSoTLSQ+UCD5V7dSpddSoV6VAZ
4aHSzUNlqU6lu05lZDpUfElsenio1OlUeupURqRDxZeHpZeHymKdSm+dyqXp
ULnYQ6WPh8pdOpUyncol6VAZ7qFyoYdKxJUWfXUqF6dDxZczpZ+HSsRNEv11
KsPToVLuoTLAQ2WuTmWgTmVYOlSGeqgM8lC5Q6dykU6lPB0qvtwmgz1UZutU
huhUhqZDZbCHylAPlVqdSrlOZUg6VC7yUBnmoRJxW8NwncrgdKj40o5c7KFy
s07lEp3KRelQGeihcqmHSsRlAyN0KoPSoeJLzDHSQ+UGnUqFTmVgOlT6e6hc
5qFynU5llE5lQDpU+nmoXO6hEpF/f7ROpX86VHwZNMZ4qEQkoh+rU+mXDpUL
PVTGeajM1KmM16n0TYdKmYeKL/g7XacyUadyYTpUfBkwfFHTiDzmk3UqZelQ
6e2hcoWHSqVOZYpOpU86VHp5qEz1UJmiU6nUqfROh4ovUcWVHiqTdSpX6VR6
pUOlh4fKNA+ViMTM03UqPdOh4svpMMNDZbxOZaZOpUc6VLp5qFztoTJWp1Kl
U+meDpWuHirXeKiM1qlcq1Pplg4VXzKGag+ViFyz1+lUuqZD5XwPles9VCp0
KjfoVC5Ih8p5Hio3eqiM0KnU6FTOT4eKLzXCTR4qEVlEb9apnJcOlc4eKrd4
qERkuLxVp9IlHSq+xAG3eaiU61RqdSqd06FyrofKLA+VITqV2TqVTulQOcdD
5XYPlYhUhHfoVM5Nh4rvwP4cD5WBOpW5OpVz0qHSwUPlTg+V/jqVeTqVjulQ
ae+hMt9Dpa9OZYFOpUM6VHzn5Bd6qERkOLtLp9I+HSrtPFQWeaj01qks1qmU
pkPFd378bg+VnjqVOp1Ku3So+M6/LvFQiUhStVSnUpIOFd+Jrns8VCISJt2r
UylOh4rvqMt9Hirn61SW6VSK0qHiO8Ow3EOli07lizqVwnSo+PaB3++h0kmn
Uq9TKUiHim9b8goPlYgUKSt1KvnpUPFti33AQ6WDTmWVTiUvHSq+XYgPeqiU
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
PPYN99tM5ncy+87t5qV0ph6xL/w/OZrngQ==\
\>"]],
        FrameStyle->Directive[
          RGBColor[1, 0, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"1", "\[UndirectedEdge]", "6"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {6, 1}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081631`, 
                    150.00000000000006`}, {-81.9999999999997, 
                    73.12244897959188}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}, {1, 6}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[1, 6]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {"Dimension" -> 2}, ImageSize -> 150, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                 Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.6592019574300737, 0.8696971994521758}, 
                    0.016825693070248005`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1.3151305689636712`, 0.}, 0.016825693070248005`],
                     "DynamicName", BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0., 0.0032422232870885637`}, 
                    0.016825693070248005`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1.317911833811746, 1.1079435611187038`}, 
                    0.016825693070248005`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.004173367582217979, 1.1103745427518732`}, 
                    0.016825693070248005`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.6595922077240033, 0.24189676885973316`}, 
                    0.016825693070248005`], "DynamicName", BoxID -> 
                    "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.877551020408164, 150.}, {-72., 
                    61.94461980195763}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "3", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{2, 3, 4, 5, 1}, {
                   Null, {{2, 1}, {1, 3}, {4, 3}, {4, 2}, {5, 1}, {5, 2}, {5, 
                    3}, {5, 4}}}, {
                   GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.}, {-81.99999999999999, 73.12244897959165}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x23x4x5, $CellContext`v16x25x34, \
$CellContext`v16x25x3x4, $CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, \
$CellContext`v1x23x4x5x6, $CellContext`v1x25x34x6, $CellContext`v1x25x3x4x6, \
$CellContext`v1x2x34x5x6, $CellContext`v1x2x3x4x5x6}, {{{3, 2}, {4, 2}, {5, 
              1}, {5, 3}, {5, 4}, {6, 1}, {7, 2}, {8, 3}, {8, 7}, {9, 4}, {9, 
              7}, {10, 5}, {10, 6}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x23x4x5x6, \
$CellContext`v16x23x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x23x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x23x4x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x23x4x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "23", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x23x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "23", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v1x23x4x5x6 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x23x4x5 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {2., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {3., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[0, 0, 1], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 0.030239520958083826`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"23\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 3.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400,
         ImageCache->GraphicsData["CompressedBitmap", "\<\
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
9/rq9A/x0H+STv9QnX7t1K+H/mke+o9W6I/pcj7MQ/94nf7hOv2ad/DQf5qH
fm0mPkqn/xgP/TGX5FXr9Gs27aF/uod+bfqr1Okf4aF/jE7/sTr92jTmoX+G
h/7444Cd6D/OQ3+tTv9InX4tgvHQf7qHfi0B1Fun/3gP/aN0+k/Q6dcSDx76
Z3ro1/KCvXT6R3noj7mxrUanX8vseeg/w0O/lq2PaUhe66H/OJ3+0Tr9Wgrd
Q/+ZHvq1zbkeOv1jPPSP0Okfq9Ov7dZ46J/loV8rCIjp4T3OQ3/MtWUn6vRr
m7Ue+s/y0K+Vx3TT6R/voT/mWq86nX6t2MRD/2wP/VpdY4VO/0ke+ofo9J+s
069V+3noP9tDv1Z/HtOb+xQP/YN0+ifo9GsltB76z/HQX6bQX6bTP9FDf8xt
UJN0+rWLMD3013voL1XoL9Xpn+yhv79O/xSdfu1qVQ/953roL1Hoj+m2PdVD
f1+d/lN1+rULeT30n+ehv1ihv1inf5qH/qN0+k/T6dfubvbQP8dDf5FCf5FO
/3QP/TFXwszQ6dfu9PbQf76H/kKF/pi22ad76O+l0z9Tp7/wyOi/wEN/SqE/
pdN/hof+Hjr9Z+r0p46M/gs99Bco9Mc0l57lob+bTv9ZOv0FR0b/pzz05yv0
x3Rlmu2hP+bKh7N1+vOPjP4GD/15Cv0x/XvO8dBfqtNfr9Ofd2T0X+ShP1eh
P6Y/9Lke+ot1+s/T6c89MvrneuhPKvQndfrneOiP6ah/vk5/8sjon+ehP0eh
P+ZM1gUe+mP6tl+o059zZPRfbN4ri0sDZ9AedO7g/CkP3Xk63WJxnRoB4V2X
6M40Pz99+j5D8yXmvRKNZtD7/L7p00FvlFYxldhuH/327duHn7Gng4Twgijh
+BsoXU7bbmbTtm3b8VZtbcOeoUMXvzNy5JyLHnlki6W+yKX+hq9u+/JbDbW1
exYPHbp7TnX1T7akK7NFwYpcqm/bcc01fPydOSNHPrtFKlJB7cWZRD6244IL
3Ecv2tJBpGg+z2wfv2vXrt8MGLCy453Ddmvq44Pduq09e8uWVkus2SVYtHHX
xt+sHDAgOCwPBR8nEv+1trx8Wev69fYxEHnVrm98I/rYwbXdui1vXbduvmBc
tGvjxg9X9u8ffeTs1i1bbEDFue878+aBsF14Clc3dvybBKHgqnniEvvcynnz
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
S+I//j8Dunks\
\>"]],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"2", "\[UndirectedEdge]", "3"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 2}, {6, 
                    3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {3, 2}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    149.99999999999997`}, {-81.99999999999997, 
                    73.12244897959107}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[2, 3]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000006`}, {-81.99999999999969, 
                    73.1224489795919}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 4, 5, 6, 2}, {
                   Null, {{1, 2}, {3, 1}, {3, 2}, {4, 3}, {4, 2}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {2}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081631`, 
                    150.00000000000009`}, {-82.00000000000001, 
                    73.12244897959171}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x24x3x5, $CellContext`v16x25x34, \
$CellContext`v16x25x3x4, $CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, \
$CellContext`v1x24x3x5x6, $CellContext`v1x25x34x6, $CellContext`v1x25x3x4x6, \
$CellContext`v1x2x34x5x6, $CellContext`v1x2x3x4x5x6}, {{{3, 2}, {4, 2}, {5, 
              1}, {5, 3}, {5, 4}, {6, 1}, {7, 2}, {8, 3}, {8, 7}, {9, 4}, {9, 
              7}, {10, 5}, {10, 6}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x24x3x5x6, \
$CellContext`v16x24x3x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x24x3x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x24x3x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x24x3x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x24x3x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x24x3x5x6 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x24x3x5 -> 
                RGBColor[0, 0, 1]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 1.}, {2., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{3., 2.}, {3., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {2., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{2., 3.}, {3., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[0, 0, 1], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 0.030239520958083826`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"24\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{3., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {3.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{2., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 3.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"2", "\[UndirectedEdge]", "4"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {5, 1}, {6, 2}, {6, 
                    3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {4, 2}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081631`, 
                    149.99999999999991`}, {-81.9999999999991, 
                    73.12244897959191}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[2, 4]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000006`}, {-82.00000000000013, 
                    73.12244897959185}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 3, 5, 6, 2}, {
                   Null, {{2, 1}, {3, 1}, {4, 2}, {3, 2}, {4, 3}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {2}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.00000000000006`}, {-81.99999999999999, 
                    73.12244897959168}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, \
$CellContext`v1x25x3x4x6, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {4, 2}, {4, 3}, {5, 1}, {6, 
              2}, {6, 5}, {7, 3}, {7, 5}, {8, 4}, {8, 6}, {8, 7}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x3x4x6 -> 
                RGBColor[0, 0, 1], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[0, 0, 1], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[0, 0, 1], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[0, 0, 1], DiskBox[{0., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, \
{0.030239520958083826`, 0.030239520958083826`}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], 
                 DiskBox[{-1., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400],
        FrameStyle->Directive[
          RGBColor[1, 0, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"2", "\[UndirectedEdge]", "5"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {5, 2}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081631`, 
                    149.9999999999999}, {-82.00000000000075, 
                    73.12244897959103}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}, {2, 5}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[2, 5]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {"Dimension" -> 2}, ImageSize -> 150, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                 Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.009274459318907913, 0.}, 
                    0.016873490130711738`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.6597935509302751, 0.8710912901300502}, 
                    0.016873490130711738`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 1.1073745025933377`}, 0.016873490130711738`],
                     "DynamicName", BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1.3233037879812377`, 0.007811151092489865}, 
                    0.016873490130711738`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.6647428549280743, 0.2452817611694073}, 
                    0.016873490130711738`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1.315440485974316, 1.1163608607700244`}, 
                    0.016873490130711738`], "DynamicName", BoxID -> 
                    "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.877551020408164, 
                    149.99999999999997`}, {-71.99999999999919, 
                    62.090756428000034`}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "3", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 3, 4, 6, 2}, {
                   Null, {{2, 1}, {1, 3}, {4, 2}, {4, 3}, {5, 1}, {5, 2}, {5, 
                    3}, {5, 4}}}, {
                   GraphHighlight -> {2}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.}, {-81.99999999999982, 73.12244897959216}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, \
$CellContext`v1x25x3x4x6, $CellContext`v1x26x34x5, $CellContext`v1x26x3x4x5, \
$CellContext`v1x2x34x5x6, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {4, 
              2}, {4, 3}, {5, 1}, {6, 2}, {6, 5}, {8, 7}, {9, 3}, {9, 5}, {9, 
              7}, {10, 4}, {10, 6}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x26x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x26x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x26x3x4x5, \
$CellContext`v1x26x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x26x34x5 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "26", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x26x3x4x5 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "26", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v1x26x34x5 -> 
                RGBColor[0, 0, 1], $CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v1x26x3x4x5 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{2., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {2., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[1, 0, 0], DiskBox[{0., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, \
{0.030239520958083826`, 0.030239520958083826`}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"26\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"2", "\[UndirectedEdge]", "6"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {6, 2}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{4., 1.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000006`}, {-82., 73.12244897959187}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[2, 6]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000006`}, {-81.99999999999925, 
                    73.12244897959188}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  Graph[{1, 3, 4, 5, 2}, {
                   Null, {{2, 1}, {1, 3}, {4, 1}, {4, 3}, {4, 2}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {2}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.}, {-81.99999999999913, 73.12244897959188}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, \
$CellContext`v1x25x3x4x6, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {4, 2}, {4, 3}, {5, 1}, {6, 
              2}, {6, 5}, {7, 3}, {7, 5}, {8, 4}, {8, 6}, {8, 7}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[0, 0, 1], $CellContext`v16x2x34x5 -> 
                RGBColor[0, 0, 1], $CellContext`v16x25x34 -> 
                RGBColor[0, 0, 1], $CellContext`v1x2x34x5x6 -> 
                RGBColor[0, 0, 1], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[0, 0, 1], DiskBox[{0., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, \
{0.030239520958083826`, 0.030239520958083826`}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400],
        FrameStyle->Directive[
          RGBColor[1, 0, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"3", "\[UndirectedEdge]", "4"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {4, 3}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081631`, 
                    149.9999999999999}, {-82.00000000000152, 
                    73.12244897959103}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}, {3, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[3, 4]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {"Dimension" -> 2}, ImageSize -> 150, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                 Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.584742981937127, 0.9200539347108757}, 
                    0.02075762856538585], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.4483810747328026}, 0.02075762856538585], 
                    "DynamicName", BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1.1594856067350119`, 0.}, 0.02075762856538585], 
                    "DynamicName", BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.6158353994614849, 0.0002961849186502441}, 
                    0.02075762856538585], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1.7748011646616453`, 0.44830027339072165`}, 
                    0.02075762856538585], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1.190867750676917, 0.9200992501466008}, 
                    0.02075762856538585], "DynamicName", BoxID -> 
                    "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    149.9999999999999}, {-48.99999999999983, 
                    41.24189545829307}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "3", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 5, 6, 3}, {
                   Null, {{1, 2}, {3, 1}, {4, 2}, {4, 3}, {5, 1}, {5, 2}, {5, 
                    3}, {5, 4}}}, {
                   GraphHighlight -> {3}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.}, {-81.99999999999982, 73.12244897959216}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x35x4, $CellContext`v16x2x3x4x5, \
$CellContext`v1x25x34x6, $CellContext`v1x25x3x4x6, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x35x4x6, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {5, 
              2}, {5, 3}, {5, 4}, {6, 1}, {7, 2}, {7, 6}, {8, 3}, {8, 6}, {9, 
              4}, {10, 5}, {10, 7}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x35x4x6, \
$CellContext`v16x2x35x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x35x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x35x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x35x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x35x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v1x2x35x4x6 -> 
                RGBColor[0, 0, 1], $CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x35x4 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-2., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[1, 0, 0], DiskBox[{0., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, \
{0.030239520958083826`, 0.030239520958083826`}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], 
                 DiskBox[{-2., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-1.969760479041916, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], 
                 DiskBox[{-2., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"35\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-1.969760479041916, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"3", "\[UndirectedEdge]", "5"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {5, 3}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081622`, 
                    149.9999999999999}, {-82., 73.12244897959178}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[3, 5]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000006`}, {-82.00000000000024, 
                    73.12244897959185}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  Graph[{1, 2, 4, 6, 3}, {
                   Null, {{1, 2}, {1, 3}, {2, 3}, {4, 2}, {4, 3}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {3}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.}, {-81.99999999999913, 73.12244897959285}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, \
$CellContext`v1x25x36x4, $CellContext`v1x25x3x4x6, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x36x4x5, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {4, 
              2}, {4, 3}, {5, 1}, {7, 2}, {7, 5}, {7, 6}, {8, 3}, {8, 5}, {9, 
              6}, {10, 4}, {10, 7}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x36x4x5, \
$CellContext`v1x25x36x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x36x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x36x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x25x36x4 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "36", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x36x4x5 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "36", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x36x4 -> 
                RGBColor[0, 0, 1], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x36x4x5 -> 
                RGBColor[0, 0, 1]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{2., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {2., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[1, 0, 0], DiskBox[{0., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, \
{0.030239520958083826`, 0.030239520958083826`}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"36\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"36\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"3", "\[UndirectedEdge]", "6"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {6, 3}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081622`, 
                    149.9999999999999}, {-81.99999999999953, 
                    73.12244897959202}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[3, 6]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000006`}, {-82., 73.12244897959187}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 4, 5, 3}, {
                   Null, {{1, 2}, {1, 3}, {2, 3}, {4, 1}, {4, 3}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {3}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.00000000000003`}, {-82.00000000000001, 
                    73.12244897958941}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x45, $CellContext`v16x2x3x4x5, \
$CellContext`v1x25x34x6, $CellContext`v1x25x3x4x6, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x3x45x6, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {5, 
              2}, {5, 3}, {5, 4}, {6, 1}, {7, 2}, {7, 6}, {8, 3}, {8, 6}, {9, 
              4}, {10, 5}, {10, 7}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x3x45] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x45x6, \
$CellContext`v16x2x3x45] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x3x45x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x3x45x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "45", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x45 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "45"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x45 -> 
                RGBColor[0, 0, 1], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x45x6 -> 
                RGBColor[0, 0, 1], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-2., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[1, 0, 0], DiskBox[{0., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, \
{0.030239520958083826`, 0.030239520958083826`}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], 
                 DiskBox[{-2., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"45\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-1.969760479041916, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], 
                 DiskBox[{-2., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"45\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-1.969760479041916, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"4", "\[UndirectedEdge]", "5"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {5, 4}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081622`, 
                    149.9999999999999}, {-82.00000000000287, 
                    73.12244897959025}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[4, 5]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000006`}, {-81.99999999999825, 
                    73.12244897959185}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 6, 4}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {4, 2}, {4, 3}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {4}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081631`, 
                    150.00000000000009`}, {-81.99999999999807, 
                    73.12244897959138}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, \
$CellContext`v1x25x3x46, $CellContext`v1x25x3x4x6, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x3x46x5, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {4, 
              2}, {4, 3}, {5, 1}, {7, 2}, {7, 5}, {7, 6}, {8, 3}, {8, 5}, {9, 
              6}, {10, 4}, {10, 7}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x46x5, \
$CellContext`v1x25x3x46] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x3x46] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x3x46x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x3x46x5 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "46", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x46 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "46"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x3x46 -> 
                RGBColor[0, 0, 1], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x46x5 -> 
                RGBColor[0, 0, 1]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{2., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {2., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[1, 0, 0], DiskBox[{0., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, \
{0.030239520958083826`, 0.030239520958083826`}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"46\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"4", "\[UndirectedEdge]", "6"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}}}, {
                   GraphHighlight -> {6, 4}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.00000000000006`}, {-81.99999999999869, 
                    73.1224489795934}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[4, 6]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    149.99999999999997`}, {-82.00000000000126, 
                    73.12244897959054}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 5, 4}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {4, 1}, {4, 3}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {4}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081631`, 
                    150.00000000000009`}, {-82.00000000000031, 
                    73.12244897959107}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FrameBox[
        GraphicsBox[
         NamespaceBox["NetworkGraphics",
          DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, \
$CellContext`v1x25x3x4x6, $CellContext`v1x2x34x56, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x3x4x56, $CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {4, 
              2}, {4, 3}, {5, 1}, {6, 2}, {6, 5}, {8, 3}, {8, 5}, {8, 7}, {9, 
              7}, {10, 4}, {10, 6}, {10, 8}, {10, 9}}, Null}, {
             EdgeStyle -> {
               DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x2x34x56] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v16x2x34x5, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x2x3x4x5, \
$CellContext`v16x2x34x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v16x25x3x4] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x34x6, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x56, \
$CellContext`v1x2x34x56] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 0, 1]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x34x5x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v16x25x3x4, $CellContext`v16x25x34] -> 
                Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v16x2x3x4x5] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x25x3x4x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x34x5x6, \
$CellContext`v1x25x34x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x2x3x4x56] -> Directive[{
                   Thickness[Large], 
                   RGBColor[0, 1, 0]}], 
                DirectedEdge[$CellContext`v1x2x3x4x5x6, \
$CellContext`v1x25x3x4x6] -> Directive[{
                   Thickness[Large], 
                   RGBColor[1, 0, 0]}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> 400, 
              VertexLabels -> {$CellContext`v1x2x3x4x56 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "56"}], Rational[1, 6] 
                  Pi], $CellContext`v1x2x34x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x2x34x56 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "56"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x25x3x4x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v1x25x34x6 -> Rotate[
                  Framed[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x34x5 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v16x2x3x4x5 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x3x4 -> Rotate[
                  Framed[
                   Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                  Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
                  Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
                  Pi], $CellContext`v16x25x34 -> Rotate[
                  Row[{"16", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] Pi]}, 
              VertexStyle -> {$CellContext`v16x25x3x4 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x3x4x6 -> 
                RGBColor[1, 0, 0], $CellContext`v16x2x3x4x5 -> 
                RGBColor[1, 0, 0], $CellContext`v1x25x34x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x56 -> 
                RGBColor[0, 0, 1], $CellContext`v16x2x34x5 -> 
                RGBColor[1, 0, 0], $CellContext`v16x25x34 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x3x4x5x6 -> 
                RGBColor[1, 0, 0], $CellContext`v1x2x34x56 -> 
                RGBColor[0, 0, 1]}}]]}, 
           TagBox[GraphicsGroupBox[{
              {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
               0.028937842778793414`], 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 0, 1], Thickness[Large], 
                ArrowBox[{{2., 2.}, {2., 1.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[1, 0, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}, 
               {RGBColor[0, 1, 0], Thickness[Large], 
                ArrowBox[{{0., 3.}, {2., 2.}}, 0.030239520958083826`]}}, 
              {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
                {RGBColor[1, 0, 0], DiskBox[{0., 0.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, \
{0.030239520958083826`, 0.030239520958083826`}], ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 1.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], 
                 DiskBox[{-1., 2.}, 0.030239520958083826`]}, InsetBox[
                 RotationBox[
                  TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{2., 1.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"56\""},
                    "RowDefault"],
                   FrameStyle->Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]],
                   StripOnInput->False],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{1., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[0, 0, 1], DiskBox[{2., 2.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"56\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                 ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}, {
                {RGBColor[1, 0, 0], DiskBox[{0., 3.}, 0.030239520958083826`]},
                 InsetBox[
                 RotationBox[
                  TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
                   "RowDefault"],
                  BoxRotation->0.5235987755982988], 
                 Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],
                  ImageScaled[{0, 0}],
                 BaseStyle->"Graphics"]}}}],
            MouseAppearanceTag["NetworkGraphics"]],
           AllowKernelInitialization->False]],
         DefaultBaseStyle->{
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]},
         FrameTicks->None,
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->400,
         ImageCache->GraphicsData["CompressedBitmap", "\<\
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
U7k=\
\>"]],
        FrameStyle->Directive[
          RGBColor[0, 1, 0], 
          Thickness[Large]],
        StripOnInput->False], ",", 
       TagBox[GridBox[{
          {
           RowBox[{"5", "\[UndirectedEdge]", "6"}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 1, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 1, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Without\"\>", ",", "5", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 4}}}, {
                   GraphHighlight -> {6, 5}, GraphHighlightStyle -> {"Thick"},
                     GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{3., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081627`, 
                    150.00000000000003`}, {-81.99999999999798, 
                    73.1224489795921}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {"\<\"==\"\>"},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[1, 0, 0]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0, 0],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"With\"\>", ",", "4", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5, 6}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {6, 
                    2}, {6, 3}, {5, 4}, {5, 3}, {6, 5}, {6, 4}}}, {
                   GraphHighlight -> {
                    UndirectedEdge[5, 6]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{5., 0.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 1.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 5.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$5"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{2., 2.}, 0.043048128342245986`], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$6"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.}, {-82.00000000000107, 73.12244897959054}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]},
          {
           RowBox[{
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                Frame->True,
                FrameStyle->RGBColor[0., 0., 0.6666666666666666],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}],
                PlotRangePadding->None],
               "RGBColor[0, 0, 1]"],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0, 0, 1],
             Editable->False,
             Selectable->False], "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\<\"Contract\"\>", ",", "1", ",", 
              GraphicsBox[
               NamespaceBox["NetworkGraphics",
                DynamicModuleBox[{Typeset`graph = HoldComplete[
                  
                  Graph[{1, 2, 3, 4, 5}, {
                   Null, {{1, 2}, {3, 2}, {3, 1}, {1, 4}, {2, 4}, {5, 1}, {5, 
                    2}, {5, 3}, {5, 4}}}, {
                   GraphHighlight -> {5}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> {
                    "Dimension" -> 2, "VertexLayout" -> "PlanarEmbedding"}, 
                    ImageSize -> 150, VertexLabels -> {"Name"}}]], 
                 Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{4., 0.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 1.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 4.}, 0.03700564971751412], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{1., 2.}, 0.03700564971751412], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                 TagBox[
                  
                  DynamicBox[GraphComputation`NetworkGraphicsBox[
                   3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                   CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                   
                   ImageSizeCache->{{1.8775510204081636`, 
                    150.00000000000003`}, {-82.00000000000001, 
                    73.12244897958941}}],
                  MouseAppearanceTag["NetworkGraphics"]],
                 AllowKernelInitialization->False,
                 UnsavedVariables:>{$CellContext`flag}]],
               
               DefaultBaseStyle->{
                "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                 Hue[0.8, 1., 0.6]},
               FrameTicks->None,
               GridLinesStyle->Directive[
                 GrayLevel[0.5, 0.4]],
               ImageSize->150]}], "}"}]}]}
         },
         DefaultBaseStyle->"Column",
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Column"]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v16x2x3x4x5", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x25x3x4x6", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x2x34x5x6", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x2x3x4x5x6", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"v16x25x3x4", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v16x2x34x5", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x25x34x6", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v16x2x3x4x5", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x25x3x4x6", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x2x34x5x6", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"v1x2x3x4x5x6", ",", "3"}], "}"}]}], "}"}], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, \
$CellContext`v1x25x3x4x6, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {5, 1}, {4, 2}, {6, 2}, {4, 
         3}, {7, 3}, {8, 4}, {6, 5}, {7, 5}, {8, 6}, {8, 7}}, Null}, {
        GraphHighlight -> {
           DirectedEdge[$CellContext`v1x2x3x4x5x6, $CellContext`v1x2x34x5x6], 
           DirectedEdge[$CellContext`v1x2x3x4x5x6, $CellContext`v16x2x3x4x5], 
           DirectedEdge[$CellContext`v1x2x3x4x5x6, $CellContext`v1x25x3x4x6]},
          GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         ImageSize -> 400, VertexLabels -> {$CellContext`v16x2x3x4x5 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x34x5x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "34", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v16x25x34 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "25", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "34"}], Rational[1, 6] 
             Pi], $CellContext`v16x2x34x5 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "34", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
             Pi], $CellContext`v16x25x3x4 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "25", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
             Pi], $CellContext`v1x25x34x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "25", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "34", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x25x3x4x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "25", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] Pi]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.028937842778793414`],
           ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`], 
          ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
          ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`], 
          ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`], 
          ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`], 
          ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`], 
          ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`], 
          ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`], 
          ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`], 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.030239520958083826`, 0.030239520958083826`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 1.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 2.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 1.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 2.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 2.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 3.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}],\
 ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{$CellContext`v16x25x34, $CellContext`v16x25x3x4, \
$CellContext`v16x2x34x5, $CellContext`v16x2x3x4x5, $CellContext`v1x25x34x6, \
$CellContext`v1x25x3x4x6, $CellContext`v1x2x34x5x6, \
$CellContext`v1x2x3x4x5x6}, {{{2, 1}, {3, 1}, {5, 1}, {4, 2}, {6, 2}, {4, 
         3}, {7, 3}, {8, 4}, {6, 5}, {7, 5}, {8, 6}, {8, 7}}, Null}, {
        GraphHighlight -> {
           DirectedEdge[$CellContext`v1x2x3x4x5x6, $CellContext`v1x2x34x5x6], 
           DirectedEdge[$CellContext`v1x25x3x4x6, $CellContext`v1x25x34x6], 
           DirectedEdge[$CellContext`v1x2x3x4x5x6, $CellContext`v16x2x3x4x5], 
           DirectedEdge[$CellContext`v1x2x34x5x6, $CellContext`v1x25x34x6], 
           DirectedEdge[$CellContext`v16x2x3x4x5, $CellContext`v16x25x3x4], 
           DirectedEdge[$CellContext`v1x2x34x5x6, $CellContext`v16x2x34x5], 
           DirectedEdge[$CellContext`v1x2x3x4x5x6, $CellContext`v1x25x3x4x6], 
           DirectedEdge[$CellContext`v1x25x3x4x6, $CellContext`v16x25x3x4], 
           DirectedEdge[$CellContext`v16x2x3x4x5, $CellContext`v16x2x34x5]}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         ImageSize -> 400, VertexLabels -> {$CellContext`v16x2x3x4x5 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x34x5x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "34", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x2x3x4x5x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v16x25x34 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "25", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "34"}], Rational[1, 6] 
             Pi], $CellContext`v16x2x34x5 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "2", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "34", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
             Pi], $CellContext`v16x25x3x4 -> Rotate[
             Row[{"16", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "25", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
             Pi], $CellContext`v1x25x34x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "25", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "34", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] 
             Pi], $CellContext`v1x25x3x4x6 -> Rotate[
             Row[{"1", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "25", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "3", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "4", 
               Style["\[Earth]", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12], "6"}], Rational[1, 6] Pi]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.028937842778793414`],
           ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`], 
          ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{-1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
          ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`], 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`]}, 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`]}, 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`]}, 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{0., 3.}, {-1., 2.}}, 0.030239520958083826`]}, 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
          {Hue[1, 1, 0.7], Opacity[1], 
           ArrowBox[{{0., 3.}, {1., 2.}}, 0.030239520958083826`]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.030239520958083826`, 0.030239520958083826`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 1.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 2.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"16\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {-0.9697604790419162, 2.0302395209580837`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 1.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 2.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"25\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 2.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"34\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 3.}, 0.030239520958083826`], InsetBox[
            RotationBox[
             TemplateBox[{"\"1\"",StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"2\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"3\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"4\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"5\"",
               StyleBox["\"\[Earth]\"", 
                RGBColor[0, 
                 Rational[4, 9], 0], 12, StripOnInput -> False],"\"6\""},
              "RowDefault"],
             BoxRotation->0.5235987755982988], 
            Offset[{2, 2}, {0.030239520958083826`, 3.0302395209580837`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400]}], "}"}]], "Output",
 CellChangeTimes->{3.7616659279624753`*^9, 3.76166597314372*^9}]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 243, 5, 31, "Input"],
Cell[826, 29, 159, 3, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1022, 37, 174, 3, 31, "Input"],
Cell[1199, 42, 945828, 18811, 15999, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

