(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    446234,       9305]
NotebookOptionsPosition[    445159,       9265]
NotebookOutlinePosition[    445667,       9285]
CellTagsIndexPosition[    445624,       9282]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["First the definitions", "Section",
 CellChangeTimes->{{3.7595087128935833`*^9, 3.759508718173509*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SymbolReplace", "[", 
   RowBox[{"sym_", ",", "edge_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "s", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s", "=", 
      RowBox[{"SymbolToSets", "[", "sym", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sort", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"(", 
            RowBox[{"#", "/.", 
             RowBox[{
              RowBox[{"edge", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"edge", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"edge", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]}], ")"}], "]"}], 
          "]"}], "&"}], ",", "s"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetsToSymbol", "[", "s", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.759060126847413*^9, 3.7590601318146963`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"JoinGraphs", "[", 
   RowBox[{"f_", ",", "g_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"Block", " ", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"edges", ",", "full"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"edges", "=", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"e", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Red"}], "}"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"e", ",", 
            RowBox[{"EdgeList", "[", "f", "]"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"e", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Yellow"}], "}"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"e", ",", 
            RowBox[{"SetDifference", "[", 
             RowBox[{
              RowBox[{"SetDifference", "[", 
               RowBox[{
                RowBox[{"EdgeList", "[", "g", "]"}], ",", 
                RowBox[{"EdgeList", "[", "f", "]"}]}], "]"}], ",", 
              RowBox[{"EdgeList", "[", "h", "]"}]}], "]"}]}], "}"}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"e", "->", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", "Blue"}], "}"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"e", ",", 
            RowBox[{"EdgeList", "[", "h", "]"}]}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"full", "=", 
      RowBox[{"GraphUnion", "[", 
       RowBox[{"f", ",", "g", ",", "h"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", 
      RowBox[{"full", ",", 
       RowBox[{"VertexLabels", "\[Rule]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"v", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"SymbolLevel", "[", "v", "]"}], "\[Equal]", "4"}], ",", 
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"Framed", "[", 
                RowBox[{
                 RowBox[{"SymbolToLabel", "[", "v", "]"}], ",", 
                 RowBox[{"FrameStyle", "\[Rule]", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Red", ",", "Thin"}], "]"}]}]}], "]"}], ",", 
               RowBox[{"Pi", "/", "6"}]}], "]"}], ",", 
             RowBox[{"Rotate", "[", 
              RowBox[{
               RowBox[{"SymbolToLabel", "[", "v", "]"}], ",", 
               RowBox[{"Pi", "/", "6"}]}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"v", ",", 
            RowBox[{"VertexList", "[", "full", "]"}]}], "}"}]}], "]"}]}], ",", 
       RowBox[{"EdgeStyle", "\[Rule]", "edges"}], ",", "\[IndentingNewLine]", 
       RowBox[{"VertexStyle", "\[Rule]", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"v", "\[Rule]", "Red"}], ",", 
            RowBox[{"{", 
             RowBox[{"v", ",", 
              RowBox[{"VertexList", "[", "f", "]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"v", "\[Rule]", "Blue"}], ",", 
            RowBox[{"{", 
             RowBox[{"v", ",", 
              RowBox[{"VertexList", "[", "h", "]"}]}], "}"}]}], "]"}]}], 
         "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7588583158346715`*^9, 3.75885841531423*^9}, {
  3.7590667672825375`*^9, 3.7590668024330044`*^9}, {3.759066852423503*^9, 
  3.7590668614254155`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindFullFormula12345", "[", "g_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"formulaDepth", "=", "0"}], ";", 
       RowBox[{"FindFullFormula12345", "[", 
        RowBox[{"g", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", "v", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"v", ",", 
             RowBox[{"VertexList", "[", "g", "]"}]}], "}"}]}], "]"}]}], 
        "]"}]}], ",", "\[IndentingNewLine]", "formulaDepth"}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7548047637113547`*^9, 3.7548047663212976`*^9}, {
  3.758812583608945*^9, 3.7588125880226803`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindFullFormula12345", "[", 
   RowBox[{"g_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"edge", ",", "pos1", ",", "pos2", ",", "v2", ",", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", "result1", ",", "result2", ",", "clique"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"CompleteGraphQ", "[", "g", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"result", "=", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"SetsToSymbol2", "[", 
            RowBox[{"Sort", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Sort", "[", "#", "]"}], "&"}], ",", "v"}], "]"}], 
              ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], "&"}]}], "]"}], "]"}], 
           "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"SymbolLevel", "[", "#", "]"}], "\[LessEqual]", "5"}], 
           "&"}]}], "]"}]}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"clique", "=", 
         RowBox[{"First", "[", 
          RowBox[{"FindClique", "[", "g", "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "clique", "]"}], "\[LessEqual]", "5"}], ",",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"edge", "=", 
            RowBox[{"First", "[", 
             RowBox[{"EdgeList", "[", 
              RowBox[{"GraphComplement", "[", "g", "]"}], "]"}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{"edge", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"pos1", "=", "k"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"v", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{"edge", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"pos2", "=", "k"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"v2", "=", "v"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"v2", "[", 
             RowBox[{"[", "pos1", "]"}], "]"}], "=", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"v2", "[", 
               RowBox[{"[", "pos1", "]"}], "]"}], ",", 
              RowBox[{"v2", "[", 
               RowBox[{"[", "pos2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"v2", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"v2", ",", "pos2"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"result", "=", 
            RowBox[{"Join", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"FindFullFormula12345", "[", 
               RowBox[{
                RowBox[{"EdgeAdd", "[", 
                 RowBox[{"g", ",", "edge"}], "]"}], ",", "v"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"FindFullFormula12345", "[", 
               RowBox[{
                RowBox[{"VertexContract", "[", 
                 RowBox[{"g", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"edge", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"edge", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
                "v2"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "result", "]"}], ">", "formulaDepth"}], ",", 
       RowBox[{"formulaDepth", "=", 
        RowBox[{"Length", "[", "result", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.710167039609064*^9, 3.710167095821632*^9}, 
   3.7101675452350607`*^9, {3.711566310758187*^9, 3.7115663666114445`*^9}, 
   3.7115688351830935`*^9, {3.711570893069907*^9, 3.711570928550038*^9}, 
   3.744459663786933*^9, {3.7460924817129807`*^9, 3.7460924858866014`*^9}, {
   3.7460925190890265`*^9, 3.7460925519471674`*^9}, {3.74609262145858*^9, 
   3.74609274517286*^9}, {3.754742813159257*^9, 3.7547428146151056`*^9}, {
   3.754742880307619*^9, 3.754742883249443*^9}, {3.755529369668727*^9, 
   3.7555293709029875`*^9}, {3.758812585332528*^9, 3.7588126108854675`*^9}},
 ExpressionUUID -> "7d6948ed-df20-4648-a457-59c989d8abd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HandleGraph", "[", "g_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"edges", ",", "full"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"edges", "=", 
      RowBox[{"DeleteDuplicates", "[", 
       RowBox[{
        RowBox[{"EdgeList", "[", "g", "]"}], ",", 
        RowBox[{
         RowBox[{"IsomorphicGraphQ", "[", 
          RowBox[{
           RowBox[{"EdgeContract", "[", 
            RowBox[{"g", ",", "#1"}], "]"}], ",", 
           RowBox[{"EdgeContract", "[", 
            RowBox[{"g", ",", "#2"}], "]"}]}], "]"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"EdgeList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Graph", "[", 
          RowBox[{"g", ",", 
           RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"without", "=", 
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"VertexList", "[", 
                   RowBox[{"EdgeDelete", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", 
                  RowBox[{"EdgeList", "[", 
                   RowBox[{"EdgeDelete", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", 
                  RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
                  RowBox[{"GraphHighlight", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
                  RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}],
                   ",", 
                  RowBox[{
                  "GraphLayout", "\[Rule]", "\"\<TutteEmbedding\>\""}], ",", 
                  " ", 
                  RowBox[{"ImageSize", "\[Rule]", "50"}]}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"contract", " ", "=", 
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"EdgeList", "[", 
                   RowBox[{"EdgeContract", "[", 
                    RowBox[{"g", ",", "e"}], "]"}], "]"}], ",", 
                  RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
                  RowBox[{"GraphHighlight", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "}"}]}], ",", 
                  RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}],
                   ",", 
                  RowBox[{
                  "GraphLayout", "\[Rule]", "\"\<TutteEmbedding\>\""}], ",", 
                  " ", 
                  RowBox[{"ImageSize", "\[Rule]", "50"}]}], "]"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"with", "=", 
                RowBox[{"Graph", "[", 
                 RowBox[{
                  RowBox[{"VertexList", "[", "g", "]"}], ",", 
                  RowBox[{"EdgeList", "[", "g", "]"}], ",", 
                  RowBox[{"GraphHighlight", "\[Rule]", "e"}], ",", 
                  RowBox[{
                  "GraphLayout", "\[Rule]", "\"\<TutteEmbedding\>\""}], ",", 
                  " ", 
                  RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
                  RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}],
                   ",", 
                  RowBox[{"ImageSize", "\[Rule]", "50"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Labeled", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Graph", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"JoinGraphs", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"FormulaGraphReverse2", "[", 
                    RowBox[{"FindFullFormula", "[", "g", "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"FormulaGraphReverse2", "[", 
                    RowBox[{"FindFullFormula", "[", "without", "]"}], "]"}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"FormulaGraphReverse2", "[", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"SymbolReplace", "[", 
                    RowBox[{"#", ",", "e"}], "]"}], "&"}], ",", 
                    RowBox[{"FindFullFormula", "[", "contract", "]"}]}], 
                    "]"}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "400"}]}], 
                "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{"e", ",", "\[IndentingNewLine]", 
                 RowBox[{"Yellow", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Without\>\"", ",", 
                    RowBox[{
                    RowBox[{"ChromaticPolynomial", "[", 
                    RowBox[{"without", ",", "4"}], "]"}], "/", "24"}], ",", 
                    "without"}], "}"}]}], ",", "\[IndentingNewLine]", 
                 "\"\<==\>\"", ",", "\[IndentingNewLine]", 
                 RowBox[{"Red", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<With\>\"", ",", 
                    RowBox[{
                    RowBox[{"ChromaticPolynomial", "[", 
                    RowBox[{"g", ",", "4"}], "]"}], "/", "24"}], ",", 
                    "with"}], "}"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Blue", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Contract\>\"", ",", 
                    RowBox[{
                    RowBox[{"ChromaticPolynomial", "[", 
                    RowBox[{"contract", ",", "4"}], "]"}], "/", "24"}], ",", 
                    "contract"}], "}"}]}]}], "\[IndentingNewLine]", "}"}]}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"e", ",", "edges"}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", "e"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.759392985493739*^9, 3.759393042302174*^9}, {
   3.759509264132631*^9, 3.7595092649431343`*^9}, {3.7595498972326136`*^9, 
   3.7595499118963795`*^9}, {3.759549995491059*^9, 3.7595500576275587`*^9}, {
   3.7595501150232377`*^9, 3.7595501242207365`*^9}, {3.7595501828559732`*^9, 
   3.759550201679658*^9}, {3.759550255474188*^9, 3.7595502960964913`*^9}, 
   3.7595503658834276`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Then some samples", "Section",
 CellChangeTimes->{{3.7595087217382965`*^9, 3.7595087292556915`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"allGraphs5", "[", 
  RowBox[{"amigo1", ",", "\"\<graph\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.7595088411257706`*^9, 3.7595088503860908`*^9}}],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
      EdgeStyle -> {
         RGBColor[0, 
          Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
       VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
        0.30901699437494745`}, {
        0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
       VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
       VertexSize -> {0.1}, VertexStyle -> {
         RGBColor[1, 0, 0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {RGBColor[0, 
         NCache[
          Rational[4, 9], 0.4444444444444444], 0], Opacity[0.7], 
        {Arrowheads[0.], 
         ArrowBox[{{0., 1.}, {0.9510565162951535, 0.30901699437494745`}}, 
          0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 1.}, {0.5877852522924731, -0.8090169943749475}}, 
          0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 1.}, {-0.5877852522924731, -0.8090169943749475}}, 
          0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0., 1.}, {-0.9510565162951535, 0.30901699437494745`}}, 
          0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
          0.5877852522924731, -0.8090169943749475}}, 0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{
          0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.021812234931106983`]}, 
        {Arrowheads[0.], 
         ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.021812234931106983`]}}, 
       {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.058778525229247314`], 
         InsetBox["\<\"1\"\>", 
          Offset[{2, 2}, {0.058778525229247314`, 1.0587785252292474`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
          0.058778525229247314`], 
         InsetBox["\<\"2\"\>", 
          Offset[{2, 2}, {1.0098350415244008`, 0.36779551960419476`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.5877852522924731, -0.8090169943749475}, 
          0.058778525229247314`], 
         InsetBox["\<\"3\"\>", 
          Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
          0.058778525229247314`], 
         InsetBox["\<\"4\"\>", 
          Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
          0.058778525229247314`], 
         InsetBox["\<\"5\"\>", 
          Offset[{2, 2}, {-0.8922779910659062, 0.36779551960419476`}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FrameTicks->None,
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{50, 50}]], "Output",
 CellChangeTimes->{3.759508851153206*^9, 3.7595499180814934`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HandleGraph", "[", 
  RowBox[{"allGraphs5", "[", 
   RowBox[{"amigo1", ",", "\"\<graph\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7595087339438295`*^9, 3.759508741887848*^9}, 
   3.7595088562594676`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {
        Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
        EdgeStyle -> {
           RGBColor[0, 
            Rational[4, 9], 0]}, GraphLayout -> {"Dimension" -> 2}, 
         ImageSize -> {50, 50}, 
         VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
          0.30901699437494745`}, {
          0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
         VertexLabels -> {
          "Name", 4 -> "4", 2 -> "2", 1 -> "1", 3 -> "3", 5 -> "5"}, 
         VertexSize -> {0.1}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {RGBColor[0, 
           NCache[
            Rational[4, 9], 0.4444444444444444], 0], Opacity[0.7], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.}, {0.9510565162951535, 0.30901699437494745`}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.}, {0.5877852522924731, -0.8090169943749475}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.}, {-0.5877852522924731, -0.8090169943749475}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.}, {-0.9510565162951535, 0.30901699437494745`}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
            0.5877852522924731, -0.8090169943749475}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{
            0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.021812234931106983`]}}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 1.}, 0.058778525229247314`], 
           InsetBox["\<\"1\"\>", 
            Offset[{2, 2}, {0.058778525229247314`, 1.0587785252292474`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
            0.058778525229247314`], 
           InsetBox["\<\"2\"\>", 
            Offset[{2, 2}, {1.0098350415244008`, 0.36779551960419476`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.5877852522924731, -0.8090169943749475}, 
            0.058778525229247314`], 
           InsetBox["\<\"3\"\>", 
            Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
            0.058778525229247314`], 
           InsetBox["\<\"4\"\>", 
            Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
            0.058778525229247314`], 
           InsetBox["\<\"5\"\>", 
            Offset[{2, 2}, {-0.8922779910659062, 0.36779551960419476`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{50, 50}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v12x35x4, $CellContext`v12x3x4x5, \
$CellContext`v1x24x35, $CellContext`v1x24x3x5, $CellContext`v1x25x3x4, \
$CellContext`v1x2x35x4, $CellContext`v1x2x3x4x5}, {{{2, 1}, {4, 3}, {6, 1}, {
               6, 3}, {7, 2}, {7, 4}, {7, 5}, {7, 6}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x4x5, $CellContext`v1x25x3x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v12x35x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x2x35x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v12x3x4x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x24x3x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v12x3x4x5, $CellContext`v12x35x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v12x3x4x5 -> Rotate[
                   Framed[
                    Row[{"12", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x25x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4x5 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x35 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x3x5 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v12x35x4 -> Rotate[
                   Row[{"12", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x35x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v1x2x3x4x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x24x3x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v12x35x4 -> 
                 RGBColor[0, 0, 1], $CellContext`v12x3x4x5 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x2x35x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x25x3x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x24x35 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.028937842778793414`], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{3., 1.}, {2., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {0., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {3., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {1., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {2., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"12\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                
                Offset[{2, 2}, {0.030239520958083826`, 
                 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"12\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 0.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{3., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 2.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", "6", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
                    GraphHighlight -> {1, 2}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.24890209932035}, {-31.248902099320297`, 
                    24.520267788299165`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "4", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4,
                     5}}}, {GraphHighlight -> {
                    UndirectedEdge[1, 2]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.248902099320205`}, {-31.248902099320276`, 
                    24.52026778829911}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", "2", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{3, 4, 5, 1}, {
                    Null, {{1, 2}, {2, 3}, {4, 1}, {4, 2}, {4, 3}}}, {
                    GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612245183`, 
                    49.99817022567044}, {-31.998170225670435`, 
                    25.163265306122582`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], ",", 
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v13x24x5, $CellContext`v13x25x4, \
$CellContext`v13x2x4x5, $CellContext`v1x24x35, $CellContext`v1x24x3x5, \
$CellContext`v1x25x3x4, $CellContext`v1x2x35x4, $CellContext`v1x2x3x4x5}, {{{
               3, 1}, {3, 2}, {5, 1}, {5, 4}, {6, 2}, {7, 4}, {8, 3}, {8, 
               5}, {8, 6}, {8, 7}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x4x5, $CellContext`v1x25x3x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v13x24x5] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x2x35x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v13x2x4x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x25x3x4, $CellContext`v13x25x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x24x3x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v13x2x4x5, $CellContext`v13x25x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v13x2x4x5, $CellContext`v13x24x5] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v13x25x4 -> Rotate[
                   Row[{"13", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
                   Pi], $CellContext`v13x2x4x5 -> Rotate[
                   Framed[
                    Row[{"13", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x25x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v13x24x5 -> Rotate[
                   Row[{"13", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4x5 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x35 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x3x5 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x35x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v1x2x3x4x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v13x24x5 -> 
                 RGBColor[0, 0, 1], $CellContext`v13x25x4 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x3x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x2x35x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v13x2x4x5 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x25x3x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x24x35 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.028937842778793414`], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 1.}, {1., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {2., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{3., 1.}, {2., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {3., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"13\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                
                Offset[{2, 2}, {0.030239520958083826`, 
                 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 0.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"13\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"13\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 0.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{3., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 2.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", "7", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
                    GraphHighlight -> {1, 3}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730957, 
                    50.24890209932027}, {-31.248902099320212`, 
                    24.520267788299158`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "4", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4,
                     5}}}, {GraphHighlight -> {
                    UndirectedEdge[1, 3]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730957, 
                    50.24890209932027}, {-31.248902099320336`, 
                    24.52026778829924}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", "3", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{4, 5, 1, 2}, {
                    Null, {{1, 2}, {3, 4}, {3, 1}, {3, 2}}}, {
                    GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612245183`, 
                    49.99817022567056}, {-31.99817022567057, 
                    25.163265306122575`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], ",", 
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v14x25x3, $CellContext`v14x2x35, \
$CellContext`v14x2x3x5, $CellContext`v1x24x35, $CellContext`v1x24x3x5, \
$CellContext`v1x25x3x4, $CellContext`v1x2x35x4, $CellContext`v1x2x3x4x5}, {{{
               3, 1}, {3, 2}, {5, 4}, {6, 1}, {7, 2}, {7, 4}, {8, 3}, {8, 
               5}, {8, 6}, {8, 7}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x4x5, $CellContext`v1x25x3x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x2x35x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v14x2x3x5, $CellContext`v14x2x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v1x25x3x4, $CellContext`v14x25x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v14x2x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v14x2x3x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x24x3x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v14x2x3x5, $CellContext`v14x25x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v14x25x3 -> Rotate[
                   Row[{"14", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
                   Pi], $CellContext`v14x2x3x5 -> Rotate[
                   Framed[
                    Row[{"14", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x25x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v14x2x35 -> Rotate[
                   Row[{"14", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4x5 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x35 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x3x5 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x35x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v1x2x3x4x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v14x25x3 -> 
                 RGBColor[0, 0, 1], $CellContext`v14x2x3x5 -> 
                 RGBColor[0, 0, 1], $CellContext`v14x2x35 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x3x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x2x35x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x25x3x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x24x35 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.028937842778793414`], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {1., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{3., 1.}, {3., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {3., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {1., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {3., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {0., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {2., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"14\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                
                Offset[{2, 2}, {0.030239520958083826`, 
                 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 0.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"14\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"14\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{3., 0.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{3., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 2.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", "7", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {3, 4}, {4, 5}}}, {
                    GraphHighlight -> {1, 4}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.24890209932023}, {-31.248902099320503`, 
                    24.520267788299037`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "4", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4,
                     5}}}, {GraphHighlight -> {
                    UndirectedEdge[1, 4]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.248902099320176`}, {-31.24890209932035, 
                    24.520267788299297`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", "3", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{2, 3, 1, 5}, {
                    Null, {{1, 2}, {3, 1}, {3, 2}, {3, 4}}}, {
                    GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612245038`, 
                    49.998170225670655`}, {-31.99817022567055, 
                    25.16326530612229}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], ",", 
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v15x24x3, $CellContext`v15x2x3x4, \
$CellContext`v1x24x35, $CellContext`v1x24x3x5, $CellContext`v1x25x3x4, \
$CellContext`v1x2x35x4, $CellContext`v1x2x3x4x5}, {{{2, 1}, {4, 1}, {4, 3}, {
               6, 3}, {7, 2}, {7, 4}, {7, 5}, {7, 6}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x4x5, $CellContext`v1x25x3x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x2x35x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v15x24x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x24x3x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v15x2x3x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v15x2x3x4, $CellContext`v15x24x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v15x24x3 -> Rotate[
                   Row[{"15", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
                   Pi], $CellContext`v1x25x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4x5 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x35 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x3x5 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v15x2x3x4 -> Rotate[
                   Framed[
                    Row[{"15", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x35x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v1x2x3x4x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v15x24x3 -> 
                 RGBColor[0, 0, 1], $CellContext`v15x2x3x4 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x3x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x2x35x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x25x3x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x24x35 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.028937842778793414`], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {3., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{3., 1.}, {3., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {0., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {2., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {1., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 2.}, {3., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"15\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                
                Offset[{2, 2}, {0.030239520958083826`, 
                 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"15\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{3., 0.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{3., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 2.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", "6", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {3, 4}, {4, 5}}}, {
                    GraphHighlight -> {1, 5}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730957, 
                    50.24890209932027}, {-31.248902099320063`, 
                    24.520267788299165`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "4", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4,
                     5}}}, {GraphHighlight -> {
                    UndirectedEdge[1, 5]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.248902099320475`}, {-31.248902099320212`, 
                    24.52026778829928}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", "2", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{2, 3, 4, 1}, {
                    Null, {{1, 2}, {2, 3}, {4, 1}, {4, 2}, {4, 3}}}, {
                    GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612245183`, 
                    49.99817022567056}, {-31.99817022567047, 
                    25.163265306122547`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], ",", 
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v1x235x4, $CellContext`v1x23x4x5, \
$CellContext`v1x24x35, $CellContext`v1x24x3x5, $CellContext`v1x25x3x4, \
$CellContext`v1x2x35x4, $CellContext`v1x2x3x4x5}, {{{2, 1}, {4, 3}, {5, 1}, {
               6, 1}, {6, 3}, {7, 2}, {7, 4}, {7, 5}, {7, 6}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v1x235x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x25x3x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x2x35x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x23x4x5, $CellContext`v1x235x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v1x25x3x4, $CellContext`v1x235x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x23x4x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x24x3x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v1x25x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x235x4 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "235", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4x5 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x35 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x3x5 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x35x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x23x4x5 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "23", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v1x2x3x4x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x24x3x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x23x4x5 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x2x35x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x25x3x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x235x4 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x35 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.028937842778793414`], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {1., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {1., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 2.}, {-1., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 2.}, {2., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"235\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                
                Offset[{2, 2}, {0.030239520958083826`, 
                 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{-1., 1.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"23\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 0.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 2.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {0.030239520958083826`, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", "6", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {3, 4}, {4, 5}}}, {
                    GraphHighlight -> {2, 3}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.3004218909403843, 
                    50.30045688764002}, {-31.30045688763992, 
                    24.414213562373096`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "4", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4,
                     5}}}, {GraphHighlight -> {
                    UndirectedEdge[2, 3]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.248902099320475`}, {-31.248902099320496`, 
                    24.52026778829955}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", "2", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 4, 5, 2}, {
                    Null, {{1, 2}, {1, 3}, {2, 3}, {4, 1}, {4, 2}}}, {
                    GraphHighlight -> {2}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612244627`, 
                    49.998170225670705`}, {-31.99817022567061, 
                    25.163265306122536`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], ",", 
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v1x24x35, $CellContext`v1x24x3x5, \
$CellContext`v1x25x34, $CellContext`v1x25x3x4, $CellContext`v1x2x34x5, \
$CellContext`v1x2x35x4, $CellContext`v1x2x3x4x5}, {{{2, 1}, {4, 3}, {5, 3}, {
               6, 1}, {7, 2}, {7, 4}, {7, 5}, {7, 6}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x4x5, $CellContext`v1x25x3x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x2x35x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x2x34x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x25x3x4, $CellContext`v1x25x34] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x24x3x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x34x5, $CellContext`v1x25x34] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v1x25x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x25x34 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x34x5 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4x5 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x35 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x3x5 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x35x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v1x2x3x4x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x2x34x5 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x25x34 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x3x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x2x35x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x25x3x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x24x35 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.028937842778793414`], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {3., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{3., 1.}, {3., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {3., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                
                Offset[{2, 2}, {0.030239520958083826`, 
                 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{3., 0.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{3., 1.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {3.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 2.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", "6", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {
                    GraphHighlight -> {4, 3}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.24890886270332}, {-31.248908862703406`, 
                    24.5202674636317}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "4", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4,
                     5}}}, {GraphHighlight -> {
                    UndirectedEdge[3, 4]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.248902099320304`}, {-31.248902099320183`, 
                    24.52026778829893}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", "2", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 5, 3}, {
                    Null, {{1, 2}, {1, 3}, {4, 1}, {4, 2}, {4, 3}}}, {
                    GraphHighlight -> {3}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.1632653061224475, 
                    49.998163489868574`}, {-31.998163489868972`, 
                    25.16326530612217}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], ",", 
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v1x245x3, $CellContext`v1x24x35, \
$CellContext`v1x24x3x5, $CellContext`v1x25x3x4, $CellContext`v1x2x35x4, \
$CellContext`v1x2x3x45, $CellContext`v1x2x3x4x5}, {{{3, 1}, {3, 2}, {4, 1}, {
               5, 2}, {6, 1}, {7, 3}, {7, 4}, {7, 5}, {7, 6}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x45, $CellContext`v1x245x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x25x3x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x2x35x4] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x25x3x4, $CellContext`v1x245x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x35x4, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x24x3x5] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4x5, \
$CellContext`v1x2x3x45] -> Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v1x245x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x24x3x5, $CellContext`v1x24x35] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v1x2x3x45 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "45"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x245x3 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "245", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
                   Pi], $CellContext`v1x25x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "25", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4x5 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x35 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x3x5 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "5"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x2x35x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "35", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v1x2x3x4x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x24x3x5 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x2x35x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x25x3x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x245x3 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x2x3x45 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x35 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.028937842778793414`], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{1., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {2., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{-1., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {2., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {1., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {-1., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {2., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {0., 1.}}, 0.030239520958083826`], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"245\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                
                Offset[{2, 2}, {0.030239520958083826`, 
                 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 0.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 0.030239520958083826`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{-1., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"25\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {-0.9697604790419162, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 1.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"35\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {2.0302395209580837`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.030239520958083826`], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"45\""},
                     "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {0.030239520958083826`, 1.030239520958084}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 2.}, 0.030239520958083826`], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"5\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.030239520958084, 2.0302395209580837`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", "6", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}}}, {
                    GraphHighlight -> {5, 4}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.249177603657344`}, {-31.24917760365702, 
                    24.520254563055456`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "4", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {3, 4}, {4,
                     5}}}, {GraphHighlight -> {
                    UndirectedEdge[4, 5]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.9510565162951536, 0.3090169943749472}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-0.587785252292473, -0.8090169943749476}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749473}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$4"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.9510565162951535, 0.3090169943749475}, 
                    0.021812234931106983`], "DynamicName", BoxID -> 
                    "VertexID$5"], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.4142135623730958, 
                    50.24890209932019}, {-31.248902099320226`, 
                    24.520267788299293`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", "2", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {2, 3}, {4, 1}, {4, 3}}}, {
                    GraphHighlight -> {4}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612244627`, 
                    49.998170225670705`}, {-31.998170225670698`, 
                    25.163265306122447`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.759508743072075*^9, 3.7595088574088926`*^9, 3.759509271550367*^9, 
   3.7595499193630867`*^9, {3.759550004700445*^9, 3.759550029640161*^9}, 
   3.7595500629710255`*^9, 3.759550152514064*^9, {3.759550193734911*^9, 
   3.7595502062823772`*^9}, 3.759550267248869*^9, 3.759550306081286*^9, 
   3.759550374039009*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HandleGraph", "[", 
  RowBox[{"allGraphs5", "[", 
   RowBox[{"alfaKey", ",", "\"\<graph\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7595093093292384`*^9, 3.7595093132377276`*^9}, {
  3.759509363284951*^9, 3.759509365716681*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {1, 4}, {3, 4}}}, {
        EdgeStyle -> {
           RGBColor[0, 
            Rational[4, 9], 0]}, GraphLayout -> {"Dimension" -> 2}, 
         ImageSize -> {50, 50}, 
         VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
          0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
         VertexLabels -> {"Name", 4 -> "5", 2 -> "2", 1 -> "1,3", 3 -> "4"}, 
         VertexSize -> {0.1}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {RGBColor[0, 
           NCache[
            Rational[4, 9], 0.4444444444444444], 0], Opacity[0.7], 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.}, {0.9510565162951535, 0.30901699437494745`}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.}, {-0.5877852522924731, -0.8090169943749475}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 1.}, {-0.9510565162951535, 0.30901699437494745`}}, 
            0.021812234931106983`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.021812234931106983`]}}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 1.}, 0.058778525229247314`], 
           InsetBox["\<\"1,3\"\>", 
            Offset[{2, 2}, {0.058778525229247314`, 1.0587785252292474`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
            0.058778525229247314`], 
           InsetBox["\<\"2\"\>", 
            Offset[{2, 2}, {1.0098350415244008`, 0.36779551960419476`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
            0.058778525229247314`], 
           InsetBox["\<\"4\"\>", 
            Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
            0.058778525229247314`], 
           InsetBox["\<\"5\"\>", 
            Offset[{2, 2}, {-0.8922779910659062, 0.36779551960419476`}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->{50, 50}], ",", 
   RowBox[{"{", 
    RowBox[{
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v12x3x4, $CellContext`v1x23x4, \
$CellContext`v1x24x3, $CellContext`v1x2x3x4}, {{{4, 1}, {4, 2}, {4, 3}}, 
               Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v1x23x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v12x3x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v1x24x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v1x24x3 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v12x3x4 -> Rotate[
                   Row[{"12", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
                   Pi], $CellContext`v1x23x4 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "23", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v12x3x4 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x3 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x23x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x2x3x4 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.03384563758389261], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{1., 1.}, {0., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {1., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {2., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.02261146496815286], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"12\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 0.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"23\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.0226114649681528`, 0.02261146496815286}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 0.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {2.022611464968153, 0.02261146496815286}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.0226114649681528`, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", "4", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
                    GraphHighlight -> {1, 2}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.1166365625000001, -0.9826615625}, 
                    0.014858455914104368`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.1166365625, -1.2159346875}, 
                    0.014858455914104368`], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1.1166365625, -0.9826615625}, 
                    0.014858455914104368`], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{0.6166365625000001, -0.11663656249999999`}, 
                    0.014858455914104368`], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-3.3306690738754696`*^-16, 
                    50.112009135755116`}, {-34.11200913575501, 
                    26.816039196635792`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "3", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {3, 4}}}, {GraphHighlight -> {
                    UndirectedEdge[1, 2]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612244938`, 
                    50.110408680524976`}, {-32.1104086805252, 
                    25.163265306122298`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", "1", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{3, 4, 1}, {Null, {{1, 2}, {3, 1}, {3, 2}}}, {
                    GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.01273], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 0.}, 0.01273], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0.5, 0.866025}, 0.01273], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$3"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612244872`, 
                    50.11017398495273}, {-30.11017398495277, 
                    21.97511210035216}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], ",", 
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v13x24, $CellContext`v13x2x4, \
$CellContext`v1x23x4, $CellContext`v1x24x3, $CellContext`v1x2x3x4}, {{{2, 
               1}, {4, 1}, {5, 2}, {5, 3}, {5, 4}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v1x23x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v13x2x4, $CellContext`v13x24] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v1x24x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v13x2x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x24x3, $CellContext`v13x24] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v1x24x3 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
                   Pi], $CellContext`v13x2x4 -> Rotate[
                   Row[{"13", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x23x4 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "23", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], Rational[1, 6] 
                   Pi], $CellContext`v13x24 -> Rotate[
                   Row[{"13", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24"}], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v13x24 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x3 -> 
                 RGBColor[1, 0, 0], $CellContext`v13x2x4 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x23x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x2x3x4 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.03384563758389261], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{2., 1.}, {0., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {0., 1.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {1., 1.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {2., 1.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.02261146496815286], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"13\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.02261146496815286], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"13\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {0.02261146496815286, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"23\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.0226114649681528`, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 1.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {2.022611464968153, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 2.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.0226114649681528`, 2.022611464968153}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", 
                 FractionBox["9", "2"], ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 4}, {3, 4}}}, {
                    GraphHighlight -> {1, 3}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612244705`, 
                    50.110163751595906`}, {-32.11016375159589, 
                    25.16326530612274}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "3", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {3, 4}}}, {GraphHighlight -> {
                    UndirectedEdge[1, 3]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.1632653061224496, 
                    50.11040868052505}, {-32.11040868052504, 
                    25.16326530612234}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", 
                 FractionBox["3", "2"], ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 4}, {Null, {{1, 2}, {1, 3}}}, {
                    GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 0.}, 0.01273], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 0.}, 0.01273], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0.5, 0.866025}, 0.01273], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$3"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{0., 
                    50.11235651325522}, {-30.112356513255392`, 
                    21.832968846164448`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], ",", 
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v14x23, $CellContext`v14x2x3, \
$CellContext`v1x23x4, $CellContext`v1x24x3, $CellContext`v1x2x3x4}, {{{2, 
               1}, {3, 1}, {5, 2}, {5, 3}, {5, 4}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v1x23x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x23x4, $CellContext`v14x23] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v14x2x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v1x24x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v14x2x3, $CellContext`v14x23] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v14x23 -> Rotate[
                   Row[{"14", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "23"}], Rational[1, 6] 
                   Pi], $CellContext`v14x2x3 -> Rotate[
                   Row[{"14", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
                   Pi], $CellContext`v1x24x3 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x23x4 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "23", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v14x23 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x3 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x23x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v14x2x3 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x2x3x4 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.03384563758389261], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {0., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {0., 1.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {1., 1.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 2.}, {2., 1.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.02261146496815286], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"14\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"23\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.02261146496815286], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"14\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {0.02261146496815286, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"23\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.0226114649681528`, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{2., 1.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {2.022611464968153, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 2.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {1.0226114649681528`, 2.022611464968153}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", 
                 FractionBox["9", "2"], ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {3, 4}}}, {
                    GraphHighlight -> {1, 4}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612245027`, 
                    50.11016375159595}, {-32.11016375159631, 
                    25.163265306122305`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "3", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {3, 4}}}, {GraphHighlight -> {
                    UndirectedEdge[1, 4]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False], 
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.1632653061224496, 
                    50.11040868052499}, {-32.11040868052544, 
                    25.16326530612234}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", 
                 FractionBox["3", "2"], ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3}, {Null, {{1, 2}, {1, 3}}}, {
                    GraphHighlight -> {1}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 0.}, 0.01273], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 0.}, 0.01273], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0.5, 0.866025}, 0.01273], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$3"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-2.220446049250313*^-16, 
                    50.11235651325521}, {-30.112356513255094`, 
                    21.83296884616457}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )], ",", 
     TemplateBox[{GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             
             Graph[{$CellContext`v1x234, $CellContext`v1x23x4, \
$CellContext`v1x24x3, $CellContext`v1x2x34, $CellContext`v1x2x3x4}, {{{2, 
               1}, {3, 1}, {4, 1}, {5, 2}, {5, 3}, {5, 4}}, Null}, {
              EdgeStyle -> {
                DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v1x23x4] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}], 
                 DirectedEdge[$CellContext`v1x24x3, $CellContext`v1x234] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x34, $CellContext`v1x234] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[0, 0, 1]}], 
                 DirectedEdge[$CellContext`v1x23x4, $CellContext`v1x234] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v1x2x34] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 1, 0]}], 
                 DirectedEdge[$CellContext`v1x2x3x4, $CellContext`v1x24x3] -> 
                 Directive[{
                    Thickness[Large], 
                    RGBColor[1, 0, 0]}]}, 
               GraphLayout -> {
                "Dimension" -> 2, "VertexLayout" -> 
                 "LayeredDigraphEmbedding"}, ImageSize -> 400, 
               VertexLabels -> {$CellContext`v1x24x3 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "24", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x34 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "34"}], Rational[1, 6] 
                   Pi], $CellContext`v1x2x3x4 -> Rotate[
                   Framed[
                    Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "2", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "3", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]]], Rational[1, 6] 
                   Pi], $CellContext`v1x234 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "234"}], Rational[1, 6] 
                   Pi], $CellContext`v1x23x4 -> Rotate[
                   Row[{"1", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "23", 
                    Style["\[Earth]", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12], "4"}], Rational[1, 6] Pi]}, 
               VertexStyle -> {$CellContext`v1x2x34 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x234 -> 
                 RGBColor[0, 0, 1], $CellContext`v1x24x3 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x23x4 -> 
                 RGBColor[1, 0, 0], $CellContext`v1x2x3x4 -> 
                 RGBColor[1, 0, 0]}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[0.03384563758389261], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              StyleBox[
               ArrowBox[{{-1., 1.}, {0., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 1.}, {0., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{1., 1.}, {0., 0.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[0, 0, 1]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 2.}, {-1., 1.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 2.}, {0., 1.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 0, 0]}], StripOnInput -> False], 
              StyleBox[
               ArrowBox[{{0., 2.}, {1., 1.}}, 0.02261146496815286], 
               Directive[{
                 Thickness[Large], 
                 RGBColor[1, 1, 0]}], StripOnInput -> False]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               StyleBox[
                DiskBox[{0., 0.}, 0.02261146496815286], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], 
                    "\"234\""}, "RowDefault"], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {0.02261146496815286, 0.02261146496815286}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{-1., 1.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"23\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {-0.9773885350318472, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 1.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"24\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\""}, 
                   "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {0.02261146496815286, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{1., 1.}, 0.02261146496815286], 
                RGBColor[0, 0, 1], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"34\""},
                    "RowDefault"], BoxRotation -> 0.5235987755982988], 
                 TraditionalForm], 
                Offset[{2, 2}, {1.0226114649681528`, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               StyleBox[
                DiskBox[{0., 2.}, 0.02261146496815286], 
                RGBColor[1, 0, 0], StripOnInput -> False], 
               InsetBox[
                FormBox[
                 RotationBox[
                  FrameBox[
                   TemplateBox[{"\"1\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"2\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"3\"", 
                    StyleBox["\"\[Earth]\"", 
                    RGBColor[0, 
                    Rational[4, 9], 0], 12, StripOnInput -> False], "\"4\""}, 
                    "RowDefault"], FrameStyle -> Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Tiny]], StripOnInput -> False], BoxRotation -> 
                  0.5235987755982988], TraditionalForm], 
                Offset[{2, 2}, {0.02261146496815286, 2.022611464968153}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {FrameTicks -> None, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> 400, 
         DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
         RowBox[{
           RowBox[{"3", "\[UndirectedEdge]", "4"}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 1, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> 
                 RGBColor[0.6666666666666666, 0.6666666666666666, 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 1, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 1, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 1, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Without\"", ",", 
                 FractionBox["9", "2"], ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {1, 3}, {1, 4}}}, {
                    GraphHighlight -> {4, 3}, 
                    GraphHighlightStyle -> {"Thick"}, GraphLayout -> 
                    "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612244539`, 
                    50.11016375159589}, {-32.110163751596275`, 
                    25.1632653061222}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           "\"==\"", ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[1, 0, 0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[1, 0, 0]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[1, 0, 0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"With\"", ",", "3", ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {3, 4}}}, {GraphHighlight -> {
                    UndirectedEdge[3, 4]}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}], 
                    LineBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    StyleBox[
                    LineBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}], 
                    Directive[
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]], StripOnInput -> False]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1.8369701987210297`*^-16, 1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{-1., -2.4492935982947064`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{1., 1.2246467991473532`*^-16}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$3"], 
                    TagBox[{
                    TagBox[
                    
                    DiskBox[{6.123233995736766*^-17, -1.}, 
                    0.02261146496815286], "DynamicName", BoxID -> 
                    "VertexID$4"], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$4"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612244938`, 
                    50.11040868052491}, {-32.11040868052517, 
                    25.163265306122312`}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}], ",", 
           RowBox[{
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   RGBColor[0, 0, 1], 
                   RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                 True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                 FrameTicks -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], PlotRangePadding -> 
                 None], "RGBColor[0, 0, 1]"], Appearance -> None, 
               BaseStyle -> {}, BaselinePosition -> Baseline, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = 
                   RGBColor[0, 0, 1]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], DefaultBaseStyle -> {}, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
             "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Contract\"", ",", 
                 FractionBox["3", "2"], ",", 
                 GraphicsBox[
                  NamespaceBox["NetworkGraphics", 
                   DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {Null, {{1, 2}, {3, 1}}}, {
                    GraphHighlight -> {3}, GraphHighlightStyle -> {"Thick"}, 
                    GraphLayout -> "TutteEmbedding", ImageSize -> 50, 
                    VertexLabels -> {"Name"}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[{
                    TagBox[
                    DiskBox[{0., 0.}, 0.01273], "DynamicName", BoxID -> 
                    "VertexID$1"], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$1"], 
                    TagBox[{
                    TagBox[
                    DiskBox[{1., 0.}, 0.01273], "DynamicName", BoxID -> 
                    "VertexID$2"], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> "VertexLabelID$2"], 
                    TagBox[{
                    TagBox[
                    StyleBox[
                    DiskBox[{0.5, 0.866025}, 0.01273], 
                    Directive[
                    RGBColor[0.85, 0.5, 0.5], 
                    EdgeForm[{
                    Thickness[Large], 
                    Hue[1, 1, 0.7], 
                    Opacity[1]}]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                    "DynamicName", BoxID -> 
                    "VertexLabelID$3"]}}], $CellContext`flag}, 
                    TagBox[
                    DynamicBox[
                    GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}, 
                    ImageSizeCache -> {{-0.16326530612244927`, 
                    50.110173984952745`}, {-30.110173984953168`, 
                    21.97511210035177}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                    AllowKernelInitialization -> False, 
                    UnsavedVariables :> {$CellContext`flag}]], 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}, FrameTicks -> None, GridLinesStyle -> 
                  Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 50]}], "}"}]}]}], 
         "}"}]},
      "Labeled",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"]}, {
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}]& ),
      InterpretationFunction->(RowBox[{"Labeled", "[", 
         RowBox[{#, ",", #2}], "]"}]& )]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7595093141541986`*^9, 3.759509366839265*^9, 
  3.759549920613698*^9, 3.759550122941276*^9, 3.759550157221774*^9, 
  3.7595502140180144`*^9, 3.759550381037126*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1520, 781},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.1999999999999, 841.8}},
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 29, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 108, 1, 70, "Section"],
Cell[691, 25, 1139, 30, 112, "Input"],
Cell[1833, 57, 4145, 101, 332, "Input"],
Cell[5981, 160, 860, 21, 132, "Input"],
Cell[6844, 183, 5784, 137, 472, "Input"],
Cell[12631, 322, 7180, 149, 652, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[19848, 476, 106, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[19979, 481, 173, 3, 31, "Input"],
Cell[20155, 486, 3620, 80, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23812, 571, 238, 5, 31, "Input"],
Cell[24053, 578, 295067, 6072, 1433, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319157, 6655, 262, 5, 31, "Input"],
Cell[319422, 6662, 125709, 2599, 1129, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
