(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1027453,      18809]
NotebookOptionsPosition[   1020841,      18693]
NotebookOutlinePosition[   1021184,      18708]
CellTagsIndexPosition[   1021141,      18705]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"FindFullFormula", "[", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"Range", "[", "5", "]"}], ",", 
    RowBox[{"{", "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7746933540571327`*^9, 3.774693354774664*^9}},
 CellLabel->
  "In[603]:=",ExpressionUUID->"46dce005-2315-47e2-a522-80207863ca2c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "v1x2x3x4x5", ",", "v1x2x3x45", ",", "v1x2x35x4", ",", "v1x2x34x5", ",", 
   "v1x2x345", ",", "v1x25x3x4", ",", "v1x25x34", ",", "v1x24x3x5", ",", 
   "v1x245x3", ",", "v1x24x35", ",", "v1x23x4x5", ",", "v1x235x4", ",", 
   "v1x234x5", ",", "v1x23x45", ",", "v1x2345", ",", "v15x2x3x4", ",", 
   "v15x2x34", ",", "v15x24x3", ",", "v15x23x4", ",", "v15x234", ",", 
   "v14x2x3x5", ",", "v145x2x3", ",", "v14x2x35", ",", "v14x25x3", ",", 
   "v14x23x5", ",", "v14x235", ",", "v145x23", ",", "v13x2x4x5", ",", 
   "v135x2x4", ",", "v134x2x5", ",", "v13x2x45", ",", "v1345x2", ",", 
   "v13x25x4", ",", "v134x25", ",", "v13x24x5", ",", "v13x245", ",", 
   "v135x24", ",", "v12x3x4x5", ",", "v125x3x4", ",", "v124x3x5", ",", 
   "v12x3x45", ",", "v1245x3", ",", "v123x4x5", ",", "v123x45", ",", 
   "v12x35x4", ",", "v1235x4", ",", "v124x35", ",", "v12x34x5", ",", 
   "v1234x5", ",", "v12x345", ",", "v125x34", ",", "v12345"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7746933456415105`*^9, 3.774693355923312*^9}},
 CellLabel->
  "Out[603]=",ExpressionUUID->"1a744589-ae9f-4511-bf3b-26e5ac17c925"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"lattice", "=", 
   RowBox[{"FormulaGraphReverse2", "[", 
    RowBox[{"FindFullFormula", "[", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"Range", "[", "7", "]"}], ",", 
       RowBox[{"{", "}"}]}], "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7746932835377903`*^9, 3.7746933870374064`*^9}, {
  3.77469365520026*^9, 3.7746936692782555`*^9}},
 CellLabel->
  "In[621]:=",ExpressionUUID->"a877685a-d017-49e0-b20b-1d4a3ef9b7f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeList", "[", "lattice", "]"}]], "Input",
 CellChangeTimes->{{3.774693572171404*^9, 3.774693577454173*^9}},
 CellLabel->
  "In[613]:=",ExpressionUUID->"3e46adcf-1dd9-4489-98ad-3622dacfd242"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"v1234x5", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v1235x4", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v123x45", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v1245x3", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v124x35", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v125x34", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v12x345", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v1345x2", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v134x25", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v135x24", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v13x245", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v145x23", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v14x235", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v15x234", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v1x2345", "\[DirectedEdge]", "v12345"}], ",", 
   RowBox[{"v123x4x5", "\[DirectedEdge]", "v1234x5"}], ",", 
   RowBox[{"v124x3x5", "\[DirectedEdge]", "v1234x5"}], ",", 
   RowBox[{"v12x34x5", "\[DirectedEdge]", "v1234x5"}], ",", 
   RowBox[{"v134x2x5", "\[DirectedEdge]", "v1234x5"}], ",", 
   RowBox[{"v13x24x5", "\[DirectedEdge]", "v1234x5"}], ",", 
   RowBox[{"v14x23x5", "\[DirectedEdge]", "v1234x5"}], ",", 
   RowBox[{"v1x234x5", "\[DirectedEdge]", "v1234x5"}], ",", 
   RowBox[{"v123x4x5", "\[DirectedEdge]", "v1235x4"}], ",", 
   RowBox[{"v125x3x4", "\[DirectedEdge]", "v1235x4"}], ",", 
   RowBox[{"v12x35x4", "\[DirectedEdge]", "v1235x4"}], ",", 
   RowBox[{"v135x2x4", "\[DirectedEdge]", "v1235x4"}], ",", 
   RowBox[{"v13x25x4", "\[DirectedEdge]", "v1235x4"}], ",", 
   RowBox[{"v15x23x4", "\[DirectedEdge]", "v1235x4"}], ",", 
   RowBox[{"v1x235x4", "\[DirectedEdge]", "v1235x4"}], ",", 
   RowBox[{"v123x4x5", "\[DirectedEdge]", "v123x45"}], ",", 
   RowBox[{"v12x3x45", "\[DirectedEdge]", "v123x45"}], ",", 
   RowBox[{"v13x2x45", "\[DirectedEdge]", "v123x45"}], ",", 
   RowBox[{"v1x23x45", "\[DirectedEdge]", "v123x45"}], ",", 
   RowBox[{"v12x3x4x5", "\[DirectedEdge]", "v123x4x5"}], ",", 
   RowBox[{"v13x2x4x5", "\[DirectedEdge]", "v123x4x5"}], ",", 
   RowBox[{"v1x23x4x5", "\[DirectedEdge]", "v123x4x5"}], ",", 
   RowBox[{"v124x3x5", "\[DirectedEdge]", "v1245x3"}], ",", 
   RowBox[{"v125x3x4", "\[DirectedEdge]", "v1245x3"}], ",", 
   RowBox[{"v12x3x45", "\[DirectedEdge]", "v1245x3"}], ",", 
   RowBox[{"v145x2x3", "\[DirectedEdge]", "v1245x3"}], ",", 
   RowBox[{"v14x25x3", "\[DirectedEdge]", "v1245x3"}], ",", 
   RowBox[{"v15x24x3", "\[DirectedEdge]", "v1245x3"}], ",", 
   RowBox[{"v1x245x3", "\[DirectedEdge]", "v1245x3"}], ",", 
   RowBox[{"v124x3x5", "\[DirectedEdge]", "v124x35"}], ",", 
   RowBox[{"v12x35x4", "\[DirectedEdge]", "v124x35"}], ",", 
   RowBox[{"v14x2x35", "\[DirectedEdge]", "v124x35"}], ",", 
   RowBox[{"v1x24x35", "\[DirectedEdge]", "v124x35"}], ",", 
   RowBox[{"v12x3x4x5", "\[DirectedEdge]", "v124x3x5"}], ",", 
   RowBox[{"v14x2x3x5", "\[DirectedEdge]", "v124x3x5"}], ",", 
   RowBox[{"v1x24x3x5", "\[DirectedEdge]", "v124x3x5"}], ",", 
   RowBox[{"v125x3x4", "\[DirectedEdge]", "v125x34"}], ",", 
   RowBox[{"v12x34x5", "\[DirectedEdge]", "v125x34"}], ",", 
   RowBox[{"v15x2x34", "\[DirectedEdge]", "v125x34"}], ",", 
   RowBox[{"v1x25x34", "\[DirectedEdge]", "v125x34"}], ",", 
   RowBox[{"v12x3x4x5", "\[DirectedEdge]", "v125x3x4"}], ",", 
   RowBox[{"v15x2x3x4", "\[DirectedEdge]", "v125x3x4"}], ",", 
   RowBox[{"v1x25x3x4", "\[DirectedEdge]", "v125x3x4"}], ",", 
   RowBox[{"v12x34x5", "\[DirectedEdge]", "v12x345"}], ",", 
   RowBox[{"v12x35x4", "\[DirectedEdge]", "v12x345"}], ",", 
   RowBox[{"v12x3x45", "\[DirectedEdge]", "v12x345"}], ",", 
   RowBox[{"v1x2x345", "\[DirectedEdge]", "v12x345"}], ",", 
   RowBox[{"v12x3x4x5", "\[DirectedEdge]", "v12x34x5"}], ",", 
   RowBox[{"v1x2x34x5", "\[DirectedEdge]", "v12x34x5"}], ",", 
   RowBox[{"v12x3x4x5", "\[DirectedEdge]", "v12x35x4"}], ",", 
   RowBox[{"v1x2x35x4", "\[DirectedEdge]", "v12x35x4"}], ",", 
   RowBox[{"v12x3x4x5", "\[DirectedEdge]", "v12x3x45"}], ",", 
   RowBox[{"v1x2x3x45", "\[DirectedEdge]", "v12x3x45"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v12x3x4x5"}], ",", 
   RowBox[{"v134x2x5", "\[DirectedEdge]", "v1345x2"}], ",", 
   RowBox[{"v135x2x4", "\[DirectedEdge]", "v1345x2"}], ",", 
   RowBox[{"v13x2x45", "\[DirectedEdge]", "v1345x2"}], ",", 
   RowBox[{"v145x2x3", "\[DirectedEdge]", "v1345x2"}], ",", 
   RowBox[{"v14x2x35", "\[DirectedEdge]", "v1345x2"}], ",", 
   RowBox[{"v15x2x34", "\[DirectedEdge]", "v1345x2"}], ",", 
   RowBox[{"v1x2x345", "\[DirectedEdge]", "v1345x2"}], ",", 
   RowBox[{"v134x2x5", "\[DirectedEdge]", "v134x25"}], ",", 
   RowBox[{"v13x25x4", "\[DirectedEdge]", "v134x25"}], ",", 
   RowBox[{"v14x25x3", "\[DirectedEdge]", "v134x25"}], ",", 
   RowBox[{"v1x25x34", "\[DirectedEdge]", "v134x25"}], ",", 
   RowBox[{"v13x2x4x5", "\[DirectedEdge]", "v134x2x5"}], ",", 
   RowBox[{"v14x2x3x5", "\[DirectedEdge]", "v134x2x5"}], ",", 
   RowBox[{"v1x2x34x5", "\[DirectedEdge]", "v134x2x5"}], ",", 
   RowBox[{"v135x2x4", "\[DirectedEdge]", "v135x24"}], ",", 
   RowBox[{"v13x24x5", "\[DirectedEdge]", "v135x24"}], ",", 
   RowBox[{"v15x24x3", "\[DirectedEdge]", "v135x24"}], ",", 
   RowBox[{"v1x24x35", "\[DirectedEdge]", "v135x24"}], ",", 
   RowBox[{"v13x2x4x5", "\[DirectedEdge]", "v135x2x4"}], ",", 
   RowBox[{"v15x2x3x4", "\[DirectedEdge]", "v135x2x4"}], ",", 
   RowBox[{"v1x2x35x4", "\[DirectedEdge]", "v135x2x4"}], ",", 
   RowBox[{"v13x24x5", "\[DirectedEdge]", "v13x245"}], ",", 
   RowBox[{"v13x25x4", "\[DirectedEdge]", "v13x245"}], ",", 
   RowBox[{"v13x2x45", "\[DirectedEdge]", "v13x245"}], ",", 
   RowBox[{"v1x245x3", "\[DirectedEdge]", "v13x245"}], ",", 
   RowBox[{"v13x2x4x5", "\[DirectedEdge]", "v13x24x5"}], ",", 
   RowBox[{"v1x24x3x5", "\[DirectedEdge]", "v13x24x5"}], ",", 
   RowBox[{"v13x2x4x5", "\[DirectedEdge]", "v13x25x4"}], ",", 
   RowBox[{"v1x25x3x4", "\[DirectedEdge]", "v13x25x4"}], ",", 
   RowBox[{"v13x2x4x5", "\[DirectedEdge]", "v13x2x45"}], ",", 
   RowBox[{"v1x2x3x45", "\[DirectedEdge]", "v13x2x45"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v13x2x4x5"}], ",", 
   RowBox[{"v145x2x3", "\[DirectedEdge]", "v145x23"}], ",", 
   RowBox[{"v14x23x5", "\[DirectedEdge]", "v145x23"}], ",", 
   RowBox[{"v15x23x4", "\[DirectedEdge]", "v145x23"}], ",", 
   RowBox[{"v1x23x45", "\[DirectedEdge]", "v145x23"}], ",", 
   RowBox[{"v14x2x3x5", "\[DirectedEdge]", "v145x2x3"}], ",", 
   RowBox[{"v15x2x3x4", "\[DirectedEdge]", "v145x2x3"}], ",", 
   RowBox[{"v1x2x3x45", "\[DirectedEdge]", "v145x2x3"}], ",", 
   RowBox[{"v14x23x5", "\[DirectedEdge]", "v14x235"}], ",", 
   RowBox[{"v14x25x3", "\[DirectedEdge]", "v14x235"}], ",", 
   RowBox[{"v14x2x35", "\[DirectedEdge]", "v14x235"}], ",", 
   RowBox[{"v1x235x4", "\[DirectedEdge]", "v14x235"}], ",", 
   RowBox[{"v14x2x3x5", "\[DirectedEdge]", "v14x23x5"}], ",", 
   RowBox[{"v1x23x4x5", "\[DirectedEdge]", "v14x23x5"}], ",", 
   RowBox[{"v14x2x3x5", "\[DirectedEdge]", "v14x25x3"}], ",", 
   RowBox[{"v1x25x3x4", "\[DirectedEdge]", "v14x25x3"}], ",", 
   RowBox[{"v14x2x3x5", "\[DirectedEdge]", "v14x2x35"}], ",", 
   RowBox[{"v1x2x35x4", "\[DirectedEdge]", "v14x2x35"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v14x2x3x5"}], ",", 
   RowBox[{"v15x23x4", "\[DirectedEdge]", "v15x234"}], ",", 
   RowBox[{"v15x24x3", "\[DirectedEdge]", "v15x234"}], ",", 
   RowBox[{"v15x2x34", "\[DirectedEdge]", "v15x234"}], ",", 
   RowBox[{"v1x234x5", "\[DirectedEdge]", "v15x234"}], ",", 
   RowBox[{"v15x2x3x4", "\[DirectedEdge]", "v15x23x4"}], ",", 
   RowBox[{"v1x23x4x5", "\[DirectedEdge]", "v15x23x4"}], ",", 
   RowBox[{"v15x2x3x4", "\[DirectedEdge]", "v15x24x3"}], ",", 
   RowBox[{"v1x24x3x5", "\[DirectedEdge]", "v15x24x3"}], ",", 
   RowBox[{"v15x2x3x4", "\[DirectedEdge]", "v15x2x34"}], ",", 
   RowBox[{"v1x2x34x5", "\[DirectedEdge]", "v15x2x34"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v15x2x3x4"}], ",", 
   RowBox[{"v1x234x5", "\[DirectedEdge]", "v1x2345"}], ",", 
   RowBox[{"v1x235x4", "\[DirectedEdge]", "v1x2345"}], ",", 
   RowBox[{"v1x23x45", "\[DirectedEdge]", "v1x2345"}], ",", 
   RowBox[{"v1x245x3", "\[DirectedEdge]", "v1x2345"}], ",", 
   RowBox[{"v1x24x35", "\[DirectedEdge]", "v1x2345"}], ",", 
   RowBox[{"v1x25x34", "\[DirectedEdge]", "v1x2345"}], ",", 
   RowBox[{"v1x2x345", "\[DirectedEdge]", "v1x2345"}], ",", 
   RowBox[{"v1x23x4x5", "\[DirectedEdge]", "v1x234x5"}], ",", 
   RowBox[{"v1x24x3x5", "\[DirectedEdge]", "v1x234x5"}], ",", 
   RowBox[{"v1x2x34x5", "\[DirectedEdge]", "v1x234x5"}], ",", 
   RowBox[{"v1x23x4x5", "\[DirectedEdge]", "v1x235x4"}], ",", 
   RowBox[{"v1x25x3x4", "\[DirectedEdge]", "v1x235x4"}], ",", 
   RowBox[{"v1x2x35x4", "\[DirectedEdge]", "v1x235x4"}], ",", 
   RowBox[{"v1x23x4x5", "\[DirectedEdge]", "v1x23x45"}], ",", 
   RowBox[{"v1x2x3x45", "\[DirectedEdge]", "v1x23x45"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v1x23x4x5"}], ",", 
   RowBox[{"v1x24x3x5", "\[DirectedEdge]", "v1x245x3"}], ",", 
   RowBox[{"v1x25x3x4", "\[DirectedEdge]", "v1x245x3"}], ",", 
   RowBox[{"v1x2x3x45", "\[DirectedEdge]", "v1x245x3"}], ",", 
   RowBox[{"v1x24x3x5", "\[DirectedEdge]", "v1x24x35"}], ",", 
   RowBox[{"v1x2x35x4", "\[DirectedEdge]", "v1x24x35"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v1x24x3x5"}], ",", 
   RowBox[{"v1x25x3x4", "\[DirectedEdge]", "v1x25x34"}], ",", 
   RowBox[{"v1x2x34x5", "\[DirectedEdge]", "v1x25x34"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v1x25x3x4"}], ",", 
   RowBox[{"v1x2x34x5", "\[DirectedEdge]", "v1x2x345"}], ",", 
   RowBox[{"v1x2x35x4", "\[DirectedEdge]", "v1x2x345"}], ",", 
   RowBox[{"v1x2x3x45", "\[DirectedEdge]", "v1x2x345"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v1x2x34x5"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v1x2x35x4"}], ",", 
   RowBox[{"v1x2x3x4x5", "\[DirectedEdge]", "v1x2x3x45"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7746935783943267`*^9},
 CellLabel->
  "Out[613]=",ExpressionUUID->"fd1fb00a-55ad-4aa4-ae78-ee9599ad2df1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReduceLattice", "[", "lattice_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vertexMap", "=", 
       RowBox[{"Association", "[", "]"}]}], ",", "vertices", ",", " ", 
      "edges", ",", " ", "edgeLabels"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"vertexMap", "[", "v", "]"}], "=", 
          RowBox[{"PartitionType", "[", 
           RowBox[{"SymbolToSets", "[", "v", "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"v", ",", 
           RowBox[{"VertexList", "[", "lattice", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<part 1 : \>\"", ",", "v"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"Monitor", "[", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"vertexMap", "[", 
            RowBox[{"e", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[DirectedEdge]", 
           RowBox[{"vertexMap", "[", 
            RowBox[{"e", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"{", 
           RowBox[{"e", ",", 
            RowBox[{"EdgeList", "[", "lattice", "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\"\<part 2 : \>\"", ",", "e"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edgeLabels", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"Rotate", " ", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"Pi", "/", "4"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"Left", ",", "\"\<Middle\>\""}], "}"}]}], "]"}]}], "&"}],
         ",", 
        RowBox[{"Tally", "[", "edges", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"DeleteDuplicates", "[", "edges", "]"}], ",", " ", 
       RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
       RowBox[{"EdgeLabels", "\[Rule]", "edgeLabels"}], ",", " ", 
       RowBox[{
       "GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7746933970545597`*^9, 3.7746936307647266`*^9}, {
   3.7746937713443303`*^9, 3.7746938207425113`*^9}, {3.7746951142383995`*^9, 
   3.774695178813572*^9}, {3.774695941841052*^9, 3.7746959474114647`*^9}, {
   3.77469603098882*^9, 3.7746960351882153`*^9}, {3.774696070020317*^9, 
   3.7746961427196507`*^9}, {3.7746961996130176`*^9, 3.7746962251825123`*^9}, 
   3.774696408987314*^9, {3.7746965112394853`*^9, 3.7746966043816833`*^9}, {
   3.7746968438641796`*^9, 3.7746968597152643`*^9}, {3.774772944631308*^9, 
   3.7747729822592206`*^9}},
 CellLabel->
  "In[718]:=",ExpressionUUID->"f7e29d03-18a4-4d06-8ba1-1aa30caa4a1c"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "\[DirectedEdge]", 
     RowBox[{"#", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"6", ",", "1"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", "7", "}"}]}], ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "2"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", "7", "}"}]}], ",", "21"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "3"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", "7", "}"}]}], ",", "35"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "1", ",", "1"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"6", ",", "1"}], "}"}]}], ",", "42"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "2", ",", "1"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"6", ",", "1"}], "}"}]}], ",", "105"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3", ",", "1"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"6", ",", "1"}], "}"}]}], ",", "70"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"5", ",", "1", ",", "1"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"5", ",", "2"}], "}"}]}], ",", "21"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "2", ",", "1"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"5", ",", "2"}], "}"}]}], ",", "105"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "2"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"5", ",", "2"}], "}"}]}], ",", "210"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "1", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1", ",", "1"}], "}"}]}], ",", "105"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"5", ",", "1", ",", "1"}], "}"}]}], ",", "210"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "2", ",", "1"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "3"}], "}"}]}], ",", "105"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "3", ",", "1"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "3"}], "}"}]}], ",", "140"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "2"}], "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "3"}], "}"}]}], ",", "105"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"4", ",", "1", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "2", ",", "1"}], "}"}]}], ",", "105"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "2", ",", "1"}], "}"}]}], ",", "420"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "2", ",", "1"}], "}"}]}], ",", "315"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", "140"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",", "105"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"3", ",", "3", ",", "1"}], "}"}]}], ",", "420"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "2"}], "}"}]}], ",", "210"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "2"}], "}"}]}], ",", "315"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}]}], ",", "210"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}]}], ",", "630"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
          "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",",
         "105"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
         "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}]}], ",", "315"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
          "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}]}], ",",
         "210"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
          "}"}], "\[DirectedEdge]", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
          "}"}]}], ",", "21"}], "}"}]}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.774695986860281*^9, 3.7746960201230335`*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[638]:=",ExpressionUUID->"abf62b0d-5c7c-42d4-842e-07b4442f833e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReduceLattice", "[", "lattice", "]"}]], "Input",
 CellChangeTimes->{{3.774693451436055*^9, 3.774693451606733*^9}, {
  3.7746938264734173`*^9, 3.774693827934559*^9}},
 CellLabel->
  "In[665]:=",ExpressionUUID->"e4789066-060b-4a32-95c5-51e30b04453f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{6, 1}, {7}, {5, 2}, {4, 3}, {5, 1, 1}, {4, 2, 1}, {3, 3, 1}, {3, 
       2, 2}, {4, 1, 1, 1}, {3, 2, 1, 1}, {2, 2, 2, 1}, {3, 1, 1, 1, 1}, {2, 
       2, 1, 1, 1}, {2, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 
       2}, {4, 2}, {5, 1}, {6, 1}, {7, 1}, {5, 3}, {6, 3}, {8, 3}, {9, 5}, {
       10, 5}, {6, 4}, {7, 4}, {8, 4}, {9, 6}, {10, 6}, {11, 6}, {12, 9}, {13,
        9}, {10, 7}, {10, 8}, {11, 8}, {12, 10}, {13, 10}, {14, 12}, {13, 
       11}, {14, 13}, {15, 14}}, Null}, {
      EdgeLabels -> {DirectedEdge[{3, 2, 1, 1}, {3, 2, 2}] -> Placed[
           Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{6, 1}, {7}] -> Placed[
           Rotate[7, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 2}, {7}] -> Placed[
           Rotate[21, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1}] -> Placed[
           Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1}, {3, 2, 1, 1}] -> Placed[
           Rotate[630, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1}, {6, 1}] -> Placed[
           Rotate[105, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1}, {3, 3, 1}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 1, 1, 1}, {5, 1, 1}] -> Placed[
           Rotate[105, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1}, {4, 1, 1, 1}] -> Placed[
           Rotate[105, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1}, {3, 2, 2}] -> Placed[
           Rotate[315, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1}, {4, 2, 1}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3}, {7}] -> Placed[
           Rotate[35, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1}] -> Placed[
           Rotate[21, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 1, 1, 1, 1}, {3, 2, 1, 1}] -> Placed[
           Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2}, {4, 3}] -> Placed[
           Rotate[105, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 1, 1}, {6, 1}] -> Placed[
           Rotate[42, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1}, {2, 2, 2, 1}] -> Placed[
           Rotate[315, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 1, 1}, {5, 2}] -> Placed[
           Rotate[21, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1}, {6, 1}] -> Placed[
           Rotate[70, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1}, {4, 3}] -> Placed[
           Rotate[105, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1}, {4, 3}] -> Placed[
           Rotate[140, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1}, {4, 2, 1}] -> Placed[
           Rotate[315, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1}] -> Placed[
           Rotate[105, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 1, 1, 1}, {4, 2, 1}] -> Placed[
           Rotate[105, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1}, {5, 1, 1}] -> Placed[
           Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 1, 1, 1, 1}, {4, 1, 1, 1}] -> Placed[
           Rotate[140, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1}, {5, 2}] -> Placed[
           Rotate[105, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2}, {5, 2}] -> Placed[
           Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}]}, GraphLayout -> 
       "LayeredDigraphEmbedding", VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {ArrowBox[{{0., 1.}, {1., 0.}}, 0.04847715736040609], 
         InsetBox[
          RotationBox["7",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 0.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 1.}, {1., 0.}}, 0.04847715736040609], InsetBox[
          RotationBox["21",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 0.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 1.}, {1., 0.}}, 0.04847715736040609], InsetBox[
          RotationBox["35",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 0.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.}, {0., 1.}}, 0.04847715736040609], InsetBox[
          RotationBox["42",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.}, {1., 1.}}, 0.04847715736040609], InsetBox[
          RotationBox["21",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.}, {0., 1.}}, 0.04847715736040609], InsetBox[
          RotationBox["105",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.}, {1., 1.}}, 0.04847715736040609], InsetBox[
          RotationBox["105",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.}, {2., 1.}}, 0.04847715736040609], InsetBox[
          RotationBox["105",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.}, {0., 1.}}, 0.04847715736040609], InsetBox[
          RotationBox["70",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.}, {2., 1.}}, 0.04847715736040609], InsetBox[
          RotationBox["140",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {2., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 2.}, {1., 1.}}, 0.04847715736040609], InsetBox[
          RotationBox["210",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {2., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 2.}, {2., 1.}}, 0.04847715736040609], InsetBox[
          RotationBox["105",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {2.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 3.}, {0., 2.}}, 0.04847715736040609], InsetBox[
          RotationBox["105",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 3.}, {1., 2.}}, 0.04847715736040609], InsetBox[
          RotationBox["105",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.}, {0., 2.}}, 0.04847715736040609], InsetBox[
          RotationBox["210",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.}, {1., 2.}}, 0.04847715736040609], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.}, {2., 2.}}, 0.04847715736040609], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.}, {3., 2.}}, 0.04847715736040609], InsetBox[
          RotationBox["210",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {2., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 3.}, {1., 2.}}, 0.04847715736040609], InsetBox[
          RotationBox["315",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 3.}, {3., 2.}}, 0.04847715736040609], InsetBox[
          RotationBox["315",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {2.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 4.}, {0., 3.}}, 0.04847715736040609], InsetBox[
          RotationBox["140",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 4.}, {1., 3.}}, 0.04847715736040609], InsetBox[
          RotationBox["210",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.}, {0., 3.}}, 0.04847715736040609], InsetBox[
          RotationBox["105",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.}, {1., 3.}}, 0.04847715736040609], InsetBox[
          RotationBox["630",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.}, {2., 3.}}, 0.04847715736040609], InsetBox[
          RotationBox["315",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 5.}, {0., 4.}}, 0.04847715736040609], InsetBox[
          RotationBox["105",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 4.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 5.}, {1., 4.}}, 0.04847715736040609], InsetBox[
          RotationBox["210",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 4.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 6.}, {0., 5.}}, 0.04847715736040609], InsetBox[
          RotationBox["21",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 5.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.04847715736040609], InsetBox[
          RowBox[{"{", 
           RowBox[{"6", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.04847715736040609, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", "7", "}"}], 
          Offset[{2, 2}, {1.0484771573604061, 0.04847715736040609}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"5", ",", "2"}], "}"}], 
          Offset[{2, 2}, {1.0484771573604061, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "3"}], "}"}], 
          Offset[{2, 2}, {2.048477157360406, 1.0484771573604061}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"5", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.04847715736040609, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.0484771573604061, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "1"}], "}"}], 
          Offset[{2, 2}, {2.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{3., 2.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "2"}], "}"}], 
          Offset[{2, 2}, {3.048477157360406, 2.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.04847715736040609, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.0484771573604061, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {2.048477157360406, 3.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 4.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.04847715736040609, 4.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 4.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.0484771573604061, 4.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 5.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.04847715736040609, 5.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 6.}, 0.04847715736040609], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.04847715736040609, 6.048477157360406}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{396.45301732840426`, Automatic}]], "Output",
 CellChangeTimes->{{3.7746934527604036`*^9, 3.774693470088879*^9}, {
   3.774693605568082*^9, 3.7746936329356947`*^9}, 3.7746937506710434`*^9, 
   3.774693795647019*^9, 3.7746938292468705`*^9, 3.774695155111809*^9, 
   3.774695199609615*^9, 3.774695953978645*^9, 3.774696040635775*^9, 
   3.77469607385671*^9, {3.7746961118618584`*^9, 3.774696148495336*^9}, 
   3.774696231654011*^9, 3.7746964178777065`*^9, {3.774696524292588*^9, 
   3.7746965495633345`*^9}, {3.774696582866871*^9, 3.774696609336598*^9}, {
   3.774696854113472*^9, 3.774696864175721*^9}},
 CellLabel->
  "Out[665]=",ExpressionUUID->"577aa951-1afe-4e6e-ba5c-6fc892b394bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReduceLattice", "[", 
  RowBox[{"FormulaGraphReverse2", "[", 
   RowBox[{"FindFullFormula", "[", 
    RowBox[{"MinimalGraph", "[", "6", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7746938408008537`*^9, 3.774693851436327*^9}},
 CellLabel->
  "In[627]:=",ExpressionUUID->"aa31b7dc-9734-472d-945f-0e351601735d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{3, 1, 1, 1, 1}, {3, 2, 1, 1}, {2, 2, 1, 1, 1}, {2, 1, 1, 1, 1, 
       1}, {1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 1}, {4, 3}, {5, 4}}, 
       Null}, {VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[{{0., 1.}, {1., 0.}}, 0.030239520958083826`], 
        ArrowBox[{{1., 1.}, {1., 0.}}, 0.030239520958083826`], 
        ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`], 
        ArrowBox[{{0., 2.}, {1., 1.}}, 0.030239520958083826`], 
        ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.030239520958083826], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.030239520958083826, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.030239520958083826], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.030239520958084, 0.030239520958083826}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.030239520958083826], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.030239520958084, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.030239520958083826], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.030239520958083826, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.030239520958083826], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.030239520958083826, 3.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.774693852762878*^9},
 CellLabel->
  "Out[627]=",ExpressionUUID->"8dc59477-4bd7-49ba-a2a5-764a24e15923"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ferrers", "[", 
  RowBox[{"{", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.774693868108642*^9, 3.774693871307087*^9}, {
  3.7746947701342807`*^9, 3.7746948102732162`*^9}},
 CellLabel->
  "In[630]:=",ExpressionUUID->"db423a3b-94f2-48ad-b9b1-8bba7e98b254"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Posets`Private`UpFerrers", "[", 
     RowBox[{"#1", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "}"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7746947823841305`*^9, 3.77469481103768*^9}},
 CellLabel->
  "Out[630]=",ExpressionUUID->"c53163ac-c2e1-4c35-96c4-1e79bab0ecce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReduceLattice", "[", 
  RowBox[{"FormulaGraphReverse2", "[", 
   RowBox[{"FindFullFormula", "[", 
    RowBox[{"JacobsThalGraph", "[", "6", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7747101003955116`*^9, 3.774710104656495*^9}},
 CellLabel->
  "In[666]:=",ExpressionUUID->"4299bf2f-9a43-4e5d-8f38-034087aca429"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{4, 4, 1, 1}, {4, 4, 2}, {4, 3, 2, 1}, {4, 2, 2, 2}, {4, 3, 1, 1, 
       1}, {4, 2, 2, 1, 1}, {3, 3, 2, 1, 1}, {3, 2, 2, 2, 1}, {4, 2, 1, 1, 1, 
       1}, {3, 3, 1, 1, 1, 1}, {3, 2, 2, 1, 1, 1}, {2, 2, 2, 2, 2}, {2, 2, 2, 
       2, 1, 1}, {4, 1, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1, 1, 1}, {2, 2, 2, 1, 1,
        1, 1}, {3, 1, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1, 1, 1}, {3, 3, 2, 
       2}, {2, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}, {{{1,
        2}, {3, 2}, {4, 2}, {5, 1}, {6, 1}, {5, 3}, {6, 3}, {7, 3}, {8, 3}, {
       9, 5}, {10, 5}, {11, 5}, {6, 4}, {8, 4}, {12, 4}, {9, 6}, {11, 6}, {13,
        6}, {14, 9}, {15, 9}, {16, 9}, {17, 14}, {18, 14}, {10, 7}, {11, 7}, {
       15, 10}, {7, 19}, {8, 19}, {11, 8}, {13, 8}, {15, 11}, {16, 11}, {17, 
       15}, {18, 15}, {20, 17}, {13, 12}, {16, 13}, {18, 16}, {20, 18}, {21, 
       20}}, Null}, {
      EdgeLabels -> {
        DirectedEdge[{3, 1, 1, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[144, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1, 1, 1}, {3, 2, 2, 1, 1, 1}] -> Placed[
           Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1, 1, 1}, {3, 2, 2, 2, 1}] -> Placed[
           Rotate[456, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1, 1, 1}, {4, 2, 2, 1, 1}] -> Placed[
           Rotate[36, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1, 1, 1, 1}, {4, 3, 1, 1, 1}] -> Placed[
           Rotate[32, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1, 1, 1}, {2, 2, 2, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[822, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3, 2, 1}, {4, 4, 2}] -> Placed[
           Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 2, 1, 1}, {4, 4, 1, 1}] -> Placed[
           Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3, 1, 1, 1}, {4, 3, 2, 1}] -> Placed[
           Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 1, 1, 1, 1, 1, 1}, {4, 2, 1, 1, 1, 1}] -> Placed[
           Rotate[14, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 2, 1, 1}, {4, 3, 2, 1}] -> Placed[
           Rotate[24, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 1, 1, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 4, 1, 1}, {4, 4, 2}] -> Placed[
           Rotate[1, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 2, 2}, {4, 4, 2}] -> Placed[
           Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 2, 1}, {4, 2, 2, 2}] -> Placed[
           Rotate[24, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 2, 1, 1}, {4, 3, 2, 1}] -> Placed[
           Rotate[32, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 2, 2}, {4, 2, 2, 2}] -> Placed[
           Rotate[18, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3, 1, 1, 1}, {4, 4, 1, 1}] -> Placed[
           Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1, 1, 1}, {4, 2, 2, 1, 1}] -> Placed[
           Rotate[72, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[48, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1, 1, 1}, {3, 3, 1, 1, 1, 1}] -> Placed[
           Rotate[216, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 2, 1}, {4, 3, 2, 1}] -> Placed[
           Rotate[24, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 2, 1, 1}, {3, 3, 2, 2}] -> Placed[
           Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 2, 1, 1}, {3, 2, 2, 2, 1}] -> Placed[
           Rotate[456, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1, 1, 1}, {4, 2, 1, 1, 1, 1}] -> Placed[
           Rotate[42, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 2, 1, 1}, {2, 2, 2, 2, 2}] -> Placed[
           Rotate[155, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[432, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1, 1, 1}, {4, 2, 1, 1, 1, 1}] -> Placed[
           Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1, 1, 1}, {3, 2, 2, 1, 1, 1}] -> Placed[
           Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1, 1, 1}, {2, 2, 2, 2, 1, 1}] -> Placed[
           Rotate[780, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[260, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 2, 1}, {3, 3, 2, 2}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 2, 1, 1}, {4, 2, 2, 2}] -> Placed[
           Rotate[18, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1, 1, 1}, {3, 3, 2, 1, 1}] -> Placed[
           Rotate[384, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1, 1,
            1}] -> Placed[
           Rotate[21, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1, 1, 1}, {4, 3, 1, 1, 1}] -> Placed[
           Rotate[24, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1, 1, 1}, {4, 3, 1, 1, 1}] -> Placed[
           Rotate[24, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1, 1, 1, 1}, {3, 3, 2, 1, 1}] -> Placed[
           Rotate[64, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 2, 1, 1}, {4, 2, 2, 1, 1}] -> Placed[
           Rotate[54, Rational[1, 4] Pi], {Left, "Middle"}]}, GraphLayout -> 
       "LayeredDigraphEmbedding", VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        0.033363526570048305`], {
         ArrowBox[{{0., 1.}, {0., 0.}}, 0.05338164251207729], InsetBox[
          RotationBox["1",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 0.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 1.}, {0., 0.}}, 0.05338164251207729], InsetBox[
          RotationBox["8",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-0.5, 0.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 1.}, {0., 0.}}, 0.05338164251207729], InsetBox[
          RotationBox["6",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 0.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 2.}, {0., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["8",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-0.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 2.}, {-1., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["8",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.}, {0., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["6",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.}, {-1., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["24",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.}, {1., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["18",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-2., 2.}, {-1., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["32",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-2., 2.}, {-2., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["56",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-2., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.}, {-1., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["24",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-0.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.}, {1., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["24",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.}, {-2., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 3.}, {-1., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["24",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-0.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 3.}, {1., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["36",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-2., 3.}, {-1., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["32",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-2., 3.}, {-2., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["64",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-2., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 3.}, {-1., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["24",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 3.}, {1., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["72",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 3.}, {-2., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["384",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 3.}, {0., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["456",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-0.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.}, {1., 1.}}, 0.05338164251207729], InsetBox[
          RotationBox["18",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.}, {1., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["54",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.}, {0., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["456",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.}, {2., 2.}}, 0.05338164251207729], InsetBox[
          RotationBox["155",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 4.}, {0., 3.}}, 0.05338164251207729], InsetBox[
          RotationBox["14",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 4.}, {0., 3.}}, 0.05338164251207729], InsetBox[
          RotationBox["56",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-0.5, 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 4.}, {-2., 3.}}, 0.05338164251207729], InsetBox[
          RotationBox["216",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1.5, 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 4.}, {-1., 3.}}, 0.05338164251207729], InsetBox[
          RotationBox["560",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1., 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.}, {0., 3.}}, 0.05338164251207729], InsetBox[
          RotationBox["42",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.}, {-1., 3.}}, 0.05338164251207729], InsetBox[
          RotationBox["840",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.}, {1., 3.}}, 0.05338164251207729], InsetBox[
          RotationBox["780",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 5.}, {0., 4.}}, 0.05338164251207729], InsetBox[
          RotationBox["8",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-0.5, 4.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 5.}, {-1., 4.}}, 0.05338164251207729], InsetBox[
          RotationBox["144",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1., 4.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 5.}, {0., 4.}}, 0.05338164251207729], InsetBox[
          RotationBox["6",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 4.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 5.}, {-1., 4.}}, 0.05338164251207729], InsetBox[
          RotationBox["432",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-0.5, 4.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 5.}, {1., 4.}}, 0.05338164251207729], InsetBox[
          RotationBox["822",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 4.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 6.}, {-1., 5.}}, 0.05338164251207729], InsetBox[
          RotationBox["48",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1., 5.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 6.}, {0., 5.}}, 0.05338164251207729], InsetBox[
          RotationBox["260",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-0.5, 5.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 7.}, {-1., 6.}}, 0.05338164251207729], InsetBox[
          RotationBox["21",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {-1., 6.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.05338164251207729], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "4", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.05338164251207729, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "4", ",", "2"}], "}"}], 
          Offset[{2, 2}, {0.05338164251207729, 0.05338164251207729}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 1.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "3", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {-0.9466183574879227, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "2", ",", "2"}], "}"}], 
          Offset[{2, 2}, {1.0533816425120772, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 2.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "3", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {-0.9466183574879227, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.0533816425120772, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 2.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "2", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {-1.9466183574879228, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "2", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.05338164251207729, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.05338164251207729, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 3.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {-1.9466183574879228, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 3.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {-0.9466183574879227, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "2"}], "}"}], 
          Offset[{2, 2}, {2.053381642512077, 2.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {1.0533816425120772, 3.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 4.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.05338164251207729, 4.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 4.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "3", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {-0.9466183574879227, 4.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 4.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "2", ",", "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {1.0533816425120772, 4.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 5.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], 
          Offset[{2, 2}, {-0.9466183574879227, 5.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 5.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.05338164251207729, 5.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-2., 1.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "2", ",", "2"}], "}"}], 
          Offset[{2, 2}, {-1.9466183574879228, 1.0533816425120772}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 6.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {-0.9466183574879227, 6.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{-1., 7.}, 0.05338164251207729], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {-0.9466183574879227, 7.053381642512077}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{338.5570397728113, Automatic}]], "Output",
 CellChangeTimes->{3.7747108071798053`*^9},
 CellLabel->"Out[666]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfQmUlEW2ZlpVWZVVxaas4gLuKIIbIiK2iDuIouz7jqUsliCyKsheIKso
qCCCoIjlggIqoNi4YKuIS6s49sPXj55WRqdtR6Y9dr9zcr6IL/6IyPtHFlBA
v545UweqMv8/4t4bN27s937Rvv/dJYOH97/79oH9G143sn9pye0DRzW89s6R
eJR7TCJxTMdEIueyegl8TicS/K9+OuE/Px7ap2fU77w9e/Zs3bp1x44d+/bt
e0o/f1r9Lvj1119nlc3p2K3vwKFj+gwu7di193PPv5BY41LkTpg4aczUxU9u
+DCRo37lrnhxB9KqVKt1Kk0td/v27f1KRqkEeVEq0AKzxJNeqrI5c8dOf1gl
SOpUIASp1KtVXqqJ902e9MAKl+q20vvWr18vU61es2bYPTNcqm59bvv0009l
qv379/fqN+ih1ZuNXCA8esx49cqTq+inn/9WvvHNrj36guKMxWunLlw9ePj4
kjuGv77js7//4z+ZUpe2Kr6+9vYXd5U9u/e7H0EbQtw29E5QfOWVV/D+9fd2
T1i4/vM//NnIoHPm7fpyL56W3P/Umg3v52qpkA751cccnWLa0k14vWj1tm+/
/+kJnXOl+p2PRHOf2IpX+AeeEJP58RAkbP58cGCi4dOfeX7rrr/98vfHNZUV
OjWyLSt/G28TuepXAbPyB+VBHtBL5GlKS5/ZTkr4d8/cF979+N+Wa0qPR3Ij
taWUC7lBwJXjq2++oxB4qiXNQwnaX3xmvWa9u9//VI7OU7Z8856936uXdTXN
dPrrBUNatlzwdWKyJzMY31VWrjIwF3RKgQ2nda/upJBgqTkVgE6/G0Z11w8H
3fskiqTqIcfw2DQEHPCxMMt3yKC/T3IyJH/46/6yZZvHL3gRFKGXRNKrK/zb
8OZnmnMV5J7Zf3b/smfxcNojr6xc/15EPm0Z5Wvtxp+zPjcNSZifHPUrT78y
Ik1y+s+HRCgXfqPCoWVUrK61JD7YWoN8CU01pZgMWbBK1xlSQKUrJ90C0kUs
cyRLIt/qoGViyKY0c1Mn+BrpZHmmBLSd7R9+nYzqi+xZXwUwQV1M0GwJIkj6
0B1NE3mqdLmRCtK0uVzF1yu99z7fakcJko5qc5O2F3y8T0u2TD+1kpk6RTVA
kiGT11CiKlBZZPS2FkBZE9405NzRbyCD5pf0nyu7LIrqjg91odQn6uUxwZ2p
0XbQ5qY9smlZ+TuweLR8LXuRrdZIOQu+1kxU5Rj+ef7zYi2RYSis9NEQ5wKo
GpWNj6AHqvig3kXtIKKQY8uUSFAZngS59rlqVqqRuLLbj5myPCJkqRbVAUVw
NY2COP4sKOn6/O1zWkCKtml+1JuvaQLsMZYK3tUF72qRhaqWiY8P6VxLRK4a
Ild1kWuxzvWwyHWsyFVD5HpQ53pI5DpO5DpW5Fqkcy0WuWqKXMeJXAt1rgdF
rloiV02Ra4HOtUjkqi1y1RK55utcC0WuOiJXbZFrns61QOSqK3LVEbnm6lzz
Ra56IlddkesBnWueyHW8yFVP5Jqjc80VueqLXMeLXLN1rgdErhNErvoiV5nO
NUfkOlHkOkHkmqVzzRa5ThK5ThS5ZupcZSLXySLXSSLXDJ1rlsjVQOQ6WeSa
rnPNFLkailwNRK5pOtcE3Vns2rWrX79+8+fP//HHHwsEnVNC+ilAwiVLlkya
NOnLL7+0nYmhqad7yV9++aVhw4ZPP/30Cy+8cP3115uxReod8zgk0R9DtVf4
zTffNGrUaOzYsUjYokWLb7/91nGb6rjlQ54OHTqk9U9paem2bdvysvEDPVA1
PaS0MdDBe5AyPebMmTNXrFhBumQ7RXMdp7UApUGoevXqQQugSQFNSYQ1J6Eu
/HX8kyH+Bd26dQO/1q1b4xtkOf/887GGMBRd3bEfHqtzgDVLDj1D4ciKDzEZ
dK3lQUBomwLkh/jngwL+whLAGZ9R/KTgPcnxVnWMqkWZUbiSkpJEWOcoE0ip
MheEeCZBAi/xEeRQZpPKcbzPaVxZKshB78ghy8jWBJsktTC3POgTOoIOwKpQ
cLpXc5ok6DYSdM4SuSbqXPeJXGeLXI1ELt3yyNHLdY7IdbbIpa2dHL1cjUWu
c0Suca6te7nOFbkai1xjXfvycjURuc4Vuca42vJyNRW5mohc9zir8nKdJ3I1
FblG61xjRK7zRa7zRK67da57RK4LRK7zRa5ROtdoketCkesCkWukznW3yHWR
yHWhyHWXzjVK5Gomcl0kcpXqXCNFrotFrmYi1506110iV3OR62KRa4TOVSpy
XSJyNRe5hutcd4pcLUSuS0SuYTrXCJHrUpGrhcg1VOcaLnK1FLkuFbnu0LmG
iVyXiVwtRa7bda6hIlcrkesykatE57pD5Lpc5Golct2mc90ucv1G5Lpc5Bqi
c5WIXFeIXL8RuQbrXLeJXK1FritErkE61xCR60qRq7XINVDnGixytRG5rhS5
Buhcg0Suq0SuNiJXf51roMh1tch1lcjVT+caIHJdI3JdLXL11bm4uvn1118/
/fTT/fv3J9qp7wW7d+/+y1/+ktY/juK1Ou0Djz6/8Y331cdrBEU1M8nZu3dv
D025qqYEmrPK5lx1bdtufW67tu1No8eMB2FSKgTXR5ctv6LNNV16Dmp7U8de
fQa898EuX/r8zVu2tG3f4cZbe95wU+cOHbvs3LlTP88jT3zFw5wOnXsmcpEM
idXLrpp7lahcg0uGjZ+xNJGrd/2mLlzdq98gJQFlv/uecSPvfcDtaS58YtON
t/aGFOb94oeXDB42dln5W+b90rVvoBzvvPOOeT/3ocdv7T4QT817pOxXMkrt
ifpSoJCGi917nHjfZFeTGzdtGnLnBPceUvQdMASym/eoGnB178GvR5+BqhR8
j083d+y24sUdbs+1c4/+qIhEF0+K/oNum7f8JbdPijoBC2eFcre1Y7e+e/bs
ce+XLH3krnvnufd9BpdiyuLeYwY5ePj40G5tZ0+Ka65rB/Fcqva3dN23b5+j
AiNA8d17qHP79u3uPQwIlejel4y8v7y83L1/fMWKEeNmu/ej71+0YOEiKUXJ
HcNnL33OaRT1BgNyNTJl2oyJZY85KjAxqDM7l54DhsIY3Xu3C873UAw3hjOk
ePPNN/vffreVIlk6ftaCxY8+v3XXB7//47ff/2T6FLRFtA+X6r7Zy8dNnIxU
aAR7v/vRpIINdO7eR1kqS4TioZCuRKhq2BRUa94/tHpz9179lI11ca21Buwd
RZmxeC1MDL9h+xMmTkIibjNy8xkNdMObn+HJTz//TY8BxX/75e+LlqyAkKgZ
ZARrmPvAIXd8/PkeCHjP3Be485aHnCwcGrjOWfj3f/znuhdfhbHC8iAR7HPM
1MU9+w58/e2oBW7Y8i7KhcpI5Cjhc/EJ39e/9rZpYXpPJwnljygdddMtnfEb
3YBZZezZ+/1dejM2kaf3jiHJotXbIC3H5Kqvv7cbj1AMqBh2hexQGRorCrz0
me3Lyt/+5r//MGHh+kRS52bR7bygCnfzP//Dn2EZaDudu/VSLWzBQvR4r739
BZKi7Lpukl998920pZu2f/g1KgmWlcjp2bt/IolP+A4qeIcUxjK4b7Rmw/vs
fM3KBaR4cmD22yELsqhXeiaj9tsnP7TB24tO4gN35PGDEiZyUH+J3Oe3fDzl
4Y1OI5DJ8NHzqDx7zoDy61VKEkSgI55ZKM3p8TsPWuABAWRX/HKgBu7zly3f
zOxg2tEbYXi+oLSn13cF+GQ30Afd+ySkV7aspci31Hn2EJ0hqFMGbt5yDZyE
MTHRuPkvjl+w3pwQDJm85p4HnlcaJTUIAtntsQiIp3Rue1YCZcISzNwJZQRZ
pSzaLI8o+JOz7tWdWhJ1HmMJUtO3eGXl6QeaJ1d6KdCkWvAP1o9ioHggcYHg
yFMZb386jXd4BrbGom1tGOn6TVjVb/wqfHxn17/lqMObXJqFSnxelIPnVMZy
wMq811rIt5XAykR2znJhGT4n9JBvm3x6lEdSnhNxd53/YKIQvoOnCZ7OqD2R
VCQNiq7aFE9vaP3URlPBl/KiUB7f6HxBnW3ked+tnMkOw5feNHQJTx2UDUit
cFVoT+IMF1qZ7pKi9mao5kal5166WRGxRbv3PFixUqr2wfwQhDWH1xknZjzj
U6/ae/oiUdVjcndD7W57+/S59sQuoD/uMrhTNI4xkATWP3TaWsOXx42Ogq0/
SKo1WtDn8kY8pkNDAvFlz70N1dD+VD8DfeIfPoT5oZwwsTtnrTP8YO+GH08l
hl19rqWOKkB1q17l9BCtPLyB7UIbSEsrxNcM6W3tgw2ln3rTBZY+ciKD6v0k
fb1TYsYOtjH+U32Qd+qlNR+dPLgjO1/reSb1wZ4r6pKpE8XJD21ErZjWzRNF
miT+gQH7GeS7t+e07qYnfB7FZe/uSxOy8kM97awSaWLaI6/wuBUdFp/m81Sz
jzbe0lnPrn/9k9yDpJ6Nm55rJJeVvzNSj84otrKwvEx7xAerg7mD5g3WncKd
M9ch2+HyP9OrfWtB+KdGgUi/7nROHYHp88hkdPQV0dVpC1FZfS6PzqRCKcKn
ugd97qtP/tx5K8yFkxae+Nqeyh8nqjDzlGe2s2NSi8DF3UMnzoWwmUFXVlp6
bbcF9iBU/0RaptywKU6FoFw2sCqehA/pERwPMYhuKOt8kGflIa6RzBVJRCvn
ipijP36btseJIq3R1+FLUTp7ah7TYWXr96AtwLdXf7xVvgiuP6C98qSa7d+d
niY9TbL3mtL33IumfCRP/AvFd+kBUJRpi2k9t0TNavpJVrFVoxkzKNsuPS5Q
Lujx3NFvpKO+1cjFsWVcj8YX3PeelKs4XKueTNbO0tofAbyqety/+Md/Yggn
d9hZo2Eb065fsP4PKcdVUy6sgGuxZ0t8Y/txb/ZAHwhqytiNriYIE81nFnc/
Y1C51UUFdXGguvGspMiOJJzeRisB44SRFNahKee9NO6ik7os56gm/S0KxXfp
f0HNuZ0ipreTeKEHIwZ+vph7qfEFoUHYWsjbfF+zhj1WcqYRlsbVU1gaaxFc
UyXDfGkKxlTSB/ZBEdZRgRTW+8Tsv1Eq20aMTqIVmJNNSUDZaBiOd/b6OFD9
nKFtgztytE7UDZZdsEMuJWMzhhyvV1I9iuaQst/TmbOgZMTPlyfgKRO0kwLr
e3b37OcefOpNupslIj+ZgJMOHlCvXKP6UoVmQ7lCulSwXbMWpe0cZzKEpcjB
uJVMpwO+QtI6wn2Jb0nOUqg9CIBV8ZQlG2ev2IwPUHTFGuGeaCpUEwdRM2d6
FoKa4WoGdpLWi1C1GyU9h9wsLJHRHqLv8RWKbWFkzRwxnyZ5zs91AwRi98Eu
ASajakfzKM7mS5WOfJ8MTSmbv5qRsiWNgF8vWLApPJsoEJZS0+bIIkvCWkuG
Z1dBOuqdPE6Rv1UF/FPCajgOcr9CTafe/AwfINgBdWS8FlKh2jlgbdFuuGtF
c7EtztOFM7eoBuzIL17k+VYzrn2i9zrbE2XWTAWeaNKjg35frGcrnfSB83zd
coRmcyqU1VjRyHaJ7k9JWc3a0UzuZBXmCwuqdRByWRvynnPE9LmkKuQr/Q+q
Grp5B8Ffnvdk6MV8jNWt/7zCmgtbE/VsfQaRiWOzLRf1nGfn0Hihy5i/68u3
2p7q+wumK/YjlJZTXVhO0HvRm0kFLScg11ffvNfh9Ay5UqYYVjkZEjkbqXMQ
Ejgbcc+juW1Gbx3gJ22jWoxeBSXPt7ZhzK2lqalENI2KViJS/weol7OCdqE9
yTJGmJqi/mqI+gt6hGaMAzWFvk815T9L5Kxunks/z+uCkp4ak7SGkPRYIWnQ
CzVD0hpC0tONRGeInDXMc+lbem1Q0tNjklYVkh4nJA16vmZIWlVIeqaR6DSR
81jzXPqzXhOU9MyYpEVC0ppC0qC3bYakRULSRkYi6Wt4nHkufWivDkraKCap
nOPUEpIGPXwzJJWzj3OMRA1EzprmufTbvSoo6TkxSaXnXG0hadCrODCzcpKe
aySSnqq1zHPpK9wmKKnex0/5kqY9V4U6QsqgF3PKlzKt57kUsamRRPrt1jbP
pV/ylUEJ9XlGkhLOW4m5/MYfrI+zkyzoKZ2kZGXLNmMhr3R2vuEsvZbrmOfS
57l1UCJ9IqT2nrHCmrhoPdWWkLqSXtiUCMqBLFiHMKGVSKaua55Lf+orsuso
5e8n+TUqW4X09K4ZSWZ3fkKrvyYZduVy18vQqZP0N0FJm4h2kDFP1dLKflHW
1bGiHWTMHnWuyO5k6z/ePJd+45dnbxmepAUxSeWoKL3aqwtJC2KSRjqVfX/9
jJbjJG0VlLSxkLQoJqmcucsWKUeWopikUW8jR/4TzHPpH39ZUNJzhKRVY5JW
EZJK7/1iIWnVmKSNjURVRc4T035/6SRtGZT0bCEpR+Pt738+cd6z/ijpJJX9
cKGQND6eR2NNsch5knku4wC0L6PZG/3xx+j8MSUkZ+umI72rW1GSAvqev/DC
C77yDS3ZU5SWltJHPubDH1y75326+4+nNTpv2sMvggrnJgwliCiossm9mpPT
/rjryqx9RMwO+C+//AKZW7duDYEKRal1/5lH53ek2LZtWxVRbu7703WcpUeh
DGVfCflBHYCsySHjCpJCB7q3zYcAKssFF0ENpMW5T4cOHUAHytB0VInlSqGO
qL/8tN8XuOdyFan9Dcz64csvv7QJwQvql1bCXpX+/eqjnPNxngxRraq4Nnzy
2Vc6lcyYs2yjndMITakIA+Z59NFHkQ0mJldzuUJjHBmhsX79+jEM5INPvoqN
P7p9pVC3KByERrFAGgzYEtzaSmoSCbt16xZZq+v/GXmya9cu5wFhNKl9gRL6
MRQEccaOHcsyzJ8/f+bMmc7ynT5rR/rEXxUjkhNZDcWL7ezr1QSUlKhmw0+Q
uaSkpEaNGrCRe++9F2WESlpf3+nOqStpmTlC35pnka1oqAafwa927doQFHRB
Qucp8M9XRGtV+Sn2jh07UAFpHcMC1ab1NEDWgq7jKpYnMiDbd999V79+/Xbt
2kHXkILkciIfKjnTyLd9F5JDRCRPpb1ZUJLvWT+QxexDufq52NXPJP2jyomm
n8iF7VG0WP3oVlmE2kbfgY+MMUE+aDytQ2vwSu5a6FG5FoSwVUTDRk7IDPnq
1q1LdtABKPq9CGupdlQeBvywkhI5OjyIDQ8/EEFZIX2xqCvRmyTBkTIgJz6b
fRp/LNH1koRwtl5ee+21hLIw7p1AS7YUStO6EZpdXUqJAoC6rRI9ftlZehLl
ZAJTJylRJ81YJ8oyUqkUfiMpmg3kQNlADp9RdBQVn/NCdZMPqhwjYLtIDZXS
3tEaUK2unYoVdL61RfwgLeTLUYnzr7322vz8fBYajRb17u+k9x6zYvuHX+uS
V0GHQjPAD7KPGTMGolatWvXf//3fOeSABS1Z+VrMLrd9Vgr86LsLAyIJFBvy
J2P1Q05+FBvU3KlTJxS5cePGHJXACUogJyh+DM9vtP7zoJHr9Q8kYjnAEl2T
Mrtdu6KxRK8aUIREim6yad2rIC9IQwf4LCPNLnJtCapif58TtVJ8ZY3hFfQX
rLek7SJNLXFE5RgMAniUI+pNl6gYryE8mi0oX3fddW3atBk+fDgD3BhzZmb2
WGTdPbvcW8kUQyaoje2XEh9//PGFhYVNmjTp37+/sk5qiK1o4eptKC71z9gw
DIdUdTqKhKPh4TdoxT20yBVvISl+I32DBg3wDM2/WrVqJ5544oABA0DHzY7m
r3pdNTE7/pgWlRO1JA6R+FFxk37dJXLr1atnPJz1DiTUqsmiAhQHOVJpLzpz
wock7L7BigFw7IdhW/gq686OV6gGGy2ZYhNnpCPe2SrTshXbWEkoEKW+//77
8fnkk09GLshpayyfWovtJx4LVqhu0EUbgFl07dqVsyHGK6a9oUn0TbmMRlVy
UoewALBDcdkby/7w8z/8mWMbuEBiNmIMUmC3cePGc845h51YbJc5Wt2qmEsq
j+rk1MSM6ezSbA1FNVfEIvAH+RmkyvzgLqMstc+q8bJhzUGF0A6KBSmj+WFs
xuZGDYZIJmTb0uNAMfijzl/RP0gFiqeddhpmFvgM2SOrS6TsXCId2DEoQg8D
Qz/zzDMxk4PJwib8OpJjez1PPgiHDMpiU1HNLFq9jX7HpI2WeO6552LW8NZb
b3FuzVGf9KJVAmeUYIwKRyrYAHSFD1Gb0TO5AsiJZ+DJMsMcVayqnDWc72kc
71E50DXpQlDVPqXG60X16vfZrGarcDuX5HzUzL/x3Y4oyIzqoLbE2Vl8zz0F
K4A0bBGQz2pbzm05UwLtfvonzVkn1+1IDpLUNqlCcaQK9XC8JKVk2hvjCxgl
jo9q3tm6NQNtExm6zodyadZQBWRFdciZwHlOz2qMQgauRuSM7Piox0EiiIWO
z9drA50aEqPyYUqJHNWtq97RzKflXDgZ06eevRVwRiC6l1jkMHsZyIm5i2rp
1WN65A4NGjVakR1hPArRKo2jNZSDUoE3VBS9YZQ4JwoM5Vax0EVCe3onz9gu
ugOoR3EL6q4ANotaBTkUz/UAWnMFqCRaIIhAGnZaCblii+9p6ZLns3PxVSbX
67UijZGLOQPwNUZKjOyn2MwdzSu1zvNgGFyroDCZK12UABaopK4idKT3EGM7
NtwpcnrQp1pJDoaQE4Jg/ErI1X1hWAPe6lTuzpwdK6k8YypKu/0b9VfGXZ8b
lP8EIT/Purgog+QwFil7cUz2KkJ2uQd2Tkx2maJK2u2Sqb8y+rtxUPb6QvYm
QtL4Pp/cHZP7io1jkhaJFNGJarSvJyPOzwlKeryQtKmQtHpMUnlyLPdqz41J
KnuX6OQw2iuVUe5nByWtJyQ9T0h6bExSua8i97+bxCSVe1nReVy0/ywj6xsF
Ja0rJD1fSKrlKPAlFXs/EgGgwJcxnTEXjE4a1F8ZwR8+3a4jpLtASFc70uPk
hzZgVfjB7/8oz2LO8/TWa8yKJ19+zz+dUX8lKkDY/6K2kOTCkCTGA/e1d760
2pJnWzx/wvf12z6xaso4w1J/JebAGUGZagmZLhIy1RI2FfdGkzWorSzl7zj5
temf/am/EuPg9KCU0h+hWcjCPCnjswF5vioRNfJibcM/R1V/Ja7CaUFJjxOS
XiwkPU5ImopJKlutxBkpiEnqn02rvxLL4dSgpMcKSZsLSeU5W3y0kX4A0rcj
Phv1z/vVX4kfcUpQUunjcYmQVHpwVItJKvts6dtRNSap70Oh/krMioZBSasL
SVsISeXcIt6Hy7mE9O2oEZPU90tRfyVORoOgpNWEpJcKSasJSWvFJJUjtvTt
qBmT1Pf1UX8lNsfJQUnl+VVLIak8u6wbk1Ri5zUQ3+vEJI3mFpHEEg/kpKCk
8sTpMiGpnJ3Vj0kqZ2PyTPH4mKSRz2EkscQgOTEoabGQtJWQVJ6ynhSTtIqQ
TJ4onxiTNJpZRhJL3JMTgpLKc6nLhaTS0yjuyybn79KfoEFM0mIjYSSxxFqp
H5S0UEj6GyGpnPGeFpNUznDlPOTUmKTRSiOSWOK7HB+UVJ5FXSEkTQlJ4x5i
cjUo5wBnxCSNVn2RxFcISesFJZX+Xa2FpPL8+eyYpCkhmRxdG8Ukjc6iIokl
jk3doKTy7OhKIalcRZwbk1SuGuSYFV8RReeZkcQSO6dOUNKkkLSNkFSeZ58X
k1Qiy8mRoGlM0mhlH0ks8XpqByWV5z1XCUmlR9yFMUnlrpnsXy+ISRrtiEUS
S4ygWkFJJVLd1UJSuTK7OCapXInJXqtZTNJoXy6SWOIS1QxKKveLrxGS5ghJ
W8Qklfu+si+4JCZptJsbSSzxjo5zkhZYSdMxxKQCf7faSXhZTEK5NydbVsuY
hNFOfiTptUJC3RY5J0qtfWZd2/YdLmh++TXXtZu3YOF//HkfhdSlSm3esqVz
t17NWlzR6oqrp0yb8edv91FM3TMXCj9LirRz585efQYkcq5oc00ib/SY8Xv3
7uULnScp1sL6lCKRv3v37pI7hre47Er8wwd89RGdQAKENMVciGMQnfT4wjaQ
wutho6cuK3/ryQ0frnhxx5ipi9ve2gdlYd08MG/B4GFjFco78Zgmlj121Q0d
39/1Ofu1jLV86YQ53frdrkBlciJsqHa39Hjy2U0mrS//Aw+vvqVrv9lLnzNp
8alLz0FvvvmmscO1L25pd2sPUDDvIQHkePyJVUZ2zjpQA5DdoQ6Nn7F0VpmG
fWVrFXhAHoZPm8hWSu9/tGOPgSi4RPFpE9nGvMc3Xtu+69K1b1hko87d+zis
KIcDJNHyU56kDivKIkpd3+5mh0h1uFhRW7duHTh0TAgriu8d4hXfj53+cNmc
uVJKmDMNIQuWlES8klJkv1+A75966qk7Rk9371EkFCx7KWYsXjuidNRB6BIt
0NX6P1uXDhHLl1JikKFhoZNwUqKx9xww1L13ZeV7tNzOPfo7DDKHYUYMpB80
Vv3GbbtgjQovLYxkRrw2qMvIikaGHsLJGuwDRk9e0H/w7X/9iT1Z7n1Ty2Qf
0Lv/bX/Y80fTVp99cSPIZrT7nn2HvPv+x5yjF1NSdFboAO+KACq+/f6nLdve
QQkz+oCe/Us++OADQ/ejT75E2TL6gL63lT719DOmD/B74SuuvAY2sPjhJfv/
99/Klm/e/uHXuq6qEFcGrZjd8W9aX4OukEBRam/t7S/+/o//pD4h0CLtIAD9
2F44yV543as78c/iXCm0G5aFSFYK8+dP3/1lWfnbKCSSo4/JgUAaFc1oW9eG
8qwGHXTLYA/KCdsvv/POO65f1uNfiuGG/CG2AtGE9Fjg8KKimy9SLAvT79UR
yUQPYnpyJhHuG/30899QAEI1cU9DoY6t3lYSYVklF6x64/ktHw+f/gzBfHjK
DQk4viAbMhMO41gnt0LSIliQOaEnyZIIwopjbr7FaCqJ3b/hzz+SFmjKjPFc
fzsMphyBwaNnpA43YfJDG5QHO3eXPv/Dn4dNe8ZGiicnLd5AZCSDWxGN+awr
pCYCmMEx4dzEx6OK8kQR4CWZAFaJIO5Txh0h0AKTJySmEcuF0hsUpOaR3RmU
Jb5fGYWGmZkNuFJm8x4qZxAA57cF1i+CttB7zIpB9z6ZBRcKrYiPzFqL7cPR
BiOD8HSspxmUpYT4VJzH2ttETC6oggBGZn9Z4j6Je09yaflzo1tUZLS/sjYa
vqG3N8Jbi+FIFXr0XH57rYuJnBARLOgObrhtcddRj+kWkbJ2lo6QxJAfH34T
tR8W12DBWdyxDA1RPIXmQc8LiNfp0rMIscQXhHDSZxpJi7AEc9Ra0JQFLpG5
s8W7HSaFD71aNbJUCdwEWxBU9+z9XmGekKrDwmKEeEmbxpYA9AxjVFHrer1a
lKknQ+2jL/fCaiAGdQ+pMqS0urfnTQ6Nq5lpvIbSDxqWB0xzIzv2JfPyJd1I
kIE7pdYKFu3ojlvGsxTDNFpdZdGOMr6nbIwtVD3l4Y13THmafZxAnopw/JQc
o7tMphyDJ6355Ks/HRE5MuLj563cese0p9nLqzZRHHGe3HsGOQ+d9vTWHV8c
Lud4tL+MT0+nn9704bDpa2l7qn0JNKoI+S9XRpkfSX1se/+roVofBimxOMTR
WI+1zhIiDVrcqrmD5o1cugmlWNMnG24VW7JDHMp8XTnUpwz8pSpxxIIvNPIf
zAvt0r+x6IcIKa8kjl913+ptShM//qxyLu8lsJcqLsWhYkQdSP6vo1Uvu3QU
pIrrmxYs0j3aqt4VIoUdDZyopJ/CRr8VRj1uCDeCXtS0H/TdEnvOIHrGkD4O
7c6qo2pLX0eYFZzIYEQkXqB9C4YKQecYBVpg2oudmZV4uFmFBGR6CdN9DT7G
jZv3ZzZXGWPoYwY2I4hNJZFeioXUcwcNHqbNH18wLKkqIG7Mux7+nLyx663v
fuSUScFmjmt//sR3CrLIlArJcCCZFgwZMiraW0KXpzCpqnpa2fXz3xaNvtHC
qKwbfaHVyiGgVMWjHKMSSlkma8wSzqMwdeMLt0Ppz4Pyf4ghalmMH4NHcCA5
g7UWkGquNjS7M2dme9FIFaGuRWS1FMbiBAaXWSH4SE/RKkWXb1yPxhfP/NTM
GByuQoFtQWHsq7jcxlguvB/5Sd0utIw2JS6XuKMt7eNjwehM3lRQsgPYXAwf
S2G/Nb3XIUg42YqC+qHEswc1MYhxYX2I73n2eyASKDcol0KFazwmJBfTS9yu
yEkkhNslMcMOhNt1IJ0pjLhGd2XVWa6VwhtnSP8YbY8W1YkT9n4TVnERY/1i
5FzJIGrBHud6McQeGpi9OdBH1MqOdqVhf58ee2EvhzyCFoE5yu1Tnp6s8ajN
XnYWdKtL5+7m5EHKcSD9xVG3Vq4vv7Npd/Xu2ApKbgHGopJVjKeV99WK3okr
Z8x1yAwZPDe8uXFw486u7Es1LieKj3/4EPUvqWzIXlLbUoYDaD+thss3eja6
JVRqZTHH4NsxoOVbCwYpQknxYANffWvJmBkY7LO1mRHnHtaM7dN8BKeDQLx6
ycwZ3/ERr1RvxXGU6gZDCHoAJLC/R7PPmGz52WU5OEwubSdvGAmPrUA/m6w/
YEroQyJtUSY7Zm6+r5lq2/kh7hroa6PhRutCU4KKiABGXUXWFdZN8QGkOdja
2mRmZeVZdKFmAscg4TGqMOGTyCoVIIbZQzU7GxUJsqFOcf8wOzqWnZj5eLsH
QgsrsKhYadO9aevKJlsWGSrC7IqmZobtsQfST9qPQTkUVC7OwJW1jWyHToyl
5iuDX29lmmxg5TxNHQxuWMEhSnSgGjOTskzdJIVutBTH4GPY3rJgiuXbyV+m
vQUwvOIYVlE/nImx9fd/vHx5ov1SbWFEs5JYEUFUsQL/TlRhYRnSSNzF4Hc1
V70ycctcbVGUouaBNGAtKidLefOzPM/N7L+++uY9lUAigUVa3HR9ovNkbVVO
OweDOJaNe7bn4drB9w6J7qO0NYX0EmGYHQMixygxDuiRqL2Ocl2NSbSVauK9
9D4N+yP6K6jK+SNKH8/ThRwSgay6eC99T8MenhKh7NA9PKXX7KlCDomzU0O8
l3KFfWZ9OSvnMyv9kBsKOST62LHivaznsBeyL2flvJClZ/fJQg6JsnSceN9A
yBX26/5KYOgdul+39JU/UcghkcdqivfS5zTsKS/jow/dU15GHtQXckg8rVri
vfQ41XEHGUjiIRSrSKeHFn8gIzfqCVkkGllt8V76nNoIjnWvfmjVWMkIDhnf
Ukfwridkk+/D0S6s3/4TVkHCykW7yKggWX/HC7nqBu1URgaJk7rDigySEVay
xdYXEspaD8dXfRXD7Dvc+CoZsyZ76hOEnMeL9+GIta9iKIiHG7EmowDlCH2i
kFO2+HAM4FcxXEmXonIxgLREh6Al/UyrCLlOEnKfIN6Hoyx9uY9MlCVnMPYa
6B07dkhf3iIh2clC8uOiknfo0MHdxOzSh2Nd/ZJwJw7Zs9zBLGNf6wpdS/TU
cCysRacw6FSynKlgS7RR92buLsqtMFEgeIsWLSAOQXfmz5+P37mCmvRobRRu
L/kEojr//PMZ/h9hZHk5I8/sBmkvOjyXyCrbtm2LaYORzVybgDov1p45c6ZE
O2NUv0W+AbXy8nIkJbCG9EbOF+Wj/S9ZsgQ5VLR7UFvqZnSICJ3VqFGDsAAa
r6qA4Bf8kftBruTkYaPQA7NantvCmiEIaNarVw/K/O677xjzr7AUZO8Z+WQz
Fgl1R6wsaD/SM5EsaW0O401qmTH2XI1BQlAh3FVpaenTTz+dErqmX7JFjgJD
FInAC4kcBRuh6pPYGDE/8DyheT1OQaQcZE6FtF6EKgc5YtsQtozwBUTSkZYq
/dupdSLMwH4CaMds4ahb9B4KZSRHAVIlqS6WzuK4iDmf1bzC0GNqwoxYK9cl
MEhR2bVPfAhNknBSEUqZwjswKIES70DXQRVQ43tYDBGi8Pm3v/0thIYYJ598
MljLvjxHaIwtx4K7EFcnrRFLYAQF2eqEKBvMhqLVrFmzWbNmjzzyCFjLOpb+
8ezLwMWULb5uqhpxIcgTuRANDjrs1KkTpJQ1HXmsW+ysVCrFIiEj2pLfInS7
TVn4r7RGOoLi8RuJJQIFcVJ0pRKPDyLhN6yPcHnB9lHNokCBNxRJ0oWFhSNH
jrz99ttr1aqFr6gw1Dj31WwNWcXRttDIWK+s7IRE2dTWVKwg4zRSB9nSGps3
b757927UiELMID66JZ6OpooWgc7C9fj4XoQnivqa+G5BogipWUXgg98TJkxo
27Yt7LGoqAjiyv7ftRlwhPoIQqGxoFDQjF4rF92QQdnMiXJARqQleJnppV09
EUFICwrKaQ0Aw54pRw0tubaAppcQK+5qFvsJhYZ1si2CEQqDUhG+hH0PxyPU
1ZzHt8xbqdCViH5mbRVZCIuIxKApWxH3XJGULYBoSshMSBpiO3Xs2BEJ6EPB
WitbvhmFpfaIpkloKoVeRIlo6ZQivirVXKuCNN4SVQnaR2NCegiLQvfu3Rtv
aeOuxzPYXSwh9ElsIGRlg8EAhaxRHBOtiYA4tkOx/RmRt9K2P3N1R9wuXTFj
9Q9oqvkYa95OKsBYwRoGcdeUPtkNFRQU9O/fHwkJKcOZIQnkRPpEtY2b/yKq
UJerGLXLDo9NmmJY6DGHcipWtIVIfskll5x66qmtWrWCTsEEPCN0Mzs+Pf7C
u+MXvmjXcHmgSpAl6J0IYZCRiqL9BE6XibnWrl07MDv++OPRh6BoV1111Zln
ngnJoXHUp5ojkOMGi5bH3hai+Gh0qn/Ed5ofchmUN4d8xAGWsyeIBA4Ku0rW
GrHyWLdExHOIZCgL8hKeNoTepctTE4xRYVDDc889R9g5lAS11b59e0Jz4SH4
227LjWMsF+dTyGC4WkhGQvzEao2WgiQNGjSYMWMGLL5OnTpIjs+o8DFjxkAr
devWjTD6zO6JXINzdLEzsjxkopXc2qmrrLfakW2Cy7Rp0yZOnAizOuuss048
8UQ8+d3vfocyz5o1C8JGI1gMidLUnkVRzUddQARkIVycrL0iwn5hMgIOyIh6
AX9O2CB0rqhFIlVydxukoEJiBEFOKCqIk1eNKFVEkuVcGKxOOOEEjDcgsX37
dqsyGV9H1DYCiCGzQY8K1pNZ7yjroVfVunXrrr766gsuuABVBOlWrVrlNCXn
NWxpsAz2diDCGsXoyE6x7DF9O7Zec1chfCKLCGtk73baaaeBY5MmTdDM0mH8
Vi1noY+4SSQ+2AJKpsAKo5linaiVmN6Bt8qiUtBPgSO5s1IM3i5rhNNSqoEo
fMEaqQq1IwUoffLJJ6g8LmnRN11xxRUwkWXLlxu9yPlg3ajeITgndRxng/2d
qRGFG8Wz34svvhjlPP3001GJGzduBGPqRs4B2asQro79W4PTzja7fHo3QU0W
uDIC/XHjxlWpUqV+/fqohGHDhqG1hNCM60b9jMXpjBC97Do7n/qmolAtkI81
iFZhdH2J07VaAaI0yt7C2GywnbVr144YMaJ69eroQM4777wHV6vRX8Y614n6
Jq4UE3L81++LCZmb1vDCMGikfeKJJ2h/193UTdm0XKcSlxbluPraG6Y9/GLH
vne2a9+B5wMGbXHo0KHoWNCPvfbaa2mNddaiVZsN2TC1oQUqzq4k63m02EC5
zsJn/D7jrHNAooWnMTeLDyOygVKbNm0uvPBCmAhscPi4OR99/k0s3p62xTHY
0RL7dwqjEIQeeughit3i8ms2v7UrvPORzyZ+x9i50BSx2/TZQMHUqVNvvvnm
li1bovtAbV7UvNXyta/F9jfsfhin0pk42QVEoeNojzZ2fP0Tx01/2GDRB3cA
1Rwe/FwblBgOcldKlzcfigUrEpr7mBrM5W5WfA9B7zyr0Z1rc/ygfBuyI+rX
j1qJw5t85mUkC98BQHwOlNkWRSJ8yJ1B9vZcuqExDxpxr7JruZ8YXwFyn404
vX2HlG7IfnuB3nvMYwlgD0gQvmmBe6v/6+f9hqc8XZV7sfI0paqQubI3Qsya
v3TJUzr6OCyn3KuWp5Zybzt8x4bYhzoKd2zIvX95GijPCsK3lrj8R+vWEnmK
Ik/Z5KlL+C4Yf90cOkU7MnfByJMoeZIlT67CN+og/7Slm7C6mXskb9SRJ3jy
rOhQ7h/CshkSKipH5v4heZImz13kyelB3dpkyR2ZW5vkqbJE56zs/VeO4pG5
/0qe+Z0s5KzsjWKO4pG5UUz2Hw2FnJW9o81RbGTkObw72uTZ5KlCzsreeuco
nmnkkf4ph3brnRw3ThdyVvYewUyKSp7Du0dQnqGeKeSUXlEHezNjZg0peQ7v
ZkZZS42EnPIGUInJFp8TydGhoZFH+s34WG2+nNcH5ZRzMXkjlbwpK3Rymymn
nMFkov5mljBCavPlvCEoZ7GgKm8jqyrklHhsxTE5pR9Q5pl5/Gy6qpCzbVBO
2Ys0FXJKH005M4/PKxsIipm+EpkljFDafDnbBeUsFFTPF3JKb2XpaVAYk1P6
02V6x8RPxIuFnDcG5ZTruwuFnPI8RK7lUjE5zxAUMz2fMksYIbT5crYPyilH
uWZCTnmmnBLc4vP0RoJiptdb/ExdnofcFJRT7ik0F3LKU1i5cxA/B2osKGZ6
O2aWMEJn8+W8OShnUlBtIeSUewTypCl+40xTQTHTyzV+qi53uzsE5ZSzsJZC
znwhp9zFiq97LhAUM5EsM0sYIbP5ct4SlFOelLcSciaFnPLEOzcmZzNBMRMd
Mn5WLm/8uDUop9zH/Y2QU+5Lyh3ZeEz+JYJiJuJiZgld1IGTs6OTMwONzVFs
LWTMFTL6ZwnMG1pDthByRu36ykAJ3V60k7OTlpNoQJu3bCm5Y3jTiy7rP+i2
tc+ss0T1nL+qlXTnzp0jSkdd3LJN5+595i1YuH//fssmJKG2wEJLbO/evRPv
m9y2fYfO3XoRSyhhcWPySAjP8CbnqutvTuQhLXJQ3i5aVqIuzZg1e/CwsbOX
Pvfkhg/nLX9p2OipN3cd+PGXf9Tz6SJI2fuOiT36D52xeO2KF3csfGLTmKmL
r7+522vbPwqckv0mkvDu+xd36Nx70gMrlpW/9dDqzRPLHrv+pi5PPLvVYCpN
X7Tmxlu642kiR4FG5SLhTZ164Wmiq5aMYyi0CMkcNtVdEx94dNly9UqXUSFg
de09xL7Pm7pwdfvOA1jvxMjat2/frV16OfQqlG9wyTCHd4ZP3Xv1U5hSFreq
a4++qIdEF08OVCXVkwXpCypGUTy8so49oGn1ilI8vmLFiHGz3fueA4ai5t37
7du39ysZ5d4PHj7e3LnU2ZMCLME4Oyparz4DUDvuPUiCsHs/esx4KMi9Lxl5
f3l5eXYpHZ6YL4XEXrvq2rZQoqNyuKhnKDiKH0I986WAGYy89wFXI2AJxq5G
BOpZHhTTo8/A3/83FUEn0dPCiGX4dHPHbs5y8Klzj/6o1gzLIK7Z+BlLE7kR
5li3Xv0VFdr53feMM3Jq7LBCyNG9z+Ddu3cz7HjCwvXLyt9+7e0vVGtnf1g2
byFsHq3GoI1BLsi5eesbhiJKBptXjSYnwgFERT/3/Aum5TDSHxY8q2wO6gZ5
r217E6p+3//4fq6+iIrr5AJIDiVe0eaaLj0Htb2pI4wHUrk7PA3+k8a9yZu2
dBP6jO0fKhwF3UsW//Tz39a9uhOFQBNFB4RKhjV26NgFZo2UKBClzcd3PO3Q
uSf+IR1S64svzeoLMqAaVGvjqAEORHH4waBXKvxFKDMaxTR2FqHbDFYQtGci
9/WsLGkRuQgLZU7JNmx594//8Sd2UcS2wmuQUjxy3t/1eQ8tE3fIGEHt0LOu
isYSgi4ZjBF8sZhdQyavmbBgvcKW0XO5pEXHIpyIGyEN4hRHI4tIxeIaPmAK
+dXH7k4mdZpiEQfAFgyujMYqCKq0zXg+0LGcV63/HT4zVJRzdodJZVG5TK/N
WkdyM5IxTg3UbRmJT6X0oTirXp8645pY4A542uLsgfKroULPPQshEtUMggxp
taKa9RpqaaWG6HH4WYSGcLgKJR56VS4tx0ng8L2IO0dNEZmqu5Ncaaz9xWda
eCkGbSONnp0ZHKgzb3uxJEK1oreIxX1KR7MQRsbJslgvah9bLB+KTJsfRb7x
Xa9RZot9YcrY53IDnBXTKmeizN503FvmvRuFmd+hU7X20qu4zepOA6qM/W4Y
ZXCppq39nz/+78NFZQp+V1GcbS8fQj6qtwuiLqVsLqHKvMrwLPTi7tOL1mwb
fN9qNiCLP6Gk6nL1cEqlMHNyI52M7XY/n942eQ1eHDWdWN3DKsI6OdJcPfrV
nB0YhKnBc19A57msR+UQpg4Lm6mid4X+u59+/uyyqMFG7jp+lLCOBM0iv0WT
nnxjgmGrRwHZKMs77VtUhf2+7px8aJfdVzTv1z0aD/yY+Sm6b0X6IFbW0ZP2
0OoEn69vNbh7JtpRDLfpiCBjHeXaCrQNg5v09Idfr5t6K3JyIP1szqUVoUml
bFs7OBSdwphO3/34jcuaXdU2gh31MCeiaHjFX0ZP088YdGa3SFxf5nrQg0K3
8r5Hq3E9ocRwXLZ8c1Q6I99X37xn5VM4SFq+FOV79/ufYAZpiXB1CPwPjPjy
w18/JX+Of4UR2lE6Dt90QDSrg0KRiluKfkdLqW17oQg3SKHMsnZgMON6NG4x
54ssKFCHqIVqmbg375X0uqreSaZDFJBPyRC/fNVeBr7kj69hPKOK8YvsHshx
HlOLjPOZL1UEWOqU8/7M5hKH6lBlOLBuMPPypYiAUI0UuUF+h/r9QBhPaYIP
pM3JjZkxh9GJLpryERq6mjlWCg9Jfi/ydXHP3IcvO+mq9jPW3VVW7uEySUkk
FlQBYRXkzDYZla0ipKI8n7/dKc2Qqmz5E5DqxqlrR2qpNhicuAOgRaUOhvsh
aWdZ+VqlnelrS2ep1eXKCBlOIj0eAC/qsLCc3Dtv7PFma67/TwxZpYcgZymH
gXt0cAhAWJxs/3Dr7IFzx2EkUujbiXwusIzgPlZfJj5UypYwOKc/KDyi2FO7
n11FvMF48/zWl6b1K5ut9z/R8bz+3u6DxZBKHYZEFTyVMuIHMt7fZ+ZjGnYH
qo1k9GpbakeiNx3o+yGgO/lV6NteRahEeyMDNCumyiMjxZ8U+k+scOPoTZVn
S5BFMjcjE+hDco1e1hmDoOv1jN7ywzIlBVZSpMmQpDS9RBA96WDxpSpGTKq8
FmlylC2IrOTrIplFqmwarjTukzBC2iDvzasAxyjTBg8dO0l+T3nWZDCDeJaQ
DEuSayVxs26BTWTvrtrw5sZrTsmClRSSi9hJWeXi6U4QSSkLvlQ2rKdUZTSV
H5fI9sgxhCW/vNn0dMQwn4RU3OmiB5k1l9jdkg1Ez8A5TnTeLz2tpAfUpSYd
d0RPFbzkjZunBHlFvmLS+0x6hbXI4HWa4CXvIT0tyCs6z5YeedJf7JIMXqcL
Xs0FrzOCvCKfGOmlKL0Hm2fwOkPwknfWnhXkFZ3XSs9N6VF5cQavMwUveZPv
2UFe0dm/9GSVvmzNMnidJXjJu40bB3lFa606gpf0ur0og1cjwUve7ay9rPJ9
Xs9v+TjgpSz9ji/M4HK24CLvsj4vKtHUJZv6jHvClEiWpI7gcUEGj3MED3mb
93kmdbgFx++vzPS5cnwaCz7yfvPIDzm81y9bk/TPPy+D17mCl7z1PfJnzw/y
kj2S9PhrmsGrieDVRPCK/JYLs/YWMkrB59UkHbfwSZMmGTSWPMH73IDFW5+5
GO/wna5xj2ufd7169RiZbdaojjcjVRgIw5BM6QsYeUYbpNxvv+3Xr1/duvVu
7tR71KynjEzSDy/kxagjrRliab1yPBnzIABDkJFMSqntJh/C/ah/0joeDQqV
sp6d9rw3CxnHj487duwYNmxErF+UsUdxtKYWLVoYn4NMiXW/X2DxKYgrgpTd
unUzOzZOdsb8QbeMJExHofVSdnMj8q5d119/PWOcM3xRq+ABo4rTGj3i/PNV
QxXGIf3N2LYZHO8sT6J7EXFHfayajo2kSSLcUHKFI1Ikyqf7wgKUCVpg0Dcq
0GDDyDLWieoxrWFJYExIiN/FfklVLBtKh8Li5YoVKyCbje1UUWET750cXzGL
fjMPRBlwDWY5KKD0NKsVSWLDCglJUS2gAYtoQrWbfVCnAU2rCG0MVUSwlYYN
G8L4WNXIumTJEulpaSNXTQQ8VxnUnzbetOcvfazF20BNQBcQCK0AKf0YudAI
GdOLisKDOSAfdMu2Jm2iZlTrlIxB4ubsArlROkgAlqmApgj0gfpD5am2kBeV
Et9VzKJs15wZuPhjjiIoLUpFSZEx5v1Ji4OuSvVPWoeBQlpFIdJbjajNgLIF
XQAxVEX16tVPPfVUfCWOCNcHQnsmflu3nxQj24lOwMBdonJIm6oZtWCkQ5mg
AO5jwhaJXkSYlkSm5nRfksdIaUhn4ub9OPOCkNYKyIG2S5QliziQy85BV7jQ
HREbIAv7LFQlapdoMMSxAEMV0x/N5fQIXkwzhk2wD7jsssvOOOOMZs2aQYBr
r732448/Nmtnq8Uxc1/Y9v5Xpv+B2iGssqIcNQSppGCXSqUC7ZIWAR2iPK7V
25EjrfGfUNCCdGxel8RjUHR6KwzprZCthX0U8cDSGiYBDGKW5sfcKkQA7kiw
2yI0B7RhcGlsZJjCCKpWrRpyoQ9AKVF89g3sD+xMCToaPGm1aa3sD2yj5EmT
BhnguKheB1GS8kGYRSIgCVjlKEPIJUhFZANCV8pKISYVxTpA7UK6qO7j/Rtq
gzAtxDuz4HJghnzSU5cnP9QcuzSNPoJv9GqyfWrai/crxtN27doRWgCS9OzZ
Eyo+66yz+vbt27RpU9WDsAbQPGFefoOtGfWfZo5FLbOvJPiGVorQIFsDdEHr
YrMgklI6wslRXPPiGlSzGSy8LQ6E6rVoUfitUL2CfV0eITLSGp+KvQMtkUAH
rs/MHDNzIiE47YHR0RYgKkHREjZeUcXJo+1Y1BboE8kvuugiCAuToK+CHRVE
t1cr6u/Y1G0loS4sxoOwvypsb0gBa7fDJIoDruzI8TU3oD8UibMz08YV1FLK
oOWhUKAgZ1Ls92CEqE1mJYaaapm232NbMN+dFhmtz36RoyaIGNQ7G7dbzPHC
QnsVFxcPHDiQYAOtWrWySDXSszu87kmCA4tjULJk1AjLw5bIAZKtWCF0UH5i
3UV85EqJ6E8wHpeas47YHJRjP2qE1kLNQTxpa4zx55yMKuAHGxlZ0LVr1+OO
O4565mhvx20ZPxBeoal2wg4BsivcJBnzw3Uvh35Xk0TuyaKJAryFxXJWQ/gZ
JVUq1I8VIKEdS1iCENYLMQI4mwM5443r9ICcGAKtvaEGYZdBLMQsq8c8Agii
u0Y5ZRxZ7age7BIDFYt0efGyJwkGyCpVFipnpxwlbKkJEQH1yh47Ql/QMav5
tm4hJrSLSpMxIqlg2eTKr5ZXEvYLDglMlCTPatusfeK9J1o9l7IwHDmziSLl
9F6jwl9lSpRUroqKgpLLdTTnwah40kEFKJtKZsjdNOrJWEkJKXUIvyFbNF9c
IrmrcGIG7ysErxAGg0rdVPCqFuQld0tOyODVWvAK4SiEov9qBHnJXaD6Gbyu
FLxCWAgq9fmC13FBXnJ36/gMXm0ErxCWQShasFaQl9yxq5fB6yrBK4RNoFJf
KHjVCfKSO5B1M3hdLXjVEbwilAAZXVgvyEvuqdbJ4HWN4BXCDFCpmwle9YO8
5F5x7Qxe1wpeobj/UDTiiUFecg+8Vgav60I9kIjdV6mbC14nB3nJvf2aGbyu
F7xC8feh6MWGQV7yzOK4DF43CF6hGHqVuoXgdWqQlzyLOTaDV1vBKxQHH4p2
PD3IS54x1cjg1U7wCsWyq9QtBa8zg7xkpHz1DF43Cl6hePRQdGSjIC8Z7Z65
B9Ve8ArFlKvUrQSvc4K85Ewjc8fvJsErFBceiqY8N8hLRp1n7qHeLHiFYrtV
6t8IXk2DvOQssjiDVwfBKxSfHYq+PD/IS87jizJ43SJ4hWKsVerWgteFQV4y
grswg9etglcoTjoUrdksyEtGYWfuU3UUvEKxzip1G8GreZCXjKTO3M/pJHiF
4pVtVKfHq0WQl1y3Zu6HdBa8QjHHKvXVglfLIC+5w5A5X+wieIXihlXqawSv
VkFecj8oc07dVfDKFbyiddS1ghejVQWvtPTLcXx07Fqh5bN3794lSx+5rkOv
0rvHmUhLW6Lk/v37V69Zc1PnfgNvu1OtunQbqCZ4WUa//vrr+vXrO/cc1LX3
YHzAV8bJdY843j5mTqfu/e66d96MxWsnPbCiX8moXgNHvLjlI85JUnv27Ona
o++we2bg9dSFqwcPH19yx3CIoLmmfK4//fzLnEfXd+rW97bS+3KQWkdY9h0w
ZN++fSaCsDu1uXfvrd36uvjHUffNn7dgoXpFSwTxXv0GuchZCDV6zHj16srM
GuzUo//spc+ZVPhk4m+7eLzK5swdO/3h7JGtUCSK5t5363Pbp59+6t6/+du3
eg4c4d4PHDpm69at6lVnj4uMXJWRpzJy1UWe8n15eXnJyPvde1QGql9yGVE6
Clp1qbr0HLR7925HRZZVRumCJRiHonR9LmufWTds9NSM6NWOXXq4uGYXUWyj
V2/u2M1Ft6J2O/for2pXRun6XEBv6Ii7psxbaaJbl5W/1bX3kJ07d5qZ8NTp
ZSPGzrTRrYoLuG7ctMm8f2z5iiF3TlBcmP/2kZNM/DZrX7cqFas6YeIk6AlW
23PA0M7d+/x2+1toFur2T62TQkZ1btz2CXJDUlQv6q5j194vv7yRnFTk6LpX
d0IrKFUOZEjkdujc84mVT6qXtOpemhKq4pHH16AEjCrlZenLyt9WvvpX6BSM
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
SG49oNPePsIUVx4vWs7euwrTRB5ev2xvyRZlqkoPcN47zI4IH6hPxt0+t+m3
qg8I3sWpWhoSKl0Hy2O82RlTwTMxRrmyvTz38hZTM1NtSXJMXEg0iqh40UQi
dKsx77m0cU4MRsOHeQ+tmLpglRwN5RijPX5VR60E583U+LD5zd+NnLRQSTRN
S6Q9jtS9nQwWolLDkhTYKE1KYvpOOfY1CMiRSCE95zq8dtrW8HQnRS6DU5R/
jPR7Yv8M26F9gNLtI0aDRfjuRsG7gDftsu7b3nizqZEZmjO9u1ANDMsL33ap
IhnZIhqcctqiJzYmwjctCr75vNcbuU457fQx05aA6UyPJ6+c1wIKnpxzPraq
3Iy/VQU3Oedketjag6u3qpLN0lzC82O5LpZrJhnb7/qWsiBVuSaSa1E5lz9e
UJ0dpCpvwZOrRrnuqCeozglSlSstub6Ta6S6guoDQap1BFW5EpPruTqC6twg
Vbl+k2smufasLajOC1KVt7nJ1U3wLj6P6vwgVbkqPElQDd6e51FdEKQqb0pr
IKgG77rzqC4MUpVrzVME1eDNdB7VRUGq8hay0wTV4D1yHtUHg1TlCvYMQTV4
65tHdXGQqrzh6yxBNXhHm0f1oSBVuS4+W1AN3qjmUX04SFXentVYUA3ef+ZR
XRKkKlfXTQTV4G1lHtWlQaryZqrzBNXg3WIe1UeCVOXK+wJBNXgTmEf10SDV
lKB6kaBaKKjKFc1jQapyPX6xoJoSVOVKYlmQqrxR6RJBNXgnlkd1eZCqXKFf
KqgGb7DyqD4epCpvK7pMUA3eN+VRXRGkKtfjlwuqwduhPKpPBKnK0/4rBNXg
6ZJHdaWmqk+3U/v37y8vL7+p222z5z3Iy2xIV3sqVrE06djcc/DI8ZNn0c/V
klulqelz15S6yadH35KR908se2zEuNk9BwwtHTMJ1OwdRPcvKu/RZ+BtpfeN
nf7wXffO61cyCtPBxWteBx3t5Gk8Vv/yl7907t5H3Y5Cv9fbR00xXqD0e4U4
IDNv+Uvm/T1THpw+S09IfCoLFi4aff+i7N6z0kfXec+u8qhU3t/Yp+LuHgr7
Psu7h5zvs09l2fLHSyfMcSVaVv7WLZ26q5tXWCJkQcaMEpvbbny98LYk5c2d
6/n7bt6yxfj7jigdNWXeSv0q8vc12n/S1XXBvn37UCho447R01Hmjl17q9tr
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\
\>"],ExpressionUUID->"07b11511-7aaf-49b1-b055-153eb2517e4f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReduceLattice", "[", 
  RowBox[{"FormulaGraphReverse2", "[", 
   RowBox[{"FindFullFormula", "[", 
    RowBox[{"JacobsThalGraph", "[", "3", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.7747295702013693`*^9},
 CellLabel->
  "In[706]:=",ExpressionUUID->"cda6ba90-54e2-4c9a-aac6-7ee31e368074"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{2, 2, 1, 1, 1}, {2, 2, 2, 1}, {2, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1,
        1, 1}}, {{{1, 2}, {3, 1}, {4, 3}}, Null}, {
      EdgeLabels -> {
        DirectedEdge[{2, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1}] -> Placed[
           Rotate[20, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1}] -> Placed[
           Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1}, {2, 2, 2, 1}] -> Placed[
           Rotate[15, Rational[1, 4] Pi], {Left, "Middle"}]}, GraphLayout -> 
       "LayeredDigraphEmbedding", VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {ArrowBox[{{0., 1.}, {0., 0.}}, 0.030239520958083826`], 
         InsetBox[
          RotationBox["15",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 0.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.}, {0., 1.}}, 0.030239520958083826`], InsetBox[
          RotationBox["20",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 3.}, {0., 2.}}, 0.030239520958083826`], InsetBox[
          RotationBox["6",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.030239520958083826], InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.030239520958083826, 1.030239520958084}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 0.}, 0.030239520958083826], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.030239520958083826, 0.030239520958083826}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 2.}, 0.030239520958083826], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.030239520958083826, 2.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{0., 3.}, 0.030239520958083826], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.030239520958083826, 3.0302395209580837}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.7747295725150194`*^9},
 CellLabel->
  "Out[706]=",ExpressionUUID->"ced56db1-3225-40b2-a41e-7350f5ca905f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ReduceLattice", "[", 
  RowBox[{"FormulaGraphReverse2", "[", 
   RowBox[{"FindFullFormula", "[", 
    RowBox[{"JacobsThalGraph", "[", "4", "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.7747295854787674`*^9},
 CellLabel->
  "In[707]:=",ExpressionUUID->"4c238610-aaea-4805-8f77-2fa69f01a485"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{3, 3, 1, 1}, {3, 3, 2}, {3, 2, 2, 1}, {3, 2, 1, 1, 1}, {2, 2, 2, 
       1, 1}, {3, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}, {
       2, 2, 2, 2}, {1, 1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 1}, {4, 
       3}, {5, 3}, {6, 4}, {7, 4}, {8, 6}, {7, 5}, {8, 7}, {5, 9}, {10, 8}}, 
       Null}, {EdgeLabels -> {
        DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
           Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> Placed[
           Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> Placed[
           Rotate[54, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}] -> Placed[
           Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[10, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}] -> Placed[
           Rotate[18, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}] -> Placed[
           Rotate[16, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
           Rotate[24, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1, 1}, {3, 3, 2}] -> Placed[
           Rotate[1, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
           Rotate[66, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}] -> Placed[
           Rotate[12, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1}, {3, 3, 2}] -> Placed[
           Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}]}, GraphLayout -> 
       "LayeredDigraphEmbedding", VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        Medium], {ArrowBox[{{0., 1.}, {1., 0.}}, 0.043048128342245986`], 
         InsetBox[
          RotationBox["1",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 0.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 1.}, {1., 0.}}, 0.043048128342245986`], InsetBox[
          RotationBox["6",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 0.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.}, {0., 1.}}, 0.043048128342245986`], InsetBox[
          RotationBox["6",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {0.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.}, {1., 1.}}, 0.043048128342245986`], InsetBox[
          RotationBox["12",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.}, {1., 1.}}, 0.043048128342245986`], InsetBox[
          RotationBox["18",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.}, {2., 1.}}, 0.043048128342245986`], InsetBox[
          RotationBox["16",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {2., 1.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.}, {1., 2.}}, 0.043048128342245986`], InsetBox[
          RotationBox["8",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 3.}, {1., 2.}}, 0.043048128342245986`], InsetBox[
          RotationBox["24",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 3.}, {2., 2.}}, 0.043048128342245986`], InsetBox[
          RotationBox["66",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {2., 2.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.}, {1., 3.}}, 0.043048128342245986`], InsetBox[
          RotationBox["6",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.}, {2., 3.}}, 0.043048128342245986`], InsetBox[
          RotationBox["54",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1.5, 3.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 5.}, {1., 4.}}, 0.043048128342245986`], InsetBox[
          RotationBox["10",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, {1., 4.5}], 
          ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 1.}, 0.043048128342245986], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.043048128342245986, 1.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 0.}, 0.043048128342245986], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "2"}], "}"}], 
          Offset[{2, 2}, {1.043048128342246, 0.043048128342245986}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 1.}, 0.043048128342245986], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.043048128342246, 1.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 2.}, 0.043048128342245986], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.043048128342246, 2.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 2.}, 0.043048128342245986], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {2.043048128342246, 2.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 3.}, 0.043048128342245986], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {1.043048128342246, 3.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 3.}, 0.043048128342245986], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {2.043048128342246, 3.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 4.}, 0.043048128342245986], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {1.043048128342246, 4.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 1.}, 0.043048128342245986], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
          Offset[{2, 2}, {2.043048128342246, 1.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{1., 5.}, 0.043048128342245986], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.043048128342246, 5.043048128342246}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.774729588343257*^9},
 CellLabel->
  "Out[707]=",ExpressionUUID->"8508d4af-5ca1-4f81-86b8-6f7f513edad8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bigF", "=", 
   RowBox[{"FindFullFormula", "[", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"Range", "[", "8", "]"}], ",", 
      RowBox[{"{", "}"}]}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7747677591040516`*^9, 3.774767761289091*^9}},
 CellLabel->
  "In[715]:=",ExpressionUUID->"73e6daf3-2fa2-424f-86fd-b5368f2e0958"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "bigF", "]"}]], "Input",
 CellChangeTimes->{{3.7747678135170727`*^9, 3.7747678191367407`*^9}},
 CellLabel->
  "In[717]:=",ExpressionUUID->"352bfc61-776e-4796-9bdc-5a6e27b08e0d"],

Cell[BoxData["4140"], "Output",
 CellChangeTimes->{3.7747708055597467`*^9},
 CellLabel->
  "Out[717]=",ExpressionUUID->"432779ef-88ca-470d-97c6-48fdd58577c5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bigFRev", "=", 
   RowBox[{"FormulaGraphReverse2", "[", "bigF", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.774767779143391*^9, 3.774767783174676*^9}},
 CellLabel->
  "In[716]:=",ExpressionUUID->"dd73a58d-f723-40ae-b749-c0aa32eb604c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"big", "=", 
   RowBox[{"ReduceLattice", "[", "bigFRev", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7747669107129283`*^9, 3.774766931810277*^9}, 
   3.774767672012009*^9, {3.774767756753789*^9, 3.7747677931939845`*^9}},
 CellLabel->
  "In[719]:=",ExpressionUUID->"af49f53e-a689-4dea-8285-d2a88536c0b1"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"small", "=", 
    RowBox[{"ReduceLattice", "[", 
     RowBox[{"FormulaGraphReverse2", "[", 
      RowBox[{"FindFullFormula", "[", 
       RowBox[{"JacobsThalGraph", "[", "4", "]"}], "]"}], "]"}], "]"}]}], 
   ";"}]}]], "Input",
 CellLabel->
  "In[713]:=",ExpressionUUID->"1d00bf4f-c271-44c1-af8a-ca9999918794"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Map", "[", 
    RowBox[{"SymbolLevel", ",", 
     RowBox[{"FindFullFormula", "[", 
      RowBox[{"JacobsThalGraph", "[", "4", "]"}], "]"}]}], "]"}], "//", 
   "Tally"}], "//", "Sort"}]], "Input",
 CellChangeTimes->{{3.7747821147127976`*^9, 3.7747821392533054`*^9}},
 CellLabel->
  "In[726]:=",ExpressionUUID->"fc282b45-e0d6-486f-916c-7f5e0f4a8dad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "30"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.774782126212654*^9, 3.774782140473316*^9}},
 CellLabel->
  "Out[726]=",ExpressionUUID->"c087ca01-aca3-4fd2-b54b-f0c783ab134f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VertexCount", "[", 
  RowBox[{"MinimalGraph", "[", "7", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7747821534669743`*^9, 3.7747821779493647`*^9}},
 CellLabel->
  "In[728]:=",ExpressionUUID->"2c52ec24-e22f-455a-a70c-e45943ae9bc4"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{{3.7747821673156056`*^9, 3.7747821790747204`*^9}},
 CellLabel->
  "Out[728]=",ExpressionUUID->"72127bbf-42e8-49a4-b971-fcf1783ed30e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarelyNColorableGraphsOfCount", "[", "8", "]"}]], "Input",
 CellChangeTimes->{{3.774782238617711*^9, 3.774782244609521*^9}},
 CellLabel->
  "In[730]:=",ExpressionUUID->"db75f171-2016-4c2f-94f7-7329b340e2dc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 21, 24, 27, 30, 33, 36}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {4}, {5}, {
            6}, {7}, {8}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {
            2}, {3}, {1}, {2}, {3}}}, Pattern}]}, {
        EdgeLabels -> {UndirectedEdge[1, 2] -> Style[
             Framed[10, Background -> GrayLevel[1]], 
             RGBColor[0, 
              Rational[2, 3], 0], Bold, 14]}, GraphLayout -> 
         "RadialEmbedding", VertexLabels -> {"Name"}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[
          0.7], {LineBox[{{0.7068017553469138, 0.7249784794499715}, {
            0.39224538190339847`, 1.3781615193336294`}}], InsetBox[
            StyleBox[
             FrameBox["10",
              Background->GrayLevel[1],
              StripOnInput->False],
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]], {0.5495235686251562, 1.0515699993918004}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {0., 
           0.8863013677954079}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           0.13999075600112443`, 0.272961790945863}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           0.7068017553469137, 0.}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           1.273612754692703, 0.27296179094586276`}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           1.4136035106938276`, 0.8863013677954077}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           1.0213581287904294`, 1.3781615193336294`}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {0., 
           0.8863013677954079}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           0.13999075600112443`, 0.272961790945863}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           0.7068017553469137, 0.}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           1.273612754692703, 0.27296179094586276`}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           1.4136035106938276`, 0.8863013677954077}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           1.0213581287904294`, 1.3781615193336294`}}], 
          LineBox[{{0., 0.8863013677954079}, {0.13999075600112443`, 
           0.272961790945863}}], 
          LineBox[{{0., 0.8863013677954079}, {0.7068017553469137, 0.}}], 
          LineBox[{{0., 0.8863013677954079}, {1.273612754692703, 
           0.27296179094586276`}}], 
          LineBox[{{0., 0.8863013677954079}, {1.4136035106938276`, 
           0.8863013677954077}}], 
          LineBox[{{0., 0.8863013677954079}, {1.0213581287904294`, 
           1.3781615193336294`}}]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.7068017553469138, 0.7249784794499715}, 
            0.017668885280411523], 
           InsetBox["1", 
            Offset[{2, 2}, {0.7244706406273254, 0.7426473647303831}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.39224538190339847, 1.3781615193336294}, 
            0.017668885280411523], 
           InsetBox["2", 
            Offset[{2, 2}, {0.40991426718380997, 1.3958304046140408}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.8863013677954079}, 0.017668885280411523], 
           InsetBox["3", 
            Offset[{2, 2}, {0.017668885280411523, 0.9039702530758195}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.13999075600112443, 0.272961790945863}, 
            0.017668885280411523], 
           InsetBox["4", 
            Offset[{2, 2}, {0.15765964128153595, 0.2906306762262745}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.7068017553469137, 0.}, 0.017668885280411523], 
           InsetBox["5", 
            Offset[{2, 2}, {0.7244706406273252, 0.017668885280411523}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.273612754692703, 0.27296179094586276}, 
            0.017668885280411523], 
           InsetBox["6", 
            Offset[{2, 2}, {1.2912816399731144, 0.29063067622627425}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.4136035106938276, 0.8863013677954077}, 
            0.017668885280411523], 
           InsetBox["7", 
            Offset[{2, 2}, {1.431272395974239, 0.9039702530758192}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.0213581287904294, 1.3781615193336294}, 
            0.017668885280411523], 
           InsetBox["8", 
            Offset[{2, 2}, {1.0390270140708409, 1.3958304046140408}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 20, 26, 30, 34, 38, 42}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {5}, {6}, {
            7}, {8}, {1}, {2}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {1}, {
            2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, 
           Pattern}]}, {EdgeLabels -> {UndirectedEdge[1, 2] -> Style[
             Framed[7, Background -> GrayLevel[1]], 
             RGBColor[0, 
              Rational[2, 3], 0], Bold, 14]}, GraphLayout -> 
         "RadialEmbedding", VertexLabels -> {"Name"}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[
          0.7], {LineBox[{{0.6712748894677898, 0.6885379740185316}, {
            0.37252945877620125`, 1.3088892529778333`}}], InsetBox[
            StyleBox[
             FrameBox["7",
              Background->GrayLevel[1],
              StripOnInput->False],
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]], {0.5219021741219956, 0.9987136134981824}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {0., 
           0.8417520870615238}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           0.13295422450534733`, 0.2592415690255036}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           0.6712748894677897, 0.}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           1.2095955544302321`, 0.2592415690255033}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           1.3425497789355796`, 0.8417520870615236}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           0.9700203201593786, 1.308889252977833}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {0., 
           0.8417520870615238}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           0.13295422450534733`, 0.2592415690255036}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           0.6712748894677897, 0.}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           1.2095955544302321`, 0.2592415690255033}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           1.3425497789355796`, 0.8417520870615236}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           0.9700203201593786, 1.308889252977833}}], 
          LineBox[{{0., 0.8417520870615238}, {0.6712748894677897, 0.}}], 
          LineBox[{{0., 0.8417520870615238}, {1.2095955544302321`, 
           0.2592415690255033}}], 
          LineBox[{{0., 0.8417520870615238}, {1.3425497789355796`, 
           0.8417520870615236}}], 
          LineBox[{{0., 0.8417520870615238}, {0.9700203201593786, 
           1.308889252977833}}], 
          LineBox[{{0.13295422450534733`, 0.2592415690255036}, {
           0.6712748894677897, 0.}}], 
          LineBox[{{0.13295422450534733`, 0.2592415690255036}, {
           1.2095955544302321`, 0.2592415690255033}}], 
          LineBox[{{0.13295422450534733`, 0.2592415690255036}, {
           1.3425497789355796`, 0.8417520870615236}}], 
          LineBox[{{0.13295422450534733`, 0.2592415690255036}, {
           0.9700203201593786, 1.308889252977833}}]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.6712748894677898, 0.6885379740185316}, 
            0.0170438170794259], 
           InsetBox["1", 
            Offset[{2, 2}, {0.6883187065472157, 0.7055817910979575}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.37252945877620125, 1.3088892529778333}, 
            0.0170438170794259], 
           InsetBox["2", 
            Offset[{2, 2}, {0.3895732758556272, 1.3259330700572591}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.8417520870615238}, 0.0170438170794259], 
           InsetBox["3", 
            Offset[{2, 2}, {0.0170438170794259, 0.8587959041409498}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.13295422450534733, 0.2592415690255036}, 
            0.0170438170794259], 
           InsetBox["4", 
            Offset[{2, 2}, {0.14999804158477323, 0.2762853861049295}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.6712748894677897, 0.}, 0.0170438170794259], 
           InsetBox["5", 
            Offset[{2, 2}, {0.6883187065472156, 0.0170438170794259}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.2095955544302321, 0.2592415690255033}, 
            0.0170438170794259], 
           InsetBox["6", 
            Offset[{2, 2}, {1.226639371509658, 0.27628538610492925}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.3425497789355796, 0.8417520870615236}, 
            0.0170438170794259], 
           InsetBox["7", 
            Offset[{2, 2}, {1.3595935960150054, 0.8587959041409495}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.9700203201593786, 1.308889252977833}, 
            0.0170438170794259], 
           InsetBox["8", 
            Offset[{2, 2}, {0.9870641372388045, 1.325933070057259}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 19, 24, 29, 34, 39, 44}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {6}, {7}, {
            8}, {1}, {2}, {6}, {7}, {8}, {1}, {2}, {6}, {7}, {8}, {1}, {2}, {
            3}, {4}, {5}, {1}, {2}, {3}, {4}, {5}, {1}, {2}, {3}, {4}, {5}}}, 
           Pattern}]}, {EdgeLabels -> {UndirectedEdge[1, 2] -> Style[
             Framed[6, Background -> GrayLevel[1]], 
             RGBColor[0, 
              Rational[2, 3], 0], Bold, 14]}, GraphLayout -> 
         "RadialEmbedding", VertexLabels -> {"Name"}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[
          0.7], {LineBox[{{0.6593576999017802, 0.6763143117178598}, {
            0.3659159175149174, 1.2856524514925038`}}], InsetBox[
            StyleBox[
             FrameBox["6",
              Background->GrayLevel[1],
              StripOnInput->False],
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]], {0.5126368087083488, 0.9809833816051818}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {0., 
           0.82680840400934}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           0.13059387895706054`, 0.25463923551066575`}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           0.6593576999017801, 0.}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           1.1881215208464997`, 0.25463923551066553`}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           1.3187153998035603`, 0.8268084040093397}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           0.9527994822886432, 1.2856524514925036`}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {0., 
           0.82680840400934}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           0.13059387895706054`, 0.25463923551066575`}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           0.6593576999017801, 0.}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           1.1881215208464997`, 0.25463923551066553`}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           1.3187153998035603`, 0.8268084040093397}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           0.9527994822886432, 1.2856524514925036`}}], 
          LineBox[{{0., 0.82680840400934}, {1.1881215208464997`, 
           0.25463923551066553`}}], 
          LineBox[{{0., 0.82680840400934}, {1.3187153998035603`, 
           0.8268084040093397}}], 
          LineBox[{{0., 0.82680840400934}, {0.9527994822886432, 
           1.2856524514925036`}}], 
          LineBox[{{0.13059387895706054`, 0.25463923551066575`}, {
           1.1881215208464997`, 0.25463923551066553`}}], 
          LineBox[{{0.13059387895706054`, 0.25463923551066575`}, {
           1.3187153998035603`, 0.8268084040093397}}], 
          LineBox[{{0.13059387895706054`, 0.25463923551066575`}, {
           0.9527994822886432, 1.2856524514925036`}}], 
          LineBox[{{0.6593576999017801, 0.}, {1.1881215208464997`, 
           0.25463923551066553`}}], 
          LineBox[{{0.6593576999017801, 0.}, {1.3187153998035603`, 
           0.8268084040093397}}], 
          LineBox[{{0.6593576999017801, 0.}, {0.9527994822886432, 
           1.2856524514925036`}}]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.6593576999017802, 0.6763143117178598}, 
            0.016832818469537048], 
           InsetBox["1", 
            Offset[{2, 2}, {0.6761905183713173, 0.6931471301873968}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.3659159175149174, 1.2856524514925038}, 
            0.016832818469537048], 
           InsetBox["2", 
            Offset[{2, 2}, {0.38274873598445447, 1.3024852699620408}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.82680840400934}, 0.016832818469537048], 
           InsetBox["3", 
            Offset[{2, 2}, {0.016832818469537048, 0.843641222478877}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.13059387895706054, 0.25463923551066575}, 
            0.016832818469537048], 
           InsetBox["4", 
            Offset[{2, 2}, {0.14742669742659759, 0.2714720539802028}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.6593576999017801, 0.}, 0.016832818469537048], 
           InsetBox["5", 
            Offset[{2, 2}, {0.676190518371317, 0.016832818469537048}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.1881215208464997, 0.25463923551066553}, 
            0.016832818469537048], 
           InsetBox["6", 
            Offset[{2, 2}, {1.2049543393160367, 0.2714720539802026}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.3187153998035603, 0.8268084040093397}, 
            0.016832818469537048], 
           InsetBox["7", 
            Offset[{2, 2}, {1.3355482182730973, 0.8436412224788767}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.9527994822886432, 1.2856524514925036}, 
            0.016832818469537048], 
           InsetBox["8", 
            Offset[{2, 2}, {0.9696323007581802, 1.3024852699620406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 13, 19, 25, 31, 36, 41, 46}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {4}, {5}, {6}, {7}, {8}, {1}, {4}, {5}, {6}, {7}, {
            8}, {1}, {2}, {3}, {6}, {7}, {8}, {1}, {2}, {3}, {6}, {7}, {8}, {
            1}, {2}, {3}, {4}, {5}, {1}, {2}, {3}, {4}, {5}, {1}, {2}, {3}, {
            4}, {5}}}, Pattern}]}, {
        EdgeLabels -> {UndirectedEdge[1, 2] -> Style[
             Framed[5, Background -> GrayLevel[1]], 
             RGBColor[0, 
              Rational[2, 3], 0], Bold, 14]}, GraphLayout -> 
         "RadialEmbedding", VertexLabels -> {"Name"}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[
          0.7], {LineBox[{{0.6576675968438843, 0.6745807445107076}, {
            0.36497798107887236`, 1.2823569942012907`}}], InsetBox[
            StyleBox[
             FrameBox["5",
              Background->GrayLevel[1],
              StripOnInput->False],
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]], {0.5113227889613783, 0.9784688693559991}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {0., 
           0.8246890818081762}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           0.13025913331869043`, 0.2539865297780097}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           0.6576675968438842, 0.}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           1.185076060369078, 0.25398652977800945`}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           1.3153351936877686`, 0.824689081808176}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           0.9503572126088965, 1.2823569942012907`}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           0.13025913331869043`, 0.2539865297780097}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           0.6576675968438842, 0.}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           1.185076060369078, 0.25398652977800945`}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           1.3153351936877686`, 0.824689081808176}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           0.9503572126088965, 1.2823569942012907`}}], 
          LineBox[{{0., 0.8246890818081762}, {0.13025913331869043`, 
           0.2539865297780097}}], 
          LineBox[{{0., 0.8246890818081762}, {0.6576675968438842, 0.}}], 
          LineBox[{{0., 0.8246890818081762}, {1.185076060369078, 
           0.25398652977800945`}}], 
          LineBox[{{0., 0.8246890818081762}, {1.3153351936877686`, 
           0.824689081808176}}], 
          LineBox[{{0., 0.8246890818081762}, {0.9503572126088965, 
           1.2823569942012907`}}], 
          LineBox[{{0.13025913331869043`, 0.2539865297780097}, {
           1.185076060369078, 0.25398652977800945`}}], 
          LineBox[{{0.13025913331869043`, 0.2539865297780097}, {
           1.3153351936877686`, 0.824689081808176}}], 
          LineBox[{{0.13025913331869043`, 0.2539865297780097}, {
           0.9503572126088965, 1.2823569942012907`}}], 
          LineBox[{{0.6576675968438842, 0.}, {1.185076060369078, 
           0.25398652977800945`}}], 
          LineBox[{{0.6576675968438842, 0.}, {1.3153351936877686`, 
           0.824689081808176}}], 
          LineBox[{{0.6576675968438842, 0.}, {0.9503572126088965, 
           1.2823569942012907`}}]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.6576675968438843, 0.6745807445107076}, 
            0.016802840282861525], 
           InsetBox["1", 
            Offset[{2, 2}, {0.6744704371267458, 0.6913835847935691}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.36497798107887236, 1.2823569942012907}, 
            0.016802840282861525], 
           InsetBox["2", 
            Offset[{2, 2}, {0.38178082136173386, 1.2991598344841522}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.8246890818081762}, 0.016802840282861525], 
           InsetBox["3", 
            Offset[{2, 2}, {0.016802840282861525, 0.8414919220910377}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.13025913331869043, 0.2539865297780097}, 
            0.016802840282861525], 
           InsetBox["4", 
            Offset[{2, 2}, {0.14706197360155196, 0.2707893700608712}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.6576675968438842, 0.}, 0.016802840282861525], 
           InsetBox["5", 
            Offset[{2, 2}, {0.6744704371267457, 0.016802840282861525}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.185076060369078, 0.25398652977800945}, 
            0.016802840282861525], 
           InsetBox["6", 
            Offset[{2, 2}, {1.2018789006519395, 0.270789370060871}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.3153351936877686, 0.824689081808176}, 
            0.016802840282861525], 
           InsetBox["7", 
            Offset[{2, 2}, {1.3321380339706301, 0.8414919220910375}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.9503572126088965, 1.2823569942012907}, 
            0.016802840282861525], 
           InsetBox["8", 
            Offset[{2, 2}, {0.967160052891758, 1.2991598344841522}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 6, 12, 18, 24, 30, 36, 42, 48}, {{3}, {4}, {5}, {6}, {7}, {
            8}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {5}, {6}, {7}, {8}, {
            1}, {2}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {7}, {8}, {1}, {
            2}, {3}, {4}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {1}, {2}, {
            3}, {4}, {5}, {6}}}, Pattern}]}, {
        GraphLayout -> "RadialEmbedding", VertexLabels -> {"Name"}, 
         VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGCQAGImKF6gc/9owv1L9sVmTLMkIj7YzwPzH9mXgPkP7NHl
GcBgg82aQObnKi0/MOQnQfkQdSds0OVfHTqnIej/BiqPy/5P9pk47P8C1V+I
4h4GhnKoenT3o8ujux9dHt396PLo7sduP8L96PLo7kd3L7r96PLo9qPLo9uP
Lo89/BDhgd3/CHns/kfIY/c/Qh7dfuz+RehHl0fXjz08EPrR5dH1AwCwBx6W

           "]]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.2948839123097944, 1.0215078369104986}, 
            0.018699735330147155], 
           InsetBox["1", 
            Offset[{2, 2}, {0.3135836476399415, 1.0402075722406459}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.5107539184552498}, 0.018699735330147155], 
           InsetBox["2", 
            Offset[{2, 2}, {0.018699735330147155, 0.5294536537853969}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.5897678246195885, 0.5107539184552494}, 
            0.018699735330147155], 
           InsetBox["3", 
            Offset[{2, 2}, {0.6084675599497357, 0.5294536537853965}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2.220446049250313*^-16, 1.5322617553657478}, 
            0.018699735330147155], 
           InsetBox["4", 
            Offset[{2, 2}, {0.018699735330147377, 1.550961490695895}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.2948839123097936, 6.661338147750939*^-16}, 
            0.018699735330147155], 
           InsetBox["5", 
            Offset[{2, 2}, {0.31358364763994073, 0.01869973533014782}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8846517369293825, 0.}, 0.018699735330147155], 
           InsetBox["6", 
            Offset[{2, 2}, {0.9033514722595296, 0.018699735330147155}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.179535649239177, 0.5107539184552482}, 
            0.018699735330147155], 
           InsetBox["7", 
            Offset[{2, 2}, {1.1982353845693243, 0.5294536537853953}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8846517369293836, 1.0215078369104982}, 
            0.018699735330147155], 
           InsetBox["8", 
            Offset[{2, 2}, {0.9033514722595307, 1.0402075722406454}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.7747822458861523`*^9},
 CellLabel->
  "Out[730]=",ExpressionUUID->"fd628de1-ea26-4fd6-afb3-9e99301572e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"big", ",", 
     RowBox[{"GraphHighlight", "\[Rule]", 
      RowBox[{"EdgeList", "[", 
       RowBox[{"ReduceLattice", "[", 
        RowBox[{"FormulaGraphReverse2", "[", 
         RowBox[{"FindFullFormula", "[", "g", "]"}], "]"}], "]"}], "]"}]}], 
     ",", " ", 
     RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", " ", 
     RowBox[{"ImageSize", "\[Rule]", "800"}], ",", " ", 
     RowBox[{"AspectRatio", "\[Rule]", "GoldenRatio"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"g", ",", 
     RowBox[{"BarelyNColorableGraphsOfCount", "[", "8", "]"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7747822638980274`*^9, 3.7747822832699966`*^9}},
 CellLabel->
  "In[731]:=",ExpressionUUID->"8b5f8ccf-72ca-423f-8a9a-b1dd78c01e2d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{{7, 1}, {8}, {6, 2}, {5, 3}, {4, 4}, {6, 1, 1}, {5, 2, 1}, {4, 
         3, 1}, {4, 2, 2}, {3, 3, 2}, {5, 1, 1, 1}, {4, 2, 1, 1}, {3, 3, 1, 
         1}, {3, 2, 2, 1}, {4, 1, 1, 1, 1}, {3, 2, 1, 1, 1}, {2, 2, 2, 2}, {2,
          2, 2, 1, 1}, {3, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}, {2, 1, 1, 1, 1,
          1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 
         2}, {6, 1}, {7, 1}, {8, 1}, {6, 3}, {7, 3}, {9, 3}, {10, 3}, {11, 
         6}, {12, 6}, {13, 6}, {7, 4}, {8, 4}, {10, 4}, {11, 7}, {12, 7}, {14,
          7}, {15, 11}, {16, 11}, {8, 5}, {9, 5}, {12, 8}, {13, 8}, {14, 8}, {
         12, 9}, {14, 9}, {17, 9}, {15, 12}, {16, 12}, {18, 12}, {19, 15}, {
         20, 15}, {13, 10}, {14, 10}, {16, 13}, {16, 14}, {18, 14}, {19, 
         16}, {20, 16}, {21, 19}, {18, 17}, {20, 18}, {21, 20}, {22, 21}}, 
         Null}, {AspectRatio -> GoldenRatio, 
         EdgeLabels -> {DirectedEdge[{4, 1, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {6, 2}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {5, 3}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {3, 3, 2}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {4, 4}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 4}, {8}] -> Placed[
             Rotate[35, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {6, 2}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {7, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 1, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[2520, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 2}, {4, 2, 2}] -> Placed[
             Rotate[630, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[1120, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {7, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {5, 3}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{7, 1}, {8}] -> Placed[
             Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
           Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 3}, {8}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {5, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {5, 3}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {6, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {3, 3, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {7, 1}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {6, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 2, 2}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 2}, {8}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {4, 4}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}]}, 
         GraphHighlight -> {
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {5, 1, 1, 1}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}], 
           DirectedEdge[{4, 1, 1, 1, 1}, {5, 1, 1, 1}]}, 
         GraphHighlightStyle -> {"Thick"}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         ImageSize -> 800, VertexLabels -> {"Name"}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
          0.03178333455671099], {
           ArrowBox[{{0., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["8",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["35",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], Offset[{-2., 0.}, 
            {0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1120",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {0., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {2., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["630",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {2., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["2520",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {3., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 4.6229542535711285`}, {2., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 5.547545104285354}, {0., 4.6229542535711285`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 5.547545104285354}, {1., 4.6229542535711285`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 6.47213595499958}, {0., 5.547545104285354}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 6.009840529642467}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.9245908507142256}, 0.050853335290737586], 
           InsetBox[
            RowBox[{"{", 
             RowBox[{"7", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.050853335290737586],
            InsetBox[
            RowBox[{"{", "8", "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.050853335290737586}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "3"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "4"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "3", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {0.050853335290737586, 4.673807588861866}],
             ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {1.0508533352907377, 4.673807588861866}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 5.547545104285354}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
              "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 5.5983984395760915}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 6.47213595499958}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
              ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 6.522989290290317}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->800,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzkvXe8l8W1N/rLLr/d6CJFpEkVBAERka70KhZ6kbrZ9F5EASuCVBEFBQEF
FRUFG9ZEo1ETjTEmJ2qOiZqY8ya+JzeevPEkb845n7vvd+a7ZuZ51jOQc9/7
5+Vjdn6/3zOzZvW1Zj1TRs9cVTV38cxV82fPbDF0xcxlVfNnr2wxZOkK/FT4
nVyusEUuV/Rioxw+V+dy/F/yXyv8L/3T/19/udh8K/z2228PHT48c868XGH/
KwfnCqdOn7Vv//1fffVV7n+mWnc234o++OCDCZOvX3LDXTsffLbw6PM/zhXd
feT08g07x02eefzxJ75O9bjI9vj73/++Zeu2KbMW7j/+vRLb4/Cpdxetvq1q
weKvv/7699kehWi+cuMu07Tc/CncvPf43KpFgJP7H6nWHW1rYATgpmEN23rZ
+i1HHjpqHv1LqnUHRy3wByq5mrY1cJk0fe7nn38ebf3Ek08uWHWraVjLtl53
x31bt+0wj34Xab1k2UqgGlofPPHWiNFjz9R63MSp9x57xTSsbVuPGHPtn/70
J/Poq0hriAatQuvRV08A987Ueuy140Hifxc2JHHX/qf+u3gfe+SRRWs2h9Y3
bT1w6+2bs63bm2/Fv/ziD+/89NenXn1v4tRZhuvsM37KnE8//TTb5wLb5/Ov
/vX9f/rN82/8fM+x12+8+5lcQdUtj+aKbt9/+o//9u3bb799/bxllN2KDdsf
OPhgVtLnZ6DcfO/zuRIDJb//8Tf/4z//i+1uu2Mr9KzCwgIDps6Ym9WxBhbW
V3/45sNPvgqwahhYZfjORn/+y1+feOmD77//KTR37qJ14F+u1EAthi6CuR/+
0z9j2N//658VnvUsP9EZT0Fdro6BWrL4jseBNx799W//gRHwdeuDr+QKTNui
V159ddyk6TA3aA6tDzyFUoKf0Hm2ASaA89AzPwTgtLTPseNBHHhuhqpl/pSu
2XES5HGw5VufxG8YEr8UmtZlUBt4A+gqFLDfgMH4C92CDUB8OdsiD3YCBLth
bAD6TWrU+nZUkITnZkDLuyLQ9Mdv/vLdH36KvoXml0LPzVze9lDfSyAA4o3/
gCceY+TcF6mxzrU9f/Gr/yEUllvIB0/84JW3P8ZAuSL7HRKkDuRKbHvoGDQr
fIc4pL/VvEL0BKLm0a+zulGIR9K61La+97E3ANB8LLbfYQEpusBa/A4p5Eqd
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
t16T0jjqLy9UnK9UlDWO+jD2Cu+lK6OUzVR4+n0/KT/fVFE3RGHkd/mk1ic0
VdSdn/GHXH0X3lbPU5T5G+VT/pC9Qn4wL0rZDIWjPxkt5bObK8oGK33wp5yl
1pQ0V5Q1y/hDs4LPvJGeryhqlvGDXNkW4vX8KDXXO2oEr/juo5aKmkFKBwY6
D5da99NSUdMi7QelleeUvEPWlLVI+C/yoLmjTGLtgihl0x2OyVWi8V1IehdX
Qgf4xiq5ykivqbwgKkl9ntNCRdUFaV5ITNAnNS2MUjbN/hpWsl7hZL8jdbaM
3s2V0IUrnZ/xa0n0utfWUctr5PCTt6KLFFWtHS9SccGfkCSxdlGUqqkO5+Sq
5pQv1Dv0BygeD3BWnfKFeq1y22ircxXnFyvK2jr/lYoN7BVi7eIoZZMdnrKq
tb+DlfKFep97f4eRrBbtH5WI3qF/YUay9RyOUsNfoihr7/iRig3sFd52LIlS
Nknh6M+oSflCvRe+X4LX5q2mP3EmZUF693vHjCXWVpQtVZSxRzIu1FZULY1S
NVHh19fhl/KJevd4X4eNrBbt6yw85RP1PvFO0Vb+ja1U9Jcpyjo5n6j2Toa3
GsuilE1QOPZJjy4+Ue+z1vtu+qRHB4P1npuLoxLlG6nwBmG5ouriqE9kr/BG
YHmUsvEKx94ZbdH7dXtHeyS1Re+Piq+WLHacl2r8CkVV16hPZK9QSV8RpWqc
wrFXxrr17tZeSg8uj1q33s92SdQnFjgc5d3VSkXZJVGf6Ov0EndXRim7TuHZ
M4qB3g96udKFnlEM9J5W7jv0XDv67A9NNXe1osbyJJ/k1P1PvAW4q6P4X6sw
uSyqG9HdnwmpXxbVjei+z6L7H39r7sZj1OVVCne2uO3+F6tufoS6uyqK9TVq
/PiOTL1r8jIl0R5RO+2tsLa9Sv1KOeVktO1bmKU+RlYn9k6C3rh1XK3wujTt
zcSX6n2FrA+E7OnStDdDq36KElpLWHnmd1Om4oGOPuwVYmNRFLt4BBqrcOye
8WZ6j5r3A5I9dc94swGKqu6OKlmb5XdTpmK3zoO6O6okNvq9kykNiudBVykc
s6eg6p1clyRwNJz3firlza6MebNELuerrKl8S2fk7BVyOV9HTVl0PCMfrfD0
57BG9v8E6ro5PCWb7hb1ZoMUdewVsmm/o9LnyXoGxR6hhlYzil18fjhK4RiP
gXr/U1clgXgMHKIo66ok4Gt7fl6j5/HsEapCdTMaFZ/Dj1T4dUngF7RY7xLq
ovBLnjkd/OAwRVUXhSN3VOp5qK6VsVeon9TPeIB4RUlXKOM5ld5Lc7HSkIud
T/Q1w5GKKvYIlav4bkpdrWWvUEtrGPWJ8YrtcIVjZ4ej99t6f0ZnxfnOTp98
jWS0oqqz4np8V+UMRRV7hYpQfDfZjChVwxSOzOyTflvvVOikcLzIWXOqlnWV
oqyTwrFp1CdOV5SxV6ijNY1a//QoZbpS2dHhmfLdVyvqdLXV7ypP1SCvVtTp
aqvfWep94lRFmelh6mjxvZNToxQNUbjFT2C+VlHUUXE+fp7ytYoi9goVttYZ
XzhZUdTRjSt1tNYZXzg5StVghZ/fpZ7y1eMUVR2UZlyY8IWhtj9OUcVeobpm
940XJX3hREUVq80hsqp9k+DDxChVgxR+8bN5JiiqfG1bzi5tn/GDExVF/nxF
uam7Q8IPaj6omotQZaKq3zeZignjopQNFM31uHn/N1lR4+tlKW4n/d9kRY0+
g9LvoIzoaqCGvcIK8M4JHoRYcG2UGp/xidbaOlvK/01VVLV1OEo27ut5Kf83
VVHW1uEo2bjfRRnxK6rql6gw+ewne/tThjJdnWzj8Ez5v+mKujaJXiYrbxPF
c7qizp8cKVl59yhPrlLUtVHUdXdjpWLCVVHq+isNbp3GU3zhDEVda6UpvspM
fop+zVDUtXZ4StUqexb+aEUZe4T6WfZU+/jeyH4Kv1ZR/Z+lqGql+Ngqqv+z
FFWtHI6p+lM25wpUsUeon/V2fPAxIb4zt6/Cj+8etK+eo6jSZ3eyVzxvVW9D
ElT1i441TFHmT9+WGlr8RPf4Dvg+Cs/sue/zFGX+hHTRjpYZPs5TVPmzzqVa
dUVUL4Yoqtgr1M+uiOpF/ByG3grHFhmdn6+oaqG0o0VG5+crqtgj1LAGRX3N
IEUVe4U11PH3n/ETQXopHP05GSk/tVBR1lxpR/xUkIWKuuaO+1Lrip+reaWi
jr3CKuP4CZrxc2kuV3j6HDvFz8WKumZKS3yOHanDqDfDidpX9rz0AYqyZm5c
yQayJ6PHzxHqqfDzJ4CkdH+poqqp0hJ/3kekZhaoYq9Q9xqTseV+iiqemhGy
gasythw/zeoyhV+TqJ9arqg6X2lHk6ifWq6oOt9BkbpX9kTwUD9VaxQSmYCt
3aZy5fi5aj0UjudleLhKUeVv9RCun5fh4SpFkb6LaVxCJ3QdO1DEXqHqMi6h
E4Hn8XMJfX1TcGyc0fc1iqrGDkd5531eRt/XKKoaO/wkp5no7DfydkGtkknU
4yZG7SN+/qWvb4r2Nk7jCHDrFFX+dqL9iXuiUvNX45/WKcr8e3vh/BTXK/JW
KFDGXqGWNCXqz+KnsHZT2uvXVqX86HpFXUOFp19blao3rFfUNVR4Xm+5mH2T
Fyhjj1B1me74kYoNl0Qp87VNyREbOBxT/vomRVkDpSUNnO6nakQ3KcrYS61+
TM359CmF7KFWP6bsJH5us69tShblV/il/PVGRZVe/8Beup63UVF1ruL+XNcr
NTfXJ6Hrs67nZvxa/BTxixVl8frrzYqy+grHbP31FkVVfYVfleNgyifq8/jZ
K1Rf2EvHofgp/bq+eY6TtffbtymqzlHacY7zN75GdJuiij1CzWth1Cfqmx7Y
K9TjFkZ9Yvz+h04Kx3ppnwi87lBU1VOcj580dIeiTJ8wviTqE9srytgr1OWW
RH1i+yhlFyk8/Y02KZ94p6KursLT31+T8ol3KurYK9S/VmR8YltFGXuELGB5
1Ce2jVKma5z+RKOUT9yqKKvjeomW1I76xK2KsjpOAlKjW53xifq0Qr/qXmp0
qzM+MX5HUQelxf7OhJRP3Kaoqu3wE87XivrEbYqq2g6KcH9d1Ce2VJTxxIZQ
r7sh4xMviFKm1/DWjPrEHYoyjhayc9sr5RN3Kqr83a+S39zkOJh6z9ZcUcVe
oVbHXvo9W/MoZe2VFtdI4EifuFtR5e8Nluy8RsJS6BN3K6pqOKokt9kUtcim
iip/u6zU6DYleBHiQ9MoVb7mKbkscUz67T2KKn9ajmhGhbPmlHfboyjz56VI
bnOr6xVZXR4oY69Qn7vV+bVUjGgSpSxZ7zR4xk8/3quoK1caEt9HtVdRV+7w
lExgc4aL+qRCfZ7HHVEuNo5S5mudksuWRbXkPkVZmdKSsqiW3Kco06dybM1Y
pj6tsExRtjWh9US4YZQq1iBDHut3AaZ89n5FlT+9QzSkNOrd9iuq/IkbUgPb
7nqlPGl9RRl7hVrdducTfXw4N0qZpbfo008//Zn99/nnn5c4rCW7LYmOf7/t
hx537Hnk6JOnv/rqqxLF25IMBrZP8d///nd0W3X7gedeev3rr7+WnWWhOrYr
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
aZkL3+2t5lBx3l0VzkAa4XTZx/9mjt7kSV9l4L2nhFa74NbHjr/4Y5MD6WoX
zxJKnhLRzFEmZ4ERpre4KrtqB1TO2XAUf80KnkKVsSe4mqcvBWRKyFBmpvbG
XTOQcCUDhkuerGbmNs2jvmeosqorlRyap+UgOd1QZ0Vy1u6VSpN5+2AyhjdX
mkTfyfX1gAPhcV2E332PvxgM8dhkhHOdp/V10+YKT8LDY/QAaRAv4VW5vfn4
Bb/zBUMuuVOY2zjsR+Gm3xEuv3tOyvyMt8/pWDhIWdwgRXELx/9UDjZQtRqs
6BoYHauFakU7RROZp+m7pQvcKHKKQnzdUgslxSaJXiF39RwVqBiSFRTxlY2E
i/4+POFHy4xO+HONxdqGqu/+RPVUfjRA2dNQ9X1AVM9bKk/RSnFojtPzVDWn
pfIYrRQHLk9R3FrZ0gUZ/9JXSXuE0hn2SOYgfZWkhysIfaN+0p+4K5LU5xjN
cn4yVWHwJ+5KZImfZeSobaN8sZ93p+LQ5Qr/UY5HUqlp5Xjk84leCvdRytfw
HiodW1sp3Nsoiv2MPPWeu5WzdMk82pyVYp6dE+J3/I7CHkrTxjjblLpG6yj+
+nZi08vErMsy/CGOYRahT9+yJxCm3oy2cX5OTl6Ln7zlqGzneCL5nD83PGVP
+o6bsY43kvm2SeulxI1LlJTYK+Q2l2T0v62SUDtFrd3AGrl/MmDS7qzU8pSn
kHv6M+BT/lbfvHKNwqqt41HKt+ubV65RmF0c9W/tVCt9btwk1yvlu9spTsbP
jXNUX+jokTlm+4xv1mfnXZf47uWQwd3fKCKadl1C8wwtF0X51N5RLBZyoaJ4
QtQ3t3eeRE5vu/CsFHdw+iq1jgszvrmDktZ4xaMLM7rZQfmD8Q6CzLEvjNqA
PzFNJKVPPPRn2aZ8s78dQiJF/MRDR21HRW2HqG/WljIx1ivle6hlwedPdDyS
uV7bqG8jrmFm2lFRfG3UN/v7OiTrip9c6Sjm01AX7pjxzSFKBF+sK2AdM/iH
KBHiuq5wZWOYv6dUZpn6rM6rXQ/vozs6aiVb73RWajup1t6uUhbSwuEtsXaq
4tFFCf0M8auF0rSpjkdSE8+eH3+RwyZ510eC2qvS3gVka2l1Piu1nZUmdIp6
QD3jnR7jaCaO6VO/r3eYyalp55/Fz4VT4y5WFI9yvVJRpJPStvgps45qf3eq
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
0LBRPXoP2rJlq6lmMYKEd392vAq1KgjMR+AGmpMmTYLDw1fxlHpfGVAC4+CB
OnW5dOTVk7laLg9rhUHhVxbGwN14nkP+4zGUhrVLx39boy4aNWpUzVq1u/To
/6dv/hfffai5UhHnO+iLD/6kRZ+/Wr0sZhSoVbd+zyuvSb2hkzes/tyCVIWB
N2rADKrdPzATSsx7NJOZqR2lZO3atYMGDbqkR5/5q25jNRbjhndW8o6RY+n1
K5ztw0HBU0LOUPp8jNsmWwepl/Tsf8td++wOX5NHwNRY7s1HeZx+5xu8s78T
UN6uX28x05kda+Ohrqj3NiXf+YZ6HudS4B1UFMRAlRD7uXohe75CHjRAdYAi
p8bQAi+h1JtlvaKpdoxHifUDM8/KD74zDlmHf/MvK0lmOMpSWQ3fnYa1YnUV
P+Jv/nlOKnKe+vXrQ8RwrFyPqHMX9j745Jujr5nIlwvmDUhtxQ3uW0iuc6un
ODHScULWjcw6Kyf0ORjnqN7+Bie/Gsm/l0usWzhH8e9Mqz70+SB+1YesBvKr
PmQtRfeEJ+U6xvqK2hFq5NlnpZa8CW8Q/Goe0ZpZzqOm1oR2Ua0aKB79v1vR
E1YC+T2hyb2smWjeQFE8XGndnLNS7M9pkZp4YyW52Q53z2G9p7uRov7/aMWW
UNhIcSDOp0aK4mGK4rlnpXhYAn9/wlPCaudkLKiD0qEmikded7P7vuIr8kR7
/Yo80e4OUa9ynqJ2qLN4iVCVZ6U2uYYvrLQMPntu1HvyxIXg/5s6HskqHL/S
8v9p703ArSyutNHtmc/hMCjIKIOCgiiKiIg4gCLIIIqigoDMw0EGGZWggoig
OKIRcUJMnJXEGBGNkmBrIjFpY2LHqG1HTUxiTOfXm9vmN/Z/+577Vr2rhm99
tffBaPrp+zzuxwfP3l99tYZaa9WqVatW5fdKM3NsnI0e8okpaqEfPa8coChm
tmXI+ZlbkuLhEe7G3+namJ3b5jjcM7Nsdzc24kHwrbDHyWxabbtPSuKva/x0
VVale45PXRXFjPWGtVhDSYqHKdwPdG+LDz/XyeeOfNWFgKXPmBbfz9dP8Dba
Z0wn6jAEXH3GtMwY3XJ6cKCi9lQFeV5Jak9VeJPbwUducJYmUXUhrJr4VsgG
8Rnx3kaflrQ9ndV7ulKHr8OQsXO6itdQ9daFJSkeqnD3Jx7iE9UZG91RjcnB
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
hnpLSYo7KYpWOIrFhxmoME9HSWyfGRvdUfU7UGHdwY1mxkYPdHzIz3sRtzop
iv19t2Irvl6S4o6KokuUTvsdBZGY9g7TjH9worM03kZ3ULIzQElme6f1GRt9
otMXb6M7KE3QeXY6E/LWktR2UNQwfq6rVau7c3M+38nO2mZsdDtl7XSsvp17
K2OjT3ac8za6vbJ0HRTF/o5Zme9vK0lxe0XRpY3ZWcrHj0Va0jfZD3N8yNho
He3UdbeZLR7baOvZ5Wx0W0WxzhzVmbpbSlLcTlF0efT2S75ytcoeztjo9O0z
+yvOHan6beusn7fRo5yuZGz0/krD2ilqNZzbS1LbVsn/GoeVrGP6qO8qZg0s
z3BWhjZarG0bh4X4bn3U9zbJt85wnMvUmGijtEznQuvnd5SkuI2S/3VqPHur
cfE1qTI2elxutFqr9+Ia3GYc0rWtzs7yQWa41urd/RXFfldEZODOkhTrbP71
TsIlDtFLQfMr3sxuxficNrZ2siPrsF4KK7/izWg9+4lnt/0U53R2/35Ov2UW
vasktf6OIlkVMBqiYkuRtOzrsMzMJJOS1ta0NetrXX97X9c6Y9FtH5lZbV+l
Ta0VpXwe4mJ3l6RUnzxhBCREdnQ0Jp1BNzVJP3cZVRSoZAbdtCQPdF34fRXF
fB5iW1tLUtxKUXydelvfGdsyJ7Ppm3VbKs4dpPptmZPZWUnZbqk0q5WiVsO5
pyS1/tSP+EA3KOnopr63yNmkdJa0badrbUffmydtUkPSfrVQ2qVPZOnn20pS
zNZ6/RjGs4sal/okfQtzfNAVM7uocUjv/C1I8qG5ereFori5koF7S1LsMRP/
+WalswcoaP6cdEZ+l+TkvF5x7gClz82S8rskJ+f1inPJ2qKRfn+jJLX1ipqv
R7Y4ZKEHaalL2qYVSTtWp2yy6cvY6mZJu7QiZ7+aKW3SlQPZf7Dd95WktJmi
xBaKzVWtDlJSm6Tpa0n6a5WM6BrctTnaViV54LOOREaaKYr1nS33l6S4TlG0
JXo7VK4O65manMyuTsp2XCnLxCP1ab3anMyuTsq2r28oslanqPVwJHb5QElq
a5Xc36GwauPGRNYy1TmbdGXOdhmprVZYaN+t2r2ViVpfmbVfwrlqRbGug1it
OPtgkmLL75r3339/y+13LFq87JThZwwdcSb+uP+BB/BjhdKKrY5u4Yt9XvPm
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
ynfYyWHUDDR44shHrfmGFrsCrqT38c5vfg91B9+kx+DPsUdY1U/dYTiwC5KX
1OxKCI5ZjRx62OH9jv/gj3/iDZWy54gOpDY77+eL40OctTDAwnsbLS2S7Wh3
CIyOrlt/zdIr73jvdx9i9MBHxkG4A2f+PNWNl2cE10QpXhSq4IesuORS/PrL
X70FdxW8YX/hlIRdw1T7dX6jDQaCWh9pjLjB3YNnn395/a2PGq/bVglm7kfI
lJZYC3ciEjOxZFHZzKXKf/vNHzsf2GvajFk0rOEGRcl9Gurkaqz9UOVl7aJo
rXx8x67KqupDD+0Ns7Nw4cJwW6Nwjn3BhwNjQSy6M3HOytSIRxjY6rPMGwnx
JIlFcA9Az30h+8pm+Uh9bcgNVMdA9JFHicAYvMogJNrrZiYq40ev/OxVsCe8
HWIqjPNDBGmtxUMM9OjsXlvtl7kluZX81MbUvBKyMvsqzBn9D7HA9A5ewJXt
Q0RM7+CNciMmsUYLlPklIUNLVrjcMSuejd1HjSN3OUMsOb0rGqSlnaNV4sN6
V9RnF4se2YrUzDHJ7OCabOwZJexgbzU+3DnWWc96pznsdvib1DNZz8pjj3Yt
bBVxqdeg10AzS9innmpsOik807v3Yd+qk8JT7977DGjZn7rP4nmFwzOTjT3L
2ZYiGZrd1dgwy0FnZ+sMjrCb2MXRJnsdOitimOrP3pzIPI5MNvZsZx+KZGd2
VWPTTfFAZ5ro7Otu7rvsdOlMk1PVGNnripjDkfE35zi9L5KNfYDC6yCFt87e
GarwOkjhrbN3hio87fU5zN8I2djwubh6KZ6V2UGNy8FKDnSm1ilqnHsoOdCZ
UKcoG2K3QKWGj9/bBA/nOX1PZGS2VbRqvdJZbycrvemp9EpnvZ2sbPLDFkeb
s5HxTWzWWZGszNYKx0OVjdIZhEMUjocqG6UzCIc42yrzyCMWR3uGMWRryYkr
ZsfpbOyQreVvUZZo02HO7sscM0ThOtjBFv4c5vgvvqbOyhys+rMXpTG3JLO/
ZOac+cX0XTIzuTMQsrP0KaXBCteT1HO2D9lYgxWuJ6nnj1lcbS5JyNaSuX5B
UudDdmat4tOR6ns6M1efdgrfdWbuiYrv2y2uNn/EzPXUHDl5tbAJva9SsI5S
MpHOcg67IEcp2k5UuLJ9WMt9y+JqMz5yc/1FJXS/XI0Ps8BDRC6VNW6ihP2V
3Ohs8UHObsk63k4uUnFIZ2PbAEJtUu85GHKmIESj0nn3YS11jOK2zrs/zmEn
61R70RUzHDI52GZmX5LU9idPGSnaPsBZeInY6PMLAxWsgYoWfX5hoOrPXoIn
ty7FAUieHfj4l7/81tDRAS+wUOKKx7h+JLKhz4Acq54TjxD31WdAjlXPv2vx
svunmRxrO5pVnl6ffKnzqfon+RLw03w9QX3X52m0jDxp8bO7iZnc6kWqn3Kn
yUXyLvsr2dLnp45RcE9SdOmzSVo2d1g8bf2vTDbSgghPw29alOI5l9TcsIrW
59H6OzxFs4dEGmrw1Oe8+js8RcOfsnjaXaeQY+1m7chjsVGmIvmW/ZyFFSun
z/Yd7WCKNzPU8V5o0mf7jnZWUlZEthxugTexes9CzlDNjegxfTPqoHOuQ75l
X2fBZaV4tMKVtASvxudci9ekz0uyfVhp2umX+0S5rJDZCldm+hXPuT5S9Z0+
2xm8G64egvfUT+F6lKL9GYvrbQ7XzKw9U40BPbXiOddHqPbpM7NhlTxSfddn
ZvsqmfqexdXuLWSiCUb+pis+tW1C9/uocUifQw58HK34rM8hs33wQp+1uNpY
fC7Heqoagw5N6P/hCtf02e4gn2OU/Oqz3Uc43ROv/jmL6x0OV87VMoNfoMag
cwkbcJiyF+lz8kHnz1Q2QZ+T92eYZIX0fYsn736LownmPNUkxf9uTdiAQyMb
bFaNuv7AYQ62rDrPjmysoU3XHzjM9Serzh9YXG3MMjO3n694z+iBzrEOe4i9
VL+6poM/byWr5XMUnrqmQ29FtwXCuKPkTHOuP0/xnitBnUMddt56qva6Pobn
t6yWz1PfdZ2MQ5UsPW/xtPHETIbzOa4fqZvT2+l9kbwfv6LllQG5mijkN30h
A3dCxN9wvi3gyfb0qo0M/5PFc5vFM57zz474Hs7zFc+I4TmusAropfDs6fgj
vsnECE/Df127pafTNfFNbNEpxhHD3go887GqX2uTi+SJHOxsg6yqdL2eQxTM
Cxzvxd/S9XoOcTZW7NaLFkfeNqozYcdEfDc+T3+n7/qMhWRKUM/CaugQhStp
CaseY6PNakjjyHZhlfxDiyNvltS7EqMV/cc2oeuMXIWVZbpOU+AP57ywstQ1
pXqo/n5kcbWxzlC/Rc5TjVR9D2pC3w9U7dP1rwLsmep7D4Vrd0XLSxZXG+vM
nac6TY3BiU3ofDc1tum6YkE2Zqv+dV2xg0Q2LKKMc6Zz4nKRoeL63lXJSrpG
W9C1uYr/ukbbgUrXiKuNdYZ8MTlHNVTx/tQSOu+j1WIfDlR4dlN2a56i60CF
Z1dltyxxjHXmzlGdLHxntovX9czOQefIfpu1VTeFXxcHT6IXC5Qd6abw6+Ls
ttj/n1r8Hnb4ZfKGBiue+/NTRXYlO7m+ZU7oqnDtrHizSPG+q8K1s+rvny2u
NoYYsmygEyeofs9wul5kZ7Gjat9F4XmAgrtYfe+i8DxA0WGdVsYPM3P7oAiu
4T1rQBXfMewQja3Bs7PCM+a3kY2l0dgaPDsrPONdJyMbP7N42thh2CkALj6u
I77MOU7Xi+wWdnByIjrSSeHZ0cEV32e5o0t8qwMUnh2djokfbR1cxg2DD4Kx
HRDR432bIjuF7Z29kTVFR4Wj3gm8xNEkfm1HhaOvmSr26ucWR3sxVWanoL/C
0fr1RXYJuWuqdzMDju0VjqwXpHczA47tnU2VNd4vLI5WBULdFpnbj1I8n9KE
rnM3Oqx12ytc9Q7wpY7/Qlt7hWs71d9rFlcb7cxlDhypeD+9CX1vo/jQTuHK
tXVYa1/ucJH1bDuFa1s1Tpb5jH7msgL6KNizmtD51oq2tgrX/RVuaxTubRWu
/pywyP0vLa7fdbhm5ni/+yNjMLeE3v+Xy1DKnTEOuLZRY75WycT+Ctc2yo68
bnG10dFMzMHM8XpXbX5K92XnYF+lg20Unvp88jqlZ20Unvp8snXIGR3NZQXo
HcpFKf2XncNWCs/WCs/9lE1ar/BsrfDc1+Epa2n7EqOjIStA5nq927vE6X+R
nUN95lefCvVnoePz5NEcoM92tlL9vWVxtZHHEG+AC+d3z2VOXOF0v8iuYfOI
B2bO1Sd9Wzq4Mmde677LnKrPbLN9WE//q8XTRh0zWQFxNkK4K6D4jmG9at9K
4dkiwsvgeb36rk9Yt3D8Fp/EBgcYcQx7DEC4i+pH6voV3S2sd3IiPmELhWdz
BfdGRZc+E93cybD40/9m8bTRxjDXw1c/IOK7GZc1Tt8TO4UmX9H41Ro34h58
402RLBnfuYXCTe84/9riZqOLmX2Fjopmm8tSJDuAma1hbaLPuzVT/LC7GNH6
o17h2MzZVJkv3rE47rI67rMBZI5vp/qm/SieHVDj5gOZW5opXOsU7M3O1sma
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
+31XVSxE3AXMixFu6ImFS3N1xXwVRLn/ZAO1Nbpx0/Rl4xa5GLAdl7DXJQUO
f5Rsa/cxKmLNMm1fSra9xukMDZ7ojGm/J9n+aie/Ptrt2v842X5DUt5N+5eT
7dc7efZ1zcw+nGn/k2T7q2x7v6csu2qm/U+T7dcVlc9/Tra/0sljZlfctH8l
2X5tVn5l78q0/1my/RVJefp5su0a29bvRssBuF8k29r8gszOpWn7WrLt5Ul5
+Zdk20udvPjcFtgSS98vk+1XufY5eXk92f5rReXlV8n2K528ZPbjTfs3ku0v
ce0z9tK0fzPZ/uKi8vJWsr2t2hNyKyS7y7T/12T75Vl5iezd28n2vu5nvPvR
+OtkW5sNEXZrZNJ4J9l2SVZexBa9m2xr8zgye1um7XvJtovc+MeJSpa+3yTb
L8zKS2SPfptsv8DJC6fcSF7eT7ZnLk2cWeva/y7Z/sKi8vL7ZPt5Tl4Yv4zk
5Q/J9g1Z+Yrk5YNk+7lF5eWPyfasVBnv/rv2Hybbz3byxbEVl/3fk21nJWXm
z8m2zCXzvqsEDf9Xsq3NjQ+7syJfHyXbTisqLx8n20918uI9OpPja9r/X8n2
U1x7yotk7Jr29hoHnhY1tTEa7Uf85PA+Y3kff/wxD0sXVMWVSJ7+b9ufvfG4
fNq0aVINpC7VX9XTTz89wn7Q5eLFi10VjExulcnKNf3+h+33ewrPMoDQ9UN4
dgmA9+zZs23btvbt2/vaC7kKeKaTT0LPFTzOxxoGzVP91uAB2IB/hwwZwmPG
r776KgipdxKdyesw/f81wpxHtH1thwq8OGHCBFYT0GfJLbxaNvdFA/AvONWq
VStzhtZytTLO2XMw/3cEkz1Ybtn2V199NQt38Fxt7gw7x7qmpkbeIqb4wsPv
eLEmqV1/CzCrd7t1ZqM9Uw18TeUBepJ9/UpHn74c5qSM50ylyjXoRXc8tPqu
WxXk/E17Saec1Wctgy1btrAf0GlqO6TP6lOgG21JB2JtzpcShvZT/zPAqGNt
BQ5Ht27dWEDjgw8+QDd4pE++2jWvqfriayyQKnKEB999nZGcD/N/AtwKli0A
joDFkWFxB5ZVSZ7Qb8lDx+jfH5PGCzxzDil+5eWXc17z/xNpMbUU+BK7Kh6N
91S4c8QaagsyA6/ydDH/Jq9ffO65szt3ftItRU1PrJ1v1zLVxAuKiy5YpyOc
sg5QbK5+LQiD0rJbaPScDh0uzMyfrGpvV13VrAMB3lGS0S90IX2+2gg/T0vj
wcbOnXsWCk937eoXiL7PShZlwL9obfRayzRPJoNPkAr8urh164MKhUd693b2
0nz2CbSbqkPoD2iiv2RfplLHqYMGVe2zz1AMWZ8+fpnvaslr22/fyp0HcO+U
J9/huV0/P0erTfOpSL7D0xl6DWA+Vcn2o2z7OGvata9OtlfnS3xxfIn6FKl1
pnXJfGqT7TlvpNYE5lOXfMfXhMutC8ynWfIdnvdJrQ3Mpz75Dk96x/6eWx+Y
T/PkOzy59Nfo1otY5lok32HVqZTfZz4tk+/Yvd7Mebj4nVbJdwZn5StaX5rP
vsl3TnLylVkzmE+6Friqr+oLrRSr7H1CVr5krWk+6RrdrIGl1w/mk662fZyT
lTiZ2NOcrp89sKR8pStiH+vkK5PZ6N5J17j29WNz6wnz6Zh855isfEU+oPmk
K133d/KVyU1176RrVx/t3smtLcwnXY26X1a+lM1L15fmCdh4jeHad0u27+vk
8cl4XWo+6crM6gxvZO/SNZZZ7zquXenap6sl8xRyvEB17dN1jw/LylY0+5tP
upJxbycnmSxR9066NvGhJWWrZ/KdXk62MvcCuHfSFYpZd1Wfy3DvpGsOH5KV
rWhVYD69k+8c7GQrOZ+m6wLztH7KUzefdKVfVX/VbzsVq6rL2xW0X2w+6Rq5
rL7qfVyfAFOs2m23rHxF8piuW9vFyVfm/Jh7J12JtnNWJqN1rfmka8sekJWv
aG1rPulqsZ2cfGXygt07xyTf6ejeya1NzSddM7ZDSflKV4HlrmIxfy1d17Wd
k8mkfKUrtbbNyldk79JVUZmvk/LX0jVO7Syb9NdOTLZnlZfUfHpSsv2+TlYy
56bdO4OT77TKyZfZCXPvDEm+09LJVy42Zz4nJ99hvR598t29c0ryneY5+Yrf
GZp8p97JV9JfOzX5Dm/w0vUL3DvDku/UZeVLrQeGJ9/xtU9z8+mIZHtGFeKs
fNeeNduYAfrhh8Di6euvWj/x8CMvOGbgPdu2vfDCC5999llFUWmz6wzuaFbc
+437xpw1fvbCVSvW3lK24daHCxWLvnbttIZl486b+Morr3D1nZpxWWuMO2PM
d1286ppCtclZrb794R8w1XXP5Ml5v86upCSLF29OmDzD5N4yf97k3h534g7r
1Ln2rFTF/GGQNX/REtOe+cFLL7vu6+vtVlSqNWgDUiFvOZt1HXBhvnTIv0/l
suvWYLnkFzMPG0xEB3Hr0VFrnbWdzZDWrUO+tc5LT7W+bPUVa67ftretN918
C0a6WE67bo0l95TZi0OOOLgzYvSZLg9Z8+STTz4ZP3Gqye5ukTihEFpzdMAA
sCGcZ8B7E6fM/Oijj9RYUlJu3HTzJetuNQ2bJc4s6NbA8ML5ixasWFeodX0D
1j33ftO3ZsYYd60ffuRRiIaRqirbGoBAhznj4lozg8RqTB1ECHIx6oxxYN3c
xavBbvwxdPgoYMhMfPthroTdC60CTeDx/evXP7dzJ/4Acq4VK3Ix4xlaRqn3
UM+JnsKQ0Z9WT2ObYe5CdE+jOllhRoMp1HnNdkRUXvLfonfpquA/qPB/V15y
qbzgTyPcfA4KLKm7Sb5U7uz/hFzgvc2o/TTIT6W/UzCeFxL5qn9XfuoXyF+N
cIxybZh16QODufzVdH7ol4x1E/mi/zvC3GfeC+YhZ0Xni+qczL8rB/ML5GiS
38y/8jnxBZ0Xo3M0dabjl5TZ+KVmQcaUhRwmf0YkpqzJ7ELuVHxJmZCfM9Mw
piNkdDNDTt1XXzKb70vJNNzLrL6/RTh/3+dvEedw36rQGs+EUZ4wM/ayJ2t0
65DdytbhntFU65CnyUy7kMnrWp8ZtQ7ZiGwdshGzrTnfh0xDZsmF/OZU62DZ
2Dpk5aZahwxBKmfIL3WtWWGUnnPI/9P3jiZaN/eaAZWAdP3h2982E0LXrnAb
sEikOYh9gLERJNgHTOU+bzJaZdDHByYYbHyPdk/OzGIqmOn3K9Vz9zb9Mb2m
cU/TdTy/evrV06+efvX0/59P7XK03N8CkcuvyLbebZ+++uqrNTU1JnelpunW
Jjtm2rRpzDnZi97DrTd8RVZsxd6xQQNTIZ+l//2tMuaejb14s3Ls2LHxm+Iv
4ycmI+TyChJ9lN90003MjiiUmQtjDFgWFW9oaED/Dz300F70UsPS8njLX26B
F919HNW+pHxjXOs/2w/zLrZt2wa4LNzPuwlCrfWSUmBux+CdOPgX8ICHIac0
7vZNc9sAb53YsmULa+Xr3JkEphXgzYQJE1hmXmdJZNu/oEaldOv/mZr21dOv
nn719KunXz396ulXT4s9ZfT4k08++ckzz3y9ULi7Y0dX3cV8uH/APY2PPvro
stVXDB91xoQL5pw3fup5E6adN2nW2HHnseiMe4N7GoxzPPvcc+eeP2XN9dsK
lXbn7vaHf8CCONxhsx/GH+yOTAW6ufSyNbMXrLx7+4s1riIPgDz40CMeozND
e1O5C/2F/Z78jlm80xfqVPm9pPETp7pqP6E1fR/gcv7kaZvvf1b2qS5Zd+uN
m26O+453tT7fHtiW2+9YcvmNxSo9mU+8v6ZrWZXeu/t8+4J6zxFEMH832fqJ
J56Yu3j13u5nvv/++2PPnRR4YqorTZmR5yBHJ+zdNS8ylnHrUJ0sVQMqjCXl
BMw9f8ps05p1nsCgKdNnxyMfx9tYXwmCxZ1qU68NIslydFkpZCUn4AJBHDdh
Ksa03O6Oo//ZC1dB9KEA7o34XPQ777wDEVi0eFmhzPxjxgwLr3hX82zbujH6
dN/rX+zZt2j3ztbrVrt3PKfzq/Dkv3WvrtTe3b8nMeOa7H/urtyXsZuXpVz2
7dzO1D9s5+vz7ucRy9fDW9F+3X8zlk3s3/1J8XPQ/yB+DlL8tFjWRNtEma2w
f+i+25e6R1eEmsZ/2E7bF96NI8bWZlb7uh4O5S9vX+3v3HejnW6MPns/DxT2
+f8AK9c2Mg==\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{{7, 1}, {8}, {6, 2}, {5, 3}, {4, 4}, {6, 1, 1}, {5, 2, 1}, {4, 
         3, 1}, {4, 2, 2}, {3, 3, 2}, {5, 1, 1, 1}, {4, 2, 1, 1}, {3, 3, 1, 
         1}, {3, 2, 2, 1}, {4, 1, 1, 1, 1}, {3, 2, 1, 1, 1}, {2, 2, 2, 2}, {2,
          2, 2, 1, 1}, {3, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}, {2, 1, 1, 1, 1,
          1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 
         2}, {6, 1}, {7, 1}, {8, 1}, {6, 3}, {7, 3}, {9, 3}, {10, 3}, {11, 
         6}, {12, 6}, {13, 6}, {7, 4}, {8, 4}, {10, 4}, {11, 7}, {12, 7}, {14,
          7}, {15, 11}, {16, 11}, {8, 5}, {9, 5}, {12, 8}, {13, 8}, {14, 8}, {
         12, 9}, {14, 9}, {17, 9}, {15, 12}, {16, 12}, {18, 12}, {19, 15}, {
         20, 15}, {13, 10}, {14, 10}, {16, 13}, {16, 14}, {18, 14}, {19, 
         16}, {20, 16}, {21, 19}, {18, 17}, {20, 18}, {21, 20}, {22, 21}}, 
         Null}, {AspectRatio -> GoldenRatio, 
         EdgeLabels -> {DirectedEdge[{4, 1, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {6, 2}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {5, 3}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {3, 3, 2}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {4, 4}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 4}, {8}] -> Placed[
             Rotate[35, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {6, 2}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {7, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 1, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[2520, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 2}, {4, 2, 2}] -> Placed[
             Rotate[630, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[1120, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {7, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {5, 3}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{7, 1}, {8}] -> Placed[
             Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
           Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 3}, {8}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {5, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {5, 3}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {6, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {3, 3, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {7, 1}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {6, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 2, 2}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 2}, {8}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {4, 4}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}]}, 
         GraphHighlight -> {
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {4, 2, 1, 1}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}], 
           DirectedEdge[{4, 1, 1, 1, 1}, {4, 2, 1, 1}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {4, 2, 1, 1}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}]}, 
         GraphHighlightStyle -> {"Thick"}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         ImageSize -> 800, VertexLabels -> {"Name"}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
          0.03178333455671099], {
           ArrowBox[{{0., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["8",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["35",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], Offset[{-2., 0.}, 
            {0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1120",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 3.6983634028569026`}, {1., 2.773772552142677}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 3.6983634028569026`}, {1., 2.773772552142677}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {0., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {2., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["630",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 3.6983634028569026`}, {1., 2.773772552142677}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {2., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["2520",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {3., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.6229542535711285`}, {2., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 5.547545104285354}, {0., 4.6229542535711285`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 5.547545104285354}, {1., 4.6229542535711285`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 6.47213595499958}, {0., 5.547545104285354}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 6.009840529642467}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.9245908507142256}, 0.050853335290737586], 
           InsetBox[
            RowBox[{"{", 
             RowBox[{"7", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.050853335290737586],
            InsetBox[
            RowBox[{"{", "8", "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.050853335290737586}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "3"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "4"}], "}"}], Offset[{2, 2}, 
            {3.0508533352907374, 0.9754441860049632}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "3", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "1", ",", "1"}], "}"}], Offset[{2, 2},
             {1.0508533352907377, 2.8246258874334145}], ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {0.050853335290737586, 4.673807588861866}],
             ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {1.0508533352907377, 4.673807588861866}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 5.547545104285354}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
              "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 5.5983984395760915}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 6.47213595499958}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
              ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 6.522989290290317}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->800,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzkvXe8ltWVP/rOOe/7nkYTEQ8iVZr0Lhw6SJcm0uHQDwekF0FAmoj0ZqEK
ggi2qFjAWKLRMVhiTMwk6jCjyXUyxhsnTnH0mrn3c+5377X22s9ez8NJfr/7
5+VjTt73ffZee/W19np2GTFzZfncRTNXzp89s+Hg5TOXls+fvaLhoCXL8VPu
36VSuY1SqfTF4hQ+V6RS9L/ovyb4X/jT/19/aW++5V66dGnL1m3DRoxO5fTp
PzCVO3Dw8PUbNl28eDH1p6B1W/Mt8+23327fsat07tL1O44df+qtVM4jL/w8
lTn57KWNu0/OXbS2fMGiL774IvVV0LONHeejjz6aMHn62m2HU/mmT+7Owz8a
N3nmj55+JvXHoHVr2xpQ8PTwYz9JFdrWGAGDvvHGG6kvE1pjWIAzDYtsa/Sb
XDr7z3/+c+pfg9atbOvHHn9i4aq7TcOqtvWGnQ9t3nKPefSHoHVL2/qHH34Y
OWacobW6bT1izISvvrIE/ktCa1A5sXSeaUit5y3dcP78+Su1fvXVV2ffvtq3
XrX54P4DB6/U+uzZswtW3eNbr7nnwR279lypNSQIgfytsD/44IMps27/W/EG
T4YMHwWZcOvR46ZAYPHWLazOfP3v3376+R9feOPXO/c9sHTt9lQ12+fuA2dW
rV4b53pj2+c//us79Pnx3//20Rfe2/PwqxDx5rOp9GvvfIKhb1+8DNKuYqFA
LuMmlcYlfb35llVQFt3zeNbAyVu248nf/NO/UksgftukGYGmzZi34sJLLylN
q20hfvf9XwAReAjEIgOxYNMDL3z5p/+glh9+/MXhx9/8xYe/hA6CStL3zIGH
L5C+oyf6K3yvtnx98+eXARTYpWoYqFXwBQPiEcbc8dDL+I3QBr3g3YzyFbC6
tIFeAIZAZNNnlZEcQDhQW3fg/Pv/8HslExoJYLcevmAGqW45C6RoGAyZY34B
Z/+eOqRyzJ+CN998E34BLgL/9e5r/sLqoCMQSCrXygxUoSf+A2Tgmfo/gnFr
uXExgiXOjgssQfQXf/wGHLMyzr1jzzPA3jLb9oD2/OyX/2w+5tkfCW36D6A+
++JPvwvGucb2+sv//N88TqGFCp6+/eE/Y5BUxn4nkH4UfD91/h0ZJRcY0RCk
ebnoSfJN/XNcKwxV4LVpmG9brz94/sHH3zQfaTSgwqMRdEBDe/Mx335/4qUP
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
nl2uU9bZQrDyzq7giq0dIoyp+kuzcMLY12UIY8l2km03P5J3Gd9Q4vKqQkZX
LCDIsXx1JE/ZWfL5hsoOo6O6EGzFmk9PI79ExUlaRbMw+IZ5m+2cPKN0lzCg
AqXXqiTvHURq+Z5HOHCSqVWqwOmOvIQe5+QTrL+s6fg0h05a1KfcEpZSiEvp
Gp739fHMS2Ti8xnB03101OQnYjfO2UWwhoxwvvDTf8A03OPscSKvgV5cM0on
2Wt0PsQhsEBjqZXKr8p/9Pn3jLfMJHoKfy5lbpL1RWTo45D1jYR5nnwPfERU
q8CO0+ffNXN7Xc8qdLSXq3OBo3qdS5H51YSonI3ZE4VisuPo+ooxiV6ATmvG
eOcuvO/H96dREn7+lOTEMzLTckYmPmjf5C3TZQ6WVQGeUZ9JeOq1g1c7ScI4
zjz/LkvSV/gIT5/j6LM+FZ4XxIemAq+fJ3NA0nZC0u/GADePP/02j+7rfzS6
zONj55tGpej1SDI5nnvInOFCtDpkzwNKywo+cIWg+2ofjY4sIRgd+R8/T96J
cIvjc5Bx1HJ2Tfst8M2cpS12wVVherfga+Wi1dERgwzZrneMreKs5fwFrd7D
N1NJl1Nyv4ucNBrJKmg0X8m7z1FCa/z+Yo+9Zije0pLPVfXVO3prdt7pGa9x
zHGwZV5mamVVndUwLNIHXylr6XoFc54hjgfBbOIap1t8wg6NKLlxefQsVB91
acTv5JTOlomw7YjBelc6bdPvyaXRJL8tpxoCjeajrdYoWo1NK4zltO6MZFzl
NMsnKDKjjmkJcVyqHLwSlNarEaVUkdPYEO3+fGh7ll4s1785poNy0imvoU5H
4Bq9kzNSOA7p82ZbJ1oMjRNdyy0njvJabqrbySwbdFZ1LcqjZ7x6/aHV+371
JkGQGS8oTD4b1+sDrQ18RlGcifgpUx2s6uQYQPGW1dbZp0R5gw0dvBD12cWK
YhqHZqTmu+yqD8bxttfWSZDyBpZgH+eLggy1WPEm42yRCsQ8lvfFWaUt+xwu
vAo94yyLlI37+9mD1gLi7NMROzK6nnXf+b0UQfFnS2eVBbV3tAUrh3u4X4Os
qk7E2sw8g8ZCez7biMbydwvoE4PbR6ToZys93K9BrlbHweb1tvJ+kffL0Vje
i2qN2eva87r8rOMDn1as/ZjWBOLuj5Q+SZ2KW9FbdDkDm2cLPt7SvsXo+u6b
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
Q5FziLKAopkKt0GJnvp6RdEghQXtNYm+3dcrba5P9G9NFW7zFDXXJ/o32WnL
UX1eQNEMhdvAmO9toKgZqGQ+0Pk3WX3RQFFTP9G/0aot/2a3XFFTP9HPUS8f
ccsDaqZHqDG4xffBNFLU3Kx4OsBZbbA6Rq9Uaxj6OG7VQHF6vqKoYeifmA/U
y8fL+QFFpQ4/Xr/ZP9EH36CoGqAw6e94GazH0acF3BCT5PUKtwWKosaJvv56
14pj5oKAomkON17p2C/R/+od9/2V3PuFPo5XYej99U1jlkbrnPz7xtsVRU1j
fp56+Nh5e0DNVEVN30Qfp/en91N87Zvo4/RO9OaJra5R3F6oKGoe8/MU23zc
XBhQNMXhxms3+yT6OL2Tm941+fWRfWKc1yumb0yUIOVG/u3IIkXNjYl+nnr5
N0aLAoomK9zkLBLxcXqvcR83Kq+PlFNFxDL0avZWiRZW3XGa3wIsVtS0SvTz
1Mu/G1kcUDNJ4dYr5uP0rtzeDgsetWeij9M7DtoktpK3nszpJYqiNs4/JezI
828PlgYUTVT4xU+/Mz5O72XtpWSuzrFjCeh9uO1jkpQ3QlyzX6Yoapfo46iX
r8EvCyiaoHArSdQOvZdV73MpSdQOvXM1vlYw4yjiGvhyRVHHmI+Tm524ar08
oGa8wqt7ouXq3Z+yb4hlXpJouXqfp/2esE/PvxNaoaiR0+nUjjwfM1cE1Nym
8Oqe6FX1HsnuSt7dY6Pq3WwWgt+jd+7Cz3ccNynGSoU/tRO+QNa7TryCbisD
rMeq8bvFpK534XVTMu0Wk3p3hTGtbPz8D1/P33Ju4T2Ps5ZqflOrjy7/Ye6G
M0vufZK1MuTxrWrs+M4+vYdNdnGyzLomWl0PhbHtlS+Fc+UytCVTa4lsylWE
FjxG4dMl0RvqHV+kNT4b6JLoDXslaUpk1ZXs1BOPrr0s9fARLTcRuyUBRaMV
bp0TfVIfRVGXxF7aJ/VRFFEvvzqJduxFI66O67IjkqNaXkxjwpg+SuGVfCKl
3h/V2eHFnE4+b7Kfokb2jzO37fqUWEakc2Pq5atRhTGLDTPJkQq3jol+Se8m
orqKz2c7xvzSzYoa6uHz2aqOc0HGqmdjduc/MvRqiViFs7ARCqcOMcr1DpWO
isMdYr5qkKKCevgctobT5mAWoef71MtXoWokak04579F4dY+ghtppt7P0UFJ
XjKI4P3KEEUR9fK1H6mIBTM9XWWi/MZXJGolWnVYZRqu8Gub6Gv1Loj2rAHt
HF5BlW2YokaqY1z7ie/Q0xVAqYxx9Sl5L15Y1xzGOMn51IGf1bse2inpt3G8
CioMtyhK2ioOx3fm6TpzW0cJ11TiO5bCGrPeFyPniwc+Vu8RaKPwImp09Wek
oqaNwi15Z940RZGcXsRVkvgevNKAIl3Da53oZ0crinT9sbXzZVKdG6Oo0fXH
5F15UxQ11MtXnpL34E0JKBqkcGsV87NjFTWtFKdbOb2R6ulYRU0rxeXkXXmT
FDXUy9d6kvfgTQqoGahwaxnzt+MUNS0VbjeGPo2r2+MURS0VbvGdeebXCYoi
6uUjYXwPnuHDhIAiXcdrkejTJiiqpIrBmtAi0bdNUFTd6KjiWpTszBNGjFMU
3ego4ojYMuLbvG8fF1A0QGmp8C7wcZMURS0cbrxLQngX+LhJiqIWDj+u+cjO
PKWrniLZ5c0rltvG/PvYgBrZ38ya0CzRx01R1EQrYN/xKZBxHzdFUUO9fHbc
4Qp+RNXIIlWnDjEfPyagRtfvmib6t2mKmmauF2fFTWN4lSpKZOc5Z8WdK/Hx
nhrq5atOnRN9/MiAor5KQ5tEcCP/NkNRo08MbBLhGenMDEWNPh9QzuJPiL+q
IhupOMnJ+oGPD3cL9lG43RDT51mKmiZKA6QWrvIVTw310DWe5LzIU0M1d19t
kp13gY8P96f2VrjJSdSB752jKLpBaYGcLJ2QT6p3AJFaT/JZ2EMUVdFTe03F
qXfiWOGu6F4Kv4aJ/CtTVDVW2tAwkX9liio5J5lrPv1j+jBIUSQnInPVqX9M
H8Jd6z0VXg0SdbtcUSOnULM2NEzU7XJFTUOHG9eCBsb8yM2KmoZuXF4bGn/L
F56RoM/8aZDodxYoahooLWiQ6HcWKGoaOGq4VjQkcax+iqIGiqIhiWOFZ410
V/jVj/FtkaKovtKC+jG+LVLU1HcQuG6UfFJ0H0UN9fJRO/lc6D4BNd0UbvVi
Or1EUVNP8axeTKeXKGrqOby4yiInjQY22ktRE32bLfEpZqPhWUo3KdzqJvqd
ZYqi6xN7ab+zTFF1vaIqfh6yrzWqt+uR6D0mNtbXbmeuUNVV4XddIv9WKKrq
Ovw4V7oukX8rFFV1HX7M9XFOH1S911Mkp1hwnjTO6YMwvHtAjdQCWUvrJOr2
KkUNrdTwb27lJPtAt1cpaqiXryFNdLaq6u1qLUekrjUxZg/hyXvRNw+yPsbj
xX5ntaKmjuIy9ZK5I/ud1YqaOorTU1yvhHchniLq5WtcU2L+KjznsZPS0GsT
feKdiqJihZvtFczt1ypqqIevH5U6ziW8p1KrhyL1rdJEPx+elyowOI+rHfO/
6xU11yotqO10Wmov6xU1poess4vNr/T5u/TuPFxnF7eB8FRequz5/O2amN/d
oKjQb+jjp3YZb7JBUUK9fB1pjusVzIHbKoqucRRxrWZuoo8Kz4Fu7/Dj3C25
VrlJUXWN0oCrHe+CWuUmRZU+h9iuqglqFfpEOOrhqxvlMf9uYknrgKJ2Crea
iT53i6JIbiNlbbjaWUJQe9miKLra4ce1pIUx36ZPhaMevs61MObbwhPh2yi8
aib63K2KmpqK08mnxGxV1NRU3F6S6Nv0TQiyapbrNUtivq1FQFFrhdtVib5t
m6JIn/p8Vcy33auo0ec7L0/0bfr+DerlI/byRN8W3sqh64Ny8oz4th2KmhqR
HkYLasR82w5Fjay05hrSqkQfp297qeGo4Yi9KtHHhXfAtFQaWj3m43Ypaqq7
75wpV0v0cbsURdUdbpyDrEn0cY0URdTL17fWJPq4RgFFeiVo1UQft0dRVS3C
OwOzaqKP26Ooqhb5bvBbH/Fx0TWVniLq4Wtc60IfF7k5wFMktUHW0ioR3LyP
26coqqooqhKxCO/j9imK5KZPzkU2xixPnwpX1X3nWtfGmJ+vF1BDHsXnlUWJ
vveAoqaK0gQ5fTXwVgcUNXIKEOchWxI943WKIjmdgr9vifn5ugFFUh9kLShM
HOU+RVGR0oTC2Cj3K2qoh89H7knkXLGihnr5etc9iZwrDigSP8m4FcS04EFF
jZyEwVoQ3z/1oKKm0HGZc5HtiRZXW1FDvXyda3uin68dUEMVP59b5sf872FF
TYHSgOQbiA4riuRsBOb0rkTPWEtRJOvYuMa1O9HX1wooohnCn//854/cv2+/
/dafD8HZZzZxfHtzRuarr75682fvzl19EH1/+OEH7uu1JJuIhe2b/uKLL55/
6fWVW4+hr5wvwBWn/THeUuz+7LPPHnnywj0HH/3kk0/ktACug+1L5C71Q/P7
TzyN/wDAVrc4G3377bdnzpk3bOTYVO7E0nmp3EHDRpYvWPTBBx/wfiufEcot
MYFeWUoKnn/+xamls0aMmTCxtGzMxNmANGDQsFWr12JUhuM1LZOoaQTn4VOP
jJs4dfS4KeOnld06ycAZOHj4+g2bwCneU+mrV/fFbMn6m0JI4f4HD40eO37s
xOnjps4dO3nO+Clzho0YvWXrNgg61/GMq233xeyLoEAPtu/YhW7ofNuUOQbQ
xOkAunf/ATyyc2/KStPUcvq8pXsfei7zyAs/T+XtPPyjKbNux4945HNQoTvw
MqQJQAzcKl+6/sDDFwjG3QfOYOSjxx8COV6nk0+WEm2C5Jau3f7AmZfTBkb+
yWcvbdx9ctzkmY89bq4ylVLZg4l+Nd/pyfRZZas27T/82E8IyvGn3lq/49i4
SaUvv/JKhd1gTwnLgzE/S74KujNh8vS12w6jo4WQBqjVd9+PH/GI7qik7Beq
SC1TBbYdPk2ZPnvXUZPNphNxpPt33n//faADDnG/5Xftnl22YPdDF0FbOobV
MdvnpZdeBiMgmVS+6ZMBbxauunvR0lU7j7/krVlLh9aFnj33OGQB0XBfEDZ3
4Zo777qbM4IjiVKhvrv37ocugAPUNxef8P3Ew6f5LmLKnCFkcN2MUGRb4dO4
STOMP8mJaflx2wMaM7l0toFLPbbd/9jMuXYxf05Mo6kH9AMcAN3cY+09h9Zu
sJOZY4mWTatI4ZpghaYD9Vq0etsDh4/7XtqOqRdUBRzyvfCFtIfvfySqYaZQ
NNOgivmThRyh8FGfR7eQrVu/ccveU75d2ZJ1559/PurkHnJcvH3xMiPjqnZU
MBoaZx5ZhPOiHvzTz/4wdcYcmArBzAVfJpXOhUbSbWJ5UY/9T7/7F+gbpM5t
8QnfIQGmpobiVDXbasioSbuPPm1066TiicUujRH7Dhp19LHXwEJqAe8H85UW
RlfGjp9stOCki3UjJpYbe6ER4HDgu80jy6c0ef4ht86E1VMLfID3NA87RjCF
J4RFe0xXbT64/4C9JIXGgRsBE/3zBSu3PPHkk/453CBQ889nlK948803BY9c
uL1bRt9mNK26fQ7joVMK+DliJkKFeUTPEX3ATPOoQwRL+F4w2o8Cm0CMCUZB
sPJQ4A/gQ/1zyBIu2z/3VNLzS5culc5d6p+XL9/81FNP+efnz5+ft3SDf+6p
JCyrO51DqDMNathWffqbd0vm0UPO6hDOPBRoHCKcHwUKCjX1z2HHi5eu8M8v
Xrw4d9Fa/3zNPQ/u2LXHPz9x8uTiO3f65wtW3XP27FmNped4MpZed5OxfPXV
V2ffvvrKWGJIDHxlLPEFP10ZS5I4sMJTL3GIH0pwZb1R+h+jwmt/MhXL7tp7
6PCRK1MB8UMJNJZQQqiix1LzAhoxcsw44y2SeQFVh8L7URbese3Mo4/65zAV
GIx/DpSBuH8OJYQq+ucgGYRrLI8/dGLpul1XtmHtA7x2J/sAb8PJPsDbsHBh
yPBRxgeILMEV48uingg2jAzARDHr8bLQu0lTZzz7yi+efvVDuDJEgIec5MdO
mGagUTugVjZ/IWXZ8IqYBD+keEcedMPOhzZvuUcigLmvEvEQnRA2zj313Mz5
Kwk7ijy+Hbz2hx9/Qe3OPPYUAg61w4cXL1zw/vQqpXc2PqRFIogd9g70DBWB
AA9QTdXkcFKUNDkJIjQ8BiW5dH96BsEQWKAvMDdx+bCKFUUuViAfMDHpkI3L
UUqR9TGsZTue/NReoo7k1MSRKs6zIvswsqG+Qj2tfeG+6+xt2GgAbYfOc1+v
/RQLa7rIPn/5RtOgwEVXfL93137O4hGG+c74rIWNPIXK9sDO5F00x1+2ci3n
BwVOh6CmJx4+y1Agf4aSsaAW3fM4AIHpAA9AJm0mLfvv7+bOXwxdSBU6XkFE
z198hW4GC+g1vMo30PIgMzCR3OSfvv4G3DVUFzqOIVswsxuCAAVEwgUIlHUy
BMD6D3fx9T999vuJU2bCYzEEaPCkabOg1/TWiyvcSNQ508yzek7j4FeaHOMv
5VcQLV37niq05CP/wmMYDRkDzX2zlEn96d/+HeKgJDTPWc/EqbOgfVRsBfly
ShBY6KFC4ngMqkCb1CI5iwJt3/z7f8C4oMHG1xFkxGBK89ECzIS67kzUqKp2
ECrzVLjbocA76C+0CYk5FCaPstRth6GbhtN7YpyGhAhSARVLKtwpq2aG/sUX
c8sXwq4578YnuDQzj6S8m27MptkOlAq+0KhyKg1vja/4EemD5UoegGEMDEfa
j7/gS6qGGTeX7NporK28m+o1HuIRnBfl4TQbgg9HMKIRkIcg7wAyED6NABDo
gr+kb5AyhMsjgFtcbaERABjCxiOoAI0AOSIbRZIA5tMIiGvQbyRDcK/UBlDQ
BYDAH3pHAF1h27Hj5FHxCOPACDE69MBIPMdpJbwvomEqbeEj4UBmBRcCl7Gb
os1Tfx+FVoWm+uALhgEoACRDQAf4WSRESLYsLJN14St+pBUQVJUoQDtEI8Qo
aMO825fgL0IofjE+is7VBTziA/7D6NA0mt5Wt1zDgOCPaWgnOBlaBUCtjYWn
XfRBZEWKkMrFCKlcpId8fpWMQfYgvMMwEDmNgeFJI3gMKjwLRjwGNBopHGTB
YyDh4Gid6yINdVlkN5yBCLo/h7TODGQ1PIPHNAem6nsqx+IA9nIeR+e5QaWQ
sWAg4RvyQ2gy3QFHdQTTsZqLBmAMGZ/ROIKJYaIwTQaLvNggn3P7omWWDHw3
lmRX4PBbeirCWZKcL2H8CaopfH3zX4YvVZ2EmHt0H415efPQy7496CVroEwh
XyKGsOrfvvlvOBCCBsZ/bU/fZWggC3Ly0MAxUkCClieRA/8BE9Dv3+x5zheZ
P2k8h9MBPQCS66yevA3TCkK4tnVA8bmKhWAi55d/RhOAIghU6HQQcoAu1SOp
5gxU0cp4FapponXAS9APwT//+q8Jwwgvo29a7dD2ORXwzCPKV8QUGB5x4PRz
7zA8z025WYe6MLyf2WMihZuGXrJFyhRy6Y2fl4bnaIHzaS+9/RvjRW3czqWU
xPMTLgjO0Hw8qPhp41LurhOvXHzzN8YK0kpX7Fm1EG6Um6SJ/iR5NOUol3bU
A/rtWx9j7MhxmKabnHR59IzDnqUvtw8wdWlH/b7Tr5VtepSygFxypabpZqXp
BA/AebyajtsBPHq766XhtSHPPt94//Mb7nvew6OiteOGbQ8Szcf7HDfZNgi/
rUcusPSoPy2e8P0xPkg2H0siXCWZgtVcrUevaC6Wu/Cex0vvfFgyPMMFPnt1
o+MahT2mAibGo1ImpHK73Nu3npt250kPb/G2J6hExPC8zst4rMP0noAGC6RI
d7jTKpI0Vb+Wbn9y7sYzBGHyqhMz153yEMEkylZ4byb4SHpkFMTBANqLtz0u
MCasODb7rkc8DK87BAMoElaAHOUuCcTkN8Td5+Z0r9erbJLAmXPXI8PnPwDo
nPnC3NRSgHwOMZf3l5WU7L/s7z2kUM2y97pSy41Tt/ssP87MdacxDjhB45g4
Gi1FMnZ6FG8x+UqjaJSnZnYr7jJ9ksieMltvAR6eXYuTVVVZjE2WMW31ycFz
75u48iEeBxhFNddUTYm7QIAwvQCwZfsR33g1ox5JrViA3dBIk1adGDTnAMbj
kby2yj5dGgko/LWRbEWG3zyJ78B/Zm6X59vufx15fJZV546W9aZN3PTo0Hn3
D5i1H8hYP5svfvPrf3+6X4tl893CligUg8FCJ3syWvZzoJJ1sVak/XOw0GDU
DY/ePOfgoDkHQTyNSmZVYTLhJ3o3XzzfFeeTR/V2Lr4/0AVqf/qdT4JRJ1mO
0ELULLcDRy3cAjXOLMfJ4E0BZdaSlwJ70NB7+t4Za0+zDCnEmGb05kM8DtQx
X41xJRwqxSlYzWOzvTxy/PgPMoQk+8/cN2v9I4wPZeAeH/FYkNr/V3yqRXRO
PDX+M++U6J2stIWlTRraNJWTwr96xUP32YZeJqMXHS6Zsmug1Yfyzfs2d5nB
8rRjfxi7e8DALSlzbRw+tAae/KVkWpHIWyvECawY1jlFOBUonOZtevSWBQ8C
p84tU6m0aVHD8sCg817oOK6EjqzjZ99YqOL2NSE2UGHBJpPqfEcUG8qACiCy
x2ak+B8P52STy/7BPbZw0vYZDzDDea89wYkmWbB2xtpTg8vuA7UwSgSBfJfB
cHZLNxtReC+3ibKcJRDRBpp5OIQ8anQGt8csRDzD7i5JnoRxdD0eYQyGQk+A
KzCG80JczHc5DfseemdIxQz8hwda16+EbSV8/OstGHjULiSvIpMTu7hQZpt+
9+ycVPe7OGOGhbSc6nO07IQVx3tO3Q0iB8/deEeHqReYW0XhaqkPQ86Zz7y3
hSwB4qIZg5lPsyVcE2LxH0/PKh5+IBmLzNglR0umrG5UK1Vv2P0mmlgvURS+
1/voijj4+EA4+LmlwuGLszNggx4HMkjORMqnDsB3Mn9oCpjtfBW+GY1i/fej
23XQwUoH28PMjJdtfxI8xX/Dyu+HnVME8fPTfId3eXQ242cTGfGKEU3KFU0i
/kQ1q4Iwzk/WdIut3dMYW0tLqzzMxvZ1pwnjkQsPsR/xXo3wRfsAX4mnfxu+
EU4WVFTOWdJuWbHNs54cZ4E8appBG9qJXHy69dDvqR3JU+SbQVLfa9qenlPX
TG4++rnoGqBNDxwb32zEMVehNFiTv5untEvmrOyzrvFUmPH5DHk/37cIUHaQ
RtiEnbVtlkoNvz/fScK+0z08pcWY01Kx0qP7LERmuOx/kkeXXIDUmyJ0mvLC
iI5Y32J5Fht3coCdWzNE3IKeLNhyDkoCgyUdgdtkaZBMdfXEz+DTFS4WRaRF
cS9X1Jg1jTBlZXZUWs1IxlavByVs4cyn3GHYDidXqLyTrO8KsPX1gb8N26zi
ZUFF5bytGtFryfG59iAlexq7QIIBgaN5CTlOfvcAqT77k1+uP3iEeVPgrH9V
hylzeCvvW/wsmrcYb12g6K0djkmDltraSTAmeHz+9V/de+zHpkXZBT/mkraT
Svnq8neCMXX27r1cbRa4d2PQutu6Gx5Dde0MK0NZBEVCMwcpdJ7PxXhWDLsv
PrYSRNZL/vjtj817qQKXH3HVhdYS+hpwjtLpjMbQjWt/8NIm3IQXgfclXgh+
wXnAhB++/OSdTyAuP79hD0P46Sqa1+LK8St02hfVzgTeRb2tr16QVlI5LLSI
MspDSsrKyigzyXW5pMsqQNFf/ueT/fsvfPf9b2mMPEbgMn6Uge0049yQnnOf
QDa/0Gko57JZN8Pm8a9lWnl8S2NJJ8qPOt9hfXw+JCtTdkqbaaRs0uj2HdKp
Eb3nP+d2chgb5Pk/je5rw9eKH6IIl+M8jEmgUwOGbT4rNTmuebHtO3bzmmCn
Gw6OPaHiCnfSIt5yvS2rfClJVnJPlpWbKLCsorxyCUJULwSzRO5wJ4VlsAul
hvNjXJXLKp9C9oGWHL9zHYeU9iZjSbYh2PAMQfMvqrsye+CR/DzZeVQ3kjMB
EIIJkfFuVCEo2/To2v3nef7H6bdpaONJUfQXwnZz6b074/uqES9XU11Sqrxc
0SsWD8EUc6Az1cisi9RGjBbBHOdfmAPZK2Bx15StW+L7tCGXFbt+5LHwVcDi
K3Dj8OO7SJV5Ljhnw5mtRy6adMO7DKUz/oF8dJKhWxh0dYNqpG9+cHnZjqc8
br66WOg0P+pPcqngKZLUdphLPDE+OK9C+Tj+RPctxnlHYAhXvSeJcH36lV8u
ufcJj4uvehOuuupNU+//LVz541/nLWk9ZYB+FpFOsq80ZTDksdlb99ocjSf5
VK2irSXR4azFVfGjV1x2iYy+E9TmqmnZBSN1Tl8/rRPickEiR6p5jyUeF5O/
ug0rmPClXCuXIBDPknFS7olwot0V//39D1B/wsnXWq+EU+vpj0f5YzJ62Q5j
hEetRIcifqzETdgNRoyZPbU0fiN8mnZx0JtawszXZmVnRCBZX2ej+ZZgzpql
sua01A+AKsf+GN8Iu+jeNdIqWqFkMn/tw2Q3SYCbzxP+Gm48d9XcIq2/Iher
RzTezzEyyuK09yD50XO/H4yqAnrOQHtuRdAVNkHgSOL9kz2Po1BsvtyWqihg
yEYrgq93oBJ82R+Db+AZw/c+heBH3xlLtVvMy0IK6g42/mVkJw3+mYhCsP2b
EpKczybF9/LzOx1c2flHcGUHRIUtaDJcb9sEV5YQMFwffbtGZOdzbf3Ojm73
Abb0HIRRVcDvTCRsdAVjptMJ3uFF9xELNpAKnQgkVWmztq2CPSfvYKztNCLY
ITjTWeGp6B1xUo8gwfN5Q/JmGgQRdL/TcYbrF9w5QBml3ysk999Fxc470XwO
RTmWLM7y+0IDzKVywrsviCdiF8CrquNAIA3EDtbzqMx8nplROTnJTN6iwyzS
Dl/eGxu/eYROyvJ72KgHrerBXz6NSlawgFVRmOa9afxEytKIz/IwSdfMDhaC
Se+sSGxyexif7zHN8THY7XSt4yPvbcpELMhQR1z0GYDOgFckeoJrHT28+ynj
7IfXLsl+ygCqnzdH1oFFfJ28PWYJVnG4sSZFzxY3tFD0i77pmeL0nffjZdwI
VHTiPYGQHL9Vzyg66jhZSyyZ4nQ8uoPKRGCaYjNEDMerJuQ+MpYKVXf0To3i
CCXmXW7W4UUTY+afeJLYXG6ZgxrMZoqVlmUdblROZqj+bbyek0Wl4iN3npKd
7GLl7yIV3mtFJ8bo/ecTlK/Icx6GoTS9ElS2f4Kq89vxqpXs5OPqSFP3nd9x
y+21fG4RzQr17qE6qpVd2QKxVXNaHvDPV3OXJOJYx2kEe2rCEQiylldVHkpX
DaJS0etPvOxqO41h/sq5PcG++bHKG/RQ2n1dol7p89/lhC7W3tucHQZ7i6NW
cK37ztjTmyhffZczJcTu5Bwi3ud1rfIVecpXEJfkdAuONfmKl9c63ebdpXJm
U5BHjVb06dse6jreBj5xtLK+norX9symYG+YPkGK7Bc2FHDJ+2I7Kw6ihj5N
qljZbr6y3eh6Z+/zqWbnay/6HBu620lnLSOUlfRRvL3e8TaI6yMczZzJ9nEa
yOfG3OLGCvbRyllgfHoA2ZT3ZHpVwbzEses5H8N73Osom9JrASLcKhBfXG7X
BqHRnLsewV+zToiyST/D16caycltlEEAATnfmiXfT3G8fihpsHuY8xp8moY9
XQ76N8xRGkT9+s5aoudeGV3kles0q4C5PnD2p3cfMnsc/BpUP/ue6/Q8OKOh
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
QFhYBwuM5Qlk4MuDl+NkJkO//kr7hoO6YCxIKTVoeOM2TS337sSlB3P6lm9N
lYy+a5/+fdvKLuWMXdWJSd23HPQWWHNYEd7Z3mOaLcOYZCLvAglz+KA9i08m
1WWhjw+PtORynphmS3Gb2aCdDyYTqni8JDOaKtJSSQbTSkTmjYoKkkqIqxo/
SPeplV9qd1aPMJlS42aQkPJoi6afKlNYp3LVv7TGipH7YniDJTR8pIo0l0jf
nSTbsQg6W+Dx/B2GUx03c9kSpfiTk8D73CXOjT2sCNtWwh621NeCtC0PMOnP
gcEXKsGgQ/05MU3/ePbgeGgNS+ZtN7ZqO855LfnTlj9+/ZSdPcZu6jdp+9iF
G+7tNumE7Ut/Fd5yhnQ2ySn9bk0I+fW9YwPIpLw0xuZVjOvXfMwjNJ6jLZDh
rNe5IdHpZHiK8ByV2BZr2f2hvi6lytTNkCtCf7DlVhMYPygO+VpWE3icnVcn
NXGvvnen6DPjRLssisRiTTcmrr6UqxGVvWXiC7knVYbrjnvU7byzRRyypQgj
pQieDaXn4nNiCL1jPSQM6UiCeqX9nDyHgWlUwjjXc659Jrgkl5e4Ugo1zoPj
Zl/j+ilpIemYvvLxQRW7IJc9xi66tdXgb3/8Ke19m32SAws6jrX94fUPcUux
jmzDqihMO1sjoWQPH5j8asvViudRScwChU6OwxuAbXXSiIe/0B1QVP+/3n03
mNfQEgSLJFu7HtxpipPaiiRkcyX+dR5TFcHq/LCER80efLHx4Hm2Vmjkl9+T
fNIih8XS42VGSGa+tU+ahlRh9Plc+Lm1H8IPRpf9nXoCfu55wav+WcL/mrOe
hdbo6nFnynDt/5DxJN86PfmeR0fNX7vl6qloi6zN2fd+PLL1kNFhNEdCE3s4
S1ngoGi/d0hX1eMQSO1npTfue37HCPULikT7upq2ScvhqNIUk70EJ23Ull2b
YWn8gblHgfrVx+1EeWrYSl22lD3hNOYu8GgVc6ad+Oy40QqjmpEXCRmjtmjZ
wskg9NXHzfMgc2yfajYZe63x8mTOPhecEzeKrnHjPC3YqVf1Bezcc8CKPufZ
ZwvYG7ULPI9HyWU7Gum7LNSzmjy4nq/94gfbt59Q/3XdfG74HfxIDR4WETO5
iRJR/1Z64TSvWNg21W/QqkPaJufDGbDMqDJkcPSOaD+VxCvuVWHOSwsfPCem
1UX1inqShne3KvKpud2LY3J8DxFfOzTqs1dLaZ7xBz7Ulw+5UZTwsGPt58Ma
usor8zTPxpDEWBHWbpUkx9hYIb+mPTNSGm4WCTwLY3ifB4aQYnKnGUO3etVA
YJA+B8Toc8Y8R2Zu+V6f8OAAVGhcL5i28vGl25+BXLIIqY9qqICY5/1Slbia
lW7VEmUssDWWM8Z7QhG9tbCKhJg83sIp9zy6bOd31JDiFNFwn/1DiVe1MCmD
AgT2zOjRLzZpwlLn1ngLzXv2C2gl8H19vZOVYal5uZ8+VZ7SQkxrYmnMyKyt
tfaOeyPvM2JMM/qf/uq35UsfCVb9eC2Z5A/2OVjlc3OddIzLAQ9pPdx7wV+r
+z3/PPB97tU3MdN3+LiV7IZVVcE8UbeZklzKfEac8ojKxO9S3vVqYpr8EZr5
5fDEufU1cz39hz145ns/VzsW7HNYbhWKZ20PSkRkWIBB1TvksKytBjZN7yzs
DHQPSkQ+vp1D51o+eytjHkZ5SXha1jOwvxj6aRsIQs0S/UZFBbfG8vPSS2y1
6f0v9QWItidyLdbMj1fHty71rHzm1Z49afni/aMPwBE2XDWu0nnjTNJDUeE/
/pd3eSXcrWHauOdA2mkR12Ib4bHjHkuW9tf5o7HMq+b3gqyYUkTtSz95mzGl
i5nUq0YBJqpVyZPPigntfSV+Z3xo9dbmoQokitZtRFx2ELNnT2/49dJkRSiC
XUdpq31FWhHHRP2vb74JMckVeyUUew9HNpAnFGe+0GyXRNIuetFmN/u1vzUX
h9EJ1oyN3MYTsOXdG7ebQhDtNiPLhBvhKbLQRuTiSe2M5Yo9lsGOfxna37ZL
W4mcydqvDE5G6x2kjN2Hq/D2Sb2o7aWadswqoYukkf+l71fGpJO9Jbf7QlTZ
vUXebfkvc5s0n5fAM41UtPfInuA769fTT/hCp4BdtDvNp+2uMf5sjiDl9ci9
JebxTsEBasWuZNOmDeUQopOUabvLDfGhUdPFRDcwJew5Tb1jlrY7eviSFhDp
XARkjpaIwJhP/2ziQ2nJH54n02H3ZXh8dxJVHPIHvibtSKME/QIxXGKw5Yhm
woSWElUcr80Lz7yivSTayVevtoteJwh2FQlM0+dmXdZ73g/LeBbFnofnHXQX
g6kjKZTcorNsXLgXX79I14JE0eY/XBHFJ/YZ168nZWMaLNXMJ7fPS9IHPwh8
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
IznLnJWwPHY2KnP9R+3ZiiicJqGVZHt2RwgdFl7eKdDEUBzEhik4K6NwGkfx
SkajyXsBGkftk4KzKgrnomh5it7zI+tkbv/4OREFZ3UUjjizwf7jXaGEgzCZ
n7+R0dzA71Jw1kThNIzipW1fMNOTefYbVmvP7o3CsSd6gvsmKNpWRnLKfPQN
wlLevuvaKCyKmZD3RixJYKwwqC9g1Q8p5z3P9VE49RI2TetzYoWhnoBhT6MF
Nm1DFIa9Y9j6jSvCHmPJiOacD3wvBWNjFAbl/PX9xlVRmxbNFx/4XgrGfVEY
FyZs2ppQw/1IJpnzPWHTNkVh0H3Hvt+4NmEVlE2TMSy1E5bP7DRtjsKpZcoH
vuOGBKYytqdWaMV5LqngbInCqRm1aXQiyl+3k7FONau1aVujcGqY8sGZ681h
j5nbLUWO8eT5CgVnWxROSYgXS+7WhDbIXOYlocR7Nm17FE5x1KbpssG6nYx/
Ka7Wpu2IwrFnwAkOW5SdxloF8ZEy7oLqWr/Ls2k7o7AKo7jtiv4qc3EXJuyU
grMrCqcgUXZ3aLmZmwUCRkHUpt0fhZEf9gRE+RuJHlOSIXeLqZ5ct9P5oum0
e+Fbb721cdOWQUPKrul69dXtO/Xq0Xvc+Em793xDZZPMTWBImTTlXEaXKzxz
5szqe9f1v2HwNZ2vQku9e/WdOGX6Y48/rnJL5iZsmcJD84lOu2YoBejIsVMW
r31AZTXNVVlA83YcOHHnPVtH3Db++RdU2n80IDNaaoyKxMk9gNywcdPYSbOW
bXxw/7dP67YKt+77zuyF60aNmUCZZRNRnTrfOp8UPXv27IRJ01Rm1AKNB2Uj
nTti9FHjiyr4OnsnWZo9NWqMHDVuybo9VH7P4e8D+pKbb7EOnIKg+4yzxILe
28aVq+yolOV10Zpdc7t1V7joDJnqjP6pMWNuHjAYTVGJ2XetXt6xk7F/e722
XPbcEpE9l7Jtuuy5xSY77m3jp6o8sK4lypDrctfajNBgmOpByoDrctfSe/B0
asVslXXV0Uct3VE5f92uwy5jr8sKrTmXyCvscHZ9QbuygH5T2XCXYXjF5v3L
lmuXlm/TfO+9shFjXYZhCAzkN9aSLAnuQ9hdS0AAaLj3YBpYF2tJ5laWGZ5l
bmWXw1e2JPMjS5wkpOpxkpmYJZ8kpBifXhHyQn0DUkCQ6zuZERwIAs1YSzJj
MvgEqVfyQvL08ssvT5xxl3vvclhLfXFZkUsETJJx6Du0L5DxEWMmoscT2kI5
2lVW+2KT5XnXA9oUHTTyBlV2mjlt7tJvfuuowWmvsxJpcBTYUoblfKMvkKDN
W7dThuUMHCrYh7d+/GPfmqg+BlcOPfGkblFno6d8DOnDTz4FzVywaicYpa1W
WnFk3iqyWhq/IhgTsnVkBMlwgh0wnABPtdB90yuXU5pmBWOfZ/Gh99t37IS4
9rmuf58+/fAfRBw5ckRpOeXZ/5POy0ymGuib3B9vvIGRomzYyFQu6mgpeeaZ
Z4zuaxmjm/O87D7UNzZ/Muf8cpljVCHKekMjHs0D1FeSD5fJmLK7uJxSsiaN
cWo0etjUJAvvMhJ5NZ/2ahIA+PJ8w7HLCixzebialL3WZm5BEzJrLp0ocllv
B3ttq1y/lBNC5PbMUl8VutWD/SeTMQPDy98rS211WWMpGsFlAKYsgS5fZd1/
MD6KN7c43mTs6sWxMKPn+WR+/TLzun7RfLAULeFy0lEWQpFR8gvng/1HUyV7
y+a0IQf1PPOvuuzEnyFP7HnmQr3e8J3z8FImz5/ZPGvnm4+1+EvEyXHtx0b7
jvl5FF3GnPPLe/oFOZcl7yjFqkBKOQ8qSa3LpFhP4Hd+eVC/PPwUk8o8Ttr5
jRud2I6dK+PoF8UsW9ZP0n2X/bZQzHs+awbS88qGep64SVmkgfZYqprMjlly
errMwueZw/NLy/c50PCXs5XmCS36rPk+P3M20s+Bs+S7zeDEfHd+17kzap53
5swvlF2TuAxf7PutWr3SpQv7Ys7/a2g58Xmya34BGqrF2PGYsgG6zMkyN+K5
M1e6+wqyZKj8HBks6WSuXUUDY9UoRfi5DG6fP4/leWXWPA881ddbPV7KPJPO
0uoVvDy7KkcrZvB67G0iTJP69x2vRTtNYclyeef02mW+XZWjdb4qnTHM2Xm+
PURV0LfuclY8mZHRZTWkjIx2HY5XKsmq0UIQfE/d3nGvPXd7isw2KFZyzclE
ziJu1jf9tlx+TZkBUKw+44vN/kcGOdGWzCbost7q3QK3Ys5CpRvhTHkux2SB
8I5otd2OCTxkvezV/a3I0icz49lVNW917geufoG9B4aKvNKtGyg51bkzSZXI
Whfsl5jo4lOutRp2IRjk2x0KoIh6mBSSiqk12PWmNWKbt4+r1zp45RDQIQJ2
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\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{{7, 1}, {8}, {6, 2}, {5, 3}, {4, 4}, {6, 1, 1}, {5, 2, 1}, {4, 
         3, 1}, {4, 2, 2}, {3, 3, 2}, {5, 1, 1, 1}, {4, 2, 1, 1}, {3, 3, 1, 
         1}, {3, 2, 2, 1}, {4, 1, 1, 1, 1}, {3, 2, 1, 1, 1}, {2, 2, 2, 2}, {2,
          2, 2, 1, 1}, {3, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}, {2, 1, 1, 1, 1,
          1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 
         2}, {6, 1}, {7, 1}, {8, 1}, {6, 3}, {7, 3}, {9, 3}, {10, 3}, {11, 
         6}, {12, 6}, {13, 6}, {7, 4}, {8, 4}, {10, 4}, {11, 7}, {12, 7}, {14,
          7}, {15, 11}, {16, 11}, {8, 5}, {9, 5}, {12, 8}, {13, 8}, {14, 8}, {
         12, 9}, {14, 9}, {17, 9}, {15, 12}, {16, 12}, {18, 12}, {19, 15}, {
         20, 15}, {13, 10}, {14, 10}, {16, 13}, {16, 14}, {18, 14}, {19, 
         16}, {20, 16}, {21, 19}, {18, 17}, {20, 18}, {21, 20}, {22, 21}}, 
         Null}, {AspectRatio -> GoldenRatio, 
         EdgeLabels -> {DirectedEdge[{4, 1, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {6, 2}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {5, 3}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {3, 3, 2}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {4, 4}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 4}, {8}] -> Placed[
             Rotate[35, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {6, 2}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {7, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 1, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[2520, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 2}, {4, 2, 2}] -> Placed[
             Rotate[630, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[1120, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {7, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {5, 3}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{7, 1}, {8}] -> Placed[
             Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
           Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 3}, {8}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {5, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {5, 3}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {6, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {3, 3, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {7, 1}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {6, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 2, 2}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 2}, {8}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {4, 4}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}]}, 
         GraphHighlight -> {
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}]}, 
         GraphHighlightStyle -> {"Thick"}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         ImageSize -> 800, VertexLabels -> {"Name"}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
          0.03178333455671099], {
           ArrowBox[{{0., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["8",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["35",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1120",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 3.6983634028569026`}, {0., 2.773772552142677}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {2., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["630",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {2., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["2520",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {3., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 4.6229542535711285`}, {2., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 5.547545104285354}, {0., 4.6229542535711285`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 5.547545104285354}, {1., 4.6229542535711285`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 6.47213595499958}, {0., 5.547545104285354}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], Offset[{-2., 0.}, 
            {0., 6.009840529642467}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.9245908507142256}, 0.050853335290737586], 
           InsetBox[
            RowBox[{"{", 
             RowBox[{"7", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.050853335290737586],
            InsetBox[
            RowBox[{"{", "8", "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.050853335290737586}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "3"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "4"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "3", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {0.050853335290737586, 4.673807588861866}],
             ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {1.0508533352907377, 4.673807588861866}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 5.547545104285354}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
              "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 5.5983984395760915}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 6.47213595499958}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
              ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 6.522989290290317}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->800,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzkvXe8ltWVP/rOOe/7nkYTEQ8iVZr0Lhw6SJcm0uHQDwekF0FAmoj0ZqEK
ggi2qFjAWKLRMVhiTMwk6jCjyXUyxhsnTnH0mrn3c+5377X22s9ez8NJfr/7
5+VjTt73ffZee/W19np2GTFzZfncRTNXzp89s+Hg5TOXls+fvaLhoCXL8VPu
36VSuY1SqfTF4hQ+V6RS9L/ovyb4X/jT/19/aW++5V66dGnL1m3DRoxO5fTp
PzCVO3Dw8PUbNl28eDH1p6B1W/Mt8+23327fsat07tL1O44df+qtVM4jL/w8
lTn57KWNu0/OXbS2fMGiL774IvVV0LONHeejjz6aMHn62m2HU/mmT+7Owz8a
N3nmj55+JvXHoHVr2xpQ8PTwYz9JFdrWGAGDvvHGG6kvE1pjWIAzDYtsa/Sb
XDr7z3/+c+pfg9atbOvHHn9i4aq7TcOqtvWGnQ9t3nKPefSHoHVL2/qHH34Y
OWacobW6bT1izISvvrIE/ktCa1A5sXSeaUit5y3dcP78+Su1fvXVV2ffvtq3
XrX54P4DB6/U+uzZswtW3eNbr7nnwR279lypNSQIgfytsD/44IMps27/W/EG
T4YMHwWZcOvR46ZAYPHWLazOfP3v3376+R9feOPXO/c9sHTt9lQ12+fuA2dW
rV4b53pj2+c//us79Pnx3//20Rfe2/PwqxDx5rOp9GvvfIKhb1+8DNKuYqFA
LuMmlcYlfb35llVQFt3zeNbAyVu248nf/NO/UksgftukGYGmzZi34sJLLylN
q20hfvf9XwAReAjEIgOxYNMDL3z5p/+glh9+/MXhx9/8xYe/hA6CStL3zIGH
L5C+oyf6K3yvtnx98+eXARTYpWoYqFXwBQPiEcbc8dDL+I3QBr3g3YzyFbC6
tIFeAIZAZNNnlZEcQDhQW3fg/Pv/8HslExoJYLcevmAGqW45C6RoGAyZY34B
Z/+eOqRyzJ+CN998E34BLgL/9e5r/sLqoCMQSCrXygxUoSf+A2Tgmfo/gnFr
uXExgiXOjgssQfQXf/wGHLMyzr1jzzPA3jLb9oD2/OyX/2w+5tkfCW36D6A+
++JPvwvGucb2+sv//N88TqGFCp6+/eE/Y5BUxn4nkH4UfD91/h0ZJRcY0RCk
ebnoSfJN/XNcKwxV4LVpmG9brz94/sHH3zQfaTSgwqMRdEBDe/Mx335/4qUP
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
nl2uU9bZQrDyzq7giq0dIoyp+kuzcMLY12UIY8l2km03P5J3Gd9Q4vKqQkZX
LCDIsXx1JE/ZWfL5hsoOo6O6EGzFmk9PI79ExUlaRbMw+IZ5m+2cPKN0lzCg
AqXXqiTvHURq+Z5HOHCSqVWqwOmOvIQe5+QTrL+s6fg0h05a1KfcEpZSiEvp
Gp739fHMS2Ti8xnB03101OQnYjfO2UWwhoxwvvDTf8A03OPscSKvgV5cM0on
2Wt0PsQhsEBjqZXKr8p/9Pn3jLfMJHoKfy5lbpL1RWTo45D1jYR5nnwPfERU
q8CO0+ffNXN7Xc8qdLSXq3OBo3qdS5H51YSonI3ZE4VisuPo+ooxiV6ATmvG
eOcuvO/H96dREn7+lOTEMzLTckYmPmjf5C3TZQ6WVQGeUZ9JeOq1g1c7ScI4
zjz/LkvSV/gIT5/j6LM+FZ4XxIemAq+fJ3NA0nZC0u/GADePP/02j+7rfzS6
zONj55tGpej1SDI5nnvInOFCtDpkzwNKywo+cIWg+2ofjY4sIRgd+R8/T96J
cIvjc5Bx1HJ2Tfst8M2cpS12wVVherfga+Wi1dERgwzZrneMreKs5fwFrd7D
N1NJl1Nyv4ucNBrJKmg0X8m7z1FCa/z+Yo+9Zije0pLPVfXVO3prdt7pGa9x
zHGwZV5mamVVndUwLNIHXylr6XoFc54hjgfBbOIap1t8wg6NKLlxefQsVB91
acTv5JTOlomw7YjBelc6bdPvyaXRJL8tpxoCjeajrdYoWo1NK4zltO6MZFzl
NMsnKDKjjmkJcVyqHLwSlNarEaVUkdPYEO3+fGh7ll4s1785poNy0imvoU5H
4Bq9kzNSOA7p82ZbJ1oMjRNdyy0njvJabqrbySwbdFZ1LcqjZ7x6/aHV+371
JkGQGS8oTD4b1+sDrQ18RlGcifgpUx2s6uQYQPGW1dbZp0R5gw0dvBD12cWK
YhqHZqTmu+yqD8bxttfWSZDyBpZgH+eLggy1WPEm42yRCsQ8lvfFWaUt+xwu
vAo94yyLlI37+9mD1gLi7NMROzK6nnXf+b0UQfFnS2eVBbV3tAUrh3u4X4Os
qk7E2sw8g8ZCez7biMbydwvoE4PbR6ToZys93K9BrlbHweb1tvJ+kffL0Vje
i2qN2eva87r8rOMDn1as/ZjWBOLuj5Q+SZ2KW9FbdDkDm2cLPt7SvsXo+u6b
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
Q5FziLKAopkKt0GJnvp6RdEghQXtNYm+3dcrba5P9G9NFW7zFDXXJ/o32WnL
UX1eQNEMhdvAmO9toKgZqGQ+0Pk3WX3RQFFTP9G/0aot/2a3XFFTP9HPUS8f
ccsDaqZHqDG4xffBNFLU3Kx4OsBZbbA6Rq9Uaxj6OG7VQHF6vqKoYeifmA/U
y8fL+QFFpQ4/Xr/ZP9EH36CoGqAw6e94GazH0acF3BCT5PUKtwWKosaJvv56
14pj5oKAomkON17p2C/R/+od9/2V3PuFPo5XYej99U1jlkbrnPz7xtsVRU1j
fp56+Nh5e0DNVEVN30Qfp/en91N87Zvo4/RO9OaJra5R3F6oKGoe8/MU23zc
XBhQNMXhxms3+yT6OL2Tm941+fWRfWKc1yumb0yUIOVG/u3IIkXNjYl+nnr5
N0aLAoomK9zkLBLxcXqvcR83Kq+PlFNFxDL0avZWiRZW3XGa3wIsVtS0SvTz
1Mu/G1kcUDNJ4dYr5uP0rtzeDgsetWeij9M7DtoktpK3nszpJYqiNs4/JezI
828PlgYUTVT4xU+/Mz5O72XtpWSuzrFjCeh9uO1jkpQ3QlyzX6Yoapfo46iX
r8EvCyiaoHArSdQOvZdV73MpSdQOvXM1vlYw4yjiGvhyRVHHmI+Tm524ar08
oGa8wqt7ouXq3Z+yb4hlXpJouXqfp/2esE/PvxNaoaiR0+nUjjwfM1cE1Nym
8Oqe6FX1HsnuSt7dY6Pq3WwWgt+jd+7Cz3ccNynGSoU/tRO+QNa7TryCbisD
rMeq8bvFpK534XVTMu0Wk3p3hTGtbPz8D1/P33Ju4T2Ps5ZqflOrjy7/Ye6G
M0vufZK1MuTxrWrs+M4+vYdNdnGyzLomWl0PhbHtlS+Fc+UytCVTa4lsylWE
FjxG4dMl0RvqHV+kNT4b6JLoDXslaUpk1ZXs1BOPrr0s9fARLTcRuyUBRaMV
bp0TfVIfRVGXxF7aJ/VRFFEvvzqJduxFI66O67IjkqNaXkxjwpg+SuGVfCKl
3h/V2eHFnE4+b7Kfokb2jzO37fqUWEakc2Pq5atRhTGLDTPJkQq3jol+Se8m
orqKz2c7xvzSzYoa6uHz2aqOc0HGqmdjduc/MvRqiViFs7ARCqcOMcr1DpWO
isMdYr5qkKKCevgctobT5mAWoef71MtXoWokak04579F4dY+ghtppt7P0UFJ
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
kby2yj5dGgko/LWRbEWG3zyJ78B/Zm6X59vufx15fJZV546W9aZN3PTo0Hn3
D5i1H8hYP5svfvPrf3+6X4tl893CligUg8FCJ3syWvZzoJJ1sVak/XOw0GDU
DY/ePOfgoDkHQTyNSmZVYTLhJ3o3XzzfFeeTR/V2Lr4/0AVqf/qdT4JRJ1mO
0ELULLcDRy3cAjXOLMfJ4E0BZdaSlwJ70NB7+t4Za0+zDCnEmGb05kM8DtQx
X41xJRwqxSlYzWOzvTxy/PgPMoQk+8/cN2v9I4wPZeAeH/FYkNr/V3yqRXRO
PDX+M++U6J2stIWlTRraNJWTwr96xUP32YZeJqMXHS6Zsmug1Yfyzfs2d5nB
8rRjfxi7e8DALSlzbRw+tAae/KVkWpHIWyvECawY1jlFOBUonOZtevSWBQ8C
p84tU6m0aVHD8sCg817oOK6EjqzjZ99YqOL2NSE2UGHBJpPqfEcUG8qACiCy
x2ak+B8P52STy/7BPbZw0vYZDzDDea89wYkmWbB2xtpTg8vuA7UwSgSBfJfB
cHZLNxtReC+3ibKcJRDRBpp5OIQ8anQGt8csRDzD7i5JnoRxdD0eYQyGQk+A
KzCG80JczHc5DfseemdIxQz8hwda16+EbSV8/OstGHjULiSvIpMTu7hQZpt+
9+ycVPe7OGOGhbSc6nO07IQVx3tO3Q0iB8/deEeHqReYW0XhaqkPQ86Zz7y3
hSwB4qIZg5lPsyVcE2LxH0/PKh5+IBmLzNglR0umrG5UK1Vv2P0mmlgvURS+
1/voijj4+EA4+LmlwuGLszNggx4HMkjORMqnDsB3Mn9oCpjtfBW+GY1i/fej
23XQwUoH28PMjJdtfxI8xX/Dyu+HnVME8fPTfId3eXQ242cTGfGKEU3KFU0i
/kQ1q4Iwzk/WdIut3dMYW0tLqzzMxvZ1pwnjkQsPsR/xXo3wRfsAX4mnfxu+
EU4WVFTOWdJuWbHNs54cZ4E8appBG9qJXHy69dDvqR3JU+SbQVLfa9qenlPX
TG4++rnoGqBNDxwb32zEMVehNFiTv5untEvmrOyzrvFUmPH5DHk/37cIUHaQ
RtiEnbVtlkoNvz/fScK+0z08pcWY01Kx0qP7LERmuOx/kkeXXIDUmyJ0mvLC
iI5Y32J5Fht3coCdWzNE3IKeLNhyDkoCgyUdgdtkaZBMdfXEz+DTFS4WRaRF
cS9X1Jg1jTBlZXZUWs1IxlavByVs4cyn3GHYDidXqLyTrO8KsPX1gb8N26zi
ZUFF5bytGtFryfG59iAlexq7QIIBgaN5CTlOfvcAqT77k1+uP3iEeVPgrH9V
hylzeCvvW/wsmrcYb12g6K0djkmDltraSTAmeHz+9V/de+zHpkXZBT/mkraT
Svnq8neCMXX27r1cbRa4d2PQutu6Gx5Dde0MK0NZBEVCMwcpdJ7PxXhWDLsv
PrYSRNZL/vjtj817qQKXH3HVhdYS+hpwjtLpjMbQjWt/8NIm3IQXgfclXgh+
wXnAhB++/OSdTyAuP79hD0P46Sqa1+LK8St02hfVzgTeRb2tr16QVlI5LLSI
MspDSsrKyigzyXW5pMsqQNFf/ueT/fsvfPf9b2mMPEbgMn6Uge0049yQnnOf
QDa/0Gko57JZN8Pm8a9lWnl8S2NJJ8qPOt9hfXw+JCtTdkqbaaRs0uj2HdKp
Eb3nP+d2chgb5Pk/je5rw9eKH6IIl+M8jEmgUwOGbT4rNTmuebHtO3bzmmCn
Gw6OPaHiCnfSIt5yvS2rfClJVnJPlpWbKLCsorxyCUJULwSzRO5wJ4VlsAul
hvNjXJXLKp9C9oGWHL9zHYeU9iZjSbYh2PAMQfMvqrsye+CR/DzZeVQ3kjMB
EIIJkfFuVCEo2/To2v3nef7H6bdpaONJUfQXwnZz6b074/uqES9XU11Sqrxc
0SsWD8EUc6Az1cisi9RGjBbBHOdfmAPZK2Bx15StW+L7tCGXFbt+5LHwVcDi
K3Dj8OO7SJV5Ljhnw5mtRy6adMO7DKUz/oF8dJKhWxh0dYNqpG9+cHnZjqc8
br66WOg0P+pPcqngKZLUdphLPDE+OK9C+Tj+RPctxnlHYAhXvSeJcH36lV8u
ufcJj4uvehOuuupNU+//LVz541/nLWk9ZYB+FpFOsq80ZTDksdlb99ocjSf5
VK2irSXR4azFVfGjV1x2iYy+E9TmqmnZBSN1Tl8/rRPickEiR6p5jyUeF5O/
ug0rmPClXCuXIBDPknFS7olwot0V//39D1B/wsnXWq+EU+vpj0f5YzJ62Q5j
hEetRIcifqzETdgNRoyZPbU0fiN8mnZx0JtawszXZmVnRCBZX2ej+ZZgzpql
sua01A+AKsf+GN8Iu+jeNdIqWqFkMn/tw2Q3SYCbzxP+Gm48d9XcIq2/Iher
RzTezzEyyuK09yD50XO/H4yqAnrOQHtuRdAVNkHgSOL9kz2Po1BsvtyWqihg
yEYrgq93oBJ82R+Db+AZw/c+heBH3xlLtVvMy0IK6g42/mVkJw3+mYhCsP2b
EpKczybF9/LzOx1c2flHcGUHRIUtaDJcb9sEV5YQMFwffbtGZOdzbf3Ojm73
Abb0HIRRVcDvTCRsdAVjptMJ3uFF9xELNpAKnQgkVWmztq2CPSfvYKztNCLY
ITjTWeGp6B1xUo8gwfN5Q/JmGgQRdL/TcYbrF9w5QBml3ysk999Fxc470XwO
RTmWLM7y+0IDzKVywrsviCdiF8CrquNAIA3EDtbzqMx8nplROTnJTN6iwyzS
Dl/eGxu/eYROyvJ72KgHrerBXz6NSlawgFVRmOa9afxEytKIz/IwSdfMDhaC
Se+sSGxyexif7zHN8THY7XSt4yPvbcpELMhQR1z0GYDOgFckeoJrHT28+ynj
7IfXLsl+ygCqnzdH1oFFfJ28PWYJVnG4sSZFzxY3tFD0i77pmeL0nffjZdwI
VHTiPYGQHL9Vzyg66jhZSyyZ4nQ8uoPKRGCaYjNEDMerJuQ+MpYKVXf0To3i
CCXmXW7W4UUTY+afeJLYXG6ZgxrMZoqVlmUdblROZqj+bbyek0Wl4iN3npKd
7GLl7yIV3mtFJ8bo/ecTlK/Icx6GoTS9ElS2f4Kq89vxqpXs5OPqSFP3nd9x
y+21fG4RzQr17qE6qpVd2QKxVXNaHvDPV3OXJOJYx2kEe2rCEQiylldVHkpX
DaJS0etPvOxqO41h/sq5PcG++bHKG/RQ2n1dol7p89/lhC7W3tucHQZ7i6NW
cK37ztjTmyhffZczJcTu5Bwi3ud1rfIVecpXEJfkdAuONfmKl9c63ebdpXJm
U5BHjVb06dse6jreBj5xtLK+norX9symYG+YPkGK7Bc2FHDJ+2I7Kw6ihj5N
qljZbr6y3eh6Z+/zqWbnay/6HBu620lnLSOUlfRRvL3e8TaI6yMczZzJ9nEa
yOfG3OLGCvbRyllgfHoA2ZT3ZHpVwbzEses5H8N73Osom9JrASLcKhBfXG7X
BqHRnLsewV+zToiyST/D16caycltlEEAATnfmiXfT3G8fihpsHuY8xp8moY9
XQ76N8xRGkT9+s5aoudeGV3kles0q4C5PnD2p3cfMnsc/BpUP/ue6/Q8OKOh
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
CNHRQ5P4+7sRMkI6stFBOTp1Vj32dyOEM2aV7HF/hWtXx+Gi4S9x/PlkPi7D
X1XMoiCLJe6/JCI1KL/1CJsDc3Kg40GdqqR+dsne9lN4a//uWU7TJOIyBB6y
8Xggr81z+u2CpM5h/XBK7+8zCZcdkNRvOiqSjpg3p2RPT1E46+grc3K4N1Vj
wRrhPGwv99USURr0fbWgSZok6aTjBHG0gv1wackep+8iBsvp0ixPQqU0Vlj6
qC6Z24vpe4jxxeLGCs/uToZklvBwMryvo+acolq/rGRvT1K4a8v4MqddMnZh
teIh1gq+E6XumcY3jBuqeoQTLAHC0XeHdQyZk1Wt2pI99neJBfdjFAVqHe6Z
eaVCjc0/8i5xhaOT3zXScUb0XeLLS/bY3xcXi/VYpUcud3yVsR24Xxes+uQt
84xuVvfFZdTLlG70q0SRJ+8ZoiL+hd5yxMKqeW7J3p6g8NZxH2w8giplG/rF
jL/3z17Gii3c+4/lmFMc1/uV5O0//fmzzF6AjqfB8Qj7IfNK9sfHYZDVFp/D
3HOF08ATl9w7/doHgYKPw/DYD38+dOYtG+5/PsRhoN4dOe/OhWt2+hsNRoM+
+NSrQ2duuvWh3SHOQsCYz2HXa35JjI933Jnpb7DAbKyFCo5nvP7qlaPv7z7+
VPaYfTQM2oyZcfH1/C4eo2iY/umeHO9wkf3SBSV70ltxno81LnaFj1UiI8lz
O72K9hG4MvseDRQmcQQTswbIy9fROW0Y4IT1oY5r0jviF0OthSV7fJzqUT/3
LBaZj0MjnJCOvNDN6b17ktFppK6PTiPrvLQO7ZbThhWqnpYvH51Gzo0Wlexx
L4WVvfUMHvK30GV80hEXujjsvB3dUFFwlhqf9NzYJacF9ZmOjkWk9fGVJXt5
jOoNV3DBKvMxpIRL0hEXeKc4H1kqSMhM1du07dPB6aKMnmzkeizrQj0P9FI9
Xlyyxz1Vj/S+io8TJlySj7zQ1mGZjhwmWPnIYbKvlLZv07d1mzpeEerped5b
GTJzLynZ4x6qR9x3CtZVOqJbrIFbOywT644wAxFOsBHz8Rhau1HPnKsc4Cgn
a0IdL07vpl5VsrdHq94McbRao2L8xXc6M7d7WzhJTKwlAxb+Rmx8pzNz59fD
uSe+ravvfupYgD0UVa8u2dvuqjdnuWexWicqTuEI6LmiaVIvt1Z1dZ4swtKz
WtPkr61VXW2r++iO8nxNyV4fpTDTka7HRxzu94xyfEcfhPyeUFgDEI7aPc3N
at6XwY+8z3QhEqbjefI57KYuLdnbIxXnDXPyrOOwbonyLNST0Tq/5xd4xUdn
ldVDO0e1zMxWldOH7ZWE6ZXnUU6bia1wbcne+lW68H8c5droa0bMDTMUI+bq
OaPM/ZrR0R0V5QhL7UDmZrf03ZKOino6Ji/7EWzCZSV7raPf+CjXMi+byMjG
+rD7U1XeHvjnX7zPQaZK5n5i2JUZ5XCQnSDW9mP32pv/Fg9tFyVFer+km8NJ
7PXlJXt0uGA80uEgdpSPgy3c4KPrfOuB54fX3jbuym3P7flViIMtqxkfB1uo
ebiTxBW3f++c2ZtnLtsOUhR8LGwZXx0LW0O9vmQP9K6jjk49XOFkyzdUulU9
6h3ICxRGhKG0p3o8TNXRO3ldFRVuKNnLLgojGwE/stzOU6Oej0tf7kYwo109
XOG98xVv5mOIlCe1axfVflfV28MU164o2dvOCto4p/PuiWJLl8w7UJ3Url2U
JtHZCLrktGZ63bC3/ARdlNZZWbK3nVRvJijdqrNBpfNJNE7+2tlRTmaLsxVm
nZJas3HyVx0jSp85+Ox0MsPcWLLXWsszikeYP4cqjknnDWmWG3lSM+wnEk7Y
7eyYHNFmuZHvJJpR95Lwg12+qmQvD1W9mOJoJDbRvuWCaZmTZp/bZUs6O8yh
SSnNx7wmnDCj6Zwxup2bSva2g+rNNPcsdi99AcLaI53fJ86NGOzcDq6HYsmf
ofiFsPT5Gk/K4nWDPxsU6dJnhXwOlv/NJXusraoZqscDFdb5HFDt3EglzmwD
pXR0K8KJ95faJWnZPkWlqLcdnH6QVd3qkr1tp3j/EifDUQS2eP3QLied6fP4
do5qsgof4LC6J4oPls9clJOTdkq69Ml3e6fBRP+vKdlb7yUgtNNRqE9VnJLP
R8cMK9q+9f4Oa+K8dmEu9zsXeR+RnP7z/g7Cb+1Uj/k+7MqsK9njtkob6AjU
/RS3pLMXMsNEvIZpq3rcz42D2Gh+5fdkLjNGbkZrq3qsfTl0pL31JXt8sOuR
ZH/1+7hiB5+sOCad1bKHk2q/Rj3YUU52OU9ScP0aNbOP2CMnL94TSCSsreqt
bmdDyd62Ub2Z554lYuUJilvaOCwzs4iP8p7RzwcpuvtzA+GdNq5WZn/Yx373
+rCNkjLtndRG8dLGkj1urXq0wD4HC/B4hXU6g24fR4eMjtaw+yjMOffEOpq+
s1pHt05RKuqx9pj7Vske66zJixyHiwV4nOKY1o7nvE1wspPqjI5urXhH79O3
dtrP6+iTnaxkdLTHL44ZqqPnRXPBppK9PVD1ZrF9Dtafju6fzyl+qtMyGR3t
c8SKptO71we6WhkdfaqjXEZHt1LaTvtTam/OW0r2uKXq0VUOmsxSPdX7dM57
u5+e0dGkZJjNeqoet3SjmdHRAx0dMjqasMKMdqDqMZ+DVXRryR63UD26xtUW
evm9ZLE6WzhMMzp6iNM0Xke3VJQ7WsH1O8MZHT3EyYvX0S2VhLVUvdXtbC7Z
2+aK/6+1z2H9cpR6bp7U0edkdbRoWx1h8Cj13DxZ65xIR5NyLZSUaZ9o/X5L
yR4foPh/mRpPnyErPrHI6ejzk6N1gKrrd8tkLPKxroZnaSCz2wGqXnPVY+8t
LzxwW8keN1P8f73j8Eys69AaV6fxqcXIpDQ2U5QjnGDPNctJ/UhHtczM1ixF
cR0LMppFby/ZW38jQlYFK+yz2mOKuGV/p6P9TDImqW119C+b7xEyv78rndHo
Y5wezMxq+ytpaqZ6yvdhf+zOkj1tqnTojXV1dfHOjt6NSZ82Tsj1X3vl6Z2Y
tCfd+CQdtFeevq/S1PVY9rbuKtnjJq5HMk/epGp3VJzio0pm+HZKxN+0lJoo
yulo3U2SfDslx99NFOWaqt7qdu4u2Vt9X2214o726nm/pE6a4TRMxhJu7DDZ
EkXojp73S+qlGTn9tZ+SLn0zS7/fWrLH+lR/vRrPeLVl3jdO9m12kg6NVF0d
sbtxrm9zkjRopOrtp3rcWPHAtpI9juNdGvt5o5LZNqq1Rjne9R55GR5vpGS2
jcKqUY53L0/yuI7H2Vj1tpGS73tK9rah6s2muqCLzdfWiltqcrppflKHmXJG
F+so3T4+QEYnzU/qr4ZKmnR8T1Ii6O57S/ZUx6K81UGTWelANR7VyX4tzvWf
WIY59kBF/+pk365M0qGhkq6Gqsc6s8t9JXtcpXq0xdUWq6OFw1Qs/Kok316T
428fN0v2Igkn2G9VSb69Jsff1U6yZO7Q0QL5HPYu7y/Z20pF99sVVgeo3lYm
ddKyrP4S27JSYXKAoqREFFU71suy+gvVOSLBPqhSPa5SlH0g02NL5+rPP//8
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
KgizKPHwc+2XwxqyJXvylc5iFqyItd+9E/7lFk/Mvw6emykdNRsqPKtTeO8D
huBiGtOCYdi3OlBhUNxLi8nncvecWLNVRmMikwNQ4bxeNe3aB5asf1xGUQxZ
A6iKxIt+qcslZWU+LVXGN7bcU8ZZTyjyX5999mKPQ8nE3Kuqeql37z88/ngk
hfJNbEONU73tcVX8/u/+99Sl94edq7Cz62OyiU1QVCueMJtGFCz762NT0Jax
g2z5cixtb9r6jEcz6DsZjYovhfXPfvXbCUvuyez3yS4y+S9YKkW10immqByT
UXbCoxfytb7fK/cB3++//BYIEfAJe9it6uoyq8Q0lcq/IE4V7GXud83vdh+x
SHuE674GsmzucuJl2bn18R/8wpxViM3hqVWtnq0+aKR8wjIY1L1Lg+WGetoe
7DYhuOoqf7lvXz7/dutWv4Iu83SO9qMijCry7TEiLz2af2Yt3aLaXSTvBPuR
77kJ70ehzGMstNi5sJesvayGL7/t4d3uirAxgh1FnZn0xfAVX/Af/8v7Ip9h
59J7O2ewDXsp5fXQN1BOuIpo8mOxrKjn96qSmHJX5/mfvCOYhj3z1hlMDFRN
ky+KCU+8cr8LPtyz9dGn4pmsnPpLeWNnPPV4Ho21VIYL//T66x9s3syfYFnQ
P7vce4vjyXgzljnpljMSrr5hxmbGCBOCUMa+r/a7RtzyomagW7uNomZPqemn
jSdgKe2EsxO24w8VpZ0wq9OP0Pvf4smcgxFK2L8fGuhWztNsv5mVi5BsbcnM
Pei1rPfpp8+0auUPX8UWg+jybO2dpUt5A1f54pb7PX38M/dIeE8j2CHlaq+h
oaM/Z6cZ0Ulq5CN/lZNo8TtmW37PewbPcNgWz4Uzc4pQd6PqO6H49QcPZxgr
iDcmi/40G+zHeTL4Ph/oSvj7mPZkrPj77dtJNnzhiTCMVVLt5xMmLFZUI1Ru
7RuO8PehMmvtcEbImyheGtA8IQTf5sUOT/FZ5nvuQBne9pHfMy0Ee2G900ci
WeyDtx/QkL0ZG+Laz+CJV3mkPfyNdzkjD16W1lei7MeDB3+vaVNzTscdhz8+
/zyeQaHXRo0yvy50fRC/+nKnAyhW4fZPpg/BtvS3hcB4UAg5D/pF6pnwYePx
OEPgB3kn/HCyu869j/3JzQ6bnHnGFAL+UqrCUV7uaqQjjq6ypf7z/fffrK31
sI3eIoVAOkOh+YqXCRtQJaZFY6VJ/Imd9KCRGy25l+VvMgjXLFBcVeEkkMtQ
gc8NxgA/aCqeOgcPeH8WLjtRpNBRbpyklu+F3N1hXArtTc37paCC1CKFQLEf
tG/PQw9z7j1P8THXGzw6CuuRYFE2SuISdM4VSie1dKMrdnWVWheudiMgJ8g2
3qFE3gj3sex9uHr85tEjHnDjL75L5O7Adf7OlfSoSlkOLd17uQcz12GUiU/g
tajUDysDf6tVYlaMtj3QsdztXcjMXQo/gxB7jIrB/jLFEa0ch2VaDzss/maa
3C25zGEjdzJbO3iZ+sHKW+XwlPgidlcvxHqJb19m7uBYLV4O7oKkAXtIHWRP
YoiH0Wyt+J9z8KzlO+pZb7dSvZkT4eEjsJT5cwKpP3PZg7OWbw/ww95YfMfa
nChYF12JPhPuDrazfdGRV252PYS2ZQ+hfyWqlYpQUuP1Pi/FAHUvERhpDIVg
GjwhWjnMJDbJLPVMuH5lB6IDLaYzoIMRyGHW6YRLI8pUWeEoKJFX7C6ZRBgK
dwfZY61T6aGH6RfdxVSMCXmG4g7eS8U34GDoWRZJv/nqI9YDormV0kaNn44h
3sZpH6AW7nqEO28eHt6b+iudrIpdYGM/ShymJ7M5t3L68Cby8NKlfn01TXHH
oao3HZQsTVfY6+hwNyvsxlvsmLUlRDBIR0i3clj0/kn4MkWNZEeFXUelp6Yo
PdZRYXeTGzuxFmwkAYm2FaJJdMzpKStDxqYlZiAgozGGHNydFGY+h5vEzWJ5
2jym5U4Ks1VOwwoOdoUl2YyCJdkpp4MsNxQ/2rmTdiMWMRMcDcR26Kww43O4
jztBtaHjOd6oqGN7IjHZgg3XOdIf4YanXfGXQ4hokUCsjEVysWqxi8Kwi2px
nHruojBcqXpkPYAkw1egg62Vu3V7PbWAspnGRKNhMDxMYXiYej9W8beOd2qj
uYITbGx5id4XZMhHrsvcgOa59J/feou2yo/69DG2ykWKFl0VZl0VbUcrvaDj
zt7gJEisO2J4usKwq5PXzJ033gXGjP181660Pf720UcSGTmMxuEKw8PVuIxS
elnHAV4e6U+vgSTeY5gr8nkqryPOyrYYISNxhMKqWyTPxuN3hGtV5kcdRXqZ
a1+iT9hZImSGFF1/hJNXf1v1WocVbQasnI3NMFyNgsbuCDceYu3qmM06avd1
kVZ3GQwLEhE06HJbKxctgvsckAIeOUMujD/1MNXiUQrDI1WL56lnHU39WtUj
a1NIlNagz49Myixvysdz9DlqNLor7I5S7xnXONjWOrL9UsUN1jKRHAzBrj8q
KbdXW+zeWrSI2GHSOEvR4miFXXdFWx3PWGcZuEZJkI0eInF8wzqse1Jm7f5I
8d2VKzmTfbB5s8+oLLLeQ2HXw42J2LNDXOsy8+nMD1dH9Y0GsvarZHQI6+ge
OXldYn+J59jBCrOeCjM+h3XCYIWZzsBxldONca47oXb4tWdOZhnT4vfbt/s5
dpBrSeyMYxRmxzhOuSfOGBvsDp0JZYmijl3BSD6IQMljsvIqd/7tDkV5vHNk
ZrABqm4vhWEv16Kseanxwy5BL4XhYsVddsNB5CjQwefAztyNt3s0uTn2VEX3
YxWGxyqMTlMY6/w5VyrptGvgkGVCeIixOfU98wUOQ861r/Tvb+bafmpUjlMY
HqdGtb8adZ3TaJHSbnaVLZoyYHick9vMDXBGgNE7FyerUemtMOytJOIUJTG9
FYYLnCaSGcLuZITcFTLX2p2JTIyXK4izmmtPVCNyvMLueIXdSUrT6Fxf8yM9
aWZX+5yZC41ut7sOmXgs8xx2GFdiZ+bcE9Ro9FHY9XHjImsPvx8gq94TFHZX
KCpZWkpmhKDbT3AynInbwUhGeiehtxqNvgrDE1yLsnbT2d/6KgznKU6zcik5
KYLtcUJShi2GmTn3WDUaJyrsdHzb4xS2Jyrs5irsrLRYa9LYaycm5baWY11b
S6ygoo+JWglxhQNWJ6rx8PFPZa49SWF1ueNRmWutlhGbNdi4JyZl1mrxzGqb
c2WwO05W2PkoyGJ1cgYLdsjJCjtGYw6rMKulc2uEk3Pyyiyv/ngLKHZXdDhF
YcbnYKV3V3Q5RWF2mdONMv/YGU5WI2HddEpOVplx158eYWiPVC31U5j1c1pG
VjhHqpb7KcwuVdSxVoGs+FStnJxaOzBzStNNjUB/hR2fw8qwm6JAf4XdHFXe
WlOyvgw06J+VUfGbYoZSWOuZefYw1bNTFYanKnp0Vc+nKgxnK3pbazR4ogmn
nurkNROVh5nBodt4YijzbGfV4mkKw9NUD7oo6TtNYThL8epSi+E4xeG2Vi6W
DWMP6nm2oxqVAQrDAYoLXG6M0xVmM5V823Va8CsTnXW6k1d/Qm3XvOVYXXN+
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
7HWOF33kKHOjxpT/WbL8tVnelXMoU/71ZPml9fLTz5Plr3H8konpZ8r/Iln+
alc+k9fZlH8jWf6qevnlX5Ll7Wlsxm/flf9lsvxix185fnkzWf7KJL+8lSxr
PWKCD4bwy9vJsvYUPKMnTdl3kmUXJPnl18myV7jxp3riAYHt37vJ8vOy/BLp
ut8ky891/JLJf2nK/2uyvPWGyPh8u/LvJcvXZvkl0kfvJ8tf5vglk2XVlP8g
Wd56f4QzffHhNuX/LVl+TpZfIn3022T52Y5f/DmbKfu7ZFnrnRnO0WWC/32y
7CVJfvn3ZFlGJPRxxoVfPkqWnRHxFpnFlP1Dsuy0ennl42T5qY5X/Mz3idya
+o9k+SmuPHlF/IJN+f+VLD+5Xl75Y7L8JMcrGb9dU/5/J8tPdOXJK+KHa8p/
kiw/oV5e+TRZfrwtH0cPceX/r2T5cY63OK4SEvT/tmWZK5ZXV83XhqouV/Kb
N2+W86/mSX76s4XFrLivv/663CWrScEqHzZsWJ8+fRjZwkduCDOgpKmwYSt5
P7qc2IW78I2ScHnx0YcIoE9DJlaagfufFq69S16+detWdCzAbazgWs/m6vff
f7+2tpalAJ3XO9etW+d7mIvPaNr5a2inyBt5bIS3poEoug6MQYaqVKsNd+7c
iVZZh/1HnaqqqsGDB+Ox2nF8xtPetPtZaNeMRNOmTU3PeJMSPeHF+eeffx5t
A63KVNtlK1eulHqMRYB6wJ/3bk2vK+uVt79F1AW+/hatvY3Yo0cPro1DjISK
ZPscFPvVQfJhOMzN8wonvznb8/OIDxctWoRRQqOMaWAikMhtcN0qV6Rocp1b
fpoL8TpSCHFJWbB/D602JOuDtIxSsNly8/bt20FTkLGYbBnd4mV8dtS21MDd
yk7aNP9P1M8JEyaAi0w4BWKIipQvCJq5Ga0tedumGV28R4MgE68BAz3ehMcv
4A5lSptW/9/QquFg8CewdTxdDjx4gR6vhplIuqpde4+vknihFV5SBoMbHAnh
1J497680izlZmZo2/8u2addPJtIKOBBVyD0Sh0C3w9vKfrTx+eUttxwaW2F1
EUx0ArTnnV4A5/35HEzeHwaFBrsttl8uX35UobDEa0Dz+acAt5xXgPGVgT1k
N1ZBrGT0ATDMy/PmHVYojOcZgoPXIMArogzDTuCv5l/eWUVzjSsqDrZImV8d
FNuX3JzA+6axvec0l/kUk3WGujqZDOGuTnmyjr1hkVwnmE9Fso7llFxUV1en
MllnsKuTk07zqUrWOaNe+TKf6mQdzjWpdYP5NEzWsVotuXYwn5pkHca00OsH
82mcLM8bxt4m9EezLsa3Lm9vR4Z53B9Nuxjcury9pZSzDc2nabJ8P8crcXB/
3+f9k3VOyfFXzJPNknVOdvyVW1eYzwHJOvaWX2Zt4dai5tM8WUdF54zWo+bT
Ilmnr+Ov3BrDfFom6zC6VXyXM65zYLJOn5L81SpZx966y0Sgc+UPSpbvneVH
v6mYjXQcyh+X5a9ISx6cLG9vuRVVDgv7aZssz2idev1hPocky/fM8pbSd+2S
dXo43spEeXR12ifrHO3q5Nat5tMhWad7lreUvjs0Wecox1sZv1VXp2OyzpGu
Tm4Naz6dknWOyPJWtDYxn87JOva2VSayvSt/WLL84fXyVtdkeftrJlK8K394
srxtNRNZ0JXvlizfJctbUfkjkuU7Od7KrQLM58hkHR/hM2fBm89RyTqHZnkr
srvNp3uyjo/0mbOVzefoZB3L2RlL1613zadHsk67LG9Fa17z6ZmsYyU1FzvD
1TkmWadtlh+jta/59ErWOTjLXz4lRjaaaShvNVomOrgr3ztZnnkb4rvgrvzx
yfKt6+WvPsnyBzr+StpqJyTrtHR1kvzVN1mnRZa/lL47MVmnueOvpK12UrLO
Aa5O0lY7OVmnmeOv5Fx6SrKOtTJycRFcnX7JOk2z/BWtRMynf7JOE8dfOX13
WrK8tcgyMVBc+QHJ8o2z/OUPSV0EQF3e7o8kbbWByfINHa94loz5a1CyTnWO
v+K1wBnJOlWOv5K22uBkHe416Ngfro5dKUjGeGZonz546Ogjj140aeqjjz5q
/GeLJXmNMc3sCdH+KD123CTmpl++4f4Vm3ZcteqOGXOvGzZizI2rbv7LX8yO
VH3zrV0ZyfngjoceHjF6ovHAtV61lYtXbBk5evzuBx9MWnSMyMXTt9Vr18+c
u9T4QFc7H/wRoybe3LSpsugYn4n+wC+//PL46bXBc/jOR186/9wLzH0HV5pR
k+jRjN9Hj5tsvPIbJ/yxA2yWDp75KS/3gD1LDxt+IQCH0otuuHXVzWvypdOe
41nfaV06eGJrj/VU6ffee2/4qPH7Who0GXLO8Pq83XUvJ06Zvvau74Zezl6w
4v4HHqivNHhh9vzlwUM8e3dBjyUIADIEL/HaxTduu+e+/Oj8yFFw+MiLDbfU
JG4zhJEnb73wwgvgSpQhb5WBK8dOmAIYvjTjW1keLkIWAGvu1avBTuXWJxs0
xPB7QbAf+qFZ6WlIR+4hZw/DOI2bWgsZGjVuOkQHhCfP2E/kA1yOMd2zZ8+W
hQvfeOMN5+luPnHcKOqKmAJx5CdmvI2lKX5LHRKvOuO3FGOYmt5jz/kuM25D
1nf584B3EXYR9Sp0wH+X73Ip3+G/RTT1NssT9CZ3ucNL+dj+T/AZ3lfP27iv
Po9hPFMk/Fq/lB/rV/BzJY70cQu+OPTa8aZBzs817Uf6NWO9F7/SzyLMvYe+
YB68XLRfqfbd/FK+ml/BlzOmt1/j5fK4aV9O7RH5NXlAfq3eknHPgrcTexay
uRd9C6W8ECtY9OvxmPyCHonsh+Tg9Z7f9HdSWcpLevx9LR6J++j593mEs185
Cs4h87b0NeNz6f0txKsvewPHfIZFpYMXLEsHD8hsafq8BX9O7fGbKh08Flk6
eCymSgdvRPrTBT9oVzqyECLNRi+44L2bKh18CFk6+KGmSgcvwap68I5KN/SS
AWJgpF4bORLf312xAhKCV9RewbPSQYhsoyJXB++uXIllRoNoDM2swmesIbES
NNZClnK0rf6ePSOMahfV+2zreq3j3uatmG/efvP2m7ffvP3/79sX7FumbDFf
tddLqjTTSRjfkX0oXWQEelbQfi2J8uXepUTa0Kfq2TrMYLDZWV0+a4qJTV26
Nabkpr9FXNn7l9CjqKB9QxJQGjHfTZ11qGnatClpyYDatbW1aAC/6Dko0Q8T
nR1ItGrVat26dfS96NGjB5NOoIsmi0ZpKPSdQCdAPl8TsEJc99I1gelm+wEK
+B7neSlds5zuEp6IOb+KRJ0i+jPYfiZMmFB6lHerMSld+n+mpH3z9pu337z9
5u03b795+83b+t5yD/m999575Nxzv1UoPLN8eXxmxjMIRpx54omnRowaO3zU
+JGjJ104cvzIsVOGnDP80tp5b7/9ti/Pcw2enQDO/IWLZ9Redcv9z/DsZMWm
HReOmXL7nXd9/vnnrka8f/Dqq6+OuGjc8g33y9nM3KtXj580LX82w3MfwEdp
E12spp6Ts3Oi0iGSFc+UZs9fvuOhh+PS8YnfU7t2TbtsSea8avjIi2NM4tL7
ehbmI2ENGnJOfbGgdGkd7ar0Gd4XOx/UZ4/oBLqSL81eDjl7GIi993NNll52
/YqrVt0RSk+YMW/37t31lQ5neKkIUoHeHMsQvywVJSqMPLlqyVVLwUimYLU7
GQYy3/7OTsVV3APzkes2bNtV6caHIet8+Wi3sAiKT552yeRZC5eu3mqOTAvF
+ddtHDVuOoYUDOpqxPuiGP/nnnvuqmuutUxZKFu/YWMUd8t8KEV10afTPv9i
zfXoFM9mWlGneLyt86vw5r/1zK7UGd4fk5jZldn/4JO5r+NEL9tzObtzp1P/
sNOvL3qmRyzfDLWiM7v/Ziz3cob3vxQ9+/4PomdfRU+LZVV0VJQ5DvuHnr19
red09fSm7h922vaVT+SIsdWZlT4GiEP56ztb+5Jnb9TTddFn3+eBwj/9H91M
ju0=\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{{7, 1}, {8}, {6, 2}, {5, 3}, {4, 4}, {6, 1, 1}, {5, 2, 1}, {4, 
         3, 1}, {4, 2, 2}, {3, 3, 2}, {5, 1, 1, 1}, {4, 2, 1, 1}, {3, 3, 1, 
         1}, {3, 2, 2, 1}, {4, 1, 1, 1, 1}, {3, 2, 1, 1, 1}, {2, 2, 2, 2}, {2,
          2, 2, 1, 1}, {3, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}, {2, 1, 1, 1, 1,
          1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 
         2}, {6, 1}, {7, 1}, {8, 1}, {6, 3}, {7, 3}, {9, 3}, {10, 3}, {11, 
         6}, {12, 6}, {13, 6}, {7, 4}, {8, 4}, {10, 4}, {11, 7}, {12, 7}, {14,
          7}, {15, 11}, {16, 11}, {8, 5}, {9, 5}, {12, 8}, {13, 8}, {14, 8}, {
         12, 9}, {14, 9}, {17, 9}, {15, 12}, {16, 12}, {18, 12}, {19, 15}, {
         20, 15}, {13, 10}, {14, 10}, {16, 13}, {16, 14}, {18, 14}, {19, 
         16}, {20, 16}, {21, 19}, {18, 17}, {20, 18}, {21, 20}, {22, 21}}, 
         Null}, {AspectRatio -> GoldenRatio, 
         EdgeLabels -> {DirectedEdge[{4, 1, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {6, 2}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {5, 3}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {3, 3, 2}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {4, 4}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 4}, {8}] -> Placed[
             Rotate[35, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {6, 2}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {7, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 1, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[2520, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 2}, {4, 2, 2}] -> Placed[
             Rotate[630, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[1120, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {7, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {5, 3}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{7, 1}, {8}] -> Placed[
             Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
           Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 3}, {8}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {5, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {5, 3}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {6, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {3, 3, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {7, 1}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {6, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 2, 2}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 2}, {8}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {4, 4}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}]}, 
         GraphHighlight -> {
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}]}, 
         GraphHighlightStyle -> {"Thick"}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         ImageSize -> 800, VertexLabels -> {"Name"}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
          0.03178333455671099], {
           ArrowBox[{{0., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["8",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["35",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1120",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {0., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 3.6983634028569026`}, {2., 2.773772552142677}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["630",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 3.6983634028569026`}, {2., 2.773772552142677}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["2520",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {3., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.6229542535711285`}, {2., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 5.547545104285354}, {0., 4.6229542535711285`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 5.547545104285354}, {1., 4.6229542535711285`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 6.47213595499958}, {0., 5.547545104285354}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 6.009840529642467}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.9245908507142256}, 0.050853335290737586], 
           InsetBox[
            RowBox[{"{", 
             RowBox[{"7", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.050853335290737586],
            InsetBox[
            RowBox[{"{", "8", "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.050853335290737586}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "3"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "4"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "3", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {0.050853335290737586, 4.673807588861866}],
             ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {1.0508533352907377, 4.673807588861866}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 5.547545104285354}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
              "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 5.5983984395760915}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 6.47213595499958}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
              ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 6.522989290290317}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->800,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzkvXe8ltWVP/rOOe/7nkYTEQ8iVZr0Lhw6SJcm0uHQDwekF0FAmoj0ZqEK
ggi2qFjAWKLRMVhiTMwk6jCjyXUyxhsnTnH0mrn3c+5377X22s9ez8NJfr/7
5+VjTt73ffZee/W19np2GTFzZfncRTNXzp89s+Hg5TOXls+fvaLhoCXL8VPu
36VSuY1SqfTF4hQ+V6RS9L/ovyb4X/jT/19/aW++5V66dGnL1m3DRoxO5fTp
PzCVO3Dw8PUbNl28eDH1p6B1W/Mt8+23327fsat07tL1O44df+qtVM4jL/w8
lTn57KWNu0/OXbS2fMGiL774IvVV0LONHeejjz6aMHn62m2HU/mmT+7Owz8a
N3nmj55+JvXHoHVr2xpQ8PTwYz9JFdrWGAGDvvHGG6kvE1pjWIAzDYtsa/Sb
XDr7z3/+c+pfg9atbOvHHn9i4aq7TcOqtvWGnQ9t3nKPefSHoHVL2/qHH34Y
OWacobW6bT1izISvvrIE/ktCa1A5sXSeaUit5y3dcP78+Su1fvXVV2ffvtq3
XrX54P4DB6/U+uzZswtW3eNbr7nnwR279lypNSQIgfytsD/44IMps27/W/EG
T4YMHwWZcOvR46ZAYPHWLazOfP3v3376+R9feOPXO/c9sHTt9lQ12+fuA2dW
rV4b53pj2+c//us79Pnx3//20Rfe2/PwqxDx5rOp9GvvfIKhb1+8DNKuYqFA
LuMmlcYlfb35llVQFt3zeNbAyVu248nf/NO/UksgftukGYGmzZi34sJLLylN
q20hfvf9XwAReAjEIgOxYNMDL3z5p/+glh9+/MXhx9/8xYe/hA6CStL3zIGH
L5C+oyf6K3yvtnx98+eXARTYpWoYqFXwBQPiEcbc8dDL+I3QBr3g3YzyFbC6
tIFeAIZAZNNnlZEcQDhQW3fg/Pv/8HslExoJYLcevmAGqW45C6RoGAyZY34B
Z/+eOqRyzJ+CN998E34BLgL/9e5r/sLqoCMQSCrXygxUoSf+A2Tgmfo/gnFr
uXExgiXOjgssQfQXf/wGHLMyzr1jzzPA3jLb9oD2/OyX/2w+5tkfCW36D6A+
++JPvwvGucb2+sv//N88TqGFCp6+/eE/Y5BUxn4nkH4UfD91/h0ZJRcY0RCk
ebnoSfJN/XNcKwxV4LVpmG9brz94/sHH3zQfaTSgwqMRdEBDe/Mx335/4qUP
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
nl2uU9bZQrDyzq7giq0dIoyp+kuzcMLY12UIY8l2km03P5J3Gd9Q4vKqQkZX
LCDIsXx1JE/ZWfL5hsoOo6O6EGzFmk9PI79ExUlaRbMw+IZ5m+2cPKN0lzCg
AqXXqiTvHURq+Z5HOHCSqVWqwOmOvIQe5+QTrL+s6fg0h05a1KfcEpZSiEvp
Gp739fHMS2Ti8xnB03101OQnYjfO2UWwhoxwvvDTf8A03OPscSKvgV5cM0on
2Wt0PsQhsEBjqZXKr8p/9Pn3jLfMJHoKfy5lbpL1RWTo45D1jYR5nnwPfERU
q8CO0+ffNXN7Xc8qdLSXq3OBo3qdS5H51YSonI3ZE4VisuPo+ooxiV6ATmvG
eOcuvO/H96dREn7+lOTEMzLTckYmPmjf5C3TZQ6WVQGeUZ9JeOq1g1c7ScI4
zjz/LkvSV/gIT5/j6LM+FZ4XxIemAq+fJ3NA0nZC0u/GADePP/02j+7rfzS6
zONj55tGpej1SDI5nnvInOFCtDpkzwNKywo+cIWg+2ofjY4sIRgd+R8/T96J
cIvjc5Bx1HJ2Tfst8M2cpS12wVVherfga+Wi1dERgwzZrneMreKs5fwFrd7D
N1NJl1Nyv4ucNBrJKmg0X8m7z1FCa/z+Yo+9Zije0pLPVfXVO3prdt7pGa9x
zHGwZV5mamVVndUwLNIHXylr6XoFc54hjgfBbOIap1t8wg6NKLlxefQsVB91
acTv5JTOlomw7YjBelc6bdPvyaXRJL8tpxoCjeajrdYoWo1NK4zltO6MZFzl
NMsnKDKjjmkJcVyqHLwSlNarEaVUkdPYEO3+fGh7ll4s1785poNy0imvoU5H
4Bq9kzNSOA7p82ZbJ1oMjRNdyy0njvJabqrbySwbdFZ1LcqjZ7x6/aHV+371
JkGQGS8oTD4b1+sDrQ18RlGcifgpUx2s6uQYQPGW1dbZp0R5gw0dvBD12cWK
YhqHZqTmu+yqD8bxttfWSZDyBpZgH+eLggy1WPEm42yRCsQ8lvfFWaUt+xwu
vAo94yyLlI37+9mD1gLi7NMROzK6nnXf+b0UQfFnS2eVBbV3tAUrh3u4X4Os
qk7E2sw8g8ZCez7biMbydwvoE4PbR6ToZys93K9BrlbHweb1tvJ+kffL0Vje
i2qN2eva87r8rOMDn1as/ZjWBOLuj5Q+SZ2KW9FbdDkDm2cLPt7SvsXo+u6b
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
Q5FziLKAopkKt0GJnvp6RdEghQXtNYm+3dcrba5P9G9NFW7zFDXXJ/o32WnL
UX1eQNEMhdvAmO9toKgZqGQ+0Pk3WX3RQFFTP9G/0aot/2a3XFFTP9HPUS8f
ccsDaqZHqDG4xffBNFLU3Kx4OsBZbbA6Rq9Uaxj6OG7VQHF6vqKoYeifmA/U
y8fL+QFFpQ4/Xr/ZP9EH36CoGqAw6e94GazH0acF3BCT5PUKtwWKosaJvv56
14pj5oKAomkON17p2C/R/+od9/2V3PuFPo5XYej99U1jlkbrnPz7xtsVRU1j
fp56+Nh5e0DNVEVN30Qfp/en91N87Zvo4/RO9OaJra5R3F6oKGoe8/MU23zc
XBhQNMXhxms3+yT6OL2Tm941+fWRfWKc1yumb0yUIOVG/u3IIkXNjYl+nnr5
N0aLAoomK9zkLBLxcXqvcR83Kq+PlFNFxDL0avZWiRZW3XGa3wIsVtS0SvTz
1Mu/G1kcUDNJ4dYr5uP0rtzeDgsetWeij9M7DtoktpK3nszpJYqiNs4/JezI
828PlgYUTVT4xU+/Mz5O72XtpWSuzrFjCeh9uO1jkpQ3QlyzX6Yoapfo46iX
r8EvCyiaoHArSdQOvZdV73MpSdQOvXM1vlYw4yjiGvhyRVHHmI+Tm524ar08
oGa8wqt7ouXq3Z+yb4hlXpJouXqfp/2esE/PvxNaoaiR0+nUjjwfM1cE1Nym
8Oqe6FX1HsnuSt7dY6Pq3WwWgt+jd+7Cz3ccNynGSoU/tRO+QNa7TryCbisD
rMeq8bvFpK534XVTMu0Wk3p3hTGtbPz8D1/P33Ju4T2Ps5ZqflOrjy7/Ye6G
M0vufZK1MuTxrWrs+M4+vYdNdnGyzLomWl0PhbHtlS+Fc+UytCVTa4lsylWE
FjxG4dMl0RvqHV+kNT4b6JLoDXslaUpk1ZXs1BOPrr0s9fARLTcRuyUBRaMV
bp0TfVIfRVGXxF7aJ/VRFFEvvzqJduxFI66O67IjkqNaXkxjwpg+SuGVfCKl
3h/V2eHFnE4+b7Kfokb2jzO37fqUWEakc2Pq5atRhTGLDTPJkQq3jol+Se8m
orqKz2c7xvzSzYoa6uHz2aqOc0HGqmdjduc/MvRqiViFs7ARCqcOMcr1DpWO
isMdYr5qkKKCevgctobT5mAWoef71MtXoWokak04579F4dY+ghtppt7P0UFJ
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
kby2yj5dGgko/LWRbEWG3zyJ78B/Zm6X59vufx15fJZV546W9aZN3PTo0Hn3
D5i1H8hYP5svfvPrf3+6X4tl893CligUg8FCJ3syWvZzoJJ1sVak/XOw0GDU
DY/ePOfgoDkHQTyNSmZVYTLhJ3o3XzzfFeeTR/V2Lr4/0AVqf/qdT4JRJ1mO
0ELULLcDRy3cAjXOLMfJ4E0BZdaSlwJ70NB7+t4Za0+zDCnEmGb05kM8DtQx
X41xJRwqxSlYzWOzvTxy/PgPMoQk+8/cN2v9I4wPZeAeH/FYkNr/V3yqRXRO
PDX+M++U6J2stIWlTRraNJWTwr96xUP32YZeJqMXHS6Zsmug1Yfyzfs2d5nB
8rRjfxi7e8DALSlzbRw+tAae/KVkWpHIWyvECawY1jlFOBUonOZtevSWBQ8C
p84tU6m0aVHD8sCg817oOK6EjqzjZ99YqOL2NSE2UGHBJpPqfEcUG8qACiCy
x2ak+B8P52STy/7BPbZw0vYZDzDDea89wYkmWbB2xtpTg8vuA7UwSgSBfJfB
cHZLNxtReC+3ibKcJRDRBpp5OIQ8anQGt8csRDzD7i5JnoRxdD0eYQyGQk+A
KzCG80JczHc5DfseemdIxQz8hwda16+EbSV8/OstGHjULiSvIpMTu7hQZpt+
9+ycVPe7OGOGhbSc6nO07IQVx3tO3Q0iB8/deEeHqReYW0XhaqkPQ86Zz7y3
hSwB4qIZg5lPsyVcE2LxH0/PKh5+IBmLzNglR0umrG5UK1Vv2P0mmlgvURS+
1/voijj4+EA4+LmlwuGLszNggx4HMkjORMqnDsB3Mn9oCpjtfBW+GY1i/fej
23XQwUoH28PMjJdtfxI8xX/Dyu+HnVME8fPTfId3eXQ242cTGfGKEU3KFU0i
/kQ1q4Iwzk/WdIut3dMYW0tLqzzMxvZ1pwnjkQsPsR/xXo3wRfsAX4mnfxu+
EU4WVFTOWdJuWbHNs54cZ4E8appBG9qJXHy69dDvqR3JU+SbQVLfa9qenlPX
TG4++rnoGqBNDxwb32zEMVehNFiTv5untEvmrOyzrvFUmPH5DHk/37cIUHaQ
RtiEnbVtlkoNvz/fScK+0z08pcWY01Kx0qP7LERmuOx/kkeXXIDUmyJ0mvLC
iI5Y32J5Fht3coCdWzNE3IKeLNhyDkoCgyUdgdtkaZBMdfXEz+DTFS4WRaRF
cS9X1Jg1jTBlZXZUWs1IxlavByVs4cyn3GHYDidXqLyTrO8KsPX1gb8N26zi
ZUFF5bytGtFryfG59iAlexq7QIIBgaN5CTlOfvcAqT77k1+uP3iEeVPgrH9V
hylzeCvvW/wsmrcYb12g6K0djkmDltraSTAmeHz+9V/de+zHpkXZBT/mkraT
Svnq8neCMXX27r1cbRa4d2PQutu6Gx5Dde0MK0NZBEVCMwcpdJ7PxXhWDLsv
PrYSRNZL/vjtj817qQKXH3HVhdYS+hpwjtLpjMbQjWt/8NIm3IQXgfclXgh+
wXnAhB++/OSdTyAuP79hD0P46Sqa1+LK8St02hfVzgTeRb2tr16QVlI5LLSI
MspDSsrKyigzyXW5pMsqQNFf/ueT/fsvfPf9b2mMPEbgMn6Uge0049yQnnOf
QDa/0Gko57JZN8Pm8a9lWnl8S2NJJ8qPOt9hfXw+JCtTdkqbaaRs0uj2HdKp
Eb3nP+d2chgb5Pk/je5rw9eKH6IIl+M8jEmgUwOGbT4rNTmuebHtO3bzmmCn
Gw6OPaHiCnfSIt5yvS2rfClJVnJPlpWbKLCsorxyCUJULwSzRO5wJ4VlsAul
hvNjXJXLKp9C9oGWHL9zHYeU9iZjSbYh2PAMQfMvqrsye+CR/DzZeVQ3kjMB
EIIJkfFuVCEo2/To2v3nef7H6bdpaONJUfQXwnZz6b074/uqES9XU11Sqrxc
0SsWD8EUc6Az1cisi9RGjBbBHOdfmAPZK2Bx15StW+L7tCGXFbt+5LHwVcDi
K3Dj8OO7SJV5Ljhnw5mtRy6adMO7DKUz/oF8dJKhWxh0dYNqpG9+cHnZjqc8
br66WOg0P+pPcqngKZLUdphLPDE+OK9C+Tj+RPctxnlHYAhXvSeJcH36lV8u
ufcJj4uvehOuuupNU+//LVz541/nLWk9ZYB+FpFOsq80ZTDksdlb99ocjSf5
VK2irSXR4azFVfGjV1x2iYy+E9TmqmnZBSN1Tl8/rRPickEiR6p5jyUeF5O/
ug0rmPClXCuXIBDPknFS7olwot0V//39D1B/wsnXWq+EU+vpj0f5YzJ62Q5j
hEetRIcifqzETdgNRoyZPbU0fiN8mnZx0JtawszXZmVnRCBZX2ej+ZZgzpql
sua01A+AKsf+GN8Iu+jeNdIqWqFkMn/tw2Q3SYCbzxP+Gm48d9XcIq2/Iher
RzTezzEyyuK09yD50XO/H4yqAnrOQHtuRdAVNkHgSOL9kz2Po1BsvtyWqihg
yEYrgq93oBJ82R+Db+AZw/c+heBH3xlLtVvMy0IK6g42/mVkJw3+mYhCsP2b
EpKczybF9/LzOx1c2flHcGUHRIUtaDJcb9sEV5YQMFwffbtGZOdzbf3Ojm73
Abb0HIRRVcDvTCRsdAVjptMJ3uFF9xELNpAKnQgkVWmztq2CPSfvYKztNCLY
ITjTWeGp6B1xUo8gwfN5Q/JmGgQRdL/TcYbrF9w5QBml3ysk999Fxc470XwO
RTmWLM7y+0IDzKVywrsviCdiF8CrquNAIA3EDtbzqMx8nplROTnJTN6iwyzS
Dl/eGxu/eYROyvJ72KgHrerBXz6NSlawgFVRmOa9afxEytKIz/IwSdfMDhaC
Se+sSGxyexif7zHN8THY7XSt4yPvbcpELMhQR1z0GYDOgFckeoJrHT28+ynj
7IfXLsl+ygCqnzdH1oFFfJ28PWYJVnG4sSZFzxY3tFD0i77pmeL0nffjZdwI
VHTiPYGQHL9Vzyg66jhZSyyZ4nQ8uoPKRGCaYjNEDMerJuQ+MpYKVXf0To3i
CCXmXW7W4UUTY+afeJLYXG6ZgxrMZoqVlmUdblROZqj+bbyek0Wl4iN3npKd
7GLl7yIV3mtFJ8bo/ecTlK/Icx6GoTS9ElS2f4Kq89vxqpXs5OPqSFP3nd9x
y+21fG4RzQr17qE6qpVd2QKxVXNaHvDPV3OXJOJYx2kEe2rCEQiylldVHkpX
DaJS0etPvOxqO41h/sq5PcG++bHKG/RQ2n1dol7p89/lhC7W3tucHQZ7i6NW
cK37ztjTmyhffZczJcTu5Bwi3ud1rfIVecpXEJfkdAuONfmKl9c63ebdpXJm
U5BHjVb06dse6jreBj5xtLK+norX9symYG+YPkGK7Bc2FHDJ+2I7Kw6ihj5N
qljZbr6y3eh6Z+/zqWbnay/6HBu620lnLSOUlfRRvL3e8TaI6yMczZzJ9nEa
yOfG3OLGCvbRyllgfHoA2ZT3ZHpVwbzEses5H8N73Osom9JrASLcKhBfXG7X
BqHRnLsewV+zToiyST/D16caycltlEEAATnfmiXfT3G8fihpsHuY8xp8moY9
XQ76N8xRGkT9+s5aoudeGV3kles0q4C5PnD2p3cfMnsc/BpUP/ue6/Q8OKOh
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
2jupsZKlbTkpbqgoWkLP3gK8WGEdz6Db0/IhoaN12z0V5jz3hDqafWe1jm4Y
41RAsfaY+3pOinXW5GVWwsUC7K4kpqGVOWcTXG5HdUJHN1Syo/fpG1rt53T0
5XasJHS0wy+MGaqj5wVzwfac1NZX1CynZ2/96ej+6ZziV1gtk9DRLkesaDq9
e13f1kro6Css5xI6uoHSdtqfUntz7shJcT1F0UrbmsxSndX7eM572k9P6Gjm
pJ/NOiuK69neTOjoAZYPCR3NbfkZrb6imJ+9VXR/TorrKopW2drCL7eXLFZn
XYtpQkcPtprG6eh6inMdVbtuZzihowfb8eJ0dD01wuopajWcnTmpraPk/3Z6
9uuX9uq5TlRHD0vqaNG2OsJge/VcJ1prWKCjmXN11SjTPtH6/a6cFNdW8r9G
9afLkBWeWKR09PXR3qqt6rrdMumLdKyrEUkeyOxWW9Wroyh23vIiAw/kpLiW
kv87rYQnYl17aLw6DU8tRkdHYy3FOW7H23O1UqN+tOVaYmarFeO4jgUZzKK7
c1LrbkTIqmAdPas9pkBazrE62s0k46PaVkf/onyPGPPn2NIJjT7e6sHErHaO
Gk21FKX83u+PPZST0ppKh95dUVER7uzo3Zj4aWNZin7tlad3YuKedJOifNBe
efq+Sk1Lsext7clJcQ1LkcyT96ja5ytJcVElE3I7LZBvtpRqKM7paN01onI7
LSXfNRTnaipqNZyHc1Kr76vdp6SjmXquHtVJs6yGSVjC1Swmu4II3cFz9ahe
mpXSX9XV6NI3s/T7vTkp1qf6W1R/hqst875alLZ5UT6Uqro6Yne1FG3zozwo
VfWqK4qrKRnYl5PiMN6lsZ+3qTHbWEErTcmu88hLyHipGrONFValKdldEJVx
HY+zmqK2VI3vR3JSW1VRs73C62LztaGSlpKUbloc1WGmnNHFOkq3iw+Q0EmL
o/qrqhpNOr4nc8Lr7v05KdWxKO+3rcmsVF/1R3GUruUp+hlLP8fWV/wvjtJ2
a5QPVdXoqqoo1pldHs1JcZGiaJetLVZHXYupWPhFUbldlZJvFzdL9iK5HW+/
FUXldlVKvovtyJK5Q0cL5Ge/d3kgJ7WFiu+7FVa1FbWFUZ20Jqm/xLYsVJjU
VpyUiKJqx3pNUn+hOveItw+KFMVFirOPJSgmPhd/+umnL7300spVt8+aM799
l174u+bOdSdOnMDvEs/Aj4iHLM2ylqD3RX/5y1+OHTu2eOnyydNm9rlywE3l
izbcu/HkyZP5lirZPXUefYnVwDrLt0eiHtZSlyH94Q9/ePbZZwFgwsQpA64a
gi9btm5788033R12GXtpn+n1yX7QvtdSj6F8/PHHBx57DI0PHjby0iuuwped
ux44ffp0vpUv4e6jVPrDDz/EaxS6cuCwfoOuxRdUxo+0e8N2fMk777wzacqM
qXOXrr5v7z27vvHo8z/G35UbHiybtQi/4634bfqR+LAda7JGpfclp06dGj1u
0vT5y9duPbBpz7fQzrrth5bddf/E6eXoNwCVdrxk5SdlBqTea0dlYjWbr6SZ
4b3w4osjx06cWb4KYLbuO7r3mZP4sviObWMmzkR3ozcEnpdAhheuZu+Njgsn
GyLxDO/QE0+OGH3jvCXrAGbHgRceevoVfFlw26YRYybdveFeyJnA8zsB+6l1
yOruh/YMHzkeZVEjU2XXoe9l8vENTeFXvDPSTJ6hsmbhGqPGTwNZheBjpgBf
8Igf3TLJzOuZAu6Dd0//GhiMnzIXLXN59ODIcZO/8c3DbnhlUxpps9XVib0S
KlfAvP63D34FTk6ftwy0Urv56Frw/OWXXxZf8qzV7Ikdkc1R3cots45679/e
h0zMW7wWvcYtL1+3C9KD4cJbRyy/eSybC2+7L1NkSuXhG54h7rwjJysYEH/T
svWmQFUqNX/ZOsiAkbD9dsYffP2NgCDvAXTq/OXzl66vxCdnu5333L4Z3wz4
ze/+MGDoaPBA2gFbxpTNu3vbPu+Pk9gL+3p0VuW2fv7u+4OGjUE/SVvouuGj
pzz61FGhHONl9PjJ6Hd5j2/jy2aYUUS7yLKSefXVVyfNLDcFSqkUZADD0Lx6
hN5DAuYsut28KjF/ikD52InTwT81RdNsWRjui+KH7ffvXHz7Fm65CLSi5zGq
1BYn1wxtBPywYuXqNZseEZwwVsZOKDMyzr2Bjmc1wzjl4QE/mVe07yirFkAa
N3GqGSrVLH8gH2aU7bP8gYSDHn6fD41z3aiyRfc8JTMwzQZyFjp96baRE6ZX
txJ8w/gZfj/6oWDGn7JgHdQglctbunb7pi3mgEHgYfRDXM0rxgcP+Mm86hJg
DWWLUW4KcCsY4lC45tVeeo+ZDFrWv588Z8m3v/OCfz9h0jRWnfIeaGNI+PcD
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
n0UZDzfXfj6soTAxrfvV9muUQsdjzWaul99vU+6rUH5te3amtNysqvAsjuF9
FhhCinmDR/jq97DqKwyyZ4AYfc63z5G1W2HQJzI5ABWe14tm3P7Yii3PSi+K
KWsaKmLmBb9UpBK0cm4tVcYBW+s4Y60nFKEDhjtYiFmCiqfd9ujKbd8yQuYH
ouW+2Icar0ph8gr5/V/97+mrD/idLL/T62K0iV3AO2e82+FkWI+8vL89M42n
AS6fj2XuPXtfcHh6nSc9UvAZseboD3//4x9/OGTIt2vUkF1Fv6vMMggdLTLM
e61/eiNhrWhOJ/jIO+PBC/la2e+FZ8Hl77z6NhiR2FWVHZkGFRWJtWKcS/mf
EacCpjL1u5Z52lfMsk3Cq78qsnhufenNyfn12e/+zJxdiN3huFWsnkknlCof
sQQGFe+x0XJXJbB5iedg52P8YSCxBeDW0XmOz8HeVIBRQRoeR+hlD+efkLWb
tZaztMSygxGQ2Ctm91vXC3kOY+HF4aVdZf1FYzT/gSdP2CvDxhC2HLWm0lnj
y/dcoK1ZIb962WUs6+9RpmWP7y/37k3I+r9v3hziG+Gw553IFSPKH8KzoJLf
i3LxVnZ3jv/oXdElfhe9YQIT06rmymfFhM/AUr8LPryL6+JRJeSJNZjyz074
7rlbHGG9LC+H2JN9NaHsfMfxZHwb8+zYlhMTXn/DkE3IE6YE4Qq9L3ZnGbzt
xXqBndzZK7wA2oz3xyEJkAcYlHnqLIUh/bSsLCEJfmZnv0Lnj4sncy6Wp/bz
h3iu5fPpNmMFjFMRk8meTNyLpvOjfHcKx9vLPjOacJvv4yrP3Hx3doZ/Zt+b
b234UxuWJz4ScZJv+M9z06zgXDXwmF9Bww26n89iftCz598p++lHhw9n8tS5
DHMQtk6Cg5hXhMPbFP2Mt1uH8IENxw/iW5RZd8INkeG50vtD17cl3B1NOi3L
utM8fMkqiMsV5/g9b/SjiL8hlVhx+1NDvpviRgOAcwve25lvXYAnzIYfDhoE
4m2MaxJArG0EjjuTkROu39s0f+Lf4XucT7udHQFwdGPWx7vHj95nW+X+kbNz
731JPhRGZrE4dB7hgWf9MvWcb3UADy1/HyjBJW9huvtDED4ohJRP/VLC6uNj
x3gfDJa04RFz8u1ly/iIQ6C8u3p1gkf+xHezldTQzzwPDOOFbCbkEKiQUgVW
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
9SG39pe//AWtbdy6c8Ks5S+99NLp06flfouak3crujlTyR/+8IdTp06tqFt3
MTTMk09++OGH+i7Oh0TJCTWeyfO1KmBv2rK138DBYybOnLXwjjmL75o+f/mo
8dOGjxj1wosv5qle+3pUBxh4Zl3JN+aAz8pVtw8cPAwtVkF7mezUuUtHjJk0
cswE4Mme6m4HXfy+HlKSyS2BlJvKFw0eNmL8lLncUtmsRcNHjp88bSY4nqf0
yK+ISnIFLnA6FRBHj5u0dO32gkef/3GmcNeh702ft2zx0uVA0vf0zpTu4H5x
KzpwYuTYiavv20utFO048AIwunvDvb97661w0t9LtZw0H3riyZHjJq/bfohh
b9rzLfB190N7IDxeN/+asP6B1REzF92JpoFmsamTXbv1wPAbxi/dsB/I7k7p
kazFe+LMxSDroadfoVr5y9ftumHA1QfcbE87llkgNWbi7HmL1+595iS3vvC2
+0aOm7J1/wtg1G88HnkQwFHjp6JYpsSUy9u67+j4SVOBNvdTkdIY+A1sHjt5
TimVBsHTr7vBwOW9yCNHj06/aYV5xa0Bu7vuJtXzG99jeWh9+qx54FGmGpUC
bmCVeUV/CpwOePrbPxo1diI4xOVm3LwCAEwR3jX++OOPR4y+0eDO78FNIGde
/TqAhq4BI0yB6lQK4gmizauHrcTPLF+xZM3X5T3au3bEGAiNQIEEoWvMK4YC
dEaMGmc4FEKZMHEKWOehlK+496E9D3soKD/supHotkwNeo+Rxxcq5D3gQfjN
qxqKll8FI1qXumfXN2bNme9bwVCB3Pn3Kzc8uObOdf79iRMnMKz8+5tuvedh
vjkdQgF7wCRfCmMAA9q3cvLkyYnTy/17SAHGrn//7LPPzixf5d8vu+v+Dfdu
1FA0rhqKxlVDgUaGEjsTFMjI0OtGV84xKGPorso5Bh0NlVY5x7j3gTjQ972/
+I5tW7ZuS/T+oCHXGknlVubcsubJp57y7zWWIBzkayhQ3tBuHoqXkb1KUvk9
1CfUqn/vZbSalfRrht+AWSEhyXiGGoWUS6lV9+y5Y81dlY86P3r3qX7VozbQ
fwHfS+yoGjdxqhl1rEmghqHm/HsgPmnKDDPq+P2+Rx4tX363f++lgzUNnUfk
bb9/JyvLDGtBo90mz3rymW9DHVM7WVgLS+ffHGhKIyHjy2ZgDMhpxm9efHHO
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
bnGt2BnSmCiUfhZKonwzC0VOlvQuXT8LJbU7MDYK5UpbPrHnwX4G/mRJ72ty
Lb2uNlDGRaHQyiS1Z9HKakg5WdJ7tFwrdoY0Pgqlr8UqUZ7P5/3Jkt5v7pvS
UHZdNyEKpY8tn1jjy8m5W4/rvXOupTMUGSg3RqHQjlNqlX2h1Vuyr9pHQaFa
qTOkSVEIl6f0E586+/ha+hzj8qh+Kou2TmvxRGzmTlY/yY6tPoPhGmHkJtP6
5Gjrl6Yw6WJLyJ6qPj+6NKVzTOtToq33SpaFGuymWtdnX72S+knOj6ZGW6f9
tMTapYfVTxJXr5dqvafVBKnzo2lRCD2T2KBwz0A3mRMlfTJ4cVTXGAjToxB6
pMobe72XhSKnSvqEs0dKN9nzoxlRKN1t+UTcYJYbf6qkz4S7Wy2QyD5joMyM
QumWwspnQ/KnSvp8u1tU1xgos6JQuqbKm/NsyQ7lTpX0WX3XlG6yUGZHoXSx
5RNxePtZ3SSnStrvgGs5Gyk4354ThdI5hZU/L/Jx97QPReeUvjEQ5kUhcFYL
HRfX5bsT/aR9QTpZreByrxgI86MQ+Ew4jGs72OonOfHWfixcI8ydYlq/Kdp6
h5R+4hMR77eofXA6RPXTzdHW+cQ5jCs7zJYQ60z7D3ENZxOJfiqPtk4n9onY
sMOtfgpPvIPWL7TagFVOoJ8WRCGkz7OvtxDkROkiBaFdpfppYRTCBbZ8wqK7
IdCCRj9pD7ELrCZInf8sikJpa8snsBpt9ZOc+mifOq4VO7+5JQqlTVQ/GWvO
nNno1ttUqpcWR1tvbcsnLDnOvuHPUbSPY2urAVLnHEuiUFpFsbrR6iWxmbS/
ZquonjFQlkahtIyWn0SlfLxq7XvaMqqXbo1COD+pKcWKm2z1kqwmtQ8t1UrY
QgbC8iiEFilsplm9JOs67QPcIqVrTOsroq03T5WdoVrX/svNo3ppZbR1Wpsk
LLhZtoT4IjZXrXONMOeDaf22aOtNU5jMCfSS8UVsplpvmtIzpvVV0dbPS5Wd
Z1uXvc6mqvUmleqk1VEI59ryiTiWN1mdJHuO5yko59rRzz8FOun2KJTGUawW
WJ0kO4HnKiiNozrGQLkjCqVRtDxpyWCnrrGC0qhS3bQmCqWhLZ+w5EiPBftq
jRSUhlYLJGwgA2VtFEqDKFZLrW6SVWNDBaVBpbrpziiU+rY8a0yx5G5VGrCB
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
RcveYWXRxQsz945M+Z9Ey9+elN3A9+iNaPnVlcrTT6PlV1l5Sfks/ixa/jZb
nuUl8D58M1p+ZaXy8r+i5eksN3GfwZb/ebT8citfKXl5K1r+1qi8vB0tS/GK
/NmGyMs70bJ0np7Qk6bsu9GyS6Ly8q/RsrfY/neRY6FQiL73ouUXJeUl0HX/
Fi2/0MpLKjLdv0fLk6dFwrvLlj8dLV+elJdAH70fLX+zlRc2QwN5+SBanvxL
vEdA4Kn1H9Hy85PyEuijX0bLz7Pykjib+1W07Fwq687fZYL/dbTsnKi8/CZa
liNU6hiLH0XLzgpky3sc/TZadkalsvJxtPx0Kytu5rMn7r+Llp9myyfi75ry
/xktP7VSWfl9tPwUKysJn2NT/n9Hy0+25VlWgpPpP0TLl1UqK3+Mlp9E5cMY
Lbb8/4mWn2hli/tV/FL+LyrLuYb5iq/5WlXV5ZX8zp075fyrTlSe/kxtcUbl
N954o23btv4uuWorf/jw4T179uRoIS4Chp8BxfOEgpjyXfJ8xs5HECiNtssX
Q114BfZ9SMS8M+3+ldqlm/f5e/fuBWEqMkHQLnliF7///vvl5eVcCq3z9dfN
mzc7ClNROQ2cv3k4Wb6ryED4hjkQBenAGGwoikGtevjwYUDlOkw/6hQVFQ0a
NAiPxVbiU/d8P/FwTU/UrFnTUMYRHEAJhxk4fvw4YAOtwhjsvPXr10s9vk+M
esCfbycbqgsrHW//FXAX+LpbxnRPs1OnTrw29pElCqLwuVPoq23JBTIxt/QL
7PhN2Z6fBnK4bNky9BKAcgwIE8lF7s1rqLwiBcjNdvlpggfoiCuMS8yC/buH
WpVFH6zlmA47SZoPHjwInoKN2ShkkMWBC5hQglTF3l6P2jT/d0BnWVkZpMiE
n2AMUZHHFwaauT+uLXmCaXoX7wEQbOJL0kCPYwbgF0iHMqUN1P/HQzUSDPkE
tlam84EHhxrAq+EmtrKCSzcdCxkvQOFL3BBwgyO3cEXnzgcKzWIuuNX13wST
1k8mVg0kEFVYeiRmg4bDd7ldb+Pz8x07WoRWWEXQJogA7/m2MxrnOAOpNvlm
NTg0yG6x/Xzt2vaZzAqnAc3na77dfL4cja8cDkV2Y1WLhRynAQLz6qJFbTKZ
SXyGYNur4tvLogwH6cBfLb98RxngqhUUnEtImV9tK0RLak7g+8QqU4Crk43W
GWLrpGIYm09+tA7dBomuE8ynIFqHJCUauc58CqN1Btk6qdFpPkXROldVOr7M
pzhah+ea2LrBfKpG6/C92NjawXxKonU4+odeP5hPtWh5vnntbEJ3NGujrOvy
dEfUz+PuaLqioka0PN2wStmG5lMzWr6PlZXwMp+j+Zxond4p+Qplsla0zuVW
vlLrCvOpHa1DdxoTawu7FjWfOtE6Ko5qsB41n7rROr2sfKXWGOZTL1qHo4SF
91XDOvWjdXrmlK8G0Tp0UzEVxdl8GkXL90jKo9tUTMaW9uW7J+Ur0JLnRsvT
jb1U7GTzaRItz3FU9frDfM6Llu+clC2l75pG63SyspWIs2nrNIvW6WjrpNat
5tM8WqdDUraUvmsRrdPeylbqDoD5nB+tc5Gtk1rDmk/LaJ0Lk7IVrE3Mp1W0
Dt0yS92eNp820fIXVCpbbaPl6ddEtgBb/oJoeYKaiqlgPu2i5VsnZSsof2G0
fEsrW6lVgPlcFK3joqumLHjzaR+t0yIpW4HdbT4donVcfNWUrWw+HaN1SLIT
lq5d75pPp2idpknZCta85tM5WodGajTeqvl0idZpkpTHYO1rPl2jdc5NypdL
mJKM6+rLk0ZLRTg1nx7R8pzHQ8cIM5+Lo+UbVipfPaPl61v5itpql0Tr1LN1
ovLVK1qnblK+lL67NFqnjpWvqK12WbRObVsnaqtdHq1Ty8pXdC7tHa3DUSRj
ERbNp0+0Ts2kfAUrEfPpG61Tw8pXSt9dGS0fj55nPv2i5asl5csdklZU9I+W
55iDMVttQLR8VSsrTiRD+RoYrVOckq9wLXBVtE6Rla+orTYoWof3GmK3fM2H
I7eRP0HhqVOnHn/88ZmDhoy7qOOyKdOffvpp4z+bzSlrHBWNTojOQekJE6eM
nzJ3zuK71m49sG77oZUbHpy18I7hI8ffveHev/zF7EhVNt/SykjOBw898eTI
cZONBy551RYuX7dr9LhJJx5/PGrRcYQvPn27b9OW2QtXGx/oYlMzf9eh740c
M/nemjWVRceRq9gf+NVXX500s9x7Dj/09CvXX3uDufNgS3M8KfZoxu/jJk41
XvnVIv7Yvm0u7T3zY17uHnsuPXzEKDTsSy+76/4N925Ml457jid9p3Vp74mt
PdZjpU+fPj1izKSzLQ2eDB42ojJvd03l5GkzN+35lqdy3pJ1Bx57rLLSkIV5
i9d6D/Hk3QXdl2AA2OC9xMuX373vkUfTvfMDy8ERo2800lISuc3ge55l6+WX
X4ZUogzLVh6kckLZNLThSnPcL5LhLMYC2lp4230Qp3zyyQYP0f1uINCH/dBo
9FRlR+7BQ4ejnyZOL8cYGjNxJoYOGM8yQ5/ABzgffXry5MldS5e++eab1tPd
fMJIWqwrQg6EkbA4Z3I4msK3rEPCVWf4locxTE3nsWd9lznCRNJ3+VOPdxZ2
EetV6IB/lu9yLt/h/wp46myW59ibXHyMcvrY/k/wGT5bz9uQVpcFM5wpIn6t
n8uP9Qv4uTKO7OPmfXHYa8eZBik/17gf6ZeM9Rn8Sj8JMHce+oK593LRfqXa
d/Nz+Wp+AV/OkN9ujZfK7Kd9ObVH5JfkAfmlekuGlHlvJ6bMLTLEwjmTF2IB
F/1yPCY/o0ci0yFZnJ3nN/s7qTz3OT3+vhSPxLP0/Ps0wNmtHAVnn7tdaE34
XDp/C/HqS97AMZ/hQWnvBculvQdksjT7vHl/Tu3xGyvtPRa5tPdYjJX23ojs
T+f9oG3pwEIINBt7wXnv3Vhp70PIpb0faqy09xIsqgTvoHRVNzLADPTUqdGj
8f29deswQvCKtZf3rLQtBLZRllcH761fj2VGlaAPzazCz1hDYiVorIUk59i2
+nvyjDConVXvk9D1Wse+TVsxX7396u1Xb796+//fty/TW059Y75qr5dYaU6/
YXxHzqJ0luP0cwXt1xIpn+9cSgSGPlVP1uFcDzut1eUyzhy3sSkqrckp3Nnf
Iqzs/EvYoyijfUMirZRy3qAKcqipWbMm85JDjZeXlwMAftFzUIQOE7seSDRo
0GDz5s3se9GpUydO0AESTc6R3K2w7wSIAPtcTbTlo97nrglMd9IHKOB7mCMn
d818dpdwTEz5VUTqZEHPIPqUlZXl7uUTqk9yl/6fOdK+evvV26/efvX2q7df
vf3qbWVveQ/59OnTT1177dczmRfWrg3PzPgMgiPOPPfckZFjJowYM2n0uCmj
Rk8aPWHa4GEjbipf9M4777jyfK7BZydoZ/HS5bPKV+448AKfnazbfmjU+Gm7
H9rz6aef2hrh/sHrr78+cuzEtVsPyNnMwtvumzRlRvpshs990D5Km/hiJZWc
nA0LSvtIVnymNG/x2kNPPBmWDk/8jhw9OuPmFYnzqhGjbwwxCUuf7VmYi4Q1
cPCwymJB6dI62lXuM7zPdj6ozx5BBEhJl2YqBw8dDmaf+VyTS6+5c93KDQ/6
0mWzFp04caKy0v4MLxZByvOb+9LHL4tFifI9z1K1YuVqCBIFjrMnw0DmG988
rKSK98Bc7Lqt+44W2v7hoHWufLBbmAXHp86YM3Xu0tX37TVHppns4ju2jZk4
E10KAbU1wn1R9P9LL720ctXtJJSZvC1btwVxt8yHR1FF8Gl51r+QuR6c4lEu
GHWKx7d1fuHf/FPP7HKd4f0+ihlnB/ufezL3ZZzoJSmXszt7OvUPO/36rGd6
jOVbvlZwZvdPxvIMZ3j/qfjZ638QP3spfhKWRcFRUeI47B969valntNVQk3F
P+y07QufyDHGpDMLXQwQi/KXd7b2Oc/eWE9XBJ+znwcyX/v/ADQRURo=\
\>"]], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{{7, 1}, {8}, {6, 2}, {5, 3}, {4, 4}, {6, 1, 1}, {5, 2, 1}, {4, 
         3, 1}, {4, 2, 2}, {3, 3, 2}, {5, 1, 1, 1}, {4, 2, 1, 1}, {3, 3, 1, 
         1}, {3, 2, 2, 1}, {4, 1, 1, 1, 1}, {3, 2, 1, 1, 1}, {2, 2, 2, 2}, {2,
          2, 2, 1, 1}, {3, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}, {2, 1, 1, 1, 1,
          1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 
         2}, {6, 1}, {7, 1}, {8, 1}, {6, 3}, {7, 3}, {9, 3}, {10, 3}, {11, 
         6}, {12, 6}, {13, 6}, {7, 4}, {8, 4}, {10, 4}, {11, 7}, {12, 7}, {14,
          7}, {15, 11}, {16, 11}, {8, 5}, {9, 5}, {12, 8}, {13, 8}, {14, 8}, {
         12, 9}, {14, 9}, {17, 9}, {15, 12}, {16, 12}, {18, 12}, {19, 15}, {
         20, 15}, {13, 10}, {14, 10}, {16, 13}, {16, 14}, {18, 14}, {19, 
         16}, {20, 16}, {21, 19}, {18, 17}, {20, 18}, {21, 20}, {22, 21}}, 
         Null}, {AspectRatio -> GoldenRatio, 
         EdgeLabels -> {DirectedEdge[{4, 1, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {6, 2}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {5, 3}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {3, 3, 2}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {4, 4}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 4}, {8}] -> Placed[
             Rotate[35, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {6, 2}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {7, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 1, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}] -> Placed[
             Rotate[2520, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {4, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 2}, {4, 2, 2}] -> Placed[
             Rotate[630, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {4, 3, 1}] -> Placed[
             Rotate[1120, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 2, 1}, {7, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {5, 3}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 1, 1}, {5, 2, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{7, 1}, {8}] -> Placed[
             Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
           Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
             Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 3}, {8}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {5, 2, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {5, 3}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 2}, {6, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {3, 3, 2}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{5, 1, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 1, 1}, {7, 1}] -> Placed[
             Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
             Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 3, 1, 1}, {6, 1, 1}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 3, 1}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 2, 2}, {6, 2}] -> Placed[
             Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{3, 2, 2, 1}, {4, 2, 2}] -> Placed[
             Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{6, 2}, {8}] -> Placed[
             Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
           DirectedEdge[{4, 3, 1}, {4, 4}] -> Placed[
             Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}]}, 
         GraphHighlight -> {
           DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}], 
           DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}], 
           DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}], 
           DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}]}, 
         GraphHighlightStyle -> {"Thick"}, 
         GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
         ImageSize -> 800, VertexLabels -> {"Name"}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
          0.03178333455671099], {
           ArrowBox[{{0., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["8",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 0.9245908507142256}, {2., 0.}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["35",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["56",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{-1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1120",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {0., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {2., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["840",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 2.773772552142677}, {1., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {-0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {0., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 3.6983634028569026`}, {2., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{3., 2.773772552142677}, {3., 1.8491817014284513`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["630",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {3., 2.3114771267855643}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {1., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{2., 3.6983634028569026`}, {2., 2.773772552142677}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["2520",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2., 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{2., 3.6983634028569026`}, {3., 2.773772552142677}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {2.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["280",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["560",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["210",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{1., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["1680",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1., 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{1., 4.6229542535711285`}, {2., 3.6983634028569026`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["1260",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {1.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           ArrowBox[{{0., 5.547545104285354}, {0., 4.6229542535711285`}}, 
            0.050853335290737586`], InsetBox[
            RotationBox["168",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 5.547545104285354}, {1., 4.6229542535711285`}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["420",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0.5, 5.085249678928241}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}, {
           {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
            ArrowBox[{{0., 6.47213595499958}, {0., 5.547545104285354}}, 
             0.050853335290737586`]}, InsetBox[
            RotationBox["28",
             BoxRotation->0.7853981633974483], 
            Offset[{-2., 0.}, {0., 6.009840529642467}], ImageScaled[{1., 0.5}],
            BaseStyle->"Graphics"]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., 0.9245908507142256}, 0.050853335290737586], 
           InsetBox[
            RowBox[{"{", 
             RowBox[{"7", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.050853335290737586],
            InsetBox[
            RowBox[{"{", "8", "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.050853335290737586}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "3"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 0.9245908507142256}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "4"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 0.9754441860049632}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"6", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "3", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "2"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 1.900035036719189}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{-1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {-0.9491466647092625, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "2", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {1.0508533352907377, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{3., 2.773772552142677}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
            Offset[{2, 2}, {3.0508533352907374, 2.8246258874334145}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2., 3.6983634028569026}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
            Offset[{2, 2}, {2.0508533352907374, 3.74921673814764}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {0.050853335290737586, 4.673807588861866}],
             ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1., 4.6229542535711285}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
             "}"}], Offset[{2, 2}, {1.0508533352907377, 4.673807588861866}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 5.547545104285354}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
              "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 5.5983984395760915}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 6.47213595499958}, 0.050853335290737586], InsetBox[
            RowBox[{"{", 
             RowBox[{
             "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
              ",", "1"}], "}"}], 
            Offset[{2, 2}, {0.050853335290737586, 6.522989290290317}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->800,
    ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzkvXe8ltWVP/rOOe/7nkYTEQ8iVZr0Lhw6SJcm0uHQDwekF0FAmoj0ZqEK
ggi2qFjAWKLRMVhiTMwk6jCjyXUyxhsnTnH0mrn3c+5377X22s9ez8NJfr/7
5+VjTt73ffZee/W19np2GTFzZfncRTNXzp89s+Hg5TOXls+fvaLhoCXL8VPu
36VSuY1SqfTF4hQ+V6RS9L/ovyb4X/jT/19/aW++5V66dGnL1m3DRoxO5fTp
PzCVO3Dw8PUbNl28eDH1p6B1W/Mt8+23327fsat07tL1O44df+qtVM4jL/w8
lTn57KWNu0/OXbS2fMGiL774IvVV0LONHeejjz6aMHn62m2HU/mmT+7Owz8a
N3nmj55+JvXHoHVr2xpQ8PTwYz9JFdrWGAGDvvHGG6kvE1pjWIAzDYtsa/Sb
XDr7z3/+c+pfg9atbOvHHn9i4aq7TcOqtvWGnQ9t3nKPefSHoHVL2/qHH34Y
OWacobW6bT1izISvvrIE/ktCa1A5sXSeaUit5y3dcP78+Su1fvXVV2ffvtq3
XrX54P4DB6/U+uzZswtW3eNbr7nnwR279lypNSQIgfytsD/44IMps27/W/EG
T4YMHwWZcOvR46ZAYPHWLazOfP3v3376+R9feOPXO/c9sHTt9lQ12+fuA2dW
rV4b53pj2+c//us79Pnx3//20Rfe2/PwqxDx5rOp9GvvfIKhb1+8DNKuYqFA
LuMmlcYlfb35llVQFt3zeNbAyVu248nf/NO/UksgftukGYGmzZi34sJLLylN
q20hfvf9XwAReAjEIgOxYNMDL3z5p/+glh9+/MXhx9/8xYe/hA6CStL3zIGH
L5C+oyf6K3yvtnx98+eXARTYpWoYqFXwBQPiEcbc8dDL+I3QBr3g3YzyFbC6
tIFeAIZAZNNnlZEcQDhQW3fg/Pv/8HslExoJYLcevmAGqW45C6RoGAyZY34B
Z/+eOqRyzJ+CN998E34BLgL/9e5r/sLqoCMQSCrXygxUoSf+A2Tgmfo/gnFr
uXExgiXOjgssQfQXf/wGHLMyzr1jzzPA3jLb9oD2/OyX/2w+5tkfCW36D6A+
++JPvwvGucb2+sv//N88TqGFCp6+/eE/Y5BUxn4nkH4UfD91/h0ZJRcY0RCk
ebnoSfJN/XNcKwxV4LVpmG9brz94/sHH3zQfaTSgwqMRdEBDe/Mx335/4qUP
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
nl2uU9bZQrDyzq7giq0dIoyp+kuzcMLY12UIY8l2km03P5J3Gd9Q4vKqQkZX
LCDIsXx1JE/ZWfL5hsoOo6O6EGzFmk9PI79ExUlaRbMw+IZ5m+2cPKN0lzCg
AqXXqiTvHURq+Z5HOHCSqVWqwOmOvIQe5+QTrL+s6fg0h05a1KfcEpZSiEvp
Gp739fHMS2Ti8xnB03101OQnYjfO2UWwhoxwvvDTf8A03OPscSKvgV5cM0on
2Wt0PsQhsEBjqZXKr8p/9Pn3jLfMJHoKfy5lbpL1RWTo45D1jYR5nnwPfERU
q8CO0+ffNXN7Xc8qdLSXq3OBo3qdS5H51YSonI3ZE4VisuPo+ooxiV6ATmvG
eOcuvO/H96dREn7+lOTEMzLTckYmPmjf5C3TZQ6WVQGeUZ9JeOq1g1c7ScI4
zjz/LkvSV/gIT5/j6LM+FZ4XxIemAq+fJ3NA0nZC0u/GADePP/02j+7rfzS6
zONj55tGpej1SDI5nnvInOFCtDpkzwNKywo+cIWg+2ofjY4sIRgd+R8/T96J
cIvjc5Bx1HJ2Tfst8M2cpS12wVVherfga+Wi1dERgwzZrneMreKs5fwFrd7D
N1NJl1Nyv4ucNBrJKmg0X8m7z1FCa/z+Yo+9Zije0pLPVfXVO3prdt7pGa9x
zHGwZV5mamVVndUwLNIHXylr6XoFc54hjgfBbOIap1t8wg6NKLlxefQsVB91
acTv5JTOlomw7YjBelc6bdPvyaXRJL8tpxoCjeajrdYoWo1NK4zltO6MZFzl
NMsnKDKjjmkJcVyqHLwSlNarEaVUkdPYEO3+fGh7ll4s1785poNy0imvoU5H
4Bq9kzNSOA7p82ZbJ1oMjRNdyy0njvJabqrbySwbdFZ1LcqjZ7x6/aHV+371
JkGQGS8oTD4b1+sDrQ18RlGcifgpUx2s6uQYQPGW1dbZp0R5gw0dvBD12cWK
YhqHZqTmu+yqD8bxttfWSZDyBpZgH+eLggy1WPEm42yRCsQ8lvfFWaUt+xwu
vAo94yyLlI37+9mD1gLi7NMROzK6nnXf+b0UQfFnS2eVBbV3tAUrh3u4X4Os
qk7E2sw8g8ZCez7biMbydwvoE4PbR6ToZys93K9BrlbHweb1tvJ+kffL0Vje
i2qN2eva87r8rOMDn1as/ZjWBOLuj5Q+SZ2KW9FbdDkDm2cLPt7SvsXo+u6b
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
Q5FziLKAopkKt0GJnvp6RdEghQXtNYm+3dcrba5P9G9NFW7zFDXXJ/o32WnL
UX1eQNEMhdvAmO9toKgZqGQ+0Pk3WX3RQFFTP9G/0aot/2a3XFFTP9HPUS8f
ccsDaqZHqDG4xffBNFLU3Kx4OsBZbbA6Rq9Uaxj6OG7VQHF6vqKoYeifmA/U
y8fL+QFFpQ4/Xr/ZP9EH36CoGqAw6e94GazH0acF3BCT5PUKtwWKosaJvv56
14pj5oKAomkON17p2C/R/+od9/2V3PuFPo5XYej99U1jlkbrnPz7xtsVRU1j
fp56+Nh5e0DNVEVN30Qfp/en91N87Zvo4/RO9OaJra5R3F6oKGoe8/MU23zc
XBhQNMXhxms3+yT6OL2Tm941+fWRfWKc1yumb0yUIOVG/u3IIkXNjYl+nnr5
N0aLAoomK9zkLBLxcXqvcR83Kq+PlFNFxDL0avZWiRZW3XGa3wIsVtS0SvTz
1Mu/G1kcUDNJ4dYr5uP0rtzeDgsetWeij9M7DtoktpK3nszpJYqiNs4/JezI
828PlgYUTVT4xU+/Mz5O72XtpWSuzrFjCeh9uO1jkpQ3QlyzX6Yoapfo46iX
r8EvCyiaoHArSdQOvZdV73MpSdQOvXM1vlYw4yjiGvhyRVHHmI+Tm524ar08
oGa8wqt7ouXq3Z+yb4hlXpJouXqfp/2esE/PvxNaoaiR0+nUjjwfM1cE1Nym
8Oqe6FX1HsnuSt7dY6Pq3WwWgt+jd+7Cz3ccNynGSoU/tRO+QNa7TryCbisD
rMeq8bvFpK534XVTMu0Wk3p3hTGtbPz8D1/P33Ju4T2Ps5ZqflOrjy7/Ye6G
M0vufZK1MuTxrWrs+M4+vYdNdnGyzLomWl0PhbHtlS+Fc+UytCVTa4lsylWE
FjxG4dMl0RvqHV+kNT4b6JLoDXslaUpk1ZXs1BOPrr0s9fARLTcRuyUBRaMV
bp0TfVIfRVGXxF7aJ/VRFFEvvzqJduxFI66O67IjkqNaXkxjwpg+SuGVfCKl
3h/V2eHFnE4+b7Kfokb2jzO37fqUWEakc2Pq5atRhTGLDTPJkQq3jol+Se8m
orqKz2c7xvzSzYoa6uHz2aqOc0HGqmdjduc/MvRqiViFs7ARCqcOMcr1DpWO
isMdYr5qkKKCevgctobT5mAWoef71MtXoWokak04579F4dY+ghtppt7P0UFJ
XjKI4P3KEEUR9fK1H6mIBTM9XWWi/MZXJGolWnVYZRqu8Gub6Gv1Loj2rAHt
HF5BlW2YokaqY1z7ie/Q0xVAqYxx9Sl5L15Y1xzGOMn51IGf1bse2inpt3G8
CioMtyhK2ioOx3fm6TpzW0cJ11TiO5bCGrPeFyPniwc+Vu8RaKPwImp09Wek
oqaNwi15Z940RZGcXsRVkvgevNKAIl3Da53oZ0crinT9sbXzZVKdG6Oo0fXH
5F15UxQ11MtXnpL34E0JKBqkcGsV87NjFTWtFKdbOb2R6ulYRU0rxeXkXXmT
FDXUy9d6kvfgTQqoGahwaxnzt+MUNS0VbjeGPo2r2+MURS0VbvGdeebXCYoi
6uUjYXwPnuHDhIAiXcdrkejTJiiqpIrBmtAi0bdNUFTd6KjiWpTszBNGjFMU
3ego4ojYMuLbvG8fF1A0QGmp8C7wcZMURS0cbrxLQngX+LhJiqIWDj+u+cjO
PKWrniLZ5c0rltvG/PvYgBrZ38ya0CzRx01R1EQrYN/xKZBxHzdFUUO9fHbc
4Qp+RNXIIlWnDjEfPyagRtfvmib6t2mKmmauF2fFTWN4lSpKZOc5Z8WdK/Hx
nhrq5atOnRN9/MiAor5KQ5tEcCP/NkNRo08MbBLhGenMDEWNPh9QzuJPiL+q
IhupOMnJ+oGPD3cL9lG43RDT51mKmiZKA6QWrvIVTw310DWe5LzIU0M1d19t
kp13gY8P96f2VrjJSdSB752jKLpBaYGcLJ2QT6p3AJFaT/JZ2EMUVdFTe03F
qXfiWOGu6F4Kv4aJ/CtTVDVW2tAwkX9liio5J5lrPv1j+jBIUSQnInPVqX9M
H8Jd6z0VXg0SdbtcUSOnULM2NEzU7XJFTUOHG9eCBsb8yM2KmoZuXF4bGn/L
F56RoM/8aZDodxYoahooLWiQ6HcWKGoaOGq4VjQkcax+iqIGiqIhiWOFZ410
V/jVj/FtkaKovtKC+jG+LVLU1HcQuG6UfFJ0H0UN9fJRO/lc6D4BNd0UbvVi
Or1EUVNP8axeTKeXKGrqOby4yiInjQY22ktRE32bLfEpZqPhWUo3KdzqJvqd
ZYqi6xN7ab+zTFF1vaIqfh6yrzWqt+uR6D0mNtbXbmeuUNVV4XddIv9WKKrq
Ovw4V7oukX8rFFV1HX7M9XFOH1S911Mkp1hwnjTO6YMwvHtAjdQCWUvrJOr2
KkUNrdTwb27lJPtAt1cpaqiXryFNdLaq6u1qLUekrjUxZg/hyXvRNw+yPsbj
xX5ntaKmjuIy9ZK5I/ud1YqaOorTU1yvhHchniLq5WtcU2L+KjznsZPS0GsT
feKdiqJihZvtFczt1ypqqIevH5U6ziW8p1KrhyL1rdJEPx+elyowOI+rHfO/
6xU11yotqO10Wmov6xU1poess4vNr/T5u/TuPFxnF7eB8FRequz5/O2amN/d
oKjQb+jjp3YZb7JBUUK9fB1pjusVzIHbKoqucRRxrWZuoo8Kz4Fu7/Dj3C25
VrlJUXWN0oCrHe+CWuUmRZU+h9iuqglqFfpEOOrhqxvlMf9uYknrgKJ2Crea
iT53i6JIbiNlbbjaWUJQe9miKLra4ce1pIUx36ZPhaMevs61MObbwhPh2yi8
aib63K2KmpqK08mnxGxV1NRU3F6S6Nv0TQiyapbrNUtivq1FQFFrhdtVib5t
m6JIn/p8Vcy33auo0ec7L0/0bfr+DerlI/byRN8W3sqh64Ny8oz4th2KmhqR
HkYLasR82w5Fjay05hrSqkQfp297qeGo4Yi9KtHHhXfAtFQaWj3m43Ypaqq7
75wpV0v0cbsURdUdbpyDrEn0cY0URdTL17fWJPq4RgFFeiVo1UQft0dRVS3C
OwOzaqKP26Ooqhb5bvBbH/Fx0TWVniLq4Wtc60IfF7k5wFMktUHW0ioR3LyP
26coqqooqhKxCO/j9imK5KZPzkU2xixPnwpX1X3nWtfGmJ+vF1BDHsXnlUWJ
vveAoqaK0gQ5fTXwVgcUNXIKEOchWxI943WKIjmdgr9vifn5ugFFUh9kLShM
HOU+RVGR0oTC2Cj3K2qoh89H7knkXLGihnr5etc9iZwrDigSP8m4FcS04EFF
jZyEwVoQ3z/1oKKm0HGZc5HtiRZXW1FDvXyda3uin68dUEMVP59b5sf872FF
TYHSgOQbiA4riuRsBOb0rkTPWEtRJOvYuMa1O9HX1wooohnCn//854/cv2+/
/dafD8HZZzZxfHtzRuarr75682fvzl19EH1/+OEH7uu1JJuIhe2b/uKLL55/
6fWVW4+hr5wvwBWn/THeUuz+7LPPHnnywj0HH/3kk0/ktACug+1L5C71Q/P7
TzyN/wDAVrc4G3377bdnzpk3bOTYVO7E0nmp3EHDRpYvWPTBBx/wfiufEcot
MYFeWUoKnn/+xamls0aMmTCxtGzMxNmANGDQsFWr12JUhuM1LZOoaQTn4VOP
jJs4dfS4KeOnld06ycAZOHj4+g2bwCneU+mrV/fFbMn6m0JI4f4HD40eO37s
xOnjps4dO3nO+Clzho0YvWXrNgg61/GMq233xeyLoEAPtu/YhW7ofNuUOQbQ
xOkAunf/ATyyc2/KStPUcvq8pXsfei7zyAs/T+XtPPyjKbNux4945HNQoTvw
MqQJQAzcKl+6/sDDFwjG3QfOYOSjxx8COV6nk0+WEm2C5Jau3f7AmZfTBkb+
yWcvbdx9ctzkmY89bq4ylVLZg4l+Nd/pyfRZZas27T/82E8IyvGn3lq/49i4
SaUvv/JKhd1gTwnLgzE/S74KujNh8vS12w6jo4WQBqjVd9+PH/GI7qik7Beq
SC1TBbYdPk2ZPnvXUZPNphNxpPt33n//faADDnG/5Xftnl22YPdDF0FbOobV
MdvnpZdeBiMgmVS+6ZMBbxauunvR0lU7j7/krVlLh9aFnj33OGQB0XBfEDZ3
4Zo777qbM4IjiVKhvrv37ocugAPUNxef8P3Ew6f5LmLKnCFkcN2MUGRb4dO4
STOMP8mJaflx2wMaM7l0toFLPbbd/9jMuXYxf05Mo6kH9AMcAN3cY+09h9Zu
sJOZY4mWTatI4ZpghaYD9Vq0etsDh4/7XtqOqRdUBRzyvfCFtIfvfySqYaZQ
NNOgivmThRyh8FGfR7eQrVu/ccveU75d2ZJ1559/PurkHnJcvH3xMiPjqnZU
MBoaZx5ZhPOiHvzTz/4wdcYcmArBzAVfJpXOhUbSbWJ5UY/9T7/7F+gbpM5t
8QnfIQGmpobiVDXbasioSbuPPm1066TiicUujRH7Dhp19LHXwEJqAe8H85UW
RlfGjp9stOCki3UjJpYbe6ER4HDgu80jy6c0ef4ht86E1VMLfID3NA87RjCF
J4RFe0xXbT64/4C9JIXGgRsBE/3zBSu3PPHkk/453CBQ889nlK948803BY9c
uL1bRt9mNK26fQ7joVMK+DliJkKFeUTPEX3ATPOoQwRL+F4w2o8Cm0CMCUZB
sPJQ4A/gQ/1zyBIu2z/3VNLzS5culc5d6p+XL9/81FNP+efnz5+ft3SDf+6p
JCyrO51DqDMNathWffqbd0vm0UPO6hDOPBRoHCKcHwUKCjX1z2HHi5eu8M8v
Xrw4d9Fa/3zNPQ/u2LXHPz9x8uTiO3f65wtW3XP27FmNped4MpZed5OxfPXV
V2ffvvrKWGJIDHxlLPEFP10ZS5I4sMJTL3GIH0pwZb1R+h+jwmt/MhXL7tp7
6PCRK1MB8UMJNJZQQqiix1LzAhoxcsw44y2SeQFVh8L7URbese3Mo4/65zAV
GIx/DpSBuH8OJYQq+ucgGYRrLI8/dGLpul1XtmHtA7x2J/sAb8PJPsDbsHBh
yPBRxgeILMEV48uingg2jAzARDHr8bLQu0lTZzz7yi+efvVDuDJEgIec5MdO
mGagUTugVjZ/IWXZ8IqYBD+keEcedMPOhzZvuUcigLmvEvEQnRA2zj313Mz5
Kwk7ijy+Hbz2hx9/Qe3OPPYUAg61w4cXL1zw/vQqpXc2PqRFIogd9g70DBWB
AA9QTdXkcFKUNDkJIjQ8BiW5dH96BsEQWKAvMDdx+bCKFUUuViAfMDHpkI3L
UUqR9TGsZTue/NReoo7k1MSRKs6zIvswsqG+Qj2tfeG+6+xt2GgAbYfOc1+v
/RQLa7rIPn/5RtOgwEVXfL93137O4hGG+c74rIWNPIXK9sDO5F00x1+2ci3n
BwVOh6CmJx4+y1Agf4aSsaAW3fM4AIHpAA9AJm0mLfvv7+bOXwxdSBU6XkFE
z198hW4GC+g1vMo30PIgMzCR3OSfvv4G3DVUFzqOIVswsxuCAAVEwgUIlHUy
BMD6D3fx9T999vuJU2bCYzEEaPCkabOg1/TWiyvcSNQ508yzek7j4FeaHOMv
5VcQLV37niq05CP/wmMYDRkDzX2zlEn96d/+HeKgJDTPWc/EqbOgfVRsBfly
ShBY6KFC4ngMqkCb1CI5iwJt3/z7f8C4oMHG1xFkxGBK89ECzIS67kzUqKp2
ECrzVLjbocA76C+0CYk5FCaPstRth6GbhtN7YpyGhAhSARVLKtwpq2aG/sUX
c8sXwq4578YnuDQzj6S8m27MptkOlAq+0KhyKg1vja/4EemD5UoegGEMDEfa
j7/gS6qGGTeX7NporK28m+o1HuIRnBfl4TQbgg9HMKIRkIcg7wAyED6NABDo
gr+kb5AyhMsjgFtcbaERABjCxiOoAI0AOSIbRZIA5tMIiGvQbyRDcK/UBlDQ
BYDAH3pHAF1h27Hj5FHxCOPACDE69MBIPMdpJbwvomEqbeEj4UBmBRcCl7Gb
os1Tfx+FVoWm+uALhgEoACRDQAf4WSRESLYsLJN14St+pBUQVJUoQDtEI8Qo
aMO825fgL0IofjE+is7VBTziA/7D6NA0mt5Wt1zDgOCPaWgnOBlaBUCtjYWn
XfRBZEWKkMrFCKlcpId8fpWMQfYgvMMwEDmNgeFJI3gMKjwLRjwGNBopHGTB
YyDh4Gid6yINdVlkN5yBCLo/h7TODGQ1PIPHNAem6nsqx+IA9nIeR+e5QaWQ
sWAg4RvyQ2gy3QFHdQTTsZqLBmAMGZ/ROIKJYaIwTQaLvNggn3P7omWWDHw3
lmRX4PBbeirCWZKcL2H8CaopfH3zX4YvVZ2EmHt0H415efPQy7496CVroEwh
XyKGsOrfvvlvOBCCBsZ/bU/fZWggC3Ly0MAxUkCClieRA/8BE9Dv3+x5zheZ
P2k8h9MBPQCS66yevA3TCkK4tnVA8bmKhWAi55d/RhOAIghU6HQQcoAu1SOp
5gxU0cp4FapponXAS9APwT//+q8Jwwgvo29a7dD2ORXwzCPKV8QUGB5x4PRz
7zA8z025WYe6MLyf2WMihZuGXrJFyhRy6Y2fl4bnaIHzaS+9/RvjRW3czqWU
xPMTLgjO0Hw8qPhp41LurhOvXHzzN8YK0kpX7Fm1EG6Um6SJ/iR5NOUol3bU
A/rtWx9j7MhxmKabnHR59IzDnqUvtw8wdWlH/b7Tr5VtepSygFxypabpZqXp
BA/AebyajtsBPHq766XhtSHPPt94//Mb7nvew6OiteOGbQ8Szcf7HDfZNgi/
rUcusPSoPy2e8P0xPkg2H0siXCWZgtVcrUevaC6Wu/Cex0vvfFgyPMMFPnt1
o+MahT2mAibGo1ImpHK73Nu3npt250kPb/G2J6hExPC8zst4rMP0noAGC6RI
d7jTKpI0Vb+Wbn9y7sYzBGHyqhMz153yEMEkylZ4byb4SHpkFMTBANqLtz0u
MCasODb7rkc8DK87BAMoElaAHOUuCcTkN8Td5+Z0r9erbJLAmXPXI8PnPwDo
nPnC3NRSgHwOMZf3l5WU7L/s7z2kUM2y97pSy41Tt/ssP87MdacxDjhB45g4
Gi1FMnZ6FG8x+UqjaJSnZnYr7jJ9ksieMltvAR6eXYuTVVVZjE2WMW31ycFz
75u48iEeBxhFNddUTYm7QIAwvQCwZfsR33g1ox5JrViA3dBIk1adGDTnAMbj
kby2yj5dGgko/LWRbEWG3zyJ78B/Zm6X59vufx15fJZV546W9aZN3PTo0Hn3
D5i1H8hYP5svfvPrf3+6X4tl893CligUg8FCJ3syWvZzoJJ1sVak/XOw0GDU
DY/ePOfgoDkHQTyNSmZVYTLhJ3o3XzzfFeeTR/V2Lr4/0AVqf/qdT4JRJ1mO
0ELULLcDRy3cAjXOLMfJ4E0BZdaSlwJ70NB7+t4Za0+zDCnEmGb05kM8DtQx
X41xJRwqxSlYzWOzvTxy/PgPMoQk+8/cN2v9I4wPZeAeH/FYkNr/V3yqRXRO
PDX+M++U6J2stIWlTRraNJWTwr96xUP32YZeJqMXHS6Zsmug1Yfyzfs2d5nB
8rRjfxi7e8DALSlzbRw+tAae/KVkWpHIWyvECawY1jlFOBUonOZtevSWBQ8C
p84tU6m0aVHD8sCg817oOK6EjqzjZ99YqOL2NSE2UGHBJpPqfEcUG8qACiCy
x2ak+B8P52STy/7BPbZw0vYZDzDDea89wYkmWbB2xtpTg8vuA7UwSgSBfJfB
cHZLNxtReC+3ibKcJRDRBpp5OIQ8anQGt8csRDzD7i5JnoRxdD0eYQyGQk+A
KzCG80JczHc5DfseemdIxQz8hwda16+EbSV8/OstGHjULiSvIpMTu7hQZpt+
9+ycVPe7OGOGhbSc6nO07IQVx3tO3Q0iB8/deEeHqReYW0XhaqkPQ86Zz7y3
hSwB4qIZg5lPsyVcE2LxH0/PKh5+IBmLzNglR0umrG5UK1Vv2P0mmlgvURS+
1/voijj4+EA4+LmlwuGLszNggx4HMkjORMqnDsB3Mn9oCpjtfBW+GY1i/fej
23XQwUoH28PMjJdtfxI8xX/Dyu+HnVME8fPTfId3eXQ242cTGfGKEU3KFU0i
/kQ1q4Iwzk/WdIut3dMYW0tLqzzMxvZ1pwnjkQsPsR/xXo3wRfsAX4mnfxu+
EU4WVFTOWdJuWbHNs54cZ4E8appBG9qJXHy69dDvqR3JU+SbQVLfa9qenlPX
TG4++rnoGqBNDxwb32zEMVehNFiTv5untEvmrOyzrvFUmPH5DHk/37cIUHaQ
RtiEnbVtlkoNvz/fScK+0z08pcWY01Kx0qP7LERmuOx/kkeXXIDUmyJ0mvLC
iI5Y32J5Fht3coCdWzNE3IKeLNhyDkoCgyUdgdtkaZBMdfXEz+DTFS4WRaRF
cS9X1Jg1jTBlZXZUWs1IxlavByVs4cyn3GHYDidXqLyTrO8KsPX1gb8N26zi
ZUFF5bytGtFryfG59iAlexq7QIIBgaN5CTlOfvcAqT77k1+uP3iEeVPgrH9V
hylzeCvvW/wsmrcYb12g6K0djkmDltraSTAmeHz+9V/de+zHpkXZBT/mkraT
Svnq8neCMXX27r1cbRa4d2PQutu6Gx5Dde0MK0NZBEVCMwcpdJ7PxXhWDLsv
PrYSRNZL/vjtj817qQKXH3HVhdYS+hpwjtLpjMbQjWt/8NIm3IQXgfclXgh+
wXnAhB++/OSdTyAuP79hD0P46Sqa1+LK8St02hfVzgTeRb2tr16QVlI5LLSI
MspDSsrKyigzyXW5pMsqQNFf/ueT/fsvfPf9b2mMPEbgMn6Uge0049yQnnOf
QDa/0Gko57JZN8Pm8a9lWnl8S2NJJ8qPOt9hfXw+JCtTdkqbaaRs0uj2HdKp
Eb3nP+d2chgb5Pk/je5rw9eKH6IIl+M8jEmgUwOGbT4rNTmuebHtO3bzmmCn
Gw6OPaHiCnfSIt5yvS2rfClJVnJPlpWbKLCsorxyCUJULwSzRO5wJ4VlsAul
hvNjXJXLKp9C9oGWHL9zHYeU9iZjSbYh2PAMQfMvqrsye+CR/DzZeVQ3kjMB
EIIJkfFuVCEo2/To2v3nef7H6bdpaONJUfQXwnZz6b074/uqES9XU11Sqrxc
0SsWD8EUc6Az1cisi9RGjBbBHOdfmAPZK2Bx15StW+L7tCGXFbt+5LHwVcDi
K3Dj8OO7SJV5Ljhnw5mtRy6adMO7DKUz/oF8dJKhWxh0dYNqpG9+cHnZjqc8
br66WOg0P+pPcqngKZLUdphLPDE+OK9C+Tj+RPctxnlHYAhXvSeJcH36lV8u
ufcJj4uvehOuuupNU+//LVz541/nLWk9ZYB+FpFOsq80ZTDksdlb99ocjSf5
VK2irSXR4azFVfGjV1x2iYy+E9TmqmnZBSN1Tl8/rRPickEiR6p5jyUeF5O/
ug0rmPClXCuXIBDPknFS7olwot0V//39D1B/wsnXWq+EU+vpj0f5YzJ62Q5j
hEetRIcifqzETdgNRoyZPbU0fiN8mnZx0JtawszXZmVnRCBZX2ej+ZZgzpql
sua01A+AKsf+GN8Iu+jeNdIqWqFkMn/tw2Q3SYCbzxP+Gm48d9XcIq2/Iher
RzTezzEyyuK09yD50XO/H4yqAnrOQHtuRdAVNkHgSOL9kz2Po1BsvtyWqihg
yEYrgq93oBJ82R+Db+AZw/c+heBH3xlLtVvMy0IK6g42/mVkJw3+mYhCsP2b
EpKczybF9/LzOx1c2flHcGUHRIUtaDJcb9sEV5YQMFwffbtGZOdzbf3Ojm73
Abb0HIRRVcDvTCRsdAVjptMJ3uFF9xELNpAKnQgkVWmztq2CPSfvYKztNCLY
ITjTWeGp6B1xUo8gwfN5Q/JmGgQRdL/TcYbrF9w5QBml3ysk999Fxc470XwO
RTmWLM7y+0IDzKVywrsviCdiF8CrquNAIA3EDtbzqMx8nplROTnJTN6iwyzS
Dl/eGxu/eYROyvJ72KgHrerBXz6NSlawgFVRmOa9afxEytKIz/IwSdfMDhaC
Se+sSGxyexif7zHN8THY7XSt4yPvbcpELMhQR1z0GYDOgFckeoJrHT28+ynj
7IfXLsl+ygCqnzdH1oFFfJ28PWYJVnG4sSZFzxY3tFD0i77pmeL0nffjZdwI
VHTiPYGQHL9Vzyg66jhZSyyZ4nQ8uoPKRGCaYjNEDMerJuQ+MpYKVXf0To3i
CCXmXW7W4UUTY+afeJLYXG6ZgxrMZoqVlmUdblROZqj+bbyek0Wl4iN3npKd
7GLl7yIV3mtFJ8bo/ecTlK/Icx6GoTS9ElS2f4Kq89vxqpXs5OPqSFP3nd9x
y+21fG4RzQr17qE6qpVd2QKxVXNaHvDPV3OXJOJYx2kEe2rCEQiylldVHkpX
DaJS0etPvOxqO41h/sq5PcG++bHKG/RQ2n1dol7p89/lhC7W3tucHQZ7i6NW
cK37ztjTmyhffZczJcTu5Bwi3ud1rfIVecpXEJfkdAuONfmKl9c63ebdpXJm
U5BHjVb06dse6jreBj5xtLK+norX9symYG+YPkGK7Bc2FHDJ+2I7Kw6ihj5N
qljZbr6y3eh6Z+/zqWbnay/6HBu620lnLSOUlfRRvL3e8TaI6yMczZzJ9nEa
yOfG3OLGCvbRyllgfHoA2ZT3ZHpVwbzEses5H8N73Osom9JrASLcKhBfXG7X
BqHRnLsewV+zToiyST/D16caycltlEEAATnfmiXfT3G8fihpsHuY8xp8moY9
XQ76N8xRGkT9+s5aoudeGV3kles0q4C5PnD2p3cfMnsc/BpUP/ue6/Q8OKOh
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
6lvtq/vsjvy8KC/VnRRmOtP1mEDC/Z5RSu4oBiG9JyRrAIKjdk9Ts5qPZfAj
7ytdsIbpfJ70LLupi/NSe6aSvEqnzzoP69agzkIdFa3Te34iKz47K68eWjmu
JWa2kpQ9bK00TK88Ozlrxr7CkrzU+lU6y3+Y5drYa8qYKzMUZczVc0ah+2vC
Rp+iOEew1A5kanaL3y05RXFP5+QlOsQnXJaXap39xme55nnZZEY23ofdnyrx
/sD3fvw+DTKZZNpPlF2ZYQ4H3gmir/3YvfHTX4VD215pkd4v6ehwYn99eV6K
TmeMhzoc2I/yebBZGnx2na89fGBQzb2jb9358qGfSR5sXs34PNjMzdOdJq7Y
9o2rp2+ZsuxRsCLjc2Hz+Opc2Brq7Xkp0LuOOjv1IIWTbV+mbKt61DuQ1yuM
CIaynurxNPWN3snroLhwR14q2yuMbAb8wHO7Vo16Oi99zo1gwrp6uCx71ynZ
TOcQyUWta3vVfwdF7WlKalfkpfZUBW20s3kPBrml89YdKI1a1/bKkuhqBO1T
VjO+bjhafYL2yuqszEttO0VNlbKtuhpUvJ5EvehfT3Wc49niKoVZu6jVrBf9
q84Rpc8cfHU6nmHuzEu1tvKUxUPmz4FKYuJ1QxqlRp64KfuJBEd2O0+Jjmij
1Mi3Y8uoqST44pevyktlW0XFBMcj9omOrRZM05Q2+9ouW+PVYdpGtTSd85rg
yIyma8bofu7KS20bRc0k98x+L8UCyNojXt8nrI0ofm4bRyF78pcreSFY+nyN
TsrCdYM/G2Tt0meF9Cye/+q8FGuvqlpR3Fdhna4B1cqNVOTMVjils1sRnHB/
qVWUl61jXAqobePsA6/q1uSltpWS/alOh4MMbOH6oVVKO+Pn8a0c13gV3sdh
9WCQHyxduSilJ62UdumT79bOgrH9X5uXWh8lwLzTWagvUZKSrkdHFVa0f+vj
HdaGde1kLvc7F+kYkZT98/EOLG+tFMX0XnZl1uel+CRlDXQG6l5KWuLVC6nC
RLiGOUlR3MuNA/tofuX3fKoyRmpGO0lRrGM5dKa9DXkpPtFRxNVf/T4u+8EX
K4mJV7Xs4rTar1FPdJzjXc6LFFy/Rk3sI3ZJ6YuPBGINO0lRq/vZmJfaloqa
We6ZM1ZeoKSlpcMyMYv4LO8J+9xC8d2fG7DstHRfJfaHfe53bw9bKi3T0Ukt
lSxtyktxc0XRHPssHuD5Cut4Bd3ujg8JG61hd1eY09wT2miKndU2unmMUwHF
OmLua3kp1lWT5zkJZw/wXCUxzZ3MeZ/gYqfVCRvdXMmO3qdv7qyft9EXO11J
2GiPX5gzVGfPC+aCzXmpPUFRM98+i/ens/una4pf4qxMwkb7GrFs6fTu9Qnu
q4SNvsRxLmGjmylrp+MpdTTn3XkpbqooWuig8SzVVb2P17y3++kJG02clNms
q6K4qRvNhI3u6/iQsNEES2a0ExTF9Cxe0T15KW6iKFrkvmZ++b1k9jqbOEwT
NnqAszTeRjdVnDtLwfU7wwkbPcDpi7fRTZWGNVXU6n625KW2sZL/JfZZ1i+d
1HPjqI2+Ommj2drqDIOd1HPj6FdXBzaaONdEaZmOidbvt+al+Hgl/8vUePoK
WeGJRcpGXxcdrePVt363jMcinetqUJIHPLsdr75rrCj20fIsA/fmpbiRkv/b
nYQncl1Lb7Q6DU8thka1sZHiHMERf65RSuuHOq4lZrZGMY7rXJDBLLotL7X+
RgSvClbYZ7XHFEjLcc5G+5lkZNTa6uxftt4jdP441zph0Uc6O5iY1Y5T2tRI
UUrvZX/s/ryUNlQ29M7a2tpwZ0fvxsRPG6tS9OuoPL0TE4+kGxPlg47K0/dV
GjqKeW9re16KGziKeJ68S319ipIUn1UyIbcTAvkmT6mB4pzO1t0gKrcTUvLd
QHGuoaJW9/NAXmr1fbU1Sjpaq+f6UZtU7SxMwhOu5zDZGmToDp7rR+1Sdcp+
1VfapW9m6fc78lKsT/U3qPEMV1vmfb0obdOjfKhQ3+qM3fVStM2I8qBCfVdf
UVxPycDOvBSH+S6N/7xJ6WxL1VtFSnZ9RF5CxiuUzrZUWFWkZPfmqIzrfJz1
FLUVSr8fzEttmaJmc63YYvNrcyUt5SnbNDtqw0w7Y4t1lm6fHyBhk2ZH7VeZ
0iad35M4IbZ7V15KdS7Kexw0npVOUONRGqVrfop+wlLm2BMU/0ujtN0a5UOZ
0q4yRbGu7PJQXopLFEVb3dfsdTRxmLKHXxKV20Up+fZ5s3gvkuCI/1YSldtF
KfkudZrFc4fOFkjPsne5Oy+1xYrv2xRWxytqi6M2aVnSfrFvWawwOV5xkjOK
qh3rZUn7hc9pRMQ/KFEUlyjOPpyg2PK59NNPP3355ZcXLlpSPXVGp7N74N9l
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
EFL8/f79jQAXWyn+kS0RaV6doDDIHqXH6HPOPUfWbsXBmPDkAGtB83rJpCUP
L9jwDI8iu7IGUAkxL/hLbapAK9XWUm18Z8s9Z5z3hCb2gGEpCTFJUOmE2x5a
uOlZI2SiiI777B9qvOrsk1bI7//mf01cvFt2smSn1+doY78gq9Y9MqMGXCz8
69MTaBqg9jksc+/a8aLHU2wej0jR58L6hz/7ddWCBxP7f7yrTDIo3gq9J1fG
Y605neAj7YwHL/jXuv5enBdfylbxl/ff/97ll5u93Jza025WW5tYK8a5lPuM
OBURlam/a5m3+4pZ8klo9VfAi+f2F96UnF+f+daPYZqd3+G5VaqerU2oUDFi
CQxq3yOn5Y46+qYlnu87B/2DIpEH4NfRhZ7Pwd5UgFFRuj/K0EsRzj+03m5W
7TaS7IgPSe9pU96PQqHHmHmxd+45vP6yOpq79/GD7sqwcYQdR52r9Nnw5djw
7//b+6yfFB4v2MJdS2ArOyq5OvgrnGOpIjTpx2JZVMffS+rAlG7kwGrTHsP3
+vUjKf+tr5DcPIGLgau58llxoTOw1N8ZI9rF9fmoEvJEFkzFZydi9/wtjvC7
LNkQimRfbFH2seN4MrGNhW6Xk09MaP0NRzYxQpgSmCv2fanfOaJtL1rPUJB7
hvrxUdt4Aobcj5ykUD9AK9GPzOs21KToT2+++Y2GDTEwmFv//vHHWEUXqhOW
gcK1HJ1u+y2tVMZk608m7kXb86OcP4WrDk5Jg5htuo+rInNzfocf/5l9b7q1
IZ5ITu02lDn+09xUbbeQuS+JmF/o9JmjkKkvv/tdTSc61BedEidmFOauPb0r
hidN3DtcWUlLul+sX88nlHJaYzMX0i3KrD/hhsjQXCnx0Ce4Fv6Opj0ty/rT
PPySVRyfrzhH72mj30iFvyGVWHG/bsuyeSnJem1A5wRBop3nOyw5ipne0z6U
kW+fCz7Rg3gM9qQ5++HevWAIHXXTSTf4RX8By+xtWcl1X02nYGRZVd0fjqKX
yEsbP2HOnzBYPho8iKqfp55zTv9JreQuUAJ/OSH1d4cgeDAGqXj6eeqZ4GNm
ooMNhi/6TvDlnNdqSPbXO3bQHsFPa2oIwhvDhtHBRCbkDijgcSlyfOe7G/EM
pKtsK1qdJr5ieZmj5KnItefsFvWUFfFnd4x9hRsjvqHl7zSwtMxR0lTktI/W
XQyfthcFvlgp0oD3Vq4k7ry7eDFBwCxC29XMnU5ulPg7Twff42nh7FAisvrO
6FfCnVuUnaKVhjdlvFYSP7IiCk9szS3KFjV1Y8redIlaEVJskN8/gpDYvIec
gUPuZdl7can4+Q2OB5xtYqbrXd+6YmpKlK/Q1L3nmzAznSwkMhR4y8nfy1rA
nnpnaesBqo4hs3kGU/nc7X3IxH2K9UELs8tNGWbkRkQzJ1WJnmVPxd9L45sl
N7lx4RuZzR28xPfi01m5yMFCUZwTkIelz4yw2Pt8L+ENzMQ9nHUOe85NcqPj
G5+oN1cyTzP3tOV76lhhN1PUzAgw8PlXCv3JAH8/Zdkj05Y/KvBlN4zuCWG2
p/U0ZjCoEu1VcgYauT/YyrbV2Vf8HV7ORzJNPVuMyv0qka7EAHWvCRhjDAVj
KnEQzRznODPJNPVMcP06DuwGQlTMgAJ1wA6zMie45DSZT+5wFNMpATxSQ7EN
TOYsQ3J/kCjWdnSNGsNqNcZ0MxW/oYmR2MJA882vPmc94Jl7KS3VGOos4i2d
5QFicttDbr15eHhvvqcbZnA4PIX4nfb/OB/T88naWylbuFrp2CSlg20VRW2U
Tk1WFOgccXc5DGk9ADwxHpSlkiu4SDaDeLb0u5T9mqDs2ykKw1OUvZqg7Nkp
CsNVNPLOI369d2+D4RiLYS/XlufJU1I2a1UA7e9cxTGsyN1OYecrunEWLWpP
3o7RsXYKO7JJfzhwwPvrsE+U94ArHIkn2S5lk+5U+Fc5XrD3cKrCjp7lhm6V
6kFneCSbAivpvTyDnV2tcq428eNODWyK3PxcoXoYrZ7bKwzbK4pGq+f2CkML
X/yst6qrbVQQV/0STrQnPqubuHcoGiiXrGSBOU1hd5p6P0pJuM5+SvsecIW9
n2OllbP6iVb5jHaJm9G3KxpGKF50UNh1ULwdoSyEzkR7O8nT4sWE3S+3bLEZ
8bmmgmDXwelt4h7ccteKfbFhSrZOV9idrqgZpiy0zgps4YufgSG2tovzP8rs
ka5bSVlzxI8aUks38M9QGHUMdNnE/g52to9nSZ1P2p7RGv8BTrz4D9ZCSqVI
tvxnOF31t1eXBpbX4H29s2PsY2vszlD81dmbdf7uJQ47P///8dAhmtE4Q6hY
dfttKnvEYtXDteq5k8LwTEXRtepZ51VfTHL08cff6d4dGL7YrJmZr+0cyVlb
xaqfGdXXRWqEfPZjzgzSWWHYSb2/RkmGznNv4ef+9uGHifnW5vbkugzi5XeK
6uwiJdVXKp6cpTDsrHisMxzrugO32V7D+RbYkkfF+X1lVdY5qre3KTp8nWXW
9i4Kwy5uZNhHGuD0mGdAXQ/C7sSY+Zai8TDWZr61eU+YG7Kq7pLS3YWKhv4K
u64KO3oW/6a/wk7X5lhgsYNmJOZb63sz72WV2zWlwwsU/v1cb+x7nK2wO9vx
+sGwnqzsWug6KXZXRuZb2BmDnV1pcM0IWXWendRhzgtwq6LhMvXVOQrDcxwG
vBam9rJzcI7C0MI38633COwqjjVLOOFrZCfuzs9T2FyqsO2msOumsLlUYasr
61j4WUxkfr61mWOkAgVLEeXt1HfQ5yoaeqvRPldhd64azd5qtHWlo7kkT26+
hVtg195sNwW7c53eJm6Gz1GteipNOU9hd57ShJ5KU85T2Fn4WThQflfCXjiT
ehY839pdinTemwAzX9WPLcz5CrPzFWYXKQujK3/Z/RUzs3lnwMy79q+JWdFY
eLsLkcjRcovC31etYz50V9h1d9Tw+sPvDPAq+AKF3SyHnZ934c1THh+e48W6
X+B0NpHLY2bQyvgOPhMrz9Y9FIYXOIp4DadrwfVQGHLFvI8/xtpHdgbseHOd
CvFCLojq7c0Ko3MVxhcqDHXG23MVxhcqDG92GCbmXasvtv6G8d4ujOrszQr/
s4OeJNuwYHahGhGfFZXn24sUZlRFM5xvDWbWzqQ83gujelvD+NNMJL7HxQoz
nxeZfRtqL97pxQozqmiKkUysvK195sofslK4OKWzNyncOys+9FTY0bP4Nb6O
E3vzPRV2NzrswnMomt94XSKrqJ4pnb1R4X+m6q2Xwq6Xszi80jnTWWaeZ3op
7Ch7mp9n6ZyHfAOO7lPfxvO4BTTQWkJWkr0VhvQsK8WO6vveCkMLP/vbRx/1
86z123jFKZzondRXjqWapmjQK8NLFHaXKH53UM+XKOwsfFl1vz1vnvV7Xdyu
l9lLnM4mMvZMVTToNf+lCrtLFfbtlexeqrCz8GWefW/lysUWu9FKxu13qRw3
UxQNuopGH4VdHzXyrlrGZQqrKSTl9rojza92xSbxZWyxLnO66s+oqxXebZW0
X6Ywukzxt62ykRozypzoJ9cP9+61a1XeHZLVk115J86BJyvcWysr0Vdh1ldR
0kpZ434KM7vilx172BIz89v1Pd/6Ud+mcuFOVDT4LI1sZS9XGPZTVvok9f3l
CkOqjKx33e3eBd9PE773c7qaiHucoOhoqZ77KwwvVzzXWRj7KwwnOAz93Ppf
b79Nez/ct9R1uzyqrxMcHYms3TK7X6Ew7B9QYLyD5m7U2T+8QmFo+WTm2AMd
Osjsb/fOePzEp+4f1VnitPi2TQOeGH9jgMLwCoch+zP6ZGmAwtDu4uZ81AvP
tXbvkXfUZU0yIKW/4xQNjV1v7GEOVNgNdPxmanQe7IEKu7E0amqH2+7d8v69
qiWU0OGxCn+fOXltWKFRsLvSUcPefaPgvZFn8k7nzZv38cf2ToHOM2utSs7H
WPAK3O5k8/mLrKiujOr0GEVTQ4XxVQpjepaVUkPXC686yVtt1qxZ9+7dgXQK
Y9tfItbhrkC/V/r7poUxPFL1NGmXcfHixevX2wNRnS+wvnomv/DNN9/s3dtO
9g2iNrVdu3bz7PWYVCRDffVsvdQsgL3wwgtEsM6La+fJROyCPUXiswxgUlJS
UlVVlcq8R5nWD7/xZpduPTqeffHae/cY62HXj1nQ279//2eeeQafF6vvKtR4
eopbt26Nf3k8kvNbAQguVeNYocbZwskCCP4PYqurqzWlZO23bNnCsko35MK4
hDVCefbAgQNV7iendNhKasknNlro0KFDb7/z3kmt2t60fCcdw1lJKBs2zKwY
iBNoiUciEJ0DBc1NH/PHemmlNAehARrCm+MUb8iPBETwx/xq+ERy+aiP0Msp
jS1TGk1rwLfffnueu3AFaUnlA6fZrEOHDl26dEF/QAY85ozl3veCEK0VDubQ
qMoGeONfUMKYaDsN3gCmoc6ehxbV1NS89PK3wkNDa8XK0AgYEjPxh8rKyj17
9jRs2PDEE0/csWOHjxXhESpRVpj0AFwBLsRMuk9Ao4FRAgMqFHfJD85ms+3s
T8ZzNpPJDBo0SLJDsKWmPsWS0xgCOdJ9IpTvMbz//vugALR++OGHOr+v1fEi
GhF8jY8IY6r1HMZi2CgFa7EK9u7daxEEYKOtBY63LAVZx/twFi9GByTg9CF6
wheMYXgualtXQC48+4F2r169Tj755DZt2jRt2nTkyJGkCnqMaVx0LXogi5GT
MUffEC1gQ1YKwMvzjIWVdMtb8A/PAwcObNu2bZ8+fXhEZGb3tdt55re950AB
GUTYCM8r81cMLTBjLpTHRqWEmpBGAog3AVQxXJ8Wrffjk8nBAECX8SupBY8Q
HiB8ZvB0nXnrnTUE6C42ggytSBBesDd/8C+k6kMbah6eEduv6gFLP/QzZ86E
BccwQZQgU61atcIr/AUARSNZKrJOgtn3szsJxfjqTXetGPqCkYLoMv5AYodN
XyIx1uGIlc+YMaPW/aBHjDq0FuQDTnl5ubEKeswKHR/Yn7T7BcUk1mhPthty
CKwYBwwjcTaVN5pmS8gVGALWZQqMyBki0R4sABPL3LglPPoNMm7lGBsMHfVP
sz+4Dh4AJCwHJJBlXLhGvZJMGytpKSqiOQCcAxsgOXhNcqfjcuwIlqAPqFVp
aeno0aMJX4y++QaUW3+C9drCLvbrh1qbZIrXEnatWgy0MULQKm+CIFMZrV92
lVhy3333AWdA37lzJ3131VVXARW6n+ZXHXiSFYjtpRQjA9LI0GGIwGx8hu6M
h6XzWxN/0JxnNYolRWdgJrGM7tnrWB8br0seZTG4D04AU5JzDJIZCZIHvOAZ
Pqesjx4Zsj5oD0w8IAClm686fsh+XYGeL7/88m3btuEzMBOMBQ0gtmPHjt/8
5jfxRwgJ3eOidefLr7/Nq0laiZOHAmozBcAikyOZgjRDmozdKYmNTNk555xz
2223oZuzzjqrUaNG6AZUoPncuXN37dpFt5Bp3fqdH/6cV7N2ZMoBmSwaBpQs
CDrCG/xLc3kqGzdxCcJKWs+5s0A3OCO8oxt2OlrJRqTTGrIIegnuUCf0nZ6V
TU8FeGVRgPBgDPEFjQS+BopFjrJEnJOlrII8NBK4d999F0OH39EdPAIAmjhx
IkgvchZu3MKH7n3sNaKtHPqHd5/YHxIVdI6eSTXBZbZKahSMNSNFGjt2LDiP
X370ox/lcrmuXbti+PGKv/vwD38aMeeBZw78mL4r8h5crZ1n0SvNsegPxon8
8mI1CnbtWwQagSlZAHLQDL9yjveJc2GbY5jWKVmyWsRGK2dZYg86gvr7VQN7
m9bmlBEe5HGADfjeT2/4u5fpRDyX3VUrw0CBPjAdBOF3YNyvXz9awQBKgWFo
qZ9C8OP3hGhbi3fByCcCsviebCOZeULB6LceFTuaxVDHwsJCaAjJGeaVzp07
sy2Arvzyl7+sdR6Q3LigjRrWSfGwqRXIAL/9kklWWYl9CSDrx6bKZX8rxZ/e
t3cG8ONX6XwuvllGyHjHNEIwAGYe9BKBPgEZ4+azh/FKqZ+TXZr2gRh1D0gY
MQAjW8T3BUP/zepLA6DZs2dPfN+yZUvYdQzueeedBzUhv47mFNkJJf7JTqjt
3fgCQA6rZ1pgQFgglalxIe8SetikSRNy2H73u99hjKClqVz9ph+3g2rn51Li
KMkesCL/An+pcyQagn+ED4SE5iCwiEQYPME4qpC7u8VKFUNeIXJoSVwlr5yp
9yMsNxLWBnVpjW2lWYD8D/xL0kuDApg09yWi+KxfZOZ3sAcy26JFCwxHgwYN
8AtQJykA0J+++0sS1KyjmKWA9mWBGSg2i4KGDQvMsqKQ0Bdc1Q5dMeb25s2b
YwQwJvgIrrTx4vT9FXqW3Xaqc+enRxqO1Ixue2iAJjSDk+WAFkBOyF3FY4/O
nRNxhTZZBO8BASzk3fxKfCdfxxpAJS2020iziZk4+Kaenf6tKarVPpXhmfUh
64FDpHEYJzQnfw5cRG9QhJLS0lX37U/UdGCeXOY4TiOL5uy5ffghjT4Neipe
2OJagukZ5gi/3n333dOmTfNSVgDnLlPYvsMZiVsbMs6212Kv7fiCWGn9XjPV
GC7RO+aCjAft2pG35/2c7AtLl3ZycZNbhftFQN+vFsAR8IXGV84U7PxQTAsV
aicjQJWPyFeS2C27ciiHboEAIHHw4EH8S5Ms1Pj6YTe0OfWMZ555jn0PGV/v
s4BeWvH7zkjDaZJI8dpanPKLLrqooqLi+OOPJ+nBtAyRR3+wYg0bNX72Odef
nMT5/mgkST5oOvA6beyBjt2mHSAvd/j52erVbTOZFXYfyeYVpd3YYnTfxSUn
A3d5delvM/PZiLWuRSDXrxHJzbJr/lTcmZXnEmANuSWH6drBI87ocv6kSZPx
vR69fk4ayBbKyhOMFOkRXtp9mTJvT8aPHw8u4hearPH7a6+95nfjQh3J+YkJ
yPvVfaCdUTk1Fpic4MNz556GZZcNTqU6NlwzDIJDagYrYbhHOyZybtPX9U6e
CxqaNQ7VS9QRcbSmBRUwvie1anvloNFgGS3lU6NC/gUEz48ycRFfpCTQ7voV
4Qfk05kYvEV0U65Gg2DSpE8wiV9iQRR/imi/4twWLU7MZObmcr/escPmOeWz
S3zHVoD2fmVlRn487daZX+luYhh/Z3fFikDQpvufeOjpgyALcg/dCflr+EBe
LHCmuRggaZ2TVTy40kk8Jhg6cgMPwBK4YDxmEktPMP3anQYPrM7GeMDxQCv8
zorNrkln+MHpGd1XDmP4aHdzzJQ5nbqcC8MGUo3N8pziKKE+Tn7wHhjRGik1
j9JooLfW7Toe37gpxrZx48Ygrb6TmrAavPHvPDTZ3xG6Bjq6EhG8Npcr32+V
c0s689ERvN1cK97dMt7TcQFHzO5JHycDCf9JnT7l/A4QnIR9+/bxPrPs4hEU
8If8spQXNoA0zcX68i6KzfuaipElWnSsb1eFdxNFmz41G6AwbOKeeSdLn5rZ
+SEV67vDYrjYtpUT9nFRm9tZyYyvbsx06XPRK5RUnOAo4v09fepIawode2Qz
BnMtXPHFx0ctm48hZ61t4ejinX59tqyjZ1s4ingfS58t83mxi/Xlc1GbCZsz
mon3MjFlazoo7Ki+uZzf6LP5yxV21F72cvTZPJ1Q6Fhfm3maK+vKbDUpZSdO
db3xXv7JDnoi9ldHDsi53cmO14mzJrWnkor1fchiR3cr5NbQ5Ki2twkwMK1a
Owz4PCwefSGrx9YOI17z91UYkpcbxvraMi5yL4U5Ux3or8QMnqywaauwjUet
CDZtFbY6aqWPw86f1dmSIXynR6RqCsmoihv0N/F4NNspmuJRPjKa7dRo91HY
XUryFMT6PmqxW6Gwm+r0NhEz6G/CMrT26qt4hJRoQnulKTpCyq44E7FIeyx2
K5VFoyi0MG6wibIgWofjkWViQToozHRkmT2/zIaBvo9ZzO50tpJngxlEQRAz
SOeTMqt0dLSw76Mj8noFEI311fdtdESe9bATs7PxOmyRJ76PL3PTjU5fI3Vt
ZQ7Xt1N6KQx7qvfUXnzcXgrDi0mWVJyvTeDO90BlbrrR6WwizrdM8eQs9ayj
Qi9WPD5LPeuo0IscholYJFtkh+/iimTdFNXbYtXD2Y4ujrHS8b4XqVHtqijS
UbUUw+vn3AMdOpg59ymL4VqllTVR3c2qUTI+mdnNikciy+7aOUo6dCQynR3r
eN+vW8x8Pn+2Zjbiu+T1ZN01zwSK/JcdHR1f3sPpKK9PzlOapePLL3CYJWJ9
91rM1js7ybMARcuT3s5bt/fmVU+ZHro7iGzrL1AYXeCg8NzR3ckK+2c6Jt++
T8X3Pm0x2hDA9hgVYaSW3L1v8yMHvLpSVL3sC8TvCch74op4ZN0VTnRvIowi
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
OLbsg1+Qc3my/1GEAqSUsxGS1Eo+syYKv2PLRvjl4WeYVBlwUnJ+6BwdR8v7
90Uxy5d7j3Qf/gPtHbCNlazanzUP4DHlJDxG3LQs6iwl7ybzq+XJrCf5PY8x
k96XlnWvv+MvZz6l7GuSh+uzZt37zDkBPwfOmu8+8wrzXfyuo+e1O+b8dV8o
xx1xGb7Yt0899bVu3dgXE/+vmefE58lx9wVoqBNj4TFl55L8pTpL2dFzx0ne
8M+Q5e4YMrVZrsrePxhrZinykCXH2OfPJHdMue2OAU/z63UBL3XGN7G0dj+u
yO8E0mkJvJ7CiO/+bABxrc9LmVP5ouwOZbHfm6O9RfzN1lJwUkiuvYVqa1dy
FiudKU2yjlGmNH+CydFkZNVoExkevYW3L4AnlQx0VjC7wyu7fHAxfEYwcqdT
sCTTnc7YZffEZVcNv/hsXbT7lIKls38d/smvGJbd2ZYcHSxUFghnuvqDz/1G
mbIkFyTlE6LFl+zuvRJ8q7Ns6SxW/lQx2Jd7Vb4v8TUZqm3S+FX3vzhx0e5V
21/MxrJNJeqnudjRgwKtHuUsg/8E8jHyflsVnKUam9VUo2Clg0YzcnDiafc6
eM8Qn2P5Ydah+pZGoZMFSvDHuX/87n1wOkDV3/UuL2VACyMxXfvvRttTxjKl
U7b969H2PoNYajf+ULQ98cOfsAXRTt+Ltve5v7ysm7Y/iLalfFf+FIyXyYej
be15pEQ08xbBv0bbLo/K5hvRtkudLNIOBAUAWfp+GG2/JCm7QUTPm9H2i+uU
px9F2y9y8pKK7vtxtP1trn2iop1p/1a0/cI65eXfou3tVnUi14Br/5No+/lO
vlLy8tNo+1uj8vJ2tK09zZYTDZaXd6JtbZxMwk6atu9G286Jysu/R9ve4sbf
5//EPGHpey/aflZSXgJb9/No+5lOXlK5yH4RbW/jyBIRVK79kWj7mqS8BPbo
/Wj7m5y8kAcdyMsvo+1tvJ/cMA4io34VbT8jKS+BPfp1tP10Jy+J07jfRNtO
s219RCJHIv022nZqVF7+I9rWxpGmcul9GG1bHciWRP78Ltp2Up2y8lG0/UQn
K37mcyfnv4+2n+DaJ7Kpmvb/GW0/vk5Z+UO0/TgnK4lsoqb9/4q2H+vak6wE
J89/jLavqlNWPo62H2Pbh3nZXPv/HW0/2skWjStHk/w/ti3ViqUrqubXMvUt
reS3bNnC51+No/L0XxYWVcV98803O3ToIPegFaxcZWVl9+7dKZOFz9QgMyDH
jNhElXQPOkfYyd13nSuC4NL1Rp8SgOIZREJZmv9i4dpb47kdO3aAMHWnXt/G
KX3//fdramqoFaDTFc7169d7ChOzrJPsv0o/Wbp3R53Q7WggCtKBMdigb+DT
Pe69e/eiV/qG6Mc3JSUl/fv3x2Opk/jUXdVPpF8zEg0bNjSU0V1hUEJX5A8c
OIC+gVb0DnnhypUr+Tu6E4vvgD/dsDVUq7q5gb79LeAu8PU3Ze2dwy5dutDa
WHIi6JuDfZ20cZaTQgfJJ9wwN8yLnP6mfM9PAzmcN28eRgmdUvYCk2uE733r
XmlFii7Xu+WnufiuM4MQLjEP9u/SaxmJPlhL+Qi2WGl+9NFHwVOwUd88pZ5B
Fl26J0JtTwXu9nXUp/l/AzqrqqogRSZ1AmGID0m/oGjmDnT0vrUZXbxHh2AT
XfUFenTnHX+BdChX2vT6/0mvRoIhn8DWyXQOeNBVebwC6FS/dA+a8EIvdBUZ
Am5wJAiXdO26u7j4ucQ9p/+2fdr1k8mpAgnEJyQ9nG9A92Nvfpb40cbPT+6+
u23ohdUGMEEEeE/3dgGc7smnYNo4/hJwqL/bYvvJ8uWdMpkF3gKan38RuDm6
5otfKZFH6t4u3WqlPAMQmO/OmnVaJjPGLlYzDl6BwMuiDSWYwL/R+7Y5dFev
qOhEixSMnYdiaYnfUk34e85ymZ9s9JuB7ptUvlrzk4t+Y29XRNcJ5qco+o2V
lGieNPNTHP2mv/smpZ3mpyT6jb2tGdUv81Ma/Ybmmti6wfyURb+hW6CxtYP5
KY9+Q9kr9PrB/NSLtqdbxd4n9EezLoO2bm9vG8k87o+ma2sbRNvbm48p39D8
NIy27+VkJbzs5mk+LvpNz5R8hTIZzxd9sZOv1LrC/MTzQNsbf4m1hVuLmp94
bucLk/IVrEfNTzxfcw8nX6k1hvmJ52C2t+4SmYzCb+J5lbvnla94rmR7Oy+V
29f8xHMT29t0qfx25ieea/jcpHwFVvLEaHt72y2VV9f8xPMN29trqfWH+Ynn
EO6alC1l71pFv+niZMuvQ0LZah395iz3TWrdan7iuXw7J2VL2bt4ft5OTrZS
EfrmJ55z90z3TWoNa37ieXTPSMpWsDYxP/HcuPY2VupWsfmJ56I9vU7ZiueW
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\
\>"]]}], "}"}]], "Output",
 CellChangeTimes->{3.7747822964342985`*^9},
 CellLabel->
  "Out[731]=",ExpressionUUID->"acd1c9a0-141d-482c-b134-d8cfd3733b27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"big", ",", 
   RowBox[{"GraphHighlight", "\[Rule]", 
    RowBox[{"EdgeList", "[", 
     RowBox[{"ReduceLattice", "[", 
      RowBox[{"FormulaGraphReverse2", "[", 
       RowBox[{"FindFullFormula", "[", 
        RowBox[{"MinimalGraph", "[", "7", "]"}], "]"}], "]"}], "]"}], "]"}]}],
    ",", " ", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "800"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "GoldenRatio"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7747822009318037`*^9, 3.7747822105715437`*^9}},
 CellLabel->
  "In[729]:=",ExpressionUUID->"fb7e84d7-d52a-4200-880d-90d5c3b6e151"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{7, 1}, {8}, {6, 2}, {5, 3}, {4, 4}, {6, 1, 1}, {5, 2, 1}, {4, 3, 
       1}, {4, 2, 2}, {3, 3, 2}, {5, 1, 1, 1}, {4, 2, 1, 1}, {3, 3, 1, 1}, {3,
        2, 2, 1}, {4, 1, 1, 1, 1}, {3, 2, 1, 1, 1}, {2, 2, 2, 2}, {2, 2, 2, 1,
        1}, {3, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}, {1,
        1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6, 1}, {7, 
       1}, {8, 1}, {6, 3}, {7, 3}, {9, 3}, {10, 3}, {11, 6}, {12, 6}, {13, 
       6}, {7, 4}, {8, 4}, {10, 4}, {11, 7}, {12, 7}, {14, 7}, {15, 11}, {16, 
       11}, {8, 5}, {9, 5}, {12, 8}, {13, 8}, {14, 8}, {12, 9}, {14, 9}, {17, 
       9}, {15, 12}, {16, 12}, {18, 12}, {19, 15}, {20, 15}, {13, 10}, {14, 
       10}, {16, 13}, {16, 14}, {18, 14}, {19, 16}, {20, 16}, {21, 19}, {18, 
       17}, {20, 18}, {21, 20}, {22, 21}}, Null}, {
      AspectRatio -> GoldenRatio, 
       EdgeLabels -> {DirectedEdge[{4, 1, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 2, 1}, {6, 2}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 2, 1}, {5, 3}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1}, {4, 3, 1}] -> Placed[
           Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1}, {3, 3, 2}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
           Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 2}, {4, 4}] -> Placed[
           Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1}, {6, 1, 1}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 4}, {8}] -> Placed[
           Rotate[35, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{6, 1, 1}, {6, 2}] -> Placed[
           Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3, 1}, {7, 1}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 1, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}] -> Placed[
           Rotate[2520, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1}, {4, 2, 2}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 2}, {4, 2, 2}] -> Placed[
           Rotate[630, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1, 1}, {4, 3, 1}] -> Placed[
           Rotate[1120, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 1, 1, 1}, {5, 2, 1}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 2, 1}, {7, 1}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 2}, {5, 3}] -> Placed[
           Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1}, {5, 2, 1}] -> Placed[
           Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
           Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{7, 1}, {8}] -> Placed[
           Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
           Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 3}, {8}] -> Placed[
           Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1}, {5, 2, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3, 1}, {5, 3}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 2}, {6, 2}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1, 1}, {3, 3, 2}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
           Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 1, 1, 1}, {6, 1, 1}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {4, 2, 1, 1}] -> Placed[
           Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{6, 1, 1}, {7, 1}] -> Placed[
           Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1, 1}, {6, 1, 1}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1}, {4, 3, 1}] -> Placed[
           Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 2}, {6, 2}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1}, {4, 2, 2}] -> Placed[
           Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{6, 2}, {8}] -> Placed[
           Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3, 1}, {4, 4}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}]}, GraphHighlight -> {
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}], 
         DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
         DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}]}, 
       GraphHighlightStyle -> {"Thick"}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       ImageSize -> 800, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        0.03178333455671099], {
         ArrowBox[{{0., 0.9245908507142256}, {2., 0.}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["8",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 0.4622954253571128}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 0.9245908507142256}, {2., 0.}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["28",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 0.9245908507142256}, {2., 0.}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["56",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 0.4622954253571128}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 0.9245908507142256}, {2., 0.}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["35",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["56",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["28",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["210",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {3., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["560",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, 
          {1.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["840",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.773772552142677}, {2., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["840",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.773772552142677}, {3., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.773772552142677}, {2., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1120",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.773772552142677}, {1., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.773772552142677}, {0., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.773772552142677}, {2., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["840",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.773772552142677}, {3., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["840",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.773772552142677}, {1., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 3.6983634028569026`}, {1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["560",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.6983634028569026`}, {1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 3.6983634028569026`}, {0., 2.773772552142677}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.6983634028569026`}, {2., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 2.773772552142677}, {3., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["630",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {3., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 3.6983634028569026`}, {1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1260",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 3.6983634028569026`}, {2., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["2520",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 3.6983634028569026`}, {3., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["560",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["210",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 4.6229542535711285`}, {2., 3.6983634028569026`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["1260",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 5.547545104285354}, {0., 4.6229542535711285`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 5.085249678928241}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 5.547545104285354}, {1., 4.6229542535711285`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 5.085249678928241}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 6.47213595499958}, {0., 5.547545104285354}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["28",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 6.009840529642467}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.9245908507142256}, 0.050853335290737586], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"7", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 0.9754441860049632}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.050853335290737586], 
         InsetBox[
          RowBox[{"{", "8", "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 0.050853335290737586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 0.9245908507142256}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"6", ",", "2"}], "}"}], 
          Offset[{2, 2}, {1.0508533352907377, 0.9754441860049632}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 0.9245908507142256}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"5", ",", "3"}], "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 0.9754441860049632}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3., 0.9245908507142256}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "4"}], "}"}], 
          Offset[{2, 2}, {3.0508533352907374, 0.9754441860049632}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"6", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {-0.9491466647092625, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"5", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "3", ",", "1"}], "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "2"}], "}"}], 
          Offset[{2, 2}, {3.0508533352907374, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "2"}], "}"}], 
          Offset[{2, 2}, {1.0508533352907377, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {-0.9491466647092625, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.0508533352907377, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 3.6983634028569026}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 3.74921673814764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 3.6983634028569026}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.0508533352907377, 3.74921673814764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
          Offset[{2, 2}, {3.0508533352907374, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 3.6983634028569026}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 3.74921673814764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 4.6229542535711285}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.050853335290737586, 4.673807588861866}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 4.6229542535711285}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {1.0508533352907377, 4.673807588861866}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 5.547545104285354}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{
           "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.050853335290737586, 5.5983984395760915}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 6.47213595499958}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 6.522989290290317}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->800]], "Output",
 CellChangeTimes->{3.774782217145789*^9},
 CellLabel->"Out[729]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzkvXe8l8W1N/rLLr/d6CJFpEkVBAERka70KhZ6kbrZ9F5EASuCVBEFBQEF
FRUFG9ZEo1ETjTEmJ2qOiZqY8ya+JzeevPEkb845n7vvd+a7ZuZ51jOQc9/7
5+Vjdn6/3zOzZvW1Zj1TRs9cVTV38cxV82fPbDF0xcxlVfNnr2wxZOkK/FT4
nVyusEUuV/Rioxw+V+dy/F/yXyv8L/3T/19/udh8K/z2228PHT48c868XGH/
KwfnCqdOn7Vv//1fffVV7n+mWnc234o++OCDCZOvX3LDXTsffLbw6PM/zhXd
feT08g07x02eefzxJ75O9bjI9vj73/++Zeu2KbMW7j/+vRLb4/Cpdxetvq1q
weKvv/7699kehWi+cuMu07Tc/CncvPf43KpFgJP7H6nWHW1rYATgpmEN23rZ
+i1HHjpqHv1LqnUHRy3wByq5mrY1cJk0fe7nn38ebf3Ek08uWHWraVjLtl53
x31bt+0wj34Xab1k2UqgGlofPPHWiNFjz9R63MSp9x57xTSsbVuPGHPtn/70
J/Poq0hriAatQuvRV08A987Ueuy140Hifxc2JHHX/qf+u3gfe+SRRWs2h9Y3
bT1w6+2bs63bm2/Fv/ziD+/89NenXn1v4tRZhuvsM37KnE8//TTb5wLb5/Ov
/vX9f/rN82/8fM+x12+8+5lcQdUtj+aKbt9/+o//9u3bb799/bxllN2KDdsf
OPhgVtLnZ6DcfO/zuRIDJb//8Tf/4z//i+1uu2Mr9KzCwgIDps6Ym9WxBhbW
V3/45sNPvgqwahhYZfjORn/+y1+feOmD77//KTR37qJ14F+u1EAthi6CuR/+
0z9j2N//658VnvUsP9EZT0Fdro6BWrL4jseBNx799W//gRHwdeuDr+QKTNui
V159ddyk6TA3aA6tDzyFUoKf0Hm2ASaA89AzPwTgtLTPseNBHHhuhqpl/pSu
2XES5HGw5VufxG8YEr8UmtZlUBt4A+gqFLDfgMH4C92CDUB8OdsiD3YCBLth
bAD6TWrU+nZUkITnZkDLuyLQ9Mdv/vLdH36KvoXml0LPzVze9lDfSyAA4o3/
gCceY+TcF6mxzrU9f/Gr/yEUllvIB0/84JW3P8ZAuSL7HRKkDuRKbHvoGDQr
fIc4pL/VvEL0BKLm0a+zulGIR9K61La+97E3ANB8LLbfYQEpusBa/A4p5Eqd
/IUzxA6dKf/cZxHagCiYPO/mR6jPhTNufGjRHcetatvvjzz/noxWksAO2pAr
U9gSO+gdGGse/TKrK0bv0RUYodubH3wmfSatPjRy/t4Z6x8SHMAfSN10IEUw
Evxu+F1uv0/v275R92mTHIX4s6t39zYtJj8E1nyaGrWu1WD8DBDADEyyOl1K
nvG/aWsPD56zZ8icPXM3HSPHSYCnuRjCJUfxH3oKVtXVn908bfMkx6lii4XB
CuI2rT5OYVLbYgLIUNQdR16DShXZAUAoek9fdwQ49JqybfSC+yohC+IBQIKH
HdH4Po81GCi/Ao/dlbv3GCvd1btpLleABCVX3GEqGwpOonlgvmjmz1PY1XB0
gkOQDgaGt6N+GZkNn7cXuOG/8SsO5MosJFgMFM2atG1FL8H/0J24Aezpysrd
H//nf80d267R8F328ZoOuYEjBDXzgdZKYwfI3M9SmFmJF4NLL//gY2BGAkQu
9HRAq++0HZCiWOebP/5MuEbMIPeknbNvLcO1Xr0qT5uGJ9dekuu+xrRYOq2R
IPdo1dSBjZoa1tGKIDah96cp/EodJsAe+D392oeGhgqrIet2nbzn0Tesa3cw
kpgZ2xPbKVSWXey512s3qdmzepSRq8VIBNs0cA9sYGfFPUoQkQJ8o9cBJ3M1
rS7SxCBdqGOJkwGamoe0s+DZtUe1+NWm5hn8Ptt9aY+t02EjUwcKJ53i4TPc
I5DL/SKFWZGzTKCOBhiKfv3mvc/DDoP3CmMSJxCSwgnIJ3GqFXA6XZnrtfvQ
Dz42OAnbBKclmx//81/+lrbPgrR94oPFpwg2Ad8B9OD0tbenlBnjAkbgojy3
3K9FPfvMImT/te+91OAyonsbmASk8sW//JG5SODQ/x21x3OdLQAjOBB8M7ZA
rPA8xSfv4TJRg8/RPhmTimk1gAfijff6J4/Lf0UtkLEKv6K9ka6N3UU+0iFs
WC0z8kvhAQMRPCz3itGQz8EIE38LnGUIHsFP/UfU0hq69mChaU+9QsAjSCBI
PABOx6kkHsYamHUAepGjDboAPids6n9bHDBayp4aOY5jEMMbq4mFjBpQJNqb
gSdxmdZG+wt6RJxNVuf7g534NfeRH986oCLIDk/AA2jHeWrsEme5Att69kKf
68jYIcLVcFJKWpEZG/pucorg7b51FoKRwBh8aFIt2RG+Gj5QFj4SyFj4LrAb
OAvmcLmfeNj/y8LGeDAu+rLzHU+YYAuPmQgF2PgusBs6Ojhc7gMP+xunv0wO
MbzhcVPHJ9AZ4AePTI/NYBngAwT6m48/9vD/L6eX0EjgI1GsmW0Pk5H2je13
WFkqEwS5SL3uPPCyWHGQWyOHn9D/vh/vXxM6iPEwhOF9c/xaAAysTGrSDgEd
CJMG5qRoCZDMp0wO18RpBzoYKO/5UexUsDipaQaLFk6CGNV8ZH/YsESfQicl
yTIKnHbS7HNeY6BDZrwf+fF+n9GulgkrMJrYSsFu6WCb1B+a/0MP618y2nSB
s0B8NRbZWsHic+gFRjfa8a6H9duo9rRy8JjK5dooeK2cNgE345Xe8fC+jGpL
a9W+rYLXWo33tof3udMGCCFoQxtFTzsFr43ixw88vF9ZeMABdoH2UFgj97aK
1+0VvLZKVm95eP9sZUGJw+fCoNkXQhEduFDBau90TOZI3/ewPnVyBSDoMEBc
6PQJXw2sDgoWn4PJ4nHe8LBsrDURFqMwqhm+d3BWB3iG7o4KXgfnZcSqX/fw
fu7kiofQEwxp+NRReY2LFLyOygt9z8P7KC1XQDX0XeTGFy/XScHj8+A1v+vh
fRiVayfHa+FPZwWvk+OvePjXPLwPMnLt7HRAIkcXBauz0yGJVK96WO9n5Hpx
Qp9MBOyqYF2sYL3iYf0wKtcuyn66KXhdlP297OG94+wfHKK9mvGID6QNeCYz
u0TB089f8vB+4OQKSNATQDX2302N313B66bwf9HDe9PJ1c+rjVwvUfZ6qYJ3
ibLX0x6etZDUjJl9QQXGNrj2ULC6O1jAAGqVe8HDstpscjEAIuI9nD6J7V+m
YPE5VF708TkP61UnVwyB9tAxw6fLnP2IvvdU8C5z9sIyRu5ZD+/ltFzx3PCJ
/TEEaDHwLlfw9PNnPLwXo3K9XI3fS8G7XOF/ysN7ISpX9g/+rLeC18vxV/zh
SQ/vuYxc+zjbFz/bR8Ei7OCnn/awLNUmVnu59nE6wLlSrp+C1cfpIyc6uac8
rKedXP1Mx8i1r9N3znRy/RW8vs5eZJZwwsM74eSamq30S9iPma0MUPD6KXhP
enhPVFdHZh39XXuZdVyh4PV348kM4gkP77iFp2fkAxx/xJ9dqeANSNir8YeP
e3iPOrn6efSVCtZABesKB0v89HEP65iTq58DD3T6JP5/kII10OmQ6OOjHtZD
GbkaP8j+zDeNPg9W8AY5e5F88REP73BUroOV/QxR8Pg8ZOHHPLwHo3IdotoP
VfCGqPGOengHonI1/U1WPlzBGZrgg2n3sIdzf0aewx2PJefWsIY5GYmdPuRh
7XPyxBPKc3hCj4zsRypYw53uSNw44mHda2Elc+oRTsclhxylYPF5yEEPe1h7
nCxTOfXIhI0amxmt4I10Nicx8pCHt9vJMpVTj1Ltxyh4o9R4D3p4O6urIzOs
0QkfYfC9SsEbneCHgXfQw9tu4em51BjHa/GJYxW8MU5W4lMPeHh3JeTKuRL9
za5du775xk53a1WnfffVCvZYp1Pi++/3sLdk5Ex/0ahRo549ewK8VDNCjLE2
VoQnM2bM6NKly2OPPVYW04SikydPDhgwYNmyZb///e85TwxxbL8ffx0t40NX
JfL135SuWL9T1KJFixdffJFoVTjLlMzdYpX/29/+hv8HNHyYOHEiUCiN4FYA
jOyYVVVV9rHzQuIF9nns1lhsMCgIBTFjx44F4JyvAaf0j3xBQ/w/emB4Vt7C
bMB6kzzYBsGR3MOHD2/atEnjSM0ipIBfmDXcp/ADWmQg6AVoqeNrfbY8LAbp
pBr/MEKoB8kMgx4P+A+z/3LkFVpyhMwbL+vZSt59913oAT6iC5AATcBJ3leF
2cm9Hu9VthdA33nnnZAnYZNprOiFmYtYj+VuMWCjB7GHNshbTajDLvsPwil2
mi6aZumpwEhQaPylKNGVYDAwcMWPUgdTdFWgFelat24d5AbOAcYnn3yCDxxO
ZBMi5l5FI/QffSFnjA8I7du3x5iCd3I2Zb16MSBCzcBNQDccLHA6tW/fPtAO
7hY6LwESjZcwHrwAgMk1jAZ2gh78gjHJS02V0QGMglbABsRwlGJwEaOAXEAI
lDGvMPp9T5qyCsjqiy++wEfAwgcAxefkpI4evATPPOvwA0BbvbK2QObjow9R
tk85OoAUytkYSGkpVYT80VQxIoJraAouCWyMQvzwD7i+/vrrRY4iiXZ70hSV
AQI6YWxwQM8orUcth1gwfp06dYAO+EUu+pBi7baMg6IBoAAWEQdnvW7rmFRC
I6BTAIXQTmN01MgQz+722K6uFl/3g7d/mCw/XGNxBF50HSAHSgccwRY/NR3r
tBKMAmpoiaHRxoyosaP8oCFoRbFBJ2k74gfCjHd3mpeZSsY482spQGAgiAKA
qu3rBxJnuVsMDtDa8M/oZT6GT556Sy6jFchl/AmRfZfHZUXal0gVZIKlC9QD
C5pb0AnLwyJQCxaBVMhNe7xRzkMSC/GgIcfa6UdflrHyabZtmFtPV7Dp+cEf
8bYetsy1d3jYS6qrVQ1luvNEkgNcr2DzeZhrb/OwFlouaY1n/5D7zlDw+DzM
de/y8OZXV/u5dqiNzXDwZC49U8Hjc861zcetHt48p1F+rm3om+nGl/azFLyZ
bjzJELZ4eHOdVqTm2uwfcpTZCt4sx1/Jg+708GzL1Fx7TnV1Kt+ao2ARdsjX
NntYFutUDWWO0wHJCysVrDnOq0leeYeHNd3JNVVDmeusReba8xS8uc7vyNz4
dg9vakKuoYZSmbA+4/WrFLxKBe82D29yRq7GJua59jLXnq/gzXPjyVz7Vg9v
YlSuVY4/Mj9eoOBVJezXzLVv8fDGZ+S6QMFaqGDNd7Bkrn2zh3VdRq4Llb0u
UrAWOh2SeeBGD+vqqFzZP8wxFyt45rmZmwY4Vzl5co4t8lys7H6JgsPnYc58
k4dnvVdmjr1EtV+q4C1R493o4Vl/n5ljLxU6lis4SxX96z2c4U6Ofo69XPFW
w1qmZHODh2UzqFTNZHlCf4zMVypYy53OSIRZ52ENcnJM1UxWOP2WefYqBY/P
wzx7rYd3ZVqeUjNZmbBPYy+rFbyVzt4kz1jj4Q2IynOVsuc1Ct4q5Q9We3j9
ovJcreCtVfBWK3+1ysPrk5HrWsdr8YXrFKw1TlbiS1d6WL0ycmXf4KNvULDW
OR0SH7/cw7JV4zCnhlBvcPoksWO9gsXnIfYs87AudTJNzYfXO5uR2Hajgsfn
ITYu9fAucTJNzV3ZP8xUb1LwbnTjyQx0iYdn33xk5po3ufFlVrlBwePzMDNc
7OHZNz2Z2skGx2vhz0YFb4Pjr8zCFnl4nZxcfe1ko9MBmUHdrGBtdDokOdpC
D6tjWq5QjU3K9m9RsDYp21/gYbWPyvVmZau3Kng3K1ud7+G1jcqV+IQs/TYF
Tz+v8vBaR+V6qxr/dgXvVoX/PA+PK7PRJyXX2xR/7lDwblP8rfTw7MqEkFtD
ruwbcuvNCtbtCbmbXHquh9XMydXn0pudPont36lg8XnIpWd7WHbFQyaXvlPp
+xYF705lL7M8vMZOrqlceouyx60K3hZlzzM9vIZOrqnZ2VblL+5S8LYqfzPD
wzvXyTU1w2L/4M+2KXh3Of6KP7zewzsnLVewbLuzffGz2xUswg5+erqHVTcj
1+1OB8T/71Swtjt9lPgxzcOqFZXrDqfvEpt2KXg7nL1IbJvq4dWIynVnwn5M
7Nyt4O1U8KZ4eOVRue5y7SWXvlvB2+XGk1x6sodX6uRK+xe5Eh/mHr6CkoC3
O2GvJneZ5OHZuXwql96jbP8eBetuZfsTPSy/5s/n0vcoe92rYN3jdEjyvfEe
1necXFO5NPuHXPJeBc88Nzko4XD1pp4X3etsRmz+PgWDz0NebGcIuf9yckzN
ie5TbfcpWPepsa61sP4jLUOZD+0T3O9XMPYpmm0lJPe/M3K7X/FSw9mvZGFn
K7m/ZmR2v5LvAQXnfqUftnKV+0tUXg8ovTuoYD2g9NbOfHJ/jsrtgLKJBxWs
A8qm7Hub3DfOnpkri9wOKns9pGAdVPZuZ1A5rjDUefKDCtZhBetB5YtsnSr3
r05+Pkc+rHzcEQXnkPKRdhaWs+sDU/kx+wW/+5CCc8TpifhtOwvj7qjMnOch
pzMSDx5WsPg8xBNb8eXer8x852FnCxKrjipYfB5inZ3R5X6blp/Mddg3xNFj
CtZRN5bEYfu2IfdlVH7H3LgS4x9RsPg85Aj2jQdXOZZ8++23b7755qOPPnrT
xpu3btuBDx988EGudka21mZK/vSnP7322mtotHrt+t1378EHs9uK1dSQs1jc
S77++usXX3wRTfoPn7Dr7r0nTpwwexmPKRu2teiSr7766plnnjl0+PCSZSvx
F5/NLk872+EKyvLjjz8xaux1M6pWLlh9x6bth9fdcR8+TJm1cOy144FwRUaH
LL4Vf//73x84+OCIMdfOXrgW7W+7+9jqW/bgw/gpc6ZOn2VwL3A6Kbmbxb0C
XNmyddvoqyfMXbwezTfvPb58w86qFbdcO/H6qgWLDW6UT8gJLZwK8AecGTtu
yrxlG5fccBf64S8+4xf8jqdcl8RVl0WAA2iLVt92+NS7ebdnDjRhaCBgq8NF
SWWmrwHW18+qXLFhe87uWc3ffeQ0yAGZ3/77X+nwiBv3w67fvJ/tzD5CboUl
7nnv/7h1D7xhO3zAV/zItV5c0VkIXCdOnQUYsvMVcBcuWW52JRY6W/HzjeDr
fvazn02YNgcYSi9gPWr8HONDiOMbb7wxYVql2X1Z5va8zl+xae99+/i8CJBm
L7ttxrwVB0+8VeZ2gEIJnnr6JFeLCXZhn6jdM1nqd9qqaQu9IrCeNHXGvcde
kX25UA6QG7wB5AQOmL2SfD5x+jwQEp6DF9dNmgFcOZrBGpw1WmHnwFyzWghO
Q7R+928erSZMnbP9gaf9pIf+cOfuu9fetjfsEsa4GN3oCkeD4kAk4TnwBvaG
8w8p2ms4OeMn88iu9cvZdX2FsMZrJ0wzONdyrcZPmWW8wWGnVdCi2N5ZPoeT
AN/D82U3bjv44KHwHKYOWwnP8YXv37iCUbCA8wCzY7t/yQu9gxe8GHP1OEMr
R4GHguWH59As2HHAQu9zNga/dr3GIkAhFjA5GEvAIkDhc1gvhBue6/3RA4eM
AIrhedgRTSyg33BTGosg19pOC8GeAAWEgbzwPGghnw8eOhLijO27ftBpMdhr
HtWxz4FVtf3HNaqCBdw+3OmZsZg5Z97OB589MxYjRo+FkM6MBRzZkBFj/hEW
iCVwzGceRfMqjBLnVRhF86qWsyEIUUtE6zi6IOaAAtEuvec+yPWwosLbmFji
YUWFtrEkFuEcALaCeFasXh+g/Oa3v4NCBkteuXHXlu27w/Mf/+Sn46bMDqPA
oZ48dSo8f/fdd6fPXRae4wt+Cli85TzzzPmrvFcpo1f61Ze/QzqA9A5ZCYI9
EgTj6+2cpgwODd8RBOBqERSXb30SH+gEeaJBGT3X5199jTCB0MOiG/qY+EkY
+ITv8I5IJgBj8R2PAx4dpJyKEHhK73fLrXdsvOvB4P3wBT8F78f4gIiKgOXj
Q/HcRevo8Zkgc89MHsPhC7DGoEADztFWO/LEKkmZb++3iNJnWByKvfYylSf0
YnQjdPQxGbmtfOTRRFFM2GjNrVXwLAj30G4dax52Vj55+myjLRVOJ/HdRI9E
LCoCBS+8/uHcqkUIwD6Oggmbt9wl7+b97jnuhypGkEKWC/kgbTRzgg0JTiSx
tbubSoGt3zYIip555YdTZ8wBx8scTnCxh448nPNrTLitiLuTi6FSHAsUm1ql
HauYnGE2bWRk9+SWAi/uLK22O04RSZm7lLl4gCj20kuvSP4AAE+cegkMg9qU
JbKg999/X/IHuyekFGoAwYAcpCbMGSFDqGveWaBkRMx0w051e2JAMXTZ24PR
5eVn4JU91aCCk6Nqm5uANB5pwIQTFmckyVGh8/ADJhvnqGE3nB+VU+XkqBmu
1bZjMtlGA/AOrOeWayarC1bebDKdYnf+CTQE+oZ0wOpXKTNccB1CY76KBmjG
9ujJ81LwiNni69XVfubL/axmdxj3dMIo4HXhvOBlC5BW54qgFohRiEHAhWvV
IAB2I+aF/swJeQvHTN084pkUnNJwdsVNkRhYxoMPg39Gzo6gxvEgVUQjOBTw
m+MhXZa9lH48OXWA43HW68cr4pIEVq/tzrtafqcd/iEvRUCECnLegBkDRhw2
8iooFNSKK5lZqaYo/X7XMrRAkEJrzBbQE3/xGbBMvm73HnAHjqEfIje7z/0J
ELKb3NpxHoJAGLt77/1Hjx6D7oCvXM8Iwd/Isx9qul33stOOb/3Cbmj7vIhl
PuTOYIjfYSi7kTkSZnPIFHbcvQ9TPEgWHOVI0BiRYE23sxIkm0f+faZwlCPR
i4IIsFbvxOZIUEbkkhgJc0iM5DhpKhbiR/yZBMl+xWiLmST64S8+c48EdwsV
st4aTt4I+yVpbaBc+OP33MLgrDE5vgtVqxT/yh1VP/jJr2kERWrfNEeAy5D5
eU1HDVgcRsCX1HtPPQIA/+QXv6Ha+/3isuueK4vAR5HYETeC2E6h0h22D6cK
kFOvOAsRzSEdEJ60Yi/4M1ljX0tZaJnDSji1RtHBsylu2H2KFUnZT63PCQGd
jLICP1hkmaMi9T436Bef37z3+eOnf2wshvBZXAxy4LkZZk562H73vkTa0/2E
9twPb+KUfbPLHVmm1Y3Js1XQX7Dy69nwu8kG7LsDg4VwgaejzN107OAJWxbg
m+Y/fvOXFbQi7k9eePvx5VtPBPjhZJMSZ3VVPC+D8EM8J/xZNx195nsfBfi/
+xpUPBaez7v5keVbnlyy+XH5DkxTJ9FwTzkYE6qBwqV8VCsYI83ZIuSS3RdW
yJ0+gSoW8HyvIn9OBMBz7d3pyl697CkMsmoREMRfWz7kgTGPtXnnp9/bMefy
Xrs/s/6syL9fPPrce8RwwsoDE1YerPTn06izWeR8AaMn5dGRw45rjrxu10n3
Jun7u9HWjezfWB1++p1ix9vrlj8wcdWDovE0hzAyLcLohh65jv1uT6IwA8jb
ch9dc/60DbHjUmf3ogv/CJ7d85973v4K/yQertRpgGBpoRZ5uwXjSgMcCzcv
309P6b55rrPkEuqEk8T+qjE3/FxW2SB6pN/DA396l0mrD105c9d1yx6In1xT
5E9fABPPiMW4brfMdPZeQn/ipLJ/8TU3fvyf/yVYJN8G4gcgVeR0ZcCMXUFi
4eQBYnGjOz0AojgjFjxxRU5oCc/XOS8F5TcyLItagj8pCE00hH80gn2zyx2K
UkWPeWPbq4hHVdC0S8XJuXNPqu3RNpWnmU1xvA//8lewy3Kp7JHnn94tB98g
mf35rJGr5/v1AXZtQ2p1hInJPC8NMh44a3ffaTumrDlU6rKRpAYX+xMuqrLn
E33mEOP5RHl3ro3B7h2b5TAbGNE9J/98uz/+28+mDVsx373EXOh8jn+Laykt
+aM7u8Gqwc7+1+80J0qVumxG/CJxQhyocmcCmfdDWUzNYS08SSmJ6WfVkqWU
usNccjlhpXT1K4okT+GZRCFGZ09ySp0oJbrAk9ASx//Ip7z+XTpQd2y5oNBn
qpKRhBNX/DtcP7Y5e65U1Nec1CT642lNnkTiM7aK5994wWuQRaHylFq3Ms/J
yK+M4R6URbcf5zlX8BYzb3xYtDuc2EQMkyezQcJeOg5D8L7ytLwD+MxhIqv8
fcbH07DG7v11odBn8Dyh3q/b9SOZt/jElfoOXAfNvnvOhqOCK8/dCbj6WWWV
PfQmgqvx2BrXYppykKM9jcp8Nlie9llRyOLKY34gdeoWchOvRzK6zNz9OOyl
9McMR/152klbMsEaynbosUIORItlwlTtLKPQn6wlo/vByNc89JH9vRrxTDaD
lUMrqTmznG9JaVjeSRsKAmuHmIZW3oN0LHrSVt7nVVX2WEHQI5aUOAWM0ilQ
HPNnEvpAuuM6Y/OFaZyVChFnvZqDY/7Z+mKepzZq/r1IbYgzAl0S52Kmw/wP
gCXrCNwtjsrW6VG1R82vDxVNqqG8QvaUNFOBKKl2HjHBn1yRcXiFXmlF4uZJ
wmcXKwR4lg33ohfy7azxjPROYX5F7QrnNFG7wgyv2Os2oXpJ0QMT4zKeC4m0
MuWh7Gc5GyoZ3aYn5BRWyRETfJqy9pDJabztpU5H89mEYKpObyv2mJpQEfFX
9AH0H6avI0Tjm9nTIatBwqoef5rc6AX3TVx5UPAN88QyZ9eSgxcquxVv5FWJ
CCdQkRjBmBdcB7HkPJerSoKnCnUHz80Ut9QpaaWJs+4cI+wPJR63xI+p8em7
nnE0Stxl3A+1hTgPwnOnXakIrH0XgHy24ebjH37yVjr+hfwus1J1kpNYah2W
Xe1lVrX5SQHxDedwxU8IVOd0hYzFMKOykvZX6ITneAtFZ53XKZ90yjssfDbN
HRh6hZDH1k+yS5VtEluf1Qi2ynZLE/mV8Q29XP5ULqh6C0jlUqH+URr1GPqU
QmWHyVFdmLViLeXTxC9JcVKr7KkZrF18D8ElzOLFsugJwvmwhS5inlWrwveS
aokiyUzSPy51upNaczvOySi1wrKus7Jb971gZsvFygqJaZgNR09PTGTAyRzL
yyXkLR5X99FRVBrFzuKcWjXGs4rhUNftPOln5wl8iK/PFeL2mpz1SOAr0xhq
pZKZHAxi2ZYnw8gBcvycSX1CXoAX4pD1jdTKEv89KdBcUqu4cguKlalYEYPw
5qAo5q8LGZlfi0Rll9sE0hmKeeKiXhN+tbNu7wXqV4tH33bo1a0HXxH89AmT
4VTj6LmXRf7cS3zQfilYpsscLKtSeGqfSTyTKwbrO+u755E3Nt7znPAp1PBY
2faZTcY6FZ6nvf/Mpbx+iZ/rUdOJpOzRgCrf9/iboSIdKnwc3c/UMxaXT0gx
6JHP3yQv8/OC08naz7POyvhaikc+ywihpkcMWJ4OehRqFvE9B3bNYSrrONdp
CHdTYFhCCjVfagTEL+8QqDGhVtfeaV4qH7YrEjNrN89143O9nqlBVKUrwBwt
ZBQcLdTn7OreIr+iD9QVRS1Mn5H6V38iJ9+KMacIKxq5L957Biqa7MkNkZqw
QgUsu0tkmKM7Nevk6ZjhbByO5vNhKpaMFiItRwuVrg5R2MOcpFMrWzli2GHL
EX1ey2KyjBiibLHSIrtu28zqvItkllUQ1UZ9XnjQEfL8lLNpWfnJKpanF91r
RvGB4gmc7A6fQVHta+jgCL8LnZyqXFkofoJtqLB2ylgKR9Krtf3ZpLIzmiP5
eTQExJFCzNE6dLd7LmusCYGzWtaR46fcBr0gd08qmhlJgCmJkndaMMSq5FuI
YFm8s4M5LleYDnAUp3w1Ty8N69P9ibpA1lS4+U7IFWrcOMH+OA5jEmXIcXRm
ynHCGtaihC2atx61HH1n0BXudwhrzosT1mUqmDXdc5k15JUGkKtPJ+zIYOXf
/EuthlDCOdF5ZUF2TVVmfXBvR3EqkzIZhFmtX+IkJZloDcfhqvg5vxxDz056
O+vyeVljR7GsrPU3GEhs5zjBc5YoDfE7YGTlPfsHL6D9lz4Lmes7nlIWU+Kw
SkEJZ1iXqNjazVl8avX2ZQmtYqbTRNlVfBy+RQvjhFyxm9P+VIbOcZKZynlK
z0qj44TKWonKObc7rso+unh/ffJymH+RqyeUtXi/lOoV8jjbK7Oe3q5QSnm9
Joq6Ro6rKbgh7+rupJPKQ8lLnQ00UZQTdvBzWvLbnAeQHYlsH3JALUFy5gml
9Y3VKHrmeanDNbVroXOaAom95yuLIOxQPSpV2X18h2/ntCwkghN22K/ZyNEh
/qpUSZT77MJe8UaufwoXJSmeNpiQb2NHUaqWMvPGhzHxDN+D9nL/c3KdfwdH
TSofaapk3dhhm8qgZ6x/KPU9aLnaZw1xdYj6gaZKRziOnsXrcYL0uZsy7ERi
f12H0P2DhLnG77ii1vqImv7dB0QPtuDBoZPvvPbux/AmsAgy3NRns3vd2zpf
lMo9mila7SjlPguj+THF/dHPv2BmoNfl+L3wPhpzLB2xmim+cCzvlYAmkIKa
YtCPP/89jATwCpSu3OlkITk3YXhfAkPGYAw/+IvP+EVXisnfx5Rt+LPK4bSM
HbKCz03f7Ohr0/jQN0qhPXM8k4U0V1bFkTAMJObXipVwSxdH8r6PJ49m4nLL
jHTt/ubEzpUmzq+Jl+EYfvdQtX2DD9abu56or2EnXxPngcTu2BdMrHb/SLfJ
1JjhPKq0yPsd4TjrWp6XYcWozIX7ndkOU9mHPtM9Po7npHzHIOLf+jkbSMXj
phn/01JpWXycsBerUD2/w1m85NFNFL3MQz1HM/2poY8oalspLtrdY5n4a71N
Kru4QFHTSnFpiON+Kt5a35+JYRcoyvSp+4wgIbNvpSjlGrRjSltbK8qGRceu
735NZQCtHHWiva0VdX5um4qX9aO8a+Wok0xd3wPg973L2rjWUeqOKn63UdSN
zOhbHYdNKt61dtjIzsQ2ijLCScazOlE7au2wFpno2wi2OPwk72sTpcrvkxTJ
t1VUjXbWytvl8GsNZ22piEPoYY9kW0XVaMedHe5UWsLRvpZwwh5PfSfCZmdz
crZSuyhVXHMa5mbtFFU880h79JLor20dn2XHZjtF2VUJDtFrl2Z+8ePLLlh9
M8Mdjio5fap9lKojDhOZH7VXVF0dlYyvpXh/6/sJj9sriq6OSqYwo9/tHNay
R1jf6cCzNsIe6gujVB1WEr9QUWV3sZcmreiN9//Z36fWXulDB0ULeydtB2mV
P5GnvcNQdkvrmyR48kjYbd0hSsEhJd0OigK7p9+sJnjzg89mbzh67bL773rw
ZYDzuIvUOyrc2Q/YvfjmL6atPTJh5cF7Hn0DyHisZb+4vq/iVoV1xyjWB5X0
LlJY8xxJ5UvxWzIG+RtFRMIXKQoIQ8UgFQDaOGxlJ72+LYOn04Sd6hdFqfH7
9UWSnRQ19tyAjA8tztjGBYp3nRRFY52NpXKN4oxtXOCwlrMG9J0dPMMnVJk7
Ral6QEm6s6JqTNRSy6J+rJmirLOijLB0TlqW8WXNFWX69pBN9nuo5XaOUna/
kvrFirJRmXFrRb1bE6UdFyuqRjnJ+FlMrSjP9K1WFyuqeB5UiNoXR6nar3jT
RVE1IqMn9o1oJkfgDJ2ZlMGmi6KKcJI5Qr2ofhNOeLugb2fhiVnhXUCXKFX7
FFVdFVU8T1jndQ3cr9n3PIksqquibKjjRyqva+B+TeV15zqZCHX6vhh//pjE
y65R6u5Tku+mqBscHdvqSyofr6ew6aYoG+wklMrHz4vyjrBCvq1vruHa8lDT
6xaljGfLhLMkLlGUDYzqTPO0T0T32gktCXACZQOjPrF5WtfBIQPHVLG7K2r4
TjXU4bpHqdnr+CunbHRX1FwRtetWzhem6ukVSjO6K4oIS/vCVmnOuFw4UUnW
lPn141JDuzRK2T0OG5H2pYqy/nbc5PuX9o7jqfcvpUorLlVUEU7y/Up7x51s
HpzAWt/9w10poYbVI0oVT3YKeV0PRVVfpx8em4ucPqbe2BUp7bhMUUU4ycr0
RY47qUjh30ZJRVbfQsR1R6FydFmUKv9OTnK9yxRVvR023jNbn1qm3s1WJw47
l/uFAkW9nE/I3mZVpiJFtdsWbeSg70HyZ2pK/aZnlCL/NkzywMsVRbZXxiOz
Xk2u7zzyXQxqMLhcUdIzKlFrJXkfGfYc+95N9zwHBPW9S36NoVRKLo/i709L
kxs4ein8ezgcUn7XY3bD7lMb7nmOji4jiR5RO+vpPM2q7U+v33XqDNzniaqh
GtIrir1/cyZQeivsuzsMUr7V9i3zkq0Oe2ach9O23z3qBy2cUs9hfEt6N233
XFMcYnfvKEXbldb1URTxjY/2rb2crCXHKIpyXkeebgmPRhHq+6v8PRIPZW9K
C5Rxt2uIlH2ilPEtU6j49lWUdcl4tD6KKn+DdcoedA7UJePR+jjOS05dEvVw
Ov/h+cUhYvaNUnWXsrJ+iqrOGY/W12EjGVN51F/pTLxTtFVfh6Pk1f7ml1Q+
rLNx7vcOEbNflLKtSl/7K8o6Rj1bP6ULtTLS0HPCjlGpEk6oiNV09KfyYT0v
5DnYIWr2j1Kma/sDFGUXRn1ef6UPdTPWoysQF0atsL/jvlTECCeZC+uKxGKH
n0TNAVGq7nT4CeevUFS1S2MjvnCA0oX6aU8n/kXXuNql/YL4Q89H4b6FlcqF
dY2L57OH6HlllDJWLUM+f6WirE0aZ8HmCqUL/tTWVCzQldY2aZwxgr77rVF0
NF1p5Sn3oaIyMEqZqVyanH6QoqhVRrf8rXGiA+dFdVTX+VtldOtKR41UzZpE
dVTX+Oc7aqSSMihKze0OR8nnNVUtM75goJJ/s6hPuUBR1SLqCwY6HKWa1izq
Vy5QlFXZ76GSMjhK2a0Jrhk8hyjKmjmMUt55kNKBCxz9Pha0UJR5+lP+e5DD
UWpPLaOjtVCU8Y6HED2HRCm7xeEoef1QRdn5US4OVvpAq0nG7maKsvOdnqVi
7mBFWZuMhjRTVFUqqoZGqdJngA9TVJ0X1fohShc4v9O5VhNF2XlpXyg50hCH
p1TW2mcs+nxFGe8MCXnBsChlmxTHhivK4t6JXApnt3aM+sLGirJGGV9InEJl
rWN0tMaKMt6uEupow6OUbVSUjVCUNchwUN+82DnqExsqqhpkfOJwx3mhqnNU
Oxoqqnj/TIi3I6JUbVB6MFJRVT+j8SMUNl2jPvFcRdU5UZ84QuHYNWrN5yrK
eEtPiLcjo5SxPhjmCqMUZXWjXmpkQhdMr0szPvEcRVndqE8knFBV6x4d7RxF
mTnD3cTb0VGKbnScl3nCaEVR7TQmyRX5+j7llC+sqyiq7aSQOueYcEJVza/M
8ppRV1Ezw+En8TZOlb7nYoyiqqbT9pRnHq10oHfaF77y1ocHDhyQtcKBMsLS
VUTCCpU1wvKW/Nb7n5j7/Gop6uizeGCft5REDO5vZPnFF1/UilLNqmiYP1yl
qK5wnivltceIfvR3PBl57fRcLjdr3tKwjyBQy7N4k29ZWM/65JNP7rzzTnN3
oMdZqm+E+9Jrb05fuqVZ9+uOPvVK2C0QKGfs+Nvf/lZaWrpp0yaBEmI082xe
rmZuT6sZ5cA6p08yz7iSevnhh0AMH9GxXPHEv63y/r63wwRomPsM6ymNs5jk
Z8+e3adP38LCoq59RrMMXq44VeZswr+5sTgWAQlgs2vXrmHDhtVT8rWwS0Bi
ly5dNt+1s2WXwVOW3CWRqjzGMQOtZ8+eAAVs6zmeSQZgs/iiGTNm7Nu3j5fO
1YhyjfnFyZMneYueaGWY01gu5sFFIIa/EDWE9OKLL5YpXvJsk2SU6eN4SQRl
92Gg10IuBS+HDh3avHnz4uLiqiXr/CuTUsVR7pzVbz4ud2OMHTvW3DvL/VFg
Cq/6o+dJcMXy2Nx2WFVV1d/+a9euXYOGje89etoH0NIYr+X+S1Jj7jLkeTuh
bsV7lMBvGDDv+TO3I1ZEec675IDFunXreI+j0bUKxx+Zd1kJllMsnv/4/Prr
r/NSUAxTqqRQ5LiUiopGqwuMy8lIQ9lYTSC0fr1xoJBJeXk5uPjWW299+eWX
mu95JR2Oq996WWsy90ZCo+nXwBPQYailZEL9nOPDOF599VXYx86dO2vXrg2O
Q+HQ/Isvf5s92SEhIzsXKgW6/i5IDFNtb8YEAI4VKnG0NBgGr/4F0eApuZyL
W4nN6PLAC9D4AAoE/vs9bTK7pM8huRQY90sB/rx581577TWKLZwOJXIrcPxL
xXy+q+B9vxQb1wjyOsxq55G11RfXqVOnZcuWGAcfLrvsMlm7CTl89JE5Jyzp
luQ9R5AkMdFv+awtl2NQ6ioIhMGBFu9aQa/f4yYWYXGpjaZ79uyBWM4//3zY
Oj6g/6efflqjRg2qczIVytwmyneF4DuE5eUqKyXRXaycXAh5Mb008WQvijge
OZnX8uJTY9n0IVA9uU+z1PFY5tmcd8ME0d7ey2v+5KEYzZo1gzcBY26//Xb8
xn3bXsYq4ehvoQApiXk8ax0yAlfxF+I2VuJ3+MscwepXRdeuXVu3bo2GDRo0
AE/x29GjR7/zne80bty4pKRk8uTJcgdwMlLz/BQvZ5Wy2OpjBaQJjvF6cPAD
H3glNoQOdTd30fo9kTKvIj4gecqUKZAMOOAtiRiWlZUdP35c8EnmiAVRSfv7
tRGQzHjsB1lU2X8QDzEIWTj9LloQW8jEZAj2RCp8KI1K3Ob7JWjNwAheAzZv
8c1w3NYiavg7eYEUVBh2BS7jx2p7ITYggWzuqAZXn3n9o2SSdYXTVojZW1gR
9YcOqADaXarGtfyogOutqKiAioCbIBBCKSgooFb/4Q9/KCwspMWUJcW59eAr
r7z9Cy94qR562coZSOBY0jp8LAmytRiYHANaBsFCKdkTrW+77TYQ88ILLyBG
gDCef5OsG9yw+xRADHZ+tqf9R98JgP6W6kKwkzc8i0cMcxGOzvt2gSgkT9+A
7uJDzyJbcyuzv+8XqkSlxAf8mCsA6bkSajn/Ba7b+X4FKGzbti0kBPRAJzBE
foKu6AgtAbCwSnL2xmMLb3/MVwrAZeBr9Ij0gWm8NDycMCnzYtu+BEKEcGEk
MGn88Mwzz9gDzZwPBlaXT75ryppDP/jJr+S2emgfyQJigI6hOBKGlQwu7zgp
dRXbr8LT+957702YMAF0rF27FmoPDl9xxRX+NnOpkQyrvOfEKx+GqgxYh7bm
7nftHTlamG0Nd3ZMUYusys7iecOtyAWOQvCAEPAZwihQvLNj1H355ZcR5aBX
yBxXrlwJ5OALeQM405zqxOpD8OIdufk8V4I+TAHxj6mU8bV55VnYtl+/fkhE
tmzZAv+az+fxd9CgQWJ1yaxo/S5zKmTIfWzWmKdzgGyAFy+O9mduJmtDJYjS
o0ePhtbWq1cPbgGu1GgZz8lYs/2ph5/7Yajv0KpAAG9i57QIn0FMOKFTZoFc
+UX2UhTlUUkwv8Fjn27ykm9KBFpNr+wLYRZuXbSHdGAevAZ+27Zt4CY0Gfgg
f6xTp+7KLY8yBUXzh8Ld87naTCOqbZiBblXbW7nRjZ6ej4IvMKMZr2cnhhdd
dNHUqVPpNVq1agV/CJkMGDQ8ueiUYU4lrdaT1/ZOD8jTLWBkKAu4DgFx5PDO
y9JZDJJAJz526tRp8eLF4sFBAwwX4x84cMDqg+ys0ZUrRjYgzPvLQTFEJjDw
BWAwNqimlof5Kys+eCw2xMwMGKJte/vP3Heud5FQnrYWXg73hQHQHL4CORSG
QQ9faLP1lwq0oSHw8nmIGuY0YNCIJi3aNW7S7ONf/jqzb8d6hCIoCoTF+Q5z
C3ymKPEXo3mXYOmoAU8HwEhPYET0RU2bNoXvO3bqLbCtoKDws19/qXfu+KzB
p6s2ltWEroGXwJyeEGIEMzjBgLfFU77eY4WpAklvrVq1EMQQSUEkBq9fvz5I
xUN8Rh6ayTo5bjIx5bhgI9SH4qBzohCq3XSA02bWf8rRlO04EL4yiWUAPIvc
ypjNcARwEqoTqm22mmWCLhQBjJ6/YNGClTfXOafhvKU3vv/Bh0RDS8zaXAXA
+NkLAAMH+lj8eMXgkYZftmZUvn//fppBj8t61qxVp0O3vixCINtAUy0jnj+W
zDRtvpPHaJQO/rJsQ/0GPXMX32C4xF0VTz/9NFHq0KEDpuMSXygY+1HJJns+
mx+PcHzoJ6QlS5Yuu3GH8TyWc/lk3IfZQyRsh/4MGTJiVDKl4DhawRmQdb4c
a9d5l8LaDz75ZnG+5MKOF0O1x4wZw6BZpORh9bIEnIAM8BctoFkXtG6/euMO
7qYwZ/PfsPlA7jvfmb94FWIDwDRp0gRarGdrzBSY/YWqnuVIibdHCqHx+c2f
fOEHXGNfiJwcRuB1vRDMp3fK8Jvn3yRXE1pbKPEZAP699YO3m7Zo8/YH/yzQ
mS0E6GAZMTkDb23TYs7eoXosCXPtfLnXrKdOfx9wMOaPfvQj4AqjR9MoZ/Pw
DMQN7VZt2r3/4WcJy2vN9FlVdevWpatCDgE3DrXQvGX01XXi/tUS16lIP/+n
f2p4XrO9Bx+1O0fyiA6IfCQOUQMTsmLFz9KExELFmFBZs8C/N77/Vt36DZ9/
+U1ChVNjXOZ0DOGjOMpHvoMPdecxzla8/6Rng3CYj0D58jEOmvwNzF6zZm39
Bo3f+NHHsmsp6REZjeDMGzZsCMcO3cRcRc7GCDyMr8/hvlmEGijRokVL6p3b
6MgjJ2T/Ci0f7hl/OenRHCRMXaEgTNiRyb9nzWnQuOlLr71JmCb20sbgGGC7
kulFtTBRu+bN9LryRWygfan8N/CPtf/ffvW7OUs3GYsY7TiQygmoayBu3rx5
O3fuDKf6C99quLFTdTxWVD/86c8XrNvx/ke/5I2kheA75IjJmEAJnKrhxk5V
5QjljbfeAZRf/eYPAoU1JZOFl5zZ/yWqt6OisOvEtClRnxrlZJd6Y1lHUc87
CpO1ZNZ5Q21ppqLU37QbqQ6HutDMKGWVCseRUf2qpyhjdhbqlyOdt0i9Ya6n
KOPap+yqyVCbnKUoq5uxYfYIK0VnRamaq/AbEfU79RVVIxSf2UuvCKivqOK7
WP1uqZvi/mxF2TmOFz6ycJ1leBM8O0rZHIXj8Aychooq/d58uOOpzyH0O/Nz
nTRTvv9ihd8cRdG5UR6zV8jg5kSpmq1wHJbAkXJvrKhKrk0w2A1zPhqKRR+t
1zc0jHpj7pALb6jnKqoaRu2BvcL76LlRqmYpHIc6HH0caaKoGqp4PMRZduo9
t16T0jjqLy9UnK9UlDWO+jD2Cu+lK6OUzVR4+n0/KT/fVFE3RGHkd/mk1ic0
VdSdn/GHXH0X3lbPU5T5G+VT/pC9Qn4wL0rZDIWjPxkt5bObK8oGK33wp5yl
1pQ0V5Q1y/hDs4LPvJGeryhqlvGDXNkW4vX8KDXXO2oEr/juo5aKmkFKBwY6
D5da99NSUdMi7QelleeUvEPWlLVI+C/yoLmjTGLtgihl0x2OyVWi8V1IehdX
Qgf4xiq5ykivqbwgKkl9ntNCRdUFaV5ITNAnNS2MUjbN/hpWsl7hZL8jdbaM
3s2V0IUrnZ/xa0n0utfWUctr5PCTt6KLFFWtHS9SccGfkCSxdlGUqqkO5+Sq
5pQv1Dv0BygeD3BWnfKFeq1y22ircxXnFyvK2jr/lYoN7BVi7eIoZZMdnrKq
tb+DlfKFep97f4eRrBbtH5WI3qF/YUay9RyOUsNfoihr7/iRig3sFd52LIlS
Nknh6M+oSflCvRe+X4LX5q2mP3EmZUF693vHjCXWVpQtVZSxRzIu1FZULY1S
NVHh19fhl/KJevd4X4eNrBbt6yw85RP1PvFO0Vb+ja1U9Jcpyjo5n6j2Toa3
GsuilE1QOPZJjy4+Ue+z1vtu+qRHB4P1npuLoxLlG6nwBmG5ouriqE9kr/BG
YHmUsvEKx94ZbdH7dXtHeyS1Re+Piq+WLHacl2r8CkVV16hPZK9QSV8RpWqc
wrFXxrr17tZeSg8uj1q33s92SdQnFjgc5d3VSkXZJVGf6Ov0EndXRim7TuHZ
M4qB3g96udKFnlEM9J5W7jv0XDv67A9NNXe1osbyJJ/k1P1PvAW4q6P4X6sw
uSyqG9HdnwmpXxbVjei+z6L7H39r7sZj1OVVCne2uO3+F6tufoS6uyqK9TVq
/PiOTL1r8jIl0R5RO+2tsLa9Sv1KOeVktO1bmKU+RlYn9k6C3rh1XK3wujTt
zcSX6n2FrA+E7OnStDdDq36KElpLWHnmd1Om4oGOPuwVYmNRFLt4BBqrcOye
8WZ6j5r3A5I9dc94swGKqu6OKlmb5XdTpmK3zoO6O6okNvq9kykNiudBVykc
s6eg6p1clyRwNJz3firlza6MebNELuerrKl8S2fk7BVyOV9HTVl0PCMfrfD0
57BG9v8E6ro5PCWb7hb1ZoMUdewVsmm/o9LnyXoGxR6hhlYzil18fjhK4RiP
gXr/U1clgXgMHKIo66ok4Gt7fl6j5/HsEapCdTMaFZ/Dj1T4dUngF7RY7xLq
ovBLnjkd/OAwRVUXhSN3VOp5qK6VsVeon9TPeIB4RUlXKOM5ld5Lc7HSkIud
T/Q1w5GKKvYIlav4bkpdrWWvUEtrGPWJ8YrtcIVjZ4ej99t6f0ZnxfnOTp98
jWS0oqqz4np8V+UMRRV7hYpQfDfZjChVwxSOzOyTflvvVOikcLzIWXOqlnWV
oqyTwrFp1CdOV5SxV6ijNY1a//QoZbpS2dHhmfLdVyvqdLXV7ypP1SCvVtTp
aqvfWep94lRFmelh6mjxvZNToxQNUbjFT2C+VlHUUXE+fp7ytYoi9goVttYZ
XzhZUdTRjSt1tNYZXzg5StVghZ/fpZ7y1eMUVR2UZlyY8IWhtj9OUcVeobpm
940XJX3hREUVq80hsqp9k+DDxChVgxR+8bN5JiiqfG1bzi5tn/GDExVF/nxF
uam7Q8IPaj6omotQZaKq3zeZignjopQNFM31uHn/N1lR4+tlKW4n/d9kRY0+
g9LvoIzoaqCGvcIK8M4JHoRYcG2UGp/xidbaOlvK/01VVLV1OEo27ut5Kf83
VVHW1uEo2bjfRRnxK6rql6gw+ewne/tThjJdnWzj8Ez5v+mKujaJXiYrbxPF
c7qizp8cKVl59yhPrlLUtVHUdXdjpWLCVVHq+isNbp3GU3zhDEVda6UpvspM
fop+zVDUtXZ4StUqexb+aEUZe4T6WfZU+/jeyH4Kv1ZR/Z+lqGql+Ngqqv+z
FFWtHI6p+lM25wpUsUeon/V2fPAxIb4zt6/Cj+8etK+eo6jSZ3eyVzxvVW9D
ElT1i441TFHmT9+WGlr8RPf4Dvg+Cs/sue/zFGX+hHTRjpYZPs5TVPmzzqVa
dUVUL4Yoqtgr1M+uiOpF/ByG3grHFhmdn6+oaqG0o0VG5+crqtgj1LAGRX3N
IEUVe4U11PH3n/ETQXopHP05GSk/tVBR1lxpR/xUkIWKuuaO+1Lrip+reaWi
jr3CKuP4CZrxc2kuV3j6HDvFz8WKumZKS3yOHanDqDfDidpX9rz0AYqyZm5c
yQayJ6PHzxHqqfDzJ4CkdH+poqqp0hJ/3kekZhaoYq9Q9xqTseV+iiqemhGy
gasythw/zeoyhV+TqJ9arqg6X2lHk6ifWq6oOt9BkbpX9kTwUD9VaxQSmYCt
3aZy5fi5aj0UjudleLhKUeVv9RCun5fh4SpFkb6LaVxCJ3QdO1DEXqHqMi6h
E4Hn8XMJfX1TcGyc0fc1iqrGDkd5531eRt/XKKoaO/wkp5no7DfydkGtkknU
4yZG7SN+/qWvb4r2Nk7jCHDrFFX+dqL9iXuiUvNX45/WKcr8e3vh/BTXK/JW
KFDGXqGWNCXqz+KnsHZT2uvXVqX86HpFXUOFp19blao3rFfUNVR4Xm+5mH2T
Fyhjj1B1me74kYoNl0Qp87VNyREbOBxT/vomRVkDpSUNnO6nakQ3KcrYS61+
TM359CmF7KFWP6bsJH5us69tShblV/il/PVGRZVe/8Beup63UVF1ruL+XNcr
NTfXJ6Hrs67nZvxa/BTxixVl8frrzYqy+grHbP31FkVVfYVfleNgyifq8/jZ
K1Rf2EvHofgp/bq+eY6TtffbtymqzlHacY7zN75GdJuiij1CzWth1Cfqmx7Y
K9TjFkZ9Yvz+h04Kx3ppnwi87lBU1VOcj580dIeiTJ8wviTqE9srytgr1OWW
RH1i+yhlFyk8/Y02KZ94p6KursLT31+T8ol3KurYK9S/VmR8YltFGXuELGB5
1Ce2jVKma5z+RKOUT9yqKKvjeomW1I76xK2KsjpOAlKjW53xifq0Qr/qXmp0
qzM+MX5HUQelxf7OhJRP3Kaoqu3wE87XivrEbYqq2g6KcH9d1Ce2VJTxxIZQ
r7sh4xMviFKm1/DWjPrEHYoyjhayc9sr5RN3Kqr83a+S39zkOJh6z9ZcUcVe
oVbHXvo9W/MoZe2VFtdI4EifuFtR5e8Nluy8RsJS6BN3K6pqOKokt9kUtcim
iip/u6zU6DYleBHiQ9MoVb7mKbkscUz67T2KKn9ajmhGhbPmlHfboyjz56VI
bnOr6xVZXR4oY69Qn7vV+bVUjGgSpSxZ7zR4xk8/3quoK1caEt9HtVdRV+7w
lExgc4aL+qRCfZ7HHVEuNo5S5mudksuWRbXkPkVZmdKSsqiW3Kco06dybM1Y
pj6tsExRtjWh9US4YZQq1iBDHut3AaZ89n5FlT+9QzSkNOrd9iuq/IkbUgPb
7nqlPGl9RRl7hVrdducTfXw4N0qZpbfo008//Zn99/nnn5c4rCW7LYmOf7/t
hx537Hnk6JOnv/rqqxLF25IMBrZP8d///nd0W3X7gedeev3rr7+WnWWhOrYr
ylvG/2+//RZ9567d8+Y7P/rTn/6U0+cm7IpymH3RHn3HL9iKv4Aj9DPDxfct
W7eNGD12/JQ5BROnz8sVXTvx+rHXjt+5+248KnSUScaZz+iZpawcI9y08ebB
Q0cCwrWT54yfVjl23JRxE6c+cPBBEF2o+JPP6J6FUgZWrl67fuCQEYByzaTZ
E6ZVjr56wtTps44//oTsEAy1tj1R67J+sgwyrVqweMiIMYBz9cTZE6dXjhhz
7cw581559VWBE6qEe6L2Rjhvv/02eqEv4IydOAt/AROQP/jgA87vJZ/G9wmT
r1+/ef/BE28VHX3+x7nS/ce/t/a2vfgRj6rdOREAXJzxQPaOqiJgNm7S9E3b
Dx8+9S4h3HvslRUbtl8/qxLEVNvDH6je8RPNeNMV+DRu8szb7j6WK7Yw7j5y
etHq24AwGFttj3FgSe/eqM+1dlQEcUFoUIa79j9loZTsfPDZuYvWQTAQMprI
WQL3RT1waUKnrp+3DF0tjCIAmzJrIX7EI96Oyrx6+87d+B3cypWadsX4hO+b
t+8ViyiMYvqAw/TGmzYBNXCdvUEvEL/nwCNiE4VRHB9wOIIxYA84XupwBPf2
PfQURnkgIyeu34XVQiQQTK7M9gGvIbe9R57FCPdHJcN+cC7UEPYrxKepM+YY
H2DfwUkuDi0AOaZBhflTNqNq9emXXqLT0prO++eOPHR02fotoQe0/Scf/pQ9
tE6zB2SAwU3jcosJyB95zRQoCJ+nbJt2u2TZys17j4cekNGY66YYH3QwY8dc
CwzJgEuQBrEqxCd8x69yh2sdx8uJU2dBeLkaVs/wCbz81Ze/S3m/B21bGMGU
mVXAVdrCOiZNnfH5V1+nvB3bwmqheqaZbVsIuULS5pF9nk/688effGrByptr
2nYb73rwllvvCO2S/hsmAaGzHT7gq2nSLUFN4JJtVQRbHnbNTIaMQ4ortSyc
lRt3XTN9mcmBDtvn4Ojk6bONLfD5/BWbTp46ZR7Z/kWQ5z1Hnh86ZiLYwBbT
5y7jKR9yhyIo2/7A08OumpSrbZ/Dk0PxzCNbA5I5B2QN52wasBX8Gy1boMBl
wQbNI44CuYy5epyRHvF88cUX5y5eH56DIvho84jPDz54aNmN28Jz2AicR3i+
dduOdXfcF56vvmXP7rv3aCyfeeaZecs2BixnVK188803A5b79t+/fMPO8ByG
T08pzxGOIIIzUwnHDu8UsABTEb4CloiIIDxGZRLLQ4cPL7nhrjDKgtV3PPro
o2GUW2/ffNPWA+H57IVrX3vttfAcign1DM8RYhCjw3MEYihEeI54CLPxOmp0
CuHSPKpjn/e/crDkOF0SWAaOx7EMuhvHEoEcBndmLDEqfj8zlviCn/4RlkAJ
iAUoED+UIIyiqdDar6kI2h+nArEcQSBGhdd7KIGWOJQQqnhmXjzx5JMLVt0a
4wWfQ9Wh8Cm9GzbyqmBdMBUYTHgOlIF40EsoIVQxPAfJIFxjCcJGjb3O+Mu4
DQcfELdh7QO0DWsfEGyYz4898siiNZvDc7AEjAlY0mciX0EA9j4zX7n0xmPH
T7AmgmACh0f9QS6KbCq0A2rPnv4u28FLI7g9qHhXw/F20vS5UAJGqhK4YjSH
T376tQ8fff6Hc+YthAsgzEJGHx/VShB70BaBBTH01Ks/QbSBJKQto4/hJiNA
XaV/NuoVe8nALSMK5wowAcnlF9/xOEIlgAL0L+2ZXPtUdLC4FyNII1RX28xv
+dYn2bsYn9Ab6IMIM1vcryIH6UZKgMTAPLJZWj5JN7oDmUILjSkwdAF5j4+t
hUhBkIiE3klOoDdQsL2L+LoRyg8TqKlsIckXqP+kabMMp8tdPJ44ZeavPv+N
7BziLNEyx2KFyIxhIFokFiaD4v1+P3z/w4nT5hoZlDuNBM3/+ke3awkt0TFA
ufne5xG9AeXDT74yVVZCee7FV4GkyTnKXR42d/6Sb//9r7yZTtMKTpUaaCUs
LvHfoSOPwgMYfpW7fAB5qOlOGFBHwHj5Bx8jjyG/SgyMQkhe6pHE+M5tuxHi
bdrmtBXf9963T3LCes5S51YtMhmnzVLL8IkJPXJcpkjV7jK8XA1LOeYJEKw3
DVYe86xiQgEQJZF6gvASm9JhVGRAzO6BLdAGsGp7Lx4AESJ+54I9QPQV0DxX
L4IkOAuYDgRiIebB3ZnzV0F5v/m3P0OwaHDXGfTIQi8HXyBp8pZzYai8mRBN
nglVsTCLoNuQG2eT22NcBhBCA1hWE6rdwb7AE44G+QGMq8R5O/gFM6vkXISz
OM584BbhuYpgvIjOK27BV/xIiZVAjzAORmC+id9ASq6Oky7QMNmcrTKZW5uB
GR5BK9mWsyJEJeQtxm3b2QOC3LUTpj319EmOAFzRhe+BKFeIUkag7ZvKEutY
kCj4j0egkecYQYQQJBgFd8wRkALBT0M6b7zxhj89jkiB55ud/WFAM4Qdx5za
95W7FA8D4jeDA3tD76B9iLyIxBwB6Q3SBUxuYPnbnSWCGQEeizkULg0dWijw
oIzwejAnDw8f8BU/wm3blQ3u7eFXXyGowKHmChYuXm697YkTJ8y8xc6IS6Hv
gEzmsQiFv8CjtuUdJ4SmId938c0UHtOvmrqCZCS0TQyOBNOOZv6YyIJcxMzX
eLIhOnM0MhK/QRNFTiyx+7HE8tgcI4I9rEGAYYiZYQxkrAirJgJxjk/h4j8w
zUj9DsddKIIZqJb1whA+iKEtFjg9wS+2seUMkiSkThhi3sKl+IuUFMkdlJG1
e0AWaREeX/vRDgnPKzB5UwY7QRKUBInP+MXEQ1ZFzDqCAiiavwkVztiAsvCK
AA/PMAIQrWlH4IsT05j3LHHGbqRTqJ7XdhBFYwmRDIIc0IUQvb8WiJS3faSe
+3PXhQukmcXOoC+B6zUcRr//45+NXRTZ79Q4K27bPmB8t+Iy+8MCABIBSvp7
l5Xpf7nnqNUsWePjK4fUEKEKfPjRz78As3MVim/+licQbrIJjgomiqYwUtM3
BHjWoX1ucpcKxbVblBURHkYWTSE8OLEUPOgWXGiQSuBquX1+6ns/paUIPIyf
4orZRrr1yZATBK6WOR98+i1z0nOuWNGfd/TjdxPBeiW4Cn0E46ypON4L1sRi
68FXNtzzrPlY6rASKm92WIFQw1WbeRT6YCYR3NuxwNv50Gvrdp4M8KBF0t7f
WiXaT3hUxACPPjTAe8id8ipSCVrBvGPRHcfvPvo9G8gdl6R9UotAQrgjOtV/
6RbEnVdDf+gDsw7pz/Zm/RS5yro6hiAUtC11dInVkq75tz4688aHPdyiuZuO
Ldn8OF8db0xw1ugfMYG9CCfOUVZrIBTMu/mRXOGsm44muVOEIdZsf4qZ0kZl
BSXKX5/jtFIgeH7J++xNTutM+rLFyXvOhqOTVx+au/GYwOPGhsAfRiajlfc4
K4PTDvKdteHo1LWHAUX6B/3xtyLgd5NpJPmLtIpYojnf7dw97pJG3adN8vwd
v+LAqAX3ATo5kQfFaukB+1VXf7a7slev3Z/J6kzIU+Tk89bUipw7r+6aGuea
pfePWbRvjh8H+qmKlXqcJcpuSpVecZz1wzunxkFLqQmeo+BxPVGyWmtvcnBa
dfWS+4dV3lO58ZES5yXFflmthjDwO6DjV2J6GmArdyNVl5WcYSSeC63WSIAK
jgUejFm4b0TV3sqbH9EaW+p8DX43Hrr8H4xUKyFr70EgttLQbvdGxI+8GNSa
Dk2njVlzqP/1O4ECELFxrNR70GqTDz14Scu5t9oVNUkoZvRFTvIyh6I/ZRJq
HtVPtF+x/3Rq1BErD2BUMBms5qje71oRP9C15Zy7bOFej+pv/xQrZxSA7PSo
O+bsnIvnyVEnuTQZ3fPSDty0cMvUOPZssvhpFyanJ2+pKH2n7Ri94D6hn2mw
t8Rixg/+Z2bfmp4z4XF2vPRaIuIFL8OBqFR9pm6/dukDYimwSInb/r2qx8u/
hfn/gJddISErFhlzq1yyKyOy7Xv/9i1QmTS8Ta7AHNNfv9HwXbahyAeud8CM
nX2nb79myf2wvoMnju/uVXlatNGM/ay+/6LEwA1tHD4LnN+UPJJ6gn4inXMT
OL1leTGie444lSmcpq87AoSgr3065XJFpkWJ5YFB54mEA8n9Y3yCnyxXcTyJ
z7M2p/L4FOe6r0nik/M5NsCdrvStZEwnoULxFjn5Z1sV2WeC1PV2TP2WqMj5
K3ik65Y9AO2GIiEwlLksNOmdihFKvB6ZE6m1HvFeC4dUQI8zsIBdGvnis3DS
Y51aJ0isYZnQGugOUAbiiLHEmkWUgLXPMvGfmX//d7E+C0//cQsBnrCURN5F
mTJoiirYP6crbaeXt4+HFkgrWE+HqSFHLoEbGjT77l5TtkFNb9pz/47L5552
ECrS67U+TfPTfJYze2EpUlGrcP6Crkxs2mPyxG3XwD7imBQjc7hy5q5eU9a2
Pjd3+crv0gdWJN8PZmSawCHEkgoXvcVnKRz23zA6hQMNlrlXvmrqwKbXHWBE
wFhgvfNl+Gb0TCwjjG7PysusoSh2dgBlgfGTvdPWHi5z1icZAVff+BkA/gOx
XqMEYzem0yj616SGCa6lcc1P4KnX/RJPfDp++sfAEHjCg85Y/1CZ8njEE67K
42neyf+38Ezwruwf8DKp3b6+IpIKM94iAW1oJpkf77j80kWn2Q4SFIkyO4Qj
GjX/XhB2/Q13res2Fe39iTL2Xe7+qovGnwInCjzu9IDzoloVPNi5GSxYJYhi
UQzHMnTuPcBizKW53JTjIY7aN8P7F3ee+Ox//lcGB558GvKVGsofZXHgDEXr
ts0NizgbTmiK9TS2X2bkySn83Eokn5VAOPCQsFaT7TMahYqWlXKebKtyVSiX
NRUnsTV6YGNioVdk0SliWe0yoUKv03FMUytSS52PP3TyHbhyeDf4uDBjF89U
5nibqsMAa+VDz45tXvGxrPrsfK2R0HDOA8LYIZ4H/y3RweqM9prWY5mq3VHz
YuoF4Y/FoOTPf/n5rI7XTpQI93N55vMa8dbM7kIVpaGQ4AzYDjzC4shh5V0H
DGffcbOa0rSoPC1j/vHffjat/dUTZd3yx6kxgx35mobQ2lCEHpwZlN2kL7kc
tJcZOGfEsFiGRjQsdx7QxX5RD3teZGpNCVfF3vvYGy+++QtjQ9SDUKmhxHxW
LpWjoM3FGj83pv0hyNuiJZzQHpicIG7JE6V5nyvoOnLy3We++xFCFrELdS/C
13U3FrX+MXblTvuS2hnhGv2uP6E0NRaQylhEJTOSXpWVlcxRCl2W6bIK6JQt
I322e/fpoAslgoT5lQBOyVxk/5Shy5Hdy7wQYktVbkK10mmL4GDp7HUBs6Xu
a6xFlMKuPIM4wSeZ+czoJ2T/wP4Zw1d+iDyQo7NI4C3M+AypIjbyvojxju8U
rDGt6ZAbCEspcrNwyT3E/h3LZR2x0w4Hx54Sklr9Vcd5p1RlLtRPyx2mKVmx
WJvUC88nlyIk9cJjleWMzps9hn6PTB2nLVLnzitfwjHA3hSGYYZ/dgy54ttj
IvmH5ltSb/1cQqqUYS5d5KmrdF6t8jSLg/AzxqtZ3EqXbH78tXcEvWpJws1w
pSQn8Uu1CfafLr1uw3xXkmFl4b7H31y25cmAQ6j0NfJ+Qag1tN750V+9bIve
/CDYb4HzKkJ9PoYBzGrB1evnutraAqcxUP9FdxwX3Q21wUYxLtiJvKguuVBW
uemYOL/gJpSehAf+o5MI7/vQlY9znK5suOe5hbc73ELdkbris8vwdiGpK9ru
CskP43VLqpVfk0+8AVTxzYMhrnp3FHGFT15/96ngA0JNnLiGmrh/0/B/iqt8
/Me8TWq7fmeg7KqIWQu9tPbQBc4+uIkl46OsrVUk5P+ZS1/SN9faDLnI773B
T/4tj9RVz0vjclqiRXku16b30pAbwqe53TEmxxJ8XTog88AoPkmHJPj4PRuu
Spqov54JHyZUVe517r//7e/ceFMd2hR67Ul4rl5uom6wEazsKUSZugjXvvv9
E/jVR4qUXoV8lHpHRga98riL1FSeXORrB0BXon2Gbx7D1N45YujXzIMB2of5
PTEpzQv5Qf4fYCizVs03av4Z+VkrofV+TiFjB6vj7qPk/NS8//AnBcsuNAsl
NVeY47guO614q5K37ir7ukNOpkn+at6OEHrYrUboyd2xrN77vTbVbo5YqHxK
c4dF8i1zcXJJhqkzWWiZSgPngF6zqtNzwPAuhRE1ZJLUr1D7Xuegp/Ye+v3W
1Ipqu0hDfF6wc8IO7/GKVQTmqhdW10OmXez0R6yzwmFAC8B/Zv8PawRhjySr
ObqOMcPppuwr4/2wHiNIt5WjxMvQaH2h0xDZS0noep8ioYfdRYTuKxRQAUL3
77NJVLi5UTRkhsPhoeT9FJwNhl1IhM7FPFX2RSl3EIZcqlhZ5poo1oQb9ikR
rrcRIOt3JqbghpwhKbeQa+qcvCLxHCSEk8dlV0T8/pppjqeyo4z3CgJPrnhC
k9bOvsSa9Ynm8RNBpzluyt4fwqXWse5GuHzHZey42OmArHWY5ryEX43fyNmO
7BIpStgSmCv7VkNOQD6GWsKqjGcgxLCbyu8SquLqp1rK3xFimDUnJRPyprya
PdZweMnOU3+SvNDBsz30+6DJSjJ5N4qsJmyd8FYmD8grWho5eafiy2QlF/aC
F2a2KVDpu8Ko4fwc1nmSez8aO2pkhxZ7ACmp8NRwEKuSqwtClXy58xE+hWis
NKzYeRUqpOzkDe/r887HigdLrO5LRPISJbsaDorM5Yh3OI/A36WU2hc/QXkJ
vwdQoLZxOim45JX1+7uWUtnuBNUqDjVUQ/KOQ3JW03iHa2oP0nmqlYZaI6Ht
gUOhwrskiut5zk5FI+JQg58qUX6qe0I6es1KkKH3xrIDsYmzXZ/4Xqe8QS+l
2U0yenWdshB/h4Jo7rWO3sh+5mAB/la1FOahkrUoaneEErKUhspnlCifkeRS
iDilipcNnI+Qnau8ISuZWV2taNR3fJzv+Op94tXK+vooPtutEZmdk/rErEbO
C6ToC754gYOSihr6BK2GyoZ11TLJpeD32SpUYRo6DyR7mXnyms5dRitr6ad4
y146urNXOH+jn9Jb3nup9+dy9384vaCR6yUU6HUI86Jj+zPRZE99Y2VTZWru
wl14djVZuffHnPsBwtaDr+x66Lv44LPWMPPX50o1czruz3cwOjBCWcoAxfdm
aZkL3+2t5lBx3l0VzkAa4XTZx/9mjt7kSV9l4L2nhFa74NbHjr/4Y5MD6WoX
zxJKnhLRzFEmZ4ERpre4KrtqB1TO2XAUf80KnkKVsSe4mqcvBWRKyFBmpvbG
XTOQcCUDhkuerGbmNs2jvmeosqorlRyap+UgOd1QZ0Vy1u6VSpN5+2AyhjdX
mkTfyfX1gAPhcV2E332PvxgM8dhkhHOdp/V10+YKT8LDY/QAaRAv4VW5vfn4
Bb/zBUMuuVOY2zjsR+Gm3xEuv3tOyvyMt8/pWDhIWdwgRXELx/9UDjZQtRqs
6BoYHauFakU7RROZp+m7pQvcKHKKQnzdUgslxSaJXiF39RwVqBiSFRTxlY2E
i/4+POFHy4xO+HONxdqGqu/+RPVUfjRA2dNQ9X1AVM9bKk/RSnFojtPzVDWn
pfIYrRQHLk9R3FrZ0gUZ/9JXSXuE0hn2SOYgfZWkhysIfaN+0p+4K5LU5xjN
cn4yVWHwJ+5KZImfZeSobaN8sZ93p+LQ5Qr/UY5HUqlp5Xjk84leCvdRytfw
HiodW1sp3Nsoiv2MPPWeu5WzdMk82pyVYp6dE+J3/I7CHkrTxjjblLpG6yj+
+nZi08vErMsy/CGOYRahT9+yJxCm3oy2cX5OTl6Ln7zlqGzneCL5nD83PGVP
+o6bsY43kvm2SeulxI1LlJTYK+Q2l2T0v62SUDtFrd3AGrl/MmDS7qzU8pSn
kHv6M+BT/lbfvHKNwqqt41HKt+ubV65RmF0c9W/tVCt9btwk1yvlu9spTsbP
jXNUX+jokTlm+4xv1mfnXZf47uWQwd3fKCKadl1C8wwtF0X51N5RLBZyoaJ4
QtQ3t3eeRE5vu/CsFHdw+iq1jgszvrmDktZ4xaMLM7rZQfmD8Q6CzLEvjNqA
PzFNJKVPPPRn2aZ8s78dQiJF/MRDR21HRW2HqG/WljIx1ivle6hlwedPdDyS
uV7bqG8jrmFm2lFRfG3UN/v7OiTrip9c6Sjm01AX7pjxzSFKBF+sK2AdM/iH
KBHiuq5wZWOYv6dUZpn6rM6rXQ/vozs6aiVb73RWajup1t6uUhbSwuEtsXaq
4tFFCf0M8auF0rSpjkdSE8+eH3+RwyZ510eC2qvS3gVka2l1Piu1nZUmdIp6
QD3jnR7jaCaO6VO/r3eYyalp55/Fz4VT4y5WFI9yvVJRpJPStvgps45qf3eq
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
9WErJWXaK0lnQ72lZI9bqR4tdD0WG6aHwjy9S2LbzOjolqrdHgrrFm40Mzq6
h6NDft6LqNVK9djnuxVdcWvJHrdUPVqkZNqfKAjHNHeYZuyDXk7TeB3dQvFO
d8WZzZ3UZ3R0LycvXke3UJKg/ey0J+RtJXvbQvWG++c6WrXKnZuz+U5z2jaj
ow9S2k7v1R/kamV09GmOcl5HN1earoXqsc8xK/P97SV73Fz1aGlddpby+8fC
LelM9v0cHTI6Wu926rjb9BaPdbS17HI6+kDVY+05qj11N5bs8UGqR1dGtV/x
kauV93BGR6ezzxygKHesavdAp/28jh7kZCWjow9QEnaQ6q2Gc0fJ3h6o+H+Z
w0rWMZ3Vs9qzBpaDnZahjhZt28xhIbZbZ/XcLFlrsKNcJsZEMyVl2hdav7+z
ZI+bKf5focbzSDUuPiZVRkcPzY3W/qpeHIPbjEM6ttX5WTrIDLe/qnuA6rE/
FREeuKtkj7U3/0rH4bIP0UlB8yvezGnFiJw07u94R9ZhnRRWfsWbkXq2E89u
+ynKae/+/Zx8yyx6d8ne+hxFsirgbojaW4q4ZV+HZWYmGZPUtqasWV/r+Nv7
utIZjW7byMxq+ypp2l/1lO/Dvtimkj3VN0+4AxJ2dvRuTNqDbnyy/zxlVLtA
JT3oJiRpoOPC76t6zPdhb2tzyR43VT2+QdXWOWOb5Hg2nVm3iaLcoardJjme
nZzk7SZKspqq3mo495Tsrb/1IzbQTYo72qnnxjmdlPaStuV0rO3ouVFSJ01P
6q/GSrr0jSz9fkvJHrO0Xj+G8WyjxqVhsn+zc3TQETPbqHFIn/zNStKhkarb
WPW4keKBe0v22GMm9vN6JbMHK2j+nnSGf+fl+LyhotzBSp4bJPl3Xo7PGyrK
JWOLRvJ9X8neNlS9uTXSxcELPXBLbVI3LUzqsVqlk01bRlc3SOqlhTn91UBJ
k44cyPaD7r6/ZE8bqJ7YQLG5qNWBS2qSfbo82f8axSM6BndNrm9LkjTwXkfC
Iw1Uj3XOlgdK9rhW9WhjVDtErg7rmeocz16V5O04UpbZj9S39WpyPHtVkrd9
fEPhtVrVWw9H9i4fLNnbGsX3dyqsmrkxkbVMVU4nXZPTXYZrqxQW2narcrUy
u9bXZPWXUK5K9VjHQaxSlH0o2WNL7+pdu3ZtvOPOOXMXnN5/cN+B5+LLAw8+
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
MTkZtdGzKv769tucY3/Uo4eZY89WNDhWYXWMouk5ThfI2kXHzr9KSQ6xG6Sw
OzYppzaimZljd3bqxDnW3JcYpGT8OIXhsW48xH5l/N9gg+gcBnqHxdqrUus/
s5kPcrLK6A16jh2o9GMXheFxCsMzHY3EDtG5JZZGutHnrAsZte+Ishzn5PZy
h+ErffqEOba/gyg06aow7OLGR9ZfPm6v2CE6s8kSRS27ghHeCJTtmpVducdv
dyMyO0Vmju2r6nZTGMaZ1sx69wz3LDsDOtvM5YrjbK4mkalAB9uvzH13i11m
jj1N0f0EhdnxCpPTFaY6889ihZldu4aI5MJDzLQd3x5fxF+snz8w++jhh3ur
UeiuMPN522QUfdxaGeXuCrNFSrPZzF2iJYP8neBkN3OfW6K4RDsUvVQ/T1TY
dVdS0EtJic6Ixb2aMDPYHRCJV/9KNqtULk6L3d3IzLEnK+x6KOxOVFrkZIVd
D4XdQqcnZVa1EMMcKDqd+d10XBXbkyIGlHMthvgkNRInKex6OG6RMfFrf1nh
6vxplyoqWWxzmRF8lNJM3A3mGYx3DE5UI9FTYedz3cm6TWdv66mwW6A4zI60
5NgI9kbPnKzOIzXVPNtNjcTJCjsdo/YEhe3JCrv5SjKtlEimi2CjnZyT17kO
O8630Mdmvu3qoAn0UxR2J6sxoXYJNsgpCjvufIVVg9UuBW3fnpKUWeZC1atu
zlbB7uilMCQGweo0c4exQ05VmF3itI+suOycIblOwrqgV1JemZfWH2LJPHuM
GwmxPU5VmHkNIhxzrNMwYotoDOdEmt3oRzvvFvzKRdZMpyZlViKSRSdFZp49
Wo1Gb4Whj6Mt43K0wqCPwnC2opa1XYLPo9TqnZRba3nlTmSOUKNymsKQGIcV
4pGKGqcpDGep8tbKlHVmoHyfSHbpKTXTYRdPtblV4ekKuz6KHjpe5ukKu4sV
va11atfzhmNt6UxkHeZCxWLHz7F6bd9XYXSawvhwBbGvwmim4tFlFqNxSsot
ZrmoNHaFlJlj2yvqn6GwO12Ndgeltc5Q2M1Qsm1XQOLlFHRWXyezmbNou7os
YnFN7LDcPkTRop/C7gwlLYco2vRT2E1XutGuIGU/KKybznDymjnrtStyYwFw
Fnt78eK2Clp/hV0/pW3aKuj9FXbTFJXs6luym4RajL/8nyqGrd3NyMyxrdVI
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
eL5bya7yK+46uxWHfppR03TgzvzzL7628rZvG5vSxlgVv7xw6jW+ri7hgUcv
mn/73Z9aH9JpwqTJVJCSEc7700Ll9HX8M8R+KMpib6neVWx9ekdFZdURRxwJ
dTJ79uyQ3U7WnGwLdheIie6hOb+vmNPKwQvIRusUf8hw0sjzIO1xS68v7keB
JyAQBgLzGPpdGLlvY1bZZWAEbRnzdId7Ta//yxsgi2ljX4eV7GLQ7gaTUffK
3Bt6wXOdsONi47hLbthgR3MvPPbK7epGT3ZmmPdUew/pk7hBCjvuvIf9Mn3O
NciNjOzjbbHY0StWefxn9OqxamwOdNhlzg31SeaZig8Ocn2U/Th9Tug9T0Um
bGxeyTQbvAgmJ3XYUYrujAcRn2wab119EszncPris0lnfGGV/Rzt+dtIyuKJ
HeySKUnd0knRXrKPK29dfZI+wNFEzsNaKQz1WbX3jZUTnfsthsujXw3eU5O6
4TBF/4MdhglvXe2JEE7a2jhukt0Kfdbfz1FLTtJstji5DRBu9kxLyvkhiv5t
bSntrZv25AirxHbReJnVvPaVOMP1QE5ybHIWueMRqDM9kmF6/LVRtLf3qzL2
m/aA6aswOVRhqn1M+irMbHqQkKdXOMv6yWS8/VopmjNeiffWxcSmPYdOV6PY
QY2y9s053fGlnM/Yg0C5SxSkcqaT3Yynn85ozrtF/gzvw40btafVaUoKOiop
0Z5WLB/OKx6x2F2ntNrFTm4z3n7NFHZWjjO2gPZS66OwO0JpGe2l1sfpRdH9
j1rsrle/0qdPe/r5k8L47k/wJHpr+vQ+Crvert2bojsskcWtvfx6OyrJnGIT
PMldwEDR2U5eExlkw+xtPQor4nMRM6tpT0k+B28h3j0Jtm1vheGp6v1jFsM1
iiOtx2fGQ7eBooT14AzeRDLnag/TXooex6pn7cfZS9H3cYvdDYqr5uZktlq1
yzsf0MCMxyY3ZLSHLp/Dfn8X1cdeCjuWD6vZ71jsblTYzUvKbVHRnTcq9Jyr
PZzNs9k/66Z4Q/sO93QaR3Y1rNuGxDQImsz6P+vsZviN9KZdqD11tUd4T6c9
ZD1ygpIp7XN9UqTnjS60CXd4ahxp/wVZeV2w5jsPb/u5+Nh7z1yZU9Me9AFC
DzceYqFpH/UejipigdgUXBIZI8yWFiOT4e+era/c+uBOL6a8laD9gdJ3DsLe
AHEIdpn26j9Rvf+exWm9o7Xw21zV07JISunjd4LDLuOLm76vEShwinrWNyK6
K4o+ZbG7xcmqzKRzVCvc9459/Cx2GZ9cfc/lBAXpVNVjfZNEc9/TFjNmQA4z
6awIM0Nd7p9q/z7eIIq9YfT9oG6RpJvdmfgmssFO38Lp5rATqX3GYneb0lUz
XatiPfgs0hnfPqsvgk8u0NT3qo5XOryv4h59r+p4p+1khWEDbUo2pzCfTI/6
8GeXmzzn12c1Z5jnYSwdr7Djmi3Mgd4nV7hH30tj+bA6s6lACrcrDT1VYWdn
+JwPn50NMh4G6VtzwX4YoDioq8KuixtDWUs+a7HbqLhxsqLwAU5evU8ub0/6
c3SZRfW9yOMcNLG9zlTP+tbhcY62gv1zFju7UxudiUxSFG6ek1fO8X5dLfde
9L3SYxWtzlK01Lc2WT5YeM9b7O5Ukj9BUbhVUmZpI2mfXH0f1982EV47R/Gi
vvl6jJMcsZBfsBjepfTbOEXlNkm5PcphmJlV9X3mzkpWz1WyrG8M+9smssL4
vsXwbodhJkZAoPQhSdnlrfF4bR3uvwQMj3IQZX48P9KFZrz0jeujHC6yOvuB
xXCT0uejFaV9tImM/PK2vZ5zU3fpY5viAoWhvrXu78PIenKnxfAeh5HYN8MV
pY/IyjAYspPDjj61Muem4xAEW2y4etY3/o9w2Mus8KLFbksd7cFh0Uib2kc7
2fX+I1x5xX6vOm4D91hocxgIIyP6Ge7RkRE6RfrD8OQPLUbMCRVs6POVlFjZ
ynhXSMyJaJ7tpDDrqHSBviWlI0p0VHrXBrCR3Idhnh2iWqUFrn0O7L5O2MPH
Fx0j5HAF7ULFMTpGyOFOH4q2edli5/OKyTw7WGnnE5ysZk7duRcR+zYerrDj
vlRYKYwXjtFYHabg/8hidb/C9WzV1x5OPjMnz/buUmZHPB35JbQ7UXGNjk3T
QY3djy12DzhshAMHqVbp56p92hgFyEeYkHsvOr5PewXxIvXcQWHYXvXgFYvh
gwrDgYrKvXNyKjpZ3XvR8ZH4HFaPU1S7OvrQoTLqFjXufOViAihfuoyM2l2/
EGFC5tVDFFZ8Dqv1aWo8dNSmQ5SkELuHlR4+Q1G2X1JOOdv6CBNy16WdwpDP
YcU+Q/HzIQrDtkrT2G5xB0zFBTDUPTMpo4zWpu+4tFWY+f1PWbHPUvLfTmHW
xuEg2vlnFrNHXSuZuACBwmcl5dXvVWfm0zYKw9aKFnOU/myrMGwdjaOh0s8t
ho85jGSGP0W1em5SZmntxV4TZk5trTA8WEGcq57bKAwPVj2wxiD3mCIrqWeE
oaH00KzMomGLXWZuPVhh1irCxPRnfjR6BrPWCrNWDjMZ/X+xmH3HyZdIgt+5
iG2IzNkT40/6DJKYKFopzFoqXXCp4qCDFWYtncSIJWoP+wtPOA0i1nn3CH/T
qr15nTt34grDz/yYW1sq7PSZ0iLFPS0Vdj7CoWicNy12dvcrWtl0U9hZuzh3
5sTMpvFedQuFXXOF3eWKc1oo7Jo7fSgroV9Y7L7rfpVVYVdF4fFOZjPnTfYU
MUSWAPM1V9jpE8OlinuaK+wOcmMoq0ib/py7YVEfj1MUnuTkNXPWxJjW+vT4
QIXhgWpcrlRcdJDCkOXDytISmXtjEYbHKCrzfnB8Xpw+Hz5AYXeAwmaZwvZA
hd0Bjr6yqvylxe4pJV9HKyrPyMns/g67zFzbTGGnb3EuV6N9gMKumZMc4c1f
WeyeVnrpSEXhWUm55a5KvMo2c+3+CsP9lTSsUOPUTGGob3FaFwHukeXiAqgI
qznZpfeCPh/Wd9X2U9pkpcJwf4Xhvg5DWVHaStwny8UJCJSen5TfJg5Dng/L
nKvvHPp7ovHd2oib9J24po5aMiO8azHc7loR26J99GxavSwpw9zZi1fZxlOx
qcKwiYMoM9kaxVH6JivLh1XmbyyGdkcqssvaKZouycowYNPrJt7W1rdSG0eY
GMxuVM/6zmljR1uxBmxCLu5GRTZtG9XKlU5+/dkTfRa5q805t7HCrJGCdLPq
rb4j2sjxpVip/2Yxs7tQ0Rrg4IiyhvJXO9nNnDsx6rqfc3+7dq2+YcgbOcHy
XKe4p7HCjuXDCvO3FrsdTs+Jtmyp+rzCyW3mvJgec/Gutr4f1EDR4lbFOQ0V
dvqc8n2L3ffVr81Vq4xnqs+L6QXpz4fBfA0UdrWq3Q2Ke/RdsFpFpQ8sdj9Q
FD1QPa928po5L+Yphp5z9Y0en1lJVoobFRdpn+sa9f5Di+FORa9mqt+MRR2f
F/PWgD4f1j7k+tz2TvWsbwtVK/r+zmL3ouI15vDYtWvXSy+99JD9vP766598
8kmlat1yeuYcmTc59Lkxc4W8//77O3bsGDt9yU3rNzLNO9sLK9W7FVWIxzvv
vLN9+/Yh4xZs+daDqPfFF1/oePq/t734oZJn3gkD5sNGjh0ybMyE6QvKZi5c
WSiOmXTxoMFDr7jqavSoXI3WrUkdwDtV+qyZp4fPv/DCkKHDh44cf9HFi9j+
yHHT+g8afPO69eihad+sdO9RHGnh1j7y6LcHnTNk+JjJU2YvQdXp85ej7sCz
zr1r02b00t9WET3yB9tLuzdX5fUpYFy/+gZ0acMDzxcq73/654XKZTduGTZq
HPCqcyfTG5O6g9mt4vPqj958c+GiJVNmLb7jkR+wrUUrbhsxejxoiLJcFdv9
yirPyWCS6TNnz1q4YtPjLxcqTJ2qLd99df6VN46fNBUDF3T0RxZ7u3dnMs/c
fM8zQ0eOW7LqjhpTp4jaAHvh1PnA7a6kLpH7lvYse0uhcO7pA1asf6DA2kAX
FJh8ydUAZPcFi6hx6bV3nz9y/Jo7vsMy6+/dNmzMRTMW3QCi/dHiYnfsypct
v/aqNZtNkQbmT/mkixeRdOTGGqU16myWugmDz0PDhYa2xrCxU8CWpjB3TDF0
w0eNM+PBFkGP80eMA6EKfww0KH/xxRcnzrjUFGAroABGDSzJHfQKrwtu3bgZ
5C00sqXQ6qixEwBBYIHLMEShFWCF4TCvPgrcUg4mwSiCSoXGthQ4BOxvXm2x
719+7a1+Z18APOX9gqvW3r7xjvAeAwkmNa/4fsb8ZVu/a5dhEU+WQ1lAxkIp
tHf2kAsAW1r59mOPzbz0mvAe+EByApR1629ZuPyW8D70JYYSSjWxpTDwZE85
eQADgzHCe0g+SB/ejx03CawQ3vftPwjkNK92RVBAHhAplIJwQ3eFViZOnnbz
5u+F95Bb4QG+h1hjQMP7c84b8fHHH2soGlcNReOqofQbcBaIvCcoq2+4afHK
2+un2Jy5C1bd9kj9FIP6BNvtiWJAHOiHUlCxYObQygMPPjjrslVhdEGewecN
M5y8RWHJ9+g4uq9HH90bOuLCwKmBR9KcesXqu6+5dlV4r3l07tIbNm2+J0Ch
bEIvQ+SCVAHeqHFTMH/VI3VBdu9T49pQSe1HkeYJdKeemLvk+nvvuz+jR6BE
QQdpBQpSNBPfA97ocRcZqW6ouCOGAopB9o2urLWloJrnL1zyy9/s4gmKyVz0
o9tuGzFmotOUprfo/arr1/A0owid+/TatSMunAxUalx/gcw9936rYJPV8HSh
CHzQcVRFA3b2qEIFjAZnM0yoUGbGurDkrgJc2NIwE7BIArtdPGceMCtUuVEd
NnoiRoE4VgEDWLYo+9e338YIXzR1JiYOKYuecbYrWIOo8KqbWaF7MNSYViHI
4Cx8AeODpdCAj5LBxCRAzcwwVt8ba5Wz/JtyF7gBkEcXwM/gb7QCgFBA+IKu
gfeMXrfjUeF7REOcM1YDTtCQTM7xGPF5V96MmR4WA6hleMYKLPfyq1CaNhfG
CBJBy0vsJ5/RBv949Gzn9crdW7cSY7p4/V3uhVShbQglmpg3bSa0Jr6g66Ro
JVYMRJRb/0CddcAtsLVQFMy58Y47H3/8ccP1NokRd8yN7ShZjayFWgUzwGPF
vKfGtuAqA5jRtpBs1x+5CBRykwEklnxH5GhPeyn/ib1eY179LcIAho+O0yLZ
mnxGPdl3kWxNO3fS/61QtK2+5i53SX2A/D3jXm1xWPNMRMq/5a73FmwaY55p
SM4o4CI2dsgP5PP+vWKTLznvy507uXPBrLblWHT8jfE7iAVYm0wn+jLQjuUx
XMyCW/g8YFFkjjXmp+INPny54KSOzbtdOGr5Q8zudfWGp5lSRvbSbD5Jk3RP
TqxhrfOUgDmgy39rL/cHzBiN5/v+fqnJ2Md8lN2S7YWesr3d9tqpedVsD/Uf
jXrms8NhpVPtyi0cfvUol5ULZL7syNYXXm7XQq6Ey49cs5fPLrMm/QEwIEIJ
m0Kw/Ic+vgRpy40d/EPBatVC5T+IQWmMMDZCS2L0MxdmSWj5z4P/SDQWS12+
NTB53O9rHn2JMlfDHN22kBmUUba03PUtE1aKswY7qBVf4zuH+VA3ltzsKtQ4
efsLb1py3Q+Vx3U/nf7l1zivs89bWhGyzcbZtyV5bEFKFe07KfLP61eQVvbr
2aZNRYfSO86XB3rFHF57xvzr71uWo16zdP6zy1PHpJEiX6adqevesCk5mcPW
8xVlvoIHsCrfe/kenvP42HeM5g7i8biv0MDS820fWYQcAW32lMuJCcJ7PjGY
vud6LrdqTb5U+2OUZ7mnYR7Zx/oqeIKf6R8leH7ooo5w3CsDRg5ojcJBPydx
qgeHaOyifJtlKhtb0ctQT2niW/O6kAvLnXqQnJNFDPG3n/3udd0nodxejWL0
LPmMmTq2TuIYykhCqAsNLYUwYzFtoMQg8Ke63Jz3eX0FWxmzMIZVXhJsX/aO
1/aIZdBLxPJH9iK/H8cIn/Ik/D097z0+D0djeofPL1imctC5fPci4fhyQuHM
QShrJdPm8yvac6Rnrt37scxxGd8NcRouw+l/dqHQpC2aRU+5HL/lVOux1Dlt
5DNyM9mw2C8+HXKh+ivjCtxoFBRq3SzzV97VPUjhUq5g1+zhOYlbPbhQOu0K
QnKlBms45Kl0IxlmuF0/WdUck7UdSatfKzGSL/18x7p123zjVV6mox8LJX6t
Ub86PWKpcL6TgYyd9aaLeyhUgCTLCJcri1Tnry/3VGZu7lonw3EO9q8Ze22T
vetCsPgxd+WLCpuaPTyXwLYkXvH4v6uyVS71+YM17Sgd315xPjph8qHbdUv1
lGUPcC/cyjrNAANQZug9/1Id/xKjSX/if3/hBVnj6XUNx877j8jYv+JCFBD/
msC/Pqu5H33JPR5eyNeqrwn3399773MHHBBwhyaSGaa5H7kIt6B/4vFN4Pcl
8a4Xy5gPfE5PWY/+2edIpo3m88zjg9GeMqSj54HylXduF2+BMiVfNXvznMg4
b+lXpH/B9iZNXmjZskLtCHD0OTWG0Yc+FQoz76/HGgCYkd7ToN6M9NVfCWee
+rxw8MHbGzeuULsSLTI4GbjEqSBTZf04VX4ZXBO4PRqNdMjtW1Q5n0nTkIe9
zM3WPNSAnC+zSPqTrZ2dOn145525fRJaijyIDPsiYV5mlnrvHwST5jerVuV2
T/7L4mz356KMvunc8N4ewT+Tl9tnVxUvIBupo0r5/OC3H5oIR45zZF1E7FFW
sK9QWtveEizGd4jKzFFrhd8gwxfzQ12E/ys+h28yS7vZW+SeFP76s7bIx2pJ
lmLitcwTxTj+DX0NvPeB4B50oj2Bzd1xZjs++pBswOwT4X+fzdEbMpzv8hmZ
SS3a+CiVi767OAtRvMHZP87bGH7xeeA0aVCutHhzjMwrlTkaTFKMRgnmn6V2
WYTxUpXzPWRdbuikQM7EfTRX8Qe03joZ73rulYDosiPAFvyOQG7fiqfzsZcF
W+BBsPka6PuKg14y+/ju//iLPLOl4Ll6aZYyGMQqR9tsC1u3Cm2J7a9sADDz
yvrtZCIa6BY0tmFFp7OLH+iwE8+A+VkOxRfxmnRrK8Em7JzZ3c9wZ5U7rXUN
I+joeCY7OLeXA3Tln5yJqiUZt932t1hkoafW/yt3n9e8spLFkwtjM2d2kGED
ZWwobjebogc5jMS32fp0ZzyZiRE0qmDEXRrpdp3k5M1FETGvGgeMatHbeH/k
uR/9eu19Ox577l+e2PHG1Rue5hoNRJE2m7teyFm7z3eU8f62s1Wt5+Kn7IXE
X116Kcbqp+ecgxEEGcuUPe7zFGdukJtXTQK2Re9KCEZhfEc6yrERjOemx3/E
PWp6Uwf/+umu/YwnvfV9qgbywAhKkMPJjRigzLkAPUIdsytNiup79wZy02iM
A1eVOxxkf77c8Tg3MqwvufHZmOZwy9zrYw+CDUBsPHJi82MRKHaLjeSS8/00
Va2nn5xpBGx45yP4xEx29XkmIb07REFl1nDvdyM+sAbKfkko+rYOvZL1fZVD
FRT6UWmfJANl/yQU3vkJvlMTHJaZ+7DtFRTKrPbLMlCaJaHw7lPwGhrn6mew
7KCgWK7J+KYZCAcmIfgba+Lnav3fM/ehD1etr3Kt+xnDtH5QsvWOqvXR2boQ
zI6qdWa/jn0STevNk613ctwtHrD2jCZkWEAjnVTrzGAd34EwrbdItu5vZcrd
o+FZzFD3CNW69WPM+KGa1lsmW/c3TOXe0AXZulg8HKlat17dOR9cA6FVEoK/
lSv+wue5+pm7qEcpKFc7zZDxRTZQDk5C8beTxW96cA7LcGM4QFmW0z9Oc7RO
QqEfv8oClNNfnRWUq+rVT22SUHjXO/jRD3L1E/kJA5QrneRn9IuB0jYJxd/Y
l7sEA3NYhpv0AcoVWf0S6ad2SSi89x9uKPTP1hfvxeMUlKVZ/SQWsIFySBKK
j7Yn+olxOrUW7aKg0IM7tloNhPZJCIz9ELwLT89iKKuCrgrC5Vk9IwcfHZIQ
fCQO8V/t4+r6yE/dVOvMHhxbiqb1w5KtJ6OWZOztE1TrzAAcW4Km9cOTrfNu
VfALPSWrowCmu2r9sqyekYVAx2TrPlKN2KjMzRrbuyeq1i910p+xzgyETkkI
Oj7Pia5+xqbtoaAscNKf0TEGyhFJKD7OkHib+kg4GTv1JAVlfk7HmLuaBsqR
SSiMbhQ8d7u6+hn7sqeCMs9Jf+auqoFyVBLKKU5HiZczo1lpC/FkBYVZarUN
ZKAcnYTC6FYqK33OS/gUBeWSnI5yUDonoZzqNKHoqKOzmlR0VC8Fhfls/Z5G
pKOOSULp7XSU7E8cmdSkpyoo1vEuYwcZCMclIfBmbdhH6JTUUb0VhFlJHdUl
CcHH6ZN1PyP7xTf+TlOt23VSxhYyrXdNtu5jFMo9HBVJAHVPV63PzOoZ0VHH
J1vXsRYPzdYFin1V6zOyOko2UrslW/cxKeWWk50NMxbeGar1aU76M3aQgXBC
EoKPyyk3vdpksUPlfgrC1Jx+cfqpexKCjzUqt91a5eobS6+/gjIlp58clBOT
UAa6Z9FPzV39jKU3QEHxa7ScpdYjCcXHqpVd9gNzWJr6AxWUi3L6xWmOk5JQ
GN0h3E1slqtvoJypoEzKSr6s0QyUnkkoZyn9ZNebOS06SEFhLtDUSvLkJBTG
0QgryaZJ/XSWgjIhqZ+srpT7VrvVrlqAyDFm4gf7ta4uY8U1dvorzuAkc0rI
MNlYYUQp+PzzzyVDmb8z7fPdG2BWz8p9tbfffrtp06Ymzn6jJIbdunVjtHrZ
eQg2GuOIxxbkKQ47yULVRGF3hsMOLZokY8QutsMMdr0DdsWdO3cyXwMQ1BS0
slg0Lxo2PPLIIzt27Mid2XBTrtb13rdvObmSqYLw1aPaVGFqNbnJxuAzbC1z
Hrfln/pdZsuLOQ3cJ+BfAfxREQDYhRAtPtZrJmciE8PgqVWrVueddx57EixW
nifGO/fM/Mg0PewDOegN763QINWnIvNfskOssXjxYsm9YXeMMvH/TEO2HiOo
VTOtUJ1LrVZnkx0ApO4X85Sg5ebNmz/88MOMA9+jR49169aFbKRi0fLkLba1
yUfMB2D4yOfLwTN+ZcK1dP9MJozq6mozWkXXCjpr8onxhm9qr/b00EOTT5GJ
j9hDkcsgp9Wqp4x1v2PHjiZNmnCc27RpA6AmN0K166ns5jKjWWz3W11Ry4x/
BEB5pPiC89Beup+gKnOzSKvMSMT8dY1cT3N7wH1DT00WOUoBgDG5CnPgMRXD
q6iR7GuDhx56aP/990fZP/3pT+g0cxQwkQGqjhgxQk7S/Yqizt5pyqxGbB+q
2D8MD9tgHsvcuDKroudrn7sS3YfU8DwstYN8RtRXNA0wnqOIsM//ZfLe6b6S
g8eNG4fRgGq5zq4vmdawUGaYsrxZs2bLl3NDyEox6m577mexucE8e4AE8qKL
6BwaYGqQXC+Zg8GrAd9RjmVq99nShfehK30+MYwos7VQV7Vr1y6TrUlpntoN
GzY8/fTT5HZoeow+k5dMmzYNPa50tL2u5zkrWnaW1Re5AD1hYjJUQFESFV84
oCFDmephQ+b6ILLMMkGmZxbh6dOnYzwIV690TA2r8zm3mixIzDGDZkArQA0y
pyyuqu7du19wwQX9+/cHDPQNZPEZIIJdtabbgLu3bJNcVEADKDHvEPUP4QWO
0f2zFDX5bPASVTlrMqUg5QyvTH4KQtUrLNO7AaF35T73UsHk7bHZx+pskirm
nUC7xVRP9z/mmGPQu8MOO2zWrFloAN0EA4DiwAKTJL4rAy/sgZEDmamN48pc
muQkpkv23B71245JJfPE1bnsN33cOUrI7FTu+p2zyQaGfjcEcVGXMwcbZC4h
5ipmcht9wmLrNwGZysvLx4wZQzxffvnlmpoaDMSHH37Yu3fvs087LX8WHu3N
9XMaCXCZXo1pZk0WJj3S1qatov4EXTBUzN1pdCZ7qdedppe2Fu+SByqzIr4T
HwqgHXXVR1u7EgChPIAlasDsmT17Nnlz5cUXdygvDytx8kaIPsLcRwDGPE5o
BpLmW0I30Q2Tubc81dNGoMGn9sPkScxyhDZA3FnnnrvVbdHZXlobmXelK30O
WXbU59VRdnc12sEIsdx7jz3WYJ99ZlvK+fs3cnLh8z6C4miM+odiyTFgIp/c
mZntRUPm4WFqbUoxHgH60UWLRhUKk739aXHinfUqzhvEjJmEfXZV3YsqzPvg
OXz95YYNLQqFo+12gngDqT5UMgGnlxY0XRbxFOEF/O3qphb9gwahpsfoYdBo
eT5SKPQ+ymxU1Z0TaF9B+jBzWMguqHA2OauA9vS+fWsswjAwZV7KxqKrInsQ
L2YP+9TLUMDTwq9CQQD3+Rgu6t/fKDCFn8mP7VOf6rnJlite2L07UFpmLUKu
TVQMuiqfp6zO5rDC6JssT5qHbWuVoOyGfv2I0opp0yQzkT0pSa8GM3aaj6oi
J0XcY4e0UiBBD5O/s6ggky8gj2u6dDkV80vDhhPPO4/pzQr1Q+eJh94b8bFu
5CTJzsJFjAWQADeALbRetpJY6fcWFtTWntGzJ3Md1g1JQj7TQc7smfhIRXK6
pNfaxDd1jnR+EspAV54Wm+yZ0BcjnC7pfQPi5vdoo3OkoUkozA6p7SZ6MoSd
W70HQtxSe7QXJKH0d1hlyjO2Sti51fs5xC01Ew5LQunnyvP0XfZMGF8m7Izo
vSnipncQDJThSSjpcyPG1wn7EnqfrR/5UJ0jjUxCIM/GcyP9DMLJkt4npC2m
z7lHJVs/3ZX1ex08+Q87FnqPk/jEq2rT+uhk61w9x3sVhzlNKWt0vT9LfPQZ
0phk6zzvincSeCYfTpX03vJpWR0l59xjk633tmXjdX18rm70WR/Vem+nCTJZ
MQ2EC5MQernymbW1P/2Wk6XeCsqpThPk9mjHJaGcktRPnR0UiZ6lTxF61auf
xiehnOzKU2+KfjrOlRL9pM9dTnGagFAi/TQhCaVnEquuTj/Jzq0+Qzo5qW8M
lIlJKCflypuVFM9Sw86tPg/rmdNPDsqkJJQernxmRdPd6SfxqdVne8QtdYZ0
URLKiTmsTPkeTj/JyZI+p+yR0zkGwpQkBItxznYndcLJkj5vPTGro+QMaWoS
AjNs+DMjiGQvp6PkVEmfFdvncIYk59zTkq13y2ICddLb6Sg599Hn3Cfk9I5p
fXqydZV/A6rwNNW6PqPvltVRcs49I9k682fks3iFU6XjVetdnTagnRSdc89M
QuiSxcafGYVIstqDoUtS3xgIFychHOvKe61p9t0GRFCMftKeGMc5TeDtIXfG
PSsJ5RhXnljJjtcgV0o8H7XvCnHz9lB0xj07CaVzUj/ZPKhP7HhDt54/m3Ya
Y06ydZ8XwltzRi/xBmPwTdS+RJ2dBqAdFOmlS5JQmNvBW3Oil4Y4vRSfeEdQ
iJu3gyK9NDcJJX2Wzbtc4URJ+3gdldRL85MQjnB6KWPJXeA0n+gl7aumsqfJ
2c+CJAR7Wp6x4kY4vSS2k/azY54FfXZzabL1jjm9ZC246KRG+wh2SuqlhcnW
eQ4fW3FjnF4Sy0z7NxIffc5xWbL1w3KYXOj0kthO2jfz8JyeMa0vSrbeIVd2
vGtd4nceplrvUK9OWpyEcGhOSxpLbqLTSbKa1N6r7Z30Z2wgA+XyJJRDklhN
dqVk5aj9fQ9N6hgDZUkSSrtkeeYYUllUIiiH1KubliahtHXlM5acnRMjv8R2
Cko7pwUIJTrXviIJpU0Sq5lON8mebFsFpW1S1xgoVyahtE6WZyz7sPfZRkFp
k9RNy5IQGKveW3Gim+Y43ST7j60VBPsc7CDRTVcnIbTKYTPP6SbZUztYtX5w
Tt+Y1pcnW2+ZK7tAtd5Ktd4qqZuuSbbOG3yx9bbQ6SbZX2upWo8jxIf7LCuS
rTfPYbIo0k1m1dhCtd4iqZuuTbbO03mvJTE5XK40X3PV+kFOC2TsHwNhZRLC
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
kuVX1MufP0+Wv8bxY86j8vVk+eVZ/o18kP4lWf7qJD+9mSy7zJb1Z9Lir/iL
ZFkbvSmTEdyUfStZ9sokv/xrsuxSxy/+jgN0ie3fL5Pll7jyOX75VbL85fXy
y6+T5Rc7fsnFmXk7WX6RK5/Rl6b8O8nyl9XLL+8my1svgeBVEXmT/CZZ/tIs
v0T67r1k+QWOXzIeHr9NlmVMTm8tyqTxfrLsvCy/iC76IFmW0TbjvLym7IfJ
snPc+McBSWz/fpcsPzvLL5E++n2y/CzHL5xyI37ZlSxv/T8zt0tc+T8ky8+s
l18+Spaf4fglF2/xj8ny07P8FfHL7mT5afXyy5+S5RlNJY5148p/nCw/xfHX
Uy7+rin7H8myk5M88+dkWesZHmxX2TT8X8my1lc9nN4Kf32SLDuhXn75NFl+
vOMXb9G5k+T/K1l+nCtPfol8Vv5iyzPD8Oc88qtzdnKoz728Tz/9lBekdayV
iJ/+b9ve9235CRMmSByQ2lR7ldu3bx9oP2hy7ty5Lg5G5v6T80f5q233OYVn
GUA0TLVdAcCvvvrqli1bmjdvbuIoqIgqkQ/KZ6HlIq/zRVEMdLvVeAEy4G+f
Pn14sfiNN95ARxo6js55n/wtwpxXs31chyIqjhw5kpEEqlLwaljchwrAX1Cq
adOm5rYs/Qlir1kH8z8jmGzBUsuWv+666xi2gzdoC0m45dXV1fG96SIeeNUd
FauT0vX3ALNqp1tn1tn708DXxBygJXmcX+lUKMj9HJcxHITk20F/0Rwvqn7g
VgU5e9Mm7JSb+YxisHHjRraDfpq4DrqfvEVNhq6z4RyItbkdqWKCiJ36vwOM
WkZV4HC0a9eOITR2796NZvCqqGDZNa+J++KjK7BXpAivuvtIIzkb5v8JcIsM
VQAcAYsjw7AODKpSnupjE1QgBf2FaFTgDXNw8euvvZazmv/fSIoppcCX2FXy
Grzvhbs7rKE2JjFQlTeK+Z20fvmFF85v3foptxQ1Lf2XhWjXMlXEC4KLJhij
I9yqDlDsvdoadAxCy2Yh0VNbtJiZmT//P9uuXXVVMfYDaEdORruQhYKm2TlO
znlDGi9Wt27dsVDY3ratXyD6NisYjAF/UdrIteZp3kkGncAV+HXu/vsfWig8
euSRTl+azz6h7ybiENoDmmgv2ZaJ0XFGz56V++zTF0PWubNf5rt48lr321rB
los0k/mUJ+swtmoqRrH5FJN17Blhbg1gPpXJ8vbGSC46nflUJctbrspFBTaf
6mT5gUlZMp+aZHnOG6k1gfnUJuv0c3Vy6wLzaZCsw3uuqbWB+TRM1rF3kTL2
nlsfmE+jZB1GSf1blPsi5rnGyTqMO5Wy+8ynSbKOPevN3NuN6zRN1umd5a9o
fWk++ybrnOr4K7NmMJ/9k+XtzbawbvCJ71ycbV1exU2Vtab5HJAszwhYev1g
Pgcmy5/keCW+kOb7fFCyTo+S/NU8WedEx1+v6OjN5tMiWad7liej9YT5tEzW
OSHLX5ENaD6tknW6Of7KedKZz8HJOse7Orm1hfm0TtbpmuUvpfPaJOvwfl68
xnDl2yXLH+f48al4XWo+hyTLH5vlr0jfHZosb++05eKUm0/7ZHl7Oy0XMdN8
OiTLH5XlrWj2N5/DknWOdHyS8y81n8OTdY4oyVsdk3U6Od7KZAVwdTol69iW
krETzOeIZJ3Ds7wVrQrM58hkncMcbyXn06OSdXhrKmWpm8/RyTrts/zlj51c
jFtdnjFVtV1sPscmy1suDTaud4BxEW51+XZZ/or4sUuyfBvHX7kYq+bTNVmn
dZYno3Wt+RyfrHNwlr+ita35dEvWaeX4K+fBbD4nJOu0dHVya1Pz6Z6s06Ik
f52YrMNTxfrstR7JOgc5nkzy10nJOgdm+SvSdycny9NfJ2WvnZIsb2fZpL3W
K1nezuLJ+fTUZPl9Ha/k4imaT+9knaY5/nJxJcynT7JOE8dfub058zktWYfR
U1NR88zn9GSdRjn+iuv0TdZp6Pgraa+dkazDiIWp2LTm0y9ZpzbLX2o90D9Z
p8bxV24+HZgsz10FfaPXfBi5jB6gH38MLLbfeO3K0Ucfe+EJPe7ZsuWll176
4osvivVym11n8ESzeO99959z3ogps5csXH5L2arbHikU51y+ZsL0BUOHj379
9de5+k7NuIwqxpMx+rvOXXJ9ocr4rFbd8cgP6Or66tixebuO0bx+5GqOHDvJ
+N7Sf9743p7U62lr1LnyjFFF/2F06+I580x5+gfPv+KGW1fao6hUafQNSAW/
5azXdcCF/tLB/z7ly65Lg+TiX0w/bBARDcSlz4pKa6/trIe0Lh38rbVfeqr0
FVddvezGLXtbet36WzDS9fm069JYco+bMjf4iIM6A8861/kha5p89tlnI0aP
N97djRM3FEJpjg4IADKE+wyoN3rcRZ988okaS3LKzevWL1pxmynYIHFnQZcG
hjMvnjNr4YpCjWsbsO6591u+ND3GeGr9yKPfBmsYrqq0pQEI/TD3XFxpepBY
iakFC4EvBg0eCtJNm3sVyI0vffsPAob0xLcf+krYs9BK9Ak0fmDlyhe2bcMX
IOdKxZGyIGXkeg81jnAFRUZ7Wr2NdYbJhejeDgtvw4wGVaj9mhlnO+uX/Peo
Lk2Vp2xOwf8uv+RSfsGfR7h5HxRoUpdPvpTv7P8EX+C99aj9PPBPhc9kGc8L
CX/Vf8g/9Sv4r0Y4Rr429Lr0G4M5/9W0f+jXjPUe/EX/M8Lce94L5sFnRfuL
ap/Mf8gH8yv4aJLekvXb+cQXtF+M9tHUno5fk2fj1+oFGfcs+DD5OyJxz/bo
XciTiq/JE/JLehrG/Qge3fSQU1nrS3rzfS2ehnvp1ff3COfve/8t4hzysEtf
45kw8hOmx172Zo0uHbxbWRrau0Tp4KdJT7vgyetKnxuVDt6ILB28EbOlOd8H
T0N6yQX/5lTpoNlYOnjlpkoHD0EKZ/AvdaUZY1TykHr/v5p68I5KN/KSAZEA
d/3xiSfMhNC2LcwGLBKpDmIbYEgECfoBU7n3m4xWGbTxgQkGG8/R6cm5WUwF
M12/Qr13tWmP6TWNezvsm7ffvP3m7Tdv/3/01i5Hy33mh5x/Rbb0Tvv2jTfe
qK6uNr4r1XsubbxjJkyYQJ+TvWg9ZLthFVmx1VfHbhqYSPgM8+8zypjsGntR
s2LIkCFxTbGX8ROdEXJ+BYk2yteuXUvviEKZSRljwDKo+PTp09H+ww8/vBet
VDOUPGr5hBao6HJwVPkA8nXWmSHZDv0utmzZArgM0c9MBCHKekkuMLkwmBUH
fwEPeJjulMbd1jQZBZhnYuPGjYyNr31nEpgWQZuRI0cytLz2ksiWf0mNSunS
/zMl7Zu337z95u03b795+83bb97W95a7x5999tlPn3321kJhU8uWLrqL+fD8
gGcan3zyyRVXXd1/0OCRF04dPmL88JETho+ZPGTocAadcTV4psF9judfeGHY
qHHLbtxSqLAnd3c88gMGxOEJm/1w/8GeyBTRzNIrlk2ZtXjT4y9Xu4g8APLQ
w496jM4N5U3kLrQXznvyJ2bxSV+IU+XPkkaMHu+i/YTStH2Ay6ixEzY88Lyc
Uy1acdvN69bHbcenWl/uDGzjHXfOu/Lm+iI9mU98vqZjWZU+u/ty54L6zBGd
oP9usvSTTz45be5Ve3ueuWvXriHDxgSamOhK4yblKcjRCWd3jeoZy7h0iE6W
igEVxpJ8AuKOGjfFlGacJxBo3MQp8cjH+22MrwTG4km1idcGlmQwuiwXMpIT
cAEjDh05HmNabk/H0f6U2UvA+hAAVyO+F/3++++DBebMXVAoM3/MmGHhFZ9q
MgdPXfRpv9e/2Ltv0emdzeqiTu94T+fX4c1/61ldqbO7/0hixjXZ/9xTua/j
NC/bczm3cydT/7STry97nkcsfxVqRed1/81Y7uH87t8VPXv+D6JnT0VPi2V1
dEyUOQr7p567fa1ndPX0pu6fdtL2lU/jiLHVmVU+rodD+es7V/sHz92op+ui
z97PA4V9/g8LE9zc\
\>"],ExpressionUUID->"2edfcb8f-e19b-4429-83a3-198f6322276e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"big", ",", 
   RowBox[{"GraphHighlight", "\[Rule]", 
    RowBox[{"EdgeList", "[", "small", "]"}]}], ",", " ", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", " ", 
   RowBox[{"ImageSize", "\[Rule]", "800"}], ",", " ", 
   RowBox[{"AspectRatio", "\[Rule]", "GoldenRatio"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7747305936572275`*^9, 3.7747306216028147`*^9}, {
  3.774764842848384*^9, 3.7747648639162855`*^9}, {3.7747669158323956`*^9, 
  3.77476695074862*^9}, {3.77477301738006*^9, 3.7747730771326904`*^9}},
 CellLabel->
  "In[724]:=",ExpressionUUID->"3fc17053-6182-4f60-a868-2a663153cf16"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{7, 1}, {8}, {6, 2}, {5, 3}, {4, 4}, {6, 1, 1}, {5, 2, 1}, {4, 3, 
       1}, {4, 2, 2}, {3, 3, 2}, {5, 1, 1, 1}, {4, 2, 1, 1}, {3, 3, 1, 1}, {3,
        2, 2, 1}, {4, 1, 1, 1, 1}, {3, 2, 1, 1, 1}, {2, 2, 2, 2}, {2, 2, 2, 1,
        1}, {3, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}, {1,
        1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 2}, {6, 1}, {7, 
       1}, {8, 1}, {6, 3}, {7, 3}, {9, 3}, {10, 3}, {11, 6}, {12, 6}, {13, 
       6}, {7, 4}, {8, 4}, {10, 4}, {11, 7}, {12, 7}, {14, 7}, {15, 11}, {16, 
       11}, {8, 5}, {9, 5}, {12, 8}, {13, 8}, {14, 8}, {12, 9}, {14, 9}, {17, 
       9}, {15, 12}, {16, 12}, {18, 12}, {19, 15}, {20, 15}, {13, 10}, {14, 
       10}, {16, 13}, {16, 14}, {18, 14}, {19, 16}, {20, 16}, {21, 19}, {18, 
       17}, {20, 18}, {21, 20}, {22, 21}}, Null}, {
      AspectRatio -> GoldenRatio, 
       EdgeLabels -> {DirectedEdge[{4, 1, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 2, 1}, {6, 2}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 2, 1}, {5, 3}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1}, {4, 3, 1}] -> Placed[
           Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1}, {3, 3, 2}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
           Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 2}, {4, 4}] -> Placed[
           Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1}, {6, 1, 1}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 4}, {8}] -> Placed[
           Rotate[35, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{6, 1, 1}, {6, 2}] -> Placed[
           Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3, 1}, {7, 1}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 1, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}] -> Placed[
           Rotate[2520, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1}, {4, 2, 2}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 2}, {4, 2, 2}] -> Placed[
           Rotate[630, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1, 1}, {4, 3, 1}] -> Placed[
           Rotate[1120, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 1, 1, 1}, {5, 2, 1}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 2, 1}, {7, 1}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 2}, {5, 3}] -> Placed[
           Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 1, 1}, {5, 2, 1}] -> Placed[
           Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
           Rotate[210, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{7, 1}, {8}] -> Placed[
           Rotate[8, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
         Placed[
           Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
           Rotate[560, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 3}, {8}] -> Placed[
           Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1}, {5, 2, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3, 1}, {5, 3}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 2}, {6, 2}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1, 1}, {3, 3, 2}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
           Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{5, 1, 1, 1}, {6, 1, 1}] -> Placed[
           Rotate[168, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {4, 2, 1, 1}] -> Placed[
           Rotate[1260, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{6, 1, 1}, {7, 1}] -> Placed[
           Rotate[56, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
           Rotate[1680, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 3, 1, 1}, {6, 1, 1}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1}, {4, 3, 1}] -> Placed[
           Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 2, 2}, {6, 2}] -> Placed[
           Rotate[420, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{3, 2, 2, 1}, {4, 2, 2}] -> Placed[
           Rotate[840, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{6, 2}, {8}] -> Placed[
           Rotate[28, Rational[1, 4] Pi], {Left, "Middle"}], 
         DirectedEdge[{4, 3, 1}, {4, 4}] -> Placed[
           Rotate[280, Rational[1, 4] Pi], {Left, "Middle"}]}, GraphHighlight -> {
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}], 
         DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}], 
         DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}], 
         DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}], 
         DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}], 
         DirectedEdge[{3, 2, 2, 1}, {3, 3, 2}], 
         DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}], 
         DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}], 
         DirectedEdge[{3, 3, 1, 1}, {3, 3, 2}]}, 
       GraphHighlightStyle -> {"Thick"}, 
       GraphLayout -> {
        "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"}, 
       ImageSize -> 800, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
        0.03178333455671099], {
         ArrowBox[{{0., 0.9245908507142256}, {2., 0.}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["8",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 0.4622954253571128}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 0.9245908507142256}, {2., 0.}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["28",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 0.9245908507142256}, {2., 0.}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["56",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 0.4622954253571128}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 0.9245908507142256}, {2., 0.}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["35",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2.5, 0.4622954253571128}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["56",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["28",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 1.8491817014284513`}, {0., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 1.8491817014284513`}, {3., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["210",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {3., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 1.8491817014284513`}, {1., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], Offset[{-2., 0.}, 
          {1., 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 1.8491817014284513`}, {2., 0.9245908507142256}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["560",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 1.3868862760713385}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{-1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.773772552142677}, {0., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["840",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.773772552142677}, {2., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["840",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 2.773772552142677}, {3., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.773772552142677}, {-1., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 2.773772552142677}, {2., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1120",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 2.773772552142677}, {1., 1.8491817014284513`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.773772552142677}, {0., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.773772552142677}, {2., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["840",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 2.773772552142677}, {3., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["840",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 2.773772552142677}, {1., 1.8491817014284513`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {-0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 3.6983634028569026`}, {1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.6983634028569026`}, {-1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["560",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 3.6983634028569026`}, {1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 3.6983634028569026`}, {0., 2.773772552142677}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 3.6983634028569026`}, {2., 2.773772552142677}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{3., 2.773772552142677}, {3., 1.8491817014284513`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["630",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {3., 2.3114771267855643}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{2., 3.6983634028569026`}, {1., 2.773772552142677}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["1260",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 3.6983634028569026`}, {2., 2.773772552142677}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["2520",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2., 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{2., 3.6983634028569026`}, {3., 2.773772552142677}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {2.5, 3.23606797749979}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{0., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["280",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["560",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         ArrowBox[{{1., 4.6229542535711285`}, {0., 3.6983634028569026`}}, 
          0.050853335290737586`], InsetBox[
          RotationBox["210",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 4.6229542535711285`}, {1., 3.6983634028569026`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["1680",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1., 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{1., 4.6229542535711285`}, {2., 3.6983634028569026`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["1260",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {1.5, 4.160658828214015}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 5.547545104285354}, {0., 4.6229542535711285`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["168",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 5.085249678928241}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 5.547545104285354}, {1., 4.6229542535711285`}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["420",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0.5, 5.085249678928241}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}, {
         {Hue[1, 1, 0.7], Thickness[Large], Opacity[1], 
          ArrowBox[{{0., 6.47213595499958}, {0., 5.547545104285354}}, 
           0.050853335290737586`]}, InsetBox[
          RotationBox["28",
           BoxRotation->0.7853981633974483], 
          Offset[{-2., 0.}, {0., 6.009840529642467}], ImageScaled[{1., 0.5}],
          BaseStyle->"Graphics"]}}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {DiskBox[{0., 0.9245908507142256}, 0.050853335290737586], 
         InsetBox[
          RowBox[{"{", 
           RowBox[{"7", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 0.9754441860049632}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {DiskBox[{2., 0.}, 0.050853335290737586], 
         InsetBox[
          RowBox[{"{", "8", "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 0.050853335290737586}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 0.9245908507142256}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"6", ",", "2"}], "}"}], 
          Offset[{2, 2}, {1.0508533352907377, 0.9754441860049632}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 0.9245908507142256}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"5", ",", "3"}], "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 0.9754441860049632}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3., 0.9245908507142256}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "4"}], "}"}], 
          Offset[{2, 2}, {3.0508533352907374, 0.9754441860049632}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"6", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {-0.9491466647092625, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"5", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "3", ",", "1"}], "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "2"}], "}"}], 
          Offset[{2, 2}, {3.0508533352907374, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 1.8491817014284513}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "2"}], "}"}], 
          Offset[{2, 2}, {1.0508533352907377, 1.900035036719189}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-1., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {-0.9491466647092625, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "2", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.0508533352907377, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 3.6983634028569026}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 3.74921673814764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 3.6983634028569026}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {1.0508533352907377, 3.74921673814764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{3., 2.773772552142677}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
          Offset[{2, 2}, {3.0508533352907374, 2.8246258874334145}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{2., 3.6983634028569026}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], 
          Offset[{2, 2}, {2.0508533352907374, 3.74921673814764}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 4.6229542535711285}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.050853335290737586, 4.673807588861866}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{1., 4.6229542535711285}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {1.0508533352907377, 4.673807588861866}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 5.547545104285354}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{
           "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
           "}"}], Offset[{2, 2}, {0.050853335290737586, 5.5983984395760915}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0., 6.47213595499958}, 0.050853335290737586], InsetBox[
          RowBox[{"{", 
           RowBox[{
           "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
            ",", "1"}], "}"}], 
          Offset[{2, 2}, {0.050853335290737586, 6.522989290290317}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->800]], "Output",
 CellChangeTimes->{{3.7747730546384506`*^9, 3.7747730783479424`*^9}},
 CellLabel->"Out[724]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
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
1AyL/YM/26Dg3en4K/7weg/v9LRcwbKNzvbFz25UsAg7+OnxHtZpGbludDog
/n+zgrXR6aPEj3EeVo2oXDc5fZfYtEXB2+TsRWLbWA+vWlSumxP2Y2LnVgVv
s4I3xsMrj8p1i2svufRdCt4WN57k0qM9vLyTK+1f5Ep8mHv4CkoC3taEvZrc
5ToPz87lU7n0NmX7dytYdynbH+Vh+TV/Ppe+W9nrdgXrbqdDku9d62H9wMk1
lUuzf8gl71HwzHOTgxIOV2/qedE9zmbE5u9VMPg85MV2hpD7LyfH1JzoXtV2
h4J1rxrragvrH2kZynxoh+B+n4KxQ9FsKyG5/8jI7T7FSw1np5KFna3k/pqR
2X1Kvg8oOPcp/bCVq9xfovK6X+ndLgXrfqW3duaT+y4qtweUTexWsB5QNmXf
2+S+dfbMXFnktkvZ6x4Fa5eydzuDynGFoc6TdytYexWs3coX2TpV7s9Ofj5H
3qt83D4FZ4/ykXYWlrPrA1P5MfsFv/uggrPP6Yn4bTsL4+6ozJznQaczEg8e
UrD4PMQTW/Hl3q/MfOchZwsSq/YrWHweYp2d0eV+n5afzHXYN8TRAwrWfjeW
xGH7tiH3eVR+B9y4EuMfVrD4POQI9o0HVzmWfv/996+99tojjzxy88rV6zds
wof33nsvVzMjW2szpd98880rr7yCRktuWL71rm34YHZbsZoachaLe+lXX311
7NgxNOk1aOSWu7YfOnTI7GU8oGzY1qJLv/jii6effnrP3r1z5y/CX3w2uzzt
bIcrKMsPPvb45cOvmVC5aOaSO1Zt3LvsjnvxYcykWcOvvhYIV2R0yOJb8fe/
//3+XbsHD7t68qwb0P62uw4suWUbPlw7ZsrY8ZMM7gVOJyV3s7hXgCvr1m8Y
euXIqXOWo/ma7QcXrNhcufCWq0ddXzlzjsGN8gk5oYVTAf6AM8NHjJk+f+Xc
G+9EP/zFZ/yC3/GU65K46rIIcABt9pLb9h55u8TtmQNNGBoI2OpwUVKZ6WuA
9fWTpi1csTFn96yW3LXvKMgBmd//+1/p8Igb98MuX7OT7cw+Qm6FJe4l3v9x
6x54w3b4gK/4kWu9uKKzELiOGjsJMGTnK+DOmrvA7EosdLbi5xvB1/3iF78Y
OW4KMJRewPrya6cYH0IcX3311ZHjppndl2Vuz+uMhau237uDz4sAafL82yZM
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
+UkB8Q3ncMVPCFTndIWMxTBj2jTaX6ETnuMtFJ11Xqd80qnEYeGzae7A0CuE
PLZ+kp1XtklsfVYj2CrbzSfyK+Mburr8qVxQ9RaQyqVC/SMf9Rj6lEJlh8lR
XZi1Ys3zaeKXpDipVfbUDNYufoTgEmbxYln0BOF82EIXMU+pVeF7aZVEkWQm
6R/nne6k1tyOcDJKrbA8zVnZrTueN7PlYmWFxDTMhqOnJyYy4GSO5eUS8haP
q/voKMpHsbM4p1aN8axiONRlmw/72XkCH+Lrc4W4vSZnPRL4yjSGWqlkJgeD
mL/uiTBygBw/Z1KfkBfghThkfSO1stR/Two0l9QqrtyCYmUqVsQgvDkoivnr
QkbmVyJR2eU2gXSGYp64qNeEX+ms23uBM6rEo2/Y8/L6XS8JfvqEyXCqcfTc
yyJ/7iU+aL8ULNNlDpZVKTy1zySeyRWDZzjru/vhV1fe/azwKdTwWNn2mU3G
OhWeR73/zKW8fqmf61HTiaTs0YAq3/vYa6EiHSp8HN3P1DMWV5KQYtAjn79J
XubnBUeTtZ9nnJXxtRSPfJYRQk2PGLA8HfQo1Cziew7smsNU1lHHaQh3U2BY
Qgo1X2oExC/vEKgxoVbXymleKh+2KxIzazfruPG5Xs/UICrTFWCOFjIKjhbq
c3Z1b5Ff0QfqiqIWps9I/as/kZNvxZhThBWN3BfvPQMVTfbkhkhNWKEClt0l
MtDRnZp18nTMcDYOR/P5MBVLRguRlqOFSlfrKOyBTtKpla0cMeyw5Yg+r2Ux
WUYMUbZYaZFdt21mdd5FMssqiGqjPi886Ah5fsTZtKz8ZBXL04vu1aP4QPEE
TnaHT9+o9tV1cITfhU5Ola4sFD/BNlRY22UshSPp1dr+bFLZGc2R/DwaAuJI
IeZoHbrLPZc11oTAWS3ryPFTboNekLuHFc2MJMCURMk7LRhiZfItRLAs3tnB
HJcrTHs7ilO+mqeXhvXp/kRdIGsq3Hwn5Ao1bpxgfxyHMYky5Dg6M+U4YQ1r
UcIWzVuPGo6+k+gK9zuENefFCesyFczq7rnMGkqUBpCrTyXsyGDl3/xLrYZQ
wjnRJcqC7JqqzPrgbo7iVCZlMgizWr/USUoy0WqOw5Xxc345hp6ddHPW5fOy
+o5iWVnrbzCQ2M5xgucsVRrid8DIynv2D15A+y99FjLXdzypLKbUYZWCEs6w
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
yC2ZAaNzT0k1z6IKcwt/Un3KT+v7Ya5SWLV0vErFB97rAttmBg1rNxm05Vgx
bJuzEFi7mYW0j/rIcxUt+qS761yvlP9nL3Wvwkk5cJ6jTea8rTL+XZ/2d03i
u5dJBnfeeRKfbelf4zeItHLUi0Wdp6gfGfXvrZwHkrPnzjsl9a2dPks95ryM
f2+tZH2t4td5GZ3lPRt+5i4SviatDVIFaBW1F3/2m0hQn93oT+VN+Xd/z4VE
nvjZjY7yNory1lH/rq1pVKxXyk/xdgg/k4RVj3TWn5pJtoj6R+IcZsxtFOVX
R/27v4FEsrz4WZyOcj4N9e02Gf8eIk3w57py1yaDv2l1TsaTXxf1+Odk+OZv
YJXZrz6F9ErXw/v3No5qmS20OyXV7VTrtgn/HqynidM8id9jFa/aJvQ1xMLG
FjdflYdLH+OoTlX5G2dspa3DKnmbSYLqK9LeCORr6bU/JdXtlWa0i3pMPRMf
H+NsJhayipJM17hWVL2xOslN5u0cHXI+3vmK8stdr1Qkaqe0MH6erqPe3xIr
dPF2rexpeiFXn6j41T6KBavQOku/Pvqrr4N7jn/t7vlKnKHXQVE/OMrx9or6
DqekvqPTZYkEvDEtmSGdmZCzoXaK4tf5ae1D1zpOwvDfIXef6Ch/b9QoUg7v
L+/7dE3Qn3Us5+zp06EHZrxR6BWiTvyEaEc5T/YOGUCHqNesrTRwmuOXzHU6
OI/jY2HtqH5PSdgBKwu1HQ2p+p7PoqQKeYGivL/DMhWB2CtkaBecknLmpyFe
+VsNU5GyptI+roMPc52OUUxqOJ+W8uTTqrTH5xm5uk7XUVGvzzvvm+E2KQ0Z
efysc0c5b/0M2f4FTvuyp+0ltG+m45fMdS6Iah/fJiermoZyy7Uiv2MY7r+a
8+++knaho0HekHRSVF+WsbALFUadTkn1RQ6+aEf8lmR9kubsGGfjJ+Nl8hbL
sVSlvMx5Vf/+gTiHt3b61P5eUa/aSWlh/NR+R/nFjiaZk1yU8e0liuq5ypI6
RbHgeyd4blItGfps9ytz2neHDze/FiV8e3hvdJGTYPIG4wT1PaLcvkh5n4tP
ST3vaghVnIszvr1Qad58xa+LM5rH1StfHj6ceuNmuVaR5Ae3vGq/frHyufoO
im5Ry2KvkHnE76BwVHd21iuzb9u6NOnX3/7gM9G5hYpDl6T9y9Pr7y1we9Fl
LLuXOO/1/Yft2j/0yMvefZv+5k47fWNIl6ivJF0hr4jfGOLo0lWkzo5Xt993
dMSC+5/+4QdGgosU9Wz1xuq1S5t2Htd+2P55qzzdxR8df+tIHVNrONq02Xe/
+Y3ckPOgv8NOU6G4A+Xt7CiQ3KDrKSno6iiQNwaUDGdwSR9sZL5QUct7tT9a
towe5b07NycnIlb/8t6nvvvK28dbtWL4+ctHH12ksNQ31FzkPLLXcs3rbqek
q5uCz/HC/Kwg4W+DB1iguMGbrpMZQkHCB4ToNDPhw+hJBb7KOC5U8Lsrqv3d
zj7jNvpCGYWKXfxuHke5v5NcNOYC913mZyUOV+/15yteMYuAD+GCGMmHixMc
CxFqavTXYkc9M2pQbyDom5t7KOo7ON6mqindlPX0OCX1PcXaOziaZH5W7vTJ
R/j5ik/tMzh/ffx4zsdIH52YM+v8JJ/hGfxxyJkFd33DVPwOTP/WWzx+/JYp
R3GvqrT/1vOz+Pn7c4VP7aJ6mjzZnlEpvuuxWsY+2inv3UtRzHm4rp5QpqFS
1+uUFPO9TciV2yT0ymTFtRyuqSx+juIT60bIB71bMrkhc2A94xgV/dW2LfL+
75O1a9soyel70rJVJ1Ia8sD4PWmOcvvmU3LlUD8K+nW606dUhJ+t+MXaHZxw
Kiv2c5+UhK/JaAJPMAOxpBrkn6douFRR3crZnro/LmB06SmpvszBl4zoXKVj
Zzq/EbmzL/CKtW6dFfu5bsqah2es3o6Ryp79eweZt+jb/vydrKnqyaWOcqnO
xW/7c5T3cfokmXALpV/Ze8dmKl7JOyC3hotZYORmL6M9Q6K/cm2Yzi6bOzpk
ttNHUd8s6stJbagP9zkl9X0V9fptWMOMT5+henAFt87+z85Id0BUC85O95YZ
Bd9Gqjsq9c2cGZ9OSkP+Eb/D0lHez9m1zHabJnT5r+7+zYxPn66ob5LR2SYZ
a+4TtfrGUVvxNVaZ6fRTlLOX9u2kNOQf/U5JeX/lyxsrTxG//3aa4pddBxNm
+PBR/i1wyoP3jP56jqM+5R/1HZf9FfXUxqRvJ6UhBxlwSsoHOMolbrO2G+JV
S6dXKd8+VfFL1tS5qg7cdMuohLs6bDlvgCawna4S+TUYUlfVt+tmVz32V3TE
b9Z1VA9UPDLwTF7S2vmPVPV1ioJN/5fMP85LWLKa46bmzGyn8x5fVZb6+SBF
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
+4qw12MbzN8Vzd/7THJMtVLY0u6L10kTn+2zanjp0FmSRir4S8uO+mglDwc7
LMT6PD/SUMH65OlLbK8f7KBK/EdDQSPG+50g7fXqPbHMlb1e57BI7nDrPEGM
2gv2yLKyI/d3uiXbvr/TLVy31I3Ar0j+5Da5wz1YzVtNRLE1u7jTXaPmarAb
fXIPo9pRLvEf6ow5+k73BWVH7+/yy+7wMNE0Fzj+ui6p7ZzcDTH3WoY6askN
En9O2eIdfnJBpdKgh2Zpmj/11PlidO735WVH7LMyyM6QkeNhVbEjr/MW549f
ffPlgw/2LGh3HLW8N6K1n9UMtbGEh/Exn4O3xP/25m/GDgqdDeUINaILy44o
zt5gdnv8HlYrS4/q37z1y8f37QfYT3fp9p/vvCs+EcBYvvnRScu3iSa+wP16
3d0vnHTurU//8G/Nr8yE8aPZ84j991dconNlMDNGuH+woizGPmeJ7NLIhcGa
sxJb5z0zPzjooMfue8Zv+w4t0DncgbH419IW/c3HnybzozKJ/nDRMkZf/drG
VpmHeh7IG+GOyUVlR3W4mrWRjiZiL1kd2qhW7+ZiVH+cYSyWloDHUtez7DPy
UpfPH8qztdhS1llphjn+EZquLDvqYWrUo9x3se7EUohuSRsbsBgXP9Bhm1i7
NYqvznO4yd4ynznD33BMNGW+eobOw+RzDok+WFV29Icp/GgpBgvP2sThrEBg
1hW0az+HcWKv53NUBZ9CMYOGv8maaEx1Y0HmQOtRfg934i4uO3Kdz2qMk2lZ
d84t8Bm90Hovzzvd2l5vpUa+0M2K+JGKWTToT9CeX5+lLLGYdZ41fg+r2Oqy
I/fZyEQ+jo/0r1lRWMnPn6r67G/af9Pd6drE6vUnAqIbFzjcZFbyWTSKN6Tb
upEnN621teCtFln/Lyk78iFKNrzPS6w25vX3HheQYC/Hj4nfrovD1tvs7SMa
mjVsrsNL7M/8TqmLkyN/hkR42qev8ylq7/ClZUc9WMmF9/CKpUePbuxl29tJ
c3LDmudq8Y62o8LjnKhns9eId8aBenunuhMClfdua7v4YEXjy8qO2ucJFZk4
2X0Xu3imhRnnpg+ZPfWa0879muh2fyNceG+Ww0/2mPnKSe2yv3Z2FEi8yDp/
qs8VKrK1tiwFDlL4mTuExjae4UaeWMK+fo7nxXw8SHdHR9lvMK9sODksesBa
ZWWoW4qF0F/vAuOcQQb65WVHrPMbMYYj2MbTHJXjQEbJ4FusGp/3VIY95nQ3
G7JiFD2evp9Eb/YocJ6JVxykRk4vQLBD1pUduc8gLLJhoyEiHc+MzT5GPs7Y
XFhzKp2Gzning19hqsIv7+nO39ihtzOujKB9HvS7BNtzfdnRay+NzSUere2T
Uq0qnhfrTayLbY03fmneiM8iggeJWcJVrYK6eG7/6hfvp/ZQciKss37zpCfs
GTaUHeHASA6Mvpjk6CN2G7On65vOzOYEvM5d/+Cpi7duuuO5/3DZ3aP91VmK
1vTSvfjar2ZcfPfEpbfffP9LZrzM1BRXNtAZ3HW/V5Qdkc/RL/wzxX0XSWdW
dH2z2NK1Qeln9XWAGs83FF52ZhuUBlZfmf9f3y/WtQoGKP2yseyINV7T1Iit
tircy/U1K4p7gURb91f8eYbi33yOmOI+pl+Khdja2v9svpu15MqyI+6veNzX
8pT1i5nQYyrna23UFzS09sFPUNqpb1bz1hc0dN+Uy+RUp58aLb8H26H8qPsp
fpupdPMpqSS9vWpVvq5K6+yvfZSuYyRPWJX6ZDVuPtNf74LWMCd5+pTF1+8U
e/HqsqPvq2TCW0WyJp+Uasb4VNPPrre6Ey7gChT8oj6ORU4E+hRmN5+lxJ/c
Jja2rjfU2+Ete4PNZUfdR+TBV48Wm4vx+nHsebF2ks+dk0j4fhHXGLppq713
QXK9tZ1IOPenujaRPkfU0K4pO1pfP0vkYZ77Lra2PVEPfvWPHn/c1yhL7Oqu
6a9iV+8bjdTsInT2K197Kzlt7OqomOxZBK6y+PZTo9/XyZTYsNeWHX2Mn5kJ
njaH/RXPuXUWop7ZWba/JnuqXq532TnGu3OjPXq5WU58ZT2y9O2ZYiI2tj49
76VGf13Z0fv6biIXi5zmFXk/xlHc72QMxVVdxViik310L8dJQstjHW6yYvR0
Ep3so3sXZMrb2EncTC81cttbdP59fdmR91QywqyhwcYe5UaeZCLqnuog0eK0
L7SN3cPRUrxEox1+YiH0cG8lvpP+Bf3ZI5I/ap2eauSEFGIebig78h5uFmTN
4QlksK9HphpV7GtGMOg1p1iZxnCCjjY6Wo2cu8rYX5bPFqty3OGPHmrkhBR8
z1vKjrx7JBshC3Swu31FWe+lMvaDz3znVyKfv/jpQrWVyBt8lOq9mI3ykKwc
EV58D6K7GrWGdGPZUe+j5GJ5NBshv4r3SoptXsw4ms/G303NwAjFTX5VSHzi
Q7P6kzALcTM6C2HEWTeVHXk3JRcr3MjFzuSpk7aO43owwafDaOlYt3dVvQ9X
GqSLm91Etw939Eh0e5csJjoG0Ne7Fo1yc9nRd1Uzs1LJPTOvx1XAOjuME5tj
pNNIXq93URw1zOEls9LZaYVEr490cuT1urRTcfRd1Kh1zOotZUfdRckGzw2C
nXloymOQrk6pThe78pisTu8UaRDPx7p+dkGnH1PQ6Z1SmRNNo6NdddTtN8uO
vLOSjTXN6Qo3uKBNO2Z1+vFZnd5RjVxnm+9Y0Oljszqd3mFtr3dSI4/rHhmr
cWvZkXdScnFp9LahG88wfTyM84knOj1fz2lvRcODVc8dCzp9fFand3CjTqwJ
Hdutod1WdtQdlVysdbjJDsr6IIPdDkHv4LD1Ov1Up42o00U7d3B4iFU4SH3v
kH3rVEfBJBsJz0r0acDeauQdlJTeXnbkHZRc0NsWds30een4jb0cfolen1iY
wfhOhOk9zjpvZiWfM+2MlCayOvpMnsnuQd9m8Pk5RTPfUXb0+s7GRsf94i3p
X4BpKL6n48vk9GZSQWrbO66S3eAAhZvfhSfagf3Eq+OehTkwuWvbq5HzNktY
ke8sO3JfD0zOZOi5CV4xFb8ut0l8lYBkNZqW1dQGa7Pz15nn93Stk9VgmtPr
fmXcM5K5p0KlsWjEvEsUPHvbyo5Y3zyit+YnKkv27tU2mJmlA+Mag4enj5qR
doUxNmVpUayRsKcaOSEFj+n2siNvp0Z+jXqbfoM4bt2soG0K/Jyvsd1W0XE/
1XvbAj/PyfI94cXx7e3UqDWku8qOuq2jvlhW1ylu6cnROLtBLKbWBR2Wj3q3
2Ors8tH31lkdtiCr7wgzttX1Xb02Sjp3lB05W+s9bOBD7rx17HpjdpxLCvTQ
OV17qFnJn44uztKDbXWMu85F2lpp5bvLjt7jJ7b6jUrrck8Yx6772/YJXy8r
8H8rRcd9lLw3Zvl6WYH/Gwv0N5yn8zvye1iJ7yk76lZqFrifCafPXVIeg63e
kNVhK7L6rkHp8K6i2xuz+mtFQc81pLImGqZRjZhQgtV1b9kRNyqZsImOoxXN
WrJJtE59dmwXZ+lQr7hGZ52vL4xxdZYWdQXdalaVBjXyejdysZPuKzvyBiUP
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
+49cJRO50aBtjZZhZb/X+O8ecLRS10VWzs45RxzRnav70Iss/9VAj/zu93+7
+Zrv/vIffsx3a/1bW3ayw+ui+JgqARueZi3Z+ti28j6McbRq7fpcSytWXnZD
KAWtFfVPfVAW6kzHpcDUmh6WC39iK6UGyn3420+FSyvVfstxacD6d7/Y3Lnn
zCmWS6udb0a8s5wnj4dEnfypWIN3xcfD/e9/uCJNgnXwhlSq3VlYtefF/OOp
2aDwrM/hvRsYAiK3gOKDoGvUPOqsMKjaBcTs92r3PbNHq4nmxKjrS1/9d8u5
dU1r7vHT2yxmq+mkjt1GvzSnJYFJpTrVwoPR/GtpiSkK/Gtnof65Nm3++vTT
jZIJ4ufoTk9LAasWYTJjwnX3vMgtZvDNyTz7uMiEe70vo8AH1GHPX3sWYBnr
3PZX3bT6nvd/858ez6DpZC5qviTW3Ln/0x13/Pioo4KvLniOibWPCBLuDTub
wH0RpRM60jaLHsifLf1euxv4vrN27atDhwZ8g8+6c3NzsivMU6n6S+JU4/kx
/V1zO3NZ0CLhPs/uwCpLpb5Hnh+trN9//dcS/SdWj6dWvfpu+byViv5KMGh+
lybTxhZgj3NGG/dY1T8++mgf5Ox3zJWezpH3KcKopgiP/M4IZ/wTfod+FY8/
d0XhhInP7S4xzEGtx7fZxixecNYAw+tWNmrQ109+/h4vRHAHIdR0RtJu42q5
JuRueWXo0CrlpSS2NDUDn0NhCrY1LVA30E14yuIpH4tnTQu/15XFlfdroKN/
0KePPzUQa6hrgkuOLl8WF55zFX4XjOihZeYnzB9P6cjJ1dRfKia7EJHHOx5/
eP993mogJ9ZAi/hNB0PPGa/tY8d50CGaMpyK+Eh8OQWpVnYCn4fzCmJKOyHc
jyCsOA7d7P2q1IlJg8M8OcsIqzvvpfu47lIFFvoqdYpib4pKdlgeW4ez0QpH
VYnutvvsws1sm+Gi0d8+4lloc1TcV2LYmUcz3FJm1KQ/JeMRi9zd8KeIQj9e
E/GyUM3DGf4L8QUhStfCkhw5jGhnvKQ/rn193DjedvG3HAra2gZJ1vm7g7w1
2eyszQp1LmPDf3hLU86ysWPBgCodP0jEM+9cx/c/Df6MAkDPRPClAQN8lHly
f5JZWMN9Z56dY25ICgy9taNyQj/MVky/Ki8pQLVK0e5iBznJYklIPKfCT5AN
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
AeaVirf0HUqOXp/rWxVbetZhGueziLy4F2VlvE22x3YKU98qyYV/teIzfVM6
T4VfW2ytR07ntIjovDqVc+DRpkAtfeu5eKvZwLtG8Zm+09wmy1F/b7H8nuPJ
OJ9F1NelTtb9uR8jV+NIljYKy1ZZeNep8es7yK1T6RSr2xYfLFmvnM5lEZ3c
XO7kPTn7ayxoD31rtdHBTHIe+7Mn4bPWCtNWWW33DxbTF52ujPNZRLbsBifz
yTl/Q0ET6/tlDQXdZWDepHisUWHaWFg5zFv/aDH9vtO9skJ2dvpDdi/M1KvP
+esLq1qjwrQ+u1rdovhM3y/k+PS5/nsWU+uZi85eO6rvVzu5T87569IeZW3X
t8TYSudX/6biNx23TyrEFs4HFtOXFA07KBozZ318zs/7J9r60ncReJsr9irc
rvhM30Wrc/P0lPP8/JPF8GXFj6wh9OGHH77yyisP2M8bb7zxySef1Kj+t3CN
i87/a9w8J+f9vDH03nvvvfjii9MXrL7uxq1vvfXWZ599Vp3iAw6/U9GGmLzz
zjvfuuCCFaXStcccgze/+OKL6lSKYaH/sx3JD5UO4J0MYH/m5OkTzpzWtGB5
xcIVG0tV02YvGn/qxEsuuxyjqlTzenNWb1QVZO2PLpa96nsvvDBh4lkTJ888
Z9FK9j95xvyx40+9fsuNGGVFKsfQONsVr1oMGh56+NvjT5lw1rQ5c5esRicL
LliHXsaddNod27ZjxOwlPpX40I7YegJrvW4GvKuuvgbDu/W+75Vq7n36Z6Wa
tdfuOHPKDODY7CIKtmb1Devtxbu9f/n5z1esXD138arbHvqB7atq5YZbJk2d
CXqC9Kzdw4tH5lU7qlrP52CfBQuXLF6xYdujr5aqzdt1O5547YJLr505ex4m
NN6t/saOxHoMq0Dr6+96ZuLkGas33VZvYeJ9oHD2vAuA5x1Z/VPh1hbw245S
6bRjT9hw430l+3Y1UJ/WdO6qfXuL78J6d6vw1oVX3HnG5Jmbb/sO2914984z
JzVtar+37PP/xeJkfYOVa9ddcdnm7aZZo/mvcvailSQnT1vqlZZpttWNmk49
HZ2XWtk3Jk0755XtlkD0LmNCz5oyw8wRewRlJp4x5e3nniv9a6BF5csvvzzr
3AtNA/YCSmAmwbI8kaj2OuPmrdtB6FJr2wq9TpneBAgCC1yIaQu9ACtMjHn0
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
nz7eILzbjgTTcsPdL2y8ajM6Nvk12Xr1ptvOmjT97jZtvBll+rdpciXX5jM7
d0oO1AaX3fiM08585oQT0Jb13DZcdf3ilRt9C5MZ9BsnnvrK1KmWWnbGJQdp
yHSqM/syV2LIdMrnl23evm69XcZNT7dHPYU8o8whvHjFhoce/rZ5tMM+D3lG
mRN11rkXvvzyy64njo/ZV996663JM+a3nME35IDV2Vl1T9u237V0zTUhW+zE
yTPfe88mf2f2QzAW5jU8Hzv+VEyv62lr1JNuCW4Ca4eegADQCM9BNJAu15PO
g6uz8eo8uCHfqu5JZ9zVOGlILeMUsubm6aQhtUwnnRkXQ8GAwtzpzLhAEGim
c0d+CtltyU/zzl8Dxk/4ae6CxRBy6SnkG9Y96Qy2ASZ5/MMPPzxz6qwgA5BA
yHnK45Q8MOyMuUtNywbHmZOnz4YMSZXC+3fcPXfJ6iB3Jrtw0xyTmzrIHXXE
dx57HDBNdu86BxM6x2RBZeZUZhnDQuyVSZ3LqwspMhBNj3dGeo/J0qH3QLVK
l7ccs+a1FkfbwCy3WMeYkBW/UWMuuGAd0OGbmLUV627ySXUtLKuvmQukDqoe
0wNVP2rUGPwP6QSHgPqkJyGY3Gf2nnetv8WMD3p79NFHgWipEi9abt9y400m
Y6x5arlN1i2YCZK5lL36vLeSsyVk/DD/PRy9Ca0pmVatnq30WWjlzZALyLz5
7ehN4MxdrvB9yBTLjBghV0N4k3lamVHCYLfdfg/ZXZmTImTUNP89Et4MdhG6
cLnWXOZSnseFzKUnub4lZyuzIKjcjGXeN7BPj2D/xGXOAGX/XJlGW8r86c/c
iYRkMAj5Bv9cmUdbwscAZTwEc0eCRXzmzjgj4+5k7vw683J+1XyeYx1/Cp2Z
QU7lA/zK+Tz/u0elZ8vnKaH5vJv5M6PcjLuf53M3c1ke5+guOeiYZTBk7rOe
ht3Ip9n4NeKkqBblU2FGjpBvoir0WiZr5VekXJmskYyi8D4hyWIZsin9aVks
vz78DBKnRZQMuWEqFKa7yhb5VTErl7GRJ5shYyl1rF/4v3T2yN3KZLmbuAVe
ZH6xkMsmm5GvTDbGmmanmXcz++LXlqnxBEdf4dJaJUVfNlPjl84j+SfgrOnu
z+4KufB2nQlxtzMefqWsiLQUIFGvDB5suLha2X9fLSviVxhDixhrGnMJeCqT
045VqMrlG3Sa9kvlRtyN3H68zOdXgDdnzapy1rHMf9cEty+Td3C3ciHuBo7m
z9MjOurcgEHLWs9djc/rCMMdg0Dzyozdbmu6Sr63/3B5t0OuTWnJnHfeJyex
bMx556sUYqthGj8d9Riy6GWz0SW3fM0ZrNVmVdAZ/EmSisU98igh9KgyxgXP
mvgNqS+xItGYLoX+mAkN7Z8qk9MteNjEU0fLO6Vh3J/OEfeSu7rErGxJPhbn
O/xB9H7Ixsm8an/wt+yudu9z4iOP30vR+zovW8iCpnI8RWcR1vEke3HWxPBr
d9VL/fsD0itDhkAUyD8hUxmzgPkTyyia9oehx9Y86cPrb69ahd65tAFNPMRE
c7wmp5jFL/jdBcyrEW7oiXEJos98VyEXIhjOn5gEf7+IhvVbyB41vGvnJcSk
SsTrj7Nt7alNVSxZpu1Psm19HjwqvOhu5WvZ9lc6/vV+b9f+r7LtfZ64hN9N
+9ez7Tc6fvZZzVxM1U+z7ZlFzZ+QRdFRf51tv6FF/vxZtv16x4+FiMo3su3X
pfwbxSD9Tbb95Vl++nm27Vrb1p9JS7ziL7JtbfampFaiaftWtu2lWX7522zb
NY5f/B0H6BI7vr/Ltl/t2hf45ZfZ9he3yC+/yrZf5filkGfm7Wz7la59oi9N
+3ey7S9qkV9+nW1vowRCVEUUTfL32fYXpvwS6bt3s+2XO35JIjz+MduWOTm9
tSiLxnvZtstSfhFd9H62LbNtxnV/TdsPsm3Pc/MfJySx4/unbPslKb9E+uif
s+0XO37hkhvxy4fZ9jb+M7ld4tr/Jtt+YYv88i/Z9uc6finkW/zXbPsFKX9F
/PJRtv38Fvnlt9n2zKYS57px7T/Otp/r+Ospl3/XtP33bNs5WZ75j2xbGxke
bFdxGv5ntq2NVQ+nt8Jfn2TbNrXIL59m2890/OItOneS/H9l289w7ckvUczK
72x7ViT+nEd+zc5ODu/Tl/fpp5/ygrTOtRLx0/+y/X3ftm9qapI8IA25/mqe
ffbZcfaDLpcuXeryYCT3n1w8yu9tv88rPCsAolWu72oAfu2113bs2NG5c+cm
X4dd574znXwWeq7idb4oi4Hutw4PQAb8P3r0aF4sfvPNNzGQVo6jC9Enf4gw
59Vsn9ehCi9OnjyZmQRqc/Dq2dynCsD/oFS7du3MbVnGE8RRsw7mf0Uw2YOl
lm1/5ZVXMm0Hb9CWsnAr6+rq4nvTVfjCq+54UdViFun6Y4BZ+5LbZzbb+9PA
1+QcoCV5iN/pVCvIxzsuYzoIqbeD8aI7XlR93+0KCvamLdgpN/OZxWDr1q3s
B+M0eR30OHmLmgzdbNM5EGtzO1LlBBE79X8HGA3MqsDp6NWrF1NofPTRR+gG
j6oULLvnNXlffHYFjooU4VV3n2mkYMP83wFuFVMVAEfA4swwrQOTqlTmxtgW
L5CC/kI0XuANc3DxG6+/XrCa/59IiimlwJfY1fAavB+FuzusobYhMfAqbxTz
b9L61RdeOKN796fcVtT09H8sRLuXqSVeEFx0wRwd4VZ1gGLv1dZjYBBadguJ
ntely8Jk/fx/bb9211XL3A+gHTkZ/UIWSppmpzg55w1pPLi6e/f+pdKzPXv6
DaLvs5rJGPA/Whu51jzNO8mgE7gCvy5t336/UunhgQOdvjSfPcLYTcYh9Ac0
0V+2L5Oj47gRI2r22GMMpmzQIL/Nd/nkte63bwVbLtJM5lOZfYe5VXM5is2n
KvuOPSMs7AHMpybb3t4YKWSnM5/abHvLVYWswOZTl20/LitL5lOfbc91I7cn
MJ+G7DvHu3cK+wLzacy+w3uuub2B+bTKvmPvIiX2ntsfmE/r7DvMkvqHqPZF
zHNtsu8w71TO7jOfttl37Flvcm83fqdd9p1RKX9F+0vz2TP7ztGOv5I9g/m0
z7a3N9vCvsEXvnN5tnV7lTdV9prms3e2PTNg6f2D+XTMtj/C8Up8Ic2PuVP2
neFl+atz9p3DHX/9RGdvNp8u2XeGpTwZ7SfMp2v2ncNS/opsQPPpln1nqOOv
QiSd+eyTfedQ905hb2E+3bPvDEn5S+m8Htl3eD8v3mO49r2y7Q9x/PhUvC81
n32z7Q9O+SvSd/tl29s7bYU85ebTO9ve3k4rZMw0nz7Z9gekvBWt/ubTN/vO
QMcnhfhS8+mXfWf/srzVP/vOAMdbSVUA986A7Du2p2zuBPPZP/tOv5S3ol2B
+QzMvtPX8VZ2PT0g+w5vTeUsdfM5MPtO75S//LGTy3Gr2zOnqraLzefgbHvL
pcHG9QEwLsOtbt8r5a+IHwdn2/dw/FXIsWo+Q7LvdE95MtrXms+h2Xf2Sfkr
2tuaz9DsO90cfxUimM3nsOw7Xd07hb2p+QzLvtOlLH8dnn2Hp4ot2WvDs+90
cjyZ5a8jsu90TPkr0ndHZtszXidnrx2VbW9X2ay9NjLb3q7i2fX06Gz7PR2v
FPIpms+o7DvtCvzl8kqYz+jsO20dfxV8c+ZzTPYdZk/NZc0zn2Oz77Qu8Ff8
zpjsO60cf2XtteOy7zBjYS43rfkcn32nIeUvtR8Ym32n3vFXYT0dl21Pr4K+
0Ws+zFzGCNCPPwYWz157xcapBx589mHD79qx45VXXvniiy+qWuQ2u8/giWbV
3ffce8rpk+YuWb1i3U0Vm255qFR13sWbmxYsn3jW1DfeeIO779yKy6xiPBlj
vOvS1VeVak3Mau1tD/2Aoa6vTZ9etOuYzetH7s3J02eb2FvGz5vY2yNGPm2N
OteeOaoYP4xhLTpvmWnP+OALLrnm5o32KCrXGmMDUiFuOY26DrgwXjrE3+di
2XVrkFziixmHDSKig7j1SVFrHbWdRkjr1iHeWsel51pfctnla6/dsbutt9x4
E2a6pZh23Rpb7hlzl4YYcVBn3EmnuThkTZPPPvts0tSZJrq7TeaGQmjN2QEB
QIZwnwHvTZ1xzieffKLmkpxy/ZYbV264xTRszNxZ0K2B4cJF5y1esaFU7/oG
rLvu/pZvzYgxnlo/9PC3wRqGq2psawDCOMw9F9eaESRWYhrAQuCL8adOBOnm
L70M5MYfY8aOB4aMxLcfxkrYs9AajAk0vm/jxhd27sQfQM61ijNlQcrI9R5q
nOEKioz2tHoa6wxTC9E9PTM8DSsaVKGOa2ae7TQu+Y/RuzRVnrI1Bf+74pLL
xQV/HuHmY1CgSV09+XKxs/8TYoF3N6L288A/1b6SZbwuZOJV/6T41K8Qvxrh
GMXaMOrSOwYL8av5+NCvGetdxIv+V4S5j7wXzEPMio4X1TGZf1IM5leI0SS9
peq3i4kv6bgYHaOpIx2/psjGrzUKMh5ZiGHyd0Tike0yupAnFV9TJOSXjDSM
xxEiuhkhp6rWl43m+1oiDXczqu+PEc7f9/FbxDnUYZexxithFCfMiL30Zo1u
HaJb2Rrau0zrEKfJSLsQyetanxa1DtGIbB2iEdPWXO9DpCGj5EJ8c6510Gxs
HaJyc61DhCCFM8SXutbMMSp1SH38X30LeEetW3vJgEiAu/71scfMgtCzJ8wG
bBKpDmIbYEIECfoBS7mPm4x2GbTxgQkmG9+j05PTUkwFM/1+tXru3qY9pvc0
7umZf3n6l6d/efqXp/8/emq3o5W+8kMhviJt/ZJ9+uabb9bV1ZnYlbpdtzbR
MU1NTYw52Y3eQ7UbviI7tpbesU4Dkwmfaf59RRlTXWM33qyeMGFC/KbYy/iJ
wQiFuIJMH5U33HADoyNKFaZkjAHLpOILFixA/w8++OBu9FLHVPJ4yxe0wIuu
BketTyDfbIMZsv0w7mLHjh2AyxT9rEQQsqyX5QJTC4NVcfA/4AEPM5zyuNs3
TUUB1pnYunUrc+Pr2JkMplWgzeTJk5laXkdJpO1fUbNSvvX/TEn7y9O/PP3L
0788/cvTvzz9y9OWntJ7/Nlnn/30ueduLpW2de3qsruYD88PeKbxySefXHLZ
5WPHnzr57HlnTZp51uSms6bNmTDxLCadcW/wTIN+ju+98MKZU2asvXZHqdqe
3N320A+YEIcnbPZD/4M9kalCN2suWTt38aptj75a5zLyAMgDDz7sMTottDeZ
u9BfOO8pnpjFJ30hT5U/S5o0dabL9hNa0/YBLlOmN9163/fknGrlhluu33Jj
3Hd8qvXlzsC23nb7skuvbynTk/nE52s6l1X5s7svdy6ozxwxCMbvZls/+eST
85detrvnmR9++OGEM6cFmpjsSjNmFynI2Qlnd61bmMu4dchOlssBFeaSfALi
Tpkx17RmnicQaMasufHMx/425lcCY/Gk2uRrA0syGV3KhczkBFzAiBMnz8Sc
VtrTcfQ/d8lqsD4EwL0R34t+7733wALnLV1eqjD/mTnDxis+1WQNnubo03u3
f7F336LTO1vVRZ3e8Z7Or8KT/9azunJnd/+exYx7sv+5p3Jfx2leOnI5t3Mn
U3+2k68ve55HLH8Z3orO6/6bsdzF+d2/KXqO+B9EzxGKnhbLuuiYKDkK+7Oe
u32tZ3QtjKb5z3bS9pVP44ix1Zm1Pq+HQ/nrO1f7E8/dqKebo8/urwOlPf4/
aBBcnA==\
\>"],ExpressionUUID->"a524c297-2177-495a-b005-aea33b483d7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Labeled", "[", 
     RowBox[{
      RowBox[{"CompleteGraph", "[", 
       RowBox[{
        RowBox[{"VertexCount", "[", "g", "]"}], ",", 
        RowBox[{"GraphHighlight", "\[Rule]", 
         RowBox[{"EdgeList", "[", 
          RowBox[{"GraphComplement", "[", "g", "]"}], "]"}]}], ",", 
        RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}], ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"n", "=", 
              RowBox[{"VertexCount", "[", "g", "]"}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"3", "n"}], "-", "6"}]}], "]"}], ",", "Bold", ",", 
          RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"EdgeCount", "[", "g", "]"}], ",", "Bold", ",", "Red"}], 
         "]"}]}], "}"}]}], "]"}], "\[Rule]", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"h", "=", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"ReduceLattice", "[", 
           RowBox[{"FormulaGraphReverse2", "[", 
            RowBox[{"FindFullFormula", "[", "g", "]"}], "]"}], "]"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"400", ",", "400"}], "}"}]}], ",", 
          RowBox[{"AspectRatio", "\[Rule]", "GoldenRatio"}]}], "]"}]}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"Labeled", "[", 
       RowBox[{"h", ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"VertexCount", "[", "h", "]"}], ",", "Bold"}], "]"}]}], 
       "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"g", ",", 
     RowBox[{"BarelyNColorableGraphsOfCount", "[", "8", "]"}]}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7747823469974976`*^9, 3.7747823748934383`*^9}, {
   3.774787063336691*^9, 3.774787074318121*^9}, {3.774787109623047*^9, 
   3.774787115901473*^9}, {3.7747871786435556`*^9, 3.774787181538121*^9}, {
   3.7747872271898184`*^9, 3.774787273252098*^9}, {3.7747873184854116`*^9, 
   3.7747873377181406`*^9}, {3.7747874010739756`*^9, 
   3.7747874315452814`*^9}, {3.774790861996194*^9, 3.7747908778965273`*^9}, 
   3.7748150555147133`*^9, {3.774815101646681*^9, 3.7748152023205094`*^9}},
 CellLabel->
  "In[743]:=",ExpressionUUID->"19fb66b2-9da2-498f-830d-962cfb9706da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
              SparseArray[
              Automatic, {8, 8}, 0, {
               1, {{0, 7, 14, 21, 28, 35, 42, 49, 56}, {{2}, {3}, {4}, {5}, {
                 6}, {7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {
                 4}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
                 1}, {2}, {3}, {4}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {
                 7}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {8}, {1}, {2}, {3}, {
                 4}, {5}, {6}, {7}}}, Pattern}]}, {GraphHighlight -> {
                UndirectedEdge[5, 8], 
                UndirectedEdge[6, 8], 
                UndirectedEdge[4, 7], 
                UndirectedEdge[4, 8], 
                UndirectedEdge[5, 6], 
                UndirectedEdge[4, 6], 
                UndirectedEdge[5, 7], 
                UndirectedEdge[6, 7], 
                UndirectedEdge[7, 8], 
                UndirectedEdge[4, 5]}, GraphHighlightStyle -> {"Thick"}, 
              GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}, 
              VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {-1., 
              1.0106430996148606`*^-15}}], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-0.7071067811865471, \
-0.7071067811865468}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-7.044813998280222*^-16, 1.}}], 
             
             LineBox[{{-1., 
              1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{-1., 
              1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, \
{-7.044813998280222*^-16, 1.}}], 
             StyleBox[
              
              LineBox[{{6.049014748177263*^-16, -1.}, {
               0.7071067811865481, -0.7071067811865483}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{6.049014748177263*^-16, -1.}, {
               1., -1.133107779529596*^-15}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{6.049014748177263*^-16, -1.}, {0.707106781186547, 
               0.7071067811865467}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{
               6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{0.7071067811865481, -0.7071067811865483}, {
               1., -1.133107779529596*^-15}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{0.7071067811865481, -0.7071067811865483}, {
               0.707106781186547, 0.7071067811865467}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{
               0.7071067811865481, -0.7071067811865483}, \
{-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{1., -1.133107779529596*^-15}, {0.707106781186547, 
               0.7071067811865467}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{
               1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{0.707106781186547, 
               0.7071067811865467}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False]}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              
              DiskBox[{-0.707106781186548, 0.7071067811865482}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183951, 0.7297182461547012}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-1., 1.0106430996148606`*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{-0.7071067811865471, -0.7071067811865468}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183942, -0.684495316218394}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968153465`, -0.9773885350318472}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.7071067811865481, -0.7071067811865483}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461547009, -0.6844953162183955}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["6", TraditionalForm], 
               Offset[{2, 2}, {1.0226114649681528`, 0.022611464968151727`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.707106781186547, 0.7071067811865467}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["7", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461546998, 0.7297182461546996}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["8", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968152157`, 1.0226114649681528`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
        RowBox[{
          StyleBox["18", Bold, 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False], ",", 
          StyleBox["18", Bold, 
           RGBColor[1, 0, 0], StripOnInput -> False]}], "}"}]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )], "\[Rule]", 
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{{4, 1, 1, 1, 1}, {5, 1, 1, 1}, {3, 2, 1, 1, 1}, {3, 1, 1, 
              1, 1, 1}, {2, 2, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 
              1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 1}, {5, 1}, {4, 3}, {5, 
              3}, {6, 4}, {6, 5}, {7, 6}}, Null}, {
             AspectRatio -> GoldenRatio, 
              EdgeLabels -> {
               DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
                  Rotate[10, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{3, 2, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
                  Rotate[10, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[30, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[30, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[10, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
                  Rotate[30, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
                  Rotate[15, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{4, 1, 1, 1, 1}, {5, 1, 1, 1}] -> Placed[
                  Rotate[5, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
                  Rotate[20, Rational[1, 4] Pi], {Left, "Middle"}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> {400, 400}, VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Arrowheads[Medium], 
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              
              ArrowBox[{{0., 0.4045084971874737}, {1., 0.}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["5", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 0.20225424859373686`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{1., 0.4045084971874737}, {1., 0.}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["10", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {1., 0.20225424859373686`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 0.8090169943749475}, {0., 0.4045084971874737}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["20", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 0.6067627457812106}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 0.8090169943749475}, {1., 0.4045084971874737}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["10", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 0.6067627457812106}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{1., 0.8090169943749475}, {0., 0.4045084971874737}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["15", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 0.6067627457812106}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{1., 0.8090169943749475}, {1., 0.4045084971874737}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["30", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {1., 0.6067627457812106}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.2135254915624212`}, {0., 0.8090169943749475}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["30", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 1.0112712429686843`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.2135254915624212`}, {1., 0.8090169943749475}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["30", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 1.0112712429686843`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.618033988749895}, {0., 1.2135254915624212`}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["10", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 1.415779740156158}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              DiskBox[{0., 0.4045084971874737}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 0.423943438938558}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., 0.}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"5", ",", "1", ",", "1", ",", "1"}], "}"}], 
                TraditionalForm], 
               Offset[{2, 2}, {1.0194349417510844`, 0.019434941751084317`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., 0.4045084971874737}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {1.0194349417510844`, 0.423943438938558}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 0.8090169943749475}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 0.8284519361260317}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., 0.8090169943749475}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {1.0194349417510844`, 0.8284519361260317}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 1.2135254915624212`}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 1.2329604333135056`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 1.618033988749895}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1", ",", "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 1.6374689305009793`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        ImageSize -> {400, 400}, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],StyleBox["7", Bold, StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
              SparseArray[
              Automatic, {8, 8}, 0, {
               1, {{0, 7, 14, 21, 28, 35, 42, 49, 56}, {{2}, {3}, {4}, {5}, {
                 6}, {7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {
                 4}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
                 1}, {2}, {3}, {4}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {
                 7}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {8}, {1}, {2}, {3}, {
                 4}, {5}, {6}, {7}}}, Pattern}]}, {GraphHighlight -> {
                UndirectedEdge[5, 8], 
                UndirectedEdge[6, 8], 
                UndirectedEdge[5, 6], 
                UndirectedEdge[5, 7], 
                UndirectedEdge[6, 7], 
                UndirectedEdge[7, 8], 
                UndirectedEdge[3, 4]}, GraphHighlightStyle -> {"Thick"}, 
              GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}, 
              VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {-1., 
              1.0106430996148606`*^-15}}], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-0.7071067811865471, \
-0.7071067811865468}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-7.044813998280222*^-16, 1.}}], 
             
             LineBox[{{-1., 
              1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{-1., 
              1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}], 
             StyleBox[
              
              LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
               6.049014748177263*^-16, -1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, \
{-7.044813998280222*^-16, 1.}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16,
               1.}}], 
             StyleBox[
              
              LineBox[{{0.7071067811865481, -0.7071067811865483}, {
               1., -1.133107779529596*^-15}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              LineBox[{{0.7071067811865481, -0.7071067811865483}, {
               0.707106781186547, 0.7071067811865467}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{
               0.7071067811865481, -0.7071067811865483}, \
{-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{1., -1.133107779529596*^-15}, {0.707106781186547, 
               0.7071067811865467}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{
               1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{0.707106781186547, 
               0.7071067811865467}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False]}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              
              DiskBox[{-0.707106781186548, 0.7071067811865482}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183951, 0.7297182461547012}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-1., 1.0106430996148606`*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{-0.7071067811865471, -0.7071067811865468}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183942, -0.684495316218394}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968153465`, -0.9773885350318472}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.7071067811865481, -0.7071067811865483}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461547009, -0.6844953162183955}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["6", TraditionalForm], 
               Offset[{2, 2}, {1.0226114649681528`, 0.022611464968151727`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.707106781186547, 0.7071067811865467}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["7", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461546998, 0.7297182461546996}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["8", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968152157`, 1.0226114649681528`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
        RowBox[{
          StyleBox["18", Bold, 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False], ",", 
          StyleBox["21", Bold, 
           RGBColor[1, 0, 0], StripOnInput -> False]}], "}"}]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )], "\[Rule]", 
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{{3, 2, 1, 1, 1}, {4, 2, 1, 1}, {2, 2, 2, 1, 1}, {4, 1, 1, 
              1, 1}, {2, 2, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 
              1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 2}, {5, 
              1}, {6, 1}, {5, 3}, {7, 5}, {8, 7}, {6, 4}, {5, 4}, {7, 6}}, 
              Null}, {AspectRatio -> GoldenRatio, 
              EdgeLabels -> {
               DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
                  Rotate[4, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[12, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 2, 1, 1}, {4, 2, 1, 1}] -> Placed[
                  Rotate[3, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[18, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[7, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{3, 2, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
                  Rotate[4, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
                  Rotate[12, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
                  Rotate[9, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
                  Rotate[3, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{4, 1, 1, 1, 1}, {4, 2, 1, 1}] -> Placed[
                  Rotate[1, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{3, 1, 1, 1, 1, 1}, {4, 1, 1, 1, 1}] -> Placed[
                  Rotate[4, Rational[1, 4] Pi], {Left, "Middle"}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> {400, 400}, VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Arrowheads[Medium], 
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              
              ArrowBox[{{0., 0.8090169943749475}, {0., 0.}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["4", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 0.4045084971874737}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              ArrowBox[{{-1., 0.8090169943749475}, {0., 0.}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["3", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {-0.5, 0.4045084971874737}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{1., 0.8090169943749475}, {0., 0.}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["1", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 0.4045084971874737}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.618033988749895}, {0., 0.8090169943749475}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["12", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 1.2135254915624212`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.618033988749895}, {-1., 0.8090169943749475}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["9", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {-0.5, 1.2135254915624212`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.618033988749895}, {1., 0.8090169943749475}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["3", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 1.2135254915624212`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{1., 1.618033988749895}, {0., 0.8090169943749475}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["4", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 1.2135254915624212`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{1., 1.618033988749895}, {1., 0.8090169943749475}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["4", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {1., 1.2135254915624212`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 2.4270509831248424`}, {0., 1.618033988749895}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["18", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 2.0225424859373686`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 2.4270509831248424`}, {1., 1.618033988749895}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["12", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 2.0225424859373686`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 3.23606797749979}, {0., 2.4270509831248424`}}, 
               0.0319088348808545], 
              InsetBox[
               FormBox[
                RotationBox["7", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 2.831559480312316}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              DiskBox[{0., 0.8090169943749475}, 0.0319088348808545], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.0319088348808545, 0.840925829255802}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 0.}, 0.0319088348808545], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"4", ",", "2", ",", "1", ",", "1"}], "}"}], 
                TraditionalForm], 
               Offset[{2, 2}, {0.0319088348808545, 0.0319088348808545}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-1., 0.8090169943749475}, 0.0319088348808545], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {-0.9680911651191455, 0.840925829255802}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., 0.8090169943749475}, 0.0319088348808545], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {1.0319088348808545`, 0.840925829255802}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 1.618033988749895}, 0.0319088348808545], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.0319088348808545, 1.6499428236307494`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., 1.618033988749895}, 0.0319088348808545], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {1.0319088348808545`, 1.6499428236307494`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 2.4270509831248424`}, 0.0319088348808545], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.0319088348808545, 2.458959818005697}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 3.23606797749979}, 0.0319088348808545], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1", ",", "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.0319088348808545, 3.2679768123806445`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        ImageSize -> {400, 400}, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],StyleBox["8", Bold, StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
              SparseArray[
              Automatic, {8, 8}, 0, {
               1, {{0, 7, 14, 21, 28, 35, 42, 49, 56}, {{2}, {3}, {4}, {5}, {
                 6}, {7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {
                 4}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
                 1}, {2}, {3}, {4}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {
                 7}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {8}, {1}, {2}, {3}, {
                 4}, {5}, {6}, {7}}}, Pattern}]}, {GraphHighlight -> {
                UndirectedEdge[6, 8], 
                UndirectedEdge[3, 5], 
                UndirectedEdge[6, 7], 
                UndirectedEdge[7, 8], 
                UndirectedEdge[4, 5], 
                UndirectedEdge[3, 4]}, GraphHighlightStyle -> {"Thick"}, 
              GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}, 
              VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {-1., 
              1.0106430996148606`*^-15}}], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-0.7071067811865471, \
-0.7071067811865468}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              6.049014748177263*^-16, -1.}}], 
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-7.044813998280222*^-16, 1.}}], 
             
             LineBox[{{-1., 
              1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{-1., 
              1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}], 
             StyleBox[
              
              LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
               6.049014748177263*^-16, -1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
               0.7071067811865481, -0.7071067811865483}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, \
{-7.044813998280222*^-16, 1.}}], 
             StyleBox[
              
              LineBox[{{6.049014748177263*^-16, -1.}, {
               0.7071067811865481, -0.7071067811865483}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16,
               1.}}], 
             
             LineBox[{{0.7071067811865481, -0.7071067811865483}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{0.7071067811865481, -0.7071067811865483}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{
              0.7071067811865481, -0.7071067811865483}, \
{-7.044813998280222*^-16, 1.}}], 
             StyleBox[
              
              LineBox[{{1., -1.133107779529596*^-15}, {0.707106781186547, 
               0.7071067811865467}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{
               1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{0.707106781186547, 
               0.7071067811865467}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False]}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              
              DiskBox[{-0.707106781186548, 0.7071067811865482}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183951, 0.7297182461547012}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-1., 1.0106430996148606`*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{-0.7071067811865471, -0.7071067811865468}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183942, -0.684495316218394}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968153465`, -0.9773885350318472}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.7071067811865481, -0.7071067811865483}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461547009, -0.6844953162183955}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["6", TraditionalForm], 
               Offset[{2, 2}, {1.0226114649681528`, 0.022611464968151727`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.707106781186547, 0.7071067811865467}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["7", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461546998, 0.7297182461546996}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["8", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968152157`, 1.0226114649681528`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
        RowBox[{
          StyleBox["18", Bold, 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False], ",", 
          StyleBox["22", Bold, 
           RGBColor[1, 0, 0], StripOnInput -> False]}], "}"}]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )], "\[Rule]", 
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{{3, 2, 1, 1, 1}, {3, 3, 1, 1}, {3, 1, 1, 1, 1, 1}, {2, 2, 
              1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 
              1}}, {{{1, 2}, {3, 1}, {4, 1}, {5, 3}, {5, 4}, {6, 5}}, Null}, {
             AspectRatio -> GoldenRatio, 
              EdgeLabels -> {
               DirectedEdge[{3, 2, 1, 1, 1}, {3, 3, 1, 1}] -> Placed[
                  Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[18, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
                  Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
                  Rotate[18, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> {400, 400}, VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Arrowheads[Medium], 
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              
              ArrowBox[{{0., 0.4045084971874737}, {0., 0.}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["6", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 0.20225424859373686`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 0.8090169943749475}, {0., 0.4045084971874737}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["6", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 0.6067627457812106}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{1., 0.8090169943749475}, {0., 0.4045084971874737}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["18", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 0.6067627457812106}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.2135254915624212`}, {0., 0.8090169943749475}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["6", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 1.0112712429686843`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.2135254915624212`}, {1., 0.8090169943749475}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["18", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 1.0112712429686843`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.618033988749895}, {0., 1.2135254915624212`}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["6", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 1.415779740156158}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              DiskBox[{0., 0.4045084971874737}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 0.423943438938558}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 0.}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"3", ",", "3", ",", "1", ",", "1"}], "}"}], 
                TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 0.019434941751084317`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 0.8090169943749475}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 0.8284519361260317}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., 0.8090169943749475}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {1.0194349417510844`, 0.8284519361260317}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 1.2135254915624212`}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 1.2329604333135056`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 1.618033988749895}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1", ",", "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 1.6374689305009793`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        ImageSize -> {400, 400}, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],StyleBox["6", Bold, StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
              SparseArray[
              Automatic, {8, 8}, 0, {
               1, {{0, 7, 14, 21, 28, 35, 42, 49, 56}, {{2}, {3}, {4}, {5}, {
                 6}, {7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {
                 4}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
                 1}, {2}, {3}, {4}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {
                 7}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {8}, {1}, {2}, {3}, {
                 4}, {5}, {6}, {7}}}, Pattern}]}, {GraphHighlight -> {
                UndirectedEdge[2, 3], 
                UndirectedEdge[6, 8], 
                UndirectedEdge[6, 7], 
                UndirectedEdge[7, 8], 
                UndirectedEdge[4, 5]}, GraphHighlightStyle -> {"Thick"}, 
              GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}, 
              VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {-1., 
              1.0106430996148606`*^-15}}], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-0.7071067811865471, \
-0.7071067811865468}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-7.044813998280222*^-16, 1.}}], 
             StyleBox[
              
              LineBox[{{-1., 
               1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              1., -1.133107779529596*^-15}}], 
             LineBox[{{-1., 1.0106430996148606`*^-15}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{-1., 
              1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, \
{-7.044813998280222*^-16, 1.}}], 
             StyleBox[
              
              LineBox[{{6.049014748177263*^-16, -1.}, {
               0.7071067811865481, -0.7071067811865483}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16,
               1.}}], 
             
             LineBox[{{0.7071067811865481, -0.7071067811865483}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{0.7071067811865481, -0.7071067811865483}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{
              0.7071067811865481, -0.7071067811865483}, \
{-7.044813998280222*^-16, 1.}}], 
             StyleBox[
              
              LineBox[{{1., -1.133107779529596*^-15}, {0.707106781186547, 
               0.7071067811865467}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              LineBox[{{
               1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             StyleBox[
              
              LineBox[{{0.707106781186547, 
               0.7071067811865467}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False]}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              
              DiskBox[{-0.707106781186548, 0.7071067811865482}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183951, 0.7297182461547012}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-1., 1.0106430996148606`*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{-0.7071067811865471, -0.7071067811865468}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183942, -0.684495316218394}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968153465`, -0.9773885350318472}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0.7071067811865481, -0.7071067811865483}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461547009, -0.6844953162183955}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["6", TraditionalForm], 
               Offset[{2, 2}, {1.0226114649681528`, 0.022611464968151727`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.707106781186547, 0.7071067811865467}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["7", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461546998, 0.7297182461546996}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["8", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968152157`, 1.0226114649681528`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
        RowBox[{
          StyleBox["18", Bold, 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False], ",", 
          StyleBox["23", Bold, 
           RGBColor[1, 0, 0], StripOnInput -> False]}], "}"}]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )], "\[Rule]", 
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{{2, 2, 2, 1, 1}, {3, 2, 2, 1}, {3, 2, 1, 1, 1}, {2, 2, 1, 
              1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}, {1, 1, 1, 
              1, 1, 1, 1, 1}}, {{{1, 2}, {3, 2}, {4, 1}, {5, 4}, {4, 3}, {6, 
              3}, {7, 5}, {5, 6}}, Null}, {
             AspectRatio -> GoldenRatio, 
              EdgeLabels -> {
               DirectedEdge[{3, 1, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
                  Rotate[2, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {3, 1, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[3, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[14, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[5, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 2, 1, 1}, {3, 2, 2, 1}] -> Placed[
                  Rotate[3, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 1, 1, 1, 1}, {3, 2, 1, 1, 1}] -> Placed[
                  Rotate[6, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
                  Rotate[9, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{3, 2, 1, 1, 1}, {3, 2, 2, 1}] -> Placed[
                  Rotate[2, Rational[1, 4] Pi], {Left, "Middle"}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> {400, 400}, VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Arrowheads[Medium], 
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              
              ArrowBox[{{0., 0.4045084971874737}, {1., 0.}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["3", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 0.20225424859373686`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{1., 0.4045084971874737}, {1., 0.}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["2", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {1., 0.20225424859373686`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 0.8090169943749475}, {0., 0.4045084971874737}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["9", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 0.6067627457812106}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 0.8090169943749475}, {1., 0.4045084971874737}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["6", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 0.6067627457812106}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              ArrowBox[{{0., 1.2135254915624212`}, {0., 0.8090169943749475}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["14", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 1.0112712429686843`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.2135254915624212`}, {1., 0.8090169943749475}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["3", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0.5, 1.0112712429686843`}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{1., 0.8090169943749475}, {1., 0.4045084971874737}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["2", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {1., 0.6067627457812106}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              
              ArrowBox[{{0., 1.618033988749895}, {0., 1.2135254915624212`}}, 
               0.019434941751084317`], 
              InsetBox[
               FormBox[
                RotationBox["5", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 1.415779740156158}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              DiskBox[{0., 0.4045084971874737}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 0.423943438938558}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., 0.}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"3", ",", "2", ",", "2", ",", "1"}], "}"}], 
                TraditionalForm], 
               Offset[{2, 2}, {1.0194349417510844`, 0.019434941751084317`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., 0.4045084971874737}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {1.0194349417510844`, 0.423943438938558}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 0.8090169943749475}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 0.8284519361260317}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 1.2135254915624212`}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 1.2329604333135056`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., 0.8090169943749475}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {1.0194349417510844`, 0.8284519361260317}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 1.618033988749895}, 0.019434941751084317`], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1", ",", "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.019434941751084317`, 1.6374689305009793`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        ImageSize -> {400, 400}, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],StyleBox["7", Bold, StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}], ",", 
   RowBox[{
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
              SparseArray[
              Automatic, {8, 8}, 0, {
               1, {{0, 7, 14, 21, 28, 35, 42, 49, 56}, {{2}, {3}, {4}, {5}, {
                 6}, {7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {
                 4}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {5}, {6}, {7}, {8}, {
                 1}, {2}, {3}, {4}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {
                 7}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {8}, {1}, {2}, {3}, {
                 4}, {5}, {6}, {7}}}, Pattern}]}, {GraphHighlight -> {
                UndirectedEdge[5, 6], 
                UndirectedEdge[1, 2], 
                UndirectedEdge[7, 8], 
                UndirectedEdge[3, 4]}, GraphHighlightStyle -> {"Thick"}, 
              GraphLayout -> {"CircularEmbedding", "OptimalOrder" -> False}, 
              VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], 
             StyleBox[
              
              LineBox[{{-0.707106781186548, 0.7071067811865482}, {-1., 
               1.0106430996148606`*^-15}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-0.7071067811865471, \
-0.7071067811865468}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.707106781186548, 0.7071067811865482}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.707106781186548, 
              0.7071067811865482}, {-7.044813998280222*^-16, 1.}}], 
             
             LineBox[{{-1., 
              1.0106430996148606`*^-15}, {-0.7071067811865471, \
-0.7071067811865468}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              6.049014748177263*^-16, -1.}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-1., 1.0106430996148606`*^-15}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{-1., 
              1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}], 
             StyleBox[
              
              LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
               6.049014748177263*^-16, -1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{-0.7071067811865471, -0.7071067811865468}, \
{-7.044813998280222*^-16, 1.}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {
              0.7071067811865481, -0.7071067811865483}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {
              1., -1.133107779529596*^-15}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{6.049014748177263*^-16, -1.}, {-7.044813998280222*^-16,
               1.}}], 
             StyleBox[
              
              LineBox[{{0.7071067811865481, -0.7071067811865483}, {
               1., -1.133107779529596*^-15}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False], 
             
             LineBox[{{0.7071067811865481, -0.7071067811865483}, {
              0.707106781186547, 0.7071067811865467}}], 
             
             LineBox[{{
              0.7071067811865481, -0.7071067811865483}, \
{-7.044813998280222*^-16, 1.}}], 
             
             LineBox[{{1., -1.133107779529596*^-15}, {0.707106781186547, 
              0.7071067811865467}}], 
             
             LineBox[{{1., -1.133107779529596*^-15}, {-7.044813998280222*^-16,
               1.}}], 
             StyleBox[
              
              LineBox[{{0.707106781186547, 
               0.7071067811865467}, {-7.044813998280222*^-16, 1.}}], 
              Directive[
               Thickness[Large], 
               Hue[1, 1, 0.7], 
               Opacity[1]], StripOnInput -> False]}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              
              DiskBox[{-0.707106781186548, 0.7071067811865482}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["1", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183951, 0.7297182461547012}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-1., 1.0106430996148606`*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["2", TraditionalForm], 
               Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{-0.7071067811865471, -0.7071067811865468}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["3", TraditionalForm], 
               Offset[{2, 2}, {-0.6844953162183942, -0.684495316218394}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["4", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968153465`, -0.9773885350318472}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.7071067811865481, -0.7071067811865483}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["5", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461547009, -0.6844953162183955}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
              InsetBox[
               FormBox["6", TraditionalForm], 
               Offset[{2, 2}, {1.0226114649681528`, 0.022611464968151727`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              
              DiskBox[{0.707106781186547, 0.7071067811865467}, 
               0.02261146496815286], 
              InsetBox[
               FormBox["7", TraditionalForm], 
               Offset[{2, 2}, {0.7297182461546998, 0.7297182461546996}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
              InsetBox[
               FormBox["8", TraditionalForm], 
               Offset[{2, 2}, {0.022611464968152157`, 1.0226114649681528`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],RowBox[{"{", 
        RowBox[{
          StyleBox["18", Bold, 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False], ",", 
          StyleBox["24", Bold, 
           RGBColor[1, 0, 0], StripOnInput -> False]}], "}"}]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )], "\[Rule]", 
    TemplateBox[{GraphicsBox[
       NamespaceBox["NetworkGraphics", 
        DynamicModuleBox[{Typeset`graph = HoldComplete[
            
            Graph[{{2, 2, 2, 1, 1}, {2, 2, 2, 2}, {2, 2, 1, 1, 1, 1}, {2, 1, 
              1, 1, 1, 1, 1}, {1, 1, 1, 1, 1, 1, 1, 1}}, {{{1, 2}, {3, 1}, {4,
               3}, {5, 4}}, Null}, {
             AspectRatio -> GoldenRatio, 
              EdgeLabels -> {
               DirectedEdge[{2, 1, 1, 1, 1, 1, 1}, {2, 2, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[12, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{1, 1, 1, 1, 1, 1, 1, 1}, {2, 1, 1, 1, 1, 1, 1}] -> 
                Placed[
                  Rotate[4, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 2, 1, 1}, {2, 2, 2, 2}] -> Placed[
                  Rotate[4, Rational[1, 4] Pi], {Left, "Middle"}], 
                DirectedEdge[{2, 2, 1, 1, 1, 1}, {2, 2, 2, 1, 1}] -> Placed[
                  Rotate[12, Rational[1, 4] Pi], {Left, "Middle"}]}, 
              GraphLayout -> {
               "Dimension" -> 2, "VertexLayout" -> "LayeredDigraphEmbedding"},
               ImageSize -> {400, 400}, VertexLabels -> {"Name"}}]]}, 
         TagBox[
          GraphicsGroupBox[{{
             Arrowheads[Medium], 
             Directive[
              Opacity[0.7], 
              Hue[0.6, 0.7, 0.5]], {
              ArrowBox[{{0., 1.}, {0., 0.}}, 0.03700564971751412], 
              InsetBox[
               FormBox[
                RotationBox["4", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 0.5}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              ArrowBox[{{0., 2.}, {0., 1.}}, 0.03700564971751412], 
              InsetBox[
               FormBox[
                RotationBox["12", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 1.5}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              ArrowBox[{{0., 3.}, {0., 2.}}, 0.03700564971751412], 
              InsetBox[
               FormBox[
                RotationBox["12", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 2.5}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}, {
              ArrowBox[{{0., 4.}, {0., 3.}}, 0.03700564971751412], 
              InsetBox[
               FormBox[
                RotationBox["4", BoxRotation -> 0.7853981633974483], 
                TraditionalForm], 
               Offset[{-2., 0.}, {0., 3.5}], 
               ImageScaled[{1., 0.5}], BaseStyle -> "Graphics"]}}, {
             Directive[
              Hue[0.6, 0.2, 0.8], 
              EdgeForm[
               Directive[
                GrayLevel[0], 
                Opacity[0.7]]]], {
              DiskBox[{0., 1.}, 0.03700564971751412], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.03700564971751412, 1.0370056497175142`}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 0.}, 0.03700564971751412], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], 
                TraditionalForm], 
               Offset[{2, 2}, {0.03700564971751412, 0.03700564971751412}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 2.}, 0.03700564971751412], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
                  "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.03700564971751412, 2.037005649717514}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 3.}, 0.03700564971751412], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.03700564971751412, 3.037005649717514}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
              DiskBox[{0., 4.}, 0.03700564971751412], 
              InsetBox[
               FormBox[
                RowBox[{"{", 
                  
                  RowBox[{
                   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
                     "1", ",", "1"}], "}"}], TraditionalForm], 
               Offset[{2, 2}, {0.03700564971751412, 4.037005649717514}], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
          MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
         False]], {
       FormatType -> TraditionalForm, FrameTicks -> None, 
        ImageSize -> {400, 400}, 
        DefaultBaseStyle -> {
         "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
          Hue[0.8, 1., 0.6]}}],StyleBox["5", Bold, StripOnInput -> False]},
     "Labeled",
     DisplayFunction->(GridBox[{{
         TagBox[
          ItemBox[
           PaneBox[
            TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
            BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
          "SkipImageSizeLevel"]}, {
         ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
       GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
       BaselinePosition -> {1, 1}]& ),
     InterpretationFunction->(RowBox[{"Labeled", "[", 
        RowBox[{#, ",", #2}], "]"}]& )]}]}], "}"}]], "Output",
 CellChangeTimes->{3.774782356750607*^9, 3.7747870864163885`*^9, 
  3.7747871265941443`*^9, 3.774787192898486*^9, 3.774787288633541*^9, 
  3.7747873510492334`*^9, 3.7747874463087363`*^9, 3.7747908939038987`*^9, 
  3.7748150706115737`*^9, 3.7748151192015934`*^9, 3.7748151781715655`*^9, 
  3.7748152138348193`*^9},
 CellLabel->
  "Out[743]=",ExpressionUUID->"9ff5c44b-9d7b-4508-86bd-4ade272260a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarelyNColorableGraphsOfCount", "[", "8", "]"}]], "Input",
 CellLabel->
  "In[745]:=",ExpressionUUID->"7454b54a-4e02-499f-856b-cbe7d93e61fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 21, 24, 27, 30, 33, 36}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {4}, {5}, {
            6}, {7}, {8}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {2}, {3}, {1}, {
            2}, {3}, {1}, {2}, {3}}}, Pattern}]}, {
        EdgeLabels -> {UndirectedEdge[1, 2] -> Style[
             Framed[10, Background -> GrayLevel[1]], 
             RGBColor[0, 
              Rational[2, 3], 0], Bold, 14]}, GraphLayout -> 
         "RadialEmbedding", VertexLabels -> {"Name"}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[
          0.7], {LineBox[{{0.7068017553469138, 0.7249784794499715}, {
            0.39224538190339847`, 1.3781615193336294`}}], InsetBox[
            StyleBox[
             FrameBox["10",
              Background->GrayLevel[1],
              StripOnInput->False],
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]], {0.5495235686251562, 1.0515699993918004}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {0., 
           0.8863013677954079}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           0.13999075600112443`, 0.272961790945863}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           0.7068017553469137, 0.}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           1.273612754692703, 0.27296179094586276`}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           1.4136035106938276`, 0.8863013677954077}}], 
          LineBox[{{0.7068017553469138, 0.7249784794499715}, {
           1.0213581287904294`, 1.3781615193336294`}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {0., 
           0.8863013677954079}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           0.13999075600112443`, 0.272961790945863}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           0.7068017553469137, 0.}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           1.273612754692703, 0.27296179094586276`}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           1.4136035106938276`, 0.8863013677954077}}], 
          LineBox[{{0.39224538190339847`, 1.3781615193336294`}, {
           1.0213581287904294`, 1.3781615193336294`}}], 
          LineBox[{{0., 0.8863013677954079}, {0.13999075600112443`, 
           0.272961790945863}}], 
          LineBox[{{0., 0.8863013677954079}, {0.7068017553469137, 0.}}], 
          LineBox[{{0., 0.8863013677954079}, {1.273612754692703, 
           0.27296179094586276`}}], 
          LineBox[{{0., 0.8863013677954079}, {1.4136035106938276`, 
           0.8863013677954077}}], 
          LineBox[{{0., 0.8863013677954079}, {1.0213581287904294`, 
           1.3781615193336294`}}]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.7068017553469138, 0.7249784794499715}, 
            0.017668885280411523], 
           InsetBox["1", 
            Offset[{2, 2}, {0.7244706406273254, 0.7426473647303831}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.39224538190339847, 1.3781615193336294}, 
            0.017668885280411523], 
           InsetBox["2", 
            Offset[{2, 2}, {0.40991426718380997, 1.3958304046140408}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.8863013677954079}, 0.017668885280411523], 
           InsetBox["3", 
            Offset[{2, 2}, {0.017668885280411523, 0.9039702530758195}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.13999075600112443, 0.272961790945863}, 
            0.017668885280411523], 
           InsetBox["4", 
            Offset[{2, 2}, {0.15765964128153595, 0.2906306762262745}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.7068017553469137, 0.}, 0.017668885280411523], 
           InsetBox["5", 
            Offset[{2, 2}, {0.7244706406273252, 0.017668885280411523}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.273612754692703, 0.27296179094586276}, 
            0.017668885280411523], 
           InsetBox["6", 
            Offset[{2, 2}, {1.2912816399731144, 0.29063067622627425}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.4136035106938276, 0.8863013677954077}, 
            0.017668885280411523], 
           InsetBox["7", 
            Offset[{2, 2}, {1.431272395974239, 0.9039702530758192}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.0213581287904294, 1.3781615193336294}, 
            0.017668885280411523], 
           InsetBox["8", 
            Offset[{2, 2}, {1.0390270140708409, 1.3958304046140408}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 20, 26, 30, 34, 38, 42}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {5}, {6}, {
            7}, {8}, {1}, {2}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {1}, {
            2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, 
           Pattern}]}, {EdgeLabels -> {UndirectedEdge[1, 2] -> Style[
             Framed[7, Background -> GrayLevel[1]], 
             RGBColor[0, 
              Rational[2, 3], 0], Bold, 14]}, GraphLayout -> 
         "RadialEmbedding", VertexLabels -> {"Name"}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[
          0.7], {LineBox[{{0.6712748894677898, 0.6885379740185316}, {
            0.37252945877620125`, 1.3088892529778333`}}], InsetBox[
            StyleBox[
             FrameBox["7",
              Background->GrayLevel[1],
              StripOnInput->False],
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]], {0.5219021741219956, 0.9987136134981824}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {0., 
           0.8417520870615238}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           0.13295422450534733`, 0.2592415690255036}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           0.6712748894677897, 0.}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           1.2095955544302321`, 0.2592415690255033}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           1.3425497789355796`, 0.8417520870615236}}], 
          LineBox[{{0.6712748894677898, 0.6885379740185316}, {
           0.9700203201593786, 1.308889252977833}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {0., 
           0.8417520870615238}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           0.13295422450534733`, 0.2592415690255036}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           0.6712748894677897, 0.}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           1.2095955544302321`, 0.2592415690255033}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           1.3425497789355796`, 0.8417520870615236}}], 
          LineBox[{{0.37252945877620125`, 1.3088892529778333`}, {
           0.9700203201593786, 1.308889252977833}}], 
          LineBox[{{0., 0.8417520870615238}, {0.6712748894677897, 0.}}], 
          LineBox[{{0., 0.8417520870615238}, {1.2095955544302321`, 
           0.2592415690255033}}], 
          LineBox[{{0., 0.8417520870615238}, {1.3425497789355796`, 
           0.8417520870615236}}], 
          LineBox[{{0., 0.8417520870615238}, {0.9700203201593786, 
           1.308889252977833}}], 
          LineBox[{{0.13295422450534733`, 0.2592415690255036}, {
           0.6712748894677897, 0.}}], 
          LineBox[{{0.13295422450534733`, 0.2592415690255036}, {
           1.2095955544302321`, 0.2592415690255033}}], 
          LineBox[{{0.13295422450534733`, 0.2592415690255036}, {
           1.3425497789355796`, 0.8417520870615236}}], 
          LineBox[{{0.13295422450534733`, 0.2592415690255036}, {
           0.9700203201593786, 1.308889252977833}}]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.6712748894677898, 0.6885379740185316}, 
            0.0170438170794259], 
           InsetBox["1", 
            Offset[{2, 2}, {0.6883187065472157, 0.7055817910979575}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.37252945877620125, 1.3088892529778333}, 
            0.0170438170794259], 
           InsetBox["2", 
            Offset[{2, 2}, {0.3895732758556272, 1.3259330700572591}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.8417520870615238}, 0.0170438170794259], 
           InsetBox["3", 
            Offset[{2, 2}, {0.0170438170794259, 0.8587959041409498}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.13295422450534733, 0.2592415690255036}, 
            0.0170438170794259], 
           InsetBox["4", 
            Offset[{2, 2}, {0.14999804158477323, 0.2762853861049295}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.6712748894677897, 0.}, 0.0170438170794259], 
           InsetBox["5", 
            Offset[{2, 2}, {0.6883187065472156, 0.0170438170794259}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.2095955544302321, 0.2592415690255033}, 
            0.0170438170794259], 
           InsetBox["6", 
            Offset[{2, 2}, {1.226639371509658, 0.27628538610492925}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.3425497789355796, 0.8417520870615236}, 
            0.0170438170794259], 
           InsetBox["7", 
            Offset[{2, 2}, {1.3595935960150054, 0.8587959041409495}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.9700203201593786, 1.308889252977833}, 
            0.0170438170794259], 
           InsetBox["8", 
            Offset[{2, 2}, {0.9870641372388045, 1.325933070057259}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 14, 19, 24, 29, 34, 39, 44}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {6}, {7}, {
            8}, {1}, {2}, {6}, {7}, {8}, {1}, {2}, {6}, {7}, {8}, {1}, {2}, {
            3}, {4}, {5}, {1}, {2}, {3}, {4}, {5}, {1}, {2}, {3}, {4}, {5}}}, 
           Pattern}]}, {EdgeLabels -> {UndirectedEdge[1, 2] -> Style[
             Framed[6, Background -> GrayLevel[1]], 
             RGBColor[0, 
              Rational[2, 3], 0], Bold, 14]}, GraphLayout -> 
         "RadialEmbedding", VertexLabels -> {"Name"}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[
          0.7], {LineBox[{{0.6593576999017802, 0.6763143117178598}, {
            0.3659159175149174, 1.2856524514925038`}}], InsetBox[
            StyleBox[
             FrameBox["6",
              Background->GrayLevel[1],
              StripOnInput->False],
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]], {0.5126368087083488, 0.9809833816051818}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {0., 
           0.82680840400934}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           0.13059387895706054`, 0.25463923551066575`}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           0.6593576999017801, 0.}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           1.1881215208464997`, 0.25463923551066553`}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           1.3187153998035603`, 0.8268084040093397}}], 
          LineBox[{{0.6593576999017802, 0.6763143117178598}, {
           0.9527994822886432, 1.2856524514925036`}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {0., 
           0.82680840400934}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           0.13059387895706054`, 0.25463923551066575`}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           0.6593576999017801, 0.}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           1.1881215208464997`, 0.25463923551066553`}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           1.3187153998035603`, 0.8268084040093397}}], 
          LineBox[{{0.3659159175149174, 1.2856524514925038`}, {
           0.9527994822886432, 1.2856524514925036`}}], 
          LineBox[{{0., 0.82680840400934}, {1.1881215208464997`, 
           0.25463923551066553`}}], 
          LineBox[{{0., 0.82680840400934}, {1.3187153998035603`, 
           0.8268084040093397}}], 
          LineBox[{{0., 0.82680840400934}, {0.9527994822886432, 
           1.2856524514925036`}}], 
          LineBox[{{0.13059387895706054`, 0.25463923551066575`}, {
           1.1881215208464997`, 0.25463923551066553`}}], 
          LineBox[{{0.13059387895706054`, 0.25463923551066575`}, {
           1.3187153998035603`, 0.8268084040093397}}], 
          LineBox[{{0.13059387895706054`, 0.25463923551066575`}, {
           0.9527994822886432, 1.2856524514925036`}}], 
          LineBox[{{0.6593576999017801, 0.}, {1.1881215208464997`, 
           0.25463923551066553`}}], 
          LineBox[{{0.6593576999017801, 0.}, {1.3187153998035603`, 
           0.8268084040093397}}], 
          LineBox[{{0.6593576999017801, 0.}, {0.9527994822886432, 
           1.2856524514925036`}}]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.6593576999017802, 0.6763143117178598}, 
            0.016832818469537048], 
           InsetBox["1", 
            Offset[{2, 2}, {0.6761905183713173, 0.6931471301873968}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.3659159175149174, 1.2856524514925038}, 
            0.016832818469537048], 
           InsetBox["2", 
            Offset[{2, 2}, {0.38274873598445447, 1.3024852699620408}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.82680840400934}, 0.016832818469537048], 
           InsetBox["3", 
            Offset[{2, 2}, {0.016832818469537048, 0.843641222478877}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.13059387895706054, 0.25463923551066575}, 
            0.016832818469537048], 
           InsetBox["4", 
            Offset[{2, 2}, {0.14742669742659759, 0.2714720539802028}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.6593576999017801, 0.}, 0.016832818469537048], 
           InsetBox["5", 
            Offset[{2, 2}, {0.676190518371317, 0.016832818469537048}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.1881215208464997, 0.25463923551066553}, 
            0.016832818469537048], 
           InsetBox["6", 
            Offset[{2, 2}, {1.2049543393160367, 0.2714720539802026}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.3187153998035603, 0.8268084040093397}, 
            0.016832818469537048], 
           InsetBox["7", 
            Offset[{2, 2}, {1.3355482182730973, 0.8436412224788767}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.9527994822886432, 1.2856524514925036}, 
            0.016832818469537048], 
           InsetBox["8", 
            Offset[{2, 2}, {0.9696323007581802, 1.3024852699620406}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 7, 13, 19, 25, 31, 36, 41, 46}, {{2}, {3}, {4}, {5}, {6}, {
            7}, {8}, {1}, {4}, {5}, {6}, {7}, {8}, {1}, {4}, {5}, {6}, {7}, {
            8}, {1}, {2}, {3}, {6}, {7}, {8}, {1}, {2}, {3}, {6}, {7}, {8}, {
            1}, {2}, {3}, {4}, {5}, {1}, {2}, {3}, {4}, {5}, {1}, {2}, {3}, {
            4}, {5}}}, Pattern}]}, {
        EdgeLabels -> {UndirectedEdge[1, 2] -> Style[
             Framed[5, Background -> GrayLevel[1]], 
             RGBColor[0, 
              Rational[2, 3], 0], Bold, 14]}, GraphLayout -> 
         "RadialEmbedding", VertexLabels -> {"Name"}, VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[
          0.7], {LineBox[{{0.6576675968438843, 0.6745807445107076}, {
            0.36497798107887236`, 1.2823569942012907`}}], InsetBox[
            StyleBox[
             FrameBox["5",
              Background->GrayLevel[1],
              StripOnInput->False],
             StripOnInput->False,
             LineColor->RGBColor[0, 
               Rational[2, 3], 0],
             FrontFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             BackFaceColor->RGBColor[0, 
               Rational[2, 3], 0],
             GraphicsColor->RGBColor[0, 
               Rational[2, 3], 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[0, 
               Rational[2, 3], 0]], {0.5113227889613783, 0.9784688693559991}, 
            ImageScaled[{0.5, 0.5}],
            BaseStyle->"Graphics"]}, 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {0., 
           0.8246890818081762}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           0.13025913331869043`, 0.2539865297780097}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           0.6576675968438842, 0.}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           1.185076060369078, 0.25398652977800945`}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           1.3153351936877686`, 0.824689081808176}}], 
          LineBox[{{0.6576675968438843, 0.6745807445107076}, {
           0.9503572126088965, 1.2823569942012907`}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           0.13025913331869043`, 0.2539865297780097}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           0.6576675968438842, 0.}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           1.185076060369078, 0.25398652977800945`}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           1.3153351936877686`, 0.824689081808176}}], 
          LineBox[{{0.36497798107887236`, 1.2823569942012907`}, {
           0.9503572126088965, 1.2823569942012907`}}], 
          LineBox[{{0., 0.8246890818081762}, {0.13025913331869043`, 
           0.2539865297780097}}], 
          LineBox[{{0., 0.8246890818081762}, {0.6576675968438842, 0.}}], 
          LineBox[{{0., 0.8246890818081762}, {1.185076060369078, 
           0.25398652977800945`}}], 
          LineBox[{{0., 0.8246890818081762}, {1.3153351936877686`, 
           0.824689081808176}}], 
          LineBox[{{0., 0.8246890818081762}, {0.9503572126088965, 
           1.2823569942012907`}}], 
          LineBox[{{0.13025913331869043`, 0.2539865297780097}, {
           1.185076060369078, 0.25398652977800945`}}], 
          LineBox[{{0.13025913331869043`, 0.2539865297780097}, {
           1.3153351936877686`, 0.824689081808176}}], 
          LineBox[{{0.13025913331869043`, 0.2539865297780097}, {
           0.9503572126088965, 1.2823569942012907`}}], 
          LineBox[{{0.6576675968438842, 0.}, {1.185076060369078, 
           0.25398652977800945`}}], 
          LineBox[{{0.6576675968438842, 0.}, {1.3153351936877686`, 
           0.824689081808176}}], 
          LineBox[{{0.6576675968438842, 0.}, {0.9503572126088965, 
           1.2823569942012907`}}]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.6576675968438843, 0.6745807445107076}, 
            0.016802840282861525], 
           InsetBox["1", 
            Offset[{2, 2}, {0.6744704371267458, 0.6913835847935691}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.36497798107887236, 1.2823569942012907}, 
            0.016802840282861525], 
           InsetBox["2", 
            Offset[{2, 2}, {0.38178082136173386, 1.2991598344841522}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.8246890818081762}, 0.016802840282861525], 
           InsetBox["3", 
            Offset[{2, 2}, {0.016802840282861525, 0.8414919220910377}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.13025913331869043, 0.2539865297780097}, 
            0.016802840282861525], 
           InsetBox["4", 
            Offset[{2, 2}, {0.14706197360155196, 0.2707893700608712}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.6576675968438842, 0.}, 0.016802840282861525], 
           InsetBox["5", 
            Offset[{2, 2}, {0.6744704371267457, 0.016802840282861525}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.185076060369078, 0.25398652977800945}, 
            0.016802840282861525], 
           InsetBox["6", 
            Offset[{2, 2}, {1.2018789006519395, 0.270789370060871}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.3153351936877686, 0.824689081808176}, 
            0.016802840282861525], 
           InsetBox["7", 
            Offset[{2, 2}, {1.3321380339706301, 0.8414919220910375}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.9503572126088965, 1.2823569942012907}, 
            0.016802840282861525], 
           InsetBox["8", 
            Offset[{2, 2}, {0.967160052891758, 1.2991598344841522}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None], ",", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
         SparseArray[
         Automatic, {8, 8}, 0, {
          1, {{0, 6, 12, 18, 24, 30, 36, 42, 48}, {{3}, {4}, {5}, {6}, {7}, {
            8}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {5}, {6}, {7}, {8}, {
            1}, {2}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {7}, {8}, {1}, {
            2}, {3}, {4}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {1}, {2}, {
            3}, {4}, {5}, {6}}}, Pattern}]}, {
        GraphLayout -> "RadialEmbedding", VertexLabels -> {"Name"}, 
         VertexStyle -> {
           RGBColor[1, 0, 0]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGCQAGImKF6gc/9owv1L9sVmTLMkIj7YzwPzH9mXgPkP7NHl
GcBgg82aQObnKi0/MOQnQfkQdSds0OVfHTqnIej/BiqPy/5P9pk47P8C1V+I
4h4GhnKoenT3o8ujux9dHt396PLo7sduP8L96PLo7kd3L7r96PLo9qPLo9uP
Lo89/BDhgd3/CHns/kfIY/c/Qh7dfuz+RehHl0fXjz08EPrR5dH1AwCwBx6W

           "]]}, 
         {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {
           DiskBox[{0.2948839123097944, 1.0215078369104986}, 
            0.018699735330147155], 
           InsetBox["1", 
            Offset[{2, 2}, {0.3135836476399415, 1.0402075722406459}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.5107539184552498}, 0.018699735330147155], 
           InsetBox["2", 
            Offset[{2, 2}, {0.018699735330147155, 0.5294536537853969}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.5897678246195885, 0.5107539184552494}, 
            0.018699735330147155], 
           InsetBox["3", 
            Offset[{2, 2}, {0.6084675599497357, 0.5294536537853965}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{2.220446049250313*^-16, 1.5322617553657478}, 
            0.018699735330147155], 
           InsetBox["4", 
            Offset[{2, 2}, {0.018699735330147377, 1.550961490695895}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.2948839123097936, 6.661338147750939*^-16}, 
            0.018699735330147155], 
           InsetBox["5", 
            Offset[{2, 2}, {0.31358364763994073, 0.01869973533014782}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8846517369293825, 0.}, 0.018699735330147155], 
           InsetBox["6", 
            Offset[{2, 2}, {0.9033514722595296, 0.018699735330147155}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.179535649239177, 0.5107539184552482}, 
            0.018699735330147155], 
           InsetBox["7", 
            Offset[{2, 2}, {1.1982353845693243, 0.5294536537853953}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0.8846517369293836, 1.0215078369104982}, 
            0.018699735330147155], 
           InsetBox["8", 
            Offset[{2, 2}, {0.9033514722595307, 1.0402075722406454}], 
            ImageScaled[{0, 0}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    FrameTicks->None]}], "}"}]], "Output",
 CellChangeTimes->{3.7748552028276544`*^9},
 CellLabel->
  "Out[745]=",ExpressionUUID->"4c9a693d-b510-4c6b-9631-ff40f02371fd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindRange", "[", 
   RowBox[{"k_", ",", 
    RowBox[{"min_:", "1"}], ",", 
    RowBox[{"max_:", "300000"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"FindRange", "[", 
    RowBox[{"k", ",", "min", ",", "max"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "middle", ",", " ", "size", ",", " ", "bound1", ",", " ", "bound2", ",",
        " ", "pos"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"middle", "=", 
       RowBox[{"IntegerPart", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"max", "+", "min"}], ")"}], "/", "2"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"size", "=", 
       RowBox[{"VertexCount", "[", 
        RowBox[{"ReadGrof", "[", "middle", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"size", "<", " ", "k"}], ",", "\[IndentingNewLine]", 
        RowBox[{"FindRange", "[", 
         RowBox[{"k", ",", 
          RowBox[{"middle", "+", "1"}], ",", "max"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"k", "<", " ", "size"}], ",", "\[IndentingNewLine]", 
          RowBox[{"FindRange", "[", 
           RowBox[{"k", ",", "min", ",", 
            RowBox[{"middle", "-", "1"}]}], "]"}], "\[IndentingNewLine]", ",",
           "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"bound1", "=", "middle"}], ";", "\[IndentingNewLine]", 
           RowBox[{"bound2", "=", "middle"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"pos", "=", 
                RowBox[{"middle", "-", "1"}]}], ",", " ", 
               RowBox[{"pos", "\[GreaterEqual]", " ", "min"}], ",", " ", 
               RowBox[{"pos", "--"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"size", "=", 
                 RowBox[{"VertexCount", "[", 
                  RowBox[{"ReadGrof", "[", "pos", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"size", "\[Equal]", "k"}], ",", 
                  RowBox[{"bound1", "--"}], ",", " ", 
                  RowBox[{"Break", "[", "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"pos", ",", "min"}], "}"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"pos", "=", 
                RowBox[{"middle", "+", "1"}]}], ",", " ", 
               RowBox[{"pos", "\[LessEqual]", "max"}], ",", " ", 
               RowBox[{"pos", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"size", "=", 
                 RowBox[{"VertexCount", "[", 
                  RowBox[{"ReadGrof", "[", "pos", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"size", "\[Equal]", "k"}], ",", 
                  RowBox[{"bound2", "++"}], ",", " ", 
                  RowBox[{"Break", "[", "]"}]}], "]"}]}]}], 
              "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"pos", ",", "max"}], "}"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"bound1", ",", "bound2"}], "}"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7748552368511167`*^9, 3.7748554200266128`*^9}, {
  3.774855455527958*^9, 3.7748556873737836`*^9}, {3.7748557682179074`*^9, 
  3.774855780733875*^9}},
 CellLabel->
  "In[752]:=",ExpressionUUID->"c6a321b1-7174-4550-823d-4cc207c352bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindRange", "[", "13", "]"}]], "Input",
 CellChangeTimes->{{3.774855610900921*^9, 3.7748556158294287`*^9}, {
  3.774855796622527*^9, 3.7748558166208787`*^9}},
 CellLabel->
  "In[757]:=",ExpressionUUID->"fa45a7b3-40ec-4a29-8f7a-b5305dd06bf1"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.774855693571514*^9, {3.7748557854796886`*^9, 3.774855833497009*^9}},
 CellLabel->
  "Out[757]=",ExpressionUUID->"ba6d291a-d730-4f2d-8c30-782b052c37a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"VertexCount", "[", 
    RowBox[{"ReadGrof", "[", "k", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "9", ",", "24"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7748557043449697`*^9, 3.774855714423253*^9}},
 CellLabel->
  "In[751]:=",ExpressionUUID->"607fbe03-b0c1-4f4c-b752-b86bc8bdee39"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", 
   ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", "8", ",", 
   "9"}], "}"}]], "Output",
 CellChangeTimes->{3.774855715090789*^9},
 CellLabel->
  "Out[751]=",ExpressionUUID->"fef07e35-514c-4da5-80a9-78ffc004844a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EdgeList", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {Null, 
        SparseArray[
        Automatic, {8, 8}, 0, {
         1, {{0, 6, 12, 18, 24, 30, 36, 42, 48}, {{3}, {4}, {5}, {6}, {7}, {
           8}, {3}, {4}, {5}, {6}, {7}, {8}, {1}, {2}, {5}, {6}, {7}, {8}, {
           1}, {2}, {5}, {6}, {7}, {8}, {1}, {2}, {3}, {4}, {7}, {8}, {1}, {
           2}, {3}, {4}, {7}, {8}, {1}, {2}, {3}, {4}, {5}, {6}, {1}, {2}, {
           3}, {4}, {5}, {6}}}, Pattern}]}, {
       GraphLayout -> "RadialEmbedding", VertexLabels -> {"Name"}, 
        VertexStyle -> {
          RGBColor[1, 0, 0]}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[CompressedData["
1:eJxTTMoPSmVmYGCQAGImKF6gc/9owv1L9sVmTLMkIj7YzwPzH9mXgPkP7NHl
GcBgg82aQObnKi0/MOQnQfkQdSds0OVfHTqnIej/BiqPy/5P9pk47P8C1V+I
4h4GhnKoenT3o8ujux9dHt396PLo7sduP8L96PLo7kd3L7r96PLo9qPLo9uP
Lo89/BDhgd3/CHns/kfIY/c/Qh7dfuz+RehHl0fXjz08EPrR5dH1AwCwBx6W

          "]]}, 
        {RGBColor[1, 0, 0], EdgeForm[{GrayLevel[0], Opacity[
         0.7]}], {
          DiskBox[{0.2948839123097944, 1.0215078369104986}, 
           0.018699735330147155], 
          InsetBox["1", 
           Offset[{2, 2}, {0.3135836476399415, 1.0402075722406459}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0., 0.5107539184552498}, 0.018699735330147155], 
          InsetBox["2", 
           Offset[{2, 2}, {0.018699735330147155, 0.5294536537853969}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.5897678246195885, 0.5107539184552494}, 
           0.018699735330147155], 
          InsetBox["3", 
           Offset[{2, 2}, {0.6084675599497357, 0.5294536537853965}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.220446049250313*^-16, 1.5322617553657478}, 
           0.018699735330147155], 
          InsetBox["4", 
           Offset[{2, 2}, {0.018699735330147377, 1.550961490695895}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.2948839123097936, 6.661338147750939*^-16}, 
           0.018699735330147155], 
          InsetBox["5", 
           Offset[{2, 2}, {0.31358364763994073, 0.01869973533014782}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.8846517369293825, 0.}, 0.018699735330147155], 
          InsetBox["6", 
           Offset[{2, 2}, {0.9033514722595296, 0.018699735330147155}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.179535649239177, 0.5107539184552482}, 
           0.018699735330147155], 
          InsetBox["7", 
           Offset[{2, 2}, {1.1982353845693243, 0.5294536537853953}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.8846517369293836, 1.0215078369104982}, 
           0.018699735330147155], 
          InsetBox["8", 
           Offset[{2, 2}, {0.9033514722595307, 1.0402075722406454}], 
           ImageScaled[{0, 0}],
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None], "]"}]], "Input",
 CellChangeTimes->{{3.7748551736165323`*^9, 3.774855209134634*^9}, {
  3.7748623208208656`*^9, 3.7748623258581066`*^9}},
 CellLabel->
  "In[760]:=",ExpressionUUID->"ab36638c-482f-4bad-a9e1-64ee5a61c430"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"1", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "3"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "4"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"2", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"3", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "5"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "6"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"4", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"5", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "7"}], ",", 
   RowBox[{"6", "\[UndirectedEdge]", "8"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7748551820623116`*^9, 3.774855211263749*^9}, 
   3.774862326752616*^9},
 CellLabel->
  "Out[760]=",ExpressionUUID->"b4d0f1f8-fa88-4e77-b667-1621c888198e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"k", "\[UndirectedEdge]", 
    RowBox[{"Sort", "[", 
     RowBox[{"Tally", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PartitionType", "[", 
          RowBox[{"SymbolToSets", "[", "#", "]"}], "]"}], "&"}], ",", 
        RowBox[{"FindFullFormula", "[", 
         RowBox[{"ReadGrof", "[", "k", "]"}], "]"}]}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"FindRange", "[", "8", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7748622243164144`*^9, 3.774862331633312*^9}},
 CellLabel->
  "In[761]:=",ExpressionUUID->"113f900e-ee7a-4f9f-9da3-a07062eeb327"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"10", "\[UndirectedEdge]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", "1"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
         "}"}], ",", "25"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
         "}"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
           "1"}], "}"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"23", "\[UndirectedEdge]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", "1"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "2", ",", "1", ",", "1"}], "}"}], ",", 
        "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
        "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"4", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
        "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1"}], 
         "}"}], ",", "21"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
         "}"}], ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
         "}"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
           "1"}], "}"}], ",", "1"}], "}"}]}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.774862245984923*^9, 3.774862296409444*^9, 
  3.774862333732145*^9},
 CellLabel->
  "Out[761]=",ExpressionUUID->"8735bea8-ee27-49f7-8548-7cba8dfcfd9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MissingEdges", "[", 
  RowBox[{"ReadGrof", "[", "10", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7748623442586975`*^9, 3.7748623474580326`*^9}, {
  3.7748623936608267`*^9, 3.77486239791724*^9}},
 CellLabel->
  "In[762]:=",ExpressionUUID->"34631ea1-b1cc-45af-92a7-62499c818bcb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"v15x28x34x67", ",", 
     RowBox[{"1", "\[TwoWayRule]", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v15x28x34x67", ",", 
     RowBox[{"1", "\[TwoWayRule]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v15x28x34x67", ",", 
     RowBox[{"1", "\[TwoWayRule]", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v15x28x34x67", ",", 
     RowBox[{"2", "\[TwoWayRule]", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v15x28x34x67", ",", 
     RowBox[{"7", "\[UndirectedEdge]", "8"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"v15x28x34x67", ",", 
     RowBox[{"4", "\[TwoWayRule]", "7"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7748623990676994`*^9},
 CellLabel->
  "Out[762]=",ExpressionUUID->"cbdeab7b-62e8-48ad-ad7d-09656d0707f8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Last", ",", 
   RowBox[{"MissingEdges", "[", 
    RowBox[{"ReadGrof", "[", "10", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7748624710855546`*^9, 3.7748624783302064`*^9}},
 CellLabel->
  "In[767]:=",ExpressionUUID->"8f16f5f2-4d10-40ec-a7dd-9363ddaa7c53"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "\[TwoWayRule]", "8"}], ",", 
   RowBox[{"1", "\[TwoWayRule]", "4"}], ",", 
   RowBox[{"1", "\[TwoWayRule]", "6"}], ",", 
   RowBox[{"2", "\[TwoWayRule]", "4"}], ",", 
   RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
   RowBox[{"4", "\[TwoWayRule]", "7"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7748624794857607`*^9},
 CellLabel->
  "Out[767]=",ExpressionUUID->"3fb02c86-4d9b-4999-a5bd-04f1db6ba92b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"ChromaticPolynomial", "[", 
   RowBox[{
    RowBox[{"EdgeAdd", "[", 
     RowBox[{
      RowBox[{"ReadGrof", "[", "10", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[TwoWayRule]", "8"}], ",", 
        RowBox[{"1", "\[TwoWayRule]", "4"}], ",", 
        RowBox[{"1", "\[TwoWayRule]", "6"}], ",", 
        RowBox[{"2", "\[TwoWayRule]", "4"}], ",", 
        RowBox[{"7", "\[UndirectedEdge]", "8"}], ",", 
        RowBox[{"4", "\[TwoWayRule]", "7"}]}], "}"}]}], "]"}], ",", "x"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.77486241929323*^9, 3.7748625158008785`*^9}},
 CellLabel->
  "In[770]:=",ExpressionUUID->"edfcf316-5866-4056-9a74-c51a11fd61fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3"}], "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", "x", " ", 
  RowBox[{"(", 
   RowBox[{"465", "-", 
    RowBox[{"392", " ", "x"}], "+", 
    RowBox[{"125", " ", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"18", " ", 
     SuperscriptBox["x", "3"]}], "+", 
    SuperscriptBox["x", "4"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.774862486535122*^9, 3.7748625167546177`*^9}},
 CellLabel->
  "Out[770]=",ExpressionUUID->"6210a2db-9a00-4ae8-bf28-3aec84e17a54"]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 329, 8, 28, "Input",ExpressionUUID->"46dce005-2315-47e2-a522-80207863ca2c"],
Cell[912, 32, 1137, 19, 71, "Output",ExpressionUUID->"1a744589-ae9f-4511-bf3b-26e5ac17c925"]
}, Open  ]],
Cell[2064, 54, 490, 12, 28, "Input",ExpressionUUID->"a877685a-d017-49e0-b20b-1d4a3ef9b7f8"],
Cell[CellGroupData[{
Cell[2579, 70, 216, 4, 28, "Input",ExpressionUUID->"3e46adcf-1dd9-4489-98ad-3622dacfd242"],
Cell[2798, 76, 10070, 165, 356, "Output",ExpressionUUID->"fd1fb00a-55ad-4aa4-ae78-ee9599ad2df1"]
}, Open  ]],
Cell[12883, 244, 3463, 83, 276, "Input",ExpressionUUID->"f7e29d03-18a4-4d06-8ba1-1aa30caa4a1c"],
Cell[16349, 329, 7993, 241, 124, "Input",ExpressionUUID->"abf62b0d-5c7c-42d4-842e-07b4442f833e"],
Cell[CellGroupData[{
Cell[24367, 574, 272, 5, 28, "Input",ExpressionUUID->"e4789066-060b-4a32-95c5-51e30b04453f"],
Cell[24642, 581, 16318, 318, 715, "Output",ExpressionUUID->"577aa951-1afe-4e6e-ba5c-6fc892b394bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40997, 904, 348, 7, 28, "Input",ExpressionUUID->"aa31b7dc-9734-472d-945f-0e351601735d"],
Cell[41348, 913, 2683, 54, 449, "Output",ExpressionUUID->"8dc59477-4bd7-49ba-a2a5-764a24e15923"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44068, 972, 334, 8, 28, "Input",ExpressionUUID->"db423a3b-94f2-48ad-b9b1-8bba7e98b254"],
Cell[44405, 982, 540, 16, 32, "Output",ExpressionUUID->"c53163ac-c2e1-4c35-96c4-1e79bab0ecce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44982, 1003, 351, 7, 28, "Input",ExpressionUUID->"4299bf2f-9a43-4e5d-8f38-034087aca429"],
Cell[45336, 1012, 53179, 940, 588, 23491, 453, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"07b11511-7aaf-49b1-b055-153eb2517e4f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98552, 1957, 327, 7, 28, "Input",ExpressionUUID->"cda6ba90-54e2-4c9a-aac6-7ee31e368074"],
Cell[98882, 1966, 3256, 66, 449, "Output",ExpressionUUID->"ced56db1-3225-40b2-a41e-7350f5ca905f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102175, 2037, 327, 7, 28, "Input",ExpressionUUID->"4c238610-aaea-4805-8f77-2fa69f01a485"],
Cell[102505, 2046, 8631, 170, 449, "Output",ExpressionUUID->"8508d4af-5ca1-4f81-86b8-6f7f513edad8"]
}, Open  ]],
Cell[111151, 2219, 382, 10, 28, "Input",ExpressionUUID->"73e6daf3-2fa2-424f-86fd-b5368f2e0958"],
Cell[CellGroupData[{
Cell[111558, 2233, 215, 4, 28, "Input",ExpressionUUID->"352bfc61-776e-4796-9bdc-5a6e27b08e0d"],
Cell[111776, 2239, 158, 3, 32, "Output",ExpressionUUID->"432779ef-88ca-470d-97c6-48fdd58577c5"]
}, Open  ]],
Cell[111949, 2245, 273, 6, 28, "Input",ExpressionUUID->"dd73a58d-f723-40ae-b749-c0aa32eb604c"],
Cell[112225, 2253, 341, 7, 28, "Input",ExpressionUUID->"af49f53e-a689-4dea-8285-d2a88536c0b1"],
Cell[112569, 2262, 380, 10, 48, "Input",ExpressionUUID->"1d00bf4f-c271-44c1-af8a-ca9999918794"],
Cell[CellGroupData[{
Cell[112974, 2276, 395, 10, 28, "Input",ExpressionUUID->"fc282b45-e0d6-486f-916c-7f5e0f4a8dad"],
Cell[113372, 2288, 560, 17, 32, "Output",ExpressionUUID->"c087ca01-aca3-4fd2-b54b-f0c783ab134f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113969, 2310, 256, 5, 28, "Input",ExpressionUUID->"2c52ec24-e22f-455a-a70c-e45943ae9bc4"],
Cell[114228, 2317, 181, 3, 32, "Output",ExpressionUUID->"72127bbf-42e8-49a4-b971-fcf1783ed30e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114446, 2325, 231, 4, 28, "Input",ExpressionUUID->"db75f171-2016-4c2f-94f7-7329b340e2dc"],
Cell[114680, 2331, 29206, 611, 235, "Output",ExpressionUUID->"fd628de1-ea26-4fd6-afb3-9e99301572e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143923, 2947, 916, 21, 86, "Input",ExpressionUUID->"8b5f8ccf-72ca-423f-8a9a-b1dd78c01e2d"],
Cell[144842, 2970, 521070, 8844, 6174, "Output",ExpressionUUID->"acd1c9a0-141d-482c-b134-d8cfd3733b27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[665949, 11819, 701, 15, 28, "Input",ExpressionUUID->"fb7e84d7-d52a-4200-880d-90d5c3b6e151"],
Cell[666653, 11836, 103158, 1767, 1224, 29336, 556, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"2edfcb8f-e19b-4429-83a3-198f6322276e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[769848, 13608, 663, 12, 28, "Input",ExpressionUUID->"3fc17053-6182-4f60-a868-2a663153cf16"],
Cell[770514, 13622, 105510, 1806, 1224, 29899, 566, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"a524c297-2177-495a-b005-aea33b483d7c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[876061, 15433, 2644, 62, 143, "Input",ExpressionUUID->"19fb66b2-9da2-498f-830d-962cfb9706da"],
Cell[878708, 15497, 95277, 2103, 1330, "Output",ExpressionUUID->"9ff5c44b-9d7b-4508-86bd-4ade272260a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[974022, 17605, 165, 3, 28, "Input",ExpressionUUID->"7454b54a-4e02-499f-856b-cbe7d93e61fd"],
Cell[974190, 17610, 29206, 611, 235, "Output",ExpressionUUID->"4c9a693d-b510-4c6b-9631-ff40f02371fd"]
}, Open  ]],
Cell[1003411, 18224, 4164, 95, 542, "Input",ExpressionUUID->"c6a321b1-7174-4550-823d-4cc207c352bd"],
Cell[CellGroupData[{
Cell[1007600, 18323, 265, 5, 28, "Input",ExpressionUUID->"fa45a7b3-40ec-4a29-8f7a-b5305dd06bf1"],
Cell[1007868, 18330, 211, 4, 32, "Output",ExpressionUUID->"ba6d291a-d730-4f2d-8c30-782b052c37a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008116, 18339, 368, 9, 28, "Input",ExpressionUUID->"607fbe03-b0c1-4f4c-b752-b86bc8bdee39"],
Cell[1008487, 18350, 349, 8, 32, "Output",ExpressionUUID->"fef07e35-514c-4da5-80a9-78ffc004844a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1008873, 18363, 3676, 81, 123, "Input",ExpressionUUID->"ab36638c-482f-4bad-a9e1-64ee5a61c430"],
Cell[1012552, 18446, 1430, 30, 32, "Output",ExpressionUUID->"b4d0f1f8-fa88-4e77-b667-1621c888198e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1014019, 18481, 702, 19, 28, "Input",ExpressionUUID->"113f900e-ee7a-4f9f-9da3-a07062eeb327"],
Cell[1014724, 18502, 2671, 81, 52, "Output",ExpressionUUID->"8735bea8-ee27-49f7-8548-7cba8dfcfd9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1017432, 18588, 304, 6, 28, "Input",ExpressionUUID->"34631ea1-b1cc-45af-92a7-62499c818bcb"],
Cell[1017739, 18596, 832, 23, 32, "Output",ExpressionUUID->"cbdeab7b-62e8-48ad-ad7d-09656d0707f8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1018608, 18624, 313, 7, 28, "Input",ExpressionUUID->"8f16f5f2-4d10-40ec-a7dd-9363ddaa7c53"],
Cell[1018924, 18633, 460, 11, 32, "Output",ExpressionUUID->"3fb02c86-4d9b-4999-a5bd-04f1db6ba92b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1019421, 18649, 730, 18, 28, "Input",ExpressionUUID->"edfcf316-5866-4056-9a74-c51a11fd61fe"],
Cell[1020154, 18669, 671, 21, 69, "Output",ExpressionUUID->"6210a2db-9a00-4ae8-bf28-3aec84e17a54"]
}, Open  ]]
}
]
*)

