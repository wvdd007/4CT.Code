(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2205250,      46277]
NotebookOptionsPosition[   2199698,      46141]
NotebookOutlinePosition[   2200042,      46156]
CellTagsIndexPosition[   2199999,      46153]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Now for five and real colofours", "Section",
 CellChangeTimes->{{3.7208974693440104`*^9, 
  3.7208974780884843`*^9}},ExpressionUUID->"bcd74ef6-5dae-460a-87a7-\
96efdedb7e1d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyColors", "=", 
   RowBox[{"Association", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720890191208723*^9, 
  3.7208902136037164`*^9}},ExpressionUUID->"eabedadc-81ec-4ee7-b6e5-\
27e19ef8a59b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MyColors", "[", "Greater", "]"}], "=", "Green"}], ";", 
  RowBox[{
   RowBox[{"MyColors", "[", "GreaterEqual", "]"}], "=", "Orange"}], ";", 
  RowBox[{
   RowBox[{"MyColors", "[", "Equal", "]"}], "=", "Red"}], ";", 
  "MyColors"}]], "Input",
 CellChangeTimes->{{3.720890217100402*^9, 3.7208902338582716`*^9}, {
  3.7208982081523447`*^9, 
  3.720898211019512*^9}},ExpressionUUID->"341c4819-954d-48df-b970-\
be86a9ad932f"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"Greater", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"GreaterEqual", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0.5, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"Equal", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.7208902346729226`*^9, 3.7208913020185966`*^9, {3.7208982046910243`*^9, 
   3.720898211578695*^9}, 3.720953238588958*^9, 3.7209535519883513`*^9, 
   3.721055810690405*^9, 3.7211570919637055`*^9, 3.7212075394608135`*^9, 
   3.7212295698265266`*^9, 3.7212299172199783`*^9, 
   3.7212898740006227`*^9},ExpressionUUID->"229cc0a1-0bde-4f71-9499-\
83774274deda"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChangeSYmbol", "[", "s_", "]"}], ":=", 
  RowBox[{"Symbol", "[", 
   RowBox[{"\"\<n\>\"", "<>", 
    RowBox[{"StringDrop", "[", 
     RowBox[{
      RowBox[{"SymbolName", "[", "s", "]"}], ",", "1"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.720897278652465*^9, 
  3.720897310564635*^9}},ExpressionUUID->"1926a906-f30b-4c16-ba35-\
d4f827b603d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vertexLabels", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofournull\>\""}], "]"}], "]"}], "\[Rule]", 
       " ", 
       RowBox[{"Tooltip", "[", 
        RowBox[{
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"Row", "[", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"allGraphs5", "[", 
                 RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}], ",", "Red", 
                ",", "Bold", ",", "14"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<  \>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"allGraphs5", "[", 
                 RowBox[{"k", ",", "\"\<embed\>\""}], "]"}], ",", "Blue", ",",
                 "Bold", ",", "14"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"Pi", "/", "4"}]}], "]"}], ",", 
         RowBox[{"Labeled", "[", 
          RowBox[{
           RowBox[{"ShowGraph", "[", 
            RowBox[{"allGraphs5", ",", "k"}], "]"}], ",", 
           RowBox[{"allGraphs5", "[", 
            RowBox[{"k", ",", "\"\<compwhy\>\""}], "]"}]}], "]"}]}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5FakeAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.72089749010003*^9, 3.7208976215966034`*^9}, {
  3.7208977967618484`*^9, 3.720897804314616*^9}, {3.7208978580768857`*^9, 
  3.72089785908768*^9}, {3.720898311692405*^9, 3.7208983257896495`*^9}, {
  3.720898366957579*^9, 3.7208983863823557`*^9}, {3.7208984573053303`*^9, 
  3.720898472787612*^9}, {3.720899830323249*^9, 3.7208998310740595`*^9}, {
  3.720928452415261*^9, 3.720928469509611*^9}, {3.72115714286215*^9, 
  3.721157146983141*^9}, {3.7212283786347904`*^9, 3.7212284048760147`*^9}, {
  3.7212897090906*^9, 3.721289790201872*^9}, {3.7212898552257166`*^9, 
  3.72128985753013*^9}},ExpressionUUID->"1163c056-93ec-4582-bf58-\
b9951f709c6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["34", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["628", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["0", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[0, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["21", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["436", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["1", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[1, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["24", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["488", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["3", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[3, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["21", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["368", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["9", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[9, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["8", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["172", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["13", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[13, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["24", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["423", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["27", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[27, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["15", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["256", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["36", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[36, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["24", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["488", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["81", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[81, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["16", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["385", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["84", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x84== x19767(Greater) + 41637 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[84, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x84== x19767(Greater) + 41637 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["9", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["209", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["109", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[109, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["21", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["436", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["243", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[243, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["13", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["309", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["244", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[244, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["9", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["209", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["273", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[273, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["8", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["172", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["333", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[333, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2345", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["0", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["40", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["364", 
           RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[364, 
         RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ]}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["21", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["388", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["729", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[729, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["13", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["226", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["738", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[738, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["15", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["306", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["810", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[810, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["13", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["269", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["972", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[972, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x234", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["107", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["1062", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[1062, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["24", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["464", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2187", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2187, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["16", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["368", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2190", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x2190== x21873(Greater) + 41637 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2190, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x2190== x21873(Greater) + 41637 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["16", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["314", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2214", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x2214== x21897(Greater) + 42390 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2214, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x2214== x21897(Greater) + 42390 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["15", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["328", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2430", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2430, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x235", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["160", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2460", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x2460== x22143(Greater) + 49197 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2460, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x2460== x22143(Greater) + 49197 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["8", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["196", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2917", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2917, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n145x23", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["142", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["3160", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[3160, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["24", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["464", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6561", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6561, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["15", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["328", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6562", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6562, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["16", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["314", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6588", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x6588== x26271(Greater) + 46926 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6588, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x6588== x26271(Greater) + 46926 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["16", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["368", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6642", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x6642== x26325(Greater) + 48438 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6642, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x6642== x26325(Greater) + 48438 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x245", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["160", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6670", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x6670== x26353(Greater) + 49195 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6670, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x6670== x26353(Greater) + 49195 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["9", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["220", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["7293", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[7293, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n135x24", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["177", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["7374", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x7374== x27057(Greater) + 49197 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[7374, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x7374== x27057(Greater) + 49197 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["9", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["168", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["8757", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[8757, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n134x25", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["116", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["8784", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x8784== x28467(Greater) + 49203 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[8784, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x8784== x28467(Greater) + 49203 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1345x2", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["0", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["38", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["9490", 
           RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[9490, 
         RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ]}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["21", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["388", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19683", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19683, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["13", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["269", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19684", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19684, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["15", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["306", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19686", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19686, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["13", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["226", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19692", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19692, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x345", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["107", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["19696", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[19696, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["8", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["141", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["20439", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[20439, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n125x34", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["86", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["20448", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[20448, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["9", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["220", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["21951", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[21951, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n124x35", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["177", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["21954", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x21954== x28515(Greater) + 36057 (GreaterEqual)\
\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[21954, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x21954== x28515(Greater) + 36057 (GreaterEqual)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1245x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["0", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["45", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["22708", 
           RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[22708, 
         RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ]}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["8", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["196", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["26487", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[26487, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n123x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["5", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["142", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["26488", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {
         EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[26488, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1235x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["0", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["45", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["27246", 
           RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[27246, 
         RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ]}], ",", 
   RowBox[{"n1234x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["0", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["38", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                 EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["28764", 
           RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[28764, 
         RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ]}], ",", 
   RowBox[{"n12345", "\[Rule]", 
    TagBox[
     TooltipBox[
      RotationBox[
       TemplateBox[{StyleBox["0", 
          RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
         StyleBox["0", 
          RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
        "RowDefault"],
       BoxRotation->0.7853981633974483],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                
                Graph[{1, 2, 3, 4, 5}, {
                 Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 
                  5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{
                 Directive[
                  Opacity[0.7], 
                  Hue[0.6, 0.7, 0.5]], 
                 RGBColor[0, 
                  NCache[
                   Rational[4, 9], 0.4444444444444444], 0], {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                   0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                  Arrowheads[0.], 
                  
                  ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["29524", 
           RGBColor[
            Rational[2, 3], 0, 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This graph contains Clique of size5\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {
         Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {3, 
          4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[29524, 
         RGBColor[
          Rational[2, 3], 0, 0]]], "This graph contains Clique of size5"], 
      "Tooltip"]& ]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.720897659339305*^9, 3.720897820765293*^9, 3.7208978752880163`*^9, 
   3.7208983434460945`*^9, 3.7208984036715794`*^9, 3.7208984891345863`*^9, 
   3.720899847307654*^9, 3.7209284861026597`*^9, 3.7209532535639043`*^9, 
   3.720953567895443*^9, 3.721055822759076*^9, 3.7211571500388975`*^9, 
   3.7212075399460945`*^9, {3.7212283958517*^9, 3.7212284062140217`*^9}, 
   3.7212295703539295`*^9, 3.7212299177162848`*^9, 3.7212442918102365`*^9, {
   3.721289757906638*^9, 3.721289792301255*^9}, 
   3.721289858769949*^9},ExpressionUUID->"33dac846-057f-49a8-b154-\
2fab0bf6c6cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vertexStyle", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofournull\>\""}], "]"}], "]"}], "\[Rule]", 
       " ", 
       RowBox[{"MyColors", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<comp\>\""}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5FakeAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7208982242696996`*^9, 3.720898242826764*^9}, {
  3.721228388302325*^9, 
  3.721228412185589*^9}},ExpressionUUID->"fc2f497e-6abb-4079-bc2e-\
c7300566b905"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0.5, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x234", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x235", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n145x23", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x245", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n135x24", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n134x25", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1345x2", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0.5, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n125x34", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n124x35", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1245x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0.5, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n123x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1235x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0.5, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1234x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0.5, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0.5, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[1, 0, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7208982463147573`*^9, 3.7209532542393856`*^9, 3.720953569268033*^9, 
   3.7210558231758685`*^9, 3.7211571633134985`*^9, 3.7212075400949907`*^9, {
   3.7212283973809786`*^9, 3.72122841484214*^9}, 3.7212295705584755`*^9, 
   3.721229917867673*^9, 3.721244299111264*^9, 
   3.721289877902166*^9},ExpressionUUID->"271888c8-ad33-40f4-bcef-\
da79f3c5ab95"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"EdgeList", "[", 
     RowBox[{"MobiusGraph5", "[", 
      RowBox[{"K5Key", ",", "allGraphs5"}], "]"}], "]"}], ",", 
    RowBox[{"VertexLabels", "\[Rule]", "vertexLabels"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], 
    ",", " ", 
    RowBox[{"VertexStyle", "\[Rule]", "vertexStyle"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.720897671054759*^9, 3.720897732658266*^9}, 
   3.7208977837094126`*^9, {3.720898021550186*^9, 3.720898022347364*^9}, {
   3.720898250887332*^9, 3.7208982596819534`*^9}, {3.720898489372738*^9, 
   3.720898493591878*^9}},ExpressionUUID->"16811d93-32bd-46a2-906b-\
2bbcf83e906a"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`n1234x5, $CellContext`n12345, $CellContext`n1235x4, \
$CellContext`n123x45, $CellContext`n1245x3, $CellContext`n124x35, \
$CellContext`n125x34, $CellContext`n12x345, $CellContext`n1345x2, \
$CellContext`n134x25, $CellContext`n135x24, $CellContext`n13x245, \
$CellContext`n145x23, $CellContext`n14x235, $CellContext`n15x234, \
$CellContext`n1x2345, $CellContext`n12x34x5, $CellContext`n13x24x5, \
$CellContext`n14x23x5, $CellContext`n123x4x5, $CellContext`n124x3x5, \
$CellContext`n134x2x5, $CellContext`n1x234x5, $CellContext`n12x35x4, \
$CellContext`n13x25x4, $CellContext`n15x23x4, $CellContext`n125x3x4, \
$CellContext`n135x2x4, $CellContext`n1x235x4, $CellContext`n12x3x45, \
$CellContext`n13x2x45, $CellContext`n1x23x45, $CellContext`n14x25x3, \
$CellContext`n15x24x3, $CellContext`n145x2x3, $CellContext`n1x245x3, \
$CellContext`n14x2x35, $CellContext`n1x24x35, $CellContext`n15x2x34, \
$CellContext`n1x25x34, $CellContext`n1x2x345, $CellContext`n12x3x4x5, \
$CellContext`n1x2x34x5, $CellContext`n1x2x35x4, $CellContext`n1x2x3x45, \
$CellContext`n13x2x4x5, $CellContext`n1x24x3x5, $CellContext`n1x25x3x4, \
$CellContext`n14x2x3x5, $CellContext`n1x23x4x5, $CellContext`n15x2x3x4, \
$CellContext`n1x2x3x4x5}, {CompressedData["
1:eJwVxdV5hTAYAFDyhwBBg7u7WybpCHeBrtRR2z6c79Sf768PCILw8+d/BBhE
ICCBDApQUEEDHQwwwQIGNnKQizzkowCFKMIxTrCHU5zhHBdiKVaiJxakJg3x
SUpa0pFI6qVB8iVbHuVJTmVbiZRCmZWS9nSkAc1oS2caq7U6qYHqaI02aJnm
6LFe6p3uGolRGa3hmrXZm7mZWI01WqFVsYFNLGQ569jMFnu1l2iLlmIvDud0
jviKj3Ivb/dx7/qq737r3+RJ3uZs3nEdn2qvzmEbrmmdFu/wHm/xb//0l/RN
r/QI7mANjuzNtuxu33Zvn/AM1/DJr3zLz+7q9m6dt3mf+cIPfvOXP/zkF1/5
xvdfSYYjbw==
       "], Null}, {
      AspectRatio -> 1, GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`n1x24x35 -> Tooltip[
           Rotate[
            Row[{
              Style[16, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[385, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[84, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x84== x19767(Greater) + 41637 (Greater)"]], \
$CellContext`n1x23x4x5 -> Tooltip[
           Rotate[
            Row[{
              Style[21, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[436, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[243, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x23x45 -> Tooltip[
           Rotate[
            Row[{
              Style[13, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[309, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[244, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x34x5 -> Tooltip[
           Rotate[
            Row[{
              Style[13, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[226, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19692, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x2x35 -> Tooltip[
           Rotate[
            Row[{
              Style[16, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[368, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2190, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x2190== x21873(Greater) + 41637 (Greater)"]], \
$CellContext`n15x2x3x4 -> Tooltip[
           Rotate[
            Row[{
              Style[21, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[388, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[729, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1234x5 -> Tooltip[
           Rotate[
            Row[{
              Style[0, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[38, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[28764, 
              RGBColor[1, 0.5, 0]]], "No IH"]], $CellContext`n15x2x34 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[13, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[226, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[738, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x3x4x5 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[21, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[388, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19683, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x35x4 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[24, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[488, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[3, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n125x3x4 -> Tooltip[
           Rotate[
            Row[{
              Style[8, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[141, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[20439, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x2x45 -> Tooltip[
           Rotate[
            Row[{
              Style[15, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[328, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6562, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x245 -> Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[160, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6670, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x6670== x26353(Greater) + 49195 (Greater)"]], \
$CellContext`n13x25x4 -> Tooltip[
           Rotate[
            Row[{
              Style[16, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[314, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6588, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            
            "The relation holds x6588== x26271(Greater) + 46926 (Greater)"]], \
$CellContext`n12x35x4 -> Tooltip[
           Rotate[
            Row[{
              Style[15, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[306, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19686, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x245x3 -> Tooltip[
           Rotate[
            Row[{
              Style[9, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[209, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[109, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n135x24 -> Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[177, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[7374, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x7374== x27057(Greater) + 49197 (Greater)"]], \
$CellContext`n1245x3 -> Tooltip[
           Rotate[
            Row[{
              Style[0, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[45, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[22708, 
              RGBColor[1, 0.5, 0]]], "No IH"]], $CellContext`n1x2x3x45 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[21, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[436, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[1, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n145x2x3 -> Tooltip[
           Rotate[
            Row[{
              Style[8, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[196, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2917, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x25x34 -> Tooltip[
           Rotate[
            Row[{
              Style[15, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[256, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[36, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x345 -> Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[107, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19696, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x25x3 -> Tooltip[
           Rotate[
            Row[{
              Style[16, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[314, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2214, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x2214== x21897(Greater) + 42390 (Greater)"]], \
$CellContext`n1x2x34x5 -> Tooltip[
           Rotate[
            Row[{
              Style[21, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[368, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[9, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n134x2x5 -> Tooltip[
           Rotate[
            Row[{
              Style[9, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[168, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[8757, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x23x5 -> Tooltip[
           Rotate[
            Row[{
              Style[15, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[328, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2430, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12345 -> Tooltip[
           Rotate[
            Row[{
              Style[0, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[0, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 5}, {
               3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[29524, 
              RGBColor[
               Rational[2, 3], 0, 0]]], 
            "This graph contains Clique of size5"]], $CellContext`n15x234 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[107, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[1062, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x235 -> Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[160, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2460, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x2460== x22143(Greater) + 49197 (Greater)"]], \
$CellContext`n15x24x3 -> Tooltip[
           Rotate[
            Row[{
              Style[15, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[306, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[810, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x3x4x5 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[34, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[628, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[0, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x3x45 -> Tooltip[
           Rotate[
            Row[{
              Style[13, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[269, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[19684, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n123x4x5 -> Tooltip[
           Rotate[
            Row[{
              Style[8, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[196, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[26487, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n124x3x5 -> Tooltip[
           Rotate[
            Row[{
              Style[9, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[220, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[21951, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x24x5 -> Tooltip[
           Rotate[
            Row[{
              Style[16, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[368, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6642, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x6642== x26325(Greater) + 48438 (Greater)"]], \
$CellContext`n1x2345 -> Tooltip[
           Rotate[
            Row[{
              Style[0, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[40, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[364, 
              RGBColor[1, 0.5, 0]]], "No IH"]], $CellContext`n14x2x3x5 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[24, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[464, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2187, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n15x23x4 -> Tooltip[
           Rotate[
            Row[{
              Style[13, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[269, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[972, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x345 -> Tooltip[
           Rotate[
            Row[{
              Style[8, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[172, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[13, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x234x5 -> Tooltip[
           Rotate[
            Row[{
              Style[8, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[172, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[333, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n124x35 -> Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[177, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[21954, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x21954== x28515(Greater) + 36057 \
(GreaterEqual)"]], $CellContext`n123x45 -> Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[142, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[26488, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n145x23 -> Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[142, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[3160, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x2x4x5 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[24, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[464, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6561, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x24x3x5 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[24, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[488, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[81, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n135x2x4 -> Tooltip[
           Rotate[
            Row[{
              Style[9, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[220, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[7293, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x25x3x4 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[24, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[423, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[27, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1345x2 -> Tooltip[
           Rotate[
            Row[{
              Style[0, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[38, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[9490, 
              RGBColor[1, 0.5, 0]]], "No IH"]], $CellContext`n1235x4 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[0, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[45, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[27246, 
              RGBColor[1, 0.5, 0]]], "No IH"]], $CellContext`n134x25 -> 
         Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[116, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[8784, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x8784== x28467(Greater) + 49203 (Greater)"]], \
$CellContext`n125x34 -> Tooltip[
           Rotate[
            Row[{
              Style[5, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[86, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {
              Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[20448, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x235x4 -> Tooltip[
           Rotate[
            Row[{
              Style[9, 
               RGBColor[1, 0, 0], Bold, 14], "  ", 
              Style[209, 
               RGBColor[0, 0, 1], Bold, 14]}], Rational[1, 4] Pi], 
           Labeled[
            Labeled[
             
             Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {
              EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[273, 
              RGBColor[0, 
               Rational[2, 3], 0]]], "This is a planar contraction"]]}, 
       VertexStyle -> {$CellContext`n1245x3 -> 
         RGBColor[1, 0.5, 0], $CellContext`n12345 -> 
         RGBColor[1, 0, 0], $CellContext`n15x2x3x4 -> 
         RGBColor[0, 1, 0], $CellContext`n13x25x4 -> 
         RGBColor[0, 1, 0], $CellContext`n12x3x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n15x24x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x23x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n14x25x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x245x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x25x34 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2345 -> 
         RGBColor[1, 0.5, 0], $CellContext`n1x2x35x4 -> 
         RGBColor[0, 1, 0], $CellContext`n1x235x4 -> 
         RGBColor[0, 1, 0], $CellContext`n13x24x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x24x35 -> 
         RGBColor[0, 1, 0], $CellContext`n14x23x5 -> 
         RGBColor[0, 1, 0], $CellContext`n12x35x4 -> 
         RGBColor[0, 1, 0], $CellContext`n15x234 -> 
         RGBColor[0, 1, 0], $CellContext`n13x2x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n123x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n125x34 -> 
         RGBColor[0, 1, 0], $CellContext`n12x3x45 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x3x45 -> 
         RGBColor[0, 1, 0], $CellContext`n134x2x5 -> 
         RGBColor[0, 1, 0], $CellContext`n124x3x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x34x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x3x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n12x34x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x23x45 -> 
         RGBColor[0, 1, 0], $CellContext`n13x245 -> 
         RGBColor[0, 1, 0], $CellContext`n14x235 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x345 -> 
         RGBColor[0, 1, 0], $CellContext`n14x2x35 -> 
         RGBColor[0, 1, 0], $CellContext`n15x23x4 -> 
         RGBColor[0, 1, 0], $CellContext`n124x35 -> 
         RGBColor[0, 1, 0], $CellContext`n134x25 -> 
         RGBColor[0, 1, 0], $CellContext`n1234x5 -> 
         RGBColor[1, 0.5, 0], $CellContext`n145x23 -> 
         RGBColor[0, 1, 0], $CellContext`n123x45 -> 
         RGBColor[0, 1, 0], $CellContext`n135x24 -> 
         RGBColor[0, 1, 0], $CellContext`n145x2x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x25x3x4 -> 
         RGBColor[0, 1, 0], $CellContext`n1x24x3x5 -> 
         RGBColor[0, 1, 0], $CellContext`n125x3x4 -> 
         RGBColor[0, 1, 0], $CellContext`n15x2x34 -> 
         RGBColor[0, 1, 0], $CellContext`n12x345 -> 
         RGBColor[0, 1, 0], $CellContext`n1x234x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1345x2 -> 
         RGBColor[1, 0.5, 0], $CellContext`n135x2x4 -> 
         RGBColor[0, 1, 0], $CellContext`n13x2x45 -> 
         RGBColor[0, 1, 0], $CellContext`n14x2x3x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1235x4 -> RGBColor[1, 0.5, 0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.010098916887693297`], 
        ArrowBox[{{0., 1.}, {2.9999999999849365`, 0.}}, 0.09694960212210157], 
        ArrowBox[{{1.999999999989086, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000043144, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.000000000005173, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.999999999994202, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000047521, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.000000000008356, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.999999999998181, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000011141, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{1.00000000000108, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.9999999999787406, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000054456`, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-1.9999999999932356`, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000053092`, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000008015, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.000000000028422, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{6.000000000028422, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.000000000028422, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-5.0000000000056275`, 2.}, {0., 1.}}, 0.09694960212210157],
         ArrowBox[{{-5.0000000000056275`, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-5.0000000000056275`, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-1.0000000000067644`, 2.}, {0., 1.}}, 0.09694960212210157],
         ArrowBox[{{-1.0000000000067644`, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-1.0000000000067644`, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.000000000004377, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{2.000000000004377, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.000000000004377, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.000000000008299, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{-3.000000000008299, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.000000000008299, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-7.000000000008015, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{-7.000000000008015, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-7.000000000008015, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{9.000000000055252, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{9.000000000055252, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{9.000000000055252, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.0000000000073896`, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.0000000000073896`, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.0000000000073896`, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000010914, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000010914, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000010914, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{15.00000000005133, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{15.00000000005133, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{15.00000000005133, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000044281, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000044281, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000044281, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.1032064978498966`*^-12, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.1032064978498966`*^-12, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.1032064978498966`*^-12, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.9999999999945999, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.9999999999945999, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.9999999999945999, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{10.000000000044224`, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{10.000000000044224`, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{10.000000000044224`, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.9999999999953957`, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.9999999999953957`, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.9999999999953957`, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{13.000000000052694`, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{13.000000000052694`, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{13.000000000052694`, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-8.0000000000108, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-8.0000000000108, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-8.0000000000108, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000050932`, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000050932`, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000050932`, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000045418`, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000045418`, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000045418`, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.00000000002467, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.00000000002467, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.00000000002467, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-9.00000000000955, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-9.00000000000955, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-9.00000000000955, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-4.000000000002899, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-4.000000000002899, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-4.000000000002899, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{14.000000000050875`, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{14.000000000050875`, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{14.000000000050875`, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000015348, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000015348, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000015348, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000022794, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000022794, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000022794, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {6.000000000028422, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {2.000000000004377, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {-3.000000000008299, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {-2.0000000000073896`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {8.000000000044281, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {10.000000000044224`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {6.000000000028422, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {-7.000000000008015, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {9.000000000055252, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {14.000000000050875`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {4.000000000015348, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {7.000000000022794, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {-2.0000000000073896`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {2.1032064978498966`*^-12, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {0.9999999999945999, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {-9.00000000000955, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {-4.000000000002899, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {7.000000000022794, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {10.000000000044224`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {2.9999999999953957`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {13.000000000052694`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {11.000000000045418`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {5.00000000002467, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {7.000000000022794, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {-5.0000000000056275`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {2.000000000004377, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {-7.000000000008015, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {-6.000000000010914, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {2.1032064978498966`*^-12, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {2.9999999999953957`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {-5.0000000000056275`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {-3.000000000008299, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {9.000000000055252, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {12.000000000050932`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {5.00000000002467, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {-4.000000000002899, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {-6.000000000010914, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {8.000000000044281, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {0.9999999999945999, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {-8.0000000000108, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {5.00000000002467, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {4.000000000015348, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-1.0000000000067644`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-3.000000000008299, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-7.000000000008015, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-8.0000000000108, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {11.000000000045418`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-9.00000000000955, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {-1.0000000000067644`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {2.000000000004377, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {9.000000000055252, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {15.00000000005133, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {0.9999999999945999, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {13.000000000052694`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {15.00000000005133, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {8.000000000044281, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {2.1032064978498966`*^-12, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {12.000000000050932`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {11.000000000045418`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {14.000000000050875`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {4.3727600233632415`, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {5.372760023366482, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {0.289838800390271, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {7.372760023365004, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {-0.710161199606091, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {3.372760023364833, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {2.372760023366652, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {-3.0000000000096065`, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {6.372760023364265, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {11.000000000046157`, 3.}}, 
         0.09694960212210157]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[1, 0.5, 0], DiskBox[{0., 1.}, 0.09694960212210157]}, 
         InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["0", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["38", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["28764", 
                 RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[28764, 
               RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ], 
          Offset[{2, 2}, {0.09694960212210157, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0, 0], 
          DiskBox[{2.9999999999849365, 0.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["0", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["0", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2,
                     5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["29524", 
                 RGBColor[
                  Rational[2, 3], 0, 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This graph contains Clique of size5\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 3}, {2, 4}, {2, 
                5}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[29524, 
               RGBColor[
                Rational[2, 3], 0, 0]]], 
             "This graph contains Clique of size5"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.096949602107038, 0.09694960212210157}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          DiskBox[{1.999999999989086, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["0", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["45", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["27246", 
                 RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 3}, {1, 5}, {2, 3}, {2, 5}, {3, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[27246, 
               RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ], 
          Offset[{2, 2}, {2.0969496021111875, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{7.000000000043144, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["142", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["26488", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 3}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[26488, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {7.096949602165246, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          DiskBox[{6.000000000005173, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["0", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["45", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["22708", 
                 RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 4}, {1, 5}, {2, 4}, {2, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[22708, 
               RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ], 
          Offset[{2, 2}, {6.096949602127275, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-2.999999999994202, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["177", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["21954", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x21954== x28515(Greater) + 36057 \
(GreaterEqual)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 4}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[21954, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x21954== x28515(Greater) + 36057 \
(GreaterEqual)"], "Tooltip"]& ], 
          Offset[{2, 2}, {-2.9030503978721005, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{8.000000000047521, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["86", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["20448", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {1, 5}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[20448, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {8.096949602169623, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{5.000000000008356, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["107", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19696", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 2}, {3, 4}, {3, 5}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19696, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {5.096949602130458, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          DiskBox[{2.999999999998181, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["0", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["38", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["9490", 
                 RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 3}, {1, 4}, {1, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[9490, 
               RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ], 
          Offset[{2, 2}, {3.0969496021202825, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-6.000000000011141, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["116", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["8784", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x8784== x28467(Greater) + 49203 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 3}, {1, 4}, {2, 5}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[8784, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x8784== x28467(Greater) + 49203 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-5.903050397889039, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{1.00000000000108, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["177", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["7374", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x7374== x27057(Greater) + 49197 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 3}, {1, 5}, {2, 4}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[7374, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x7374== x27057(Greater) + 49197 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {1.0969496021231815, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-0.9999999999787406, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["160", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6670", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x6670== x26353(Greater) + 49195 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 3}, {2, 4}, {2, 5}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6670, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x6670== x26353(Greater) + 49195 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-0.903050397856639, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{11.000000000054456, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["142", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["3160", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 4}, {1, 5}, {2, 3}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[3160, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {11.096949602176558, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-1.9999999999932356, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["160", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2460", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x2460== x22143(Greater) + 49197 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 4}, {2, 3}, {2, 5}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2460, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x2460== x22143(Greater) + 49197 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-1.9030503978711342, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{12.000000000053092, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["5", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["107", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["1062", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{1, 5}, {2, 3}, {2, 4}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[1062, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {12.096949602175194, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[1, 0.5, 0], 
          DiskBox[{4.000000000008015, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["0", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["40", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {
                    Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["364", 
                 RGBColor[1, 0.5, 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], "\"No IH\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {
               Null, {{2, 3}, {2, 4}, {2, 5}, {3, 4}, {3, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[364, 
               RGBColor[1, 0.5, 0]]], "No IH"], "Tooltip"]& ], 
          Offset[{2, 2}, {4.096949602130117, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{6.000000000028422, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["13", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["226", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19692", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19692, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {6.096949602150524, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-5.0000000000056275, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["16", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["368", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6642", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x6642== x26325(Greater) + 48438 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6642, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x6642== x26325(Greater) + 48438 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-4.903050397883526, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-1.0000000000067644, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["15", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["328", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2430", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 3}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2430, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-0.9030503978846628, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.000000000004377, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["8", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["196", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["26487", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 3}, {2, 3}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[26487, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {2.0969496021264784, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-3.000000000008299, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["9", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["220", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["21951", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 4}, {2, 4}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[21951, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-2.9030503978861977, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-7.000000000008015, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["9", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["168", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["8757", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 4}, {3, 4}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[8757, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-6.903050397885913, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{9.000000000055252, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["8", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["172", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["333", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 4}, {3, 4}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[333, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {9.096949602177354, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-2.0000000000073896, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["15", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["306", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19686", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19686, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-1.9030503978852882, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-6.000000000010914, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["16", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["314", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6588", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x6588== x26271(Greater) + 46926 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {2, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6588, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x6588== x26271(Greater) + 46926 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-5.903050397888812, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{15.00000000005133, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["13", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["269", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["972", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 3}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[972, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {15.096949602173432, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{8.000000000044281, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["8", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["141", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["20439", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {1, 5}, {2, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[20439, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {8.096949602166383, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.1032064978498966*^-12, 2.}, 0.09694960212210157]}, 
         InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["9", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["220", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["7293", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {1, 5}, {3, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[7293, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {0.09694960212420478, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.9999999999945999, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["9", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["209", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["273", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {2, 5}, {3, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[273, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {1.0969496021167013, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{10.000000000044224, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["13", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["269", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19684", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19684, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {10.096949602166326, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.9999999999953957, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["15", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["328", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6562", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6562, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.096949602117497, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{13.000000000052694, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["13", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["309", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["244", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}, {4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[244, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {13.096949602174796, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-8.0000000000108, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["16", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["314", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2214", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x2214== x21897(Greater) + 42390 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {2, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2214, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x2214== x21897(Greater) + 42390 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-7.903050397888698, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{12.000000000050932, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["15", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["306", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["810", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {2, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[810, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {12.096949602173034, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{11.000000000045418, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["8", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["196", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2917", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {1, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2917, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {11.09694960216752, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{5.00000000002467, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["9", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["209", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["109", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {2, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[109, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {5.096949602146772, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-9.00000000000955, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["16", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["368", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2190", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x2190== x21873(Greater) + 41637 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2190, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x2190== x21873(Greater) + 41637 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-8.903050397887448, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-4.000000000002899, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["16", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["385", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["84", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x84== x19767(Greater) + 41637 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}, {3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[84, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x84== x19767(Greater) + 41637 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-3.9030503978807976, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{14.000000000050875, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["13", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["226", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["738", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[738, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {14.096949602172977, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{4.000000000015348, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["15", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["256", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["36", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}, {3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[36, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {4.09694960213745, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{7.000000000022794, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["8", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["172", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    
                    Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {
                    EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}, {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["13", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              
              Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}, {3, 5}, {4, 5}}}, {
               EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[13, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {7.096949602144896, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{4.3727600233632415, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["21", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["388", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["19683", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 2}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[19683, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {4.4697096254853435, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{5.372760023366482, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["21", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["368", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["9", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{3, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[9, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {5.4697096254885835, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.289838800390271, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["24", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["488", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["3", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{3, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[3, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {0.38678840251237256, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{7.372760023365004, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["21", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["436", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["1", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{4, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[1, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {7.469709625487106, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-0.710161199606091, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["24", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["464", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6561", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 3}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6561, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-0.6132115974839895, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{3.372760023364833, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["24", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["488", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["81", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[81, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.4697096254869346, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.372760023366652, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["24", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["423", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["27", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[27, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {2.4697096254887536, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-3.0000000000096065, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["24", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["464", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2187", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 4}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2187, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-2.903050397887505, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{6.372760023364265, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["21", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["436", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0.9510565162951535, 0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["243", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{2, 3}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[243, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {6.469709625486367, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{11.000000000046157, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["21", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["388", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0], {
                    Arrowheads[0.], 
                    
                    ArrowBox[{{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 0.058778525229247314`]}}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["729", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {Null, {{1, 5}}}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[729, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {11.096949602168259, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{3.840715577974777, 4.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            RotationBox[
             TemplateBox[{StyleBox["34", 
                RGBColor[1, 0, 0], Bold, 14, StripOnInput -> False],"\"  \"",
               StyleBox["628", 
                RGBColor[0, 0, 1], Bold, 14, StripOnInput -> False]},
              "RowDefault"],
             BoxRotation->0.7853981633974483],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["0", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[0, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.9376651800968783, 4.096949602122102}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AspectRatio->1,
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{1139., Automatic}]], "Output",
 CellChangeTimes->{{3.720897677839465*^9, 3.7208976935908194`*^9}, 
   3.7208977344826174`*^9, 3.7208977851498146`*^9, 3.7208978218882785`*^9, 
   3.720897876364879*^9, 3.720898024297272*^9, 3.720898261051751*^9, 
   3.720898344987789*^9, 3.720898405367107*^9, 3.7208984967822065`*^9, 
   3.7208998499498377`*^9, 3.7209284879802704`*^9, 3.7209532559039793`*^9, 
   3.720953572165723*^9, 3.7210558245857477`*^9, 3.721157169695305*^9, 
   3.7212075415022345`*^9, 3.7212284245869417`*^9, 3.721229571605755*^9, 
   3.7212299189630795`*^9, 3.72124430251147*^9, 
   3.721289885468115*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
s5r0XrduHaNOyS0og8rM3lSR8hZl5m2koNi6zLw1yji3Z3kvO7qLIZSj1dez
Tgh5nVehXW7VYL3O09UODSn1ZqlecjV6ltlEtjoxfupty5E2U6mksyKZF10p
/lA3KpUeaHfF5MpslvZuTU2ZyGkPaTcqM692JK1tmXmrguD5VYWOZea9X8hS
35UrV/53bmGOJy9kNmRuHDNlDIdH3IgzuMy8zhKIHXYty8xbF4bF78pqU2be
6lCv90M7sLwL++Y4HQobzszcOGW8zZsNApy8iUepNy/qLf7QNLA+Xt1t4y8Z
ZWaL25XZLLbEtHzw+RORloRHpHPCIyJMxR9qeqWClnZ5S67MZjn1JBy06jJH
yY2miGzUlZl3aNDwpW8ll0uQkisX25eZXYrQLSMnjSxkNmZk8q2Zp/cfsj/r
aMkV6UPKzN5YmhQjRa3KzFsbvA2/wNi2zLxOyYggg1Myt0waO7KwcWhG8GLr
xZmnhxy3P5ci7XYcpd6sqLcgD4ak1fX6yYftYSi+XZltYmty7x7V+0ik9SLE
0zkREstcxS/U7koFKu3ynmyZzdLep6gqc4i0R2try8x7dhBdv272PWklXkxo
V2ZeKTz4jF9TQvz53vb9t6/75hu7z6GVUtVZZeatC5Ljt4u0LjNvdWB/8hXc
BvPmPYedC4bBxqC74Td/vtf/gJCjQrE6XVJry/Ha/K6Q+vS6Pu2zV/1Bz79q
t1r1LLNNTl4+PnLfn0bTWXnJcQJTmyHZJeho9iZbZpvaBxn2UfiqMkdFe366
psy8TljE+mnLMvPW6uq/TZnZbbQ4c4fT5MXP+DXpTSTfXD+mfvv33rORnBa6
aTurzOy16SLTYF4nMtqb3w3mdQ6Hdn27yVskgZ19WFJsHnNUyFuRbmyUerNU
L9VVX2Y1PcpM173MdC72TZMHampOQUezLxVlVqO9yJMrc1TYs7x+Lae6zLzD
gm3yK+fNyszbKLTZTzpalZlXygviuojv8uRb20xps9+GDVbzuACXmEqdU2be
mtBMvxjdpsy8Vd5GtC8zRzYMRvIud5N3VO8ejAT5rVOOC3mLP2RbuqZWl6Xq
yJ+oTy29UpTeo8x03ctMx05cIka24zvvfoCm5hRQtJu3KsqsxukXsVCaLXMw
tNegq8rM6w79iQ0STcvM625XTYa2WpSZXQoHPuPXPHkhszRzytKlS00K26qS
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
c5PPg/Dh3+GMJ76MuqEMm+e/k5eluA6AnK8nmOr9xSGAOxGfA7v+8LbbNzK3
onANhoMlTIoJfVhX9ynVpcAKwviANcAf3sRzH09oVSKzblNmaCabCFfK6oPP
mBoqcUsjBmoDhFfCVRXuUF1q9198/Ztzjx4QoimB3EF6FdzaCObVN3TQEFz4
3F5/HYXyG+E8S/6cCQWT6eVckWFFrUdgKi3Yp9sOPG3ygkOOfjL+zctvLZdY
jXCgv9l70yitTh079dmRQ8ev+PJjT74Pkqu1VmN7gk6XAKGBJxNlw/LoYdBC
0mipL408a9jjT//08Muf3/4L/33w69/4uCrQLqwno2wNKPu7JcveQko05FeT
I7bKXSk9gVQnT110xyO/Ombs9NMvWYi2FQfOXRicN69stnkwoUBxHX/WpTd/
+/714btAO8bbgRgAWbFCaJuVji3WDkFHS6jVz0A/7CV5JzcQ7fz4Ex/f9cMf
v/5xbe1G+JrCbb4mHX/N2jHXJx3/jNPr8k505HKRYrhAYzaUYDTuUXfFpUHv
xe63r/2Ada88oaWeRSb3eg0XC2ruCDnAFPj75H4DHw1MLF2p8kgx/Dv1Tw1u
LayGf8ZrATqQ0zqOAbKae4A90RZ4t0ahqk8fBdxvSwWc2XNAyod19Z96RkHe
MUF5r4JJY6mg66HVGSxPwzxeCZN+LMArwlDfU8KSrzBS0Nyck/W5rlT21dAz
y5eKD5TLooFSXE9UzyeddfkS/B7EnmckUdXAdCB4lTMRpVDFW2WDPzlZB3W3
wAMSBuzYo01MdtxPKepA63geI8MzGZSmmgIzP66p3fjXmfNfUZtn9Q3RwXA7
02JP+EErL6LoN4Fd3N5MGcEEgXhIf6LVs4K1eoduPDevehusgwO3rqgjUnnm
Czu9x4gsfFI7bsHROGWY1uavvBpt52hmfPXpFy9gNgu+i4ricBTyTs77gOMg
rXWpKn/DnK89YuCS95tbPvmgofGjvdase5uSzlivPEkn5oPPP/3MJ3z/v7t1
+/TKU4bchTmIMMXVFJrK1CJUvzD/SeqxFLwKidfEsvbZjqE996jBI9d90rbn
77d0/eCpHb/0P7wqaBHid8spCRPmv3ts8r9D5t/4BGbdgZRz2LSe0QoAZqTb
sOzUdfsf+g+BnOaX2y5k2Ch895zRM27nCrHp+J0BU0EUe7XcVVKm7jPk3TZU
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
h0n98ABlhwRaceWqPHOMsVc6XnSsbNvJMbxKJF46tgSdo1T4nfufPOmSYZNu
gB0zvGcL5/Nec9JCBjTzBg6O08mgev5RTnhliaqSEKSs1FUkxMlPlyQdXl4v
jq3T22PySvE5kxyhV8bviwEfX8UE8HWqYbAJVBUlAHVKjBtYVX7/NaEHeZkm
wxMqZS8G2SoLFQ497+Wq7Bx9YXHo2vQV+kjxlc85s1YpOVm1JxNwG7leNSjk
jQtUqXE2tzYRJIa1e0G4xXCtGln4d28Kpn94se3BOjBw7JzVSH2PVqRiac3Y
Zpj00BMY5j2KO9fzq1oLMsbMnXOVAwZKoMUDKKEBOqGG9NEb7zlUvfbgRaxM
rTbi5lWPvOALDwrNSWku52cDjxYKvWuniTn14kG2L4dC2njCzrYmwZBD4WeO
oQIPoslKONT4PyROloWBQQrcpB775dFjjpqz7F49N6/KpuNRKkn7rDPLqKSm
DwLG+u3MCO1SVRRg1OXWebJL8rvMhLZ19k+10tYZNVoLjCwtZi6dD0+fs77j
SdOHJXinVye11aGfwKKWspGNs36U2qpmGjKpqp14D/O9qtsTNE6n3hKPEWjb
OsyvBGcMyhblTRNZH6Livhxb1DGW1CtY6lVvl3U7dW4MEMfRiy1o1Pdp8jo+
ozuYi4mphdsOW582r8GlueLQAdPgmsJYNDGqawXNqxTBNNHTp8fjw6kqeRBB
ptVZtUT4uClNlaRdlkadeH3Gi/00Teji+7d29tqrpK4Kd8XDk0KXujp7VYTN
dhlUfgTMjdmDLZUKGwXmZmki8bh40LhdJ8fwWinVOIsV9tLh6SQkbA86FZ3Z
CmZsT0dTsWo607PGh0heE0SLAzVQSf3SYROX08SDWeEtKZy1XUvxBmdt28WN
rG7PfvjxuvhSK2JVYhogA2Wy+PIiGTQN4F4anNZKdXmxIk5MqVLR6JFV8wk6
QmPCZX0qhcJGO1NLU8V8WRyEppL2VeqqUjPdWk2nSOHCKdNAY1eMXa1YU6oq
iMgtdJti1Ka5a5HF4eRyq7+SRxJTqcdXtvA3HL8vOP78OasPPmPqwuPPm41w
ILf0kiqJgOe01WTCCM7KfVbe9aTXxbw1PcMkwyGXIgR5bru+cuit92J7Uvvx
Yufatfnjy7d2VuUhYI/4QmE0E34rqzCDWAQ0JPaUAA+dtksIGN2zgoA4d/FO
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
h5qLoSEmVWARkbuGVU9TKFNzrGek2+mYpGRa8qef/cNBl0rGDjxN70Dvvb1I
Gm6XU1ngWtSn62KwWFNl3USd05HFmpVpQ4Ww5tP/852a51+znei1yHQ5VATp
CEOQA+A3fivRuUspqpSkpu9q1KsOTdn5ztrC6C0sHONgPnMGkONQWVqgRVak
7GHGAg2tON1mgu2bP3Ohm9c9J0pX/lX1txrBv+FY64VilJ4dshi53ruNN09f
BGYts16Mom+A9UxiuO0ubTUIeHfxQ4PdZFntte5X0sSqg4K3lLr8G+CHLVt+
AxKoBZWfbD3i7JvvOejU9XX3CpmKO3r7zFBTOkTceqkPzjgrXARn0hVZLWjm
T6dNggg2xStFkNgixBkqHz89jxFbADK6J8gF1zMRVYrSwL3frzHKQ4dROXmv
nnxylZC0l2RqRRrv1bQDkFNWJc5RV0ZmOJMpontt8hnwbLpDCtLy0mYIgTlD
r3ZMCAnRbnH8soMRCPnkq9ALWCLvVi/EesCPkAErJtUGvPevfvMH5J0f45bG
/s0aUKs9q6mCTNEU51Ljaxk4s112iB+yY2QOzKpCMFd+e+SGO56SAU/OXO7m
smhotSYYsn9nCzQaoBNqVG3QhiNyr2Q2WRx2RclWdbCuGrWDmnUBycfFWB2z
R+WzrYSByoFmg9LrjlZBFeiJ6p37hqNttVna7RMaBTi00lhKVOVkVgIrqsOm
hYCSGVWmMh0ibXVLSV+WqMzMLd03GNXgxTJ2NRVjqFZhiw3d4twUsViX3pNo
bGx+mYIsT/KJYI/6PUiNKiZp5X3K3Smvk7K+F//5sNUCKLQkpw0XIikuVMZN
NzLDGQGxUN1WOhw7jMxlfrGKSI2i6xYCO/OLnnpKiDGuQnWm6yq0pJYGjR+8
7wnjHKKN4MgZQ4t3EFIwwu2M+QJKZxjCf92Ks4uVvy6Mu8yuhqzHtsrXLjAI
hwlrM0XsrW48yd08+YnjrpFopn1vpotA6sA79cFDNuecIOxuuamb7at736IJ
pR3nlbwo3Fl1jKynSxB3/mxuXVgZmJ/035autd/i3Pr4tWEjs6Zkqm9mey25
h46DiEjNr0krokKH66wUi8DmBn97z1CT2O6F6EDFgU0BQeF70QwzCmg7pWoO
HZkDXmjDZZh1M2aEw1PFDPeE1YD+yMOHc+KY0mfzyxIY8VJB4gQec3nt2Rfd
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
ra+RYPj8mN+UXqt1I6E4votIBW01kefd/qm9HgSnV1aRs5SaNfsGjnFdWVXK
IMpeDJUb/c75+x/0K3BL0pXa5uIbJwV7ydPLwaRuEZUHXHbDw0CFS8M89t5/
/AnEfmeRIrBRhfjQnTU/S7j67PKpPOnJv33vT+3wijs5vDzCK5XgROlhQ/N5
ppgJXiwKm9z2iZ0tGidIhKcnz5L/99sWmaMWpqioGLrj33ZOdor0xo/RzVUi
AZsDVZ/4bFO4dwdC3VNBjtntG87SctR0nX2wSRFVTZWNygRGGhXXp+hW91gq
l0TuT2bM/i2l8mpfV5Kumc37MGvXempbMQ+aRSa56W6Cgj5yC4MRfc5JMD0K
UUdx0SjnN5ZSYwIeqyuZ7ApCRq9Enm3u+0b5SjBKCxPTVSEjNYA2SwFF9GCP
1+b9KOWAqMX8bwEoucAqclS4wVtOPx4u57EBtJojAo6IM9aNHEa1dxhm1uWH
nn2D7FxUd4qpdnkiGzc1MlasitkOLZaM7HSxGUXNQFmtnJmWf0knHCyns/S4
NnZCR0HvC2wC1z3b/fOvb/mPvR9LU4322fc3SsDyTwcuXfVkUnNz4rEQJMWx
NM943Sc/afN+fzE8/JcvLrv8taWjx0n+g9aoQzO+vMnmrwktySVDpQmt6/Tu
kN8f/SRtXj9q0c2u12Tgoff87z9JkdQ/PvTky7Dr5DF+SrIIsmyJ51NZ77k8
wTWVWN2qlvQhHIYiaPwdqQsRA+cefuKLqZXZ6VALAbG4cGb5/jdCweTXfp4m
T+hcOj+IwgvLLAN7UcwqJxZofduEEO1QUWsoATbZppPfMJBTnnzWKcs2uAFy
vXBn4KQK8hBAEwpiYVa1w0QMLTritJKPaRW/K6XdshQCs4JywK2hWGqgMIkN
5WhV3QIZlJSGWf2lk9YCpRgzkv36vPYE2Sb5txLAY9TRg8Yu6BREclSRp5z5
Hnv/EnJQ8FUSv92wGPCr+QU15xx79n8CNXIbR51/+ZMRNV2oi/NUFqq4Ogu3
2FafVjWDKJ+jH96FLCc6/bSl9zzz1rcmdXzOkac8LzaLEIWgnEkQ5vop7Rx8
9gU/xc1Bs2MxGJl32YQbi/JsVOsmD76N5+niKdWpemuJBKGGiQqKoFqyCxTG
BdXAuRRaa0Tqv2Knnf4iNy2dLIsXHvCLuz/8799PedmoBeBsZ5NwsPYChB1B
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
bJguI5LLHHboe1sBHcZPFwSRAC6Pr3muIRsGSRioAiqWUpayNYIxOq4W4cJ5
2mU7nMJW51N15W8yIdD4ykgpPKW00USPSY1baWGeWzf6yqbkgSWHaqTogaSA
D933+M/wEvzvVM46vY8EsbhZ1ATMorIUUTq2C+fHLIzSSmcklTNIbB5qg5jx
6k9/fQsiHZGov8gLG5NA3Y1XrFm9jxxwsgxH0dhUS1Ezh0njVy1djpz3Uh59
q3HatkUDvVpIIzF3Xe2Od5nJqbubcf9ywYfZKDQ8+Dxn2C8fUhhNnGVV295x
OFNRZcrGrBJF2DxjOEPWBAYZuEuwkeIit5Vi4Et9v1r9E1nErlBWPK4TXy5S
NcQoTDzj5UitD83zDGEeZL9xxw7mUwqWA5g4olI8ruP4W7fYtk7/ymFfxTTt
shPMYGmJq02ry9U6O7bYIFmzrXs62riJFqfgEZSYBUnWUPy++b6nsWSU8VLd
f6j3KejaTSu7uvESL7mlZEw+LZwEFoXyFon/DRblDO9zzgyqETudI9Our08i
QdLYla3JPbNxI4NuI91yfx6KlYW8BTXo2EQwWv5VkWxGLj0X3yNEe5LS0OKg
JznKtXrfA2K3b7jzhyTa4fUmiH2rnMm4ctlSGpri0M8wZCFH+tV02J8YWp+j
SNfXIhuiqBE2BLYB9uFR7F/7nn3DpjlJSVJgQt/sezIBAe6YBPNv+MATL1Tm
vWCKQUyBOGOSB1c1vSCvGiUldL2OfManECIYuhB2HtYSBxlt0k1yP5QhVgQj
A6YSb1s5BctuYfwn3rLF+lT3yo13auF5AMdhJ110xz7nXXXfHhdd/yDCYk2K
SyPIdeFRfHyD+0XaY7DbGZhJXR0SKHrtZl/7rIHTsJ3OltZw3v2qerZztU5r
3Erbjq3Bg6Zrswp148NispT4q1P0Gm42ZP/NmNTidNQLJP/I3gproImNeVwx
kiZI/XztjddjEFEIqYPK4dgS1qbDPIbm6pWK88IpsFf/1W9e1ZQjS8U5znuY
Hfewiw/J9YVyji5VEFb2Km/+hsE//vGP6cupHkfoyEzzvK+MDVTFjj4kvjje
m6uxW8+tvdk65+93wlWfvOOhZwGRmZ5fs0ZxkMmExz96y+f+DqNFC608Suny
8Z7Cn1lGgzXutOZa5F4XhvDynI1W+/Qt92aXcV27cJBsBpQKlEN1XRMNHg3o
FmwKu1WEGlQ2KiocT7GOEv3Jepv/jYH0EOZ687PP/wPDbx3OSV3J2guZ8DsK
2cjrb2HMSf/6h/9LKVRVySNMJQPepguRj77zsZzx3YR7P1/zU2udesip1xtW
NsgeCfjGQmZm4Zo2ISMCxr/M3HDuux596vkQGIcUrdBGjAuHwWuP/81W7zDD
tQEHIAZe19CzZw3VZVN7sgaj9jimZVNh/OWBDbbboNv3Kjf907V3WHvFV155
JX00qTDOcT3nPpiHBWAx7AlHnnPLp2+57xnqFX7Y1m/mbLXqDpddfw/5Qr5T
jWsZIVB2NtflrNEU29EQt8wMBmmfADqhxQAZtvBwjmqwavCfZ20xb+6v/uHX
5KS8Za5QFgYIIFEUW0EvV/y51TjiJLfYblXZVnRRy9PFiMLCCJihyqwYeOgd
276jXvhza31p7dMOPPFy+n6JUZPLcFTOUvkFgGlS46oTiL+0ZOn3k+2iHci8
LHlGbI4LzVOQ3Q3Y9fKcrVd73/0/eMqcnGoaNHE6AZfxZNBVmxh7QgjkYQd/
s/JWq0abPzxjGQU/QwxN5cKXV9loXQykMmEMjIv3Ovyiz9x871M42J8aQlql
YBVCzrBV4AFGfHadjdcZCpBTeBtrGDo310fKcAtOWXwXCGjfc678PuStGW5s
QWsdcezZKXJF8jrV5mdCNlvWvlg+H6qxz9mYP1AOgGl1kIXk6mmVcvYYstvX
tTjStmOrz2ylsqvUB3b/E69FCSR1+DcON2KHq4nEsloJfqPgRC9Jk34RLfTX
c7debfeFV97uOK3QmbVUYAPJijHSONaYUPjiWgv3PWqRtVTVMkcKr1POYHhG
f0AwYxPliEbqI6IjCq/ZfZvOeWSyZZR4j0cWvY2JdcY498rKG65aba/14mrb
rbH32Zd+j3LR4n/Oe0k5n4eevOjOE75z9s3oIfbcWp9Yu0+wFalLSGHKiFVY
DyGsFfk+XggD1WUx1kmHn7Xs+TU+tibH+s3sfeYev+CEC9ObKxe5SP5gDO+8
UQEe8vmgXQpNpNhRbr8wiJFA4IAuyn8Syq3Go29xROJ6XlOHBjZIx7MPPOX6
I0644HbibTkg/ZqsrD8HQDput2I54rO//d3r2HmsmWhav5+626y/eezxH1I7
FeJgGBoemxOPEPrVmXuutMU1N95uhanj9ELRDMtHEwfwKhz9z9f8+Fp5e8MW
3ER2lCxw+5PEN15XzHGN28gxnq1pTYvmjfxybAXn7HP4OUk7ec7g7WoFJshb
OP+bx1724mpbrhGhrNiYrYdApaUpu3vKoaffuOhr31n06gqfmifDvDRvv1Ww
/vSSJLTS9lIVpz/shPNvfGGNrdekAYHYgc+ZxrVRenWYRWqPPfrcW0Fztoga
MpmR0Wxpb8eLr0g3C4mvSGlyS/Y88nIUlsCiV3/xpV/jG5EO+OR999z/EDVj
p+uvXEQveOzF+xx3Nf7OaWXWX66y36pHHfHdxemTlQr+WgM6kx7kS7PvIXxO
6NdslL5eRl1DXz97/+OXvDZzk7l9Zgf4ngJj4zseflZ3IOUrMO4Jh592zc/X
2GatvmjZx+dl19VRBxqXPfCrud+YB1inNyyuzS+XpsV7Hn7hS6tuuzqn/PXK
R6y8wQMPPGAITeNygSW2Y9KmRUMZEzaLX5v5mTnhMPO8BKcmhqfQYiFa+N3L
sw9f+dyvLzgt7fgT+TteRjE1Er+xbIgi+91vZy5Y8cSDjjk3fSGhfjidMw86
9Ya7Pr/fBdfsfOD5EIrku79Z6bDZF+5x4ClwHVvin1vk7bfOuOwelAn89E13
/sBO9btpB66w2zkXXWk5Pu2wPFRGU8oqzaG0CRnHveb5i8Ze5y657bezPitU
O4hPvnDJlUtBXxDNXKxUVp7/4i9/BY3QHr1b5IkZjnVtzMQEKzi6c7MoI30e
PnTvQ0/+YvUvrGHm6vx2xkkzPnjbbbeRqdJuSUXlM/nT9X7y3AuvzN5yVbtM
+6lkrLYZhZnKCo9tzS7v9ZGjJ+94waJcdTCzujYuP6hggiTxg0664EaAgu//
y9QTpun4mcMOIGvpkU/teuLvp222Mvn6a9NPnLHvd8+6mOcnr0LP/P4We373
+dW3XzMcMqNLsm9amx3Qp4Js67czTpxx9IJjzyLfkMMDnzzkxPOW4nLAVzHF
DZ/f7XCopljN/EZs8qs5uag+vEGt87PnX3R0YgEenG8wxyC+2ev0cy9hCByt
WVs0L8tNM7/cB3Bp+VkhwwEARd/bpOipYBO3fX6f0wGVaOUy5LseefwZ0EkN
kQt32//4JMpXL+/hitK4ROEYNGjgHHdedM3d+IZL/f3k46YuOOrk8+382Pov
5m+3xvLmXy6ITikaIkAEO8T/4MQG/jB6zJSz9j745KRebzXBNch45MiN7wnX
B2Y9v8b2ay7v2Cc673LfW60QDM7mpVU+Pz+E0V963lMLXDBn43sTPBv3zZ94
Nst9b9M/jST/YvNOdLz/j85mue8FZzPvpZdeem6tXZt5wlYTfG+i4206wffm
/4Xnneh4f+l5T53ge/9LN/+/opv/PZv/PZv/PZtXXumpT07wbHDtOP7Ao85I
t7H/PZv/2byiQ0PnhSsCuun/QIduvzTv4Hm7nbvoWpSbU5P755rXgvff8dDD
jyxvzXjvbx599NHlnZF7rwes3HsTnXei4/2l5z0p/f8gwxhxmwR8N7/xjofx
3VDwSXBcLstUpqGJLReVSG3WkiNaC/Z/pve3Bx935pL07gTmsEe33PfmT/C9
ic470fH+0vOeIEcsXvZc7qLAmd+HPhZ7htLNKXITMFEZV2eMP5CH10rW+HDz
3p9vfPPt98EQhJv06o2vDvx6zp6raE7yZs3vudTpHuO595p3+OeN9ye+B3Mp
3+VJuveOy+8B2+HuzUBO/98CQY73CvnPg8P80Zs3f3O374/uNGq/azvPQ++2
hXzw+SA/x/v4kj6F1Ro/GYAZ+9gjTs+VGJqH9r7v1Sf4XvNO/7zxJvpeJuPk
R4Zdle9HMSbH5iFBnYCYOddBkIRywrGfXsME5xtENjm/On5SNGwrT8pKAfaQ
o+gujpHTDfO3QEFd6iqN3yIGYq1bvvCNMxknsOnyp7GAX+57zVv/88aT9+5/
1/bv7vleRvDUSwcAAeOrQ77c+0LNoCm0CUpAzKActMGW+OE4Ezx1xDwj9tks
dSQ5Q82QYNWwlmLCG3ZasPjcb52UGMjmjUO0OATrR8q5k2unD+c1ft7G55AI
+EqDbT7V+P6AW/HqE3yvGQJ/3njUo8aEJ5p94V2egnsvOwVShDf2x7q3HD/6
JJ9/cj8iNgE+VHya9KDWBJcXHH4cNf1qH0Kl8ht5qcBPzAfPCR11cG98unGY
thumm+uvkXNY1zEd8b2Wkrxn/UW06LcbT3AbE93umn/h8YSvM6vung13/GQJ
VvavZqQYIlLgJzHbsaecJvwuY8ag7cqF/7IsZGuCK/3ZeORAoU+U2vTfPN93
wyf2yD7bVsHjugcIkGSzxmHabphurhnc1y6KoB7wystfSi5sU5BDu7F/coLb
mOh21/wLjyfIQe3skm2/uTPebwevmugBSELD/ltM8uZ00ec5gGXAlhWwDcq1
11FrgisPkGWPk885udt3XfXNo33n7nDwDmbsFB6gRfO6pfhKUg42neBYkkdM
UEAkoZO1KfQcjdGyY0ABGSi6iCLNJya4hIlue82/8HiiOIDeyCYOOeSEo/BN
OXrz/twAc+QaQCLjnNHnR+fPGbKQdPqRCS41wBJXzVe/WdaH3Mv0hoztekRu
MsFvTfkYck9NRpnXOEbLjgFW1gqw4uO9l3D4gccfYk9xuUtdc4LvyXj7H3fy
WT3fW9WLaf58bsmSy/FdO/hkTuEJvH0JYrQ1wXzsh0vsi8Y4Ko/BYKXExUcn
uLUAOxCSgtAU+w3GwFjpDRmbTYgTAm88wW+lxIMt2qkpCnMbx2jZMVLFvkw7
N+y8YPHnbrr7KXyObX+i9yoW7/z1w+yBLne1a07wPVFNsaOrdtznOLzLk3Lv
5StWCmGBNk4ESTm4Mkf4XcaS1CkwFT4fYztX7v6dy8Fxk0kvKWYTXOuR5fTq
vqTL/TbAFudylG9cYBPHlgjARMyfnOC3ovdaSWWbb81pHKZjh0mF3Me0e4B5
i2X3PA12tHHvFdy72ZcPTRrNRHe55gTfE0wBh7t090POx7tqJxsfxjfAtGSj
aiS1nfP0+LZtuxHgS1NMYvnrPKIILHJwpl4t91uLJQIXZ0+Tuqi2oSGLYTDJ
PRklPjnBb00CptZTmdP47bD7tpsLcwCbbAIz+VnT3Ldts9fJqWLBRPe31gTf
E20Ua8CZgU/im3bwqqAIlq8mKEERCu108Yy+NaGX3DJ1k74o3j1aak6l0fYm
KYh/2gS/DVAEai3U2/S2lvL+Y9+P3rzlm1NW4tTCZDXn+RMT/Fbye1yj05Un
+G1/gRVRRnN/N24co40xfvzGLda7YaeDLsKpJKVtjQnOufYE35Pq4lQdgC78
hnB372ecGUnlpySr/dqvHHoJBQkzgDlG8xDtOmXdVjFa7rIPLxqL1jyZPsFv
fz4edWznwfKNuSlN89wsycuPT/DbkcKxtZLX7Al+K7kJNrmaKBt8O4hvb/3I
VzYiOTMVf/UJTrf2BN/LTCZlZNmp+N1A8ElWbTs0QWI3+IzG416fzi10qzU6
hya40sMCZWXGBL8NEAU9k9A7yX9j1GEZG2Z9rRG80QS/NaW2NOF39gS/HSww
0or/n+j9LW47luc7A/RqE5x37Qm+l8dLZgNaoIk1/Lac/bgbUcdWI9DiP2P/
5rfRp3OLeFMf1tAEl3tIOQq9w64wwW8DtHGudvnGlUyVUjCukP1HJ/jtaBGj
alRdaYLfCjxcedKP9/52kxuW3WrRBvcQ1a9Xm+C8a0/wPUEbwN9eiNOlniH7
A8F3piU20M0WE1junKL5uTrdnQl+u8CrGIlnz5rgtxZvsrY3aH0BVobJkMxK
SeLvo70/mVwkptoFVur9ieg8qk4X5Ag/mfvrf3y15dVHc4aNs6xTOMOdH9hp
w+gVohW0DtzDDPp1Usexsb82Db9qEQB1X+6mT0z7T201MNL7kwX+QExpwMZP
nh933O3PXHHdFf8y9Zyp6cXB6wb3Pu6c45SUbZfwj/R4f2qw4RV7vC9Sx1UH
k1OO3k+dWrPx5MYvH7yIji8czfx4ljN3P+QAaZwwCAa3/3Gnn1WPmj+dBJGJ
TSJ3d9kOBy4ireOv0WIEL2wpbOZbhntNIiEVORnt8ZYcJut7JOY2u8f7L4w/
SRzwHR/Y9QPdviv7Hnnbrm9LrX9FlrMMQ2IOH+7x/rRAgM3q8f5o0T3ox+nL
JRFHovdxknQ+XvPVwy99+5M/+VU/0Eu0u/ob5JgCsTPBpl6Rn7vxzifqYfMN
JbVO3+XSmx5hRV08jVYh9Onqhw322CRNNrbu3WiP96X8kC2khH+v3OMTe54i
qPB8x3MuOAemC8EijPTh4K+m6YdW4FwxeG9SeU+NmZnuht173eyN44kqNkif
Ovsu64+JeE1mL5rQ7Xv505ZFLJMT7mYXCrNdKLR07DiYVO9NCt47qNCACsh5
wXu/MGfwoUKPWmdiy4IG2tB97QCVNg244VplDYBOKh4v39Ifk0wzGdEH2CPV
fusasMm3WmUOvx3v38vyE8/+j9nYh4umoZbNLYNNrB0wgk8FC5E2WdZ9gH+v
Vbgk2TWHdOqAPHMX1bUCLD2+7FfL46T99Ju9fSQAwJYBg5IJ3OVu0wDwgrM4
SO4NCxUqwPBWQUxUt5Zy+7WDSeSZq3N2XHlWWljh2YDZ2d/ml9btPpNLh+Jn
ukfrZFraJHhPSMe2QySJdbqvvz6/+0JmPqbRmvaH+FSABQPBHJIeSastfrTz
61Dwvog2MA4LwjTHpGBts4I9zAjGnargF8G3fvfxxzFSFhAB/s4LZtvNQzYd
1VvKbNO6r+XANdsgNFcsHti0e801r3WnTcO8vGHRgpOgKsa3x7vrr7+wu/32
9oRcuSg5ob26J574Qnf+/LS2/jKe2nw/FTAbeW929+WXX+92Ott3Fy5k7jQJ
kj8Ja4aCNa1U5qrU3wGlIwNTt84VyreKBTOCNU0NCH12Wcuy7kYbpbOTOdyl
YF4w71f9+SZMydVxB67pbropxkxnN/7cWpgLz3h2KxRiUKrMkrK1QfeBB9Ln
Yz8Al6mPrJZ86a2MleE1rtDUJdEWzkKyrt+lFJdc0D34YM4EgJlQjtp4buug
spZSvVA5UmtB4+cqQ8qRtp7prruuXfzMQErMiBc6pcykV3ypWm4XpQcsIHSW
7lXiVexaVqHyK59xG7jFofWsbRvxfNZtDAUctOdNnKU1JOFiVmTbW3YvvZTj
EpZcstuiVCvBvHiPc1Sn72RdPv1hFzEw9gN0tUMkcpFaAlbu3Lb9ARdSvppG
svGSVyxMFNj3rdMvu7uvP2kiA8oOy/m3oy2QjJ0Ek4q04ZrFBOBa+cgltV4j
sSEyKyZ6GsBbfQO6FryW+yYM2BA26Z8xiGO16yFK/LDGiH6M2NfCegMWQGJN
y89m1UG+Cu6DYStW4KCTT20UK8Zrd3bf/36Si92J227GihGHKWM/+Bbfvb97
551YJaEsnnZeHoHDCDLAirGMxAfbvVcuBeroLyIlsqxYlsmDTRuYHpyylPRs
WrNcHJ0yKE0SuEbMwjUqq2gHRLRq79XtWMSrhrBlhWoIq8KrJ3b32gtgcKzj
cYMof525keKd/Ajq4J9cNYai+U3sJ0mtyYUmR8GkVCExn+G/mBWzA05pJtN0
p7LOj9iVkOFg8/idAMAhm1g9Za1ZBxn57CO3PWjbwvKoMDQIAMvAcjJ6tVUt
HvtRNXngz9hV4kOmC8NIDdWmvUwrB5myi/Bb1iFGsAA7RNNeTAVSVWgzoY9i
ncvbA3gJJBgNu06Sz/3TdpMj3Xx8XJZko1iGapljP0RTamdEVWibDk1zi66k
9aqW1a+IKriA0XSBszxxJLa1Yd4IGPoD3Q024EosQIh2mGk4YNgia8DjAfo0
ZX+RK4QHN6fho1bFE18Spnnlv1Za6an73r8JC07Z48UTLAPviQ3eidP+P203
oiU596fwdSr3G3WXLeu5G+GHTjmYUnbzcnf2bLCJ5e1mpLARmrPkvEYu7W65
pTIqsxsgGHeDpbQKB1EhNvdP3I0gqu0aLTJ2aL/ukUcCs5IKVSNqhG6PjUdW
jEGaIEQAocRa5TsQBNYptwMW/06/5cUOYSv4jCS8S/eMM/R8+wtdKF3Jobpe
DRm6Q46+ZHoFTX85SG7bFp5Wg3ZG3w5B8osf/9UGxEkeOLhWBKW5ATX0x9t0
aBxtc1bA8fLWh87o7rJL4zZF/XGCdkpZK94DSXFOuyVqfU4PmtV7/cACyjt3
mZ07gbV+OX+H25pqgVnZH6ICUWMoxuuznaszNg5hfMXGsSf83e6Vmm6COb3l
onyZKu6TgMF2r4RRkiBjv8OYQMGE8xoOtp+PYYiCg9vH8rqibXBZFLJpqwPB
EeQL7BCmxbdP/nKD96WKrHInx7cci+MnfiL3Tmdo7Y+3SNAQnestzgowW7CR
U4ZbHCyYrfJ1NGD2U/wW06mNPXFblLHIU9Jvhk+qySLLsCHcQBu3KGN95g9X
X7fw4OPyd/Mmup9+bGebMrMaiXIXryG8aXGXvye8Gyy0qLT+sMHnrLF2iP/A
Pd6EIJVJQ/lS1aKSAwkJoMwqzFHtre9Nz4ZJsTh6ezsnfBIl96dh2zx2fKMq
vKzcNjAWU1kL5wRYY6VYcR5mwBKMDD1ETMcPpln7P372M7UiSSQTj+pXv119
HV4+QPjCS7HZrtw+gehYHVZp6TpqYkwIYKV/FgSmB5grPfnw9x4QyB/mV6nX
YmoALlIXpnlAYDUYnYBol0lpAQO6Rl3PV/T8Mdy7XM4In7v/5YMfpR3nz9gX
LwxblX1pzObf5dVYuiam4/ckhWQ1QGc8w9/7HhlHIW0gFb9Vlic91WitgjJh
jXnkLaLm0jOYbtqZTNpUa/ADQCUilmGpvdmbKpeOKU0LLPXnSYMv/Nm+jpXR
XkiLCjgN/taf2F2Lj2i5E+IAVt70x09szEUSO4U4MAAYDkHDSRMYhTicV0Wy
JLAgMpo/dd9CF8xqzdS23H0P2VsbkadLLXS0yGdVGTNVdAABLKmGAHmjKMWW
OlTnbgUkLA1iLQSA8mTf6TvBcZLIf/xnexAIumq8S6MT997lVoVfqxXmHYVi
+S7+azUoLoc0QuliyUQs6KBEXYIgHHVskBuWJEQNIOmrQiKMQEi8NOtH3nUj
QwJleM0FhcmQFFkZdQtD0OizWc1DHtndbz9sDr9hc8KZkwYor6p2LOH7Fx12
1CVvfvVZy/U71CkAP/IdHjGOVmjC+c/a/7ONTi2wU4NHNsWNuiG72STAkx2H
HeJSc3eAbJ+blFZujCfABNAEMaRGfMF75wWYM35JwBbssFbz//M/2oNb/u7K
ayQIPNwGVe8mJHeBte8aPw6XTUWxRu6+HxjszoKkBWTgQWKrYmvWC57BZNvo
Q0wlLd5GsHRMIZ9T/cyEGEBOqkNjtVBGsOJkqEmfD1qtE8jODlNiGIn6NFME
YCSMKgshZth9OOvE8MT3MbVQX61m4LQAyfrk5D7onOuiT+DPeDVkskI+zu27
SuFqXdHCiVz//p+Dg4c/evzZEkWRloMx6+VsWQ5S84QySxqimR5DjsObR8fh
Tbpe4uSsnRq4mHB4buEI2gQuWytUseC1FvNgPnyHNSRdLtlIJWqIe6F0yFoK
PhkI+M7HgyMWMQKZzsEIbMyYBpT0EheHOjyxFU8vEkgN+tKcBOgDXHbEbJKn
1PtUeYYIVOJDO/hEah8QcfnJv/33UOfaS3c/LME8o0MbbI16pS5DcIEZekm5
TA1l+sG++gYcAjw2DgHa/DsPP9GrCTDDoOlKkhGszVugBSHtKu6CLfGT1qmp
5x7phwyhtmQpCgyP2tHW3OC8hnus0ThI1Vs8rbAvvg+gTlHklTgP6+rTBQwG
XEw8OTxNLuCyq/Y+EgvNEZ0t3mYqenahycKYeUXhEVpjeb5lt+kndCc436Na
GvK9RVRYyBghrdEb0gGFTIoH1wlgns+tU3uAiaQE17zgeIfjBYkqFGi8A9bl
R0buuKu0vqCCztmNT1aDmXKESpscE7Pv89MzL0zIsW5+nxdsS2kuxDU5xUTz
oSE+/Tw27pySbQDcj2e0hqfcpNj8fX6Gu5cirjAmF70pIAJPw3uJqKKcqRwB
0Kodsf3pEjRgXTSkJ6erDQfLKd4vWRjwL9mE8NuUQtlqhxLFErMBkGnWIR0l
K1ItzLHpH69byu626waD53r84+JSU6xjP8BvgyUyfxtwnj3B32mvvdbddAyz
02+zy4rVgSTH4Dxh9KGMfYfvM6EHPGVW47et9ccI9b3fv+/f2H1PTqfuA9xv
bKmdMUay5RjzSb9JBEsKeeHQwxNcaoQd0kkN4186dos8ca+9uuuO3RFI3hlB
Oy68aewJXsGr+ASfis/KWWqjFbxRVjpGbu+/886uwU+f+5Era7V2GbuaXTPG
JxeMUfLsMRlyjznb9ws3EKPH9mPqk21qxB5TEine2lS4GN7HcoaCFcsFFn9+
bYxz4ecr513yy8SAPhaQhlxJFmZHS1olz8exwpnxEuQ4nMQUuyuO/IFi2Ou+
Piagjzz0+OeSoSKfSdspRl00cD+yi6SeMfAMHLnffnodoULkVI5OvKRMcS38
84UxHQ3TbrRsjFnlEVyaRj6iQRzLC1mdSz8vz57dxfHebY4qqw2d2V4LSEcG
csDn+K+J7dJ45RzD3D4jSwe31r5+AN4YvfFREgKS/LZpEVzpLC/c8+AHdlx4
8e+eGROnWKIkirmIj2xpGXotCy49VsyHeROWTQ2+kz5z0Trx/bIx5QJnKszC
uQ5WKYAEKYEuAMQ/TJrybxh+jWA20YnwOijxzuyS6W4wpt2SBtz7nYmtTuKg
NyjRbQkD+oECfQMEW3ppw8L1VBB+Nq8KR4khthR9CaP3BejA4wFMCW/+F7gs
TNnWW2OnUywefIGUx8+ASYBjq7AU9eZnMHf2E4smVofN/W7K1P/+z1b7v/js
owFfyITamZ+VhO5eY5ol2c7L2Q6dNhnpIjPLgnFKCyTGkJ9h4TjBwYBriPp2
/cYbp8Ul0Jvqp6p80WCd74+ZDQjJO/VpeGJLkcDyvUR9ToJnAJDKvEUF0QcK
oDS6VIwbZB3pt7vGnXwLU/PvWHZ/Zlo4TWVacvq2oJpM2QGqJoYoTI5ngWdA
vsHCrTSYNfPVFuQV8Bi/YRUy86Xb7fjPOrNE4DuJPOLZJWbBeeTPWxgRi8JL
oKnJgZyVAEOuHcITT3ASfbIKlYjmVJ2cz6c6AuLidFgF4YBV/XFw6L8xGpYh
yJLM5bfd+2sQBmMT8AleIV/DJxC2swvhaNtw2Xu96mjRkmyAgwygnOQjX31f
kacan56rVw9jH3wPwyemO/bvXbKhNmFsxFDAESA08T05AlaNf2OjpuST5pGJ
KWN9uT7hgEkYr8ulGLtpdup3sFGgFZgkP8F/fz91xh8Ax4+WWVVxyCAdJR3Y
U+AQhKtKnUkBY5rhVw/ajFY/GCwhA2MQpJpwcOw3IAU5gRzZrR/b+Hd6ZPmy
NMjrG5ABr5LfCzEQ8jglbCzyQQorWjcboxvXnVNNhgCCCMJYuxygj5fPeDQE
hMd75CsUk1ghaS5xS27wznE4NYnw4a6wTGwYawEN4mjA+zEHgGBSDjQBPg81
mQz6UnHWYGiQL/ULQANHgOnAfROJDwTQy2xgckfsC5ieYMEcWNq2l13zmzO+
efjjz4jlACBM2sGHAu0gn8YwyAfvExMxLkAIssMbSQsQsJEky/fpHpel3XC9
U2IJRsJOE9D7kwRo4x1eDzR/IJPWFNUehLnhd9467t5468eAidhVvcvM7LX4
wTViaeE0eD1xsMTOBhJf1P1h7Hxp0f1FVsFMwcPUcZp2mmCXdzqAdziXmvxE
HERn2NefGGGr3l32Fvg0sqx6TbVAwhMuDyiG6bktq3IBOkC9vtsM9ov/d1qO
ydWfxMGZmTO2FV5ReO1wYFux8EwNaMqX6vaJOQbEkQHHBcgICkG3IcxDiYcf
FwooxuX1iwVMwUiPAtb6+ylT/8j55EQSRXC5Rp9R/iq2RHu/oa5MV/F+xUNe
ppWbnVO/ZozfOrGFMRn2wsJTp26h2JdpYxJAgu/JgMhHyZ1xdFTtmracWfMw
TgYpFIAq1T4sk/9OJCing6UQ2cPLpsmH0hOSPGPKF7d1qTSHdWGFFtkx16o9
Dlc+xWt4naeEYTDcBuVAVUHdopAdgINPADTicYKO+BjslFwVVp1I+HvjaKX1
/hyTp3QimhZQmyvDf3HGGLof84ua7hKB3pOHo7AieYgDd0FJUuriOkehQQWO
PVmtW1m6lVN9Ivzyq0Nk1o+95yM/A4woNZNW8MGyQNWFO+N5gxKFlETmKrEy
8hnMM1xYl9rKZvj9EjHy6oaJ2lSHiJP4rw6TSWIqYEGUJ+iwKhpKuFPiq9up
JAjU1bUS7mc8H01MeewZEY7LxVowN9eaMESM1c6jlemgRXnErbYLQPEvAi8x
U0nC49IJyOoT4ipG7nt7ntlFw+eLWRtDkrfiB3gvZDTEaSnaic9JlozH9wEi
tpEJbQsZ3YJwDtJYWrMxSSmXeHd+hvEqmdDa0mRZYfxScrMssRVIadHGeCEw
XKOD7ZF3733mRT9Nnh5BCEz/wQJF1ZnFaEZ1nVjf9gDEyJwRoyV0iLwmM8qG
K0mQpsA4mALMxxh8SPmKqfOKPAaJpwu6CBRQxx5nLnyFVJPkvMH8pEHLtYgV
09NvAmCMhW/N1VGxl1Qor1KuJUI1FQPV1TIp2K0kdKl52BA43ls1OL52Yfr8
hHZFAEos/i4hZZuCsDjxrFtlAGEYrJiGJA5Lgkrkb5FfdHm7Ykuz5GJkV8Sw
BGhTj03dtO8ePx51Qo6XiLSbr/oUREmvbAcsZiXPGPiTWFxmY+3rNvnUf1/7
hd0fuf9d7/4P6q7hvaBTTseCG+8bAWfRnqADiIfLSWhOcL4ftFUL7mZPQrqQ
5dUN4fyBdpSZ+LeG6M3PY2I1r8xb4x+NitjGSWFankDalZGvKr7yVX6EpASB
AajyImgvmVinoLILO8r2ncl2G9ZOgecYElNYTTsh3mrxgYN8+AzIiN/tdkDx
ElLtk1i2L9RP5CBIMAY4MDly2qJF5szjBmmusxp9YjpZvcPWdKumxpMWdMxK
vWqvWCrph0OrsOnHJtsBTEWLJ0vHvjGIRVzsAwsh0SZtLVLbs5zt8IKMIyYC
W2wdKOwFvybmaJzEKasYv0kUAzkcwEgjPZeWjmfsrQO/e8GjXz/13F+nsfJR
t/c94eQ/LG9LRKG0Jbk4OSdBxtpBqt6ANddTjqpNJOaWEkaNBkSQr7RtDodp
KROo1TtrrJQ7rTWopG/I+1iGoolUknApzV/MY1BbxdxYZzIUCjgAGpwUxV8S
EjePw9hRgJ5sEXNiLDzD9/iORJwoUuSjKy2Z2e4k7sfeizEu0BZHinWAsdBZ
0ipKgRJgRtxRatdkAhwaSzlz30N+BG5PIqUVBcOq/fS9wTHJ0WFqWgk0UUaI
2mgNbXsF0WMSjHaG5OyfHqUo57Fxq0oNgpWvD4/8B9fsrBgZtKPHfvuwf6A6
YPdOdxaZXOYAwd5FEwo8lCNcI9ECe8Lx4HtapkAJMiz1cTOEL0iXp5pKzOdW
gD14BkqwWhKogPwb4EkUJa4ku008oXuN3m05FSq0ZEVp128umKT53DlHcdRp
UrI7LEEJQqRm4j+ybSyNy+67cRzBqNIG0IBJSDcSSheLuPhzmkaEp6utmW1P
6TrOmxMOIbEtuUdYJCTdqJeivygFGseSr6fTaLDAD7aM/9I4Tn/Eqbvt9l9k
eQQr3sH47y0QrRz0g9TucMCEBD5NUOhPCxsgKIyS6VViqS4AeqY044ED+gxw
NzegWz76sX/HK1hhQn0J+zzq6LPv/Ye58/7T7lRxUcYhl+QNiztNhyzk4pKP
5FZOhRPj4t8JX+VkKJSBTPg776uJXjqFS2o2hJQ/4InSc0hQylJx+NwClsjt
Jzknzm2ABVvA1DyB5FrOq8YqLS5iCJpNFa3xIxFB9Aom7SGXRhjEe7QgkWSw
LNk8N4tpaJbAihKAxlNMu45r+H+7uxIoO4sq3fbyekmnu9PZOklnJRshG5CE
hCUksiouURCDCBNEHRCFKHgMOrI4YhhccENkUEFFcADZhMmoGUFQ41ERBBFQ
BAUhExdwQRG3N31rufd+//vqJTPnjJ4zh5Mmqa7lfnerW7fqrwrL3NSXtJX+
fApVo/wUIeWzEmGOSGaz0Y4k6qZUPpmff5cdk89ohT1SMj0MmTX6Xdwgz9St
pCDvW7L3r3wMlENfqXcgiTVGmcz8Yi/7oDSh5FVXEHMyGNi/nmCgcwgosgny
TIyUsh/PW7Q9t8mGGuqkj2bzMbLl3/r2XzJDFGXqR8hkCINpp/Q9LEbTnmZW
iizE1F1unsMC6VaGDGrZSVxYPFfa71PXYvBZdbO7zCzIk0729MHdpklF2uRA
XiDlOS7PnynSy6TleDkgTaer4MREvFymQ9yW35mL2/oRbp5Os5VBAsqbRlwk
huSEtJffC1lJ1fLxCPmVR5xX+1PQdsORp7SXkbdMnG6ETeQwxSW9YIcEklFA
8J/2G/MiIahESl2IHQm4n02a+uufjZ/wl0rqIkTPwSDCZlY8ARxmYd0jcr0F
h5PL89pHJMQO/MdleZ9U9xl44aToceb49/c5+O48TNZ1GSayruazRx5fBZ7I
UjhXgeeNAdx8tPfRgkG6yJhEKNJdNsqc/szTiLcGAJsMX88KJaDBO0Yp1vz+
YTZCYcz0xqZZ/rlpWHOk8hyBhVOLkRL4sCZ+G9WdlxO5mfBM1C1PrPEQRmyf
PV6D8qeb07KkRSzubIMouw7hjtHqQYPoaNvzyaWcQ3TRsOZY2ghP070seXqX
4R4bnvqXrHN+ThX5HGieoPIhQ4+IV8PQkRJhgDicHKnkmYEt0iMV3TlJIN38
we3XZ5UNwc6wGlLsqSdzLiceS7S7NyP0yGm6IUf0wjvSTISP0kUo7ExunJd7
8jybD4vI/2XUrOV502CWjehjJhlNFFXUJ48onJxrROvnOKeizPKR0hwx5oAn
H5RoVLaunCzN/iFnQaWpNAkJ0nCjbtpYzblDEWaOw+I5ycrxmzabFHUTOUk3
05Vnr0dn7Pb7p3tH/yUrSvADawyvnvGOgtPd/7wMy1GycFsPEbEPJyabgqp/
GSk5bOutT2eBS3uRmIhlmJhJ2n/KQVSGIF2FUy3BB7VlTxZn7dgN7NX2o67k
dEf+t3QnlAhHbQNA34wKGhuZ2e73hMKmmy1T9ZhTOs/r+SbVXVYUZTcbJ9Kw
BDgt8l7w5UDIb3JKX/loVMu/NyhaRzXOC/VmGWf0PG5MnOh+rD+tk4+hk+eg
OqsC+e7ixX99fMacX9gHFBVBRgnoakv6F4XPnseOnKT7CjU8G/nXy2645ReZ
kdNMNLoqTFsI2eKzHPLyJn0kBKnwSE5ndmFVhfBbPOTivK7M3jyvCSwRaTjm
OtI23X6eu89pvLggjCsPOGc329y7khk/j6jlyd9rgFjcFxqnMr9mECakXuFa
5Rigwd6x8C0lpuAIeswXdArGvPWV3fzVxxz3m+CID1K5pQykj8DV6NkdMikE
ykYitOezjsIadh16kjMjSDgy1uDqd4KRqprffM+jCTNTtEMu39XcW/aSQV7z
zCvnBbxocPCA8826NF55Yxw+9+VnDAHeKMO2bNxBiecieWFBtyqWZb4FQ03n
U+F6sCQ9f5w8H83SDxSea2pX/Twy72Hk5XVQ3W6iJekgrtAjbHpqzOCfPvOq
k386nRhPus7eb63rabEkPIhOxhgpMucIW2SIEHB3EaNOt3r43Sbpf74Nm+1W
5B8QzbFpL3991HJG7EaElicG4cAXG4Ulmqhef555Jr36OgkLjlG5++71/sSk
7bAGXWv1dEaeRgSWymAFkMrgPYipNobu300jc+XpsQw+3wmUL3MMeLMRpxcE
HY7TmN2RGvzDc8mkMJWYXyKJfNOE3xlOIwo21UjX086n2ySGF9Avd3DeEivB
zcqHEV6753R0Qb5WIU4rk8lggxlNNe3JR7coK96EXiZmM6VshYOzKVaCjzkO
Iz54KvGYa5rDDpfmO2DEAKns2LgwRnSVDd8BBjz7OGxnmjz1pMlhxHmkMSCn
emDZpOB6l9QW0sXsFkdWz92HrfS90YSr68cAZpUD9lbTHr2f9VCib0zJ15S1
jBEMe0fDxAhTPZh9p5qN6OmEjdg2ji1l+zpgbzP0en7pUHNG+mwF0xTL3iQ5
sfvWYXO3ib6V2moWcaPZDT7osJ+D83ZzPOozDynzCwxkddm4yFeDVCag5Lta
7zSjGd9z2N8BOwtdS5BJAgaTCxt0tSmqvjPGvMEw8TipHlzEMUysd5gw+VTT
Lf3qJIBZ7YCdbVxXsR5S5jqEUavLXGdMIaERSpupnXMZuq15asmyDnTAzjEr
0koHG0f0y//KG8jBV60mdmIpHmbsDb9lDICyN5jEdAESN6EdiHPROQZVOdjQ
69Wlw2acmgM6gKhiE0lAsMDSDVNMEpqqGkYmB1oSMDgOEcCsdcDeYZ3p1TwH
l4kDQg4gNjHFuKn6P0xszIHQWW7YbFudFhv3FBOGbmO7XbT493eacugVMgcR
Dk8hnDuA2BO79aOJdMB5DBMvO4VoyilGi240uj2Q+PfzjMMawT7XuKnhulnC
AcSK3L6IhoGJTAjIp5RZBjJ22We13lOQ0tinlB3i4LwLrcNdQYJf0jqFUf+z
P7EsdptEAgYh0JSyTJjcgQGvQ90yyzrUAdtsIFSYbi2rNyczhdm/bFkQFrGy
yYQBU8qMgrKTjcm6Yoq5IwfsfKtUuficqhhMj/uVOQwx4GSinlOIW2qiniDZ
k6w/zV4GMM9zwC6wzvQih7UExGSTrE6P+5UZAIS4jfrK9fcsLY1jTCH+8STT
KBtHyp7vgL3bOKc5VZdLr95vDiD2LasO+D32EGsTycIYDqyuFk6yehroBTBH
OGDvQfTBw6wxUevHKEwS+xIbm1yWNqgdU093SFWnZSbZ16KNRSZI2QsdsPei
vgYuryEcZuq0L7GxVA+ixlAWJgimWKkFua4Q58DXopszy3qRg/M+80n4EbQf
HohbVSLJtwCzn1yGDXKfRBT/tcZGtKIXOxAXWkP9ynYNGXSSgdWpcFVZYRjX
mQKCorLbVVI9CIdfY2NgJmadA/YBMzWdztzBNo3QmSWsIibuzvBVNkLRZTQB
wRgKvjCev+KZmJc4bB80NdboPmGDkI/Rt5JY7yRiAqktxE2TiDAYDob3RKuH
yc0jHbAPGfNUjVcTxk8iYFcSQbp6mnltonlMkGCO7CuIE9HMLM15lAP2YeJQ
VpcHgLXcPsTMJpXLIFfoynRF4srUp7syDURPNMajmb3MAbvIGla+YsCLhNgA
K8tmBsHfUBksqOwkM3mdhRlDX2WMx5zM0Q7YxdZQ46b9TYoawjOV2KdsY6B2
Q6Y6OtExglMZePwhYgInmH/DnMx6B+yjZicag+xvhOh+8yRixCvKNgZSHCJM
aQKC1QNb3IBO1XIyxzhgl6AhBq+VgMF05G5mUY+1oqxiQMgQYYB7VFvXJox5
Q8SRbbAyzHu+wgH7VyNOj/vtT1RsiOj/irJ0GolzN8yy47E4qTnYGhFsKFnW
sQ7OpdZQ46b9zD1UnjbDmGZFGTYrg+irSRk79ghlxxvNujwMYI5zwD5uA1RX
GuQrcjT75SXF8jJh6kSunEfVZrI73pwH5mSOd3A+YeqkC6x9idtlfF1G7Imp
5xCxsYn/s7bgUI4z5cXszD84YJfFSuR0BvsCFN398jLXmVPYaT13y0310Vtw
WglYY95zgwN2OYo6WBFbODFClhEpTjRG6eIsEQe7dhOJBU4kbsQxVJfEr0TL
srznqxywT1ql6g4/fEHG1GnvMiFggZUnjj1YmLQnErVjDDjW1Bht7EQH7FM2
qDjMgH6VGafO7BNNspqW39sYoPMOs50mZeS6bVoG9n6slek8G8C82gG7wvRV
Z4KVZUlAuLM34bC7bV+lw4ibSBzFRGICrj+dXI61tpideY0D9plYCaLilQSE
G0ANOwGDmWUisacJZUaRS8HR3U8kjuwY1DLLzvyjA3Yl2kTgyEpiT4y4vcoE
kw9Z0LM5RukSZSJhFAPL3gIKYE5ywK6ySgIkcG8fsx3NBDA12bNsY7Cnbdc4
M6V0EHWPlo22Hi3LMjYnOzifNZJEGQJ/9jHZafzO+LVX2bKYjMGfNUAk70Gh
BrgrvjWACBBe5+BcbaJWlWDLjAlEr/csq0kj6dwBMNiQ8xhvstOF68tDGc/T
nOKwXWMMUIeSsME868ZQ09uTMHRCGS9oo3vFVbWWCWgC8VtHm9pgnuYNDti1
pqi6bFluIDSEn4A+JfxraYk4r1vgNcaXSQd3mOrBxHm0UYDZmVMdnM9hw1Bp
OboW/4wt6NZSYlLjy/oLfn48kWcqg1mY6erLULcsO3OaA3ad8VoqBaKXEwc1
3oSuke7SMnEgiSbKxpjCFB+WxAFY+BIjKlMoDH+qYrveNE63+ZcT38ReQFhS
RsI4Qx7dpWXgbR1ndIV8FErEzOtNDtiN5ut0m38Z8WHs+czFNoAeZ2xCMAML
ejue+F2mt0ei3lqK5nQH7CbjuhrV3iZFDSedEWi4u4QYwTiie0ynxhPDHWfj
aoDGjO9I6w9TNGc4YJ9HgoPS721cr75LBpxbrM4vmQ0kP8eVFRqcJHuQZTwx
w5caBZiiebODczM6v6BwbB3FeLi4rFhwVmGcwmZcZ6SPI3b8ErQnS8y8xcG5
xcjU7M3e1eEB2CJroUFpqgfRAXsWmUkslcFEOM5chq6GExw4V+YOFse/bzER
amo6RXYwH44jLmNR2YpY2U77a1IG+33r0PLNis50wP7D/I8GjC4C10h9nKln
fgQtAvPyhOHHEU+ZymBxP9ZkoudaxxGFTnAa0zFvdXC+YA0rL6WjZxtHXOxC
MmiqBzPoOOIKxpbbguMZSzzvi43dmI75Jwfsi6alupG/p8lO5w43gHrFhcSy
GlwBeMCx+lvnbnQdxZj3IqTPUi9vdyC+ZEg1Dc0WFIybC4nFjCXeaayNofMT
s7axxGWMJUr+IrQiS72c5YBtNS5pKnqplWlwznzXHlVeM3mSi+iIPCuekn1m
9EKDjVZ0toPzZazkYwGIV53pqjvdg8iOybNJGSQ/xxr/dapgZS8wpmDC5VwH
7FbiEhMwWMgzxVpAuD7WXItOo2PLUmRKDu5+0MbQyf0FppSYcHmHA3Yb+rhg
9kvKGg5OeQGxjkEbVMPXJhYDMQO7DyvVg2XvEaYBmHr5ZwfsK6Ziin4JsSI2
6IKqZYGPGyQkDRLnkUiHKcCNplPKEcYeTGW+08G5HbU0DLzYylR2TGF2N0XV
gCbVgwl1sMweUMpBY62un8YSXXheybLe5YB91bipAdIiUyKNxpmGLyiDgEk2
XzlLLIaBhfmJMaDydpdZ1mYH7GvWUMW6iPipQeKTdicOeLBsbcyKgAFjCPOc
yuqK93mmKZiBOd8B+zpWCrOGRXTMO7lLStQBDJYhMtLBoaR65EJttLb0rWVj
3uVfHJxt6CYD0YsIcY4QnePnE+fRRLHAjYwx4iq35aM8x5Ax4qd8PKl5gcP2
DZOxxk3uDj4N0gdVfLsTk2K357jrpTT4ZiJlr0gwlIeiSVmu5T0OzjdNxqpH
KWyARKJTd9XQ+WXiwN4ZuwfLTGH9gZ4fiv2ZSb3XAfuWNdTF1B5EyRk355FB
xxCnxdoysMzgnLQ1XjvU6NP8kDtrG//+bXN4un2fgMEUlQaAdeDcMnHk9gIK
lkl2p+MeYvUw63KhA3YnEWsCBh56gHBuHlGnAXOqOkc3AcHGgACTSdt99Ib5
lw84YN/BSoErCwyERr/Mfc0lNjFQVidwKE1AgGq7emrb7kM4zMR80AG7yxrq
9v0C47qG8GOId5rTnBDd5U5twfcPlO0OJjr2dMJBaGOWifmQAxaffsXt+92J
dAaIPc0p2xhMVgMltfPP4UII4+Su0+VBJne0rA87OPcYZp20dy/zFcx5Ttmy
GK9Bxk3KmLWBkq81o5HyqNRS9hEH7F408TDIfFMiXeuzm8DmlC2LEQzJW/fK
ta5NmC4MECkmYI3ZmYsdsO+ZqHXT3l1ZqiH8gElWZ7R0+w447yZcB6XsL6sd
aEo/Yehaa4vZmY86YPcZ53T7fj4x5zQoxLy7Eb/XhDhWD2JZ9rjEAPGja8wb
YJ7mEgfsfrMddQ/ziP/pN/FrcDWb2FM/scX+soo1tg1uxCmlLo4PRMuyHOel
Ds4D5u10qTWPWIwNNbskCU8IRBlMTkyxmPKuRgMxK/qYA/GgKZb6ene/nk52
/aRsN2JF/X+DMndTA2ZiPu6A/QCVKPi4uehXgsT6CddnlbkObqS/rLzM2sBn
9pmKse/+MSfzCQfsh9ZQd+znEp+UBoUgcxaxhD7iWppYFsxyTdqCG9nftAdz
Mpc7YA9ZJd2sn0t8TZ/5JA1uZxGu95m0NRfNpNNHXAZ7iYTV2980BbOdn3TA
HjY10fz0HGKwfSZ+jfdmEv13DNBVMHsPmfXXV1ZtUM/9Sjb2KQfsEVM7XYzN
NvXUhT4bYEaZEJhuE8GwU9BXlg6oLGNAAtZ45OzTDtiPTdQaNCVgELUzlZhZ
tjEIkPqIPY02E9DlSF+5DEwg3R5IszNXOGw/QZUNDGTxEGPojLL5MAGBIEcT
X9FEQ8FvrTK8mKe50gF71Bile/iziTMabRqqnndGmQFgUqOJ1sa7q2UG7yei
Z7BXmSphduYqB+enxn9NUc8yiBq4JzJhYppeIrPC19FGiK7/m8CG+cXpqkYE
7vNlTH1+1gF73HitFuhmXPUkjJDpRNnYC+CpDGZ1J3ddkTQBC7N6OOZcPHLm
xfaEyVtD/FlWpvdfpFEgyJ1OTG60alcf0dEmggGn5PRW18XuhDMa1TUOznYj
UzfyZxGrNTKnl0kqtGCeZnRZW9n3ho1JmGsdiP8ypHqN0SwygLv+UU/ysktt
R5clwUDAvNdrrkxXVEyKK8ysMQnzOQdshxEshATeziR2ycyBXRLYS5wVk0Qv
8S+pHoRqjqG6VFlhjMJ0zHUO2M9NYTRkchGDLu4ZcVOJJHrLNgG230sky0Aw
sMvQnizReYMD9gsTtYp1BhE/UxN2818TScA01EucZCqDdJ1jlK6Gl6GrMhu7
0QH7JTYMKjVDTZw5AHfzWdWyIHBIJEGg1FuGyBS69LkXWtZNDs6Txn+NkpKc
IOHCBmX3XqV6cLh7lCmW5nJ7jde6aOkl1ssUNQFrTMJ83gF7ygbVpOF0k4TG
7GkACA3YVW1MEqOIUvYSDUhl4NBHGS0ane1lZZiO8df4/9pMUuOlaUSb06AQ
ErKrvVI98loPMqUJCCZFGHdPq4eJTn9t/G9M1JoVSMAg6GOcY9eC5cdhvRqz
dwuZ3Y0iGjCK+Fb3bQomOrc4YL81bupMxa4OZhegs6uNRhEfN4r4uFQGs5xj
nh6KZ7a91NQYbcy/nPi06b8GTe6eXr3ygnmnyWUGND4kE3xrL/6tYmOjSNkS
owXTMf4e7d8ZRzQ8dPfb6qk6p+vVa2XY+4rkkW60iVGEKakM1s89RouugZcg
4y0d419ifcYGrc5FsLhnXGe3pTD1HEWcQk+5LWMUxDTuyDymY7Y6YH8wUevC
apiI3xGiYS67CCjVg3mHSadJPfCePcTuFht9mPL8TwfsWRtA9/PZ7ZqMkElq
HU3MHmavHmKBPcTHOTbiiSRmWbc6OH+0zpQ/7p5HDZ+YEg0RED2m9TrdprYQ
b/QQf9ZDlK2HWOpCszY8fHabA/YnUsnduKlRuzPd6iUUYB095oJ09nJc16Cp
ST3yEh2ughea5WMu5isO2J9RrCEAYRdY9hBrYzcOpHoQ5nYTKaZ6MM33ELfU
QzQlnQtpzMXc7oD9NVaCXXx2oVo3UU+7fIRZUXdZUcFmXc+6uuohXjEemuDp
zTscorqxTB0Ku23MPaBTveCB0QxG010WC+MBBB8MrzvpgpmYr1WBPQe1NVDk
Lt7TWCtRAxMr+4y+hyhnE6qZcjLOgHLujr7TLOzrVXStNopu6bOL3LqNXxqG
TCwjadS3oLU9ZZxg1N1Gvy4idjcNwGNo26qY2kw6upvPLlBi77dMqNIK8iyi
45rOyoBb6YxBY2LmG1VMHVazemcWzJpsFPZVaYNMGK2wDukyrdAFFuNg5eEX
y8l8s4qpZtqgwRNz3V1EG9zX+WpZTawIgiLXn0YW3YSXXYZEV3fzsK0lZr5V
Rddpeq05D3fXjpYx+x1f5gJ4wG7iAVM9mEscEl1qdRP9nos2Znmab1fROW1Q
D+Mu8NGIvov4Xvb1cldJRysBVVeZMxACMBm7nW20tjur6LpRh4OtTyTa1UW8
yjgyMrMdJxONoBy3VKsZBxN9MA+4XWA8mnZXFZ2L53TXn12W1EU8A/s+s9O0
WjfHmyAGGTMOMnnOtv4wbXN3FV2vaZdK2XkL3cTrMqo1WmUfzqZ6EDh2lpAE
j8qk43ikS+fZhh0zNt+tYhqNdumtCPbvmO2zj7JSPVjcdxL/0lVGwvQbljTp
qFJjavSeKjq3pa+RLpuzOk2K1c+gGDXgFTsJFzrLFggawKTttoUxP/q9Kjp3
nkw1d3yZmp1+vMWeJO5U3WP25HRPNd3xUlfSswilAcJ9VUwDiD7MmOPLnGOf
yLB6O22bymCWblIGdjDTpIj5nO9X0Q1aj3nNQz/LdnzVmHiwLFmGBDLCnURv
azauev9Ok5OuqWfauJjUub+Kzn25qlGX+4ZYT+mlUdjXFmBtDboHsVbNaNVV
TBNbBA2Ybtgxs/NgFZO7DUA9KfsEuJNQOIbYWK1MIZMO8KiT+MwaocUdGMHE
6Q+q6NwVSprbZp/L1tCP+o8cgK9NqIZZjj1izJAwHZ1u3gyt7YdVdGmNDCcF
2EemNWLnA0RONdMF9dY1s1SNUDrLcmfcYg9KwjnkAOahKjp3gaUeF3AfZOre
H+MhO7tfM77qLFEz/dBYq1ZuWypTnUkPh9K8z4+qAN393npsYAzplCnOABFB
B3EYTUTKRE9eWUVVcq+OYfLnkSo6t6tS/SAKzIcpDjv42mFi1lQqM0fWX4dR
rdM4a+s2VjD58+MqOvcwjwZU7OM5JxOdcNgp8UQNLNg6iJwcF3SZw+TpEOsE
657uwhzrT6ronJQ1nHGBiy4E0sgQLLAzu6keTAAdxDl0EG11iNW8U39sVxxC
jwDm0So6t7mpy70Bwi83ssqYHZpM9WBq7ChpcJjumUV3EPfknonChNBPq5im
Gzf1PEG/cVMP8jEO95WtDYKsJmXgI1IZTOOsrPK0iCWEHq+icwdeddLoL2s9
O1wJ1laUToXCduO/Jn86kOqipboHVjAh9EQV3Uz0Ov4LFlgWtpuO6kKYHfFt
YlmwbG0vayF4Tzeuek/3mggmhLZX0VWWRkHK7pS4Iu4w76RJInY2rL1qRRB4
tRtd6oMZ/R2EvxNL1rajimk3rBl8kPN7unXIPAM729ZOdNRRrYFXEx1liGFj
IKGDUDiA+VkVXfraA44csEOf7cQS2EkvpmesbTvR5XbTFPX+rky1x13Pjgmh
n1fRzTVb1UWcne7tINxkB8TaiR9tUsb4Ad7CtDohaUz+/KKKZJ5JWQ8asFPH
bYSH7CBcWxkno59pMGim609jH3eHKCZ/nqyic/eGqP30WmsN/5l2sbNVbmtL
U1apLcQv7WXOMA1mNwo2plqfqqLb3axbDx+405S6echG6SnLBHxhohrmgTYb
Qxc87WWdYen5vC1jNvarKjp3nZeeQEjoIEnKNISdD2kiEyZjsKw24mmYRbhr
LvFTq19X0S00C9W5jx01bCPaxbahUz34TCSVQVzVVpYTRMJthBZ3NRQmhH5b
RbfI5KSxltv20OOAjofqhdlhpCZIGGJY0baalejM7eSpK2R3oxomhJ6uoksn
uCC54g7faOyfRmGbamATqR7EEakMYq1WG1eje6YfqYyl2RrTr7+ronMnCvVI
Qo+NrFuLjGq2qdZEu8DTBHRh9mKW1Ub8lbu2BNNAv69icver65EEdnLJ6YpG
x2w7qYFW8DRMW1uJ53Kjqc64FbImrAKEP1Qx7WV2Ut1uB3+WRmEbp2BjrF4r
8XutRqFmD9pKPCpfrqAbuwHMs1V0exs16kndVqxmD9jIncTGmvAfItwmZWB3
rKwf/YJlfv5YRbfMRtF1XZdpksb+jP9s26yVeJpWYjGtZbnDjNBKuNpnEsHM
z5+q6NJ983A4gW0+M2oiuhqMPPInxxrM3bXyJnnRw+bzGOHyFOufq3BWGMNV
aSOcTqBj5A/ZJ6oBvJE/2VW08V9nucZfd1Z/zb6ia0yk/rWKYR90K4HmiKEG
gh/5k02kbEU18dsHbb196xcPOfmQF9+w9YY8B8Rfd4KRJa7o3cRJ6OzjOgjT
jXaPY5XJX8OmmslHQ8o0CkszEcOpfe7kcy6/b8EJe9RbHmt5aLdTd/vI2959
hahq+jX405E/WZeYs3AhKqZswo/nVAHti9VdZrITYvikOBrhxjo9VaX/zgGv
WF9v2SoDjPx3T8sPFh+1RvqJlPZA8DvyxwdPPgjrNcvEzEz40VoFsR/KLxAU
CWwH9alD0qVB9b+/4KWL6i1Pt7QK7S0dvxy/bnjKE9t3eKNJAuPdui9aMPcS
frRXqXY3WehtMYQyz5eoQh3eiy265557fjLtzGktbZHqX/dd1Hf4li3hqx/1
vUmPvDp6aVbO2ltaJfzoqBJ+gOHU7f9IeIePOVQtE9V+xj7y2muv/WPH5R2J
6q56y+0t7z7jgvB8g3cImSRmT+5MMNH0WpXqA02nNLceZVKDA3kjJdk5RMLb
M6gPvf6819dbtiWaR9VbdrR8ZfWJ4QoZH/H7iEP1JLEY1ltGW2eV2HS7E4Qf
iVgfBPtA0bIvLW1ClpAXCI3k1h6Yt37eHg8+/HieyLMnb40RlE4bdZzjMcMR
fnRXqU2XbMGVRpHaDj/96xTokkzv3nzJzUJZS0egsvvhmWfMfMPHr7wlz2p+
hlOrcKfLMEURfvRUyXuuVVf1TuR5Wakvc/H/Ta96y0U/mnXqrEzejgkXTPj0
KW+9UPrwky2s5NzMhTmGOMFWyTvImK074G1mMjnU1CAscU/I+OXg5rGBsPZs
Rle2fP35x5wm7fwsmGe1TtNCzMuFH71Vyg42RuhiIFHmz52pXBLjzj/rvAuF
EkdZp0wKdxxywnGe0aobbvebqFtflax0IynsObeiZ4RDu8l5bNp80eZ6y5YK
Wfe0XHvUGS/PcTTbO2s8EBV+9FfJOgzF7oZuz5qfZZIoyg7FUVSTEEDimuwF
s4a6TS9cQIcfA1ViDkeXHqqn8Cj37H31FceeeazwIul5h0yD311y9FIJm3SN
4XaIcL0bI8MqCfGS6VGwAVu3+Wz5PQ8+nsOL7K8EvrBi++TDp7/0C3fcm0l3
FomZn/BjbHXk54eCHtgcrccgXijZcN2X7hYd27by+JX1lifToG07htZPO+Hq
m7/q1JxkY8KPcdUR4x38nX7rUvC+/aKrbhM1fGj2EXNE2WSYh3Y7YfZnNr7z
U05tyTmZ8GN8dZj4OEPNX+QSbPmSf7vjZ0Nrp8UROp8cu3Ho2KtvjF9gii40
nFOJC4Fq7y8yG8oBx/nnX3LTo9PXz8rEPzp10zSJOCLxpdtZOPEvjraQWXrY
bV+7+7Gpr5wRe25/YtJ5kw7Z+uXb8kLC2k2qdrTOHOb7z/3gtdJJpu+pgfeN
ue6Eje+qhPCTq12kN30m7Nix4+GZG3bLpidd/Kr/fQPrbvr8LRU4zbr4wZwT
5/gufjn4/sGDtm7d+rfrYvixxx774eyTZ/99qfh/3cVjw2cP73XnnXfuYhej
nn76aQlsfBcSp4v17KyL9B7Yg3NfOLeellLJMbdJfDTvgQce2MUu7l145MJ6
y7PQhQATgLvYBcSS/7suZD6Tec13IeCI1yh1kSeouk2VbeK7xYdXuphS6ELW
F7LOwC4ebrn5iFOP2MUuTv3ApR+ot9xY6eLOlo+dePaJu9hFXvlgF1taJDrZ
xS5Wbtu2Tdyl70K6lK53sQvwF6kL6VK63lkXRxLtjGuMNsldzHz44Yd3sQvh
vEggNG7NHT3bcu/C9Qtrzz77rGsxXOji3LPef1ZOOFgXVKilLmS1LKtm7IJK
pNQF+IvUhSwVDrj99tt31kV8fbLmbcTzwCpO5S07jrrmxmt+1X9pf2hXu7F2
+nsufY+rNa3QTDr/8tqT19Zbrm351rKTl4158sknmzVLj5tKtVdfevmlokHu
t9Or1e3HW/6evzohgp1Rf+SRu+pLl8ovH6nPmLGhftllrlZD7Bofuu+4rL5h
g1TfXh8akgqVZg1Rd3xtva2r/swzz9S7uqRZs+pplIH6UyGBJs3ySM2aHR8K
us+pn332/Pr94YT/pvrmzbfW16w5vL5ly/X1deukwbb6ypXNujkuji5dyC+2
1A8Pi4YL6xs3jhiA0NAm1Kysb9s2VN++3bVsWPrErnqFy/ILYZuUbKxfeKH8
e2n9rrvW1G+9VQAKhcIbYaV10LDGixhrHou0kr8LwWkpk39tsomskEFcZw0Z
geON8QJbfilQpWmK/LtE7PI7+b/8Pg8l9QSHddaQDolP03dJ7/KLk+oXXyyc
eao+MCD/lv8LR5rQF3toF55l/om0k1TW1a+PR6nq4Fm6CnSIFIR3m+ubNuXx
pQtBFGjcGR3BDDKbM/Wu1ugC+dngGgE3iDu2aBNmkwEa9C1VF67GqnW7UGnb
tjphTkPie2NUsK4RSV64cWP9qSib+jMjOrYxaG2x5WlJvCOc27ZyZeZL/foR
/bh//vzw95EpxfXgG8e3krtlWN94zYig5TczogHVr1q/3lPf2EP7xSedpATf
NcLntJLcMGJVO+kgPho+emj79tB4+4jD2bR5c6gjreXvmRuCQ2pLb/Hv8q+G
HarYY8e6EZWSculBAN66Zk1dptKRmjXhqdSaH51NGFm51LCD9waTpZSLgPJS
WTh10sUXh45y1mf9VVcpJ3PHsbeGnc/IvQ4hTcoFvPxdyM2JNWBhq/QXYoSK
Vj1T6FnUQlpKz6ISItHUc3vuWf4vPabOAxTovOEAQXiwuVVwp1S+70pKpLso
xTrZzY7vPXduj3NLpGmkBDpJ6JeO2GlXcm+xh4YTGvFZ7DapJT0+MuIgs3RE
UlJXVCFLR/7uzUtQFHqOdLZHA2ypn3P22cEYI5+6B5KvEs3NHYrwstVFXkiN
hiMzpxvJd0WnVJc4beRnT9ZM+bMm+tvASfl3hhhHYB3HB6f7pKLgEoqzrgi5
0vnm6Ha1PBtehMA63WTUZmyJ2g75twySUVw24pkLmDehVW4Zmeeyt0tW2Sbc
E3JM2A1HqWIvXZkzofVISTY5UZfotJjaxsbt2RlkgSW9t5GLqnamGdWWOE9X
VKjhWIr9+L8KLlue899/T6SD\
\>"],ExpressionUUID->"84292d0f-6d8a-4e6f-9e12-e5fcd5e7677e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"repEmpty", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofournull\>\""}], "]"}], "]"}], "\[Rule]", 
       " ", 
       RowBox[{"allGraphs5", "[", 
        RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5FakeAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7209648455882854`*^9, 3.7209648515439177`*^9}, 
   3.7211572903356056`*^9, {3.721228486991238*^9, 
   3.721228498152562*^9}},ExpressionUUID->"6cbf52f9-7360-4c49-8947-\
008a96247d24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", "36"}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", "23"}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", "26"}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", "23"}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", "26"}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", "17"}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", "26"}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", "18"}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", "11"}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", "23"}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", "15"}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", "11"}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x2345", "\[Rule]", "2"}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", "23"}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", "15"}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", "17"}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", "15"}], ",", 
   RowBox[{"n15x234", "\[Rule]", "7"}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", "26"}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", "18"}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", "18"}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", "17"}], ",", 
   RowBox[{"n14x235", "\[Rule]", "7"}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", "10"}], ",", 
   RowBox[{"n145x23", "\[Rule]", "7"}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", "26"}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", "17"}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", "18"}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", "18"}], ",", 
   RowBox[{"n13x245", "\[Rule]", "7"}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", "11"}], ",", 
   RowBox[{"n135x24", "\[Rule]", "7"}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", "11"}], ",", 
   RowBox[{"n134x25", "\[Rule]", "7"}], ",", 
   RowBox[{"n1345x2", "\[Rule]", "2"}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", "23"}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", "15"}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", "17"}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", "15"}], ",", 
   RowBox[{"n12x345", "\[Rule]", "7"}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", "10"}], ",", 
   RowBox[{"n125x34", "\[Rule]", "7"}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", "11"}], ",", 
   RowBox[{"n124x35", "\[Rule]", "7"}], ",", 
   RowBox[{"n1245x3", "\[Rule]", "2"}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n123x45", "\[Rule]", "7"}], ",", 
   RowBox[{"n1235x4", "\[Rule]", "2"}], ",", 
   RowBox[{"n1234x5", "\[Rule]", "2"}], ",", 
   RowBox[{"n12345", "\[Rule]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7209648632619085`*^9, 3.7210558399045773`*^9, 
  3.7211572915706673`*^9, 3.721207541738863*^9, 3.7212284993256254`*^9, 
  3.7212295719220967`*^9, 
  3.7212299192528486`*^9},ExpressionUUID->"a0c5cee9-349a-45e0-b498-\
b64f61c5115e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"e", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", 
        RowBox[{"e", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/.", "repEmpty"}], ")"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{"e", ",", 
      RowBox[{"EdgeList", "[", "gr", "]"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.720964810520938*^9, 3.7209648271163607`*^9}, {
  3.7209648687081842`*^9, 3.7209649004062123`*^9}, {3.7209652419653482`*^9, 
  3.720965248079199*^9}, {3.7212285125724545`*^9, 3.7212285177750783`*^9}, {
  3.721228556807517*^9, 
  3.721228566597582*^9}},ExpressionUUID->"def9438f-d20d-4fb9-9d28-\
a0f6d9ef28c5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["1", "9"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "17"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "15"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["2", "11"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["1", "5"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["5", "13"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "18"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["7", "17"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["11", "26"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["10", "23"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["7", "15"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["11", "23"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["7", "11"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["23", "36"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["15", "23"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["17", "26"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["9", "13"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["7", "10"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["13", "18"], ",", 
   FractionBox["17", "23"], ",", 
   FractionBox["17", "23"], ",", 
   FractionBox["17", "23"], ",", 
   FractionBox["17", "23"], ",", 
   FractionBox["17", "23"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7209648123478937`*^9, {3.720964864526767*^9, 3.7209649014351826`*^9}, {
   3.720965243532425*^9, 3.720965248888527*^9}, 3.7210558400534697`*^9, 
   3.7211572967299976`*^9, 3.7212075418065414`*^9, {3.7212285055460396`*^9, 
   3.72122851854955*^9}, {3.7212285585856543`*^9, 3.721228567289648*^9}, 
   3.7212295719596977`*^9, 
   3.7212299192899485`*^9},ExpressionUUID->"2e36e822-8350-484e-ba57-\
b50847292bae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"e", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "/", 
         RowBox[{"e", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/.", "repEmpty"}], ")"}], 
     ",", " ", 
     RowBox[{"{", 
      RowBox[{"e", ",", 
       RowBox[{"EdgeList", "[", "gr", "]"}]}], "}"}]}], "]"}], "//", "Sort"}],
   "//", "ListPlot"}]], "Input",
 CellChangeTimes->{{3.720898034907129*^9, 3.720898062268249*^9}, 
   3.721157334506832*^9, 
   3.721228542968628*^9},ExpressionUUID->"506dc159-7508-4a9f-93c1-\
70320d13603b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxd1LtrFFEYxuEXK0tFIRaLrCIqIuLdXNR8ahKNmjVG42XjxnGitkEQC6uv
tUmvIkxlb69yBCVYio0XDAsRRUlh4R/gzuSMcH4fZxgeXt45ZxiYLfn81J01
koreVd5X58+w0rGUa+F18EZ4E9yAm/BWeBu8Hd4J74J3w3vgvdZYvNdbL+N7
74P3wwfgg/Ah21zN6+jD8BG4Hx6AB219NW+ih+Cj8DH4ODxsY32d+x9GF6Mt
tcM6gRzWSeSwTiGHNYJ8xJ48Lud9zEdTO6wx5LBOI4d1BjmsceTj9vnRs0+9
FfOzqR3WOeSwztvAwnL/wnKdw5pADquFHNYF5LAmUxvsk9au5suqA6yLqQ12
OMCaQh92OMC6ZEMvNvTW19iHHQ6wLqMPOxxgTaMP+7S9+jUx//Bj3Yd1JbXB
DgdYV9GHHQ6wrtnSt2piH3Y4wLqOPuxwgNVGH/a2/S6P+3Qp9mHNpDbY4TBj
5d+mr/M99m+kNtjhAKsT//91H3Y4wJpFf9Za1XHrPhxg3UxtsMMBVpa6CRuc
ZfautfK2tVI/Hy7gAHdh3bIH+Y7e+hH3hw3OYIcLOMBdWDn2hy23u9XU+8MO
F3CAu7lVn7vxM+4/l7oJG5zBPmfl1/n7PLqAA9yFdfu//wFKm9Fs
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 160.}, {0, 0.7391304347826086}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7208980356826506`*^9, 3.720898063228505*^9}, 
   3.7209532598845243`*^9, 3.7209535759815564`*^9, 3.721055840513694*^9, {
   3.7211573296291456`*^9, 3.7211573353148417`*^9}, 3.721207541927864*^9, 
   3.72122854364219*^9, 3.7212295720905437`*^9, 3.721229919363142*^9, 
   3.721229950453715*^9},ExpressionUUID->"480868c7-969a-44a2-a45a-\
9310df49581a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rep5Bis", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}], 
       "\[Rule]", " ", 
       RowBox[{"allGraphs5", "[", 
        RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5NullAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.72089916087191*^9, 3.7208991790002384`*^9}, {
  3.7211573633213773`*^9, 
  3.721157365013023*^9}},ExpressionUUID->"789356c5-d90e-48fd-a487-\
ad2f8ff0b2c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", "36"}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", "13"}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", "13"}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", "5"}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", "4"}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", "2"}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", "4"}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", "13"}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", "5"}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", "4"}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", "5"}], ",", 
   RowBox[{"n1x2345", "\[Rule]", "2"}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", "13"}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", "5"}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", "4"}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", "5"}], ",", 
   RowBox[{"n15x234", "\[Rule]", "2"}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", "2"}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", "2"}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", "4"}], ",", 
   RowBox[{"n14x235", "\[Rule]", "1"}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", "5"}], ",", 
   RowBox[{"n145x23", "\[Rule]", "2"}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", "10"}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", "4"}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", "2"}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", "2"}], ",", 
   RowBox[{"n13x245", "\[Rule]", "1"}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", "4"}], ",", 
   RowBox[{"n135x24", "\[Rule]", "1"}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", "4"}], ",", 
   RowBox[{"n134x25", "\[Rule]", "1"}], ",", 
   RowBox[{"n1345x2", "\[Rule]", "2"}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", "13"}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", "5"}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", "4"}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", "5"}], ",", 
   RowBox[{"n12x345", "\[Rule]", "2"}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", "5"}], ",", 
   RowBox[{"n125x34", "\[Rule]", "2"}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", "4"}], ",", 
   RowBox[{"n124x35", "\[Rule]", "1"}], ",", 
   RowBox[{"n1245x3", "\[Rule]", "2"}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", "5"}], ",", 
   RowBox[{"n123x45", "\[Rule]", "2"}], ",", 
   RowBox[{"n1235x4", "\[Rule]", "2"}], ",", 
   RowBox[{"n1234x5", "\[Rule]", "2"}], ",", 
   RowBox[{"n12345", "\[Rule]", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7208991809171095`*^9, 3.7209532602801456`*^9, 
  3.720953576349124*^9, 3.721055840709213*^9, 3.7211573658382745`*^9, 
  3.721207542055707*^9, 3.7212285732129116`*^9, 3.721229572207858*^9, 
  3.7212299194889765`*^9},ExpressionUUID->"f8f32fb2-cb3c-4612-9ec7-\
c3c972a99d65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq1", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Fold", "[", 
    RowBox[{"And", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"e", "[", 
            RowBox[{"[", "1", "]"}], "]"}], " ", ">=", 
           RowBox[{"e", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/.", "rep5Bis"}], ")"}],
        ",", " ", 
       RowBox[{"{", 
        RowBox[{"e", ",", 
         RowBox[{"EdgeList", "[", "gr", "]"}]}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.720899196846371*^9, 3.7208992230467253`*^9}, {
  3.720899258245349*^9, 3.720899259475852*^9}, {3.7211573851924653`*^9, 
  3.721157396279318*^9}},ExpressionUUID->"4c8eac9a-1d7d-4049-8fd5-\
dfbdf3cb9481"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7208991982522073`*^9, 3.7208992252606688`*^9}, 
   3.7208992606711435`*^9, 3.7209532603744097`*^9, 3.7209535764483995`*^9, 
   3.7210558419705825`*^9, {3.721157372656931*^9, 3.721157397447324*^9}, 
   3.721207542094308*^9, 3.721228616278861*^9, 3.721229572238439*^9, 
   3.7212299195250745`*^9},ExpressionUUID->"3e992be8-3350-4ece-a011-\
0057533c7de5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eq2", "=", 
   RowBox[{"Fold", "[", "\[IndentingNewLine]", 
    RowBox[{"And", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"allGraphs5", "[", 
          RowBox[{"k", ",", "\"\<colofour\>\""}], "]"}], "\[GreaterEqual]", 
         " ", 
         RowBox[{"allGraphs5", "[", 
          RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "allGraphs5FakeAtomKeys"}], "}"}]}], "]"}], "//", 
      "Flatten"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.720899265345046*^9, 3.720899324235589*^9}, {
  3.721157425528905*^9, 3.72115744966778*^9}, {3.7212286027255793`*^9, 
  3.7212286094126935`*^9}},ExpressionUUID->"0a61df99-3dfb-4693-a71e-\
88f997b99251"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Zero", "=", 
  RowBox[{"{", 
   RowBox[{
   "alfa1Key", ",", "beta1Key", ",", "gamma1Key", ",", "delta1Key", ",", 
    "epsilon1Key", ",", "K5Key"}], "}"}]}]], "Input",ExpressionUUID->\
"8cd12867-7d71-44a4-8c4b-72d586e48918"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "36166", ",", "31738", ",", "29608", ",", "36112", ",", "31714", ",", 
   "29524"}], "}"}]], "Output",
 CellChangeTimes->{3.720899376988055*^9, 3.7209532605228148`*^9, 
  3.7209535766294084`*^9, 3.7210558423841825`*^9, 3.7212075421720133`*^9, 
  3.7212295722965937`*^9, 
  3.7212299195882697`*^9},ExpressionUUID->"30c1f531-24f7-4493-9c4c-\
dd9856c82d1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"eq3", "=", 
  RowBox[{"Fold", "[", "\[IndentingNewLine]", 
   RowBox[{"And", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofour\>\""}], "]"}], "\[Equal]", "0"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "Zero"}], "}"}]}], "]"}], "//", "Flatten"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7208993782776265`*^9, 
  3.72089940510211*^9}},ExpressionUUID->"752668b7-f1e5-41d7-8fe0-\
9bb586f8b9e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"v13x24x5", "\[Equal]", "0"}], "&&", 
  RowBox[{"v14x25x3", "\[Equal]", "0"}], "&&", 
  RowBox[{"v1x24x35", "\[Equal]", "0"}], "&&", 
  RowBox[{"v13x25x4", "\[Equal]", "0"}], "&&", 
  RowBox[{"v14x2x35", "\[Equal]", "0"}], "&&", 
  RowBox[{"v1x2x3x4x5", "\[Equal]", "0"}]}]], "Output",
 CellChangeTimes->{{3.7208993953034143`*^9, 3.720899406432922*^9}, 
   3.720953260616073*^9, 3.7209535767046165`*^9, 3.721055842441334*^9, 
   3.7211574639742994`*^9, 3.7212075422191525`*^9, 3.7212286392640696`*^9, 
   3.721229572330183*^9, 
   3.7212299196248417`*^9},ExpressionUUID->"6f97fd7a-65c1-47da-adc6-\
b5de401af03c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "long", "]"}]], "Input",
 CellChangeTimes->{{3.721158402166585*^9, 
  3.721158405737449*^9}},ExpressionUUID->"0412191b-c92c-473e-a1bf-\
36d802f7f00c"],

Cell[BoxData["52"], "Output",
 CellChangeTimes->{3.7211584066673665`*^9, 3.721207746794382*^9, 
  3.721229572364273*^9, 
  3.721229919663464*^9},ExpressionUUID->"8e55161d-1135-4d2e-90fe-\
3e65870bf39e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"allGraphs5", "[", 
            RowBox[{"child", ",", "\"\<atleast\>\""}], "]"}], "/", 
           RowBox[{"allGraphs5", "[", 
            RowBox[{"k", ",", "\"\<atleast\>\""}], "]"}]}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"child", ",", 
            RowBox[{"Rest", "[", "children", "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"children", ",", 
          RowBox[{"allGraphs5", "[", 
           RowBox[{"k", ",", "\"\<children\>\""}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Keys", "[", "allGraphs5", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "//", "Flatten"}], "//", "Sort"}], "//", 
  "ListPlot"}]], "Input",
 CellChangeTimes->{{3.7212289179341555`*^9, 3.7212289539848814`*^9}, {
  3.7212292765870905`*^9, 
  3.721229419942458*^9}},ExpressionUUID->"9d0931ce-1c1e-44ee-953d-\
560f771162b6"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,792,158,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 3.721229420550125*^9}, 
   3.7212295724064145`*^9, 
   3.721229919707559*^9},ExpressionUUID->"c7c37f82-2d1c-43e9-8789-\
2f13f2e35c51"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,792,159,27549250405993487452,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 3.721229420550125*^9}, 
   3.7212295724064145`*^9, 
   3.721229919787301*^9},ExpressionUUID->"117e4d4c-fef9-4dcb-8a80-\
aa3a807f1ffa"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,792,160,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 3.721229420550125*^9}, 
   3.7212295724064145`*^9, 
   3.7212299198619957`*^9},ExpressionUUID->"a50484cc-b542-4e77-b0e2-\
bc81c757fe4e"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,792,161,27549250405993487452,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 3.721229420550125*^9}, 
   3.7212295724064145`*^9, 
   3.721229919942711*^9},ExpressionUUID->"45ebd503-a324-426b-97bc-\
5b6352055aad"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,792,162,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 3.721229420550125*^9}, 
   3.7212295724064145`*^9, 
   3.721229920029414*^9},ExpressionUUID->"ccff8d18-82c0-4d8d-8441-\
00d9a5517ad7"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,792,163,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 3.721229420550125*^9}, 
   3.7212295724064145`*^9, 
   3.7212299201196537`*^9},ExpressionUUID->"4d9e0bfe-146d-41f9-bed0-\
95e18bda05c6"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,792,164,27549250405993487452,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 3.721229420550125*^9}, 
   3.7212295724064145`*^9, 
   3.7212299202149086`*^9},ExpressionUUID->"3cb860f1-59c0-4c27-b6c7-\
133ccb420648"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Infinity\\\", \
\\\"::\\\", \\\"indet\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,792,165,27549250405993487452,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.721229306871832*^9, {3.72122934186872*^9, 3.721229420550125*^9}, 
   3.7212295724064145`*^9, 
   3.7212299202916126`*^9},ExpressionUUID->"6c77d463-4dcc-4e46-9f5b-\
0d11081d5299"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxc3XF01fP/OPArySSZTCaTyWQymUwmkyuTSTKZTCaTyWQymUySK5NJMkkm
yZXJZDJJJpMryWQySSaTSTJJJsmkT37fz0e/P/Z4ntc57/M4z/M8z3vOe8/z
PPee+747bvStw2/oEAgELusVCPz3+m+0nhtoH8H2jMLROAbH4jgcj3vhBNwb
J+I+OAn3xcn4NNwPn45T8Bm4Pz4Tp+Kz8AB8Nk7D5+CB+FwcbO8QDpxHHgcG
kceB88njQDp5HLiAPA4MJo8DF5LHgQzyOHAReRwYQh4HLiaPA0PJ48Al5HFg
GHkcuJQ8DmS2dxCHcAQHLqMeh3AEB4ZTj0M4ggOXU49DOIIDWdTjEI7gwBXU
4xCO4MAI6nEIR3DgSupxCEdwIJt6HMIRHLiKehzCERwYST0O4QgOXE09DuEI
DuRQj0M4ggPXUI9DOIIDo6jHIRzBgWupxyEcwYHc9o7HQZyLQziMI7gZB66j
Pw7iXBzCYRzBzTgwmv44iHNxCIdxBDfjwPX0x0Gci0M4jCO4GQfy6I+DOBeH
cBhHcDMO3EB/HMS5OITDOIKbcWAM/XEQ5+IQDuMIbsaBG+mPgzgXh3AYR3Az
DuTTHwdxLg7hMI7gZhy4if44iHNxCIdxBDfjwFj64yDOxSEcxhHcjAM30x8H
cS4O4TCO4GYcKKA/DuJcHMJhHMHNOHAL/XEQ5+IQDuMIbsaBcfTHQZyLQziM
I7gZB26lPw7iXBzCYRzBzThQ2N7ROB4n4yDOxLm4EIdwGQ7jahzBDbgZt+LA
be0djeNxMg7iTJyLC3EIl+EwrsYR3ICbcSsOjG/vaByPk3EQZ+JcXIhDuAyH
cTWO4AbcjFtx4Pb2jsbxOBkHcSbOxYU4hMtwGFfjCG7AzbgVB4raOxrH42Qc
xJk4FxfiEC7DYVyNI7gBN+NWHLijvaNxPE7GQZyJc3EhDuEyHMbVOIIbcDNu
xYEJ7R2N43EyDuJMnIsLcQiX4TCuxhHcgJtxKw7c2d7ROB4n4yDOxLm4EIdw
GQ7jahzBDbgZt+JAcXtH43icjIM4E+fiQhzCZTiMq3EEN+Bm3IoDd7V3NI7H
yTiIM3EuLsQhXIbDuBpHcANuxq04MLG9o3E8TsZBnIlzcSEO4TIcxtU4ghtw
M27FgbvbOxrH42QcxJk4FxfiEC7DYVyNI7gBN+NWHJjU3tE4HifjIM7EubgQ
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
lY7bjY7bnY7bg47bk44bTcftRcftTcftQ8ftS8ftR8ftT8cdQMeNoY/57/4/
cagfOLUHcAfRcQfTcYfQcYfScYfRcYfTcUfQcUfScUfR/+dJQ/3oqT2AO4aO
O5aOO46OO56OO4GOO5GOO4mOO5mOO4WOO5WOO42OO52OO4OOO5OOO4uOO5uO
O4eOO5eOO4+OO5+Ou4COu5COu4iOu5iOu4SOu5SOG6TjLqPjLqfjrqDjrqTj
rqLjrqbjrqHjrqXjrqPjrqfjbqDjbqTjbqLjbqbjbqHjbqXjxtJxt9Fxt9Nx
d9Bxd9Jxd9Fxd9Nx99Bx99Jx99Fx99NxD9BxD9JxD9FxD9Nxj9Bx4+i48XTc
BDruUTruMTrucTruCTpuIh33JB33FB33NB33DB33LB33HB33PB03iY57gY57
kY57iY57mY57hY57lY57jY57nY57g457k457i457m457h457l457j44nf/BT
d9w0dNy0dNx0dNz0dNwMdNyMdNxMdNzMdNwsdNysdNxsdNzsdNwcdNycdNxc
dNzcdNw8dNy8dNx8dNz8dNwCdNyCdNwwOm4hOm5hOm4ROm5ROm4xOm5xOm4J
Om5JOm4pOm5pOm4ZOm5ZOm44HbccHbc8HbcCHbci/f/8b9W5/Bo=
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{969., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 8785.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.721229288274704*^9, 3.721229307471426*^9}, {
   3.7212293425189486`*^9, 3.721229421604927*^9}, 3.721229573391001*^9, 
   3.7212299207237597`*^9},ExpressionUUID->"61bd412c-e3f4-44b2-98f2-\
a23714b3fb37"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vertexLabels", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}], 
       "\[Rule]", " ", 
       RowBox[{"Tooltip", "[", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Rotate", "[", 
            RowBox[{
             RowBox[{"allGraphs5", "[", 
              RowBox[{"k", ",", "\"\<embed\>\""}], "]"}], ",", 
             RowBox[{"Pi", "/", "4"}]}], "]"}], ",", "Red", ",", "Bold", ",", 
           "14"}], "]"}], ",", 
         RowBox[{"Labeled", "[", 
          RowBox[{
           RowBox[{"ShowGraph", "[", 
            RowBox[{"allGraphs5", ",", "k"}], "]"}], ",", 
           RowBox[{"allGraphs5", "[", 
            RowBox[{"k", ",", "\"\<compwhy\>\""}], "]"}]}], "]"}]}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5NullAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.72089749010003*^9, 3.7208976215966034`*^9}, {
  3.7208977967618484`*^9, 3.720897804314616*^9}, {3.7208978580768857`*^9, 
  3.72089785908768*^9}, {3.720898311692405*^9, 3.7208983257896495`*^9}, {
  3.720898366957579*^9, 3.7208983863823557`*^9}, {3.7208984573053303`*^9, 
  3.720898472787612*^9}, {3.720899830323249*^9, 3.7208998310740595`*^9}, {
  3.720928452415261*^9, 3.720928469509611*^9}, {3.72115714286215*^9, 
  3.721157146983141*^9}, {3.7212283786347904`*^9, 3.7212284048760147`*^9}, {
  3.7212444462780895`*^9, 3.7212444593847485`*^9}, {3.7212445935621014`*^9, 
  3.72124459794477*^9}},ExpressionUUID->"a66f0106-80de-4601-a248-\
bae5504dc632"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["628",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {
                   3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["0", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[0, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["192",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3", 4 -> "4,5", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4,5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}}, 
          VertexLabels -> {3 -> "3", 4 -> "4,5", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["140",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}}, 
          VertexLabels -> {3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["260",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "3,4", 4 -> "5", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3,4\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["18", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
           0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3,4", 4 -> "5", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[18, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["68",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3,4,5", 2 -> "2", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3,4,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["26", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {3 -> "3,4,5", 2 -> "2", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[26, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["205",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["54", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}}, 
          VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[54, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["93",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3,4", 2 -> "2,5", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3,4\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["72", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {3 -> "3,4", 2 -> "2,5", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[72, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["140",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["162", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
           0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[162, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["37",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3,5", 2 -> "2,4", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["168", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x168== x22038(Greater) + 43908 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {3 -> "3,5", 2 -> "2,4", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[168, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x168== x22038(Greater) + 43908 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["59",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3", 2 -> "2,4,5", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,4,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["218", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {3 -> "3", 2 -> "2,4,5", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[218, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["192",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2,3", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["486", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2,3", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[486, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["65",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4,5", 2 -> "2,3", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4,5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["488", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}},
           VertexLabels -> {3 -> "4,5", 2 -> "2,3", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[488, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["59",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,3,5", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["546", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}},
           VertexLabels -> {3 -> "4", 2 -> "2,3,5", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[546, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["68",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "5", 2 -> "2,3,4", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["666", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> Baseline]
               , DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.9510565162951535, 
           0.30901699437494745`}}, 
          VertexLabels -> {3 -> "5", 2 -> "2,3,4", 1 -> "1"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[666, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1x2345", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["27",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {2 -> "2,3,4,5", 1 -> "1"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3,4,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["728", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}}, VertexLabels -> {2 -> "2,3,4,5", 1 -> "1"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[728, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["240",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["1458", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}}, 
          VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1,5"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[1458, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["98",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3,4", 2 -> "2", 1 -> "1,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3,4\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["1476", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {3 -> "3,4", 2 -> "2", 1 -> "1,5"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[1476, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["58",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3", 2 -> "2,4", 1 -> "1,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["1620", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {3 -> "3", 2 -> "2,4", 1 -> "1,5"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[1620, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["73",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,3", 1 -> "1,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["1944", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}},
           VertexLabels -> {3 -> "4", 2 -> "2,3", 1 -> "1,5"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[1944, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n15x234", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["27",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {2 -> "2,3,4", 1 -> "1,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3,4\"", TraditionalForm], 
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["2124", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}}, VertexLabels -> {2 -> "2,3,4", 1 -> "1,5"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[2124, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["164",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["4374", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {
           0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
           0.30901699437494745`}}, 
          VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[4374, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["44",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3,5", 2 -> "2", 1 -> "1,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["4380", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x4380== x24144(Greater) + 43908 (Greater)\""}, 
       "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {3 -> "3,5", 2 -> "2", 1 -> "1,4"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[4380, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x4380== x24144(Greater) + 43908 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["55",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3", 2 -> "2,5", 1 -> "1,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["4428", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x4428== x24922(GreaterEqual) + 45416 \
(Greater)\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {3 -> "3", 2 -> "2,5", 1 -> "1,4"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[4428, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x4428== x24922(GreaterEqual) + 45416 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["56",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "5", 2 -> "2,3", 1 -> "1,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["4860", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.9510565162951535, 
           0.30901699437494745`}}, 
          VertexLabels -> {3 -> "5", 2 -> "2,3", 1 -> "1,4"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[4860, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n14x235", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["20",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {2 -> "2,3,5", 1 -> "1,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["4920", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x4920== x31984(GreaterEqual) + 59048 \
(Greater)\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}}, VertexLabels -> {2 -> "2,3,5", 1 -> "1,4"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[4920, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x4920== x31984(GreaterEqual) + 59048 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["82",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1,4,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,4,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["5834", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1,4,5"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[5834, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n145x23", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["28",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {2 -> "2,3", 1 -> "1,4,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,4,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["6320", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}}, VertexLabels -> {2 -> "2,3", 1 -> "1,4,5"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[6320, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["164",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["13122", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[13122, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["56",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4,5", 2 -> "2", 1 -> "1,3"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4,5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["13124", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}},
           VertexLabels -> {3 -> "4,5", 2 -> "2", 1 -> "1,3"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[13124, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["55",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,5", 1 -> "1,3"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["13176", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x13176== x33834(GreaterEqual) + 54492 (Greater)\
\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}},
           VertexLabels -> {3 -> "4", 2 -> "2,5", 1 -> "1,3"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[13176, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x13176== x33834(GreaterEqual) + 54492 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["44",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "5", 2 -> "2,4", 1 -> "1,3"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["13284", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x13284== x35406(GreaterEqual) + 57528 (Greater)\
\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.9510565162951535, 
           0.30901699437494745`}}, 
          VertexLabels -> {3 -> "5", 2 -> "2,4", 1 -> "1,3"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[13284, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x13284== x35406(GreaterEqual) + 57528 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n13x245", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["20",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {2 -> "2,4,5", 1 -> "1,3"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,4,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["13340", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x13340== x36194(GreaterEqual) + 59048 (Greater)\
\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}}, VertexLabels -> {2 -> "2,4,5", 1 -> "1,3"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[13340, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x13340== x36194(GreaterEqual) + 59048 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["68",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2", 1 -> "1,3,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["14586", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.5877852522924731, -0.8090169943749475}},
           VertexLabels -> {3 -> "4", 2 -> "2", 1 -> "1,3,5"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[14586, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n135x24", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["21",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {2 -> "2,4", 1 -> "1,3,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["14748", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x14748== x36898(GreaterEqual) + 59048 (Greater)\
\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}}, VertexLabels -> {2 -> "2,4", 1 -> "1,3,5"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[14748, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x14748== x36898(GreaterEqual) + 59048 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["64",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "5", 2 -> "2", 1 -> "1,3,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["17514", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}, {-0.9510565162951535, 
           0.30901699437494745`}}, 
          VertexLabels -> {3 -> "5", 2 -> "2", 1 -> "1,3,4"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[17514, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n134x25", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["25",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {2 -> "2,5", 1 -> "1,3,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["17568", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x17568== x38308(GreaterEqual) + 59048 (Greater)\
\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}}, VertexLabels -> {2 -> "2,5", 1 -> "1,3,4"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[17568, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x17568== x38308(GreaterEqual) + 59048 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1345x2", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["32",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {2 -> "2", 1 -> "1,3,4,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,3,4,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["18980", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
           0.30901699437494745`}}, VertexLabels -> {2 -> "2", 1 -> "1,3,4,5"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[18980, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["240",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "3", 1 -> "1,2"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["39366", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "3", 1 -> "1,2"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[39366, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["73",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "4,5", 2 -> "3", 1 -> "1,2"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4,5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["39368", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4,5", 2 -> "3", 1 -> "1,2"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[39368, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["58",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "4", 2 -> "3,5", 1 -> "1,2"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["39372", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "3,5", 1 -> "1,2"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[39372, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["98",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "5", 2 -> "3,4", 1 -> "1,2"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,2\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3,4\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["39384", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
           0.30901699437494745`}}, 
          VertexLabels -> {3 -> "5", 2 -> "3,4", 1 -> "1,2"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[39384, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12x345", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["27",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {2 -> "3,4,5", 1 -> "1,2"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.09510565162951536], 
                  InsetBox[
                   FormBox["\"1,2\"", TraditionalForm], 
                   Offset[{2, 2}, {0.09510565162951536, 1.0951056516295155`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.09510565162951536], 
                  InsetBox[
                   FormBox["\"3,4,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6828909039219885, -0.7139113427454321}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["39392", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {2 -> "3,4,5", 1 -> "1,2"}, VertexSize -> {0.1}, 
          VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[39392, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["99",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {3 -> "4", 2 -> "3", 1 -> "1,2,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,2,5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["40878", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "3", 1 -> "1,2,5"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[40878, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n125x34", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["42",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {2 -> "3,4", 1 -> "1,2,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.09510565162951536], 
                  InsetBox[
                   FormBox["\"1,2,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.09510565162951536, 1.0951056516295155`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.09510565162951536], 
                  InsetBox[
                   FormBox["\"3,4\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6828909039219885, -0.7139113427454321}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["40896", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {2 -> "3,4", 1 -> "1,2,5"}, VertexSize -> {0.1}, 
          VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[40896, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["68",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "5", 2 -> "3", 1 -> "1,2,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,2,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["43902", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
           0.30901699437494745`}}, 
          VertexLabels -> {3 -> "5", 2 -> "3", 1 -> "1,2,4"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[43902, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n124x35", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["21",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {2 -> "3,5", 1 -> "1,2,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.09510565162951536], 
                  InsetBox[
                   FormBox["\"1,2,4\"", TraditionalForm], 
                   Offset[{2, 2}, {0.09510565162951536, 1.0951056516295155`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.09510565162951536], 
                  InsetBox[
                   FormBox["\"3,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6828909039219885, -0.7139113427454321}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["43908", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"The relation holds x43908== x51478(GreaterEqual) + 59048 (Greater)\
\""}, "Labeled", DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {2 -> "3,5", 1 -> "1,2,4"}, VertexSize -> {0.1}, 
          VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[43908, 
         RGBColor[0, 
          Rational[2, 3], 0]]], 
       "The relation holds x43908== x51478(GreaterEqual) + 59048 (Greater)"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1245x3", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["34",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {
                   0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {2 -> "3", 1 -> "1,2,4,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.09510565162951536], 
                  InsetBox[
                   FormBox["\"1,2,4,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.09510565162951536, 1.0951056516295155`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                   0.09510565162951536], 
                  InsetBox[
                   FormBox["\"3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.6828909039219885, -0.7139113427454321}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["45416", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {
           0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {2 -> "3", 1 -> "1,2,4,5"}, VertexSize -> {0.1}, 
          VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[45416, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["82",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 
                   
                   1.}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                  VertexLabels -> {3 -> "5", 2 -> "4", 1 -> "1,2,3"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,2,3\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.5290067270632258, -0.7502384691457001}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["52974", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2, 3}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 
           1.}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
          VertexLabels -> {3 -> "5", 2 -> "4", 1 -> "1,2,3"}, 
          VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[52974, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n123x45", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["28",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {2 -> "4,5", 1 -> "1,2,3"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.09510565162951536], 
                  InsetBox[
                   FormBox["\"1,2,3\"", TraditionalForm], 
                   Offset[{2, 2}, {0.09510565162951536, 1.0951056516295155`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.09510565162951536], 
                  InsetBox[
                   FormBox["\"4,5\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.4926796006629578, -0.7139113427454321}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["52976", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 
           1.}, {-0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {2 -> "4,5", 1 -> "1,2,3"}, VertexSize -> {0.1}, 
          VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[52976, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1235x4", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["34",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 
                   1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                  VertexLabels -> {2 -> "4", 1 -> "1,2,3,5"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.09510565162951536], 
                  InsetBox[
                   FormBox["\"1,2,3,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.09510565162951536, 1.0951056516295155`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                   0.09510565162951536], 
                  InsetBox[
                   FormBox["\"4\"", TraditionalForm], 
                   Offset[{2, 2}, {-0.4926796006629578, -0.7139113427454321}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["54492", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 
           1.}, {-0.5877852522924731, -0.8090169943749475}}, 
          VertexLabels -> {2 -> "4", 1 -> "1,2,3,5"}, VertexSize -> {0.1}, 
          VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[54492, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n1234x5", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["32",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}, {-0.9510565162951535, 
                   0.30901699437494745`}}, 
                  VertexLabels -> {2 -> "5", 1 -> "1,2,3,4"}, 
                  VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"1,2,3,4\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                  
                  DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                   0.058778525229247314`], 
                  InsetBox[
                   FormBox["\"5\"", TraditionalForm], 
                   
                   Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["57528", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1, 2}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}, {-0.9510565162951535, 
           0.30901699437494745`}}, VertexLabels -> {2 -> "5", 1 -> "1,2,3,4"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[57528, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}], ",", 
   RowBox[{"n12345", "\[Rule]", 
    TagBox[
     TooltipBox[
      StyleBox[
       RotationBox["16",
        BoxRotation->0.7853981633974483],
       StripOnInput->False,
       LineColor->RGBColor[1, 0, 0],
       FrontFaceColor->RGBColor[1, 0, 0],
       BackFaceColor->RGBColor[1, 0, 0],
       GraphicsColor->RGBColor[1, 0, 0],
       FontSize->14,
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0]],
      TemplateBox[{
        TemplateBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics", 
            DynamicModuleBox[{Typeset`graph = HoldComplete[
                Graph[{1}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                  VertexCoordinates -> {{0., 1.}}, 
                  VertexLabels -> {1 -> "1,2,3,4,5"}, VertexSize -> {0.1}, 
                  VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
             TagBox[
              GraphicsGroupBox[{{}, {
                 Directive[
                  Hue[0.6, 0.2, 0.8], 
                  EdgeForm[
                   Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                 RGBColor[1, 0, 0], {
                  DiskBox[{0., 1.}, 0.05], 
                  InsetBox[
                   FormBox["\"1,2,3,4,5\"", TraditionalForm], 
                   Offset[{2, 2}, {0.05, 1.05}], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
              MouseAppearanceTag["NetworkGraphics"]], 
             AllowKernelInitialization -> False]], {
           FormatType -> TraditionalForm, FrameTicks -> None, 
            ImageSize -> {50, 50}, PlotRangePadding -> 0.1, 
            DefaultBaseStyle -> {
             "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
              Hue[0.8, 1., 0.6]}}], 
          StyleBox["59048", 
           RGBColor[0, 
            Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
         DisplayFunction -> (GridBox[{{
             TagBox[
              ItemBox[
               PaneBox[
                TagBox[#, "SkipImageSizeLevel"], 
                Alignment -> {Center, Baseline}, BaselinePosition -> 
                Baseline], DefaultBaseStyle -> "Labeled"], 
              "SkipImageSizeLevel"]}, {
             ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
           False, GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]& ), 
         InterpretationFunction -> (RowBox[{"Labeled", "[", 
            RowBox[{#, ",", #2}], "]"}]& )], 
        "\"This is a planar contraction\""}, "Labeled", 
       DisplayFunction -> (GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}, {
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         BaselinePosition -> {1, 1}]& ), 
       InterpretationFunction -> (RowBox[{"Labeled", "[", 
          RowBox[{#, ",", #2}], "]"}]& )]],
     Annotation[#, 
      Labeled[
       Labeled[
        Graph[{1}, {}, {EdgeStyle -> {
            RGBColor[0, 
             Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
          VertexCoordinates -> {{0., 1.}}, VertexLabels -> {1 -> "1,2,3,4,5"},
           VertexSize -> {0.1}, VertexStyle -> {
            RGBColor[1, 0, 0]}}], 
        Style[59048, 
         RGBColor[0, 
          Rational[2, 3], 0]]], "This is a planar contraction"], 
      "Tooltip"]& ]}]}], "}"}]], "Output",
 CellChangeTimes->{3.721244478310749*^9, 3.721244599273587*^9, 
  3.7212451659682646`*^9},ExpressionUUID->"aa2116a6-6700-4f5b-922e-\
30cc0baa6c41"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vertexStyle", "=", 
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ChangeSYmbol", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<colofourrealnull\>\""}], "]"}], "]"}], 
       "\[Rule]", " ", 
       RowBox[{"MyColors", "[", 
        RowBox[{"allGraphs5", "[", 
         RowBox[{"k", ",", "\"\<comp\>\""}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Sort", "[", "allGraphs5NullAtomKeys", "]"}]}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"PadLeft", "[", 
     RowBox[{
      RowBox[{"IntegerDigits", "[", 
       RowBox[{"k", ",", "3"}], "]"}], ",", "15"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7208982242696996`*^9, 3.720898242826764*^9}, {
  3.721228388302325*^9, 3.721228412185589*^9}, {3.7212444642029753`*^9, 
  3.7212444706675215`*^9}},ExpressionUUID->"a41602df-fe95-4999-8197-\
04012020e6a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n1x2x3x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x3x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x35x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x34x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2x345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x25x3x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x25x34", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x24x3x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x24x35", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x245x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x23x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x23x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x235x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x234x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1x2345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x2x3x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x2x34", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x24x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x23x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n15x234", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x2x3x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x2x35", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x25x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x23x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n14x235", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n145x2x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n145x23", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x2x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x2x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x25x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x24x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n13x245", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n135x2x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n135x24", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n134x2x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n134x25", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1345x2", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x3x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x3x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x35x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x34x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12x345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n125x3x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n125x34", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n124x3x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n124x35", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1245x3", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n123x4x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n123x45", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1235x4", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n1234x5", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"n12345", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       "RGBColor[0, 1, 0]"],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7208982463147573`*^9, 3.7209532542393856`*^9, 3.720953569268033*^9, 
   3.7210558231758685`*^9, 3.7211571633134985`*^9, 3.7212075400949907`*^9, {
   3.7212283973809786`*^9, 3.72122841484214*^9}, 3.7212295705584755`*^9, 
   3.721229917867673*^9, 3.721244299111264*^9, 
   3.7212444854227314`*^9},ExpressionUUID->"227f2477-1f6a-4620-9bef-\
0d4e4682fa29"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"EdgeList", "[", 
     RowBox[{"MobiusGraph5", "[", 
      RowBox[{"K5Key", ",", "allGraphs5"}], "]"}], "]"}], ",", 
    RowBox[{"VertexLabels", "\[Rule]", "vertexLabels"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}], 
    ",", " ", 
    RowBox[{"VertexStyle", "\[Rule]", "vertexStyle"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.720897671054759*^9, 3.720897732658266*^9}, 
   3.7208977837094126`*^9, {3.720898021550186*^9, 3.720898022347364*^9}, {
   3.720898250887332*^9, 3.7208982596819534`*^9}, {3.720898489372738*^9, 
   3.720898493591878*^9}},ExpressionUUID->"074dd9f2-8fae-424f-966b-\
bd1efa451269"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{$CellContext`n1234x5, $CellContext`n12345, $CellContext`n1235x4, \
$CellContext`n123x45, $CellContext`n1245x3, $CellContext`n124x35, \
$CellContext`n125x34, $CellContext`n12x345, $CellContext`n1345x2, \
$CellContext`n134x25, $CellContext`n135x24, $CellContext`n13x245, \
$CellContext`n145x23, $CellContext`n14x235, $CellContext`n15x234, \
$CellContext`n1x2345, $CellContext`n12x34x5, $CellContext`n13x24x5, \
$CellContext`n14x23x5, $CellContext`n123x4x5, $CellContext`n124x3x5, \
$CellContext`n134x2x5, $CellContext`n1x234x5, $CellContext`n12x35x4, \
$CellContext`n13x25x4, $CellContext`n15x23x4, $CellContext`n125x3x4, \
$CellContext`n135x2x4, $CellContext`n1x235x4, $CellContext`n12x3x45, \
$CellContext`n13x2x45, $CellContext`n1x23x45, $CellContext`n14x25x3, \
$CellContext`n15x24x3, $CellContext`n145x2x3, $CellContext`n1x245x3, \
$CellContext`n14x2x35, $CellContext`n1x24x35, $CellContext`n15x2x34, \
$CellContext`n1x25x34, $CellContext`n1x2x345, $CellContext`n12x3x4x5, \
$CellContext`n1x2x34x5, $CellContext`n1x2x35x4, $CellContext`n1x2x3x45, \
$CellContext`n13x2x4x5, $CellContext`n1x24x3x5, $CellContext`n1x25x3x4, \
$CellContext`n14x2x3x5, $CellContext`n1x23x4x5, $CellContext`n15x2x3x4, \
$CellContext`n1x2x3x4x5}, {CompressedData["
1:eJwVxdV5hTAYAFDyhwBBg7u7WybpCHeBrtRR2z6c79Sf768PCILw8+d/BBhE
ICCBDApQUEEDHQwwwQIGNnKQizzkowCFKMIxTrCHU5zhHBdiKVaiJxakJg3x
SUpa0pFI6qVB8iVbHuVJTmVbiZRCmZWS9nSkAc1oS2caq7U6qYHqaI02aJnm
6LFe6p3uGolRGa3hmrXZm7mZWI01WqFVsYFNLGQ569jMFnu1l2iLlmIvDud0
jviKj3Ivb/dx7/qq737r3+RJ3uZs3nEdn2qvzmEbrmmdFu/wHm/xb//0l/RN
r/QI7mANjuzNtuxu33Zvn/AM1/DJr3zLz+7q9m6dt3mf+cIPfvOXP/zkF1/5
xvdfSYYjbw==
       "], Null}, {
      AspectRatio -> 1, GraphLayout -> "LayeredDigraphEmbedding", 
       VertexLabels -> {$CellContext`n1x24x35 -> Tooltip[
           Style[
            Rotate[37, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,5", 2 -> "2,4", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[168, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x168== x22038(Greater) + 43908 (Greater)"]], \
$CellContext`n1x23x4x5 -> Tooltip[
           Style[
            Rotate[192, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2,3", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[486, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x23x45 -> Tooltip[
           Style[
            Rotate[65, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4,5", 2 -> "2,3", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[488, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x34x5 -> Tooltip[
           Style[
            Rotate[98, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "5", 2 -> "3,4", 1 -> "1,2"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[39384, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x2x35 -> Tooltip[
           Style[
            Rotate[44, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,5", 2 -> "2", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[4380, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x4380== x24144(Greater) + 43908 (Greater)"]], \
$CellContext`n15x2x3x4 -> Tooltip[
           Style[
            Rotate[240, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[1458, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1234x5 -> Tooltip[
           Style[
            Rotate[32, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {2 -> "5", 1 -> "1,2,3,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[57528, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n15x2x34 -> Tooltip[
           Style[
            Rotate[98, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,4", 2 -> "2", 1 -> "1,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[1476, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x3x4x5 -> 
         Tooltip[
           Style[
            Rotate[240, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "3", 1 -> "1,2"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[39366, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x35x4 -> 
         Tooltip[
           Style[
            Rotate[140, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n125x3x4 -> Tooltip[
           Style[
            Rotate[99, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "4", 2 -> "3", 1 -> "1,2,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[40878, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x2x45 -> Tooltip[
           Style[
            Rotate[56, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4,5", 2 -> "2", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[13124, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x245 -> Tooltip[
           Style[
            Rotate[20, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {2 -> "2,4,5", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[13340, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x13340== x36194(GreaterEqual) + 59048 \
(Greater)"]], $CellContext`n13x25x4 -> Tooltip[
           Style[
            Rotate[55, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,5", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[13176, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x13176== x33834(GreaterEqual) + 54492 \
(Greater)"]], $CellContext`n12x35x4 -> Tooltip[
           Style[
            Rotate[58, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "4", 2 -> "3,5", 1 -> "1,2"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[39372, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x245x3 -> Tooltip[
           Style[
            Rotate[59, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 2 -> "2,4,5", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[218, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n135x24 -> Tooltip[
           Style[
            Rotate[21, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {2 -> "2,4", 1 -> "1,3,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[14748, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x14748== x36898(GreaterEqual) + 59048 \
(Greater)"]], $CellContext`n1245x3 -> Tooltip[
           Style[
            Rotate[34, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {2 -> "3", 1 -> "1,2,4,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[45416, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x3x45 -> 
         Tooltip[
           Style[
            Rotate[192, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 4 -> "4,5", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n145x2x3 -> Tooltip[
           Style[
            Rotate[82, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1,4,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[5834, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x25x34 -> Tooltip[
           Style[
            Rotate[93, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,4", 2 -> "2,5", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[72, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x345 -> Tooltip[
           Style[
            Rotate[27, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {2 -> "3,4,5", 1 -> "1,2"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[39392, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x25x3 -> Tooltip[
           Style[
            Rotate[55, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 2 -> "2,5", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[4428, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x4428== x24922(GreaterEqual) + 45416 \
(Greater)"]], $CellContext`n1x2x34x5 -> Tooltip[
           Style[
            Rotate[260, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3,4", 4 -> "5", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[18, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n134x2x5 -> Tooltip[
           Style[
            Rotate[64, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {3 -> "5", 2 -> "2", 1 -> "1,3,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[17514, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x23x5 -> Tooltip[
           Style[
            Rotate[56, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {3 -> "5", 2 -> "2,3", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[4860, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12345 -> Tooltip[
           Style[
            Rotate[16, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}}, 
               VertexLabels -> {1 -> "1,2,3,4,5"}, VertexSize -> {0.1}, 
               VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[59048, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n15x234 -> Tooltip[
           Style[
            Rotate[27, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {2 -> "2,3,4", 1 -> "1,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[2124, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x235 -> Tooltip[
           Style[
            Rotate[20, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {2 -> "2,3,5", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[4920, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x4920== x31984(GreaterEqual) + 59048 \
(Greater)"]], $CellContext`n15x24x3 -> Tooltip[
           Style[
            Rotate[58, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 2 -> "2,4", 1 -> "1,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[1620, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x3x4x5 -> 
         Tooltip[
           Style[
            Rotate[628, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {
                3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[0, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n12x3x45 -> Tooltip[
           Style[
            Rotate[73, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "4,5", 2 -> "3", 1 -> "1,2"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[39368, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n123x4x5 -> Tooltip[
           Style[
            Rotate[82, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 
                1.}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "5", 2 -> "4", 1 -> "1,2,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[52974, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n124x3x5 -> Tooltip[
           Style[
            Rotate[68, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "5", 2 -> "3", 1 -> "1,2,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[43902, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x24x5 -> Tooltip[
           Style[
            Rotate[44, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {3 -> "5", 2 -> "2,4", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[13284, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x13284== x35406(GreaterEqual) + 57528 \
(Greater)"]], $CellContext`n1x2345 -> Tooltip[
           Style[
            Rotate[27, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {2 -> "2,3,4,5", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[728, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n14x2x3x5 -> 
         Tooltip[
           Style[
            Rotate[164, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[4374, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n15x23x4 -> Tooltip[
           Style[
            Rotate[73, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,3", 1 -> "1,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[1944, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x2x345 -> Tooltip[
           Style[
            Rotate[68, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3,4,5", 2 -> "2", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[26, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x234x5 -> Tooltip[
           Style[
            Rotate[68, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {3 -> "5", 2 -> "2,3,4", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[666, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n124x35 -> Tooltip[
           Style[
            Rotate[21, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {2 -> "3,5", 1 -> "1,2,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[43908, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x43908== x51478(GreaterEqual) + 59048 \
(Greater)"]], $CellContext`n123x45 -> Tooltip[
           Style[
            Rotate[28, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 
                1.}, {-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {2 -> "4,5", 1 -> "1,2,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[52976, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n145x23 -> Tooltip[
           Style[
            Rotate[28, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {2 -> "2,3", 1 -> "1,4,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[6320, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n13x2x4x5 -> 
         Tooltip[
           Style[
            Rotate[164, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[13122, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x24x3x5 -> 
         Tooltip[
           Style[
            Rotate[140, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
               VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[162, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n135x2x4 -> Tooltip[
           Style[
            Rotate[68, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2", 1 -> "1,3,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[14586, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x25x3x4 -> 
         Tooltip[
           Style[
            Rotate[205, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {
                0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[54, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1345x2 -> Tooltip[
           Style[
            Rotate[32, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {2 -> "2", 1 -> "1,3,4,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[18980, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1235x4 -> Tooltip[
           Style[
            Rotate[34, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 
                1.}, {-0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {2 -> "4", 1 -> "1,2,3,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[54492, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n134x25 -> Tooltip[
           Style[
            Rotate[25, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}}, 
               VertexLabels -> {2 -> "2,5", 1 -> "1,3,4"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[17568, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "The relation holds x17568== x38308(GreaterEqual) + 59048 \
(Greater)"]], $CellContext`n125x34 -> Tooltip[
           Style[
            Rotate[42, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {
                0.5877852522924731, -0.8090169943749475}}, 
               VertexLabels -> {2 -> "3,4", 1 -> "1,2,5"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[40896, 
              RGBColor[0, 
               Rational[2, 3], 0]]], 
            "This is a planar contraction"]], $CellContext`n1x235x4 -> Tooltip[
           Style[
            Rotate[59, Rational[1, 4] Pi], 
            RGBColor[1, 0, 0], Bold, 14], 
           Labeled[
            Labeled[
             Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                 RGBColor[0, 
                  Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
               VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,3,5", 1 -> "1"}, 
               VertexSize -> {0.1}, VertexStyle -> {
                 RGBColor[1, 0, 0]}}], 
             Style[546, 
              RGBColor[0, 
               Rational[2, 3], 0]]], "This is a planar contraction"]]}, 
       VertexStyle -> {$CellContext`n1245x3 -> 
         RGBColor[0, 1, 0], $CellContext`n12345 -> 
         RGBColor[0, 1, 0], $CellContext`n15x2x3x4 -> 
         RGBColor[0, 1, 0], $CellContext`n13x25x4 -> 
         RGBColor[0, 1, 0], $CellContext`n12x3x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n15x24x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x23x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n14x25x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x245x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x25x34 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2345 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x35x4 -> 
         RGBColor[0, 1, 0], $CellContext`n1x235x4 -> 
         RGBColor[0, 1, 0], $CellContext`n13x24x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x24x35 -> 
         RGBColor[0, 1, 0], $CellContext`n14x23x5 -> 
         RGBColor[0, 1, 0], $CellContext`n12x35x4 -> 
         RGBColor[0, 1, 0], $CellContext`n15x234 -> 
         RGBColor[0, 1, 0], $CellContext`n13x2x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n123x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n125x34 -> 
         RGBColor[0, 1, 0], $CellContext`n12x3x45 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x3x45 -> 
         RGBColor[0, 1, 0], $CellContext`n134x2x5 -> 
         RGBColor[0, 1, 0], $CellContext`n124x3x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x34x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x3x4x5 -> 
         RGBColor[0, 1, 0], $CellContext`n12x34x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1x23x45 -> 
         RGBColor[0, 1, 0], $CellContext`n13x245 -> 
         RGBColor[0, 1, 0], $CellContext`n14x235 -> 
         RGBColor[0, 1, 0], $CellContext`n1x2x345 -> 
         RGBColor[0, 1, 0], $CellContext`n14x2x35 -> 
         RGBColor[0, 1, 0], $CellContext`n15x23x4 -> 
         RGBColor[0, 1, 0], $CellContext`n124x35 -> 
         RGBColor[0, 1, 0], $CellContext`n134x25 -> 
         RGBColor[0, 1, 0], $CellContext`n1234x5 -> 
         RGBColor[0, 1, 0], $CellContext`n145x23 -> 
         RGBColor[0, 1, 0], $CellContext`n123x45 -> 
         RGBColor[0, 1, 0], $CellContext`n135x24 -> 
         RGBColor[0, 1, 0], $CellContext`n145x2x3 -> 
         RGBColor[0, 1, 0], $CellContext`n1x25x3x4 -> 
         RGBColor[0, 1, 0], $CellContext`n1x24x3x5 -> 
         RGBColor[0, 1, 0], $CellContext`n125x3x4 -> 
         RGBColor[0, 1, 0], $CellContext`n15x2x34 -> 
         RGBColor[0, 1, 0], $CellContext`n12x345 -> 
         RGBColor[0, 1, 0], $CellContext`n1x234x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1345x2 -> 
         RGBColor[0, 1, 0], $CellContext`n135x2x4 -> 
         RGBColor[0, 1, 0], $CellContext`n13x2x45 -> 
         RGBColor[0, 1, 0], $CellContext`n14x2x3x5 -> 
         RGBColor[0, 1, 0], $CellContext`n1235x4 -> RGBColor[0, 1, 0]}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.010098916887693297`], 
        ArrowBox[{{0., 1.}, {2.9999999999849365`, 0.}}, 0.09694960212210157], 
        ArrowBox[{{1.999999999989086, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000043144, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.000000000005173, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.999999999994202, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000047521, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.000000000008356, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.999999999998181, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000011141, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{1.00000000000108, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.9999999999787406, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000054456`, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{-1.9999999999932356`, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000053092`, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000008015, 1.}, {2.9999999999849365`, 0.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.000000000028422, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{6.000000000028422, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.000000000028422, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-5.0000000000056275`, 2.}, {0., 1.}}, 0.09694960212210157],
         ArrowBox[{{-5.0000000000056275`, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-5.0000000000056275`, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-1.0000000000067644`, 2.}, {0., 1.}}, 0.09694960212210157],
         ArrowBox[{{-1.0000000000067644`, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-1.0000000000067644`, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.000000000004377, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{2.000000000004377, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.000000000004377, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.000000000008299, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{-3.000000000008299, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.000000000008299, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-7.000000000008015, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{-7.000000000008015, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-7.000000000008015, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{9.000000000055252, 2.}, {0., 1.}}, 0.09694960212210157], 
        ArrowBox[{{9.000000000055252, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{9.000000000055252, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.0000000000073896`, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.0000000000073896`, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-2.0000000000073896`, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000010914, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000010914, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-6.000000000010914, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{15.00000000005133, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{15.00000000005133, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{15.00000000005133, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000044281, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000044281, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{8.000000000044281, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.1032064978498966`*^-12, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.1032064978498966`*^-12, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.1032064978498966`*^-12, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.9999999999945999, 2.}, {1.999999999989086, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.9999999999945999, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.9999999999945999, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{10.000000000044224`, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{10.000000000044224`, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{10.000000000044224`, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.9999999999953957`, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.9999999999953957`, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.9999999999953957`, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{13.000000000052694`, 2.}, {7.000000000043144, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{13.000000000052694`, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{13.000000000052694`, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-8.0000000000108, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-8.0000000000108, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-8.0000000000108, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000050932`, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000050932`, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{12.000000000050932`, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000045418`, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000045418`, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000045418`, 2.}, {11.000000000054456`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.00000000002467, 2.}, {6.000000000005173, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.00000000002467, 2.}, {-0.9999999999787406, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.00000000002467, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-9.00000000000955, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-9.00000000000955, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-9.00000000000955, 2.}, {-1.9999999999932356`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-4.000000000002899, 2.}, {-2.999999999994202, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-4.000000000002899, 2.}, {1.00000000000108, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{-4.000000000002899, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{14.000000000050875`, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{14.000000000050875`, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{14.000000000050875`, 2.}, {12.000000000053092`, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000015348, 2.}, {8.000000000047521, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000015348, 2.}, {-6.000000000011141, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.000000000015348, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000022794, 2.}, {5.000000000008356, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000022794, 2.}, {2.999999999998181, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.000000000022794, 2.}, {4.000000000008015, 1.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {6.000000000028422, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {2.000000000004377, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {-3.000000000008299, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {-2.0000000000073896`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {8.000000000044281, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{4.3727600233632415`, 3.}, {10.000000000044224`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {6.000000000028422, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {-7.000000000008015, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {9.000000000055252, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {14.000000000050875`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {4.000000000015348, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{5.372760023366482, 3.}, {7.000000000022794, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {-2.0000000000073896`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {2.1032064978498966`*^-12, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {0.9999999999945999, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {-9.00000000000955, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {-4.000000000002899, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{0.289838800390271, 3.}, {7.000000000022794, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {10.000000000044224`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {2.9999999999953957`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {13.000000000052694`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {11.000000000045418`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {5.00000000002467, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{7.372760023365004, 3.}, {7.000000000022794, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {-5.0000000000056275`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {2.000000000004377, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {-7.000000000008015, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {-6.000000000010914, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {2.1032064978498966`*^-12, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-0.710161199606091, 3.}, {2.9999999999953957`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {-5.0000000000056275`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {-3.000000000008299, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {9.000000000055252, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {12.000000000050932`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {5.00000000002467, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.372760023364833, 3.}, {-4.000000000002899, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {-6.000000000010914, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {8.000000000044281, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {0.9999999999945999, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {-8.0000000000108, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {5.00000000002467, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{2.372760023366652, 3.}, {4.000000000015348, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-1.0000000000067644`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-3.000000000008299, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-7.000000000008015, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-8.0000000000108, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {11.000000000045418`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{-3.0000000000096065`, 3.}, {-9.00000000000955, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {-1.0000000000067644`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {2.000000000004377, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {9.000000000055252, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {15.00000000005133, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {0.9999999999945999, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{6.372760023364265, 3.}, {13.000000000052694`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {15.00000000005133, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {8.000000000044281, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {2.1032064978498966`*^-12, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {12.000000000050932`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {11.000000000045418`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{11.000000000046157`, 3.}, {14.000000000050875`, 2.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {4.3727600233632415`, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {5.372760023366482, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {0.289838800390271, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {7.372760023365004, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {-0.710161199606091, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {3.372760023364833, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {2.372760023366652, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {-3.0000000000096065`, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {6.372760023364265, 3.}}, 
         0.09694960212210157], 
        ArrowBox[{{3.840715577974777, 4.}, {11.000000000046157`, 3.}}, 
         0.09694960212210157]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
         {RGBColor[0, 1, 0], DiskBox[{0., 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["32",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {2 -> "5", 1 -> "1,2,3,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,2,3,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["57528", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {2 -> "5", 1 -> "1,2,3,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[57528, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {0.09694960212210157, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.9999999999849365, 0.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["16",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}}, 
                    VertexLabels -> {1 -> "1,2,3,4,5"}, VertexSize -> {0.1}, 
                    VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.05], 
                    InsetBox[
                    FormBox["\"1,2,3,4,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.05, 1.05}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, PlotRangePadding -> 0.1, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["59048", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}}, 
                VertexLabels -> {1 -> "1,2,3,4,5"}, VertexSize -> {0.1}, 
                VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[59048, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.096949602107038, 0.09694960212210157}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{1.999999999989086, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["34",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {2 -> "4", 1 -> "1,2,3,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.09510565162951536], 
                    InsetBox[
                    FormBox["\"1,2,3,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.09510565162951536, 
                    1.0951056516295155`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.09510565162951536], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.4926796006629578, -0.7139113427454321}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["54492", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 
                 1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {2 -> "4", 1 -> "1,2,3,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[54492, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {2.0969496021111875, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{7.000000000043144, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["28",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {2 -> "4,5", 1 -> "1,2,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.09510565162951536], 
                    InsetBox[
                    FormBox["\"1,2,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.09510565162951536, 
                    1.0951056516295155`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.09510565162951536], 
                    InsetBox[
                    FormBox["\"4,5\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.4926796006629578, -0.7139113427454321}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["52976", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 
                 1.}, {-0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {2 -> "4,5", 1 -> "1,2,3"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[52976, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {7.096949602165246, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{6.000000000005173, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["34",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {2 -> "3", 1 -> "1,2,4,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.09510565162951536], 
                    InsetBox[
                    FormBox["\"1,2,4,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.09510565162951536, 
                    1.0951056516295155`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.09510565162951536], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6828909039219885, -0.7139113427454321}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["45416", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {2 -> "3", 1 -> "1,2,4,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[45416, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {6.096949602127275, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-2.999999999994202, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["21",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {2 -> "3,5", 1 -> "1,2,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.09510565162951536], 
                    InsetBox[
                    FormBox["\"1,2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.09510565162951536, 
                    1.0951056516295155`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.09510565162951536], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6828909039219885, -0.7139113427454321}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["43908", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x43908== x51478(GreaterEqual) + 59048 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {2 -> "3,5", 1 -> "1,2,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[43908, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x43908== x51478(GreaterEqual) + 59048 \
(Greater)"], "Tooltip"]& ], 
          Offset[{2, 2}, {-2.9030503978721005, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{8.000000000047521, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["42",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {2 -> "3,4", 1 -> "1,2,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.09510565162951536], 
                    InsetBox[
                    FormBox["\"1,2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.09510565162951536, 
                    1.0951056516295155`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.09510565162951536], 
                    InsetBox[
                    FormBox["\"3,4\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6828909039219885, -0.7139113427454321}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["40896", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {2 -> "3,4", 1 -> "1,2,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[40896, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {8.096949602169623, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{5.000000000008356, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["27",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {2 -> "3,4,5", 1 -> "1,2"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.09510565162951536], 
                    InsetBox[
                    FormBox["\"1,2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.09510565162951536, 
                    1.0951056516295155`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.09510565162951536], 
                    InsetBox[
                    FormBox["\"3,4,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6828909039219885, -0.7139113427454321}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["39392", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {2 -> "3,4,5", 1 -> "1,2"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[39392, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {5.096949602130458, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.999999999998181, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["32",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {2 -> "2", 1 -> "1,3,4,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3,4,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["18980", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {2 -> "2", 1 -> "1,3,4,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[18980, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.0969496021202825, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-6.000000000011141, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["25",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {2 -> "2,5", 1 -> "1,3,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["17568", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x17568== x38308(GreaterEqual) + 59048 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {2 -> "2,5", 1 -> "1,3,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[17568, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x17568== x38308(GreaterEqual) + 59048 \
(Greater)"], "Tooltip"]& ], Offset[{2, 2}, 
          {-5.903050397889039, 1.0969496021221015}], ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{1.00000000000108, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["21",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {2 -> "2,4", 1 -> "1,3,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["14748", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x14748== x36898(GreaterEqual) + 59048 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {2 -> "2,4", 1 -> "1,3,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[14748, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x14748== x36898(GreaterEqual) + 59048 \
(Greater)"], "Tooltip"]& ], 
          Offset[{2, 2}, {1.0969496021231815, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-0.9999999999787406, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["20",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {2 -> "2,4,5", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["13340", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x13340== x36194(GreaterEqual) + 59048 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {2 -> "2,4,5", 1 -> "1,3"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[13340, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x13340== x36194(GreaterEqual) + 59048 \
(Greater)"], "Tooltip"]& ], 
          Offset[{2, 2}, {-0.903050397856639, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{11.000000000054456, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["28",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {2 -> "2,3", 1 -> "1,4,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6320", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {2 -> "2,3", 1 -> "1,4,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6320, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {11.096949602176558, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-1.9999999999932356, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["20",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {2 -> "2,3,5", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["4920", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x4920== x31984(GreaterEqual) + 59048 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {2 -> "2,3,5", 1 -> "1,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[4920, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x4920== x31984(GreaterEqual) + 59048 \
(Greater)"], "Tooltip"]& ], 
          Offset[{2, 2}, {-1.9030503978711342, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{12.000000000053092, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["27",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {2 -> "2,3,4", 1 -> "1,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2124", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {2 -> "2,3,4", 1 -> "1,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2124, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {12.096949602175194, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{4.000000000008015, 1.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["27",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {2 -> "2,3,4,5", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3,4,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["728", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {2 -> "2,3,4,5", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[728, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {4.096949602130117, 1.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{6.000000000028422, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["98",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {3 -> "5", 2 -> "3,4", 1 -> "1,2"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,4\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["39384", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "5", 2 -> "3,4", 1 -> "1,2"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[39384, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {6.096949602150524, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-5.0000000000056275, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["44",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {3 -> "5", 2 -> "2,4", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["13284", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x13284== x35406(GreaterEqual) + 57528 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "5", 2 -> "2,4", 1 -> "1,3"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[13284, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x13284== x35406(GreaterEqual) + 57528 \
(Greater)"], "Tooltip"]& ], 
          Offset[{2, 2}, {-4.903050397883526, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-1.0000000000067644, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["56",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {3 -> "5", 2 -> "2,3", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["4860", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "5", 2 -> "2,3", 1 -> "1,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[4860, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-0.9030503978846628, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.000000000004377, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["82",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 
                    1.}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {3 -> "5", 2 -> "4", 1 -> "1,2,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,2,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["52974", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 
                 1.}, {-0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "5", 2 -> "4", 1 -> "1,2,3"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[52974, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {2.0969496021264784, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-3.000000000008299, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["68",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {3 -> "5", 2 -> "3", 1 -> "1,2,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["43902", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "5", 2 -> "3", 1 -> "1,2,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[43902, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-2.9030503978861977, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-7.000000000008015, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["64",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {3 -> "5", 2 -> "2", 1 -> "1,3,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["17514", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "5", 2 -> "2", 1 -> "1,3,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[17514, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-6.903050397885913, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{9.000000000055252, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["68",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {3 -> "5", 2 -> "2,3,4", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["666", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "5", 2 -> "2,3,4", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[666, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {9.096949602177354, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-2.0000000000073896, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["58",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "4", 2 -> "3,5", 1 -> "1,2"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["39372", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "4", 2 -> "3,5", 1 -> "1,2"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[39372, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-1.9030503978852882, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-6.000000000010914, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["55",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,5", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["13176", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x13176== x33834(GreaterEqual) + 54492 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,5", 1 -> "1,3"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[13176, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x13176== x33834(GreaterEqual) + 54492 \
(Greater)"], "Tooltip"]& ], 
          Offset[{2, 2}, {-5.903050397888812, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{15.00000000005133, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["73",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,3", 1 -> "1,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["1944", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,3", 1 -> "1,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[1944, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {15.096949602173432, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{8.000000000044281, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["99",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "4", 2 -> "3", 1 -> "1,2,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["40878", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "4", 2 -> "3", 1 -> "1,2,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[40878, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {8.096949602166383, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.1032064978498966*^-12, 2.}, 0.09694960212210157]}, 
         InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["68",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2", 1 -> "1,3,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["14586", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2", 1 -> "1,3,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[14586, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {0.09694960212420478, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.9999999999945999, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["59",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,3,5", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["546", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4", 2 -> "2,3,5", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[546, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {1.0969496021167013, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{10.000000000044224, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["73",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "4,5", 2 -> "3", 1 -> "1,2"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4,5\"", TraditionalForm], 
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["39368", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "4,5", 2 -> "3", 1 -> "1,2"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[39368, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {10.096949602166326, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.9999999999953957, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["56",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4,5", 2 -> "2", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4,5\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["13124", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4,5", 2 -> "2", 1 -> "1,3"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[13124, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.096949602117497, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{13.000000000052694, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["65",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4,5", 2 -> "2,3", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4,5\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["488", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}}, VertexLabels -> {3 -> "4,5", 2 -> "2,3", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[488, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {13.096949602174796, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-8.0000000000108, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["55",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3", 2 -> "2,5", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["4428", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x4428== x24922(GreaterEqual) + 45416 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3", 2 -> "2,5", 1 -> "1,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[4428, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x4428== x24922(GreaterEqual) + 45416 \
(Greater)"], "Tooltip"]& ], 
          Offset[{2, 2}, {-7.903050397888698, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{12.000000000050932, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["58",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3", 2 -> "2,4", 1 -> "1,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["1620", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3", 2 -> "2,4", 1 -> "1,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[1620, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {12.096949602173034, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{11.000000000045418, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["82",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1,4,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["5834", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3", 2 -> "2", 1 -> "1,4,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[5834, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {11.09694960216752, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{5.00000000002467, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["59",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3", 2 -> "2,4,5", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["218", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3", 2 -> "2,4,5", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[218, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {5.096949602146772, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-9.00000000000955, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["44",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3,5", 2 -> "2", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["4380", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x4380== x24144(Greater) + 43908 (Greater)\
\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3,5", 2 -> "2", 1 -> "1,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[4380, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x4380== x24144(Greater) + 43908 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-8.903050397887448, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-4.000000000002899, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["37",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3,5", 2 -> "2,4", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["168", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"The relation holds x168== x22038(Greater) + 43908 \
(Greater)\""}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3,5", 2 -> "2,4", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[168, 
               RGBColor[0, 
                Rational[2, 3], 0]]], 
             "The relation holds x168== x22038(Greater) + 43908 (Greater)"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-3.9030503978807976, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{14.000000000050875, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["98",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3,4", 2 -> "2", 1 -> "1,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,4\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["1476", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3,4", 2 -> "2", 1 -> "1,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[1476, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {14.096949602172977, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{4.000000000015348, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["93",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3,4", 2 -> "2,5", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,4\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["72", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3,4", 2 -> "2,5", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[72, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {4.09694960213745, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{7.000000000022794, 2.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["68",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {3 -> "3,4,5", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,4,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["26", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3,4,5", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[26, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {7.096949602144896, 2.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{4.3727600233632415, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["240",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "4", 4 -> "5", 2 -> "3", 1 -> "1,2"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["39366", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "3", 1 -> "1,2"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[39366, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {4.4697096254853435, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{5.372760023366482, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["260",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3,4", 4 -> "5", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,4\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["18", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "3,4", 4 -> "5", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[18, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {5.4697096254885835, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{0.289838800390271, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["140",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3,5\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["6", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3,5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[6, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {0.38678840251237256, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{7.372760023365004, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["192",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "4,5", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4,5\"", TraditionalForm], 
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["2", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3", 4 -> "4,5", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[2, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {7.469709625487106, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-0.710161199606091, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["164",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["13122", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2", 1 -> "1,3"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[13122, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-0.6132115974839895, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{3.372760023364833, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["140",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["162", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2,4", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[162, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.4697096254869346, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{2.372760023366652, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["205",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["54", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2,5", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[54, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {2.4697096254887536, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{-3.0000000000096065, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["164",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,4\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["4374", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.9510565162951535, 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "3", 4 -> "5", 2 -> "2", 1 -> "1,4"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[4374, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {-2.903050397887505, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{6.372760023364265, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["192",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "4", 4 -> "5", 2 -> "2,3", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2,3\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["486", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {-0.5877852522924731, \
-0.8090169943749475}, {-0.9510565162951535, 0.30901699437494745`}}, 
                VertexLabels -> {3 -> "4", 4 -> "5", 2 -> "2,3", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[486, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {6.469709625486367, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{11.000000000046157, 3.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["240",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                    VertexLabels -> {
                    3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1,5"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1,5\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["1458", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}}, 
                VertexLabels -> {3 -> "3", 4 -> "4", 2 -> "2", 1 -> "1,5"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[1458, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {11.096949602168259, 3.0969496021221015}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         {RGBColor[0, 1, 0], 
          DiskBox[{3.840715577974777, 4.}, 0.09694960212210157]}, InsetBox[
          TagBox[
           TooltipBox[
            StyleBox[
             RotationBox["628",
              BoxRotation->0.7853981633974483],
             StripOnInput->False,
             LineColor->RGBColor[1, 0, 0],
             FrontFaceColor->RGBColor[1, 0, 0],
             BackFaceColor->RGBColor[1, 0, 0],
             GraphicsColor->RGBColor[1, 0, 0],
             FontSize->14,
             FontWeight->Bold,
             FontColor->RGBColor[1, 0, 0]],
            TemplateBox[{
              TemplateBox[{
                GraphicsBox[
                 NamespaceBox["NetworkGraphics", 
                  DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                    RGBColor[0, 
                    Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                    VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                    0.30901699437494745`}, {
                    0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                    0.30901699437494745`}}, 
                    VertexLabels -> {
                    3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                    VertexSize -> {0.1}, VertexStyle -> {
                    RGBColor[1, 0, 0]}}]]}, 
                   TagBox[
                    GraphicsGroupBox[{{}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    RGBColor[1, 0, 0], {
                    DiskBox[{0., 1.}, 0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {0.058778525229247314`, 
                    1.0587785252292474`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{2, 2}, {1.0098350415244008`, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{2, 2}, {0.6465637775217205, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.5877852522924731, -0.8090169943749475}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{2, 
                    2}, {-0.5290067270632258, -0.7502384691457001}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
                    
                    DiskBox[{-0.9510565162951535, 0.30901699437494745`}, 
                    0.058778525229247314`], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{2, 2}, {-0.8922779910659062, 
                    0.36779551960419476`}], 
                    ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
                    MouseAppearanceTag["NetworkGraphics"]], 
                   AllowKernelInitialization -> False]], {
                 FormatType -> TraditionalForm, FrameTicks -> None, 
                  ImageSize -> {50, 50}, 
                  DefaultBaseStyle -> {
                   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]}}], 
                StyleBox["0", 
                 RGBColor[0, 
                  Rational[2, 3], 0], StripOnInput -> False]}, "Labeled", 
               DisplayFunction -> (FormBox[
                 GridBox[{{
                    TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"]}, {
                    ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                  False, GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  BaselinePosition -> {1, 1}], TraditionalForm]& ), 
               InterpretationFunction -> (RowBox[{"Labeled", "[", 
                  RowBox[{#, ",", #2}], "]"}]& )], 
              "\"This is a planar contraction\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{"Labeled", "[", 
                RowBox[{#, ",", #2}], "]"}]& )]],
           Annotation[#, 
            Labeled[
             Labeled[
              Graph[{1, 2, 3, 4, 5}, {}, {EdgeStyle -> {
                  RGBColor[0, 
                   Rational[4, 9], 0]}, ImageSize -> {50, 50}, 
                VertexCoordinates -> {{0., 1.}, {0.9510565162951535, 
                 0.30901699437494745`}, {
                 0.5877852522924731, -0.8090169943749475}, \
{-0.5877852522924731, -0.8090169943749475}, {-0.9510565162951535, 
                 0.30901699437494745`}}, 
                VertexLabels -> {
                 3 -> "3", 5 -> "5", 4 -> "4", 2 -> "2", 1 -> "1"}, 
                VertexSize -> {0.1}, VertexStyle -> {
                  RGBColor[1, 0, 0]}}], 
              Style[0, 
               RGBColor[0, 
                Rational[2, 3], 0]]], "This is a planar contraction"], 
            "Tooltip"]& ], 
          Offset[{2, 2}, {3.9376651800968783, 4.096949602122102}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AspectRatio->1,
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{919.7777777777783, Automatic}]], "Output",
 CellChangeTimes->{{3.720897677839465*^9, 3.7208976935908194`*^9}, 
   3.7208977344826174`*^9, 3.7208977851498146`*^9, 3.7208978218882785`*^9, 
   3.720897876364879*^9, 3.720898024297272*^9, 3.720898261051751*^9, 
   3.720898344987789*^9, 3.720898405367107*^9, 3.7208984967822065`*^9, 
   3.7208998499498377`*^9, 3.7209284879802704`*^9, 3.7209532559039793`*^9, 
   3.720953572165723*^9, 3.7210558245857477`*^9, 3.721157169695305*^9, 
   3.7212075415022345`*^9, 3.7212284245869417`*^9, 3.721229571605755*^9, 
   3.7212299189630795`*^9, 3.72124430251147*^9, 3.721244488697135*^9, 
   3.7212452652713995`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
OWvzv29Sr53Q+gRY5cidTPIYQWyuckUWqyZncfZEuQ8+NkuhYpZqJ2dx7ppy
0Cw2iyWLttEpJ8vvml13TO9Ji7Y1SS6xsXOOsmbvg6OvOFFL4sxcqZg+ZT9x
RWrKtSC5Fe46CREdKUzOot3AXJqc5aogfpHrRQ83rOLY3WGG1U4yUgMc7Q4c
OPDuUe2OQppUnvlvvlfIgVfyzN+VlczLJhARah8+b7GCX41K5k0rWrNWJfPm
xWpoLW+a5/VtbRhf18Hq/Wr1HDvNTpMbVbJNLt0pL73+7sGa1zSMTWdFLc2n
vlR2Kl9JX1fR33mVbFOtMLZ+cpj+9zgl9FdxJfNeJf0KUrLVKpndXTwePdZb
WWYNEsKDx/iZJ/82vTjdet7ieSZFtVAbv+zxqkpmL5GW0MhPtUrmLVKsaM1K
5i1QZK92JfPmxVoNLW+a5/XRu4bxdf0jf1HB/aMmTuRycdg20QrcU08/85eK
PjVj0zn54UsxVDbJj0jPjlN77y+vkm2qrchAQSXzandTF1Uyb/Mwtj6eWbWS
eYtDm70tqF7JvFJyrl+8eHEGYS+WPJPamZrQcXBHk4K9stjf+9m8knmLA/X9
3oXqlczrDKp2G/dh8zpnXYRT68TmLRJ5sx9hcurF5ktTPm3D6mHb2Oh7TufC
k+QZUfp8JantUqGY82c/SVm0e6XyK9kyN2qiusJK5nX7uqOrd1Uqmb1EZqcr
+apWMrsUlYH9xvbLYGeqSP5BasOlnWwQ2LYqZ03xmkpmZ4Yi+qKhw+ZNB8ZH
r/s8bF43jtrNUUreQpE3+yEDUz82SwFlIU+/USVb9n2nczJCLab0+UpSJyNi
qTv7Scqi3R+WX8mWsWClj9cWVjKvtru6vJJ5XQhd3O9ZUcm8UjoW3tjzxgwO
oYvkX6dePLnlyayqnNuXWlQye2Ewl351qmYl8xYEdP0yYZ1K5nVuhHahjpK3
kOflBx7qx2YpoCwkgI0q2bLvOx3bFQdrRunzlaS2N2mu0im5ml67RSivks1i
t/36TR3pSua9LqhUvyhfVsm87BVx/HK68kpml9LBYwCE0NvHtDzGryGVBHr7
haKWlczLZgl+52OtSubV4pp1YvMW8rxc0dWLzVJAWSiU2yC+Ze8cfd3RKzo+
sJDvEjxsDxr+z6SDGn7hlBtPR1rIaE46F0DnFoLKVtO7iJ3YGcHyaFm0K+EL
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
paUTFPRhKwDFMBuk4UjsaeiDvMhFSnefU/QOlJ/b2viriP36ijvb4UHISrym
9ZCKJsd0lYZ3mI3gBi2RsyvF9YgigOgFr+PQN2Xl8MO6W/XdI9jGyNHhYi6c
dAANpwbpLJTbp0GdgBdNDovviFXUOdcVNgi1+htjrb9bwWMh6A/V+nCHQeYV
inT9H1rH5+Uu7E46HH9BX6HHnUut7HksPvGrN95C2me+PfMsKuObfxYWbVh4
10AMBdswhuzs8Hvh+58cfzKSH5t56y2ip/FybN/JUSPrwd4AQ69PBCTuZDvX
yLQeSvFdpCARNa6gXfLwERksdyBsSmvMTuLpfiF+IB9FfPCH405GdBqRmb9n
FQx11YVToltpaT+9u+yJR5hpPLCjZO0dg5bQiii9dvKtzLHHgn+0ssVfGekt
GHM4TMNp7QhbBFEv9uIjo4kA2dHokRk6FD0xARV2egvJsO4TrikRL57yod38
YAXp1ZR4W8WH5948envrnvNev/SOyUvvGbb8lpVb6GruElS3M3P66ajyu3+k
CwHeTV8sW8W3SpHm5mFT8mAiNwxW4XNomu9k072A8ST+YqzJHTc+s9PJIoLn
bJ04d2BhqkLCfcaLb3xI4kLQ3Xtg0nSqX0Q72RsjfMxNu2nT7DHPA+9TaegV
OOEo+PG1rTqz6EkhX9znm8jc+KB9qBujTAufpMrIOSTuAwsSNPzmFjVFqMFu
fTdLBLRpA8Nwmq0NPcJ+N6rNZLO1VZAHkajXMmFtyi/b2n6CZOgn5AB7VUiL
ur4Yx37/7ldoLEnXfPnPqlUB331CLQurm5creNQO/DU+TMZdGuP2BqFEH1DI
fqhPqDU6K0m5LfR0iJBOoLA4hJdV+8xc+Mbnx+S34b4kQIrwIckl9De2Y0NL
BgdK6Gs8ASYYW5gtV00VPtU1es+pnDEPTd2AvJiw4dl9X4ybhH/32T/S7/Cl
RQV2fqKQ5oj4oNzXPz/5VOTLM5Xmo3o/NXWUh2qI7KHLb7XusVeev7bLDDuw
9hmp6opvvyI3pmhotvqnZrfuTraURNl0pUpw1l677M5JSzsPXYkBdu48kuCn
hd1GrASRkG3PV6eaqxFIA/X/w/AxDmM6X0bbJF3jlYu9Sng0nJxW8mRQDGNR
CZ9JwoejMA6FQYx3x+IzkAjcAYhd2e6tbrhkCqv7tG2JmEKTV1ZdmleHDwSQ
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
PfmKhRrOZ4lAqAoEaIJLM/vNz9ENhJwsYSl9ldr/+srnL5wTeIWnRc1OH/rm
tcvmTV6wi5bCQ1I1OKkN2HNN/Nh9wcQ1V6ze/rh3g+XX6cK3ZNxs05XNXLZB
FDz31dDg71+YVYqffvL5N14/Yejs9SOnb9ILex9HdEB+OBW4UwkoFhqqu8rT
I7zZRPm0tI3+m34PvwtLJxn6s0+cc9uRP/vl2/wZz4Qy4ogJf9fIWzaOn7/u
IfydOej8mX98/LtvvPSli+dSHT5tDBROa3KqpwW8vnf8mZP3P/oygeDsvHji
GjHDXcRLPtiuu4THp0NNvIJanOZGiW2UM+KWbw52yOKRCtaqstOeaq8O0ZTS
Q1bkxuFTN5B/UTaaltQ9zcXhv94dySC2tCLBNEdNoelXgJ2lN8OMIUOch959
tpuJ77n0hnUJLPe6UdM2/fjT585azJIfjsJTp115J/IDEWzfeeNWURihgqoP
h31VtxwiOSKru3bR3Qe2Xzp5ffgvnplEsRZMnLeTdBMPSfT+zqlXLiJZIOAx
pHjnT1qwS6B+vHgZvz5x7toH6HH8Hc1S4f35d9SGnZpPAr1LWPD1na+NuHPG
9GWBpfvEnddLoVyyN+59ettlk9ejcPVsRK/bL13kCeQCtXA3gVdeum7nU/gu
1Ve+dsLQ28/a8QDbWOF24fEyj0y4hiS1wiy848x07TbnN735qSG3jVl090Gg
q7E4PBHuHXsW17fctvxeaqBD7RPjkMqGElfkg+76DsCilQYBkNKza3EiVIzN
NDieBHUXe/FJfteo6I9nh/kUZ4jkMAMjaQ4GuU+IcMzdGMsnw/mIcslGJA4L
AYeNJgwB62pSdzZ0UW5EI7vvhdR+N2wVu6cQE4IA7QiJhzIkEpjz4C/gHRMT
m9gLWgiYDe8dt0vi4CT+g2UE4uGubkM6yEu+38muS8DH2JiQ2kM0/dregy/Q
eJyng05L8TxJZokLHAC7TMoWCWsCCtBSg+AkySEgfdZpW2k8VDv08wksa8PB
7+WwAjsYaGPpUNsib3uc2NA3nt/eVi0QvIU8Rz93XyA3gXwJPHRX9+/2Dr1+
FVnHeGiMnAFfiNqwfNEnW2Hp2NnbQVV4aaHFG25fc//D3ZcHOoiJiW3lHNTb
qkIA3Di1ibK1luR39DxV5tAlhRiTD5W46iVDjcWFe+lnf63MXsQB2/W0F8Qn
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
+HfGfwHt8dT34HUxYQGIdcL0c4+4SaoOoVJZh2QAujSHmquQ6OvY2Zxg/NX1
BS1uxT1JX44Fpl6Or7cEXqoJWnowsl7b4I6ojlQnQJQ2hRsx97p8f6HxudKB
YMGFgNR6nLymHLx0c2NpdKZfiLuHufksRo0Y6sqMDnqkPZ4aSa2PjmErQTvj
o+WVwi78sOE4D7UhtqMoRKrIyvUI8ReMJmiPDKGOqnpHJXIkJNU65nbLctVQ
vau8YzsiXtwyY9m9KAKMwzSTq42pejWV614X3kxFtZv5d2XZS4pP3JVdA0Jk
ee7aB5aPmbkVg65eJz4TLfLyLlt1FyDYktyHNEPcZI54GDN8eUT3JaVzz518
xy56Z6AjW4txM1PXmZGjXhd2XqRRzJ5t+mEjWw0veSGmpComeEaaHGHgNR1u
cgQTVxalFckA0qIyp90R4W2RRU23dWaPtFW6ccrURzl037euW0FptRGwxXo9
EsxEBCnPa7WsbgyQSXpB9PJpEtM7aC1vye35O5VXeq7xxuzdRtPNpiszVZTr
eW5e7NVcfjxmgm5UWHPZ4JAA4HqSWERYBhX143NOC/GKRc1G7AKIp24f3PtU
+MRQNsxYxaGHZ50bSUoUU30u79pT60GCZ4RuNAYiiOEgLcD1t/vCiaspQ1Uk
haHEoLhqzdLzgJO8zsGc5pYiKBuGhcLTNaOnbyIvGSQHmiW0OefMy/ngzZYK
XPys3I9U6tA/8JBiZ8R0qbosqHkiSbdm9K1bCPmeclM5xcZN7fGCu2YrwWGg
RnAMMnpmLovik7I/mSuJBwSTHHAUSuakeaK42RFe7HGWIIrYMVDVqgWGXvf6
TB82I+wNfYqmQrIA04YAHqo+LpYyhh87fdQSbAHl6R09wt4iErQMqA5pNPqp
K2lDAU2O1aZgW8TpHeTeQUzqMXSpQ4hTuB9oEXvBYXqvdYOXvuEZvCwvUlQO
+q0yqBe54rndePvq+0j6osxzYBCM4aNl3L0dmcMR+dRsNBn4vVPJa6RMZBdm
PKeznaULj+KZJJ4i9tot5KHsJeEWovO/PnzG6KXk+xFHjTraj8jXBcYyq9Li
WC8LPF/Tp55l7rTpy/dRNrm94NtlgF8/QQJ1O/kZNBZQMZosAvlUaVmZLoXl
8Vfuf/IVkqvLx8zaqpmcfR35mtzeEV+5ajN6zzbysBg/BJI2NfBT+SrZg5ip
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
misQnNkdNY7bHOcrIPhEyeDrqmGMzB0dMxy15rgQzRaSJkH3Zuc3FCNKNILW
IOM3ONNr/TOW1juSLMXrl+nljbHv85edGNI4eMukMW3Y1mwZZb61cCvp/kvO
coKU4PADxX9pGpL6GqjG92mRVLTD9IlaeTlhEMN4HBKmKXzvY187k8bB6elq
s2zR4M0XU5/+PXJGVs8y+6op45yV0RERHiAiq6naNwoCGm7H1y+/LG+fITan
pbEsg2hmL3341DPSWeu7veK7qnrBwCXxT/tPLJhPTCODxHLaO3T8aurOLnno
FfRv04e/+8pPH//6yDspw4e8wOLSr8TdUL6VqOAm+iRyVyByGXcVaLgfH/fV
jwqcBpNcOqfZXJjqTNRiJRS6y6q+22kliVy8wxi1qpPmKHzxSpsprmYamlYz
YsXWx6iYmugi+fgytEtnb1lNcbrCtMSoWClRdbpW/562adOmfyuuKNrHD9TN
GD19NKzO6t/shq3ZOESxaBhUHxJuzET0cG5YKUpqFv2jn4s1DlmIxBKmy5Ri
PW0Jx92l9EFA4s9at34DjdrgDNjkcHnB2ZGWGidYjKpFr/KNUdQ4QYtah8Su
njJFsSKDRmyvcbzsu6b3I70vqV1t1YcJKqHBEao8VTrhEuJjsVRCsz0kjPD4
3qa0/RmrA7mOTSYacl8v0OvLh467TEI2nqMnW0SzoNudtePB57dw+ZF0bZeh
65IVZTnxmW4VFSDO0UC4bGVFwaIXBQlpdn8a2/E9Ryp/9592/rWR4GWrzpzH
TeL023HJpLWUS/rqZ4feTo+MnLNgibNdYfHMCUFL8+Qly1Uy55ddce3NebvN
JhMxjLj5RdbSfZxef+pz3xiR97qAjaBIYHvD/K46SRtxXGndTCo22CnAlBr8
qY9ssWHELXdfsWrH44u7GY7UrNA1jy1w7o6ObRbLcNLctQ8Q5APqE2/M2SNu
GgUHQFumyNqhy3F1dmLnY3oj7BFf/1+F5YXc1zviFOTiRbsbbka1Sj0WzOaO
m21BI5HhnG33P0dnW9K5K5I5Zzms8iQzCAVrjWLGLQHjx01vvhYr0dBDJj6K
cAsp1TgeU4dkhmY48zVeXP+SDeKV43hDguxWZ6RIzW7iq/XaZgXs5guvnfPr
viMHNuTP0oRKinYvQpJfjMxVnWUpCmfVPE2RkBpxaj608TTPCihBp0/BSVpr
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
EhQg701Kg9yVdftQd+OWkqxsC+Siaf6FvZkavvR+3hqw0zphGIiAOMGNGJpp
pU2bGOZAU9Hn57WIzE8wuuzCJb/9x2AiFOiB9ZmTvDHNz9SgzTZgdzN5QyGZ
RGEU2o+aH0iPjtrjyn+BhUCVH7+x8SaaQb5xsN8+J5HxVSr7yYHbSBIZv6pE
NhWX6jHNWNNNtRYnAQ187fvLVt19404H/+GNvn7sJtEdO2zbFuSZbgfpyQYH
5Q7Ba4jMiSs2ckI4szu2eualV1NQosrSMoPueixzp0UKLKAgwN+Kyd++2Ss/
/w2aniyc9q3lTD5g4i7lycVPHncGWQm2K5DC6j5loAo1Zpu+B0wX/unFNx5x
GmgNEKbSTGYMHI5Si8TkJZOyrXRY9UiRAcDhUgBYHJgOLLwCd2wyfUvfYM8V
DOV3U3Emrzv1rhnzAAgK6ERZnDRqmbyx3KtBpd1UZ3lqUBbunLiA7dMVHjgl
U1rOZSdffCO1Z5n2x2WBhtg2I5JZOCcp71NyopReQR+g6vrvfmw7e3SsDyhb
OSWqc6qk3W36XMzYLn5In3sqLhSSPndKjv/oy//ziV/9dfwEsldIimn3z12R
2FlrAaZmeAha2fWwU947To11sXM8Y7pL2E5F5Koyh+GoX194CbFIYdWStKZW
J5uiKreook0YITVYi+hn3nTRgvtf++gnVChEzjS5WyeyG7niq6qeVlSl9Qps
p+ys3zHc/dFS5kv1s4rm6b+++18tc4I2AlLnveFzrTnLErkHKt1f/96RzEJa
qfie9WcCyi05vdsmTeOHElEcuSAbm15s9OTeFE9ZePGShji5wEgY3wXDJ6yT
9RGp+RKpwCk0Ja9ROclMywWNLzQJLJpcoSoxu5uUTfc1kZwASepNS0KsVmu1
2uo6DdCYkhK1D/PF9ZLg1vztk5+yUolhD0oEI5WGGdIDfssjCqYo7N0SQycv
28MT08tEpsVlH7zns7vgccnbw73UDi+wRz2ECPNNCjPAn7A5oj0ep98MLMvk
BgUluW10p+FrwPW2JOU61t/7yS8DGRmxwxtMvMLRrKQ16sU2slMkMZBR3Tgp
9pBMhkY2sTg6+NwhC3O36+/4rm1Wp6acNCGixsGAqGwQG2O2Gygd94XXdBYh
ft5ZV9yKfo02jTy/KGUX3PriDrv84Q+DY8/7/VEqMXFNwIT3NL77XUDD9P7V
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
qoSedrWjrsCuStZ/csysJffcsftxVxtqD/fNfdLR8aU77/ku7Ljb/vipz7DA
T/bdbuthUWry+1fHb0CcxfuVrLPc6qUnmUZS3QiLTCopl/kdXbY3hcUX0AS+
325FXDsx1bJWDqkJWsy7KLTFwhZTivdx0ahMxrX3eokCZ039VGKaH3UdKISr
YAv4OlM2hKkPd8plW5RFpYQnK/Lw72DwFknZt3WPQG/q8dlnla4pRdDxDJMF
ZCcu9DV2uMji71iKXDUZTWbGjnLV9oCBy7QQMEdg1/f++pa3svSqQb+StFdm
V1/bOxX7evGFf0/ZUWe+fPq5aNXUaPiaWQeSapy6qXLuJNfBu+k+xb9pD6Jq
BuMM/Hkk4++DL373eVAvzsN4k3KRaKJ0lkLDlBwa5zgP9iVEhXCpCgJJXsIs
ilknzlhFxi0pijj9kS9cdjVFz0EvXr2E0VbcXnfTi+5kPSnIkG5VndYhXqB6
wwS29AWq5+yQLvFm+zvhagZmqFczR2G6KM9Bplf/bN+Df/fH0WMbjZKsJSoG
MS5otOLn1OQddrBjq+0FBL7UEVySiBuHUBQ3JnX5nqc+u2NDfFhUkG2nCact
ZXbbi22iBA/f+9GfNt8SVdAoEW6ITT1v+XHn1UN+HSOTrmzslWaPs8/fZs9m
xkF2v3ViC7fcs+vB+DOqkR984DM7Ke8z45xrCUPDBpaJ9Yql71Wd7U6/YN5a
aNKm4lI1Whmqid1CYUanEjhYCbWc1tNF7vLzP03Z8OoZZ8xdeNw3r93mz7fe
BlQAZYq1ZXGQ+exQ3Wz/chBzXrUDdMSEQdp0YH+dVoJo6IPSY6KHeXIkNEl7
rtq889BRd9L+soIVGSb1VEdbiHMDpM1RcGZwDT1LRmS01SJjbCEu1ZZkr+wp
js9PePVbF4oT13qHXKJ8XskFOqRLCO+MP2RTNife7NvF0iIBIXkHe/9p7tV2
FENSBaYUwVyNIkjtV1793cZJELMI20VZG9UITzPsr2r3MUyZsNXtUctpl5ec
iaLjS39ccb3dPztt9xWJr1arWCR1JxIcCWgthusj67bZsRpdoENqd7zpnifZ
XbBMx2mzzAyHkpV++PdNNtUYgemgVJV0DxtXkrBDBF7NE929Zlh11F4w1u2Z
JN5tf3b7Pckyi/QrGYbIyB5/Hvnbe98HChWkxBsQKUscIXKQCqzq0Qq+fY3X
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
I1V5o+8ml05mdD2WqJ3h2sgKCpEnor3SrVZK91I7zuMuuP6J7Q6aeeXxF1w/
xLt+VddVRfV1UXl9NEEoKLDpcDTWyC158M6oGKW0cI7aq0esJKpHMjPaFEGj
plBSR255i16NMBFnrzZKHXp6VwFv1KOhynyzjY4c339rwOEiZ5/wjaMDsI0N
lo1meFYTMZnbamBTazMBmmvEGUvj6+L9cw6doU8Sz5g8nKvj96i6IFLMe8oN
MYKMf23OKpXwBKcRBJzLVxf1MUraiAryAoGmTf4ZsMlX2+XyMxtlhvZXbrr7
KTw+urxFtcSoONU0fNCyoA0CrJCxbI5oh3547dLsrw4rU/K6eRGdis4Z7IM1
m+Q1MFxMXGOT32MuX3rfjNPEIIliFBE3keuJ2p0GpXk9ltAdc2hUnTPyEsNb
MqcDmh57iifRCIQmrgujv6tIkgQWxru5T5lNRlWfpFjnURVWMjqAWxPnrmCx
y9N6a3Ay487UUHweyz3qmICbmOHIqpmYzxTivYVFaJqaGXeiml3UD0GCKxyv
QgetcBhLl2Ajpj+oWhuRE9D4NdT5Li2CbKyhavurU6qqIWFOmBkfnWavv0n+
VF2m59Yz3cU1ZCQ9MOu+EnZ9WyEVRdjNNpULTfRbSlufErD3qLwrclOY4Xi6
TXkOEfkhyK+wvqsgCNtJOxNTJzk2S4PH7QU3EH9eve9JC4we6NDItLqqGYoD
QdTkQNRNd9yGG3RuqWJSkTZVNURbrZXZ8YVRN1anl0wKJJHJHV+z5wnzps67
/gEhrE6W2ZOZu744JWk8k1xnfTbnbuwP4BTpImO8JEqf5RHco6aXJbT5jzF5
6oCa0xBMvBrXSZ5mOhVp1d8YPZcxfOh1NekJlHJJ82jSYrElwISoh43kV+JN
jCIBUW3JtIN9VHlnwqfq3xIpE42Ajyr0IvHp4kOSGGatBHt7pjeMuq5FbATZ
NV6NNqipOSOTAskXFQC1BegfzSAXyYbvYZgYZUvExkwCEHgAetrOHGI3aanu
clvnfvPKW+/c/dirNDM/yjY1YY+6RUhUE+ckbP5ut8UWSxtOlE4OQB05ZizL
CKzDYQrI5GBfprsuuMYBi256hD1AqG1g6VrzMFxDUh6Jc7W6YVprabZLpG4Y
9qX6Qx65PerY8ifNtzGhKqWSQvHSja6e42mqCP2XwhI9zb5nCLGqFLl1rxPm
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
1+lqHd3AmO6ChWteEDSlTWPsO9t8cTsFnBrPZShM4WNbYteMjnz1ZPNn0VHy
FuR+pa5hGraqJBwnffBu0UAqYHpbMbR+vMWZWy4/d+IClWwc1F8du8W8X5Vl
lft6PSYz/XDrw7fNATNh2oJ7ceVh3qwBc2oCTEPL7/ZEw/xqhpQBQHu//Pr3
NPW1LI5E+qvEVTAbYksAK75j9v/973//ztYnbF2O+//liPEb7frqq5Ewldj3
+vhEfVU8BKgvg1aurLfYL5feHzlh5PKzxs388sPP/wALIVsDB/cFTYaCs/Qd
+qZrb1773ubHbtFCC8RnZIHKtCHtnnaOi+b60HgGtV905vgKL46vFPxprFBb
VM3Vh+DBjPvaaXcitWM9C+ZS4af7mFXXbdFr5jZabLYnfABo4bATOzxh77H3
PPryr4cfuamapsrT6DAckQWqiinf84DVYbedhUsv8TdZVqvSahKwHTUS6UKM
/7LahaWzqpnh2m8HXz70mutmL1U6RYX7reSBGJE7lLWg+5fHX3jzN8O+tDFh
RhWou/bki2/CZYKtnKLonhG5RR7Gp5Ivxixc/SQW16Lwdfa4KfO/dv/ToffT
kkhOH0SiZ8iev3DthnG3rAi9Prf+4Y9+9OMtxgiq/m7A9AGffeyx6ASlMos6
0F9KYX0i6WaY6Zrpi59AL5lwKbbfLP1r143dd54z7iZ2v3UnLsht91KuTFlf
Qnd+863vqy9Vzerq0aIhtdB2TbtkbfeIx14IdCs3IPbBvvvuu/iuwpnKH7tu
6p574YQZ/G0WrHG1ZZwO3D+wCd88cc59qq2e97kOvdS8iIwWW5SRDkAgFLTn
56EUL9wGUL6/8ZmaYCr48hm3L7qLLddMLNQT5NOUzcsacnvhGkv40oEPPfwI
u5zbfPEUWUi7ziNgrzxCGfAmf50OquMvHdf3O275qnsYmLxOQFGLo/5p9/gs
bzd+pfLvfad23XjVlFvYQc0s4uxEGFybMnNqrTx7/G3vbXbOZoyCf+i+qf89
o8+bxIhFhPHrJCywuhsnz38Iu7p2yuxlP9vk8k08mqDoVe3ckWpGe9nPzbh2
7oOTpi16/JLZC9aYz00bMOeSibMCvVPhRl3LUIWLM0Pa9bXXv5O+UMlxi8Nw
PpF4PXgSgIzQYgY2xzm8+eab+JjChDJjgrm9RBNEyP6F6XPphVPvvuPSG9eC
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
t9fPFPaBG9wVPGz9uWv/r6ldPPYf5rEZrA==\
\>"],ExpressionUUID->"6a2b4a7c-1ad4-40de-a96f-343d7868c795"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 781},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 180, 3, 70, "Section", "ExpressionUUID" -> \
"bcd74ef6-5dae-460a-87a7-96efdedb7e1d"],
Cell[763, 27, 236, 6, 30, "Input", "ExpressionUUID" -> \
"eabedadc-81ec-4ee7-b6e5-27e19ef8a59b"],
Cell[CellGroupData[{
Cell[1024, 37, 467, 12, 30, "Input", "ExpressionUUID" -> \
"341c4819-954d-48df-b970-be86a9ad932f"],
Cell[1494, 51, 5075, 132, 30, "Output", "ExpressionUUID" -> \
"229cc0a1-0bde-4f71-9499-83774274deda"]
}, Open  ]],
Cell[6584, 186, 392, 11, 30, "Input", "ExpressionUUID" -> \
"1926a906-f30b-4c16-ba35-d4f827b603d6"],
Cell[CellGroupData[{
Cell[7001, 201, 2431, 55, 126, "Input", "ExpressionUUID" -> \
"1163c056-93ec-4582-bf58-b9951f709c6f"],
Cell[9435, 258, 363201, 8043, 286, "Output", "ExpressionUUID" -> \
"33dac846-057f-49a8-b154-2fab0bf6c6cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372673, 8306, 914, 25, 30, "Input", "ExpressionUUID" -> \
"fc2f497e-6abb-4079-bc2e-c7300566b905"],
Cell[373590, 8333, 79957, 2141, 88, "Output", "ExpressionUUID" -> \
"271888c8-ad33-40f4-bcef-da79f3c5ab95"]
}, Open  ]],
Cell[CellGroupData[{
Cell[453584, 10479, 780, 16, 30, "Input", "ExpressionUUID" -> \
"16811d93-32bd-46a2-906b-2bbcf83e906a"],
Cell[454367, 10497, 763002, 14845, 1190, 491321, 10392, "CachedBoxData", \
"BoxData", "Output", "ExpressionUUID" -> \
"84292d0f-6d8a-4e6f-9e12-e5fcd5e7677e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1217406, 25347, 900, 24, 30, "Input", "ExpressionUUID" -> \
"6cbf52f9-7360-4c49-8947-008a96247d24"],
Cell[1218309, 25373, 2780, 59, 88, "Output", "ExpressionUUID" -> \
"a0c5cee9-349a-45e0-b498-b64f61c5115e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1221126, 25437, 787, 21, 30, "Input", "ExpressionUUID" -> \
"def9438f-d20d-4fb9-9d28-a0f6d9ef28c5"],
Cell[1221916, 25460, 5468, 157, 188, "Output", "ExpressionUUID" -> \
"2e36e822-8350-484e-ba57-b50847292bae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1227421, 25622, 675, 21, 30, "Input", "ExpressionUUID" -> \
"506dc159-7508-4a9f-93c1-70320d13603b"],
Cell[1228099, 25645, 2192, 50, 243, "Output", "ExpressionUUID" -> \
"480868c7-969a-44a2-a45a-9310df49581a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1230328, 25700, 876, 24, 30, "Input", "ExpressionUUID" -> \
"789356c5-d90e-48fd-a487-ad2f8ff0b2c7"],
Cell[1231207, 25726, 2797, 59, 88, "Output", "ExpressionUUID" -> \
"f8f32fb2-cb3c-4612-9ec7-c3c972a99d65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1234041, 25790, 820, 23, 30, "Input", "ExpressionUUID" -> \
"4c8eac9a-1d7d-4049-8fd5-dfbdf3cb9481"],
Cell[1234864, 25815, 406, 6, 30, "Output", "ExpressionUUID" -> \
"3e992be8-3350-4ece-a011-0057533c7de5"]
}, Open  ]],
Cell[1235285, 25824, 874, 21, 107, "Input", "ExpressionUUID" -> \
"0a61df99-3dfb-4693-a71e-88f997b99251"],
Cell[CellGroupData[{
Cell[1236184, 25849, 249, 6, 30, "Input", "ExpressionUUID" -> \
"8cd12867-7d71-44a4-8c4b-72d586e48918"],
Cell[1236436, 25857, 396, 9, 30, "Output", "ExpressionUUID" -> \
"30c1f531-24f7-4493-9c4c-dd9856c82d1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1236869, 25871, 639, 16, 126, "Input", "ExpressionUUID" -> \
"752668b7-f1e5-41d7-8fe0-9bb586f8b9e9"],
Cell[1237511, 25889, 646, 13, 30, "Output", "ExpressionUUID" -> \
"6f97fd7a-65c1-47da-adc6-b5de401af03c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1238194, 25907, 188, 4, 30, "Input", "ExpressionUUID" -> \
"0412191b-c92c-473e-a1bf-36d802f7f00c"],
Cell[1238385, 25913, 202, 4, 30, "Output", "ExpressionUUID" -> \
"8e55161d-1135-4d2e-90fe-3e65870bf39e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1238624, 25922, 1328, 33, 202, "Input", "ExpressionUUID" -> \
"9d0931ce-1c1e-44ee-953d-560f771162b6"],
Cell[1239955, 25957, 419, 10, 47, "Message", "ExpressionUUID" -> \
"c7c37f82-2d1c-43e9-8789-2f13f2e35c51"],
Cell[1240377, 25969, 454, 11, 21, "Message", "ExpressionUUID" -> \
"117e4d4c-fef9-4dcb-8a80-aa3a807f1ffa"],
Cell[1240834, 25982, 421, 10, 47, "Message", "ExpressionUUID" -> \
"a50484cc-b542-4e77-b0e2-bc81c757fe4e"],
Cell[1241258, 25994, 454, 11, 21, "Message", "ExpressionUUID" -> \
"45ebd503-a324-426b-97bc-5b6352055aad"],
Cell[1241715, 26007, 419, 10, 47, "Message", "ExpressionUUID" -> \
"ccff8d18-82c0-4d8d-8441-00d9a5517ad7"],
Cell[1242137, 26019, 501, 11, 21, "Message", "ExpressionUUID" -> \
"4d9e0bfe-146d-41f9-bed0-95e18bda05c6"],
Cell[1242641, 26032, 456, 11, 21, "Message", "ExpressionUUID" -> \
"3cb860f1-59c0-4c27-b6c7-133ccb420648"],
Cell[1243100, 26045, 505, 11, 21, "Message", "ExpressionUUID" -> \
"6c77d463-4dcc-4e46-9f5b-0d11081d5299"],
Cell[1243608, 26058, 22802, 389, 618, "Output", "ExpressionUUID" -> \
"61bd412c-e3f4-44b2-98f2-a23714b3fb37"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1266447, 26452, 1931, 45, 69, "Input", "ExpressionUUID" -> \
"a66f0106-80de-4601-a248-bae5504dc632"],
Cell[1268381, 26499, 262819, 6045, 132, "Output", "ExpressionUUID" -> \
"aa2116a6-6700-4f5b-922e-30cc0baa6c41"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1531237, 32549, 968, 25, 30, "Input", "ExpressionUUID" -> \
"a41602df-fe95-4999-8197-04012020e6a7"],
Cell[1532208, 32576, 79829, 2141, 88, "Output", "ExpressionUUID" -> \
"227f2477-1f6a-4620-9bef-0d4e4682fa29"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1612074, 34722, 780, 16, 30, "Input", "ExpressionUUID" -> \
"074dd9f2-8fae-424f-966b-bd1efa451269"],
Cell[1612857, 34740, 586813, 11397, 976, 369691, 7839, "CachedBoxData", \
"BoxData", "Output", "ExpressionUUID" -> \
"6a2b4a7c-1ad4-40de-a96f-343d7868c795"]
}, Open  ]]
}, Open  ]]
}
]
*)

